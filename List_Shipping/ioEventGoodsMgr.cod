; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioEventGoodsMgr.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?ms_Singleton@?$Singleton@VioEventGoodsMgr@@@@1PAVioEventGoodsMgr@@A ; Singleton<ioEventGoodsMgr>::ms_Singleton
;	COMDAT ?ms_Singleton@?$Singleton@VioEventGoodsMgr@@@@1PAVioEventGoodsMgr@@A
_BSS	SEGMENT
?ms_Singleton@?$Singleton@VioEventGoodsMgr@@@@1PAVioEventGoodsMgr@@A DD 01H DUP (?) ; Singleton<ioEventGoodsMgr>::ms_Singleton
_BSS	ENDS
PUBLIC	??1ioINILoader_e@@QAE@XZ			; ioINILoader_e::~ioINILoader_e
EXTRN	__imp_??1ioINILoader@@QAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1ioINILoader_e@@QAE@XZ
_TEXT	SEGMENT
??1ioINILoader_e@@QAE@XZ PROC				; ioINILoader_e::~ioINILoader_e, COMDAT
; _this$ = ecx
  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
??1ioINILoader_e@@QAE@XZ ENDP				; ioINILoader_e::~ioINILoader_e
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SyncGoodsList@ioEventGoodsMgr@@QAEXXZ		; ioEventGoodsMgr::SyncGoodsList
EXTRN	??1SP2Packet@@UAE@XZ:PROC			; SP2Packet::~SP2Packet
EXTRN	?SendToServer@TCPNetwork@@YAXAAVSP2Packet@@@Z:PROC ; TCPNetwork::SendToServer
EXTRN	??0SP2Packet@@QAE@K@Z:PROC			; SP2Packet::SP2Packet
EXTRN	__imp_?GetLoopSec@ioFrameTimer@@QBEKXZ:PROC
EXTRN	__imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioeventgoodsmgr.cpp
xdata$x	SEGMENT
__unwindtable$?SyncGoodsList@ioEventGoodsMgr@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SyncGoodsList@ioEventGoodsMgr@@QAEXXZ$0
__ehfuncinfo$?SyncGoodsList@ioEventGoodsMgr@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SyncGoodsList@ioEventGoodsMgr@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?SyncGoodsList@ioEventGoodsMgr@@QAEXXZ
_TEXT	SEGMENT
_kPacket$ = -32808					; size = 32792
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?SyncGoodsList@ioEventGoodsMgr@@QAEXXZ PROC		; ioEventGoodsMgr::SyncGoodsList, COMDAT
; _this$ = ecx

; 57   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SyncGoodsList@ioEventGoodsMgr@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 1c 80 00 00	 mov	 eax, 32796		; 0000801cH
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	56		 push	 esi
  00026	57		 push	 edi
  00027	50		 push	 eax
  00028	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 58   : 	if( m_dwCurrentTime > 0 && FRAMEGETTIME() - m_dwCurrentTime < SYNC_TIME )

  00031	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00037	8b f1		 mov	 esi, ecx
  00039	83 7e 24 00	 cmp	 DWORD PTR [esi+36], 0
  0003d	76 14		 jbe	 SHORT $LN1@SyncGoodsL
  0003f	ff d7		 call	 edi
  00041	8b c8		 mov	 ecx, eax
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00049	2b 46 24	 sub	 eax, DWORD PTR [esi+36]
  0004c	3d e0 93 04 00	 cmp	 eax, 300000		; 000493e0H
  00051	72 41		 jb	 SHORT $LN2@SyncGoodsL
$LN1@SyncGoodsL:

; 59   : 		return;
; 60   : 
; 61   : 	// 서버로 전송
; 62   : 	SP2Packet kPacket( CTPK_EVENT_SHOP_GOODS_LIST );

  00053	68 19 02 00 00	 push	 537			; 00000219H
  00058	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$[ebp]
  0005e	e8 00 00 00 00	 call	 ??0SP2Packet@@QAE@K@Z	; SP2Packet::SP2Packet
  00063	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 63   : 	TCPNetwork::SendToServer( kPacket );

  00067	8d 85 d8 7f ff
	ff		 lea	 eax, DWORD PTR _kPacket$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?SendToServer@TCPNetwork@@YAXAAVSP2Packet@@@Z ; TCPNetwork::SendToServer
  00073	59		 pop	 ecx

; 64   : 
; 65   : 	m_dwCurrentTime = FRAMEGETTIME();

  00074	ff d7		 call	 edi
  00076	8b c8		 mov	 ecx, eax
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ

; 66   : 	m_bSyncEventShop = true;
; 67   : }

  0007e	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00082	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$[ebp]
  00088	89 46 24	 mov	 DWORD PTR [esi+36], eax
  0008b	c6 46 28 01	 mov	 BYTE PTR [esi+40], 1
  0008f	e8 00 00 00 00	 call	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
$LN2@SyncGoodsL:
  00094	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00097	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009e	59		 pop	 ecx
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a4	33 cd		 xor	 ecx, ebp
  000a6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ab	c9		 leave
  000ac	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SyncGoodsList@ioEventGoodsMgr@@QAEXXZ$0:
  00000	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
__ehhandler$?SyncGoodsList@ioEventGoodsMgr@@QAEXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a d8 7f ff
	ff		 mov	 ecx, DWORD PTR [edx-32808]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SyncGoodsList@ioEventGoodsMgr@@QAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SyncGoodsList@ioEventGoodsMgr@@QAEXXZ ENDP		; ioEventGoodsMgr::SyncGoodsList
PUBLIC	?IsSyncEventShop@ioEventGoodsMgr@@QAE_NXZ	; ioEventGoodsMgr::IsSyncEventShop
; Function compile flags: /Ogsp
;	COMDAT ?IsSyncEventShop@ioEventGoodsMgr@@QAE_NXZ
_TEXT	SEGMENT
?IsSyncEventShop@ioEventGoodsMgr@@QAE_NXZ PROC		; ioEventGoodsMgr::IsSyncEventShop, COMDAT
; _this$ = ecx

; 71   : 	return m_bSyncEventShop;

  00000	8a 41 28	 mov	 al, BYTE PTR [ecx+40]

; 72   : }

  00003	c3		 ret	 0
?IsSyncEventShop@ioEventGoodsMgr@@QAE_NXZ ENDP		; ioEventGoodsMgr::IsSyncEventShop
_TEXT	ENDS
PUBLIC	??_R0?AVioWnd@@@8				; ioWnd `RTTI Type Descriptor'
PUBLIC	??_R0?AVNewShopWnd@@@8				; NewShopWnd `RTTI Type Descriptor'
PUBLIC	?EventShopClose@ioEventGoodsMgr@@QAEXXZ		; ioEventGoodsMgr::EventShopClose
EXTRN	?GoodsSyncComplete@NewShopWnd@@QAEXW4EventShopType@@_NKHH@Z:PROC ; NewShopWnd::GoodsSyncComplete
EXTRN	__imp_?IsShow@ioWnd@@QBE_NXZ:PROC
EXTRN	__imp_?FindWnd@ioGUIManager@@QAEPAVioWnd@@K@Z:PROC
EXTRN	?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ:PROC	; ioSP2GUIManager::GetSingleton
EXTRN	___RTDynamicCast:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R0?AVioWnd@@@8
_DATA	SEGMENT
??_R0?AVioWnd@@@8 DD FLAT:??_7type_info@@6B@		; ioWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVNewShopWnd@@@8
_DATA	SEGMENT
??_R0?AVNewShopWnd@@@8 DD FLAT:??_7type_info@@6B@	; NewShopWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNewShopWnd@@', 00H
; Function compile flags: /Ogsp
_DATA	ENDS
;	COMDAT ?EventShopClose@ioEventGoodsMgr@@QAEXXZ
_TEXT	SEGMENT
?EventShopClose@ioEventGoodsMgr@@QAEXXZ PROC		; ioEventGoodsMgr::EventShopClose, COMDAT
; _this$ = ecx

; 75   : {

  00000	53		 push	 ebx
  00001	56		 push	 esi

; 76   : 	m_bEventShopOpen = false;

  00002	33 db		 xor	 ebx, ebx

; 77   : 
; 78   : 	NewShopWnd *pNewShopWnd = dynamic_cast< NewShopWnd *>( g_GUIMgr.FindWnd( NEW_SHOP_WND ) );

  00004	53		 push	 ebx
  00005	68 00 00 00 00	 push	 OFFSET ??_R0?AVNewShopWnd@@@8
  0000a	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWnd@@@8
  0000f	53		 push	 ebx
  00010	68 f8 17 00 00	 push	 6136			; 000017f8H
  00015	88 59 29	 mov	 BYTE PTR [ecx+41], bl
  00018	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  0001d	8b c8		 mov	 ecx, eax
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindWnd@ioGUIManager@@QAEPAVioWnd@@K@Z
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ___RTDynamicCast
  0002b	8b f0		 mov	 esi, eax
  0002d	83 c4 14	 add	 esp, 20			; 00000014H

; 79   : 	if( pNewShopWnd && pNewShopWnd->IsShow() )

  00030	3b f3		 cmp	 esi, ebx
  00032	74 1a		 je	 SHORT $LN1@EventShopC
  00034	8b ce		 mov	 ecx, esi
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsShow@ioWnd@@QBE_NXZ
  0003c	84 c0		 test	 al, al
  0003e	74 0e		 je	 SHORT $LN1@EventShopC

; 80   : 		pNewShopWnd->GoodsSyncComplete( EST_EVENT, true );

  00040	53		 push	 ebx
  00041	53		 push	 ebx
  00042	53		 push	 ebx
  00043	6a 01		 push	 1
  00045	6a 01		 push	 1
  00047	8b ce		 mov	 ecx, esi
  00049	e8 00 00 00 00	 call	 ?GoodsSyncComplete@NewShopWnd@@QAEXW4EventShopType@@_NKHH@Z ; NewShopWnd::GoodsSyncComplete
$LN1@EventShopC:

; 81   : }

  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	c3		 ret	 0
?EventShopClose@ioEventGoodsMgr@@QAEXXZ ENDP		; ioEventGoodsMgr::EventShopClose
_TEXT	ENDS
PUBLIC	?CloverShopClose@ioEventGoodsMgr@@QAEXXZ	; ioEventGoodsMgr::CloverShopClose
; Function compile flags: /Ogsp
;	COMDAT ?CloverShopClose@ioEventGoodsMgr@@QAEXXZ
_TEXT	SEGMENT
?CloverShopClose@ioEventGoodsMgr@@QAEXXZ PROC		; ioEventGoodsMgr::CloverShopClose, COMDAT
; _this$ = ecx

; 84   : {

  00000	53		 push	 ebx
  00001	56		 push	 esi

; 85   : 	m_bCloverShopOpen = false;

  00002	33 db		 xor	 ebx, ebx

; 86   : 
; 87   : 	NewShopWnd *pNewShopWnd = dynamic_cast< NewShopWnd *>( g_GUIMgr.FindWnd( NEW_SHOP_WND ) );

  00004	53		 push	 ebx
  00005	68 00 00 00 00	 push	 OFFSET ??_R0?AVNewShopWnd@@@8
  0000a	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWnd@@@8
  0000f	53		 push	 ebx
  00010	68 f8 17 00 00	 push	 6136			; 000017f8H
  00015	88 59 2a	 mov	 BYTE PTR [ecx+42], bl
  00018	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  0001d	8b c8		 mov	 ecx, eax
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindWnd@ioGUIManager@@QAEPAVioWnd@@K@Z
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ___RTDynamicCast
  0002b	8b f0		 mov	 esi, eax
  0002d	83 c4 14	 add	 esp, 20			; 00000014H

; 88   : 	if( pNewShopWnd && pNewShopWnd->IsShow() )

  00030	3b f3		 cmp	 esi, ebx
  00032	74 1a		 je	 SHORT $LN1@CloverShop
  00034	8b ce		 mov	 ecx, esi
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsShow@ioWnd@@QBE_NXZ
  0003c	84 c0		 test	 al, al
  0003e	74 0e		 je	 SHORT $LN1@CloverShop

; 89   : 		pNewShopWnd->GoodsSyncComplete( EST_CLOVER, true );

  00040	53		 push	 ebx
  00041	53		 push	 ebx
  00042	53		 push	 ebx
  00043	6a 01		 push	 1
  00045	6a 02		 push	 2
  00047	8b ce		 mov	 ecx, esi
  00049	e8 00 00 00 00	 call	 ?GoodsSyncComplete@NewShopWnd@@QAEXW4EventShopType@@_NKHH@Z ; NewShopWnd::GoodsSyncComplete
$LN1@CloverShop:

; 90   : }

  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	c3		 ret	 0
?CloverShopClose@ioEventGoodsMgr@@QAEXXZ ENDP		; ioEventGoodsMgr::CloverShopClose
_TEXT	ENDS
PUBLIC	?MileageShopClose@ioEventGoodsMgr@@QAEXXZ	; ioEventGoodsMgr::MileageShopClose
; Function compile flags: /Ogsp
;	COMDAT ?MileageShopClose@ioEventGoodsMgr@@QAEXXZ
_TEXT	SEGMENT
?MileageShopClose@ioEventGoodsMgr@@QAEXXZ PROC		; ioEventGoodsMgr::MileageShopClose, COMDAT
; _this$ = ecx

; 93   : {

  00000	53		 push	 ebx
  00001	56		 push	 esi

; 94   : 	m_bMileageShopOpen = false;

  00002	33 db		 xor	 ebx, ebx

; 95   : 
; 96   : 	NewShopWnd *pNewShopWnd = dynamic_cast< NewShopWnd *>( g_GUIMgr.FindWnd( NEW_SHOP_WND ) );

  00004	53		 push	 ebx
  00005	68 00 00 00 00	 push	 OFFSET ??_R0?AVNewShopWnd@@@8
  0000a	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWnd@@@8
  0000f	53		 push	 ebx
  00010	68 f8 17 00 00	 push	 6136			; 000017f8H
  00015	88 59 2b	 mov	 BYTE PTR [ecx+43], bl
  00018	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  0001d	8b c8		 mov	 ecx, eax
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindWnd@ioGUIManager@@QAEPAVioWnd@@K@Z
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ___RTDynamicCast
  0002b	8b f0		 mov	 esi, eax
  0002d	83 c4 14	 add	 esp, 20			; 00000014H

; 97   : 	if( pNewShopWnd && pNewShopWnd->IsShow() )

  00030	3b f3		 cmp	 esi, ebx
  00032	74 1a		 je	 SHORT $LN1@MileageSho
  00034	8b ce		 mov	 ecx, esi
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsShow@ioWnd@@QBE_NXZ
  0003c	84 c0		 test	 al, al
  0003e	74 0e		 je	 SHORT $LN1@MileageSho

; 98   : 		pNewShopWnd->GoodsSyncComplete( EST_MILEAGE, true );

  00040	53		 push	 ebx
  00041	53		 push	 ebx
  00042	53		 push	 ebx
  00043	6a 01		 push	 1
  00045	6a 03		 push	 3
  00047	8b ce		 mov	 ecx, esi
  00049	e8 00 00 00 00	 call	 ?GoodsSyncComplete@NewShopWnd@@QAEXW4EventShopType@@_NKHH@Z ; NewShopWnd::GoodsSyncComplete
$LN1@MileageSho:

; 99   : }

  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	c3		 ret	 0
?MileageShopClose@ioEventGoodsMgr@@QAEXXZ ENDP		; ioEventGoodsMgr::MileageShopClose
_TEXT	ENDS
PUBLIC	??0?$Singleton@VioEventGoodsMgr@@@@QAE@XZ	; Singleton<ioEventGoodsMgr>::Singleton<ioEventGoodsMgr>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
;	COMDAT ??0?$Singleton@VioEventGoodsMgr@@@@QAE@XZ
_TEXT	SEGMENT
??0?$Singleton@VioEventGoodsMgr@@@@QAE@XZ PROC		; Singleton<ioEventGoodsMgr>::Singleton<ioEventGoodsMgr>, COMDAT
; _this$ = ecx

; 27   : 	Singleton()

  00000	8b c1		 mov	 eax, ecx

; 28   : 	{
; 29   : 		assert( !ms_Singleton );
; 30   : 		int offset = (int)(T*)1 - (int)(Singleton <T>*)(T*)1;
; 31   : 		ms_Singleton = (T*)((int)this + offset);

  00002	8d 48 fc	 lea	 ecx, DWORD PTR [eax-4]
  00005	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioEventGoodsMgr@@@@1PAVioEventGoodsMgr@@A, ecx ; Singleton<ioEventGoodsMgr>::ms_Singleton

; 32   : 	}

  0000b	c3		 ret	 0
??0?$Singleton@VioEventGoodsMgr@@@@QAE@XZ ENDP		; Singleton<ioEventGoodsMgr>::Singleton<ioEventGoodsMgr>
_TEXT	ENDS
PUBLIC	??1?$Singleton@VioEventGoodsMgr@@@@QAE@XZ	; Singleton<ioEventGoodsMgr>::~Singleton<ioEventGoodsMgr>
; Function compile flags: /Ogsp
;	COMDAT ??1?$Singleton@VioEventGoodsMgr@@@@QAE@XZ
_TEXT	SEGMENT
??1?$Singleton@VioEventGoodsMgr@@@@QAE@XZ PROC		; Singleton<ioEventGoodsMgr>::~Singleton<ioEventGoodsMgr>, COMDAT
; _this$ = ecx

; 36   : 		assert( ms_Singleton );
; 37   : 		ms_Singleton = 0;

  00000	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioEventGoodsMgr@@@@1PAVioEventGoodsMgr@@A, 0 ; Singleton<ioEventGoodsMgr>::ms_Singleton

; 38   : 	}

  00007	c3		 ret	 0
??1?$Singleton@VioEventGoodsMgr@@@@QAE@XZ ENDP		; Singleton<ioEventGoodsMgr>::~Singleton<ioEventGoodsMgr>
_TEXT	ENDS
PUBLIC	?GetSingleton@?$Singleton@VioEventGoodsMgr@@@@SAAAVioEventGoodsMgr@@XZ ; Singleton<ioEventGoodsMgr>::GetSingleton
; Function compile flags: /Ogsp
;	COMDAT ?GetSingleton@?$Singleton@VioEventGoodsMgr@@@@SAAAVioEventGoodsMgr@@XZ
_TEXT	SEGMENT
?GetSingleton@?$Singleton@VioEventGoodsMgr@@@@SAAAVioEventGoodsMgr@@XZ PROC ; Singleton<ioEventGoodsMgr>::GetSingleton, COMDAT

; 42   : 		assert( ms_Singleton );
; 43   : 		return (*ms_Singleton);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioEventGoodsMgr@@@@1PAVioEventGoodsMgr@@A ; Singleton<ioEventGoodsMgr>::ms_Singleton

; 44   : 	}

  00005	c3		 ret	 0
?GetSingleton@?$Singleton@VioEventGoodsMgr@@@@SAAAVioEventGoodsMgr@@XZ ENDP ; Singleton<ioEventGoodsMgr>::GetSingleton
_TEXT	ENDS
PUBLIC	??A?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEAAUGoodsData@ioEventGoodsMgr@@I@Z ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::operator[]
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??A?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEAAUGoodsData@ioEventGoodsMgr@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEAAUGoodsData@ioEventGoodsMgr@@I@Z PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pos$[ebp]
  00006	6b c0 30	 imul	 eax, 48			; 00000030H
  00009	03 01		 add	 eax, DWORD PTR [ecx]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEAAUGoodsData@ioEventGoodsMgr@@I@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::operator[]
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1exception@std@@UAE@XZ
  00012	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00016	74 07		 je	 SHORT $LN1@scalar
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	59		 pop	 ecx
$LN1@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IBE_NPBUGoodsDatabase@ioEventGoodsMgr@@@Z ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IBE_NPBUGoodsDatabase@ioEventGoodsMgr@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IBE_NPBUGoodsDatabase@ioEventGoodsMgr@@@Z PROC ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IBE_NPBUGoodsDatabase@ioEventGoodsMgr@@@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IBEXPAUGoodsDatabase@ioEventGoodsMgr@@0@Z ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IBEXPAUGoodsDatabase@ioEventGoodsMgr@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IBEXPAUGoodsDatabase@ioEventGoodsMgr@@0@Z PROC ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IBEXPAUGoodsDatabase@ioEventGoodsMgr@@0@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE@XZ ; std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::~_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::~_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::~_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAE@XZ ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::allocator<ioEventGoodsMgr::GoodsDatabase>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAE@XZ PROC ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::allocator<ioEventGoodsMgr::GoodsDatabase>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAE@XZ ENDP ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::allocator<ioEventGoodsMgr::GoodsDatabase>
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	return (_Where);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 58   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 62   : 	}

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IBE_NPBUGoodsData@ioEventGoodsMgr@@@Z ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IBE_NPBUGoodsData@ioEventGoodsMgr@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IBE_NPBUGoodsData@ioEventGoodsMgr@@@Z PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside@2
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside@2
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside@2
$LN3@Inside@2:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside@2:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IBE_NPBUGoodsData@ioEventGoodsMgr@@@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IBEXPAUGoodsData@ioEventGoodsMgr@@0@Z ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IBEXPAUGoodsData@ioEventGoodsMgr@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IBEXPAUGoodsData@ioEventGoodsMgr@@0@Z PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IBEXPAUGoodsData@ioEventGoodsMgr@@0@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE@XZ ; std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::~_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::~_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::~_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAE@XZ ; std::allocator<ioEventGoodsMgr::GoodsData>::allocator<ioEventGoodsMgr::GoodsData>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAE@XZ PROC ; std::allocator<ioEventGoodsMgr::GoodsData>::allocator<ioEventGoodsMgr::GoodsData>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAE@XZ ENDP ; std::allocator<ioEventGoodsMgr::GoodsData>::allocator<ioEventGoodsMgr::GoodsData>
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBEABUGoodsDatabase@ioEventGoodsMgr@@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBEABUGoodsDatabase@ioEventGoodsMgr@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBEABUGoodsDatabase@ioEventGoodsMgr@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::operator*, COMDAT
; _this$ = ecx

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 85   : 		}

  00002	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBEABUGoodsDatabase@ioEventGoodsMgr@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::operator++, COMDAT
; _this$ = ecx

; 93   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

  00002	83 00 24	 add	 DWORD PTR [eax], 36	; 00000024H

; 111  : 		return (*this);
; 112  : 		}

  00005	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::operator++
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBEABUGoodsData@ioEventGoodsMgr@@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBEABUGoodsData@ioEventGoodsMgr@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBEABUGoodsData@ioEventGoodsMgr@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator*, COMDAT
; _this$ = ecx

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 85   : 		}

  00002	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBEABUGoodsData@ioEventGoodsMgr@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator*
_TEXT	ENDS
PUBLIC	?capacity@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QBEIXZ ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::capacity
; Function compile flags: /Ogsp
;	COMDAT ?capacity@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QBEIXZ PROC ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 24		 push	 36			; 00000024H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 778  : 		}

  0000b	c3		 ret	 0
?capacity@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::capacity
_TEXT	ENDS
PUBLIC	?size@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QBEIXZ ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::size
; Function compile flags: /Ogsp
;	COMDAT ?size@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QBEIXZ PROC ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 24		 push	 36			; 00000024H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 880  : 		}

  0000b	c3		 ret	 0
?size@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::size
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IBEXXZ ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IBEXXZ PROC ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
  0000b	cc		 int	 3
?_Xlen@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IBEXXZ ENDP ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAE@ABV01@@Z ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::allocator<ioEventGoodsMgr::GoodsDatabase>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAE@ABV01@@Z PROC ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::allocator<ioEventGoodsMgr::GoodsDatabase>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::allocator<ioEventGoodsMgr::GoodsDatabase>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@I@Z ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@I@Z PROC ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@I@Z ENDP ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::deallocate
_TEXT	ENDS
PUBLIC	?capacity@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QBEIXZ ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QBEIXZ PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 30		 push	 48			; 00000030H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 778  : 		}

  0000b	c3		 ret	 0
?capacity@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::capacity
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IBEXXZ ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Xlen
; Function compile flags: /Ogsp
;	COMDAT ?_Xlen@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IBEXXZ PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@2:
$LN3@Xlen@2:
  0000b	cc		 int	 3
?_Xlen@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IBEXXZ ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAE@ABV01@@Z ; std::allocator<ioEventGoodsMgr::GoodsData>::allocator<ioEventGoodsMgr::GoodsData>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAE@ABV01@@Z PROC ; std::allocator<ioEventGoodsMgr::GoodsData>::allocator<ioEventGoodsMgr::GoodsData>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<ioEventGoodsMgr::GoodsData>::allocator<ioEventGoodsMgr::GoodsData>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@I@Z ; std::allocator<ioEventGoodsMgr::GoodsData>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@I@Z PROC ; std::allocator<ioEventGoodsMgr::GoodsData>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@I@Z ENDP ; std::allocator<ioEventGoodsMgr::GoodsData>::deallocate
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::_Compat
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::_Compat
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator++, COMDAT
; _this$ = ecx

; 93   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

  00002	83 00 30	 add	 DWORD PTR [eax], 48	; 00000030H

; 111  : 		return (*this);
; 112  : 		}

  00005	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator++
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::_Compat
; Function compile flags: /Ogsp
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::_Compat
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QBEIXZ ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QBEIXZ PROC ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 c7 71 1c 07	 mov	 eax, 119304647		; 071c71c7H

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QBEIXZ ENDP ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QBEIXZ ; std::allocator<ioEventGoodsMgr::GoodsData>::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QBEIXZ PROC ; std::allocator<ioEventGoodsMgr::GoodsData>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 55 55 55 05	 mov	 eax, 89478485		; 05555555H

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QBEIXZ ENDP ; std::allocator<ioEventGoodsMgr::GoodsData>::max_size
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	??$addressof@$$CBUGoodsDatabase@ioEventGoodsMgr@@@std@@YAPBUGoodsDatabase@ioEventGoodsMgr@@ABU12@@Z ; std::addressof<ioEventGoodsMgr::GoodsDatabase const >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@$$CBUGoodsDatabase@ioEventGoodsMgr@@@std@@YAPBUGoodsDatabase@ioEventGoodsMgr@@ABU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUGoodsDatabase@ioEventGoodsMgr@@@std@@YAPBUGoodsDatabase@ioEventGoodsMgr@@ABU12@@Z PROC ; std::addressof<ioEventGoodsMgr::GoodsDatabase const >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@$$CBUGoodsDatabase@ioEventGoodsMgr@@@std@@YAPBUGoodsDatabase@ioEventGoodsMgr@@ABU12@@Z ENDP ; std::addressof<ioEventGoodsMgr::GoodsDatabase const >
_TEXT	ENDS
PUBLIC	??$addressof@$$CBUGoodsData@ioEventGoodsMgr@@@std@@YAPBUGoodsData@ioEventGoodsMgr@@ABU12@@Z ; std::addressof<ioEventGoodsMgr::GoodsData const >
; Function compile flags: /Ogsp
;	COMDAT ??$addressof@$$CBUGoodsData@ioEventGoodsMgr@@@std@@YAPBUGoodsData@ioEventGoodsMgr@@ABU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUGoodsData@ioEventGoodsMgr@@@std@@YAPBUGoodsData@ioEventGoodsMgr@@ABU12@@Z PROC ; std::addressof<ioEventGoodsMgr::GoodsData const >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@$$CBUGoodsData@ioEventGoodsMgr@@@std@@YAPBUGoodsData@ioEventGoodsMgr@@ABU12@@Z ENDP ; std::addressof<ioEventGoodsMgr::GoodsData const >
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@UGoodsDatabase@ioEventGoodsMgr@@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@IPAU12@@Z ; std::_Allocate<ioEventGoodsMgr::GoodsDatabase>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@UGoodsDatabase@ioEventGoodsMgr@@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@IPAU12@@Z
_TEXT	SEGMENT
$T508395 = -12						; size = 12
$T508400 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UGoodsDatabase@ioEventGoodsMgr@@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@IPAU12@@Z PROC ; std::_Allocate<ioEventGoodsMgr::GoodsDatabase>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 c7 71 1c
	07		 cmp	 ecx, 119304647		; 071c71c7H
  00015	77 0e		 ja	 SHORT $LN1@Allocate
  00017	6b c9 24	 imul	 ecx, 36			; 00000024H
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T508400[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T508400[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T508395[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T508395[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T508395[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@UGoodsDatabase@ioEventGoodsMgr@@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@IPAU12@@Z ENDP ; std::_Allocate<ioEventGoodsMgr::GoodsDatabase>
_TEXT	ENDS
PUBLIC	??$_Allocate@UGoodsData@ioEventGoodsMgr@@@std@@YAPAUGoodsData@ioEventGoodsMgr@@IPAU12@@Z ; std::_Allocate<ioEventGoodsMgr::GoodsData>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@UGoodsData@ioEventGoodsMgr@@@std@@YAPAUGoodsData@ioEventGoodsMgr@@IPAU12@@Z
_TEXT	SEGMENT
$T508405 = -12						; size = 12
$T508409 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UGoodsData@ioEventGoodsMgr@@@std@@YAPAUGoodsData@ioEventGoodsMgr@@IPAU12@@Z PROC ; std::_Allocate<ioEventGoodsMgr::GoodsData>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate@2

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 55 55 55
	05		 cmp	 ecx, 89478485		; 05555555H
  00015	77 0e		 ja	 SHORT $LN1@Allocate@2
  00017	6b c9 30	 imul	 ecx, 48			; 00000030H
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T508409[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T508409[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T508405[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T508405[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T508405[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate@2:
??$_Allocate@UGoodsData@ioEventGoodsMgr@@@std@@YAPAUGoodsData@ioEventGoodsMgr@@IPAU12@@Z ENDP ; std::_Allocate<ioEventGoodsMgr::GoodsData>
_TEXT	ENDS
PUBLIC	??$forward@AAUGoodsDatabase@ioEventGoodsMgr@@@std@@YAAAUGoodsDatabase@ioEventGoodsMgr@@AAU12@@Z ; std::forward<ioEventGoodsMgr::GoodsDatabase &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAUGoodsDatabase@ioEventGoodsMgr@@@std@@YAAAUGoodsDatabase@ioEventGoodsMgr@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUGoodsDatabase@ioEventGoodsMgr@@@std@@YAAAUGoodsDatabase@ioEventGoodsMgr@@AAU12@@Z PROC ; std::forward<ioEventGoodsMgr::GoodsDatabase &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAUGoodsDatabase@ioEventGoodsMgr@@@std@@YAAAUGoodsDatabase@ioEventGoodsMgr@@AAU12@@Z ENDP ; std::forward<ioEventGoodsMgr::GoodsDatabase &>
_TEXT	ENDS
PUBLIC	??$construct@AAUGoodsDatabase@ioEventGoodsMgr@@@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@AAU23@@Z ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::construct<ioEventGoodsMgr::GoodsDatabase &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAUGoodsDatabase@ioEventGoodsMgr@@@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@AAU23@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUGoodsDatabase@ioEventGoodsMgr@@@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@AAU23@@Z PROC ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::construct<ioEventGoodsMgr::GoodsDatabase &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN3@construct
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	6a 09		 push	 9
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN3@construct:
  00015	5f		 pop	 edi

; 209  : 		}

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
??$construct@AAUGoodsDatabase@ioEventGoodsMgr@@@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@AAU23@@Z ENDP ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::construct<ioEventGoodsMgr::GoodsDatabase &>
_TEXT	ENDS
PUBLIC	??$forward@ABUGoodsDatabase@ioEventGoodsMgr@@@std@@YAABUGoodsDatabase@ioEventGoodsMgr@@ABU12@@Z ; std::forward<ioEventGoodsMgr::GoodsDatabase const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABUGoodsDatabase@ioEventGoodsMgr@@@std@@YAABUGoodsDatabase@ioEventGoodsMgr@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUGoodsDatabase@ioEventGoodsMgr@@@std@@YAABUGoodsDatabase@ioEventGoodsMgr@@ABU12@@Z PROC ; std::forward<ioEventGoodsMgr::GoodsDatabase const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABUGoodsDatabase@ioEventGoodsMgr@@@std@@YAABUGoodsDatabase@ioEventGoodsMgr@@ABU12@@Z ENDP ; std::forward<ioEventGoodsMgr::GoodsDatabase const &>
_TEXT	ENDS
PUBLIC	??$forward@AAUGoodsData@ioEventGoodsMgr@@@std@@YAAAUGoodsData@ioEventGoodsMgr@@AAU12@@Z ; std::forward<ioEventGoodsMgr::GoodsData &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@AAUGoodsData@ioEventGoodsMgr@@@std@@YAAAUGoodsData@ioEventGoodsMgr@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUGoodsData@ioEventGoodsMgr@@@std@@YAAAUGoodsData@ioEventGoodsMgr@@AAU12@@Z PROC ; std::forward<ioEventGoodsMgr::GoodsData &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAUGoodsData@ioEventGoodsMgr@@@std@@YAAAUGoodsData@ioEventGoodsMgr@@AAU12@@Z ENDP ; std::forward<ioEventGoodsMgr::GoodsData &>
_TEXT	ENDS
PUBLIC	??$construct@AAUGoodsData@ioEventGoodsMgr@@@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@AAU23@@Z ; std::allocator<ioEventGoodsMgr::GoodsData>::construct<ioEventGoodsMgr::GoodsData &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAUGoodsData@ioEventGoodsMgr@@@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@AAU23@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUGoodsData@ioEventGoodsMgr@@@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@AAU23@@Z PROC ; std::allocator<ioEventGoodsMgr::GoodsData>::construct<ioEventGoodsMgr::GoodsData &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN3@construct@2
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	6a 0c		 push	 12			; 0000000cH
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN3@construct@2:
  00015	5f		 pop	 edi

; 209  : 		}

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
??$construct@AAUGoodsData@ioEventGoodsMgr@@@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@AAU23@@Z ENDP ; std::allocator<ioEventGoodsMgr::GoodsData>::construct<ioEventGoodsMgr::GoodsData &>
_TEXT	ENDS
PUBLIC	??$forward@ABUGoodsData@ioEventGoodsMgr@@@std@@YAABUGoodsData@ioEventGoodsMgr@@ABU12@@Z ; std::forward<ioEventGoodsMgr::GoodsData const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABUGoodsData@ioEventGoodsMgr@@@std@@YAABUGoodsData@ioEventGoodsMgr@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUGoodsData@ioEventGoodsMgr@@@std@@YAABUGoodsData@ioEventGoodsMgr@@ABU12@@Z PROC ; std::forward<ioEventGoodsMgr::GoodsData const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABUGoodsData@ioEventGoodsMgr@@@std@@YAABUGoodsData@ioEventGoodsMgr@@ABU12@@Z ENDP ; std::forward<ioEventGoodsMgr::GoodsData const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@UGoodsData@ioEventGoodsMgr@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGoodsData@ioEventGoodsMgr@@0@Z ; std::_Ptr_cat<ioEventGoodsMgr::GoodsData,ioEventGoodsMgr::GoodsData>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@UGoodsData@ioEventGoodsMgr@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGoodsData@ioEventGoodsMgr@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UGoodsData@ioEventGoodsMgr@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGoodsData@ioEventGoodsMgr@@0@Z PROC ; std::_Ptr_cat<ioEventGoodsMgr::GoodsData,ioEventGoodsMgr::GoodsData>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@UGoodsData@ioEventGoodsMgr@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGoodsData@ioEventGoodsMgr@@0@Z ENDP ; std::_Ptr_cat<ioEventGoodsMgr::GoodsData,ioEventGoodsMgr::GoodsData>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@UGoodsDatabase@ioEventGoodsMgr@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGoodsDatabase@ioEventGoodsMgr@@0@Z ; std::_Ptr_cat<ioEventGoodsMgr::GoodsDatabase,ioEventGoodsMgr::GoodsDatabase>
; Function compile flags: /Ogsp
;	COMDAT ??$_Ptr_cat@UGoodsDatabase@ioEventGoodsMgr@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGoodsDatabase@ioEventGoodsMgr@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UGoodsDatabase@ioEventGoodsMgr@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGoodsDatabase@ioEventGoodsMgr@@0@Z PROC ; std::_Ptr_cat<ioEventGoodsMgr::GoodsDatabase,ioEventGoodsMgr::GoodsDatabase>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@UGoodsDatabase@ioEventGoodsMgr@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGoodsDatabase@ioEventGoodsMgr@@0@Z ENDP ; std::_Ptr_cat<ioEventGoodsMgr::GoodsDatabase,ioEventGoodsMgr::GoodsDatabase>
_TEXT	ENDS
PUBLIC	??$_Construct@UGoodsDatabase@ioEventGoodsMgr@@ABU12@@std@@YAXPAUGoodsDatabase@ioEventGoodsMgr@@ABU12@@Z ; std::_Construct<ioEventGoodsMgr::GoodsDatabase,ioEventGoodsMgr::GoodsDatabase const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Construct@UGoodsDatabase@ioEventGoodsMgr@@ABU12@@std@@YAXPAUGoodsDatabase@ioEventGoodsMgr@@ABU12@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UGoodsDatabase@ioEventGoodsMgr@@ABU12@@std@@YAXPAUGoodsDatabase@ioEventGoodsMgr@@ABU12@@Z PROC ; std::_Construct<ioEventGoodsMgr::GoodsDatabase,ioEventGoodsMgr::GoodsDatabase const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN3@Construct
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	6a 09		 push	 9
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN3@Construct:
  00015	5f		 pop	 edi

; 49   : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Construct@UGoodsDatabase@ioEventGoodsMgr@@ABU12@@std@@YAXPAUGoodsDatabase@ioEventGoodsMgr@@ABU12@@Z ENDP ; std::_Construct<ioEventGoodsMgr::GoodsDatabase,ioEventGoodsMgr::GoodsDatabase const &>
_TEXT	ENDS
PUBLIC	??$_Construct@UGoodsData@ioEventGoodsMgr@@ABU12@@std@@YAXPAUGoodsData@ioEventGoodsMgr@@ABU12@@Z ; std::_Construct<ioEventGoodsMgr::GoodsData,ioEventGoodsMgr::GoodsData const &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Construct@UGoodsData@ioEventGoodsMgr@@ABU12@@std@@YAXPAUGoodsData@ioEventGoodsMgr@@ABU12@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UGoodsData@ioEventGoodsMgr@@ABU12@@std@@YAXPAUGoodsData@ioEventGoodsMgr@@ABU12@@Z PROC ; std::_Construct<ioEventGoodsMgr::GoodsData,ioEventGoodsMgr::GoodsData const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN3@Construct@2
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	6a 0c		 push	 12			; 0000000cH
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN3@Construct@2:
  00015	5f		 pop	 edi

; 49   : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Construct@UGoodsData@ioEventGoodsMgr@@ABU12@@std@@YAXPAUGoodsData@ioEventGoodsMgr@@ABU12@@Z ENDP ; std::_Construct<ioEventGoodsMgr::GoodsData,ioEventGoodsMgr::GoodsData const &>
_TEXT	ENDS
PUBLIC	??$move@AAUGoodsData@ioEventGoodsMgr@@@std@@YA$$QAUGoodsData@ioEventGoodsMgr@@AAU12@@Z ; std::move<ioEventGoodsMgr::GoodsData &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAUGoodsData@ioEventGoodsMgr@@@std@@YA$$QAUGoodsData@ioEventGoodsMgr@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUGoodsData@ioEventGoodsMgr@@@std@@YA$$QAUGoodsData@ioEventGoodsMgr@@AAU12@@Z PROC ; std::move<ioEventGoodsMgr::GoodsData &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAUGoodsData@ioEventGoodsMgr@@@std@@YA$$QAUGoodsData@ioEventGoodsMgr@@AAU12@@Z ENDP ; std::move<ioEventGoodsMgr::GoodsData &>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAUGoodsDatabase@ioEventGoodsMgr@@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@PAU12@@Z ; std::_Val_type<ioEventGoodsMgr::GoodsDatabase *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAUGoodsDatabase@ioEventGoodsMgr@@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUGoodsDatabase@ioEventGoodsMgr@@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@PAU12@@Z PROC ; std::_Val_type<ioEventGoodsMgr::GoodsDatabase *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAUGoodsDatabase@ioEventGoodsMgr@@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@PAU12@@Z ENDP ; std::_Val_type<ioEventGoodsMgr::GoodsDatabase *>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAUGoodsData@ioEventGoodsMgr@@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@@Z ; std::_Val_type<ioEventGoodsMgr::GoodsData *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Val_type@PAUGoodsData@ioEventGoodsMgr@@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUGoodsData@ioEventGoodsMgr@@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@@Z PROC ; std::_Val_type<ioEventGoodsMgr::GoodsData *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAUGoodsData@ioEventGoodsMgr@@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@@Z ENDP ; std::_Val_type<ioEventGoodsMgr::GoodsData *>
_TEXT	ENDS
PUBLIC	??$_Destroy@UGoodsDatabase@ioEventGoodsMgr@@@std@@YAXPAUGoodsDatabase@ioEventGoodsMgr@@@Z ; std::_Destroy<ioEventGoodsMgr::GoodsDatabase>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@UGoodsDatabase@ioEventGoodsMgr@@@std@@YAXPAUGoodsDatabase@ioEventGoodsMgr@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UGoodsDatabase@ioEventGoodsMgr@@@std@@YAXPAUGoodsDatabase@ioEventGoodsMgr@@@Z PROC ; std::_Destroy<ioEventGoodsMgr::GoodsDatabase>, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@UGoodsDatabase@ioEventGoodsMgr@@@std@@YAXPAUGoodsDatabase@ioEventGoodsMgr@@@Z ENDP ; std::_Destroy<ioEventGoodsMgr::GoodsDatabase>
_TEXT	ENDS
PUBLIC	??$_Destroy@UGoodsData@ioEventGoodsMgr@@@std@@YAXPAUGoodsData@ioEventGoodsMgr@@@Z ; std::_Destroy<ioEventGoodsMgr::GoodsData>
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy@UGoodsData@ioEventGoodsMgr@@@std@@YAXPAUGoodsData@ioEventGoodsMgr@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UGoodsData@ioEventGoodsMgr@@@std@@YAXPAUGoodsData@ioEventGoodsMgr@@@Z PROC ; std::_Destroy<ioEventGoodsMgr::GoodsData>, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@UGoodsData@ioEventGoodsMgr@@@std@@YAXPAUGoodsData@ioEventGoodsMgr@@@Z ENDP ; std::_Destroy<ioEventGoodsMgr::GoodsData>
_TEXT	ENDS
PUBLIC	??$forward@UGoodsDatabase@ioEventGoodsMgr@@@std@@YA$$QAUGoodsDatabase@ioEventGoodsMgr@@AAU12@@Z ; std::forward<ioEventGoodsMgr::GoodsDatabase>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@UGoodsDatabase@ioEventGoodsMgr@@@std@@YA$$QAUGoodsDatabase@ioEventGoodsMgr@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UGoodsDatabase@ioEventGoodsMgr@@@std@@YA$$QAUGoodsDatabase@ioEventGoodsMgr@@AAU12@@Z PROC ; std::forward<ioEventGoodsMgr::GoodsDatabase>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@UGoodsDatabase@ioEventGoodsMgr@@@std@@YA$$QAUGoodsDatabase@ioEventGoodsMgr@@AAU12@@Z ENDP ; std::forward<ioEventGoodsMgr::GoodsDatabase>
_TEXT	ENDS
PUBLIC	??$forward@UGoodsData@ioEventGoodsMgr@@@std@@YA$$QAUGoodsData@ioEventGoodsMgr@@AAU12@@Z ; std::forward<ioEventGoodsMgr::GoodsData>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@UGoodsData@ioEventGoodsMgr@@@std@@YA$$QAUGoodsData@ioEventGoodsMgr@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UGoodsData@ioEventGoodsMgr@@@std@@YA$$QAUGoodsData@ioEventGoodsMgr@@AAU12@@Z PROC ; std::forward<ioEventGoodsMgr::GoodsData>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@UGoodsData@ioEventGoodsMgr@@@std@@YA$$QAUGoodsData@ioEventGoodsMgr@@AAU12@@Z ENDP ; std::forward<ioEventGoodsMgr::GoodsData>
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
PUBLIC	??0GoodsDatabase@ioEventGoodsMgr@@QAE@XZ	; ioEventGoodsMgr::GoodsDatabase::GoodsDatabase
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioeventgoodsmgr.h
;	COMDAT ??0GoodsDatabase@ioEventGoodsMgr@@QAE@XZ
_TEXT	SEGMENT
??0GoodsDatabase@ioEventGoodsMgr@@QAE@XZ PROC		; ioEventGoodsMgr::GoodsDatabase::GoodsDatabase, COMDAT
; _this$ = ecx

; 33   : 		GoodsDatabase()

  00000	8b c1		 mov	 eax, ecx

; 34   : 		{
; 35   : 			m_dwGoodsIndex = 0;

  00002	33 c9		 xor	 ecx, ecx

; 36   : 			m_iPresentType = 0;

  00004	33 d2		 xor	 edx, edx
  00006	89 08		 mov	 DWORD PTR [eax], ecx
  00008	66 89 50 04	 mov	 WORD PTR [eax+4], dx

; 37   : 			m_iPresentValue1 = m_iPresentValue2 = 0;

  0000c	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  0000f	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 38   : 			m_iPresentValue3 = m_iPresentValue4 = 0;

  00012	89 48 14	 mov	 DWORD PTR [eax+20], ecx
  00015	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 39   : 
; 40   : 			m_iManualIndex = m_iGoodsOrder = m_iGoodsMark = 0;

  00018	89 48 20	 mov	 DWORD PTR [eax+32], ecx
  0001b	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
  0001e	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 41   : 		}

  00021	c3		 ret	 0
??0GoodsDatabase@ioEventGoodsMgr@@QAE@XZ ENDP		; ioEventGoodsMgr::GoodsDatabase::GoodsDatabase
_TEXT	ENDS
PUBLIC	??0GoodsData@ioEventGoodsMgr@@QAE@XZ		; ioEventGoodsMgr::GoodsData::GoodsData
; Function compile flags: /Ogsp
;	COMDAT ??0GoodsData@ioEventGoodsMgr@@QAE@XZ
_TEXT	SEGMENT
??0GoodsData@ioEventGoodsMgr@@QAE@XZ PROC		; ioEventGoodsMgr::GoodsData::GoodsData, COMDAT
; _this$ = ecx

; 53   : 		GoodsData()

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00006	e8 00 00 00 00	 call	 ??0GoodsDatabase@ioEventGoodsMgr@@QAE@XZ ; ioEventGoodsMgr::GoodsDatabase::GoodsDatabase

; 54   : 		{
; 55   : 			m_dwNeedEtcItem = 0;

  0000b	33 c0		 xor	 eax, eax
  0000d	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 56   : 			m_iGoodsCount = m_iNeedEtcItemCount = 0;

  00010	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00013	89 06		 mov	 DWORD PTR [esi], eax

; 57   : 		}

  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	c3		 ret	 0
??0GoodsData@ioEventGoodsMgr@@QAE@XZ ENDP		; ioEventGoodsMgr::GoodsData::GoodsData
_TEXT	ENDS
PUBLIC	?size@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QBEIXZ ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QBEIXZ PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 30		 push	 48			; 00000030H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 880  : 		}

  0000b	c3		 ret	 0
?size@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::size
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	?GetSingleton@ioEventGoodsMgr@@SAAAV1@XZ	; ioEventGoodsMgr::GetSingleton
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioeventgoodsmgr.cpp
;	COMDAT ?GetSingleton@ioEventGoodsMgr@@SAAAV1@XZ
_TEXT	SEGMENT
?GetSingleton@ioEventGoodsMgr@@SAAAV1@XZ PROC		; ioEventGoodsMgr::GetSingleton, COMDAT

; 26   : 	return Singleton< ioEventGoodsMgr >::GetSingleton();

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioEventGoodsMgr@@@@1PAVioEventGoodsMgr@@A ; Singleton<ioEventGoodsMgr>::ms_Singleton

; 27   : }

  00005	c3		 ret	 0
?GetSingleton@ioEventGoodsMgr@@SAAAV1@XZ ENDP		; ioEventGoodsMgr::GetSingleton
_TEXT	ENDS
PUBLIC	?GetGoods@ioEventGoodsMgr@@QAEXHAAKAAH01AAF1111111@Z ; ioEventGoodsMgr::GetGoods
; Function compile flags: /Ogsp
;	COMDAT ?GetGoods@ioEventGoodsMgr@@QAEXHAAKAAH01AAF1111111@Z
_TEXT	SEGMENT
_iArray$ = 8						; size = 4
_rGoodsIndex$ = 12					; size = 4
_rGoodsCount$ = 16					; size = 4
_rdwNeedEtcItem$ = 20					; size = 4
_rNeedEtcItemCount$ = 24				; size = 4
_rPresentType$ = 28					; size = 4
_rPresentValue1$ = 32					; size = 4
_rPresentValue2$ = 36					; size = 4
_rPresentValue3$ = 40					; size = 4
_rPresentValue4$ = 44					; size = 4
_rManualIndex$ = 48					; size = 4
_rGoodsOrder$ = 52					; size = 4
_rGoodsMark$ = 56					; size = 4
?GetGoods@ioEventGoodsMgr@@QAEXHAAKAAH01AAF1111111@Z PROC ; ioEventGoodsMgr::GetGoods, COMDAT
; _this$ = ecx

; 172  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 173  : 	if( !COMPARE( iArray, 0, (int)m_GoodsDataList.size() ) )

  00004	8b 75 08	 mov	 esi, DWORD PTR _iArray$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	78 7b		 js	 SHORT $LN1@GetGoods
  0000b	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  0000e	2b 41 14	 sub	 eax, DWORD PTR [ecx+20]
  00011	57		 push	 edi
  00012	6a 30		 push	 48			; 00000030H
  00014	99		 cdq
  00015	5f		 pop	 edi
  00016	f7 ff		 idiv	 edi
  00018	5f		 pop	 edi
  00019	3b f0		 cmp	 esi, eax
  0001b	7d 69		 jge	 SHORT $LN1@GetGoods

; 174  : 		return;
; 175  : 
; 176  : 	GoodsData &rkData = m_GoodsDataList[iArray];
; 177  : 
; 178  : 	rGoodsIndex = rkData.m_Database.m_dwGoodsIndex;

  0001d	8b 55 0c	 mov	 edx, DWORD PTR _rGoodsIndex$[ebp]
  00020	6b f6 30	 imul	 esi, 48			; 00000030H
  00023	03 71 14	 add	 esi, DWORD PTR [ecx+20]
  00026	8b c6		 mov	 eax, esi
  00028	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0002b	89 0a		 mov	 DWORD PTR [edx], ecx

; 179  : 	rGoodsCount = rkData.m_iGoodsCount;

  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	8b 55 10	 mov	 edx, DWORD PTR _rGoodsCount$[ebp]
  00032	89 0a		 mov	 DWORD PTR [edx], ecx

; 180  : 	rdwNeedEtcItem = rkData.m_dwNeedEtcItem;

  00034	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00037	8b 55 14	 mov	 edx, DWORD PTR _rdwNeedEtcItem$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx

; 181  : 	rNeedEtcItemCount = rkData.m_iNeedEtcItemCount;

  0003c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0003f	8b 55 18	 mov	 edx, DWORD PTR _rNeedEtcItemCount$[ebp]
  00042	89 0a		 mov	 DWORD PTR [edx], ecx

; 182  : 	rPresentType = rkData.m_Database.m_iPresentType;

  00044	66 8b 48 10	 mov	 cx, WORD PTR [eax+16]
  00048	8b 55 1c	 mov	 edx, DWORD PTR _rPresentType$[ebp]
  0004b	66 89 0a	 mov	 WORD PTR [edx], cx

; 183  : 	rPresentValue1 = rkData.m_Database.m_iPresentValue1;

  0004e	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00051	8b 55 20	 mov	 edx, DWORD PTR _rPresentValue1$[ebp]
  00054	89 0a		 mov	 DWORD PTR [edx], ecx

; 184  : 	rPresentValue2 = rkData.m_Database.m_iPresentValue2;

  00056	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00059	8b 55 24	 mov	 edx, DWORD PTR _rPresentValue2$[ebp]
  0005c	89 0a		 mov	 DWORD PTR [edx], ecx

; 185  : 	rPresentValue3 = rkData.m_Database.m_iPresentValue3;

  0005e	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00061	8b 55 28	 mov	 edx, DWORD PTR _rPresentValue3$[ebp]
  00064	89 0a		 mov	 DWORD PTR [edx], ecx

; 186  : 	rPresentValue4 = rkData.m_Database.m_iPresentValue4;

  00066	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00069	8b 55 2c	 mov	 edx, DWORD PTR _rPresentValue4$[ebp]
  0006c	89 0a		 mov	 DWORD PTR [edx], ecx

; 187  : 	rManualIndex   = rkData.m_Database.m_iManualIndex;

  0006e	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00071	8b 55 30	 mov	 edx, DWORD PTR _rManualIndex$[ebp]
  00074	89 0a		 mov	 DWORD PTR [edx], ecx

; 188  : 	rGoodsOrder    = rkData.m_Database.m_iGoodsOrder;

  00076	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00079	8b 55 34	 mov	 edx, DWORD PTR _rGoodsOrder$[ebp]
  0007c	89 0a		 mov	 DWORD PTR [edx], ecx

; 189  : 	rGoodsMark     = rkData.m_Database.m_iGoodsMark;

  0007e	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  00081	8b 4d 38	 mov	 ecx, DWORD PTR _rGoodsMark$[ebp]
  00084	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@GetGoods:
  00086	5e		 pop	 esi

; 190  : }

  00087	5d		 pop	 ebp
  00088	c2 34 00	 ret	 52			; 00000034H
?GetGoods@ioEventGoodsMgr@@QAEXHAAKAAH01AAF1111111@Z ENDP ; ioEventGoodsMgr::GetGoods
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBEAAUGoodsDatabase@ioEventGoodsMgr@@XZ ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBEAAUGoodsDatabase@ioEventGoodsMgr@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBEAAUGoodsDatabase@ioEventGoodsMgr@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::operator*, COMDAT
; _this$ = ecx

; 322  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 323  : 		}

  00002	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBEAAUGoodsDatabase@ioEventGoodsMgr@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::operator++, COMDAT
; _this$ = ecx

; 331  : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 332  : 		++*(_Mybase *)this;

  00002	83 00 24	 add	 DWORD PTR [eax], 36	; 00000024H

; 333  : 		return (*this);
; 334  : 		}

  00005	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::operator++
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBEAAUGoodsData@ioEventGoodsMgr@@XZ ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBEAAUGoodsData@ioEventGoodsMgr@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBEAAUGoodsData@ioEventGoodsMgr@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator*, COMDAT
; _this$ = ecx

; 322  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 323  : 		}

  00002	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBEAAUGoodsData@ioEventGoodsMgr@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator*
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@1@@Z ; std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@1@@Z PROC ; std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@1@@Z ENDP ; std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE@V?$allocator@UGoodsData@ioEventGoodsMgr@@@1@@Z ; std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE@V?$allocator@UGoodsData@ioEventGoodsMgr@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE@V?$allocator@UGoodsData@ioEventGoodsMgr@@@1@@Z PROC ; std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE@V?$allocator@UGoodsData@ioEventGoodsMgr@@@1@@Z ENDP ; std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::operator==
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator++, COMDAT
; _this$ = ecx

; 331  : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 332  : 		++*(_Mybase *)this;

  00002	83 00 30	 add	 DWORD PTR [eax], 48	; 00000030H

; 333  : 		return (*this);
; 334  : 		}

  00005	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator++
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator==
_TEXT	ENDS
PUBLIC	?max_size@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QBEIXZ ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QBEIXZ PROC ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 c7 71 1c 07	 mov	 eax, 119304647		; 071c71c7H

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IBEII@Z ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IBEII@Z PROC ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	6a 24		 push	 36			; 00000024H
  0000a	99		 cdq
  0000b	59		 pop	 ecx
  0000c	f7 f9		 idiv	 ecx

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0000e	ba c7 71 1c 07	 mov	 edx, 119304647		; 071c71c7H
  00013	8b c8		 mov	 ecx, eax
  00015	d1 e9		 shr	 ecx, 1
  00017	2b d1		 sub	 edx, ecx
  00019	3b d0		 cmp	 edx, eax
  0001b	73 04		 jae	 SHORT $LN4@Grow_to
  0001d	33 c0		 xor	 eax, eax
  0001f	eb 02		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00021	03 c1		 add	 eax, ecx
$LN5@Grow_to:

; 1279 : 		if (_Capacity < _Count)

  00023	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00026	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?_Grow_to@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IBEII@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Grow_to
_TEXT	ENDS
PUBLIC	?max_size@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QBEIXZ ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QBEIXZ PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 55 55 55 05	 mov	 eax, 89478485		; 05555555H

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IBEII@Z ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IBEII@Z PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	6a 30		 push	 48			; 00000030H
  0000a	99		 cdq
  0000b	59		 pop	 ecx
  0000c	f7 f9		 idiv	 ecx

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0000e	ba 55 55 55 05	 mov	 edx, 89478485		; 05555555H
  00013	8b c8		 mov	 ecx, eax
  00015	d1 e9		 shr	 ecx, 1
  00017	2b d1		 sub	 edx, ecx
  00019	3b d0		 cmp	 edx, eax
  0001b	73 04		 jae	 SHORT $LN4@Grow_to@2
  0001d	33 c0		 xor	 eax, eax
  0001f	eb 02		 jmp	 SHORT $LN5@Grow_to@2
$LN4@Grow_to@2:
  00021	03 c1		 add	 eax, ecx
$LN5@Grow_to@2:

; 1279 : 		if (_Capacity < _Count)

  00023	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00026	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?_Grow_to@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IBEII@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Grow_to
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QAE@PAUGoodsDatabase@ioEventGoodsMgr@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QAE@PAUGoodsDatabase@ioEventGoodsMgr@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QAE@PAUGoodsDatabase@ioEventGoodsMgr@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QAE@PAUGoodsDatabase@ioEventGoodsMgr@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAE@PAUGoodsData@ioEventGoodsMgr@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAE@PAUGoodsData@ioEventGoodsMgr@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAE@PAUGoodsData@ioEventGoodsMgr@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAE@PAUGoodsData@ioEventGoodsMgr@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEPAUGoodsDatabase@ioEventGoodsMgr@@I@Z ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEPAUGoodsDatabase@ioEventGoodsMgr@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEPAUGoodsDatabase@ioEventGoodsMgr@@I@Z PROC ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@UGoodsDatabase@ioEventGoodsMgr@@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@IPAU12@@Z ; std::_Allocate<ioEventGoodsMgr::GoodsDatabase>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEPAUGoodsDatabase@ioEventGoodsMgr@@I@Z ENDP ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEPAUGoodsData@ioEventGoodsMgr@@I@Z ; std::allocator<ioEventGoodsMgr::GoodsData>::allocate
; Function compile flags: /Ogsp
;	COMDAT ?allocate@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEPAUGoodsData@ioEventGoodsMgr@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEPAUGoodsData@ioEventGoodsMgr@@I@Z PROC ; std::allocator<ioEventGoodsMgr::GoodsData>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@UGoodsData@ioEventGoodsMgr@@@std@@YAPAUGoodsData@ioEventGoodsMgr@@IPAU12@@Z ; std::_Allocate<ioEventGoodsMgr::GoodsData>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEPAUGoodsData@ioEventGoodsMgr@@I@Z ENDP ; std::allocator<ioEventGoodsMgr::GoodsData>::allocate
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$SetTitle_e@$06@ioINILoader@@QAEXAAY06$$CBD@Z	; ioINILoader::SetTitle_e<7>
EXTRN	__imp_?SetTitle@ioINILoader@@QAEXPBD@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$SetTitle_e@$06@ioINILoader@@QAEXAAY06$$CBD@Z
_TEXT	SEGMENT
__t$ = -16						; size = 7
__$ArrayPad$ = -4					; size = 4
_t$ = 8							; size = 4
??$SetTitle_e@$06@ioINILoader@@QAEXAAY06$$CBD@Z PROC	; ioINILoader::SetTitle_e<7>, COMDAT
; _this$ = ecx

; 188  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]

; 189  : 		_ENCSTR(t, _t);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 c0 00 00
	00		 je	 $LN96@SetTitle_e
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 f0	 mov	 BYTE PTR __t$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 a9 00 00
	00		 je	 $LN95@SetTitle_e
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 f1	 mov	 BYTE PTR __t$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 92 00 00
	00		 je	 $LN94@SetTitle_e
  00042	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00045	88 55 f2	 mov	 BYTE PTR __t$[ebp+2], dl
  00048	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004b	84 d2		 test	 dl, dl
  0004d	74 7f		 je	 SHORT $LN93@SetTitle_e
  0004f	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00052	88 55 f3	 mov	 BYTE PTR __t$[ebp+3], dl
  00055	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00058	84 d2		 test	 dl, dl
  0005a	74 6c		 je	 SHORT $LN92@SetTitle_e
  0005c	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0005f	88 55 f4	 mov	 BYTE PTR __t$[ebp+4], dl
  00062	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00065	84 d2		 test	 dl, dl
  00067	74 59		 je	 SHORT $LN91@SetTitle_e
  00069	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0006c	80 78 06 00	 cmp	 BYTE PTR [eax+6], 0
  00070	88 55 f5	 mov	 BYTE PTR __t$[ebp+5], dl
  00073	74 6f		 je	 SHORT $LN1@SetTitle_e
  00075	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00078	84 d2		 test	 dl, dl
  0007a	74 40		 je	 SHORT $LN89@SetTitle_e
  0007c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0007f	88 55 f7	 mov	 BYTE PTR __t$[ebp+7], dl
  00082	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  00085	84 d2		 test	 dl, dl
  00087	74 2d		 je	 SHORT $LN88@SetTitle_e
  00089	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0008c	88 55 f8	 mov	 BYTE PTR __t$[ebp+8], dl
  0008f	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  00092	84 d2		 test	 dl, dl
  00094	74 1a		 je	 SHORT $LN87@SetTitle_e
  00096	8a 40 0a	 mov	 al, BYTE PTR [eax+10]
  00099	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0009c	88 55 f9	 mov	 BYTE PTR __t$[ebp+9], dl
  0009f	84 c0		 test	 al, al
  000a1	74 07		 je	 SHORT $LN86@SetTitle_e
  000a3	34 eb		 xor	 al, -21			; ffffffebH
  000a5	88 45 fa	 mov	 BYTE PTR __t$[ebp+10], al
  000a8	eb 3a		 jmp	 SHORT $LN1@SetTitle_e
$LN86@SetTitle_e:
  000aa	c6 45 fa eb	 mov	 BYTE PTR __t$[ebp+10], -21 ; ffffffebH
  000ae	eb 34		 jmp	 SHORT $LN1@SetTitle_e
$LN87@SetTitle_e:
  000b0	c6 45 f9 ec	 mov	 BYTE PTR __t$[ebp+9], -20 ; ffffffecH
  000b4	eb 2e		 jmp	 SHORT $LN1@SetTitle_e
$LN88@SetTitle_e:
  000b6	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  000ba	eb 28		 jmp	 SHORT $LN1@SetTitle_e
$LN89@SetTitle_e:
  000bc	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  000c0	eb 22		 jmp	 SHORT $LN1@SetTitle_e
$LN91@SetTitle_e:
  000c2	c6 45 f5 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  000c6	eb 1c		 jmp	 SHORT $LN1@SetTitle_e
$LN92@SetTitle_e:
  000c8	c6 45 f4 ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  000cc	eb 16		 jmp	 SHORT $LN1@SetTitle_e
$LN93@SetTitle_e:
  000ce	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  000d2	eb 10		 jmp	 SHORT $LN1@SetTitle_e
$LN94@SetTitle_e:
  000d4	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  000d8	eb 0a		 jmp	 SHORT $LN1@SetTitle_e
$LN95@SetTitle_e:
  000da	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  000de	eb 04		 jmp	 SHORT $LN1@SetTitle_e
$LN96@SetTitle_e:
  000e0	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@SetTitle_e:
  000e4	81 75 f0 ed ec
	eb ea		 xor	 DWORD PTR __t$[ebp], -353637139 ; eaebecedH
  000eb	6a 04		 push	 4
  000ed	c6 45 f6 00	 mov	 BYTE PTR __t$[ebp+6], 0
  000f1	58		 pop	 eax
$LL101@SetTitle_e:
  000f2	8b c8		 mov	 ecx, eax
  000f4	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  000fa	79 05		 jns	 SHORT $LN111@SetTitle_e
  000fc	49		 dec	 ecx
  000fd	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00100	41		 inc	 ecx
$LN111@SetTitle_e:
  00101	b2 ed		 mov	 dl, -19			; ffffffedH
  00103	2a d1		 sub	 dl, cl
  00105	30 54 05 f0	 xor	 BYTE PTR __t$[ebp+eax], dl
  00109	40		 inc	 eax
  0010a	83 f8 06	 cmp	 eax, 6
  0010d	7c e3		 jl	 SHORT $LL101@SetTitle_e

; 190  : 		SetTitle(_t);

  0010f	8d 45 f0	 lea	 eax, DWORD PTR __t$[ebp]
  00112	50		 push	 eax
  00113	8b ce		 mov	 ecx, esi
  00115	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 191  : 	}

  0011b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0011e	33 cd		 xor	 ecx, ebp
  00120	5e		 pop	 esi
  00121	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00126	c9		 leave
  00127	c2 04 00	 ret	 4
??$SetTitle_e@$06@ioINILoader@@QAEXAAY06$$CBD@Z ENDP	; ioINILoader::SetTitle_e<7>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$09@ioINILoader@@QAEHAAY09$$CBDH@Z	; ioINILoader::LoadInt_e<10>
EXTRN	__imp_?LoadInt@ioINILoader@@QAEHPBDH@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$09@ioINILoader@@QAEHAAY09$$CBDH@Z
_TEXT	SEGMENT
__k$ = -20						; size = 10
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$09@ioINILoader@@QAEHAAY09$$CBDH@Z PROC	; ioINILoader::LoadInt_e<10>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	84 d2		 test	 dl, dl
  00017	0f 84 0d 01 00
	00		 je	 $LN96@LoadInt_e
  0001d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00020	88 55 ec	 mov	 BYTE PTR __k$[ebp], dl
  00023	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00026	84 d2		 test	 dl, dl
  00028	0f 84 f6 00 00
	00		 je	 $LN95@LoadInt_e
  0002e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00031	88 55 ed	 mov	 BYTE PTR __k$[ebp+1], dl
  00034	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  00037	84 d2		 test	 dl, dl
  00039	0f 84 df 00 00
	00		 je	 $LN94@LoadInt_e
  0003f	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00042	88 55 ee	 mov	 BYTE PTR __k$[ebp+2], dl
  00045	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  00048	84 d2		 test	 dl, dl
  0004a	0f 84 c8 00 00
	00		 je	 $LN93@LoadInt_e
  00050	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00053	88 55 ef	 mov	 BYTE PTR __k$[ebp+3], dl
  00056	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00059	84 d2		 test	 dl, dl
  0005b	0f 84 b1 00 00
	00		 je	 $LN92@LoadInt_e
  00061	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00064	88 55 f0	 mov	 BYTE PTR __k$[ebp+4], dl
  00067	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006a	84 d2		 test	 dl, dl
  0006c	0f 84 9a 00 00
	00		 je	 $LN91@LoadInt_e
  00072	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00075	88 55 f1	 mov	 BYTE PTR __k$[ebp+5], dl
  00078	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007b	84 d2		 test	 dl, dl
  0007d	0f 84 83 00 00
	00		 je	 $LN90@LoadInt_e
  00083	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00086	88 55 f2	 mov	 BYTE PTR __k$[ebp+6], dl
  00089	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008c	84 d2		 test	 dl, dl
  0008e	74 70		 je	 SHORT $LN89@LoadInt_e
  00090	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00093	88 55 f3	 mov	 BYTE PTR __k$[ebp+7], dl
  00096	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  00099	84 d2		 test	 dl, dl
  0009b	74 5d		 je	 SHORT $LN88@LoadInt_e
  0009d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a0	80 78 09 00	 cmp	 BYTE PTR [eax+9], 0
  000a4	88 55 f4	 mov	 BYTE PTR __k$[ebp+8], dl
  000a7	0f 84 81 00 00
	00		 je	 $LN1@LoadInt_e
  000ad	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000b0	84 d2		 test	 dl, dl
  000b2	74 40		 je	 SHORT $LN86@LoadInt_e
  000b4	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000b7	88 55 f6	 mov	 BYTE PTR __k$[ebp+10], dl
  000ba	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000bd	84 d2		 test	 dl, dl
  000bf	74 2d		 je	 SHORT $LN85@LoadInt_e
  000c1	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000c4	88 55 f7	 mov	 BYTE PTR __k$[ebp+11], dl
  000c7	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000ca	84 d2		 test	 dl, dl
  000cc	74 1a		 je	 SHORT $LN84@LoadInt_e
  000ce	8a 40 0d	 mov	 al, BYTE PTR [eax+13]
  000d1	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000d4	88 55 f8	 mov	 BYTE PTR __k$[ebp+12], dl
  000d7	84 c0		 test	 al, al
  000d9	74 07		 je	 SHORT $LN83@LoadInt_e
  000db	34 ec		 xor	 al, -20			; ffffffecH
  000dd	88 45 f9	 mov	 BYTE PTR __k$[ebp+13], al
  000e0	eb 4c		 jmp	 SHORT $LN1@LoadInt_e
$LN83@LoadInt_e:
  000e2	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  000e6	eb 46		 jmp	 SHORT $LN1@LoadInt_e
$LN84@LoadInt_e:
  000e8	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  000ec	eb 40		 jmp	 SHORT $LN1@LoadInt_e
$LN85@LoadInt_e:
  000ee	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  000f2	eb 3a		 jmp	 SHORT $LN1@LoadInt_e
$LN86@LoadInt_e:
  000f4	c6 45 f6 eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  000f8	eb 34		 jmp	 SHORT $LN1@LoadInt_e
$LN88@LoadInt_e:
  000fa	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  000fe	eb 2e		 jmp	 SHORT $LN1@LoadInt_e
$LN89@LoadInt_e:
  00100	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  00104	eb 28		 jmp	 SHORT $LN1@LoadInt_e
$LN90@LoadInt_e:
  00106	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  0010a	eb 22		 jmp	 SHORT $LN1@LoadInt_e
$LN91@LoadInt_e:
  0010c	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  00110	eb 1c		 jmp	 SHORT $LN1@LoadInt_e
$LN92@LoadInt_e:
  00112	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00116	eb 16		 jmp	 SHORT $LN1@LoadInt_e
$LN93@LoadInt_e:
  00118	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  0011c	eb 10		 jmp	 SHORT $LN1@LoadInt_e
$LN94@LoadInt_e:
  0011e	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  00122	eb 0a		 jmp	 SHORT $LN1@LoadInt_e
$LN95@LoadInt_e:
  00124	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00128	eb 04		 jmp	 SHORT $LN1@LoadInt_e
$LN96@LoadInt_e:
  0012a	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e:
  0012e	6a 02		 push	 2
  00130	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  00133	c6 45 f5 00	 mov	 BYTE PTR __k$[ebp+9], 0
  00137	5a		 pop	 edx
$LL104@LoadInt_e:
  00138	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0013e	83 c0 04	 add	 eax, 4
  00141	4a		 dec	 edx
  00142	75 f4		 jne	 SHORT $LL104@LoadInt_e

; 120  : 		return LoadInt(_k, i);

  00144	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  00147	80 75 f4 ed	 xor	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  0014b	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  0014e	50		 push	 eax
  0014f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  00155	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00158	33 cd		 xor	 ecx, ebp
  0015a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0015f	c9		 leave
  00160	c2 08 00	 ret	 8
??$LoadInt_e@$09@ioINILoader@@QAEHAAY09$$CBDH@Z ENDP	; ioINILoader::LoadInt_e<10>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$0M@@ioINILoader@@QAEHAAY0M@$$CBDH@Z ; ioINILoader::LoadInt_e<12>
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$0M@@ioINILoader@@QAEHAAY0M@$$CBDH@Z
_TEXT	SEGMENT
__k$ = -20						; size = 12
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$0M@@ioINILoader@@QAEHAAY0M@$$CBDH@Z PROC	; ioINILoader::LoadInt_e<12>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 32 01 00
	00		 je	 $LN96@LoadInt_e@2
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 ec	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 1b 01 00
	00		 je	 $LN95@LoadInt_e@2
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 ed	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 04 01 00
	00		 je	 $LN94@LoadInt_e@2
  00042	b1 eb		 mov	 cl, -21			; ffffffebH
  00044	32 d1		 xor	 dl, cl
  00046	88 55 ee	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 ec 00 00
	00		 je	 $LN93@LoadInt_e@2
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 ef	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 d5 00 00
	00		 je	 $LN92@LoadInt_e@2
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 f0	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 be 00 00
	00		 je	 $LN91@LoadInt_e@2
  00076	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00079	88 55 f1	 mov	 BYTE PTR __k$[ebp+5], dl
  0007c	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007f	84 d2		 test	 dl, dl
  00081	0f 84 a8 00 00
	00		 je	 $LN90@LoadInt_e@2
  00087	32 d1		 xor	 dl, cl
  00089	88 55 f2	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 92 00 00
	00		 je	 $LN89@LoadInt_e@2
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 f3	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	74 7f		 je	 SHORT $LN88@LoadInt_e@2
  000a4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a7	88 55 f4	 mov	 BYTE PTR __k$[ebp+8], dl
  000aa	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000ad	84 d2		 test	 dl, dl
  000af	74 6c		 je	 SHORT $LN87@LoadInt_e@2
  000b1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b4	88 55 f5	 mov	 BYTE PTR __k$[ebp+9], dl
  000b7	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000ba	84 d2		 test	 dl, dl
  000bc	74 5a		 je	 SHORT $LN86@LoadInt_e@2
  000be	32 d1		 xor	 dl, cl
  000c0	80 78 0b 00	 cmp	 BYTE PTR [eax+11], 0
  000c4	88 55 f6	 mov	 BYTE PTR __k$[ebp+10], dl
  000c7	0f 84 89 00 00
	00		 je	 $LN1@LoadInt_e@2
  000cd	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000d0	84 d2		 test	 dl, dl
  000d2	74 3e		 je	 SHORT $LN84@LoadInt_e@2
  000d4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000d7	88 55 f8	 mov	 BYTE PTR __k$[ebp+12], dl
  000da	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000dd	84 d2		 test	 dl, dl
  000df	74 2b		 je	 SHORT $LN83@LoadInt_e@2
  000e1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000e4	88 55 f9	 mov	 BYTE PTR __k$[ebp+13], dl
  000e7	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000ea	84 d2		 test	 dl, dl
  000ec	74 19		 je	 SHORT $LN82@LoadInt_e@2
  000ee	8a 40 0f	 mov	 al, BYTE PTR [eax+15]
  000f1	32 d1		 xor	 dl, cl
  000f3	88 55 fa	 mov	 BYTE PTR __k$[ebp+14], dl
  000f6	84 c0		 test	 al, al
  000f8	74 07		 je	 SHORT $LN81@LoadInt_e@2
  000fa	34 ea		 xor	 al, -22			; ffffffeaH
  000fc	88 45 fb	 mov	 BYTE PTR __k$[ebp+15], al
  000ff	eb 55		 jmp	 SHORT $LN1@LoadInt_e@2
$LN81@LoadInt_e@2:
  00101	c6 45 fb ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00105	eb 4f		 jmp	 SHORT $LN1@LoadInt_e@2
$LN82@LoadInt_e@2:
  00107	88 4d fa	 mov	 BYTE PTR __k$[ebp+14], cl
  0010a	eb 4a		 jmp	 SHORT $LN1@LoadInt_e@2
$LN83@LoadInt_e@2:
  0010c	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  00110	eb 44		 jmp	 SHORT $LN1@LoadInt_e@2
$LN84@LoadInt_e@2:
  00112	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00116	eb 3e		 jmp	 SHORT $LN1@LoadInt_e@2
$LN86@LoadInt_e@2:
  00118	88 4d f6	 mov	 BYTE PTR __k$[ebp+10], cl
  0011b	eb 39		 jmp	 SHORT $LN1@LoadInt_e@2
$LN87@LoadInt_e@2:
  0011d	c6 45 f5 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  00121	eb 33		 jmp	 SHORT $LN1@LoadInt_e@2
$LN88@LoadInt_e@2:
  00123	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00127	eb 2d		 jmp	 SHORT $LN1@LoadInt_e@2
$LN89@LoadInt_e@2:
  00129	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  0012d	eb 27		 jmp	 SHORT $LN1@LoadInt_e@2
$LN90@LoadInt_e@2:
  0012f	88 4d f2	 mov	 BYTE PTR __k$[ebp+6], cl
  00132	eb 22		 jmp	 SHORT $LN1@LoadInt_e@2
$LN91@LoadInt_e@2:
  00134	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  00138	eb 1c		 jmp	 SHORT $LN1@LoadInt_e@2
$LN92@LoadInt_e@2:
  0013a	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  0013e	eb 16		 jmp	 SHORT $LN1@LoadInt_e@2
$LN93@LoadInt_e@2:
  00140	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00144	eb 10		 jmp	 SHORT $LN1@LoadInt_e@2
$LN94@LoadInt_e@2:
  00146	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0014a	eb 0a		 jmp	 SHORT $LN1@LoadInt_e@2
$LN95@LoadInt_e@2:
  0014c	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00150	eb 04		 jmp	 SHORT $LN1@LoadInt_e@2
$LN96@LoadInt_e@2:
  00152	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e@2:
  00156	6a 02		 push	 2
  00158	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  0015b	c6 45 f7 00	 mov	 BYTE PTR __k$[ebp+11], 0
  0015f	5a		 pop	 edx
$LL104@LoadInt_e@2:
  00160	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00166	83 c0 04	 add	 eax, 4
  00169	4a		 dec	 edx
  0016a	75 f4		 jne	 SHORT $LL104@LoadInt_e@2
  0016c	6a 08		 push	 8
  0016e	58		 pop	 eax
$LL101@LoadInt_e@2:
  0016f	8b c8		 mov	 ecx, eax
  00171	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00177	79 05		 jns	 SHORT $LN111@LoadInt_e@2
  00179	49		 dec	 ecx
  0017a	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0017d	41		 inc	 ecx
$LN111@LoadInt_e@2:
  0017e	b2 ed		 mov	 dl, -19			; ffffffedH
  00180	2a d1		 sub	 dl, cl
  00182	30 54 05 ec	 xor	 BYTE PTR __k$[ebp+eax], dl
  00186	40		 inc	 eax
  00187	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  0018a	7c e3		 jl	 SHORT $LL101@LoadInt_e@2

; 120  : 		return LoadInt(_k, i);

  0018c	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  0018f	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  00192	50		 push	 eax
  00193	8b ce		 mov	 ecx, esi
  00195	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  0019b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0019e	33 cd		 xor	 ecx, ebp
  001a0	5e		 pop	 esi
  001a1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a6	c9		 leave
  001a7	c2 08 00	 ret	 8
??$LoadInt_e@$0M@@ioINILoader@@QAEHAAY0M@$$CBDH@Z ENDP	; ioINILoader::LoadInt_e<12>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$0O@@ioINILoader@@QAEHAAY0O@$$CBDH@Z ; ioINILoader::LoadInt_e<14>
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$0O@@ioINILoader@@QAEHAAY0O@$$CBDH@Z
_TEXT	SEGMENT
__k$ = -24						; size = 14
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$0O@@ioINILoader@@QAEHAAY0O@$$CBDH@Z PROC	; ioINILoader::LoadInt_e<14>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 64 01 00
	00		 je	 $LN96@LoadInt_e@3
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e8	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 4d 01 00
	00		 je	 $LN95@LoadInt_e@3
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 e9	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 36 01 00
	00		 je	 $LN94@LoadInt_e@3
  00042	b1 eb		 mov	 cl, -21			; ffffffebH
  00044	32 d1		 xor	 dl, cl
  00046	88 55 ea	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 1e 01 00
	00		 je	 $LN93@LoadInt_e@3
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 eb	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 07 01 00
	00		 je	 $LN92@LoadInt_e@3
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 ec	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 f0 00 00
	00		 je	 $LN91@LoadInt_e@3
  00076	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00079	88 55 ed	 mov	 BYTE PTR __k$[ebp+5], dl
  0007c	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007f	84 d2		 test	 dl, dl
  00081	0f 84 da 00 00
	00		 je	 $LN90@LoadInt_e@3
  00087	32 d1		 xor	 dl, cl
  00089	88 55 ee	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 c4 00 00
	00		 je	 $LN89@LoadInt_e@3
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 ef	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 ad 00 00
	00		 je	 $LN88@LoadInt_e@3
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 f0	 mov	 BYTE PTR __k$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 96 00 00
	00		 je	 $LN87@LoadInt_e@3
  000b9	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000bc	88 55 f1	 mov	 BYTE PTR __k$[ebp+9], dl
  000bf	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c2	84 d2		 test	 dl, dl
  000c4	0f 84 80 00 00
	00		 je	 $LN86@LoadInt_e@3
  000ca	32 d1		 xor	 dl, cl
  000cc	88 55 f2	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	74 6e		 je	 SHORT $LN85@LoadInt_e@3
  000d6	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d9	88 55 f3	 mov	 BYTE PTR __k$[ebp+11], dl
  000dc	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000df	84 d2		 test	 dl, dl
  000e1	74 5b		 je	 SHORT $LN84@LoadInt_e@3
  000e3	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e6	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000ea	88 55 f4	 mov	 BYTE PTR __k$[ebp+12], dl
  000ed	0f 84 95 00 00
	00		 je	 $LN1@LoadInt_e@3
  000f3	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000f6	84 d2		 test	 dl, dl
  000f8	74 3f		 je	 SHORT $LN82@LoadInt_e@3
  000fa	32 d1		 xor	 dl, cl
  000fc	88 55 f6	 mov	 BYTE PTR __k$[ebp+14], dl
  000ff	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00102	84 d2		 test	 dl, dl
  00104	74 2d		 je	 SHORT $LN81@LoadInt_e@3
  00106	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00109	88 55 f7	 mov	 BYTE PTR __k$[ebp+15], dl
  0010c	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  0010f	84 d2		 test	 dl, dl
  00111	74 1a		 je	 SHORT $LN80@LoadInt_e@3
  00113	8a 40 11	 mov	 al, BYTE PTR [eax+17]
  00116	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00119	88 55 f8	 mov	 BYTE PTR __k$[ebp+16], dl
  0011c	84 c0		 test	 al, al
  0011e	74 07		 je	 SHORT $LN79@LoadInt_e@3
  00120	34 ec		 xor	 al, -20			; ffffffecH
  00122	88 45 f9	 mov	 BYTE PTR __k$[ebp+17], al
  00125	eb 61		 jmp	 SHORT $LN1@LoadInt_e@3
$LN79@LoadInt_e@3:
  00127	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+17], -20 ; ffffffecH
  0012b	eb 5b		 jmp	 SHORT $LN1@LoadInt_e@3
$LN80@LoadInt_e@3:
  0012d	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  00131	eb 55		 jmp	 SHORT $LN1@LoadInt_e@3
$LN81@LoadInt_e@3:
  00133	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00137	eb 4f		 jmp	 SHORT $LN1@LoadInt_e@3
$LN82@LoadInt_e@3:
  00139	88 4d f6	 mov	 BYTE PTR __k$[ebp+14], cl
  0013c	eb 4a		 jmp	 SHORT $LN1@LoadInt_e@3
$LN84@LoadInt_e@3:
  0013e	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00142	eb 44		 jmp	 SHORT $LN1@LoadInt_e@3
$LN85@LoadInt_e@3:
  00144	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00148	eb 3e		 jmp	 SHORT $LN1@LoadInt_e@3
$LN86@LoadInt_e@3:
  0014a	88 4d f2	 mov	 BYTE PTR __k$[ebp+10], cl
  0014d	eb 39		 jmp	 SHORT $LN1@LoadInt_e@3
$LN87@LoadInt_e@3:
  0014f	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  00153	eb 33		 jmp	 SHORT $LN1@LoadInt_e@3
$LN88@LoadInt_e@3:
  00155	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00159	eb 2d		 jmp	 SHORT $LN1@LoadInt_e@3
$LN89@LoadInt_e@3:
  0015b	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  0015f	eb 27		 jmp	 SHORT $LN1@LoadInt_e@3
$LN90@LoadInt_e@3:
  00161	88 4d ee	 mov	 BYTE PTR __k$[ebp+6], cl
  00164	eb 22		 jmp	 SHORT $LN1@LoadInt_e@3
$LN91@LoadInt_e@3:
  00166	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  0016a	eb 1c		 jmp	 SHORT $LN1@LoadInt_e@3
$LN92@LoadInt_e@3:
  0016c	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00170	eb 16		 jmp	 SHORT $LN1@LoadInt_e@3
$LN93@LoadInt_e@3:
  00172	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00176	eb 10		 jmp	 SHORT $LN1@LoadInt_e@3
$LN94@LoadInt_e@3:
  00178	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0017c	eb 0a		 jmp	 SHORT $LN1@LoadInt_e@3
$LN95@LoadInt_e@3:
  0017e	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00182	eb 04		 jmp	 SHORT $LN1@LoadInt_e@3
$LN96@LoadInt_e@3:
  00184	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e@3:
  00188	6a 03		 push	 3
  0018a	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  0018d	c6 45 f5 00	 mov	 BYTE PTR __k$[ebp+13], 0
  00191	5a		 pop	 edx
$LL104@LoadInt_e@3:
  00192	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00198	83 c0 04	 add	 eax, 4
  0019b	4a		 dec	 edx
  0019c	75 f4		 jne	 SHORT $LL104@LoadInt_e@3

; 120  : 		return LoadInt(_k, i);

  0019e	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  001a1	80 75 f4 ed	 xor	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  001a5	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001a8	50		 push	 eax
  001a9	8b ce		 mov	 ecx, esi
  001ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  001b1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001b4	33 cd		 xor	 ecx, ebp
  001b6	5e		 pop	 esi
  001b7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001bc	c9		 leave
  001bd	c2 08 00	 ret	 8
??$LoadInt_e@$0O@@ioINILoader@@QAEHAAY0O@$$CBDH@Z ENDP	; ioINILoader::LoadInt_e<14>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$0L@@ioINILoader@@QAEHAAY0L@$$CBDH@Z ; ioINILoader::LoadInt_e<11>
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$0L@@ioINILoader@@QAEHAAY0L@$$CBDH@Z
_TEXT	SEGMENT
__k$ = -20						; size = 11
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$0L@@ioINILoader@@QAEHAAY0L@$$CBDH@Z PROC	; ioINILoader::LoadInt_e<11>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 24 01 00
	00		 je	 $LN96@LoadInt_e@4
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 ec	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 0d 01 00
	00		 je	 $LN95@LoadInt_e@4
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 ed	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 f6 00 00
	00		 je	 $LN94@LoadInt_e@4
  00042	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00045	88 55 ee	 mov	 BYTE PTR __k$[ebp+2], dl
  00048	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004b	84 d2		 test	 dl, dl
  0004d	0f 84 df 00 00
	00		 je	 $LN93@LoadInt_e@4
  00053	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00056	88 55 ef	 mov	 BYTE PTR __k$[ebp+3], dl
  00059	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005c	84 d2		 test	 dl, dl
  0005e	0f 84 c8 00 00
	00		 je	 $LN92@LoadInt_e@4
  00064	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00067	88 55 f0	 mov	 BYTE PTR __k$[ebp+4], dl
  0006a	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006d	84 d2		 test	 dl, dl
  0006f	0f 84 b1 00 00
	00		 je	 $LN91@LoadInt_e@4
  00075	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00078	88 55 f1	 mov	 BYTE PTR __k$[ebp+5], dl
  0007b	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007e	84 d2		 test	 dl, dl
  00080	0f 84 9a 00 00
	00		 je	 $LN90@LoadInt_e@4
  00086	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00089	88 55 f2	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 83 00 00
	00		 je	 $LN89@LoadInt_e@4
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 f3	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	74 70		 je	 SHORT $LN88@LoadInt_e@4
  000a4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a7	88 55 f4	 mov	 BYTE PTR __k$[ebp+8], dl
  000aa	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000ad	84 d2		 test	 dl, dl
  000af	74 5d		 je	 SHORT $LN87@LoadInt_e@4
  000b1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b4	80 78 0a 00	 cmp	 BYTE PTR [eax+10], 0
  000b8	88 55 f5	 mov	 BYTE PTR __k$[ebp+9], dl
  000bb	0f 84 87 00 00
	00		 je	 $LN1@LoadInt_e@4
  000c1	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000c4	84 d2		 test	 dl, dl
  000c6	74 40		 je	 SHORT $LN85@LoadInt_e@4
  000c8	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000cb	88 55 f7	 mov	 BYTE PTR __k$[ebp+11], dl
  000ce	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000d1	84 d2		 test	 dl, dl
  000d3	74 2d		 je	 SHORT $LN84@LoadInt_e@4
  000d5	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000d8	88 55 f8	 mov	 BYTE PTR __k$[ebp+12], dl
  000db	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000de	84 d2		 test	 dl, dl
  000e0	74 1a		 je	 SHORT $LN83@LoadInt_e@4
  000e2	8a 40 0e	 mov	 al, BYTE PTR [eax+14]
  000e5	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000e8	88 55 f9	 mov	 BYTE PTR __k$[ebp+13], dl
  000eb	84 c0		 test	 al, al
  000ed	74 07		 je	 SHORT $LN82@LoadInt_e@4
  000ef	34 eb		 xor	 al, -21			; ffffffebH
  000f1	88 45 fa	 mov	 BYTE PTR __k$[ebp+14], al
  000f4	eb 52		 jmp	 SHORT $LN1@LoadInt_e@4
$LN82@LoadInt_e@4:
  000f6	c6 45 fa eb	 mov	 BYTE PTR __k$[ebp+14], -21 ; ffffffebH
  000fa	eb 4c		 jmp	 SHORT $LN1@LoadInt_e@4
$LN83@LoadInt_e@4:
  000fc	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  00100	eb 46		 jmp	 SHORT $LN1@LoadInt_e@4
$LN84@LoadInt_e@4:
  00102	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00106	eb 40		 jmp	 SHORT $LN1@LoadInt_e@4
$LN85@LoadInt_e@4:
  00108	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  0010c	eb 3a		 jmp	 SHORT $LN1@LoadInt_e@4
$LN87@LoadInt_e@4:
  0010e	c6 45 f5 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  00112	eb 34		 jmp	 SHORT $LN1@LoadInt_e@4
$LN88@LoadInt_e@4:
  00114	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00118	eb 2e		 jmp	 SHORT $LN1@LoadInt_e@4
$LN89@LoadInt_e@4:
  0011a	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  0011e	eb 28		 jmp	 SHORT $LN1@LoadInt_e@4
$LN90@LoadInt_e@4:
  00120	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  00124	eb 22		 jmp	 SHORT $LN1@LoadInt_e@4
$LN91@LoadInt_e@4:
  00126	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  0012a	eb 1c		 jmp	 SHORT $LN1@LoadInt_e@4
$LN92@LoadInt_e@4:
  0012c	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00130	eb 16		 jmp	 SHORT $LN1@LoadInt_e@4
$LN93@LoadInt_e@4:
  00132	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00136	eb 10		 jmp	 SHORT $LN1@LoadInt_e@4
$LN94@LoadInt_e@4:
  00138	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0013c	eb 0a		 jmp	 SHORT $LN1@LoadInt_e@4
$LN95@LoadInt_e@4:
  0013e	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00142	eb 04		 jmp	 SHORT $LN1@LoadInt_e@4
$LN96@LoadInt_e@4:
  00144	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e@4:
  00148	6a 02		 push	 2
  0014a	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  0014d	c6 45 f6 00	 mov	 BYTE PTR __k$[ebp+10], 0
  00151	5a		 pop	 edx
$LL104@LoadInt_e@4:
  00152	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00158	83 c0 04	 add	 eax, 4
  0015b	4a		 dec	 edx
  0015c	75 f4		 jne	 SHORT $LL104@LoadInt_e@4
  0015e	6a 08		 push	 8
  00160	58		 pop	 eax
$LL101@LoadInt_e@4:
  00161	8b c8		 mov	 ecx, eax
  00163	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00169	79 05		 jns	 SHORT $LN111@LoadInt_e@4
  0016b	49		 dec	 ecx
  0016c	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0016f	41		 inc	 ecx
$LN111@LoadInt_e@4:
  00170	b2 ed		 mov	 dl, -19			; ffffffedH
  00172	2a d1		 sub	 dl, cl
  00174	30 54 05 ec	 xor	 BYTE PTR __k$[ebp+eax], dl
  00178	40		 inc	 eax
  00179	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0017c	7c e3		 jl	 SHORT $LL101@LoadInt_e@4

; 120  : 		return LoadInt(_k, i);

  0017e	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  00181	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  00184	50		 push	 eax
  00185	8b ce		 mov	 ecx, esi
  00187	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  0018d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00190	33 cd		 xor	 ecx, ebp
  00192	5e		 pop	 esi
  00193	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00198	c9		 leave
  00199	c2 08 00	 ret	 8
??$LoadInt_e@$0L@@ioINILoader@@QAEHAAY0L@$$CBDH@Z ENDP	; ioINILoader::LoadInt_e<11>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$08@ioINILoader@@QAEHAAY08$$CBDH@Z	; ioINILoader::LoadInt_e<9>
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$08@ioINILoader@@QAEHAAY08$$CBDH@Z
_TEXT	SEGMENT
__k$ = -20						; size = 9
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$08@ioINILoader@@QAEHAAY08$$CBDH@Z PROC	; ioINILoader::LoadInt_e<9>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	84 d2		 test	 dl, dl
  00017	0f 84 ee 00 00
	00		 je	 $LN96@LoadInt_e@5
  0001d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00020	88 55 ec	 mov	 BYTE PTR __k$[ebp], dl
  00023	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00026	84 d2		 test	 dl, dl
  00028	0f 84 d7 00 00
	00		 je	 $LN95@LoadInt_e@5
  0002e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00031	88 55 ed	 mov	 BYTE PTR __k$[ebp+1], dl
  00034	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  00037	84 d2		 test	 dl, dl
  00039	0f 84 c0 00 00
	00		 je	 $LN94@LoadInt_e@5
  0003f	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00042	88 55 ee	 mov	 BYTE PTR __k$[ebp+2], dl
  00045	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  00048	84 d2		 test	 dl, dl
  0004a	0f 84 a9 00 00
	00		 je	 $LN93@LoadInt_e@5
  00050	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00053	88 55 ef	 mov	 BYTE PTR __k$[ebp+3], dl
  00056	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00059	84 d2		 test	 dl, dl
  0005b	0f 84 92 00 00
	00		 je	 $LN92@LoadInt_e@5
  00061	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00064	88 55 f0	 mov	 BYTE PTR __k$[ebp+4], dl
  00067	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006a	84 d2		 test	 dl, dl
  0006c	74 7f		 je	 SHORT $LN91@LoadInt_e@5
  0006e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00071	88 55 f1	 mov	 BYTE PTR __k$[ebp+5], dl
  00074	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00077	84 d2		 test	 dl, dl
  00079	74 6c		 je	 SHORT $LN90@LoadInt_e@5
  0007b	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0007e	88 55 f2	 mov	 BYTE PTR __k$[ebp+6], dl
  00081	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00084	84 d2		 test	 dl, dl
  00086	74 59		 je	 SHORT $LN89@LoadInt_e@5
  00088	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0008b	80 78 08 00	 cmp	 BYTE PTR [eax+8], 0
  0008f	88 55 f3	 mov	 BYTE PTR __k$[ebp+7], dl
  00092	74 7b		 je	 SHORT $LN1@LoadInt_e@5
  00094	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  00097	84 d2		 test	 dl, dl
  00099	74 40		 je	 SHORT $LN87@LoadInt_e@5
  0009b	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0009e	88 55 f5	 mov	 BYTE PTR __k$[ebp+9], dl
  000a1	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000a4	84 d2		 test	 dl, dl
  000a6	74 2d		 je	 SHORT $LN86@LoadInt_e@5
  000a8	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000ab	88 55 f6	 mov	 BYTE PTR __k$[ebp+10], dl
  000ae	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000b1	84 d2		 test	 dl, dl
  000b3	74 1a		 je	 SHORT $LN85@LoadInt_e@5
  000b5	8a 40 0c	 mov	 al, BYTE PTR [eax+12]
  000b8	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000bb	88 55 f7	 mov	 BYTE PTR __k$[ebp+11], dl
  000be	84 c0		 test	 al, al
  000c0	74 07		 je	 SHORT $LN84@LoadInt_e@5
  000c2	34 ed		 xor	 al, -19			; ffffffedH
  000c4	88 45 f8	 mov	 BYTE PTR __k$[ebp+12], al
  000c7	eb 46		 jmp	 SHORT $LN1@LoadInt_e@5
$LN84@LoadInt_e@5:
  000c9	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  000cd	eb 40		 jmp	 SHORT $LN1@LoadInt_e@5
$LN85@LoadInt_e@5:
  000cf	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  000d3	eb 3a		 jmp	 SHORT $LN1@LoadInt_e@5
$LN86@LoadInt_e@5:
  000d5	c6 45 f6 eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  000d9	eb 34		 jmp	 SHORT $LN1@LoadInt_e@5
$LN87@LoadInt_e@5:
  000db	c6 45 f5 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  000df	eb 2e		 jmp	 SHORT $LN1@LoadInt_e@5
$LN89@LoadInt_e@5:
  000e1	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  000e5	eb 28		 jmp	 SHORT $LN1@LoadInt_e@5
$LN90@LoadInt_e@5:
  000e7	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  000eb	eb 22		 jmp	 SHORT $LN1@LoadInt_e@5
$LN91@LoadInt_e@5:
  000ed	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  000f1	eb 1c		 jmp	 SHORT $LN1@LoadInt_e@5
$LN92@LoadInt_e@5:
  000f3	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  000f7	eb 16		 jmp	 SHORT $LN1@LoadInt_e@5
$LN93@LoadInt_e@5:
  000f9	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  000fd	eb 10		 jmp	 SHORT $LN1@LoadInt_e@5
$LN94@LoadInt_e@5:
  000ff	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  00103	eb 0a		 jmp	 SHORT $LN1@LoadInt_e@5
$LN95@LoadInt_e@5:
  00105	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00109	eb 04		 jmp	 SHORT $LN1@LoadInt_e@5
$LN96@LoadInt_e@5:
  0010b	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e@5:
  0010f	6a 02		 push	 2
  00111	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  00114	c6 45 f4 00	 mov	 BYTE PTR __k$[ebp+8], 0
  00118	5a		 pop	 edx
$LL104@LoadInt_e@5:
  00119	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0011f	83 c0 04	 add	 eax, 4
  00122	4a		 dec	 edx
  00123	75 f4		 jne	 SHORT $LL104@LoadInt_e@5

; 120  : 		return LoadInt(_k, i);

  00125	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  00128	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  0012b	50		 push	 eax
  0012c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  00132	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00135	33 cd		 xor	 ecx, ebp
  00137	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013c	c9		 leave
  0013d	c2 08 00	 ret	 8
??$LoadInt_e@$08@ioINILoader@@QAEHAAY08$$CBDH@Z ENDP	; ioINILoader::LoadInt_e<9>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@AAU34@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@AAU23@@Z ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase,ioEventGoodsMgr::GoodsDatabase &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@AAU34@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@AAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@AAU34@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@AAU23@@Z PROC ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase,ioEventGoodsMgr::GoodsDatabase &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00004	8b 7d 0c	 mov	 edi, DWORD PTR __Pdest$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN7@Cons_val
  0000b	56		 push	 esi
  0000c	8b 75 10	 mov	 esi, DWORD PTR __Src$[ebp]
  0000f	6a 09		 push	 9
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN7@Cons_val:
  00015	5f		 pop	 edi

; 281  : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Cons_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@AAU34@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@AAU23@@Z ENDP ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase,ioEventGoodsMgr::GoodsDatabase &>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@AAU34@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@AAU23@@Z ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData,ioEventGoodsMgr::GoodsData &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@AAU34@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@AAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@AAU34@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@AAU23@@Z PROC ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData,ioEventGoodsMgr::GoodsData &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00004	8b 7d 0c	 mov	 edi, DWORD PTR __Pdest$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN7@Cons_val@2
  0000b	56		 push	 esi
  0000c	8b 75 10	 mov	 esi, DWORD PTR __Src$[ebp]
  0000f	6a 0c		 push	 12			; 0000000cH
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN7@Cons_val@2:
  00015	5f		 pop	 edi

; 281  : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Cons_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@AAU34@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@AAU23@@Z ENDP ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData,ioEventGoodsMgr::GoodsData &>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@ABU34@@Z ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@ABU34@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@ABU34@@Z PROC ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 197  : 		_Construct(_Ptr, _Val);

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN5@construct@3
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	6a 09		 push	 9
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN5@construct@3:
  00015	5f		 pop	 edi

; 198  : 		}

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?construct@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@ABU34@@Z ENDP ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::construct
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@ABU34@@Z ; std::allocator<ioEventGoodsMgr::GoodsData>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@ABU34@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@ABU34@@Z PROC ; std::allocator<ioEventGoodsMgr::GoodsData>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 197  : 		_Construct(_Ptr, _Val);

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN5@construct@4
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	6a 0c		 push	 12			; 0000000cH
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN5@construct@4:
  00015	5f		 pop	 edi

; 198  : 		}

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?construct@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@ABU34@@Z ENDP ; std::allocator<ioEventGoodsMgr::GoodsData>::construct
_TEXT	ENDS
PUBLIC	??$encodeString@$0BL@@ioINILoader_e@@AAEPADAAY0BL@$$CBDPAD@Z ; ioINILoader_e::encodeString<27>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$encodeString@$0BL@@ioINILoader_e@@AAEPADAAY0BL@$$CBDPAD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_e$ = 12						; size = 4
??$encodeString@$0BL@@ioINILoader_e@@AAEPADAAY0BL@$$CBDPAD@Z PROC ; ioINILoader_e::encodeString<27>, COMDAT
; _this$ = ecx

; 215  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 216  : 		__ENCSTR(s, e);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _s$[ebp]
  00006	8a 11		 mov	 dl, BYTE PTR [ecx]
  00008	8b 45 0c	 mov	 eax, DWORD PTR _e$[ebp]
  0000b	53		 push	 ebx
  0000c	84 d2		 test	 dl, dl
  0000e	0f 84 6a 04 00
	00		 je	 $LN96@encodeStri
  00014	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00017	88 10		 mov	 BYTE PTR [eax], dl
  00019	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  0001c	84 d2		 test	 dl, dl
  0001e	0f 84 54 04 00
	00		 je	 $LN95@encodeStri
  00024	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00027	88 50 01	 mov	 BYTE PTR [eax+1], dl
  0002a	8a 51 02	 mov	 dl, BYTE PTR [ecx+2]
  0002d	84 d2		 test	 dl, dl
  0002f	0f 84 3d 04 00
	00		 je	 $LN94@encodeStri
  00035	b3 eb		 mov	 bl, -21			; ffffffebH
  00037	32 d3		 xor	 dl, bl
  00039	88 50 02	 mov	 BYTE PTR [eax+2], dl
  0003c	8a 51 03	 mov	 dl, BYTE PTR [ecx+3]
  0003f	84 d2		 test	 dl, dl
  00041	0f 84 25 04 00
	00		 je	 $LN93@encodeStri
  00047	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0004a	88 50 03	 mov	 BYTE PTR [eax+3], dl
  0004d	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  00050	84 d2		 test	 dl, dl
  00052	0f 84 0e 04 00
	00		 je	 $LN92@encodeStri
  00058	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0005b	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0005e	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  00061	84 d2		 test	 dl, dl
  00063	0f 84 f7 03 00
	00		 je	 $LN91@encodeStri
  00069	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0006c	88 50 05	 mov	 BYTE PTR [eax+5], dl
  0006f	8a 51 06	 mov	 dl, BYTE PTR [ecx+6]
  00072	84 d2		 test	 dl, dl
  00074	0f 84 e1 03 00
	00		 je	 $LN90@encodeStri
  0007a	32 d3		 xor	 dl, bl
  0007c	88 50 06	 mov	 BYTE PTR [eax+6], dl
  0007f	8a 51 07	 mov	 dl, BYTE PTR [ecx+7]
  00082	84 d2		 test	 dl, dl
  00084	0f 84 cb 03 00
	00		 je	 $LN89@encodeStri
  0008a	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0008d	88 50 07	 mov	 BYTE PTR [eax+7], dl
  00090	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  00093	84 d2		 test	 dl, dl
  00095	0f 84 b4 03 00
	00		 je	 $LN88@encodeStri
  0009b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0009e	88 50 08	 mov	 BYTE PTR [eax+8], dl
  000a1	8a 51 09	 mov	 dl, BYTE PTR [ecx+9]
  000a4	84 d2		 test	 dl, dl
  000a6	0f 84 9d 03 00
	00		 je	 $LN87@encodeStri
  000ac	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000af	88 50 09	 mov	 BYTE PTR [eax+9], dl
  000b2	8a 51 0a	 mov	 dl, BYTE PTR [ecx+10]
  000b5	84 d2		 test	 dl, dl
  000b7	0f 84 87 03 00
	00		 je	 $LN86@encodeStri
  000bd	32 d3		 xor	 dl, bl
  000bf	88 50 0a	 mov	 BYTE PTR [eax+10], dl
  000c2	8a 51 0b	 mov	 dl, BYTE PTR [ecx+11]
  000c5	84 d2		 test	 dl, dl
  000c7	0f 84 71 03 00
	00		 je	 $LN85@encodeStri
  000cd	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d0	88 50 0b	 mov	 BYTE PTR [eax+11], dl
  000d3	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
  000d6	84 d2		 test	 dl, dl
  000d8	0f 84 5a 03 00
	00		 je	 $LN84@encodeStri
  000de	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e1	88 50 0c	 mov	 BYTE PTR [eax+12], dl
  000e4	8a 51 0d	 mov	 dl, BYTE PTR [ecx+13]
  000e7	84 d2		 test	 dl, dl
  000e9	0f 84 43 03 00
	00		 je	 $LN83@encodeStri
  000ef	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000f2	88 50 0d	 mov	 BYTE PTR [eax+13], dl
  000f5	8a 51 0e	 mov	 dl, BYTE PTR [ecx+14]
  000f8	84 d2		 test	 dl, dl
  000fa	0f 84 2d 03 00
	00		 je	 $LN82@encodeStri
  00100	32 d3		 xor	 dl, bl
  00102	88 50 0e	 mov	 BYTE PTR [eax+14], dl
  00105	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  00108	84 d2		 test	 dl, dl
  0010a	0f 84 17 03 00
	00		 je	 $LN81@encodeStri
  00110	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00113	88 50 0f	 mov	 BYTE PTR [eax+15], dl
  00116	8a 51 10	 mov	 dl, BYTE PTR [ecx+16]
  00119	84 d2		 test	 dl, dl
  0011b	0f 84 00 03 00
	00		 je	 $LN80@encodeStri
  00121	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00124	88 50 10	 mov	 BYTE PTR [eax+16], dl
  00127	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  0012a	84 d2		 test	 dl, dl
  0012c	0f 84 e9 02 00
	00		 je	 $LN79@encodeStri
  00132	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00135	88 50 11	 mov	 BYTE PTR [eax+17], dl
  00138	8a 51 12	 mov	 dl, BYTE PTR [ecx+18]
  0013b	84 d2		 test	 dl, dl
  0013d	0f 84 d3 02 00
	00		 je	 $LN78@encodeStri
  00143	32 d3		 xor	 dl, bl
  00145	88 50 12	 mov	 BYTE PTR [eax+18], dl
  00148	8a 51 13	 mov	 dl, BYTE PTR [ecx+19]
  0014b	84 d2		 test	 dl, dl
  0014d	0f 84 bd 02 00
	00		 je	 $LN77@encodeStri
  00153	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00156	88 50 13	 mov	 BYTE PTR [eax+19], dl
  00159	8a 51 14	 mov	 dl, BYTE PTR [ecx+20]
  0015c	84 d2		 test	 dl, dl
  0015e	0f 84 a6 02 00
	00		 je	 $LN76@encodeStri
  00164	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00167	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0016a	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0016d	84 d2		 test	 dl, dl
  0016f	0f 84 8f 02 00
	00		 je	 $LN75@encodeStri
  00175	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00178	88 50 15	 mov	 BYTE PTR [eax+21], dl
  0017b	8a 51 16	 mov	 dl, BYTE PTR [ecx+22]
  0017e	84 d2		 test	 dl, dl
  00180	0f 84 79 02 00
	00		 je	 $LN74@encodeStri
  00186	32 d3		 xor	 dl, bl
  00188	88 50 16	 mov	 BYTE PTR [eax+22], dl
  0018b	8a 51 17	 mov	 dl, BYTE PTR [ecx+23]
  0018e	84 d2		 test	 dl, dl
  00190	0f 84 60 02 00
	00		 je	 $LN73@encodeStri
  00196	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00199	88 50 17	 mov	 BYTE PTR [eax+23], dl
  0019c	8a 51 18	 mov	 dl, BYTE PTR [ecx+24]
  0019f	84 d2		 test	 dl, dl
  001a1	0f 84 46 02 00
	00		 je	 $LN72@encodeStri
  001a7	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001aa	88 50 18	 mov	 BYTE PTR [eax+24], dl
  001ad	8a 51 19	 mov	 dl, BYTE PTR [ecx+25]
  001b0	84 d2		 test	 dl, dl
  001b2	0f 84 2c 02 00
	00		 je	 $LN71@encodeStri
  001b8	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001bb	88 50 19	 mov	 BYTE PTR [eax+25], dl
  001be	8a 51 1a	 mov	 dl, BYTE PTR [ecx+26]
  001c1	84 d2		 test	 dl, dl
  001c3	0f 84 13 02 00
	00		 je	 $LN70@encodeStri
  001c9	32 d3		 xor	 dl, bl
  001cb	88 50 1a	 mov	 BYTE PTR [eax+26], dl
  001ce	8a 51 1b	 mov	 dl, BYTE PTR [ecx+27]
  001d1	84 d2		 test	 dl, dl
  001d3	0f 84 fa 01 00
	00		 je	 $LN69@encodeStri
  001d9	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001dc	88 50 1b	 mov	 BYTE PTR [eax+27], dl
  001df	8a 51 1c	 mov	 dl, BYTE PTR [ecx+28]
  001e2	84 d2		 test	 dl, dl
  001e4	0f 84 e0 01 00
	00		 je	 $LN68@encodeStri
  001ea	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001ed	88 50 1c	 mov	 BYTE PTR [eax+28], dl
  001f0	8a 51 1d	 mov	 dl, BYTE PTR [ecx+29]
  001f3	84 d2		 test	 dl, dl
  001f5	0f 84 c6 01 00
	00		 je	 $LN67@encodeStri
  001fb	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001fe	88 50 1d	 mov	 BYTE PTR [eax+29], dl
  00201	8a 51 1e	 mov	 dl, BYTE PTR [ecx+30]
  00204	84 d2		 test	 dl, dl
  00206	0f 84 ad 01 00
	00		 je	 $LN66@encodeStri
  0020c	32 d3		 xor	 dl, bl
  0020e	88 50 1e	 mov	 BYTE PTR [eax+30], dl
  00211	8a 51 1f	 mov	 dl, BYTE PTR [ecx+31]
  00214	84 d2		 test	 dl, dl
  00216	0f 84 94 01 00
	00		 je	 $LN65@encodeStri
  0021c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0021f	88 50 1f	 mov	 BYTE PTR [eax+31], dl
  00222	8a 51 20	 mov	 dl, BYTE PTR [ecx+32]
  00225	84 d2		 test	 dl, dl
  00227	0f 84 7a 01 00
	00		 je	 $LN64@encodeStri
  0022d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00230	88 50 20	 mov	 BYTE PTR [eax+32], dl
  00233	8a 51 21	 mov	 dl, BYTE PTR [ecx+33]
  00236	84 d2		 test	 dl, dl
  00238	0f 84 60 01 00
	00		 je	 $LN63@encodeStri
  0023e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00241	88 50 21	 mov	 BYTE PTR [eax+33], dl
  00244	8a 51 22	 mov	 dl, BYTE PTR [ecx+34]
  00247	84 d2		 test	 dl, dl
  00249	0f 84 47 01 00
	00		 je	 $LN62@encodeStri
  0024f	32 d3		 xor	 dl, bl
  00251	88 50 22	 mov	 BYTE PTR [eax+34], dl
  00254	8a 51 23	 mov	 dl, BYTE PTR [ecx+35]
  00257	84 d2		 test	 dl, dl
  00259	0f 84 2e 01 00
	00		 je	 $LN61@encodeStri
  0025f	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00262	88 50 23	 mov	 BYTE PTR [eax+35], dl
  00265	8a 51 24	 mov	 dl, BYTE PTR [ecx+36]
  00268	84 d2		 test	 dl, dl
  0026a	0f 84 14 01 00
	00		 je	 $LN60@encodeStri
  00270	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00273	88 50 24	 mov	 BYTE PTR [eax+36], dl
  00276	8a 51 25	 mov	 dl, BYTE PTR [ecx+37]
  00279	84 d2		 test	 dl, dl
  0027b	0f 84 fa 00 00
	00		 je	 $LN59@encodeStri
  00281	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00284	88 50 25	 mov	 BYTE PTR [eax+37], dl
  00287	8a 51 26	 mov	 dl, BYTE PTR [ecx+38]
  0028a	84 d2		 test	 dl, dl
  0028c	0f 84 e1 00 00
	00		 je	 $LN58@encodeStri
  00292	32 d3		 xor	 dl, bl
  00294	88 50 26	 mov	 BYTE PTR [eax+38], dl
  00297	8a 51 27	 mov	 dl, BYTE PTR [ecx+39]
  0029a	84 d2		 test	 dl, dl
  0029c	0f 84 c8 00 00
	00		 je	 $LN57@encodeStri
  002a2	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002a5	88 50 27	 mov	 BYTE PTR [eax+39], dl
  002a8	8a 51 28	 mov	 dl, BYTE PTR [ecx+40]
  002ab	84 d2		 test	 dl, dl
  002ad	0f 84 ae 00 00
	00		 je	 $LN56@encodeStri
  002b3	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002b6	88 50 28	 mov	 BYTE PTR [eax+40], dl
  002b9	8a 51 29	 mov	 dl, BYTE PTR [ecx+41]
  002bc	84 d2		 test	 dl, dl
  002be	0f 84 94 00 00
	00		 je	 $LN55@encodeStri
  002c4	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002c7	88 50 29	 mov	 BYTE PTR [eax+41], dl
  002ca	8a 51 2a	 mov	 dl, BYTE PTR [ecx+42]
  002cd	84 d2		 test	 dl, dl
  002cf	74 7f		 je	 SHORT $LN54@encodeStri
  002d1	32 d3		 xor	 dl, bl
  002d3	88 50 2a	 mov	 BYTE PTR [eax+42], dl
  002d6	8a 51 2b	 mov	 dl, BYTE PTR [ecx+43]
  002d9	84 d2		 test	 dl, dl
  002db	74 6a		 je	 SHORT $LN53@encodeStri
  002dd	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002e0	88 50 2b	 mov	 BYTE PTR [eax+43], dl
  002e3	8a 51 2c	 mov	 dl, BYTE PTR [ecx+44]
  002e6	84 d2		 test	 dl, dl
  002e8	74 54		 je	 SHORT $LN52@encodeStri
  002ea	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002ed	88 50 2c	 mov	 BYTE PTR [eax+44], dl
  002f0	8a 51 2d	 mov	 dl, BYTE PTR [ecx+45]
  002f3	84 d2		 test	 dl, dl
  002f5	74 3e		 je	 SHORT $LN51@encodeStri
  002f7	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002fa	88 50 2d	 mov	 BYTE PTR [eax+45], dl
  002fd	8a 51 2e	 mov	 dl, BYTE PTR [ecx+46]
  00300	84 d2		 test	 dl, dl
  00302	74 29		 je	 SHORT $LN50@encodeStri
  00304	32 d3		 xor	 dl, bl
  00306	88 50 2e	 mov	 BYTE PTR [eax+46], dl
  00309	8a 51 2f	 mov	 dl, BYTE PTR [ecx+47]
  0030c	84 d2		 test	 dl, dl
  0030e	74 14		 je	 SHORT $LN49@encodeStri
  00310	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00313	88 50 2f	 mov	 BYTE PTR [eax+47], dl
  00316	8a 49 30	 mov	 cl, BYTE PTR [ecx+48]
  00319	80 f1 ed	 xor	 cl, -19			; ffffffedH
  0031c	88 48 30	 mov	 BYTE PTR [eax+48], cl
  0031f	e9 5d 01 00 00	 jmp	 $LN1@encodeStri
$LN49@encodeStri:
  00324	c6 40 2f ea	 mov	 BYTE PTR [eax+47], -22	; ffffffeaH
  00328	e9 54 01 00 00	 jmp	 $LN1@encodeStri
$LN50@encodeStri:
  0032d	88 58 2e	 mov	 BYTE PTR [eax+46], bl
  00330	e9 4c 01 00 00	 jmp	 $LN1@encodeStri
$LN51@encodeStri:
  00335	c6 40 2d ec	 mov	 BYTE PTR [eax+45], -20	; ffffffecH
  00339	e9 43 01 00 00	 jmp	 $LN1@encodeStri
$LN52@encodeStri:
  0033e	c6 40 2c ed	 mov	 BYTE PTR [eax+44], -19	; ffffffedH
  00342	e9 3a 01 00 00	 jmp	 $LN1@encodeStri
$LN53@encodeStri:
  00347	c6 40 2b ea	 mov	 BYTE PTR [eax+43], -22	; ffffffeaH
  0034b	e9 31 01 00 00	 jmp	 $LN1@encodeStri
$LN54@encodeStri:
  00350	88 58 2a	 mov	 BYTE PTR [eax+42], bl
  00353	e9 29 01 00 00	 jmp	 $LN1@encodeStri
$LN55@encodeStri:
  00358	c6 40 29 ec	 mov	 BYTE PTR [eax+41], -20	; ffffffecH
  0035c	e9 20 01 00 00	 jmp	 $LN1@encodeStri
$LN56@encodeStri:
  00361	c6 40 28 ed	 mov	 BYTE PTR [eax+40], -19	; ffffffedH
  00365	e9 17 01 00 00	 jmp	 $LN1@encodeStri
$LN57@encodeStri:
  0036a	c6 40 27 ea	 mov	 BYTE PTR [eax+39], -22	; ffffffeaH
  0036e	e9 0e 01 00 00	 jmp	 $LN1@encodeStri
$LN58@encodeStri:
  00373	88 58 26	 mov	 BYTE PTR [eax+38], bl
  00376	e9 06 01 00 00	 jmp	 $LN1@encodeStri
$LN59@encodeStri:
  0037b	c6 40 25 ec	 mov	 BYTE PTR [eax+37], -20	; ffffffecH
  0037f	e9 fd 00 00 00	 jmp	 $LN1@encodeStri
$LN60@encodeStri:
  00384	c6 40 24 ed	 mov	 BYTE PTR [eax+36], -19	; ffffffedH
  00388	e9 f4 00 00 00	 jmp	 $LN1@encodeStri
$LN61@encodeStri:
  0038d	c6 40 23 ea	 mov	 BYTE PTR [eax+35], -22	; ffffffeaH
  00391	e9 eb 00 00 00	 jmp	 $LN1@encodeStri
$LN62@encodeStri:
  00396	88 58 22	 mov	 BYTE PTR [eax+34], bl
  00399	e9 e3 00 00 00	 jmp	 $LN1@encodeStri
$LN63@encodeStri:
  0039e	c6 40 21 ec	 mov	 BYTE PTR [eax+33], -20	; ffffffecH
  003a2	e9 da 00 00 00	 jmp	 $LN1@encodeStri
$LN64@encodeStri:
  003a7	c6 40 20 ed	 mov	 BYTE PTR [eax+32], -19	; ffffffedH
  003ab	e9 d1 00 00 00	 jmp	 $LN1@encodeStri
$LN65@encodeStri:
  003b0	c6 40 1f ea	 mov	 BYTE PTR [eax+31], -22	; ffffffeaH
  003b4	e9 c8 00 00 00	 jmp	 $LN1@encodeStri
$LN66@encodeStri:
  003b9	88 58 1e	 mov	 BYTE PTR [eax+30], bl
  003bc	e9 c0 00 00 00	 jmp	 $LN1@encodeStri
$LN67@encodeStri:
  003c1	c6 40 1d ec	 mov	 BYTE PTR [eax+29], -20	; ffffffecH
  003c5	e9 b7 00 00 00	 jmp	 $LN1@encodeStri
$LN68@encodeStri:
  003ca	c6 40 1c ed	 mov	 BYTE PTR [eax+28], -19	; ffffffedH
  003ce	e9 ae 00 00 00	 jmp	 $LN1@encodeStri
$LN69@encodeStri:
  003d3	c6 40 1b ea	 mov	 BYTE PTR [eax+27], -22	; ffffffeaH
  003d7	e9 a5 00 00 00	 jmp	 $LN1@encodeStri
$LN70@encodeStri:
  003dc	88 58 1a	 mov	 BYTE PTR [eax+26], bl
  003df	e9 9d 00 00 00	 jmp	 $LN1@encodeStri
$LN71@encodeStri:
  003e4	c6 40 19 ec	 mov	 BYTE PTR [eax+25], -20	; ffffffecH
  003e8	e9 94 00 00 00	 jmp	 $LN1@encodeStri
$LN72@encodeStri:
  003ed	c6 40 18 ed	 mov	 BYTE PTR [eax+24], -19	; ffffffedH
  003f1	e9 8b 00 00 00	 jmp	 $LN1@encodeStri
$LN73@encodeStri:
  003f6	c6 40 17 ea	 mov	 BYTE PTR [eax+23], -22	; ffffffeaH
  003fa	e9 82 00 00 00	 jmp	 $LN1@encodeStri
$LN74@encodeStri:
  003ff	88 58 16	 mov	 BYTE PTR [eax+22], bl
  00402	eb 7d		 jmp	 SHORT $LN1@encodeStri
$LN75@encodeStri:
  00404	c6 40 15 ec	 mov	 BYTE PTR [eax+21], -20	; ffffffecH
  00408	eb 77		 jmp	 SHORT $LN1@encodeStri
$LN76@encodeStri:
  0040a	c6 40 14 ed	 mov	 BYTE PTR [eax+20], -19	; ffffffedH
  0040e	eb 71		 jmp	 SHORT $LN1@encodeStri
$LN77@encodeStri:
  00410	c6 40 13 ea	 mov	 BYTE PTR [eax+19], -22	; ffffffeaH
  00414	eb 6b		 jmp	 SHORT $LN1@encodeStri
$LN78@encodeStri:
  00416	88 58 12	 mov	 BYTE PTR [eax+18], bl
  00419	eb 66		 jmp	 SHORT $LN1@encodeStri
$LN79@encodeStri:
  0041b	c6 40 11 ec	 mov	 BYTE PTR [eax+17], -20	; ffffffecH
  0041f	eb 60		 jmp	 SHORT $LN1@encodeStri
$LN80@encodeStri:
  00421	c6 40 10 ed	 mov	 BYTE PTR [eax+16], -19	; ffffffedH
  00425	eb 5a		 jmp	 SHORT $LN1@encodeStri
$LN81@encodeStri:
  00427	c6 40 0f ea	 mov	 BYTE PTR [eax+15], -22	; ffffffeaH
  0042b	eb 54		 jmp	 SHORT $LN1@encodeStri
$LN82@encodeStri:
  0042d	88 58 0e	 mov	 BYTE PTR [eax+14], bl
  00430	eb 4f		 jmp	 SHORT $LN1@encodeStri
$LN83@encodeStri:
  00432	c6 40 0d ec	 mov	 BYTE PTR [eax+13], -20	; ffffffecH
  00436	eb 49		 jmp	 SHORT $LN1@encodeStri
$LN84@encodeStri:
  00438	c6 40 0c ed	 mov	 BYTE PTR [eax+12], -19	; ffffffedH
  0043c	eb 43		 jmp	 SHORT $LN1@encodeStri
$LN85@encodeStri:
  0043e	c6 40 0b ea	 mov	 BYTE PTR [eax+11], -22	; ffffffeaH
  00442	eb 3d		 jmp	 SHORT $LN1@encodeStri
$LN86@encodeStri:
  00444	88 58 0a	 mov	 BYTE PTR [eax+10], bl
  00447	eb 38		 jmp	 SHORT $LN1@encodeStri
$LN87@encodeStri:
  00449	c6 40 09 ec	 mov	 BYTE PTR [eax+9], -20	; ffffffecH
  0044d	eb 32		 jmp	 SHORT $LN1@encodeStri
$LN88@encodeStri:
  0044f	c6 40 08 ed	 mov	 BYTE PTR [eax+8], -19	; ffffffedH
  00453	eb 2c		 jmp	 SHORT $LN1@encodeStri
$LN89@encodeStri:
  00455	c6 40 07 ea	 mov	 BYTE PTR [eax+7], -22	; ffffffeaH
  00459	eb 26		 jmp	 SHORT $LN1@encodeStri
$LN90@encodeStri:
  0045b	88 58 06	 mov	 BYTE PTR [eax+6], bl
  0045e	eb 21		 jmp	 SHORT $LN1@encodeStri
$LN91@encodeStri:
  00460	c6 40 05 ec	 mov	 BYTE PTR [eax+5], -20	; ffffffecH
  00464	eb 1b		 jmp	 SHORT $LN1@encodeStri
$LN92@encodeStri:
  00466	c6 40 04 ed	 mov	 BYTE PTR [eax+4], -19	; ffffffedH
  0046a	eb 15		 jmp	 SHORT $LN1@encodeStri
$LN93@encodeStri:
  0046c	c6 40 03 ea	 mov	 BYTE PTR [eax+3], -22	; ffffffeaH
  00470	eb 0f		 jmp	 SHORT $LN1@encodeStri
$LN94@encodeStri:
  00472	c6 40 02 eb	 mov	 BYTE PTR [eax+2], -21	; ffffffebH
  00476	eb 09		 jmp	 SHORT $LN1@encodeStri
$LN95@encodeStri:
  00478	c6 40 01 ec	 mov	 BYTE PTR [eax+1], -20	; ffffffecH
  0047c	eb 03		 jmp	 SHORT $LN1@encodeStri
$LN96@encodeStri:
  0047e	c6 00 ed	 mov	 BYTE PTR [eax], -19	; ffffffedH
$LN1@encodeStri:
  00481	6a 06		 push	 6
  00483	5a		 pop	 edx
  00484	8b c8		 mov	 ecx, eax
  00486	c6 40 1a 00	 mov	 BYTE PTR [eax+26], 0
  0048a	5b		 pop	 ebx
$LL104@encodeStri:
  0048b	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  00491	83 c1 04	 add	 ecx, 4
  00494	4a		 dec	 edx
  00495	75 f4		 jne	 SHORT $LL104@encodeStri
  00497	56		 push	 esi
  00498	6a 18		 push	 24			; 00000018H
  0049a	5e		 pop	 esi
$LL101@encodeStri:
  0049b	8b ce		 mov	 ecx, esi
  0049d	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  004a3	79 05		 jns	 SHORT $LN111@encodeStri
  004a5	49		 dec	 ecx
  004a6	83 c9 fc	 or	 ecx, -4			; fffffffcH
  004a9	41		 inc	 ecx
$LN111@encodeStri:
  004aa	b2 ed		 mov	 dl, -19			; ffffffedH
  004ac	2a d1		 sub	 dl, cl
  004ae	30 14 06	 xor	 BYTE PTR [esi+eax], dl
  004b1	46		 inc	 esi
  004b2	83 fe 1a	 cmp	 esi, 26			; 0000001aH
  004b5	7c e4		 jl	 SHORT $LL101@encodeStri
  004b7	5e		 pop	 esi

; 217  : 		return e;
; 218  : 	}

  004b8	5d		 pop	 ebp
  004b9	c2 08 00	 ret	 8
??$encodeString@$0BL@@ioINILoader_e@@AAEPADAAY0BL@$$CBDPAD@Z ENDP ; ioINILoader_e::encodeString<27>
_TEXT	ENDS
PUBLIC	??$_Move@PAUGoodsData@ioEventGoodsMgr@@PAU12@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioEventGoodsMgr::GoodsData *,ioEventGoodsMgr::GoodsData *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAUGoodsData@ioEventGoodsMgr@@PAU12@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAUGoodsData@ioEventGoodsMgr@@PAU12@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<ioEventGoodsMgr::GoodsData *,ioEventGoodsMgr::GoodsData *>, COMDAT

; 2512 : 	{	// move [_First, _Last) to [_Dest, ...), arbitrary iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00009	74 1a		 je	 SHORT $LN10@Move
  0000b	56		 push	 esi
  0000c	57		 push	 edi
$LL3@Move:

; 2514 : 		*_Dest = _STD move(*_First);

  0000d	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  00010	83 45 10 30	 add	 DWORD PTR __Dest$[ebp], 48 ; 00000030H
  00014	8b f0		 mov	 esi, eax
  00016	6a 0c		 push	 12			; 0000000cH
  00018	83 c0 30	 add	 eax, 48			; 00000030H
  0001b	59		 pop	 ecx
  0001c	f3 a5		 rep movsd
  0001e	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00021	75 ea		 jne	 SHORT $LL3@Move
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
$LN10@Move:

; 2515 : 	return (_Dest);

  00025	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 2516 : 	}

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$_Move@PAUGoodsData@ioEventGoodsMgr@@PAU12@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<ioEventGoodsMgr::GoodsData *,ioEventGoodsMgr::GoodsData *>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@@Z ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@@Z PROC ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@@Z ENDP ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@@Z ; std::allocator<ioEventGoodsMgr::GoodsData>::destroy
; Function compile flags: /Ogsp
;	COMDAT ?destroy@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@@Z PROC ; std::allocator<ioEventGoodsMgr::GoodsData>::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@@Z ENDP ; std::allocator<ioEventGoodsMgr::GoodsData>::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@$$QAU34@@Z ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@$$QAU34@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@$$QAU34@@Z PROC ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN3@construct@5
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	6a 09		 push	 9
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN3@construct@5:
  00015	5f		 pop	 edi

; 203  : 		}

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?construct@?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@QAEXPAUGoodsDatabase@ioEventGoodsMgr@@$$QAU34@@Z ENDP ; std::allocator<ioEventGoodsMgr::GoodsDatabase>::construct
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@$$QAU34@@Z ; std::allocator<ioEventGoodsMgr::GoodsData>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@$$QAU34@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@$$QAU34@@Z PROC ; std::allocator<ioEventGoodsMgr::GoodsData>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN3@construct@6
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	6a 0c		 push	 12			; 0000000cH
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN3@construct@6:
  00015	5f		 pop	 edi

; 203  : 		}

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?construct@?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@QAEXPAUGoodsData@ioEventGoodsMgr@@$$QAU34@@Z ENDP ; std::allocator<ioEventGoodsMgr::GoodsData>::construct
_TEXT	ENDS
PUBLIC	??0?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE@XZ ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE@XZ PROC ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >
_TEXT	ENDS
PUBLIC	??0?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE@XZ ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE@XZ PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::operator!=
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator++, COMDAT
; _this$ = ecx

; 337  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 338  : 		_Myiter _Tmp = *this;

  00003	8b 11		 mov	 edx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 10		 mov	 DWORD PTR [eax], edx

; 339  : 		++*this;

  0000a	83 c2 30	 add	 edx, 48			; 00000030H
  0000d	89 11		 mov	 DWORD PTR [ecx], edx

; 340  : 		return (_Tmp);
; 341  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
??E?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator++
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::operator!=
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QAE@PAUGoodsDatabase@ioEventGoodsMgr@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QAE@PAUGoodsDatabase@ioEventGoodsMgr@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QAE@PAUGoodsDatabase@ioEventGoodsMgr@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@std@@QAE@PAUGoodsDatabase@ioEventGoodsMgr@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAE@PAUGoodsData@ioEventGoodsMgr@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAE@PAUGoodsData@ioEventGoodsMgr@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAE@PAUGoodsData@ioEventGoodsMgr@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@std@@QAE@PAUGoodsData@ioEventGoodsMgr@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >::_Vector_iterator<std::_Vector_val<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> > >
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@@Z ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@@Z PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Make_iter
_TEXT	ENDS
PUBLIC	??$?0$0BL@@ioINILoader_e@@QAE@AAY0BL@$$CBD_N@Z	; ioINILoader_e::ioINILoader_e<27>
EXTRN	__imp_??0ioINILoader@@QAE@PBD_N@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$?0$0BL@@ioINILoader_e@@QAE@AAY0BL@$$CBD_N@Z
_TEXT	SEGMENT
_fn$ = 8						; size = 4
_b$ = 12						; size = 1
??$?0$0BL@@ioINILoader_e@@QAE@AAY0BL@$$CBD_N@Z PROC	; ioINILoader_e::ioINILoader_e<27>, COMDAT
; _this$ = ecx

; 224  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	8b 4d 08	 mov	 ecx, DWORD PTR _fn$[ebp]
  0000b	8a 11		 mov	 dl, BYTE PTR [ecx]
  0000d	8d 87 50 03 00
	00		 lea	 eax, DWORD PTR [edi+848]
  00013	84 d2		 test	 dl, dl
  00015	0f 84 6a 04 00
	00		 je	 $LN99@ioINILoade
  0001b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0001e	88 10		 mov	 BYTE PTR [eax], dl
  00020	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  00023	84 d2		 test	 dl, dl
  00025	0f 84 54 04 00
	00		 je	 $LN98@ioINILoade
  0002b	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0002e	88 50 01	 mov	 BYTE PTR [eax+1], dl
  00031	8a 51 02	 mov	 dl, BYTE PTR [ecx+2]
  00034	84 d2		 test	 dl, dl
  00036	0f 84 3d 04 00
	00		 je	 $LN97@ioINILoade
  0003c	b3 eb		 mov	 bl, -21			; ffffffebH
  0003e	32 d3		 xor	 dl, bl
  00040	88 50 02	 mov	 BYTE PTR [eax+2], dl
  00043	8a 51 03	 mov	 dl, BYTE PTR [ecx+3]
  00046	84 d2		 test	 dl, dl
  00048	0f 84 25 04 00
	00		 je	 $LN96@ioINILoade
  0004e	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00051	88 50 03	 mov	 BYTE PTR [eax+3], dl
  00054	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  00057	84 d2		 test	 dl, dl
  00059	0f 84 0e 04 00
	00		 je	 $LN95@ioINILoade
  0005f	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00062	88 50 04	 mov	 BYTE PTR [eax+4], dl
  00065	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  00068	84 d2		 test	 dl, dl
  0006a	0f 84 f7 03 00
	00		 je	 $LN94@ioINILoade
  00070	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00073	88 50 05	 mov	 BYTE PTR [eax+5], dl
  00076	8a 51 06	 mov	 dl, BYTE PTR [ecx+6]
  00079	84 d2		 test	 dl, dl
  0007b	0f 84 e1 03 00
	00		 je	 $LN93@ioINILoade
  00081	32 d3		 xor	 dl, bl
  00083	88 50 06	 mov	 BYTE PTR [eax+6], dl
  00086	8a 51 07	 mov	 dl, BYTE PTR [ecx+7]
  00089	84 d2		 test	 dl, dl
  0008b	0f 84 cb 03 00
	00		 je	 $LN92@ioINILoade
  00091	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00094	88 50 07	 mov	 BYTE PTR [eax+7], dl
  00097	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  0009a	84 d2		 test	 dl, dl
  0009c	0f 84 b4 03 00
	00		 je	 $LN91@ioINILoade
  000a2	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a5	88 50 08	 mov	 BYTE PTR [eax+8], dl
  000a8	8a 51 09	 mov	 dl, BYTE PTR [ecx+9]
  000ab	84 d2		 test	 dl, dl
  000ad	0f 84 9d 03 00
	00		 je	 $LN90@ioINILoade
  000b3	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b6	88 50 09	 mov	 BYTE PTR [eax+9], dl
  000b9	8a 51 0a	 mov	 dl, BYTE PTR [ecx+10]
  000bc	84 d2		 test	 dl, dl
  000be	0f 84 87 03 00
	00		 je	 $LN89@ioINILoade
  000c4	32 d3		 xor	 dl, bl
  000c6	88 50 0a	 mov	 BYTE PTR [eax+10], dl
  000c9	8a 51 0b	 mov	 dl, BYTE PTR [ecx+11]
  000cc	84 d2		 test	 dl, dl
  000ce	0f 84 71 03 00
	00		 je	 $LN88@ioINILoade
  000d4	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d7	88 50 0b	 mov	 BYTE PTR [eax+11], dl
  000da	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
  000dd	84 d2		 test	 dl, dl
  000df	0f 84 5a 03 00
	00		 je	 $LN87@ioINILoade
  000e5	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e8	88 50 0c	 mov	 BYTE PTR [eax+12], dl
  000eb	8a 51 0d	 mov	 dl, BYTE PTR [ecx+13]
  000ee	84 d2		 test	 dl, dl
  000f0	0f 84 43 03 00
	00		 je	 $LN86@ioINILoade
  000f6	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000f9	88 50 0d	 mov	 BYTE PTR [eax+13], dl
  000fc	8a 51 0e	 mov	 dl, BYTE PTR [ecx+14]
  000ff	84 d2		 test	 dl, dl
  00101	0f 84 2d 03 00
	00		 je	 $LN85@ioINILoade
  00107	32 d3		 xor	 dl, bl
  00109	88 50 0e	 mov	 BYTE PTR [eax+14], dl
  0010c	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  0010f	84 d2		 test	 dl, dl
  00111	0f 84 17 03 00
	00		 je	 $LN84@ioINILoade
  00117	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0011a	88 50 0f	 mov	 BYTE PTR [eax+15], dl
  0011d	8a 51 10	 mov	 dl, BYTE PTR [ecx+16]
  00120	84 d2		 test	 dl, dl
  00122	0f 84 00 03 00
	00		 je	 $LN83@ioINILoade
  00128	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0012b	88 50 10	 mov	 BYTE PTR [eax+16], dl
  0012e	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  00131	84 d2		 test	 dl, dl
  00133	0f 84 e9 02 00
	00		 je	 $LN82@ioINILoade
  00139	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0013c	88 50 11	 mov	 BYTE PTR [eax+17], dl
  0013f	8a 51 12	 mov	 dl, BYTE PTR [ecx+18]
  00142	84 d2		 test	 dl, dl
  00144	0f 84 d3 02 00
	00		 je	 $LN81@ioINILoade
  0014a	32 d3		 xor	 dl, bl
  0014c	88 50 12	 mov	 BYTE PTR [eax+18], dl
  0014f	8a 51 13	 mov	 dl, BYTE PTR [ecx+19]
  00152	84 d2		 test	 dl, dl
  00154	0f 84 bd 02 00
	00		 je	 $LN80@ioINILoade
  0015a	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0015d	88 50 13	 mov	 BYTE PTR [eax+19], dl
  00160	8a 51 14	 mov	 dl, BYTE PTR [ecx+20]
  00163	84 d2		 test	 dl, dl
  00165	0f 84 a6 02 00
	00		 je	 $LN79@ioINILoade
  0016b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0016e	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00171	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00174	84 d2		 test	 dl, dl
  00176	0f 84 8f 02 00
	00		 je	 $LN78@ioINILoade
  0017c	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0017f	88 50 15	 mov	 BYTE PTR [eax+21], dl
  00182	8a 51 16	 mov	 dl, BYTE PTR [ecx+22]
  00185	84 d2		 test	 dl, dl
  00187	0f 84 79 02 00
	00		 je	 $LN77@ioINILoade
  0018d	32 d3		 xor	 dl, bl
  0018f	88 50 16	 mov	 BYTE PTR [eax+22], dl
  00192	8a 51 17	 mov	 dl, BYTE PTR [ecx+23]
  00195	84 d2		 test	 dl, dl
  00197	0f 84 60 02 00
	00		 je	 $LN76@ioINILoade
  0019d	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001a0	88 50 17	 mov	 BYTE PTR [eax+23], dl
  001a3	8a 51 18	 mov	 dl, BYTE PTR [ecx+24]
  001a6	84 d2		 test	 dl, dl
  001a8	0f 84 46 02 00
	00		 je	 $LN75@ioINILoade
  001ae	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001b1	88 50 18	 mov	 BYTE PTR [eax+24], dl
  001b4	8a 51 19	 mov	 dl, BYTE PTR [ecx+25]
  001b7	84 d2		 test	 dl, dl
  001b9	0f 84 2c 02 00
	00		 je	 $LN74@ioINILoade
  001bf	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001c2	88 50 19	 mov	 BYTE PTR [eax+25], dl
  001c5	8a 51 1a	 mov	 dl, BYTE PTR [ecx+26]
  001c8	84 d2		 test	 dl, dl
  001ca	0f 84 13 02 00
	00		 je	 $LN73@ioINILoade
  001d0	32 d3		 xor	 dl, bl
  001d2	88 50 1a	 mov	 BYTE PTR [eax+26], dl
  001d5	8a 51 1b	 mov	 dl, BYTE PTR [ecx+27]
  001d8	84 d2		 test	 dl, dl
  001da	0f 84 fa 01 00
	00		 je	 $LN72@ioINILoade
  001e0	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001e3	88 50 1b	 mov	 BYTE PTR [eax+27], dl
  001e6	8a 51 1c	 mov	 dl, BYTE PTR [ecx+28]
  001e9	84 d2		 test	 dl, dl
  001eb	0f 84 e0 01 00
	00		 je	 $LN71@ioINILoade
  001f1	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001f4	88 50 1c	 mov	 BYTE PTR [eax+28], dl
  001f7	8a 51 1d	 mov	 dl, BYTE PTR [ecx+29]
  001fa	84 d2		 test	 dl, dl
  001fc	0f 84 c6 01 00
	00		 je	 $LN70@ioINILoade
  00202	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00205	88 50 1d	 mov	 BYTE PTR [eax+29], dl
  00208	8a 51 1e	 mov	 dl, BYTE PTR [ecx+30]
  0020b	84 d2		 test	 dl, dl
  0020d	0f 84 ad 01 00
	00		 je	 $LN69@ioINILoade
  00213	32 d3		 xor	 dl, bl
  00215	88 50 1e	 mov	 BYTE PTR [eax+30], dl
  00218	8a 51 1f	 mov	 dl, BYTE PTR [ecx+31]
  0021b	84 d2		 test	 dl, dl
  0021d	0f 84 94 01 00
	00		 je	 $LN68@ioINILoade
  00223	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00226	88 50 1f	 mov	 BYTE PTR [eax+31], dl
  00229	8a 51 20	 mov	 dl, BYTE PTR [ecx+32]
  0022c	84 d2		 test	 dl, dl
  0022e	0f 84 7a 01 00
	00		 je	 $LN67@ioINILoade
  00234	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00237	88 50 20	 mov	 BYTE PTR [eax+32], dl
  0023a	8a 51 21	 mov	 dl, BYTE PTR [ecx+33]
  0023d	84 d2		 test	 dl, dl
  0023f	0f 84 60 01 00
	00		 je	 $LN66@ioINILoade
  00245	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00248	88 50 21	 mov	 BYTE PTR [eax+33], dl
  0024b	8a 51 22	 mov	 dl, BYTE PTR [ecx+34]
  0024e	84 d2		 test	 dl, dl
  00250	0f 84 47 01 00
	00		 je	 $LN65@ioINILoade
  00256	32 d3		 xor	 dl, bl
  00258	88 50 22	 mov	 BYTE PTR [eax+34], dl
  0025b	8a 51 23	 mov	 dl, BYTE PTR [ecx+35]
  0025e	84 d2		 test	 dl, dl
  00260	0f 84 2e 01 00
	00		 je	 $LN64@ioINILoade
  00266	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00269	88 50 23	 mov	 BYTE PTR [eax+35], dl
  0026c	8a 51 24	 mov	 dl, BYTE PTR [ecx+36]
  0026f	84 d2		 test	 dl, dl
  00271	0f 84 14 01 00
	00		 je	 $LN63@ioINILoade
  00277	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0027a	88 50 24	 mov	 BYTE PTR [eax+36], dl
  0027d	8a 51 25	 mov	 dl, BYTE PTR [ecx+37]
  00280	84 d2		 test	 dl, dl
  00282	0f 84 fa 00 00
	00		 je	 $LN62@ioINILoade
  00288	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0028b	88 50 25	 mov	 BYTE PTR [eax+37], dl
  0028e	8a 51 26	 mov	 dl, BYTE PTR [ecx+38]
  00291	84 d2		 test	 dl, dl
  00293	0f 84 e1 00 00
	00		 je	 $LN61@ioINILoade
  00299	32 d3		 xor	 dl, bl
  0029b	88 50 26	 mov	 BYTE PTR [eax+38], dl
  0029e	8a 51 27	 mov	 dl, BYTE PTR [ecx+39]
  002a1	84 d2		 test	 dl, dl
  002a3	0f 84 c8 00 00
	00		 je	 $LN60@ioINILoade
  002a9	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002ac	88 50 27	 mov	 BYTE PTR [eax+39], dl
  002af	8a 51 28	 mov	 dl, BYTE PTR [ecx+40]
  002b2	84 d2		 test	 dl, dl
  002b4	0f 84 ae 00 00
	00		 je	 $LN59@ioINILoade
  002ba	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002bd	88 50 28	 mov	 BYTE PTR [eax+40], dl
  002c0	8a 51 29	 mov	 dl, BYTE PTR [ecx+41]
  002c3	84 d2		 test	 dl, dl
  002c5	0f 84 94 00 00
	00		 je	 $LN58@ioINILoade
  002cb	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002ce	88 50 29	 mov	 BYTE PTR [eax+41], dl
  002d1	8a 51 2a	 mov	 dl, BYTE PTR [ecx+42]
  002d4	84 d2		 test	 dl, dl
  002d6	74 7f		 je	 SHORT $LN57@ioINILoade
  002d8	32 d3		 xor	 dl, bl
  002da	88 50 2a	 mov	 BYTE PTR [eax+42], dl
  002dd	8a 51 2b	 mov	 dl, BYTE PTR [ecx+43]
  002e0	84 d2		 test	 dl, dl
  002e2	74 6a		 je	 SHORT $LN56@ioINILoade
  002e4	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002e7	88 50 2b	 mov	 BYTE PTR [eax+43], dl
  002ea	8a 51 2c	 mov	 dl, BYTE PTR [ecx+44]
  002ed	84 d2		 test	 dl, dl
  002ef	74 54		 je	 SHORT $LN55@ioINILoade
  002f1	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002f4	88 50 2c	 mov	 BYTE PTR [eax+44], dl
  002f7	8a 51 2d	 mov	 dl, BYTE PTR [ecx+45]
  002fa	84 d2		 test	 dl, dl
  002fc	74 3e		 je	 SHORT $LN54@ioINILoade
  002fe	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00301	88 50 2d	 mov	 BYTE PTR [eax+45], dl
  00304	8a 51 2e	 mov	 dl, BYTE PTR [ecx+46]
  00307	84 d2		 test	 dl, dl
  00309	74 29		 je	 SHORT $LN53@ioINILoade
  0030b	32 d3		 xor	 dl, bl
  0030d	88 50 2e	 mov	 BYTE PTR [eax+46], dl
  00310	8a 51 2f	 mov	 dl, BYTE PTR [ecx+47]
  00313	84 d2		 test	 dl, dl
  00315	74 14		 je	 SHORT $LN52@ioINILoade
  00317	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0031a	88 50 2f	 mov	 BYTE PTR [eax+47], dl
  0031d	8a 49 30	 mov	 cl, BYTE PTR [ecx+48]
  00320	80 f1 ed	 xor	 cl, -19			; ffffffedH
  00323	88 48 30	 mov	 BYTE PTR [eax+48], cl
  00326	e9 5d 01 00 00	 jmp	 $LN4@ioINILoade
$LN52@ioINILoade:
  0032b	c6 40 2f ea	 mov	 BYTE PTR [eax+47], -22	; ffffffeaH
  0032f	e9 54 01 00 00	 jmp	 $LN4@ioINILoade
$LN53@ioINILoade:
  00334	88 58 2e	 mov	 BYTE PTR [eax+46], bl
  00337	e9 4c 01 00 00	 jmp	 $LN4@ioINILoade
$LN54@ioINILoade:
  0033c	c6 40 2d ec	 mov	 BYTE PTR [eax+45], -20	; ffffffecH
  00340	e9 43 01 00 00	 jmp	 $LN4@ioINILoade
$LN55@ioINILoade:
  00345	c6 40 2c ed	 mov	 BYTE PTR [eax+44], -19	; ffffffedH
  00349	e9 3a 01 00 00	 jmp	 $LN4@ioINILoade
$LN56@ioINILoade:
  0034e	c6 40 2b ea	 mov	 BYTE PTR [eax+43], -22	; ffffffeaH
  00352	e9 31 01 00 00	 jmp	 $LN4@ioINILoade
$LN57@ioINILoade:
  00357	88 58 2a	 mov	 BYTE PTR [eax+42], bl
  0035a	e9 29 01 00 00	 jmp	 $LN4@ioINILoade
$LN58@ioINILoade:
  0035f	c6 40 29 ec	 mov	 BYTE PTR [eax+41], -20	; ffffffecH
  00363	e9 20 01 00 00	 jmp	 $LN4@ioINILoade
$LN59@ioINILoade:
  00368	c6 40 28 ed	 mov	 BYTE PTR [eax+40], -19	; ffffffedH
  0036c	e9 17 01 00 00	 jmp	 $LN4@ioINILoade
$LN60@ioINILoade:
  00371	c6 40 27 ea	 mov	 BYTE PTR [eax+39], -22	; ffffffeaH
  00375	e9 0e 01 00 00	 jmp	 $LN4@ioINILoade
$LN61@ioINILoade:
  0037a	88 58 26	 mov	 BYTE PTR [eax+38], bl
  0037d	e9 06 01 00 00	 jmp	 $LN4@ioINILoade
$LN62@ioINILoade:
  00382	c6 40 25 ec	 mov	 BYTE PTR [eax+37], -20	; ffffffecH
  00386	e9 fd 00 00 00	 jmp	 $LN4@ioINILoade
$LN63@ioINILoade:
  0038b	c6 40 24 ed	 mov	 BYTE PTR [eax+36], -19	; ffffffedH
  0038f	e9 f4 00 00 00	 jmp	 $LN4@ioINILoade
$LN64@ioINILoade:
  00394	c6 40 23 ea	 mov	 BYTE PTR [eax+35], -22	; ffffffeaH
  00398	e9 eb 00 00 00	 jmp	 $LN4@ioINILoade
$LN65@ioINILoade:
  0039d	88 58 22	 mov	 BYTE PTR [eax+34], bl
  003a0	e9 e3 00 00 00	 jmp	 $LN4@ioINILoade
$LN66@ioINILoade:
  003a5	c6 40 21 ec	 mov	 BYTE PTR [eax+33], -20	; ffffffecH
  003a9	e9 da 00 00 00	 jmp	 $LN4@ioINILoade
$LN67@ioINILoade:
  003ae	c6 40 20 ed	 mov	 BYTE PTR [eax+32], -19	; ffffffedH
  003b2	e9 d1 00 00 00	 jmp	 $LN4@ioINILoade
$LN68@ioINILoade:
  003b7	c6 40 1f ea	 mov	 BYTE PTR [eax+31], -22	; ffffffeaH
  003bb	e9 c8 00 00 00	 jmp	 $LN4@ioINILoade
$LN69@ioINILoade:
  003c0	88 58 1e	 mov	 BYTE PTR [eax+30], bl
  003c3	e9 c0 00 00 00	 jmp	 $LN4@ioINILoade
$LN70@ioINILoade:
  003c8	c6 40 1d ec	 mov	 BYTE PTR [eax+29], -20	; ffffffecH
  003cc	e9 b7 00 00 00	 jmp	 $LN4@ioINILoade
$LN71@ioINILoade:
  003d1	c6 40 1c ed	 mov	 BYTE PTR [eax+28], -19	; ffffffedH
  003d5	e9 ae 00 00 00	 jmp	 $LN4@ioINILoade
$LN72@ioINILoade:
  003da	c6 40 1b ea	 mov	 BYTE PTR [eax+27], -22	; ffffffeaH
  003de	e9 a5 00 00 00	 jmp	 $LN4@ioINILoade
$LN73@ioINILoade:
  003e3	88 58 1a	 mov	 BYTE PTR [eax+26], bl
  003e6	e9 9d 00 00 00	 jmp	 $LN4@ioINILoade
$LN74@ioINILoade:
  003eb	c6 40 19 ec	 mov	 BYTE PTR [eax+25], -20	; ffffffecH
  003ef	e9 94 00 00 00	 jmp	 $LN4@ioINILoade
$LN75@ioINILoade:
  003f4	c6 40 18 ed	 mov	 BYTE PTR [eax+24], -19	; ffffffedH
  003f8	e9 8b 00 00 00	 jmp	 $LN4@ioINILoade
$LN76@ioINILoade:
  003fd	c6 40 17 ea	 mov	 BYTE PTR [eax+23], -22	; ffffffeaH
  00401	e9 82 00 00 00	 jmp	 $LN4@ioINILoade
$LN77@ioINILoade:
  00406	88 58 16	 mov	 BYTE PTR [eax+22], bl
  00409	eb 7d		 jmp	 SHORT $LN4@ioINILoade
$LN78@ioINILoade:
  0040b	c6 40 15 ec	 mov	 BYTE PTR [eax+21], -20	; ffffffecH
  0040f	eb 77		 jmp	 SHORT $LN4@ioINILoade
$LN79@ioINILoade:
  00411	c6 40 14 ed	 mov	 BYTE PTR [eax+20], -19	; ffffffedH
  00415	eb 71		 jmp	 SHORT $LN4@ioINILoade
$LN80@ioINILoade:
  00417	c6 40 13 ea	 mov	 BYTE PTR [eax+19], -22	; ffffffeaH
  0041b	eb 6b		 jmp	 SHORT $LN4@ioINILoade
$LN81@ioINILoade:
  0041d	88 58 12	 mov	 BYTE PTR [eax+18], bl
  00420	eb 66		 jmp	 SHORT $LN4@ioINILoade
$LN82@ioINILoade:
  00422	c6 40 11 ec	 mov	 BYTE PTR [eax+17], -20	; ffffffecH
  00426	eb 60		 jmp	 SHORT $LN4@ioINILoade
$LN83@ioINILoade:
  00428	c6 40 10 ed	 mov	 BYTE PTR [eax+16], -19	; ffffffedH
  0042c	eb 5a		 jmp	 SHORT $LN4@ioINILoade
$LN84@ioINILoade:
  0042e	c6 40 0f ea	 mov	 BYTE PTR [eax+15], -22	; ffffffeaH
  00432	eb 54		 jmp	 SHORT $LN4@ioINILoade
$LN85@ioINILoade:
  00434	88 58 0e	 mov	 BYTE PTR [eax+14], bl
  00437	eb 4f		 jmp	 SHORT $LN4@ioINILoade
$LN86@ioINILoade:
  00439	c6 40 0d ec	 mov	 BYTE PTR [eax+13], -20	; ffffffecH
  0043d	eb 49		 jmp	 SHORT $LN4@ioINILoade
$LN87@ioINILoade:
  0043f	c6 40 0c ed	 mov	 BYTE PTR [eax+12], -19	; ffffffedH
  00443	eb 43		 jmp	 SHORT $LN4@ioINILoade
$LN88@ioINILoade:
  00445	c6 40 0b ea	 mov	 BYTE PTR [eax+11], -22	; ffffffeaH
  00449	eb 3d		 jmp	 SHORT $LN4@ioINILoade
$LN89@ioINILoade:
  0044b	88 58 0a	 mov	 BYTE PTR [eax+10], bl
  0044e	eb 38		 jmp	 SHORT $LN4@ioINILoade
$LN90@ioINILoade:
  00450	c6 40 09 ec	 mov	 BYTE PTR [eax+9], -20	; ffffffecH
  00454	eb 32		 jmp	 SHORT $LN4@ioINILoade
$LN91@ioINILoade:
  00456	c6 40 08 ed	 mov	 BYTE PTR [eax+8], -19	; ffffffedH
  0045a	eb 2c		 jmp	 SHORT $LN4@ioINILoade
$LN92@ioINILoade:
  0045c	c6 40 07 ea	 mov	 BYTE PTR [eax+7], -22	; ffffffeaH
  00460	eb 26		 jmp	 SHORT $LN4@ioINILoade
$LN93@ioINILoade:
  00462	88 58 06	 mov	 BYTE PTR [eax+6], bl
  00465	eb 21		 jmp	 SHORT $LN4@ioINILoade
$LN94@ioINILoade:
  00467	c6 40 05 ec	 mov	 BYTE PTR [eax+5], -20	; ffffffecH
  0046b	eb 1b		 jmp	 SHORT $LN4@ioINILoade
$LN95@ioINILoade:
  0046d	c6 40 04 ed	 mov	 BYTE PTR [eax+4], -19	; ffffffedH
  00471	eb 15		 jmp	 SHORT $LN4@ioINILoade
$LN96@ioINILoade:
  00473	c6 40 03 ea	 mov	 BYTE PTR [eax+3], -22	; ffffffeaH
  00477	eb 0f		 jmp	 SHORT $LN4@ioINILoade
$LN97@ioINILoade:
  00479	c6 40 02 eb	 mov	 BYTE PTR [eax+2], -21	; ffffffebH
  0047d	eb 09		 jmp	 SHORT $LN4@ioINILoade
$LN98@ioINILoade:
  0047f	c6 40 01 ec	 mov	 BYTE PTR [eax+1], -20	; ffffffecH
  00483	eb 03		 jmp	 SHORT $LN4@ioINILoade
$LN99@ioINILoade:
  00485	c6 00 ed	 mov	 BYTE PTR [eax], -19	; ffffffedH
$LN4@ioINILoade:
  00488	6a 06		 push	 6
  0048a	8b c8		 mov	 ecx, eax
  0048c	c6 40 1a 00	 mov	 BYTE PTR [eax+26], 0
  00490	5a		 pop	 edx
$LL107@ioINILoade:
  00491	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  00497	83 c1 04	 add	 ecx, 4
  0049a	4a		 dec	 edx
  0049b	75 f4		 jne	 SHORT $LL107@ioINILoade
  0049d	6a 18		 push	 24			; 00000018H
  0049f	5e		 pop	 esi
$LL104@ioINILoade:
  004a0	8b ce		 mov	 ecx, esi
  004a2	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  004a8	79 05		 jns	 SHORT $LN114@ioINILoade
  004aa	49		 dec	 ecx
  004ab	83 c9 fc	 or	 ecx, -4			; fffffffcH
  004ae	41		 inc	 ecx
$LN114@ioINILoade:
  004af	b2 ed		 mov	 dl, -19			; ffffffedH
  004b1	2a d1		 sub	 dl, cl
  004b3	30 14 06	 xor	 BYTE PTR [esi+eax], dl
  004b6	46		 inc	 esi
  004b7	83 fe 1a	 cmp	 esi, 26			; 0000001aH
  004ba	7c e4		 jl	 SHORT $LL104@ioINILoade
  004bc	ff 75 0c	 push	 DWORD PTR _b$[ebp]
  004bf	8b cf		 mov	 ecx, edi
  004c1	50		 push	 eax
  004c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@PBD_N@Z

; 225  : 	}

  004c8	8b c7		 mov	 eax, edi
  004ca	5f		 pop	 edi
  004cb	5e		 pop	 esi
  004cc	5b		 pop	 ebx
  004cd	5d		 pop	 ebp
  004ce	c2 08 00	 ret	 8
??$?0$0BL@@ioINILoader_e@@QAE@AAY0BL@$$CBD_N@Z ENDP	; ioINILoader_e::ioINILoader_e<27>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@ABU34@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@ABU23@@Z ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase,ioEventGoodsMgr::GoodsDatabase const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@ABU34@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@ABU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@ABU34@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@ABU23@@Z PROC ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase,ioEventGoodsMgr::GoodsDatabase const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00004	8b 7d 0c	 mov	 edi, DWORD PTR __Pdest$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN9@Cons_val@3
  0000b	56		 push	 esi
  0000c	8b 75 10	 mov	 esi, DWORD PTR __Src$[ebp]
  0000f	6a 09		 push	 9
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN9@Cons_val@3:
  00015	5f		 pop	 edi

; 281  : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Cons_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@ABU34@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@ABU23@@Z ENDP ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase,ioEventGoodsMgr::GoodsDatabase const &>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@ABU34@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@ABU23@@Z ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData,ioEventGoodsMgr::GoodsData const &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@ABU34@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@ABU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@ABU34@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@ABU23@@Z PROC ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData,ioEventGoodsMgr::GoodsData const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00004	8b 7d 0c	 mov	 edi, DWORD PTR __Pdest$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN9@Cons_val@4
  0000b	56		 push	 esi
  0000c	8b 75 10	 mov	 esi, DWORD PTR __Src$[ebp]
  0000f	6a 0c		 push	 12			; 0000000cH
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN9@Cons_val@4:
  00015	5f		 pop	 edi

; 281  : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Cons_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@ABU34@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@ABU23@@Z ENDP ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData,ioEventGoodsMgr::GoodsData const &>
_TEXT	ENDS
PUBLIC	??$_Move@PAUGoodsData@ioEventGoodsMgr@@PAU12@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00@Z ; std::_Move<ioEventGoodsMgr::GoodsData *,ioEventGoodsMgr::GoodsData *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAUGoodsData@ioEventGoodsMgr@@PAU12@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00@Z
_TEXT	SEGMENT
__Cat$509273 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAUGoodsData@ioEventGoodsMgr@@PAU12@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00@Z PROC ; std::_Move<ioEventGoodsMgr::GoodsData *,ioEventGoodsMgr::GoodsData *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$509273[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAUGoodsData@ioEventGoodsMgr@@PAU12@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioEventGoodsMgr::GoodsData *,ioEventGoodsMgr::GoodsData *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAUGoodsData@ioEventGoodsMgr@@PAU12@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00@Z ENDP ; std::_Move<ioEventGoodsMgr::GoodsData *,ioEventGoodsMgr::GoodsData *>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@@Z ; std::_Dest_val<std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@@Z PROC ; std::_Dest_val<std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase>, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@@Z ENDP ; std::_Dest_val<std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@@Z ; std::_Dest_val<std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData>
; Function compile flags: /Ogsp
;	COMDAT ??$_Dest_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@@Z PROC ; std::_Dest_val<std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData>, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@@Z ENDP ; std::_Dest_val<std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@U34@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@$$QAU23@@Z ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase,ioEventGoodsMgr::GoodsDatabase>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@U34@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@$$QAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@U34@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@$$QAU23@@Z PROC ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase,ioEventGoodsMgr::GoodsDatabase>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00004	8b 7d 0c	 mov	 edi, DWORD PTR __Pdest$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN7@Cons_val@5
  0000b	56		 push	 esi
  0000c	8b 75 10	 mov	 esi, DWORD PTR __Src$[ebp]
  0000f	6a 09		 push	 9
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN7@Cons_val@5:
  00015	5f		 pop	 edi

; 281  : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Cons_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@U34@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@$$QAU23@@Z ENDP ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase,ioEventGoodsMgr::GoodsDatabase>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@U34@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@$$QAU23@@Z ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData,ioEventGoodsMgr::GoodsData>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@U34@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@$$QAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@U34@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@$$QAU23@@Z PROC ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData,ioEventGoodsMgr::GoodsData>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00004	8b 7d 0c	 mov	 edi, DWORD PTR __Pdest$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN7@Cons_val@6
  0000b	56		 push	 esi
  0000c	8b 75 10	 mov	 esi, DWORD PTR __Src$[ebp]
  0000f	6a 0c		 push	 12			; 0000000cH
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN7@Cons_val@6:
  00015	5f		 pop	 edi

; 281  : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Cons_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@U34@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@$$QAU23@@Z ENDP ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData,ioEventGoodsMgr::GoodsData>
_TEXT	ENDS
PUBLIC	?begin@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@2@XZ ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::begin
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?begin@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@2@XZ PROC ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@2@XZ ENDP ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@2@XZ ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@2@XZ PROC ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@@2@XZ ENDP ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::end
_TEXT	ENDS
PUBLIC	?begin@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@XZ ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@XZ PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@XZ ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@XZ ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@XZ PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@XZ ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::end
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@YAXPAUGoodsDatabase@ioEventGoodsMgr@@0AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ioEventGoodsMgr::GoodsDatabase> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@YAXPAUGoodsDatabase@ioEventGoodsMgr@@0AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@YAXPAUGoodsDatabase@ioEventGoodsMgr@@0AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ioEventGoodsMgr::GoodsDatabase> >, COMDAT

; 96   : 	for (; _First != _Last; ++_First)
; 97   : 		_Dest_val(_Al, _First);
; 98   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@YAXPAUGoodsDatabase@ioEventGoodsMgr@@0AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioEventGoodsMgr::GoodsDatabase> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@YAXPAUGoodsData@ioEventGoodsMgr@@0AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ioEventGoodsMgr::GoodsData> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy_range@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@YAXPAUGoodsData@ioEventGoodsMgr@@0AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@YAXPAUGoodsData@ioEventGoodsMgr@@0AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ioEventGoodsMgr::GoodsData> >, COMDAT

; 96   : 	for (; _First != _Last; ++_First)
; 97   : 		_Dest_val(_Al, _First);
; 98   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@YAXPAUGoodsData@ioEventGoodsMgr@@0AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioEventGoodsMgr::GoodsData> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAUGoodsDatabase@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@U12@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioEventGoodsMgr::GoodsDatabase *,ioEventGoodsMgr::GoodsDatabase *,std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@PAUGoodsDatabase@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@U12@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUGoodsDatabase@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@U12@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<ioEventGoodsMgr::GoodsDatabase *,ioEventGoodsMgr::GoodsDatabase *,std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase>, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 16		 jmp	 SHORT $LN24@Uninit_mov
$LL6@Uninit_mov:

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

  00009	56		 push	 esi
  0000a	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000d	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@U34@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@$$QAU23@@Z ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase,ioEventGoodsMgr::GoodsDatabase>
  00015	83 45 10 24	 add	 DWORD PTR __Dest$[ebp], 36 ; 00000024H
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001c	83 c6 24	 add	 esi, 36			; 00000024H
$LN24@Uninit_mov:

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  0001f	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00022	75 e5		 jne	 SHORT $LL6@Uninit_mov

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)
; 434  : 		_Dest_val(_Al, _Next);
; 435  : 	_RERAISE;
; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

  00024	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00027	5e		 pop	 esi

; 438  : 	}

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$_Uninit_move@PAUGoodsDatabase@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@U12@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<ioEventGoodsMgr::GoodsDatabase *,ioEventGoodsMgr::GoodsDatabase *,std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAUGoodsData@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@U12@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioEventGoodsMgr::GoodsData *,ioEventGoodsMgr::GoodsData *,std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData>
; Function compile flags: /Ogsp
;	COMDAT ??$_Uninit_move@PAUGoodsData@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@U12@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUGoodsData@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@U12@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<ioEventGoodsMgr::GoodsData *,ioEventGoodsMgr::GoodsData *,std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData>, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 16		 jmp	 SHORT $LN24@Uninit_mov@2
$LL6@Uninit_mov@2:

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

  00009	56		 push	 esi
  0000a	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000d	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@U34@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@$$QAU23@@Z ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData,ioEventGoodsMgr::GoodsData>
  00015	83 45 10 30	 add	 DWORD PTR __Dest$[ebp], 48 ; 00000030H
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001c	83 c6 30	 add	 esi, 48			; 00000030H
$LN24@Uninit_mov@2:

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  0001f	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00022	75 e5		 jne	 SHORT $LL6@Uninit_mov@2

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)
; 434  : 		_Dest_val(_Al, _Next);
; 435  : 	_RERAISE;
; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

  00024	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00027	5e		 pop	 esi

; 438  : 	}

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$_Uninit_move@PAUGoodsData@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@U12@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<ioEventGoodsMgr::GoodsData *,ioEventGoodsMgr::GoodsData *,std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData>
_TEXT	ENDS
PUBLIC	??_R0?AVNewShopBuyWnd@@@8			; NewShopBuyWnd `RTTI Type Descriptor'
PUBLIC	?BuyGoodsComplete@ioEventGoodsMgr@@QAEXKKH@Z	; ioEventGoodsMgr::BuyGoodsComplete
EXTRN	?ShowOnlyBoughtBtns@NewShopBuyWnd@@QAEX_N@Z:PROC ; NewShopBuyWnd::ShowOnlyBoughtBtns
EXTRN	__imp_?FindChildWnd@ioWnd@@QAEPAV1@K@Z:PROC
EXTRN	?UseEtcCoinMoney@ioMyInfo@@QAEXKH@Z:PROC	; ioMyInfo::UseEtcCoinMoney
EXTRN	?GetSingleton@ioMyInfo@@SAAAV1@XZ:PROC		; ioMyInfo::GetSingleton
;	COMDAT ??_R0?AVNewShopBuyWnd@@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_DATA	SEGMENT
??_R0?AVNewShopBuyWnd@@@8 DD FLAT:??_7type_info@@6B@	; NewShopBuyWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNewShopBuyWnd@@', 00H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioeventgoodsmgr.cpp
_DATA	ENDS
;	COMDAT ?BuyGoodsComplete@ioEventGoodsMgr@@QAEXKKH@Z
_TEXT	SEGMENT
_dwGoodsIndex$ = 8					; size = 4
_dwEtcItem$ = 12					; size = 4
_pNewShopWnd$505675 = 16				; size = 4
_iNeedCoin$ = 16					; size = 4
?BuyGoodsComplete@ioEventGoodsMgr@@QAEXKKH@Z PROC	; ioEventGoodsMgr::BuyGoodsComplete, COMDAT
; _this$ = ecx

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 194  : 	// 구매 코인 감소			
; 195  : 	g_MyInfo.UseEtcCoinMoney( dwEtcItem, iNeedCoin );

  00005	ff 75 10	 push	 DWORD PTR _iNeedCoin$[ebp]
  00008	8b f9		 mov	 edi, ecx
  0000a	ff 75 0c	 push	 DWORD PTR _dwEtcItem$[ebp]
  0000d	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00012	8b c8		 mov	 ecx, eax
  00014	e8 00 00 00 00	 call	 ?UseEtcCoinMoney@ioMyInfo@@QAEXKH@Z ; ioMyInfo::UseEtcCoinMoney

; 196  : 
; 197  : 	vGoodsData::iterator iter = m_GoodsDataList.begin();

  00019	8b 77 14	 mov	 esi, DWORD PTR [edi+20]

; 198  : 	for(;iter != m_GoodsDataList.end();iter++)

  0001c	8b 7f 18	 mov	 edi, DWORD PTR [edi+24]
  0001f	eb 0b		 jmp	 SHORT $LN47@BuyGoodsCo
$LL24@BuyGoodsCo:

; 199  : 	{
; 200  : 		GoodsData &rkData = *iter;
; 201  : 		if( rkData.m_Database.m_dwGoodsIndex != dwGoodsIndex ) continue;

  00021	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00024	3b 45 08	 cmp	 eax, DWORD PTR _dwGoodsIndex$[ebp]
  00027	74 0c		 je	 SHORT $LN4@BuyGoodsCo

; 198  : 	for(;iter != m_GoodsDataList.end();iter++)

  00029	83 c6 30	 add	 esi, 48			; 00000030H
$LN47@BuyGoodsCo:
  0002c	3b f7		 cmp	 esi, edi
  0002e	75 f1		 jne	 SHORT $LL24@BuyGoodsCo
  00030	e9 98 00 00 00	 jmp	 $LN1@BuyGoodsCo
$LN4@BuyGoodsCo:

; 202  : 
; 203  : 		if( rkData.m_iGoodsCount != EVENT_GOODS_INFINITY_COUNT )

  00035	8b 06		 mov	 eax, DWORD PTR [esi]
  00037	53		 push	 ebx
  00038	33 db		 xor	 ebx, ebx
  0003a	83 f8 ff	 cmp	 eax, -1
  0003d	74 08		 je	 SHORT $LN3@BuyGoodsCo

; 204  : 			rkData.m_iGoodsCount = max( 0, rkData.m_iGoodsCount - 1 );	

  0003f	48		 dec	 eax
  00040	3b c3		 cmp	 eax, ebx
  00042	0f 4c c3	 cmovl	 eax, ebx
  00045	89 06		 mov	 DWORD PTR [esi], eax
$LN3@BuyGoodsCo:

; 205  : 
; 206  : 		NewShopWnd *pNewShopWnd = dynamic_cast< NewShopWnd *>( g_GUIMgr.FindWnd( NEW_SHOP_WND ) );

  00047	53		 push	 ebx
  00048	68 00 00 00 00	 push	 OFFSET ??_R0?AVNewShopWnd@@@8
  0004d	bf 00 00 00 00	 mov	 edi, OFFSET ??_R0?AVioWnd@@@8
  00052	57		 push	 edi
  00053	53		 push	 ebx
  00054	68 f8 17 00 00	 push	 6136			; 000017f8H
  00059	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  0005e	8b c8		 mov	 ecx, eax
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindWnd@ioGUIManager@@QAEPAVioWnd@@K@Z
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ___RTDynamicCast
  0006c	8b c8		 mov	 ecx, eax
  0006e	83 c4 14	 add	 esp, 20			; 00000014H
  00071	89 4d 10	 mov	 DWORD PTR _pNewShopWnd$505675[ebp], ecx

; 207  : 		if( pNewShopWnd && pNewShopWnd->IsShow() )

  00074	3b cb		 cmp	 ecx, ebx
  00076	74 54		 je	 SHORT $LN46@BuyGoodsCo
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsShow@ioWnd@@QBE_NXZ
  0007e	84 c0		 test	 al, al
  00080	74 4a		 je	 SHORT $LN46@BuyGoodsCo

; 208  : 		{
; 209  : 			pNewShopWnd->GoodsSyncComplete( EST_NONE, false, dwEtcItem, rkData.m_Database.m_iPresentValue1, 0 );

  00082	8b 4d 10	 mov	 ecx, DWORD PTR _pNewShopWnd$505675[ebp]
  00085	53		 push	 ebx
  00086	ff 76 14	 push	 DWORD PTR [esi+20]
  00089	ff 75 0c	 push	 DWORD PTR _dwEtcItem$[ebp]
  0008c	53		 push	 ebx
  0008d	53		 push	 ebx
  0008e	e8 00 00 00 00	 call	 ?GoodsSyncComplete@NewShopWnd@@QAEXW4EventShopType@@_NKHH@Z ; NewShopWnd::GoodsSyncComplete

; 210  : 
; 211  : 			NewShopBuyWnd *pNewShopBuyWnd = dynamic_cast<NewShopBuyWnd*> ( pNewShopWnd->FindChildWnd( NewShopWnd::ID_BUY_WND ) );

  00093	8b 4d 10	 mov	 ecx, DWORD PTR _pNewShopWnd$505675[ebp]
  00096	53		 push	 ebx
  00097	68 00 00 00 00	 push	 OFFSET ??_R0?AVNewShopBuyWnd@@@8
  0009c	57		 push	 edi
  0009d	53		 push	 ebx
  0009e	68 91 01 00 00	 push	 401			; 00000191H
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindChildWnd@ioWnd@@QAEPAV1@K@Z
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ___RTDynamicCast
  000af	8b f0		 mov	 esi, eax
  000b1	83 c4 14	 add	 esp, 20			; 00000014H

; 212  : 			if( pNewShopBuyWnd && pNewShopBuyWnd->IsShow() )

  000b4	3b f3		 cmp	 esi, ebx
  000b6	74 14		 je	 SHORT $LN46@BuyGoodsCo
  000b8	8b ce		 mov	 ecx, esi
  000ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsShow@ioWnd@@QBE_NXZ
  000c0	84 c0		 test	 al, al
  000c2	74 08		 je	 SHORT $LN46@BuyGoodsCo

; 213  : 				pNewShopBuyWnd->ShowOnlyBoughtBtns();

  000c4	53		 push	 ebx
  000c5	8b ce		 mov	 ecx, esi
  000c7	e8 00 00 00 00	 call	 ?ShowOnlyBoughtBtns@NewShopBuyWnd@@QAEX_N@Z ; NewShopBuyWnd::ShowOnlyBoughtBtns
$LN46@BuyGoodsCo:
  000cc	5b		 pop	 ebx
$LN1@BuyGoodsCo:
  000cd	5f		 pop	 edi
  000ce	5e		 pop	 esi

; 214  : 		}
; 215  : 		break;
; 216  : 	}
; 217  : }

  000cf	5d		 pop	 ebp
  000d0	c2 0c 00	 ret	 12			; 0000000cH
?BuyGoodsComplete@ioEventGoodsMgr@@QAEXKKH@Z ENDP	; ioEventGoodsMgr::BuyGoodsComplete
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@YAXPAUGoodsDatabase@ioEventGoodsMgr@@0AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@@Z ; std::_Destroy_range<std::allocator<ioEventGoodsMgr::GoodsDatabase> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@YAXPAUGoodsDatabase@ioEventGoodsMgr@@0AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@YAXPAUGoodsDatabase@ioEventGoodsMgr@@0AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ioEventGoodsMgr::GoodsDatabase> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@YAXPAUGoodsDatabase@ioEventGoodsMgr@@0AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioEventGoodsMgr::GoodsDatabase> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@YAXPAUGoodsData@ioEventGoodsMgr@@0AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@@Z ; std::_Destroy_range<std::allocator<ioEventGoodsMgr::GoodsData> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy_range@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@YAXPAUGoodsData@ioEventGoodsMgr@@0AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@YAXPAUGoodsData@ioEventGoodsMgr@@0AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ioEventGoodsMgr::GoodsData> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@YAXPAUGoodsData@ioEventGoodsMgr@@0AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioEventGoodsMgr::GoodsData> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAUGoodsDatabase@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@@Z ; std::_Uninitialized_move<ioEventGoodsMgr::GoodsDatabase *,ioEventGoodsMgr::GoodsDatabase *,std::allocator<ioEventGoodsMgr::GoodsDatabase> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAUGoodsDatabase@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@@Z
_TEXT	SEGMENT
__Cat$509697 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUGoodsDatabase@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@@Z PROC ; std::_Uninitialized_move<ioEventGoodsMgr::GoodsDatabase *,ioEventGoodsMgr::GoodsDatabase *,std::allocator<ioEventGoodsMgr::GoodsDatabase> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$509697[ebp]
  00007	6a 00		 push	 0
  00009	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000c	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00012	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00015	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUGoodsDatabase@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@U12@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioEventGoodsMgr::GoodsDatabase *,ioEventGoodsMgr::GoodsDatabase *,std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase>
  0001a	83 c4 18	 add	 esp, 24			; 00000018H

; 472  : 	}

  0001d	c9		 leave
  0001e	c3		 ret	 0
??$_Uninitialized_move@PAUGoodsDatabase@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@@Z ENDP ; std::_Uninitialized_move<ioEventGoodsMgr::GoodsDatabase *,ioEventGoodsMgr::GoodsDatabase *,std::allocator<ioEventGoodsMgr::GoodsDatabase> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAUGoodsData@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@@Z ; std::_Uninitialized_move<ioEventGoodsMgr::GoodsData *,ioEventGoodsMgr::GoodsData *,std::allocator<ioEventGoodsMgr::GoodsData> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Uninitialized_move@PAUGoodsData@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@@Z
_TEXT	SEGMENT
__Cat$509707 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUGoodsData@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@@Z PROC ; std::_Uninitialized_move<ioEventGoodsMgr::GoodsData *,ioEventGoodsMgr::GoodsData *,std::allocator<ioEventGoodsMgr::GoodsData> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$509707[ebp]
  00007	6a 00		 push	 0
  00009	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000c	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00012	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00015	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUGoodsData@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@U12@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioEventGoodsMgr::GoodsData *,ioEventGoodsMgr::GoodsData *,std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData>
  0001a	83 c4 18	 add	 esp, 24			; 00000018H

; 472  : 	}

  0001d	c9		 leave
  0001e	c3		 ret	 0
??$_Uninitialized_move@PAUGoodsData@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@@Z ENDP ; std::_Uninitialized_move<ioEventGoodsMgr::GoodsData *,ioEventGoodsMgr::GoodsData *,std::allocator<ioEventGoodsMgr::GoodsData> >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEXPAUGoodsDatabase@ioEventGoodsMgr@@0@Z ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEXPAUGoodsDatabase@ioEventGoodsMgr@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEXPAUGoodsDatabase@ioEventGoodsMgr@@0@Z PROC ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEXPAUGoodsDatabase@ioEventGoodsMgr@@0@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEXPAUGoodsData@ioEventGoodsMgr@@0@Z ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEXPAUGoodsData@ioEventGoodsMgr@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEXPAUGoodsData@ioEventGoodsMgr@@0@Z PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEXPAUGoodsData@ioEventGoodsMgr@@0@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Destroy
_TEXT	ENDS
PUBLIC	??$_Umove@PAUGoodsDatabase@ioEventGoodsMgr@@@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEPAUGoodsDatabase@ioEventGoodsMgr@@PAU23@00@Z ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Umove<ioEventGoodsMgr::GoodsDatabase *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Umove@PAUGoodsDatabase@ioEventGoodsMgr@@@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEPAUGoodsDatabase@ioEventGoodsMgr@@PAU23@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUGoodsDatabase@ioEventGoodsMgr@@@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEPAUGoodsDatabase@ioEventGoodsMgr@@PAU23@00@Z PROC ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Umove<ioEventGoodsMgr::GoodsDatabase *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUGoodsDatabase@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@@Z ; std::_Uninitialized_move<ioEventGoodsMgr::GoodsDatabase *,ioEventGoodsMgr::GoodsDatabase *,std::allocator<ioEventGoodsMgr::GoodsDatabase> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAUGoodsDatabase@ioEventGoodsMgr@@@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEPAUGoodsDatabase@ioEventGoodsMgr@@PAU23@00@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Umove<ioEventGoodsMgr::GoodsDatabase *>
_TEXT	ENDS
PUBLIC	??$_Umove@PAUGoodsData@ioEventGoodsMgr@@@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEPAUGoodsData@ioEventGoodsMgr@@PAU23@00@Z ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Umove<ioEventGoodsMgr::GoodsData *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Umove@PAUGoodsData@ioEventGoodsMgr@@@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEPAUGoodsData@ioEventGoodsMgr@@PAU23@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUGoodsData@ioEventGoodsMgr@@@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEPAUGoodsData@ioEventGoodsMgr@@PAU23@00@Z PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Umove<ioEventGoodsMgr::GoodsData *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUGoodsData@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@@Z ; std::_Uninitialized_move<ioEventGoodsMgr::GoodsData *,ioEventGoodsMgr::GoodsData *,std::allocator<ioEventGoodsMgr::GoodsData> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAUGoodsData@ioEventGoodsMgr@@@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEPAUGoodsData@ioEventGoodsMgr@@PAU23@00@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Umove<ioEventGoodsMgr::GoodsData *>
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEXXZ ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Tidy
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEXXZ PROC ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN21@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN21@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEXXZ ENDP ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@0@Z ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$509983 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@0@Z PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __First_arg$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	8b f1		 mov	 esi, ecx
  0000d	89 07		 mov	 DWORD PTR [edi], eax

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 45 10	 cmp	 eax, DWORD PTR __Last_arg$[ebp]
  00012	74 16		 je	 SHORT $LN1@erase

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	ff 75 10	 push	 DWORD PTR __Cat$509983[ebp]
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  0001f	e8 00 00 00 00	 call	 ??$_Move@PAUGoodsData@ioEventGoodsMgr@@PAU12@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioEventGoodsMgr::GoodsData *,ioEventGoodsMgr::GoodsData *>
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

  00027	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN1@erase:

; 1212 : 			}
; 1213 : 		return (_First);

  0002a	8b c7		 mov	 eax, edi
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi

; 1214 : 		}

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@0@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEXXZ ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Tidy
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEXXZ PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN21@Tidy@2

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN21@Tidy@2:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEXXZ ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Tidy
_TEXT	ENDS
PUBLIC	?reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::reserve
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3_catch:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
__Ptr$505931 = 8					; size = 4
__Count$ = 8						; size = 4
?reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z PROC ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx

; 747  : 		if (max_size() < _Count)

  0000e	8b 5d 08	 mov	 ebx, DWORD PTR __Count$[ebp]
  00011	81 fb c7 71 1c
	07		 cmp	 ebx, 119304647		; 071c71c7H
  00017	76 0b		 jbe	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN56@reserve:
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  00024	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00027	2b 06		 sub	 eax, DWORD PTR [esi]
  00029	6a 24		 push	 36			; 00000024H
  0002b	99		 cdq
  0002c	59		 pop	 ecx
  0002d	f7 f9		 idiv	 ecx
  0002f	3b c3		 cmp	 eax, ebx
  00031	73 6b		 jae	 SHORT $LN3@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00033	6a 00		 push	 0
  00035	53		 push	 ebx
  00036	e8 00 00 00 00	 call	 ??$_Allocate@UGoodsDatabase@ioEventGoodsMgr@@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@IPAU12@@Z ; std::_Allocate<ioEventGoodsMgr::GoodsDatabase>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  0003b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0003d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00041	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00044	52		 push	 edx
  00045	89 45 08	 mov	 DWORD PTR __Ptr$505931[ebp], eax
  00048	ff 75 08	 push	 DWORD PTR __Ptr$505931[ebp]
  0004b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004e	50		 push	 eax
  0004f	51		 push	 ecx
  00050	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUGoodsDatabase@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@YAPAUGoodsDatabase@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@@Z ; std::_Uninitialized_move<ioEventGoodsMgr::GoodsDatabase *,ioEventGoodsMgr::GoodsDatabase *,std::allocator<ioEventGoodsMgr::GoodsDatabase> >

; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00055	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00057	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0005a	83 c4 18	 add	 esp, 24			; 00000018H
  0005d	2b c1		 sub	 eax, ecx
  0005f	6a 24		 push	 36			; 00000024H
  00061	99		 cdq
  00062	5f		 pop	 edi
  00063	f7 ff		 idiv	 edi
  00065	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  00069	8b f8		 mov	 edi, eax
  0006b	85 c9		 test	 ecx, ecx
  0006d	74 12		 je	 SHORT $LN48@reserve

; 761  : 			if (this->_Myfirst != 0)

  0006f	eb 03		 jmp	 SHORT $LN55@reserve

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);

$LL39@reserve:
  00071	83 c1 24	 add	 ecx, 36			; 00000024H
$LN55@reserve:
  00074	3b 4e 04	 cmp	 ecx, DWORD PTR [esi+4]
  00077	75 f8		 jne	 SHORT $LL39@reserve

; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00079	ff 36		 push	 DWORD PTR [esi]
  0007b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00080	59		 pop	 ecx
$LN48@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  00081	8b ce		 mov	 ecx, esi
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00089	6b db 24	 imul	 ebx, 36			; 00000024H

; 770  : 			this->_Mylast = _Ptr + _Size;

  0008c	6b ff 24	 imul	 edi, 36			; 00000024H
  0008f	8b 45 08	 mov	 eax, DWORD PTR __Ptr$505931[ebp]
  00092	03 d8		 add	 ebx, eax
  00094	03 f8		 add	 edi, eax
  00096	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  00099	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 771  : 			this->_Myfirst = _Ptr;

  0009c	89 06		 mov	 DWORD PTR [esi], eax
$LN3@reserve:

; 772  : 			}
; 773  : 		}

  0009e	e8 00 00 00 00	 call	 __EH_epilog3
  000a3	c2 04 00	 ret	 4
__catch$?reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z$0:

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

  000a6	ff 75 08	 push	 DWORD PTR __Ptr$505931[ebp]
  000a9	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000ae	59		 pop	 ecx

; 757  : 			_RERAISE;

  000af	6a 00		 push	 0
  000b1	6a 00		 push	 0
  000b3	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN57@reserve:
$LN54@reserve:
  000b8	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::reserve
PUBLIC	?reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::reserve
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
__Ptr$505969 = 8					; size = 4
__Count$ = 8						; size = 4
?reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx

; 747  : 		if (max_size() < _Count)

  0000e	8b 5d 08	 mov	 ebx, DWORD PTR __Count$[ebp]
  00011	81 fb 55 55 55
	05		 cmp	 ebx, 89478485		; 05555555H
  00017	76 0b		 jbe	 SHORT $LN5@reserve@2

; 748  : 			_Xlen();	// result too long

  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN56@reserve@2:
$LN5@reserve@2:

; 749  : 		else if (capacity() < _Count)

  00024	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00027	2b 06		 sub	 eax, DWORD PTR [esi]
  00029	6a 30		 push	 48			; 00000030H
  0002b	99		 cdq
  0002c	59		 pop	 ecx
  0002d	f7 f9		 idiv	 ecx
  0002f	3b c3		 cmp	 eax, ebx
  00031	73 6b		 jae	 SHORT $LN3@reserve@2

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00033	6a 00		 push	 0
  00035	53		 push	 ebx
  00036	e8 00 00 00 00	 call	 ??$_Allocate@UGoodsData@ioEventGoodsMgr@@@std@@YAPAUGoodsData@ioEventGoodsMgr@@IPAU12@@Z ; std::_Allocate<ioEventGoodsMgr::GoodsData>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  0003b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0003d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00041	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00044	52		 push	 edx
  00045	89 45 08	 mov	 DWORD PTR __Ptr$505969[ebp], eax
  00048	ff 75 08	 push	 DWORD PTR __Ptr$505969[ebp]
  0004b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004e	50		 push	 eax
  0004f	51		 push	 ecx
  00050	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUGoodsData@ioEventGoodsMgr@@PAU12@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@YAPAUGoodsData@ioEventGoodsMgr@@PAU12@00AAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@@Z ; std::_Uninitialized_move<ioEventGoodsMgr::GoodsData *,ioEventGoodsMgr::GoodsData *,std::allocator<ioEventGoodsMgr::GoodsData> >

; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00055	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00057	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0005a	83 c4 18	 add	 esp, 24			; 00000018H
  0005d	2b c1		 sub	 eax, ecx
  0005f	6a 30		 push	 48			; 00000030H
  00061	99		 cdq
  00062	5f		 pop	 edi
  00063	f7 ff		 idiv	 edi
  00065	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  00069	8b f8		 mov	 edi, eax
  0006b	85 c9		 test	 ecx, ecx
  0006d	74 12		 je	 SHORT $LN48@reserve@2

; 761  : 			if (this->_Myfirst != 0)

  0006f	eb 03		 jmp	 SHORT $LN55@reserve@2

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);

$LL39@reserve@2:
  00071	83 c1 30	 add	 ecx, 48			; 00000030H
$LN55@reserve@2:
  00074	3b 4e 04	 cmp	 ecx, DWORD PTR [esi+4]
  00077	75 f8		 jne	 SHORT $LL39@reserve@2

; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00079	ff 36		 push	 DWORD PTR [esi]
  0007b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00080	59		 pop	 ecx
$LN48@reserve@2:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  00081	8b ce		 mov	 ecx, esi
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00089	6b db 30	 imul	 ebx, 48			; 00000030H

; 770  : 			this->_Mylast = _Ptr + _Size;

  0008c	6b ff 30	 imul	 edi, 48			; 00000030H
  0008f	8b 45 08	 mov	 eax, DWORD PTR __Ptr$505969[ebp]
  00092	03 d8		 add	 ebx, eax
  00094	03 f8		 add	 edi, eax
  00096	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  00099	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 771  : 			this->_Myfirst = _Ptr;

  0009c	89 06		 mov	 DWORD PTR [esi], eax
$LN3@reserve@2:

; 772  : 			}
; 773  : 		}

  0009e	e8 00 00 00 00	 call	 __EH_epilog3
  000a3	c2 04 00	 ret	 4
__catch$?reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z$0:

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

  000a6	ff 75 08	 push	 DWORD PTR __Ptr$505969[ebp]
  000a9	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000ae	59		 pop	 ecx

; 757  : 			_RERAISE;

  000af	6a 00		 push	 0
  000b1	6a 00		 push	 0
  000b3	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN57@reserve@2:
$LN54@reserve@2:
  000b8	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::reserve
PUBLIC	??1?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE@XZ ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::~vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE@XZ PROC ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::~vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEXXZ ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Tidy
??1?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::~vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >
_TEXT	ENDS
PUBLIC	??1?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE@XZ ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::~vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE@XZ PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::~vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEXXZ ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Tidy
??1?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::~vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXXZ ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T510432 = -4						; size = 4
?clear@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXXZ PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T510432[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@0@Z ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXXZ ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::clear
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEXI@Z ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEXI@Z PROC ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx
  0000d	57		 push	 edi
  0000e	99		 cdq
  0000f	6a 24		 push	 36			; 00000024H
  00011	5f		 pop	 edi
  00012	f7 ff		 idiv	 edi
  00014	8b f8		 mov	 edi, eax

; 1292 : 		if (max_size() - _Count < _Size)

  00016	b8 c7 71 1c 07	 mov	 eax, 119304647		; 071c71c7H
  0001b	2b 45 08	 sub	 eax, DWORD PTR __Count$[ebp]
  0001e	3b c7		 cmp	 eax, edi
  00020	73 0b		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve:
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  0002d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00030	2b c1		 sub	 eax, ecx
  00032	6a 24		 push	 36			; 00000024H
  00034	99		 cdq
  00035	59		 pop	 ecx
  00036	f7 f9		 idiv	 ecx
  00038	03 7d 08	 add	 edi, DWORD PTR __Count$[ebp]
  0003b	3b f8		 cmp	 edi, eax
  0003d	76 10		 jbe	 SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  0003f	57		 push	 edi
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IBEII@Z ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Grow_to
  00047	50		 push	 eax
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::reserve
$LN1@Reserve:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1298 : 		}

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
$LN20@Reserve:
?_Reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEXI@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Reserve
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEXI@Z ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEXI@Z PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx
  0000d	57		 push	 edi
  0000e	99		 cdq
  0000f	6a 30		 push	 48			; 00000030H
  00011	5f		 pop	 edi
  00012	f7 ff		 idiv	 edi
  00014	8b f8		 mov	 edi, eax

; 1292 : 		if (max_size() - _Count < _Size)

  00016	b8 55 55 55 05	 mov	 eax, 89478485		; 05555555H
  0001b	2b 45 08	 sub	 eax, DWORD PTR __Count$[ebp]
  0001e	3b c7		 cmp	 eax, edi
  00020	73 0b		 jae	 SHORT $LN4@Reserve@2

; 1293 : 			_Xlen();

  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve@2:
$LN4@Reserve@2:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  0002d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00030	2b c1		 sub	 eax, ecx
  00032	6a 30		 push	 48			; 00000030H
  00034	99		 cdq
  00035	59		 pop	 ecx
  00036	f7 f9		 idiv	 ecx
  00038	03 7d 08	 add	 edi, DWORD PTR __Count$[ebp]
  0003b	3b f8		 cmp	 edi, eax
  0003d	76 10		 jbe	 SHORT $LN1@Reserve@2

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  0003f	57		 push	 edi
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IBEII@Z ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Grow_to
  00047	50		 push	 eax
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXI@Z ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::reserve
$LN1@Reserve@2:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1298 : 		}

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
$LN20@Reserve@2:
?_Reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEXI@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Reserve
_TEXT	ENDS
PUBLIC	??_7ioEventGoodsMgr@@6B@			; ioEventGoodsMgr::`vftable'
PUBLIC	??0ioEventGoodsMgr@@QAE@XZ			; ioEventGoodsMgr::ioEventGoodsMgr
PUBLIC	??_R4ioEventGoodsMgr@@6B@			; ioEventGoodsMgr::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioEventGoodsMgr@@@8			; ioEventGoodsMgr `RTTI Type Descriptor'
PUBLIC	??_R3ioEventGoodsMgr@@8				; ioEventGoodsMgr::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioEventGoodsMgr@@8				; ioEventGoodsMgr::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioEventGoodsMgr@@8		; ioEventGoodsMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@?$Singleton@VioEventGoodsMgr@@@@8	; Singleton<ioEventGoodsMgr>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AV?$Singleton@VioEventGoodsMgr@@@@@8	; Singleton<ioEventGoodsMgr> `RTTI Type Descriptor'
PUBLIC	??_R3?$Singleton@VioEventGoodsMgr@@@@8		; Singleton<ioEventGoodsMgr>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$Singleton@VioEventGoodsMgr@@@@8		; Singleton<ioEventGoodsMgr>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$Singleton@VioEventGoodsMgr@@@@8	; Singleton<ioEventGoodsMgr>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_EioEventGoodsMgr@@UAEPAXI@Z:PROC		; ioEventGoodsMgr::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$Singleton@VioEventGoodsMgr@@@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
rdata$r	SEGMENT
??_R1A@?0A@EA@?$Singleton@VioEventGoodsMgr@@@@8 DD FLAT:??_R0?AV?$Singleton@VioEventGoodsMgr@@@@@8 ; Singleton<ioEventGoodsMgr>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioEventGoodsMgr@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$Singleton@VioEventGoodsMgr@@@@8
rdata$r	SEGMENT
??_R2?$Singleton@VioEventGoodsMgr@@@@8 DD FLAT:??_R1A@?0A@EA@?$Singleton@VioEventGoodsMgr@@@@8 ; Singleton<ioEventGoodsMgr>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$Singleton@VioEventGoodsMgr@@@@8
rdata$r	SEGMENT
??_R3?$Singleton@VioEventGoodsMgr@@@@8 DD 00H		; Singleton<ioEventGoodsMgr>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$Singleton@VioEventGoodsMgr@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$Singleton@VioEventGoodsMgr@@@@@8
_DATA	SEGMENT
??_R0?AV?$Singleton@VioEventGoodsMgr@@@@@8 DD FLAT:??_7type_info@@6B@ ; Singleton<ioEventGoodsMgr> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$Singleton@VioEventGoodsMgr@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@?$Singleton@VioEventGoodsMgr@@@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$Singleton@VioEventGoodsMgr@@@@8 DD FLAT:??_R0?AV?$Singleton@VioEventGoodsMgr@@@@@8 ; Singleton<ioEventGoodsMgr>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioEventGoodsMgr@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioEventGoodsMgr@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioEventGoodsMgr@@8 DD FLAT:??_R0?AVioEventGoodsMgr@@@8 ; ioEventGoodsMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioEventGoodsMgr@@8
rdata$r	ENDS
;	COMDAT ??_R2ioEventGoodsMgr@@8
rdata$r	SEGMENT
??_R2ioEventGoodsMgr@@8 DD FLAT:??_R1A@?0A@EA@ioEventGoodsMgr@@8 ; ioEventGoodsMgr::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@?$Singleton@VioEventGoodsMgr@@@@8
rdata$r	ENDS
;	COMDAT ??_R3ioEventGoodsMgr@@8
rdata$r	SEGMENT
??_R3ioEventGoodsMgr@@8 DD 00H				; ioEventGoodsMgr::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioEventGoodsMgr@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioEventGoodsMgr@@@8
_DATA	SEGMENT
??_R0?AVioEventGoodsMgr@@@8 DD FLAT:??_7type_info@@6B@	; ioEventGoodsMgr `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioEventGoodsMgr@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioEventGoodsMgr@@6B@
rdata$r	SEGMENT
??_R4ioEventGoodsMgr@@6B@ DD 00H			; ioEventGoodsMgr::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioEventGoodsMgr@@@8
	DD	FLAT:??_R3ioEventGoodsMgr@@8
rdata$r	ENDS
;	COMDAT ??_7ioEventGoodsMgr@@6B@
CONST	SEGMENT
??_7ioEventGoodsMgr@@6B@ DD FLAT:??_R4ioEventGoodsMgr@@6B@ ; ioEventGoodsMgr::`vftable'
	DD	FLAT:??_EioEventGoodsMgr@@UAEPAXI@Z
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioeventgoodsmgr.cpp
CONST	ENDS
;	COMDAT ??0ioEventGoodsMgr@@QAE@XZ
_TEXT	SEGMENT
??0ioEventGoodsMgr@@QAE@XZ PROC				; ioEventGoodsMgr::ioEventGoodsMgr, COMDAT
; _this$ = ecx

; 13   : {

  00000	8b c1		 mov	 eax, ecx
  00002	a3 00 00 00 00	 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioEventGoodsMgr@@@@1PAVioEventGoodsMgr@@A, eax ; Singleton<ioEventGoodsMgr>::ms_Singleton
  00007	33 c9		 xor	 ecx, ecx
  00009	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ioEventGoodsMgr@@6B@
  0000f	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00012	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00015	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  00018	89 48 14	 mov	 DWORD PTR [eax+20], ecx
  0001b	89 48 18	 mov	 DWORD PTR [eax+24], ecx
  0001e	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 14   : 	m_dwCurrentTime = 0;

  00021	89 48 24	 mov	 DWORD PTR [eax+36], ecx

; 15   : 	m_bEventShopOpen = false;

  00024	66 89 48 29	 mov	 WORD PTR [eax+41], cx

; 16   : 	m_bCloverShopOpen= false;
; 17   : 	m_bMileageShopOpen = false;

  00028	88 48 2b	 mov	 BYTE PTR [eax+43], cl

; 18   : }

  0002b	c3		 ret	 0
??0ioEventGoodsMgr@@QAE@XZ ENDP				; ioEventGoodsMgr::ioEventGoodsMgr
_TEXT	ENDS
PUBLIC	??1ioEventGoodsMgr@@UAE@XZ			; ioEventGoodsMgr::~ioEventGoodsMgr
EXTRN	__EH_prolog3:PROC
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
xdata$x	SEGMENT
__unwindtable$??1ioEventGoodsMgr@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioEventGoodsMgr@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ioEventGoodsMgr@@UAE@XZ$1
__ehfuncinfo$??1ioEventGoodsMgr@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1ioEventGoodsMgr@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioeventgoodsmgr.cpp
xdata$x	ENDS
;	COMDAT ??1ioEventGoodsMgr@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioEventGoodsMgr@@UAE@XZ PROC				; ioEventGoodsMgr::~ioEventGoodsMgr, COMDAT
; _this$ = ecx

; 21   : {	

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioEventGoodsMgr@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioEventGoodsMgr@@6B@

; 22   : }

  00017	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  0001a	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00021	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEXXZ ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Tidy
  00026	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00029	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0002d	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEXXZ ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Tidy
  00032	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioEventGoodsMgr@@@@1PAVioEventGoodsMgr@@A, 0 ; Singleton<ioEventGoodsMgr>::ms_Singleton
  00039	e8 00 00 00 00	 call	 __EH_epilog3
  0003e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioEventGoodsMgr@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioEventGoodsMgr@@@@QAE@XZ ; Singleton<ioEventGoodsMgr>::~Singleton<ioEventGoodsMgr>
__unwindfunclet$??1ioEventGoodsMgr@@UAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 04	 add	 ecx, 4
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAE@XZ ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::~vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >
__ehhandler$??1ioEventGoodsMgr@@UAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioEventGoodsMgr@@UAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioEventGoodsMgr@@UAE@XZ ENDP				; ioEventGoodsMgr::~ioEventGoodsMgr
PUBLIC	?push_back@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXABUGoodsDatabase@ioEventGoodsMgr@@@Z ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::push_back
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?push_back@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXABUGoodsDatabase@ioEventGoodsMgr@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXABUGoodsDatabase@ioEventGoodsMgr@@@Z PROC ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f9		 cmp	 edi, ecx
  0000f	73 34		 jae	 SHORT $LN4@push_back
  00011	8b 16		 mov	 edx, DWORD PTR [esi]
  00013	3b d7		 cmp	 edx, edi
  00015	77 2e		 ja	 SHORT $LN4@push_back

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	8b c7		 mov	 eax, edi
  00019	2b c2		 sub	 eax, edx
  0001b	6a 24		 push	 36			; 00000024H
  0001d	99		 cdq
  0001e	5f		 pop	 edi
  0001f	f7 ff		 idiv	 edi
  00021	8b f8		 mov	 edi, eax

; 980  : 			if (this->_Mylast == this->_Myend)

  00023	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00026	75 09		 jne	 SHORT $LN3@push_back

; 981  : 				_Reserve(1);

  00028	6a 01		 push	 1
  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEXI@Z ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Reserve
$LN3@push_back:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  00031	6b ff 24	 imul	 edi, 36			; 00000024H
  00034	03 3e		 add	 edi, DWORD PTR [esi]
  00036	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00039	57		 push	 edi
  0003a	ff 76 04	 push	 DWORD PTR [esi+4]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@AAU34@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@AAU23@@Z ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase,ioEventGoodsMgr::GoodsDatabase &>

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00043	eb 1b		 jmp	 SHORT $LN20@push_back
$LN4@push_back:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00045	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00048	75 09		 jne	 SHORT $LN1@push_back

; 991  : 				_Reserve(1);

  0004a	6a 01		 push	 1
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@IAEXI@Z ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::_Reserve
$LN1@push_back:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00053	57		 push	 edi
  00054	ff 76 04	 push	 DWORD PTR [esi+4]
  00057	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@UGoodsDatabase@ioEventGoodsMgr@@ABU34@@std@@YAXAAV?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@0@PAUGoodsDatabase@ioEventGoodsMgr@@ABU23@@Z ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsDatabase>,ioEventGoodsMgr::GoodsDatabase,ioEventGoodsMgr::GoodsDatabase const &>
$LN20@push_back:
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH

; 996  : 			++this->_Mylast;

  00063	83 46 04 24	 add	 DWORD PTR [esi+4], 36	; 00000024H
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
?push_back@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXABUGoodsDatabase@ioEventGoodsMgr@@@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::push_back
_TEXT	ENDS
PUBLIC	?push_back@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXABUGoodsData@ioEventGoodsMgr@@@Z ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::push_back
; Function compile flags: /Ogsp
;	COMDAT ?push_back@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXABUGoodsData@ioEventGoodsMgr@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXABUGoodsData@ioEventGoodsMgr@@@Z PROC ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f9		 cmp	 edi, ecx
  0000f	73 34		 jae	 SHORT $LN4@push_back@2
  00011	8b 16		 mov	 edx, DWORD PTR [esi]
  00013	3b d7		 cmp	 edx, edi
  00015	77 2e		 ja	 SHORT $LN4@push_back@2

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	8b c7		 mov	 eax, edi
  00019	2b c2		 sub	 eax, edx
  0001b	6a 30		 push	 48			; 00000030H
  0001d	99		 cdq
  0001e	5f		 pop	 edi
  0001f	f7 ff		 idiv	 edi
  00021	8b f8		 mov	 edi, eax

; 980  : 			if (this->_Mylast == this->_Myend)

  00023	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00026	75 09		 jne	 SHORT $LN3@push_back@2

; 981  : 				_Reserve(1);

  00028	6a 01		 push	 1
  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEXI@Z ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Reserve
$LN3@push_back@2:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  00031	6b ff 30	 imul	 edi, 48			; 00000030H
  00034	03 3e		 add	 edi, DWORD PTR [esi]
  00036	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00039	57		 push	 edi
  0003a	ff 76 04	 push	 DWORD PTR [esi+4]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@AAU34@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@AAU23@@Z ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData,ioEventGoodsMgr::GoodsData &>

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00043	eb 1b		 jmp	 SHORT $LN20@push_back@2
$LN4@push_back@2:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00045	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00048	75 09		 jne	 SHORT $LN1@push_back@2

; 991  : 				_Reserve(1);

  0004a	6a 01		 push	 1
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@IAEXI@Z ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::_Reserve
$LN1@push_back@2:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00053	57		 push	 edi
  00054	ff 76 04	 push	 DWORD PTR [esi+4]
  00057	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@UGoodsData@ioEventGoodsMgr@@ABU34@@std@@YAXAAV?$allocator@UGoodsData@ioEventGoodsMgr@@@0@PAUGoodsData@ioEventGoodsMgr@@ABU23@@Z ; std::_Cons_val<std::allocator<ioEventGoodsMgr::GoodsData>,ioEventGoodsMgr::GoodsData,ioEventGoodsMgr::GoodsData const &>
$LN20@push_back@2:
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH

; 996  : 			++this->_Mylast;

  00063	83 46 04 30	 add	 DWORD PTR [esi+4], 48	; 00000030H
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
?push_back@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXABUGoodsData@ioEventGoodsMgr@@@Z ENDP ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::push_back
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GioEventGoodsMgr@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioEventGoodsMgr@@UAEPAXI@Z PROC			; ioEventGoodsMgr::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioEventGoodsMgr@@UAE@XZ ; ioEventGoodsMgr::~ioEventGoodsMgr
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@2
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@2:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioEventGoodsMgr@@UAEPAXI@Z ENDP			; ioEventGoodsMgr::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	?LoadEventGoodsInfo@ioEventGoodsMgr@@QAEXXZ	; ioEventGoodsMgr::LoadEventGoodsInfo
EXTRN	__imp__sprintf:PROC
EXTRN	__EH_epilog3_GS:PROC
EXTRN	__EH_prolog3_GS:PROC
EXTRN	_memset:PROC
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioeventgoodsmgr.cpp
xdata$x	SEGMENT
__unwindtable$?LoadEventGoodsInfo@ioEventGoodsMgr@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadEventGoodsInfo@ioEventGoodsMgr@@QAEXXZ$0
__ehfuncinfo$?LoadEventGoodsInfo@ioEventGoodsMgr@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadEventGoodsInfo@ioEventGoodsMgr@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?LoadEventGoodsInfo@ioEventGoodsMgr@@QAEXXZ
_TEXT	SEGMENT
_kDatabase$505260 = -1348				; size = 36
_this$GSCopy$ = -1312					; size = 4
_iMaxGoods$ = -1308					; size = 4
tv8290 = -1304						; size = 4
_i$505102 = -1304					; size = 4
_kLoader$ = -1300					; size = 912
_szTitle$505106 = -388					; size = 260
__k$511832 = -128					; size = 11
__k$511345 = -112					; size = 12
__k$511707 = -96					; size = 12
__k$511220 = -80					; size = 12
__k$511990 = -64					; size = 9
__k$511080 = -64					; size = 10
__k$511595 = -48					; size = 14
__k$511470 = -48					; size = 14
__t$510942 = -28					; size = 7
___encStr$505110 = -28					; size = 8
__$EHRec$ = -12						; size = 12
?LoadEventGoodsInfo@ioEventGoodsMgr@@QAEXXZ PROC	; ioEventGoodsMgr::LoadEventGoodsInfo, COMDAT
; _this$ = ecx

; 30   : {

  00000	68 38 05 00 00	 push	 1336			; 00000538H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?LoadEventGoodsInfo@ioEventGoodsMgr@@QAEXXZ
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS

; 31   : 	ioINILoader_e kLoader( "config/sp2_event_goods.ini" );

  0000f	33 db		 xor	 ebx, ebx
  00011	6a 06		 push	 6
  00013	89 8d e0 fa ff
	ff		 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  00019	c7 85 3c fe ff
	ff 8e 83 85 8c	 mov	 DWORD PTR _kLoader$[ebp+848], -1937407090 ; 8c85838eH
  00023	c7 85 40 fe ff
	ff 84 8b c4 99	 mov	 DWORD PTR _kLoader$[ebp+852], -1715172476 ; 99c48b84H
  0002d	c7 85 44 fe ff
	ff 9d de b4 8f	 mov	 DWORD PTR _kLoader$[ebp+856], -1883971939 ; 8fb4de9dH
  00037	c7 85 48 fe ff
	ff 9b 89 85 9e	 mov	 DWORD PTR _kLoader$[ebp+860], -1635415653 ; 9e85899bH
  00041	c7 85 4c fe ff
	ff b2 8b 84 85	 mov	 DWORD PTR _kLoader$[ebp+864], -2054911054 ; 85848bb2H
  0004b	c7 85 50 fe ff
	ff 89 9f c5 83	 mov	 DWORD PTR _kLoader$[ebp+868], -2084200567 ; 83c59f89H
  00055	66 c7 85 54 fe
	ff ff 83 85	 mov	 WORD PTR _kLoader$[ebp+872], 34179 ; 00008583H
  0005e	8d 85 3c fe ff
	ff		 lea	 eax, DWORD PTR _kLoader$[ebp+848]
  00064	88 9d 56 fe ff
	ff		 mov	 BYTE PTR _kLoader$[ebp+874], bl
  0006a	59		 pop	 ecx
  0006b	bf ed ec eb ea	 mov	 edi, -353637139		; eaebecedH
$LL213@LoadEventG:
  00070	31 38		 xor	 DWORD PTR [eax], edi
  00072	83 c0 04	 add	 eax, 4
  00075	49		 dec	 ecx
  00076	75 f8		 jne	 SHORT $LL213@LoadEventG
  00078	6a 18		 push	 24			; 00000018H
  0007a	5e		 pop	 esi
$LL210@LoadEventG:
  0007b	8b c6		 mov	 eax, esi
  0007d	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  00082	79 05		 jns	 SHORT $LN1230@LoadEventG
  00084	48		 dec	 eax
  00085	83 c8 fc	 or	 eax, -4			; fffffffcH
  00088	40		 inc	 eax
$LN1230@LoadEventG:
  00089	b1 ed		 mov	 cl, -19			; ffffffedH
  0008b	2a c8		 sub	 cl, al
  0008d	30 8c 35 3c fe
	ff ff		 xor	 BYTE PTR _kLoader$[ebp+esi+848], cl
  00094	46		 inc	 esi
  00095	83 fe 1a	 cmp	 esi, 26			; 0000001aH
  00098	7c e1		 jl	 SHORT $LL210@LoadEventG
  0009a	6a 01		 push	 1
  0009c	8d 85 3c fe ff
	ff		 lea	 eax, DWORD PTR _kLoader$[ebp+848]
  000a2	50		 push	 eax
  000a3	8d 8d ec fa ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  000a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@PBD_N@Z

; 32   : 	kLoader.SetTitle_e( "common" );

  000af	6a 04		 push	 4
  000b1	c7 45 e4 8e 83
	86 87		 mov	 DWORD PTR __t$510942[ebp], -2021227634 ; 8786838eH
  000b8	31 7d e4	 xor	 DWORD PTR __t$510942[ebp], edi
  000bb	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  000be	66 c7 45 e8 82
	82		 mov	 WORD PTR __t$510942[ebp+4], 33410 ; 00008282H
  000c4	88 5d ea	 mov	 BYTE PTR __t$510942[ebp+6], bl
  000c7	5e		 pop	 esi
$LL316@LoadEventG:
  000c8	8b c6		 mov	 eax, esi
  000ca	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  000cf	79 05		 jns	 SHORT $LN1231@LoadEventG
  000d1	48		 dec	 eax
  000d2	83 c8 fc	 or	 eax, -4			; fffffffcH
  000d5	40		 inc	 eax
$LN1231@LoadEventG:
  000d6	b1 ed		 mov	 cl, -19			; ffffffedH
  000d8	2a c8		 sub	 cl, al
  000da	30 4c 35 e4	 xor	 BYTE PTR __t$510942[ebp+esi], cl
  000de	46		 inc	 esi
  000df	83 fe 06	 cmp	 esi, 6
  000e2	7c e4		 jl	 SHORT $LL316@LoadEventG
  000e4	8d 45 e4	 lea	 eax, DWORD PTR __t$510942[ebp]
  000e7	50		 push	 eax
  000e8	8d 8d ec fa ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z
  000f4	6a 02		 push	 2

; 33   : 
; 34   : 	int iMaxGoods = kLoader.LoadInt_e( "max_goods", 0 );

  000f6	c7 45 c0 80 8d
	93 b5		 mov	 DWORD PTR __k$511080[ebp], -1248621184 ; b5938d80H
  000fd	c7 45 c4 8a 83
	84 8e		 mov	 DWORD PTR __k$511080[ebp+4], -1903918198 ; 8e84838aH
  00104	8d 45 c0	 lea	 eax, DWORD PTR __k$511080[ebp]
  00107	66 c7 45 c8 9e
	00		 mov	 WORD PTR __k$511080[ebp+8], 158 ; 0000009eH
  0010d	59		 pop	 ecx
$LL425@LoadEventG:
  0010e	31 38		 xor	 DWORD PTR [eax], edi
  00110	83 c0 04	 add	 eax, 4
  00113	49		 dec	 ecx
  00114	75 f8		 jne	 SHORT $LL425@LoadEventG
  00116	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z
  0011c	80 75 c8 ed	 xor	 BYTE PTR __k$511080[ebp+8], -19 ; ffffffedH
  00120	53		 push	 ebx
  00121	8d 45 c0	 lea	 eax, DWORD PTR __k$511080[ebp]
  00124	50		 push	 eax
  00125	8d 8d ec fa ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  0012b	ff d6		 call	 esi
  0012d	89 85 e4 fa ff
	ff		 mov	 DWORD PTR _iMaxGoods$[ebp], eax

; 35   : 	for(int i = 0;i < iMaxGoods;i++)

  00133	89 9d e8 fa ff
	ff		 mov	 DWORD PTR _i$505102[ebp], ebx
  00139	3b c3		 cmp	 eax, ebx
  0013b	0f 8e f6 02 00
	00		 jle	 $LN101@LoadEventG
$LL103@LoadEventG:

; 36   : 	{
; 37   : 		char szTitle[MAX_PATH] = "";

  00141	68 03 01 00 00	 push	 259			; 00000103H
  00146	8d 85 7d fe ff
	ff		 lea	 eax, DWORD PTR _szTitle$505106[ebp+1]
  0014c	53		 push	 ebx
  0014d	50		 push	 eax
  0014e	88 9d 7c fe ff
	ff		 mov	 BYTE PTR _szTitle$505106[ebp], bl
  00154	e8 00 00 00 00	 call	 _memset
  00159	83 c4 0c	 add	 esp, 12			; 0000000cH

; 38   : 		sprintf_e( szTitle, "goods%d", i + 1 );

  0015c	6a 04		 push	 4
  0015e	c7 45 e4 8a 83
	84 8e		 mov	 DWORD PTR ___encStr$505110[ebp], -1903918198 ; 8e84838aH
  00165	31 7d e4	 xor	 DWORD PTR ___encStr$505110[ebp], edi
  00168	c7 45 e8 9e c9
	8f 00		 mov	 DWORD PTR ___encStr$505110[ebp+4], 9423262 ; 008fc99eH
  0016f	58		 pop	 eax
$LL430@LoadEventG:
  00170	8b c8		 mov	 ecx, eax
  00172	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00178	79 05		 jns	 SHORT $LN1232@LoadEventG
  0017a	49		 dec	 ecx
  0017b	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0017e	41		 inc	 ecx
$LN1232@LoadEventG:
  0017f	b2 ed		 mov	 dl, -19			; ffffffedH
  00181	2a d1		 sub	 dl, cl
  00183	30 54 05 e4	 xor	 BYTE PTR ___encStr$505110[ebp+eax], dl
  00187	40		 inc	 eax
  00188	83 f8 07	 cmp	 eax, 7
  0018b	7c e3		 jl	 SHORT $LL430@LoadEventG
  0018d	8b 85 e8 fa ff
	ff		 mov	 eax, DWORD PTR _i$505102[ebp]
  00193	40		 inc	 eax
  00194	50		 push	 eax
  00195	89 85 e8 fa ff
	ff		 mov	 DWORD PTR tv8290[ebp], eax
  0019b	8d 45 e4	 lea	 eax, DWORD PTR ___encStr$505110[ebp]
  0019e	50		 push	 eax
  0019f	8d 85 7c fe ff
	ff		 lea	 eax, DWORD PTR _szTitle$505106[ebp]
  001a5	50		 push	 eax
  001a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  001ac	83 c4 0c	 add	 esp, 12			; 0000000cH

; 39   : 		kLoader.SetTitle( szTitle );

  001af	8d 85 7c fe ff
	ff		 lea	 eax, DWORD PTR _szTitle$505106[ebp]
  001b5	50		 push	 eax
  001b6	8d 8d ec fa ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  001bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 40   : 
; 41   : 		GoodsDatabase kDatabase;

  001c2	33 c0		 xor	 eax, eax
  001c4	6a 02		 push	 2
  001c6	66 89 85 c0 fa
	ff ff		 mov	 WORD PTR _kDatabase$505260[ebp+4], ax
  001cd	89 9d c8 fa ff
	ff		 mov	 DWORD PTR _kDatabase$505260[ebp+12], ebx
  001d3	89 9d c4 fa ff
	ff		 mov	 DWORD PTR _kDatabase$505260[ebp+8], ebx
  001d9	89 9d d0 fa ff
	ff		 mov	 DWORD PTR _kDatabase$505260[ebp+20], ebx
  001df	89 9d cc fa ff
	ff		 mov	 DWORD PTR _kDatabase$505260[ebp+16], ebx
  001e5	89 9d dc fa ff
	ff		 mov	 DWORD PTR _kDatabase$505260[ebp+32], ebx
  001eb	89 9d d8 fa ff
	ff		 mov	 DWORD PTR _kDatabase$505260[ebp+28], ebx
  001f1	89 9d d4 fa ff
	ff		 mov	 DWORD PTR _kDatabase$505260[ebp+24], ebx

; 42   : 		kDatabase.m_dwGoodsIndex = kLoader.LoadInt_e( "goods_index", 0 );

  001f7	c7 45 b0 8a 83
	84 8e		 mov	 DWORD PTR __k$511220[ebp], -1903918198 ; 8e84838aH
  001fe	c7 45 b4 9e b3
	82 84		 mov	 DWORD PTR __k$511220[ebp+4], -2071809122 ; 8482b39eH
  00205	8d 45 b0	 lea	 eax, DWORD PTR __k$511220[ebp]
  00208	c7 45 b8 89 89
	93 00		 mov	 DWORD PTR __k$511220[ebp+8], 9669001 ; 00938989H
  0020f	59		 pop	 ecx
$LL541@LoadEventG:
  00210	31 38		 xor	 DWORD PTR [eax], edi
  00212	83 c0 04	 add	 eax, 4
  00215	49		 dec	 ecx
  00216	75 f8		 jne	 SHORT $LL541@LoadEventG
  00218	6a 08		 push	 8
  0021a	58		 pop	 eax
$LL538@LoadEventG:
  0021b	8b c8		 mov	 ecx, eax
  0021d	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00223	79 05		 jns	 SHORT $LN1233@LoadEventG
  00225	49		 dec	 ecx
  00226	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00229	41		 inc	 ecx
$LN1233@LoadEventG:
  0022a	b2 ed		 mov	 dl, -19			; ffffffedH
  0022c	2a d1		 sub	 dl, cl
  0022e	30 54 05 b0	 xor	 BYTE PTR __k$511220[ebp+eax], dl
  00232	40		 inc	 eax
  00233	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  00236	7c e3		 jl	 SHORT $LL538@LoadEventG
  00238	53		 push	 ebx
  00239	8d 45 b0	 lea	 eax, DWORD PTR __k$511220[ebp]
  0023c	50		 push	 eax
  0023d	8d 8d ec fa ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00243	ff d6		 call	 esi
  00245	89 85 bc fa ff
	ff		 mov	 DWORD PTR _kDatabase$505260[ebp], eax

; 43   : 		if( kDatabase.m_dwGoodsIndex == 0 ) continue;

  0024b	3b c3		 cmp	 eax, ebx
  0024d	0f 84 cc 01 00
	00		 je	 $LN102@LoadEventG

; 44   : 
; 45   : 		kDatabase.m_iPresentType   = kLoader.LoadInt_e( "PresentType", 0 );

  00253	6a 02		 push	 2
  00255	c7 45 90 bd 9e
	8e 99		 mov	 DWORD PTR __k$511345[ebp], -1718706499 ; 998e9ebdH
  0025c	c7 45 94 88 82
	9f be		 mov	 DWORD PTR __k$511345[ebp+4], -1096842616 ; be9f8288H
  00263	8d 45 90	 lea	 eax, DWORD PTR __k$511345[ebp]
  00266	c7 45 98 94 9c
	8e 00		 mov	 DWORD PTR __k$511345[ebp+8], 9346196 ; 008e9c94H
  0026d	59		 pop	 ecx
$LL647@LoadEventG:
  0026e	31 38		 xor	 DWORD PTR [eax], edi
  00270	83 c0 04	 add	 eax, 4
  00273	49		 dec	 ecx
  00274	75 f8		 jne	 SHORT $LL647@LoadEventG
  00276	6a 08		 push	 8
  00278	58		 pop	 eax
$LL644@LoadEventG:
  00279	8b c8		 mov	 ecx, eax
  0027b	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00281	79 05		 jns	 SHORT $LN1234@LoadEventG
  00283	49		 dec	 ecx
  00284	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00287	41		 inc	 ecx
$LN1234@LoadEventG:
  00288	b2 ed		 mov	 dl, -19			; ffffffedH
  0028a	2a d1		 sub	 dl, cl
  0028c	30 54 05 90	 xor	 BYTE PTR __k$511345[ebp+eax], dl
  00290	40		 inc	 eax
  00291	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  00294	7c e3		 jl	 SHORT $LL644@LoadEventG
  00296	53		 push	 ebx
  00297	8d 45 90	 lea	 eax, DWORD PTR __k$511345[ebp]
  0029a	50		 push	 eax
  0029b	8d 8d ec fa ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  002a1	ff d6		 call	 esi
  002a3	6a 03		 push	 3
  002a5	66 89 85 c0 fa
	ff ff		 mov	 WORD PTR _kDatabase$505260[ebp+4], ax

; 46   : 		kDatabase.m_iPresentValue1 = kLoader.LoadInt_e( "PresentValue1", 0 );

  002ac	c7 45 d0 bd 9e
	8e 99		 mov	 DWORD PTR __k$511470[ebp], -1718706499 ; 998e9ebdH
  002b3	c7 45 d4 88 82
	9f bc		 mov	 DWORD PTR __k$511470[ebp+4], -1130397048 ; bc9f8288H
  002ba	c7 45 d8 8c 80
	9e 8f		 mov	 DWORD PTR __k$511470[ebp+8], -1885437812 ; 8f9e808cH
  002c1	8d 45 d0	 lea	 eax, DWORD PTR __k$511470[ebp]
  002c4	66 c7 45 dc dc
	00		 mov	 WORD PTR __k$511470[ebp+12], 220 ; 000000dcH
  002ca	59		 pop	 ecx
$LL753@LoadEventG:
  002cb	31 38		 xor	 DWORD PTR [eax], edi
  002cd	83 c0 04	 add	 eax, 4
  002d0	49		 dec	 ecx
  002d1	75 f8		 jne	 SHORT $LL753@LoadEventG
  002d3	80 75 dc ed	 xor	 BYTE PTR __k$511470[ebp+12], -19 ; ffffffedH
  002d7	53		 push	 ebx
  002d8	8d 45 d0	 lea	 eax, DWORD PTR __k$511470[ebp]
  002db	50		 push	 eax
  002dc	8d 8d ec fa ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  002e2	ff d6		 call	 esi
  002e4	6a 03		 push	 3
  002e6	89 85 c4 fa ff
	ff		 mov	 DWORD PTR _kDatabase$505260[ebp+8], eax

; 47   : 		kDatabase.m_iPresentValue2 = kLoader.LoadInt_e( "PresentValue2", 0 );

  002ec	c7 45 d0 bd 9e
	8e 99		 mov	 DWORD PTR __k$511595[ebp], -1718706499 ; 998e9ebdH
  002f3	c7 45 d4 88 82
	9f bc		 mov	 DWORD PTR __k$511595[ebp+4], -1130397048 ; bc9f8288H
  002fa	c7 45 d8 8c 80
	9e 8f		 mov	 DWORD PTR __k$511595[ebp+8], -1885437812 ; 8f9e808cH
  00301	8d 45 d0	 lea	 eax, DWORD PTR __k$511595[ebp]
  00304	66 c7 45 dc df
	00		 mov	 WORD PTR __k$511595[ebp+12], 223 ; 000000dfH
  0030a	59		 pop	 ecx
$LL859@LoadEventG:
  0030b	31 38		 xor	 DWORD PTR [eax], edi
  0030d	83 c0 04	 add	 eax, 4
  00310	49		 dec	 ecx
  00311	75 f8		 jne	 SHORT $LL859@LoadEventG
  00313	80 75 dc ed	 xor	 BYTE PTR __k$511595[ebp+12], -19 ; ffffffedH
  00317	53		 push	 ebx
  00318	8d 45 d0	 lea	 eax, DWORD PTR __k$511595[ebp]
  0031b	50		 push	 eax
  0031c	8d 8d ec fa ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00322	ff d6		 call	 esi
  00324	6a 02		 push	 2
  00326	89 85 c8 fa ff
	ff		 mov	 DWORD PTR _kDatabase$505260[ebp+12], eax

; 48   : 
; 49   : 		kDatabase.m_iManualIndex   = kLoader.LoadInt_e( "ManualIndex", 0 );

  0032c	c7 45 a0 a0 8d
	85 9f		 mov	 DWORD PTR __k$511707[ebp], -1618637408 ; 9f858da0H
  00333	c7 45 a4 8c 80
	a2 84		 mov	 DWORD PTR __k$511707[ebp+4], -2069725044 ; 84a2808cH
  0033a	8d 45 a0	 lea	 eax, DWORD PTR __k$511707[ebp]
  0033d	c7 45 a8 89 89
	93 00		 mov	 DWORD PTR __k$511707[ebp+8], 9669001 ; 00938989H
  00344	59		 pop	 ecx
$LL965@LoadEventG:
  00345	31 38		 xor	 DWORD PTR [eax], edi
  00347	83 c0 04	 add	 eax, 4
  0034a	49		 dec	 ecx
  0034b	75 f8		 jne	 SHORT $LL965@LoadEventG
  0034d	6a 08		 push	 8
  0034f	58		 pop	 eax
$LL962@LoadEventG:
  00350	8b c8		 mov	 ecx, eax
  00352	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00358	79 05		 jns	 SHORT $LN1235@LoadEventG
  0035a	49		 dec	 ecx
  0035b	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0035e	41		 inc	 ecx
$LN1235@LoadEventG:
  0035f	b2 ed		 mov	 dl, -19			; ffffffedH
  00361	2a d1		 sub	 dl, cl
  00363	30 54 05 a0	 xor	 BYTE PTR __k$511707[ebp+eax], dl
  00367	40		 inc	 eax
  00368	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  0036b	7c e3		 jl	 SHORT $LL962@LoadEventG
  0036d	53		 push	 ebx
  0036e	8d 45 a0	 lea	 eax, DWORD PTR __k$511707[ebp]
  00371	50		 push	 eax
  00372	8d 8d ec fa ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00378	ff d6		 call	 esi
  0037a	6a 02		 push	 2
  0037c	89 85 d4 fa ff
	ff		 mov	 DWORD PTR _kDatabase$505260[ebp+24], eax

; 50   : 		kDatabase.m_iGoodsOrder    = kLoader.LoadInt_e( "GoodsOrder", 0 );

  00382	c7 45 80 aa 83
	84 8e		 mov	 DWORD PTR __k$511832[ebp], -1903918166 ; 8e8483aaH
  00389	c7 45 84 9e a3
	99 8e		 mov	 DWORD PTR __k$511832[ebp+4], -1902533730 ; 8e99a39eH
  00390	66 c7 45 88 88
	9e		 mov	 WORD PTR __k$511832[ebp+8], 40584 ; 00009e88H
  00396	8d 45 80	 lea	 eax, DWORD PTR __k$511832[ebp]
  00399	88 5d 8a	 mov	 BYTE PTR __k$511832[ebp+10], bl
  0039c	59		 pop	 ecx
$LL1071@LoadEventG:
  0039d	31 38		 xor	 DWORD PTR [eax], edi
  0039f	83 c0 04	 add	 eax, 4
  003a2	49		 dec	 ecx
  003a3	75 f8		 jne	 SHORT $LL1071@LoadEventG
  003a5	6a 08		 push	 8
  003a7	58		 pop	 eax
$LL1068@LoadEventG:
  003a8	8b c8		 mov	 ecx, eax
  003aa	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  003b0	79 05		 jns	 SHORT $LN1236@LoadEventG
  003b2	49		 dec	 ecx
  003b3	83 c9 fc	 or	 ecx, -4			; fffffffcH
  003b6	41		 inc	 ecx
$LN1236@LoadEventG:
  003b7	b2 ed		 mov	 dl, -19			; ffffffedH
  003b9	2a d1		 sub	 dl, cl
  003bb	30 54 05 80	 xor	 BYTE PTR __k$511832[ebp+eax], dl
  003bf	40		 inc	 eax
  003c0	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  003c3	7c e3		 jl	 SHORT $LL1068@LoadEventG
  003c5	53		 push	 ebx
  003c6	8d 45 80	 lea	 eax, DWORD PTR __k$511832[ebp]
  003c9	50		 push	 eax
  003ca	8d 8d ec fa ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  003d0	ff d6		 call	 esi
  003d2	6a 02		 push	 2
  003d4	89 85 d8 fa ff
	ff		 mov	 DWORD PTR _kDatabase$505260[ebp+28], eax

; 51   : 		kDatabase.m_iGoodsMark     = kLoader.LoadInt_e( "MarkType", 0 );

  003da	c7 45 c0 a0 8d
	99 81		 mov	 DWORD PTR __k$511990[ebp], -2120643168 ; 81998da0H
  003e1	c7 45 c4 b9 95
	9b 8f		 mov	 DWORD PTR __k$511990[ebp+4], -1885628999 ; 8f9b95b9H
  003e8	8d 45 c0	 lea	 eax, DWORD PTR __k$511990[ebp]
  003eb	88 5d c8	 mov	 BYTE PTR __k$511990[ebp+8], bl
  003ee	59		 pop	 ecx
$LL1177@LoadEventG:
  003ef	31 38		 xor	 DWORD PTR [eax], edi
  003f1	83 c0 04	 add	 eax, 4
  003f4	49		 dec	 ecx
  003f5	75 f8		 jne	 SHORT $LL1177@LoadEventG
  003f7	53		 push	 ebx
  003f8	8d 45 c0	 lea	 eax, DWORD PTR __k$511990[ebp]
  003fb	50		 push	 eax
  003fc	8d 8d ec fa ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00402	ff d6		 call	 esi

; 52   : 		m_GoodsDatabase.push_back( kDatabase );

  00404	8b 8d e0 fa ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  0040a	89 85 dc fa ff
	ff		 mov	 DWORD PTR _kDatabase$505260[ebp+32], eax
  00410	8d 85 bc fa ff
	ff		 lea	 eax, DWORD PTR _kDatabase$505260[ebp]
  00416	50		 push	 eax
  00417	83 c1 04	 add	 ecx, 4
  0041a	e8 00 00 00 00	 call	 ?push_back@?$vector@UGoodsDatabase@ioEventGoodsMgr@@V?$allocator@UGoodsDatabase@ioEventGoodsMgr@@@std@@@std@@QAEXABUGoodsDatabase@ioEventGoodsMgr@@@Z ; std::vector<ioEventGoodsMgr::GoodsDatabase,std::allocator<ioEventGoodsMgr::GoodsDatabase> >::push_back
$LN102@LoadEventG:

; 35   : 	for(int i = 0;i < iMaxGoods;i++)

  0041f	8b 85 e8 fa ff
	ff		 mov	 eax, DWORD PTR tv8290[ebp]
  00425	89 85 e8 fa ff
	ff		 mov	 DWORD PTR _i$505102[ebp], eax
  0042b	3b 85 e4 fa ff
	ff		 cmp	 eax, DWORD PTR _iMaxGoods$[ebp]
  00431	0f 8c 0a fd ff
	ff		 jl	 $LL103@LoadEventG
$LN101@LoadEventG:

; 53   : 	}
; 54   : }

  00437	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0043b	8d 8d ec fa ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00441	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
  00447	e8 00 00 00 00	 call	 __EH_epilog3_GS
  0044c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadEventGoodsInfo@ioEventGoodsMgr@@QAEXXZ$0:
  00000	8d 8d ec fa ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1ioINILoader_e@@QAE@XZ
__ehhandler$?LoadEventGoodsInfo@ioEventGoodsMgr@@QAEXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a b8 fa ff
	ff		 mov	 ecx, DWORD PTR [edx-1352]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadEventGoodsInfo@ioEventGoodsMgr@@QAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadEventGoodsInfo@ioEventGoodsMgr@@QAEXXZ ENDP	; ioEventGoodsMgr::LoadEventGoodsInfo
PUBLIC	?ApplyGoodsList@ioEventGoodsMgr@@QAEXAAVSP2Packet@@@Z ; ioEventGoodsMgr::ApplyGoodsList
EXTRN	??5SP2Packet@@QAEAAV0@AAK@Z:PROC		; SP2Packet::operator>>
EXTRN	??5SP2Packet@@QAEAAV0@AAH@Z:PROC		; SP2Packet::operator>>
EXTRN	??5SP2Packet@@QAEAAV0@AA_N@Z:PROC		; SP2Packet::operator>>
; Function compile flags: /Ogsp
;	COMDAT ?ApplyGoodsList@ioEventGoodsMgr@@QAEXAAVSP2Packet@@@Z
_TEXT	SEGMENT
_kData$505482 = -88					; size = 48
$T512198 = -40						; size = 4
_iNeedEtcItemCount$505331 = -40				; size = 4
_iGoodsCount$505330 = -36				; size = 4
_dwGoodsIndex$505328 = -32				; size = 4
tv391 = -28						; size = 4
tv392 = -24						; size = 4
_iMaxGoods$505323 = -20					; size = 4
tv390 = -16						; size = 4
_i$505324 = -12						; size = 4
_dwNeedEtcItem$505329 = -8				; size = 4
_bMileageShopGoodsIsEmpty$ = -3				; size = 1
_bCloverShopGoodsIsEmpty$ = -2				; size = 1
_bEventShopGoodsIsEmpty$ = -1				; size = 1
_rkPacket$ = 8						; size = 4
?ApplyGoodsList@ioEventGoodsMgr@@QAEXAAVSP2Packet@@@Z PROC ; ioEventGoodsMgr::ApplyGoodsList, COMDAT
; _this$ = ecx

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b d9		 mov	 ebx, ecx

; 103  : 	bool bEventShopGoodsIsEmpty = true;
; 104  : 	bool bCloverShopGoodsIsEmpty = true;
; 105  : 	bool bMileageShopGoodsIsEmpty = true;
; 106  : 
; 107  : 	m_GoodsDataList.clear();

  0000a	8d 4b 14	 lea	 ecx, DWORD PTR [ebx+20]
  0000d	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	57		 push	 edi
  00013	50		 push	 eax
  00014	52		 push	 edx
  00015	8d 45 d8	 lea	 eax, DWORD PTR $T512198[ebp]
  00018	50		 push	 eax
  00019	c6 45 ff 01	 mov	 BYTE PTR _bEventShopGoodsIsEmpty$[ebp], 1
  0001d	c6 45 fe 01	 mov	 BYTE PTR _bCloverShopGoodsIsEmpty$[ebp], 1
  00021	c6 45 fd 01	 mov	 BYTE PTR _bMileageShopGoodsIsEmpty$[ebp], 1
  00025	e8 00 00 00 00	 call	 ?erase@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@@2@0@Z ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::erase

; 108  : 
; 109  : 	rkPacket >> m_bEventShopOpen >> m_bCloverShopOpen >> m_bMileageShopOpen;

  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  0002d	8d 43 2b	 lea	 eax, DWORD PTR [ebx+43]
  00030	50		 push	 eax
  00031	8d 7b 2a	 lea	 edi, DWORD PTR [ebx+42]
  00034	8d 73 29	 lea	 esi, DWORD PTR [ebx+41]
  00037	57		 push	 edi
  00038	56		 push	 esi
  00039	89 45 f0	 mov	 DWORD PTR tv390[ebp], eax
  0003c	89 7d e4	 mov	 DWORD PTR tv391[ebp], edi
  0003f	89 75 e8	 mov	 DWORD PTR tv392[ebp], esi
  00042	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AA_N@Z ; SP2Packet::operator>>
  00047	8b c8		 mov	 ecx, eax
  00049	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AA_N@Z ; SP2Packet::operator>>
  0004e	8b c8		 mov	 ecx, eax
  00050	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AA_N@Z ; SP2Packet::operator>>

; 110  : 
; 111  : 	if( m_bEventShopOpen || m_bCloverShopOpen || m_bMileageShopOpen )

  00055	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00058	75 11		 jne	 SHORT $LN20@ApplyGoods
  0005a	80 3f 00	 cmp	 BYTE PTR [edi], 0
  0005d	75 0c		 jne	 SHORT $LN20@ApplyGoods
  0005f	8b 45 f0	 mov	 eax, DWORD PTR tv390[ebp]
  00062	80 38 00	 cmp	 BYTE PTR [eax], 0
  00065	0f 84 d5 00 00
	00		 je	 $LN81@ApplyGoods
$LN20@ApplyGoods:

; 112  : 	{
; 113  : 		// 상점이 오픈되어있다
; 114  : 		int iMaxGoods;
; 115  : 		rkPacket >> iMaxGoods;

  0006b	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  0006e	8d 45 ec	 lea	 eax, DWORD PTR _iMaxGoods$505323[ebp]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>

; 116  : 		for(int i = 0;i < iMaxGoods;i++)

  00077	33 ff		 xor	 edi, edi
  00079	89 7d f4	 mov	 DWORD PTR _i$505324[ebp], edi
  0007c	39 7d ec	 cmp	 DWORD PTR _iMaxGoods$505323[ebp], edi
  0007f	0f 8e b6 00 00
	00		 jle	 $LN79@ApplyGoods
$LL82@ApplyGoods:

; 117  : 		{
; 118  : 			DWORD dwGoodsIndex, dwNeedEtcItem;
; 119  : 			int iGoodsCount, iNeedEtcItemCount;
; 120  : 			rkPacket >> dwGoodsIndex >> iGoodsCount >> dwNeedEtcItem >> iNeedEtcItemCount;

  00085	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  00088	8d 45 d8	 lea	 eax, DWORD PTR _iNeedEtcItemCount$505331[ebp]
  0008b	50		 push	 eax
  0008c	8d 45 f8	 lea	 eax, DWORD PTR _dwNeedEtcItem$505329[ebp]
  0008f	50		 push	 eax
  00090	8d 45 dc	 lea	 eax, DWORD PTR _iGoodsCount$505330[ebp]
  00093	50		 push	 eax
  00094	8d 45 e0	 lea	 eax, DWORD PTR _dwGoodsIndex$505328[ebp]
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>
  000a4	8b c8		 mov	 ecx, eax
  000a6	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>
  000ab	8b c8		 mov	 ecx, eax
  000ad	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>

; 121  : 			
; 122  : 			vGoodsDatabase::iterator iter = m_GoodsDatabase.begin();

  000b2	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b5	eb 0a		 jmp	 SHORT $LN87@ApplyGoods

; 123  : 			for(;iter != m_GoodsDatabase.end();++iter)

$LL52@ApplyGoods:

; 124  : 			{
; 125  : 				GoodsDatabase &rkDatabase = *iter;
; 126  : 				if( rkDatabase.m_dwGoodsIndex == dwGoodsIndex )

  000b7	8b 06		 mov	 eax, DWORD PTR [esi]
  000b9	3b 45 e0	 cmp	 eax, DWORD PTR _dwGoodsIndex$505328[ebp]
  000bc	74 0a		 je	 SHORT $LN76@ApplyGoods

; 123  : 			for(;iter != m_GoodsDatabase.end();++iter)

  000be	83 c6 24	 add	 esi, 36			; 00000024H
$LN87@ApplyGoods:
  000c1	3b 73 08	 cmp	 esi, DWORD PTR [ebx+8]
  000c4	75 f1		 jne	 SHORT $LL52@ApplyGoods

; 124  : 			{
; 125  : 				GoodsDatabase &rkDatabase = *iter;
; 126  : 				if( rkDatabase.m_dwGoodsIndex == dwGoodsIndex )

  000c6	eb 5b		 jmp	 SHORT $LN18@ApplyGoods
$LN76@ApplyGoods:

; 127  : 				{
; 128  : 					GoodsData kData;

  000c8	8d 4d b4	 lea	 ecx, DWORD PTR _kData$505482[ebp+12]
  000cb	e8 00 00 00 00	 call	 ??0GoodsDatabase@ioEventGoodsMgr@@QAE@XZ ; ioEventGoodsMgr::GoodsDatabase::GoodsDatabase

; 129  : 					kData.m_Database = rkDatabase;
; 130  : 					kData.m_iGoodsCount = iGoodsCount;

  000d0	8b 45 dc	 mov	 eax, DWORD PTR _iGoodsCount$505330[ebp]
  000d3	6a 09		 push	 9
  000d5	59		 pop	 ecx
  000d6	8d 7d b4	 lea	 edi, DWORD PTR _kData$505482[ebp+12]
  000d9	f3 a5		 rep movsd
  000db	89 45 a8	 mov	 DWORD PTR _kData$505482[ebp], eax

; 131  : 					kData.m_dwNeedEtcItem = dwNeedEtcItem;

  000de	8b 45 f8	 mov	 eax, DWORD PTR _dwNeedEtcItem$505329[ebp]
  000e1	89 45 ac	 mov	 DWORD PTR _kData$505482[ebp+4], eax

; 132  : 					kData.m_iNeedEtcItemCount = iNeedEtcItemCount;

  000e4	8b 45 d8	 mov	 eax, DWORD PTR _iNeedEtcItemCount$505331[ebp]
  000e7	89 45 b0	 mov	 DWORD PTR _kData$505482[ebp+8], eax

; 133  : 					m_GoodsDataList.push_back( kData );

  000ea	8d 45 a8	 lea	 eax, DWORD PTR _kData$505482[ebp]
  000ed	50		 push	 eax
  000ee	8d 4b 14	 lea	 ecx, DWORD PTR [ebx+20]
  000f1	e8 00 00 00 00	 call	 ?push_back@?$vector@UGoodsData@ioEventGoodsMgr@@V?$allocator@UGoodsData@ioEventGoodsMgr@@@std@@@std@@QAEXABUGoodsData@ioEventGoodsMgr@@@Z ; std::vector<ioEventGoodsMgr::GoodsData,std::allocator<ioEventGoodsMgr::GoodsData> >::push_back

; 134  : 
; 135  : 					if( dwNeedEtcItem == ioEtcItem::EIT_ETC_SILVER_COIN )

  000f6	81 7d f8 71 42
	0f 00		 cmp	 DWORD PTR _dwNeedEtcItem$505329[ebp], 1000049 ; 000f4271H
  000fd	75 06		 jne	 SHORT $LN12@ApplyGoods

; 136  : 						bEventShopGoodsIsEmpty = false;

  000ff	c6 45 ff 00	 mov	 BYTE PTR _bEventShopGoodsIsEmpty$[ebp], 0
  00103	eb 1c		 jmp	 SHORT $LN80@ApplyGoods
$LN12@ApplyGoods:

; 137  : 					else if( dwNeedEtcItem == ioEtcItem::EIT_ETC_CLOVER )

  00105	81 7d f8 b9 49
	0f 00		 cmp	 DWORD PTR _dwNeedEtcItem$505329[ebp], 1001913 ; 000f49b9H
  0010c	75 06		 jne	 SHORT $LN10@ApplyGoods

; 138  : 						bCloverShopGoodsIsEmpty = false;

  0010e	c6 45 fe 00	 mov	 BYTE PTR _bCloverShopGoodsIsEmpty$[ebp], 0
  00112	eb 0d		 jmp	 SHORT $LN80@ApplyGoods
$LN10@ApplyGoods:

; 139  : 					else if ( dwNeedEtcItem == ioEtcItem::EIT_ETC_MILEAGE_COIN )

  00114	81 7d f8 41 58
	0f 00		 cmp	 DWORD PTR _dwNeedEtcItem$505329[ebp], 1005633 ; 000f5841H
  0011b	75 04		 jne	 SHORT $LN80@ApplyGoods

; 140  : 						bMileageShopGoodsIsEmpty = false;

  0011d	c6 45 fd 00	 mov	 BYTE PTR _bMileageShopGoodsIsEmpty$[ebp], 0
$LN80@ApplyGoods:

; 138  : 						bCloverShopGoodsIsEmpty = false;

  00121	33 ff		 xor	 edi, edi
$LN18@ApplyGoods:

; 116  : 		for(int i = 0;i < iMaxGoods;i++)

  00123	ff 45 f4	 inc	 DWORD PTR _i$505324[ebp]
  00126	8b 45 f4	 mov	 eax, DWORD PTR _i$505324[ebp]
  00129	3b 45 ec	 cmp	 eax, DWORD PTR _iMaxGoods$505323[ebp]
  0012c	0f 8c 53 ff ff
	ff		 jl	 $LL82@ApplyGoods

; 141  : 
; 142  : 					break;
; 143  : 				}
; 144  : 			}
; 145  : 		}
; 146  : 	}
; 147  : 
; 148  : 	if( bEventShopGoodsIsEmpty )

  00132	80 7d ff 00	 cmp	 BYTE PTR _bEventShopGoodsIsEmpty$[ebp], 0
  00136	74 0c		 je	 SHORT $LN84@ApplyGoods
  00138	8b 75 e8	 mov	 esi, DWORD PTR tv392[ebp]
$LN79@ApplyGoods:

; 149  : 		m_bEventShopOpen = false;

  0013b	c6 06 00	 mov	 BYTE PTR [esi], 0
  0013e	eb 07		 jmp	 SHORT $LN7@ApplyGoods
$LN81@ApplyGoods:

; 141  : 
; 142  : 					break;
; 143  : 				}
; 144  : 			}
; 145  : 		}
; 146  : 	}
; 147  : 
; 148  : 	if( bEventShopGoodsIsEmpty )

  00140	33 ff		 xor	 edi, edi
  00142	eb f7		 jmp	 SHORT $LN79@ApplyGoods
$LN84@ApplyGoods:

; 149  : 		m_bEventShopOpen = false;

  00144	8b 75 e8	 mov	 esi, DWORD PTR tv392[ebp]
$LN7@ApplyGoods:

; 150  : 
; 151  : 	if( bCloverShopGoodsIsEmpty )

  00147	80 7d fe 00	 cmp	 BYTE PTR _bCloverShopGoodsIsEmpty$[ebp], 0
  0014b	74 06		 je	 SHORT $LN85@ApplyGoods

; 152  : 		m_bCloverShopOpen = false;

  0014d	8b 45 e4	 mov	 eax, DWORD PTR tv391[ebp]
  00150	c6 00 00	 mov	 BYTE PTR [eax], 0
$LN85@ApplyGoods:

; 153  : 
; 154  : 	if( bMileageShopGoodsIsEmpty )

  00153	80 7d fd 00	 cmp	 BYTE PTR _bMileageShopGoodsIsEmpty$[ebp], 0
  00157	74 06		 je	 SHORT $LN86@ApplyGoods

; 155  : 		m_bMileageShopOpen = false;

  00159	8b 45 f0	 mov	 eax, DWORD PTR tv390[ebp]
  0015c	c6 00 00	 mov	 BYTE PTR [eax], 0
$LN86@ApplyGoods:

; 156  : 
; 157  : 	NewShopWnd *pNewShopWnd = dynamic_cast< NewShopWnd *>( g_GUIMgr.FindWnd( NEW_SHOP_WND ) );

  0015f	57		 push	 edi
  00160	68 00 00 00 00	 push	 OFFSET ??_R0?AVNewShopWnd@@@8
  00165	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWnd@@@8
  0016a	57		 push	 edi
  0016b	68 f8 17 00 00	 push	 6136			; 000017f8H
  00170	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  00175	8b c8		 mov	 ecx, eax
  00177	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindWnd@ioGUIManager@@QAEPAVioWnd@@K@Z
  0017d	50		 push	 eax
  0017e	e8 00 00 00 00	 call	 ___RTDynamicCast
  00183	8b d8		 mov	 ebx, eax
  00185	83 c4 14	 add	 esp, 20			; 00000014H

; 158  : 	
; 159  : 	if( pNewShopWnd )

  00188	3b df		 cmp	 ebx, edi
  0018a	74 3c		 je	 SHORT $LN1@ApplyGoods

; 160  : 	{
; 161  : 		if( m_bEventShopOpen )

  0018c	80 3e 00	 cmp	 BYTE PTR [esi], 0
  0018f	74 0d		 je	 SHORT $LN3@ApplyGoods

; 162  : 			pNewShopWnd->GoodsSyncComplete( EST_EVENT, false );

  00191	57		 push	 edi
  00192	57		 push	 edi
  00193	57		 push	 edi
  00194	57		 push	 edi
  00195	6a 01		 push	 1
  00197	8b cb		 mov	 ecx, ebx
  00199	e8 00 00 00 00	 call	 ?GoodsSyncComplete@NewShopWnd@@QAEXW4EventShopType@@_NKHH@Z ; NewShopWnd::GoodsSyncComplete
$LN3@ApplyGoods:

; 163  : 		if( m_bCloverShopOpen )

  0019e	8b 45 e4	 mov	 eax, DWORD PTR tv391[ebp]
  001a1	80 38 00	 cmp	 BYTE PTR [eax], 0
  001a4	74 0d		 je	 SHORT $LN2@ApplyGoods

; 164  : 			pNewShopWnd->GoodsSyncComplete( EST_CLOVER, false );

  001a6	57		 push	 edi
  001a7	57		 push	 edi
  001a8	57		 push	 edi
  001a9	57		 push	 edi
  001aa	6a 02		 push	 2
  001ac	8b cb		 mov	 ecx, ebx
  001ae	e8 00 00 00 00	 call	 ?GoodsSyncComplete@NewShopWnd@@QAEXW4EventShopType@@_NKHH@Z ; NewShopWnd::GoodsSyncComplete
$LN2@ApplyGoods:

; 165  : 		if( m_bMileageShopOpen )

  001b3	8b 45 f0	 mov	 eax, DWORD PTR tv390[ebp]
  001b6	80 38 00	 cmp	 BYTE PTR [eax], 0
  001b9	74 0d		 je	 SHORT $LN1@ApplyGoods

; 166  : 			pNewShopWnd->GoodsSyncComplete( EST_MILEAGE, false );

  001bb	57		 push	 edi
  001bc	57		 push	 edi
  001bd	57		 push	 edi
  001be	57		 push	 edi
  001bf	6a 03		 push	 3
  001c1	8b cb		 mov	 ecx, ebx
  001c3	e8 00 00 00 00	 call	 ?GoodsSyncComplete@NewShopWnd@@QAEXW4EventShopType@@_NKHH@Z ; NewShopWnd::GoodsSyncComplete
$LN1@ApplyGoods:
  001c8	5f		 pop	 edi
  001c9	5e		 pop	 esi
  001ca	5b		 pop	 ebx

; 167  : 	}
; 168  : }

  001cb	c9		 leave
  001cc	c2 04 00	 ret	 4
?ApplyGoodsList@ioEventGoodsMgr@@QAEXAAVSP2Packet@@@Z ENDP ; ioEventGoodsMgr::ApplyGoodsList
_TEXT	ENDS
END
