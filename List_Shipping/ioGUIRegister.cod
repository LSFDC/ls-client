; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\GUI\ioGUIRegister.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?argNum@?$CallHlp@P6AXPB_W@Z@Callback@_Data@ASInterface@@2IB ; ASInterface::_Data::Callback::CallHlp<void (__cdecl*)(wchar_t const *)>::argNum
PUBLIC	?argNum@?$CallHlp@P6AXPB_W0@Z@Callback@_Data@ASInterface@@2IB ; ASInterface::_Data::Callback::CallHlp<void (__cdecl*)(wchar_t const *,wchar_t const *)>::argNum
;	COMDAT ?argNum@?$CallHlp@P6AXPB_W0@Z@Callback@_Data@ASInterface@@2IB
CONST	SEGMENT
?argNum@?$CallHlp@P6AXPB_W0@Z@Callback@_Data@ASInterface@@2IB DD 02H ; ASInterface::_Data::Callback::CallHlp<void (__cdecl*)(wchar_t const *,wchar_t const *)>::argNum
CONST	ENDS
;	COMDAT ?argNum@?$CallHlp@P6AXPB_W@Z@Callback@_Data@ASInterface@@2IB
CONST	SEGMENT
?argNum@?$CallHlp@P6AXPB_W@Z@Callback@_Data@ASInterface@@2IB DD 01H ; ASInterface::_Data::Callback::CallHlp<void (__cdecl*)(wchar_t const *)>::argNum
CONST	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1exception@std@@UAE@XZ
  00012	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00016	74 07		 je	 SHORT $LN1@scalar
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	59		 pop	 ecx
$LN1@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	return (_Where);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 58   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 62   : 	}

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	_wmemchr
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\wchar.h
;	COMDAT _wmemchr
_TEXT	SEGMENT
__S$ = 8						; size = 4
__C$ = 12						; size = 2
__N$ = 16						; size = 4
_wmemchr PROC						; COMDAT

; 1199 :         {for (; 0 < _N; ++_S, --_N)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 7d 10 00	 cmp	 DWORD PTR __N$[ebp], 0
  00007	76 14		 jbe	 SHORT $LN2@wmemchr
  00009	8b 45 08	 mov	 eax, DWORD PTR __S$[ebp]
$LL4@wmemchr:

; 1200 :                 if (*_S == _C)

  0000c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000f	66 3b 4d 0c	 cmp	 cx, WORD PTR __C$[ebp]
  00013	74 0a		 je	 SHORT $LN5@wmemchr

; 1199 :         {for (; 0 < _N; ++_S, --_N)

  00015	83 c0 02	 add	 eax, 2
  00018	ff 4d 10	 dec	 DWORD PTR __N$[ebp]
  0001b	75 ef		 jne	 SHORT $LL4@wmemchr
$LN2@wmemchr:

; 1201 :                         return (_CONST_RETURN wchar_t *)(_S);
; 1202 :         return (0); }

  0001d	33 c0		 xor	 eax, eax
$LN5@wmemchr:
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
_wmemchr ENDP
_TEXT	ENDS
PUBLIC	_wmemcmp
; Function compile flags: /Ogsp
;	COMDAT _wmemcmp
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcmp PROC						; COMDAT

; 1204 :         {for (; 0 < _N; ++_S1, ++_S2, --_N)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 7d 10 00	 cmp	 DWORD PTR __N$[ebp], 0
  00007	76 19		 jbe	 SHORT $LN2@wmemcmp
  00009	8b 4d 0c	 mov	 ecx, DWORD PTR __S2$[ebp]
  0000c	8b 45 08	 mov	 eax, DWORD PTR __S1$[ebp]
$LL4@wmemcmp:

; 1205 :                 if (*_S1 != *_S2)

  0000f	66 8b 10	 mov	 dx, WORD PTR [eax]
  00012	66 3b 11	 cmp	 dx, WORD PTR [ecx]
  00015	75 0f		 jne	 SHORT $LN8@wmemcmp

; 1204 :         {for (; 0 < _N; ++_S1, ++_S2, --_N)

  00017	83 c0 02	 add	 eax, 2
  0001a	83 c1 02	 add	 ecx, 2
  0001d	ff 4d 10	 dec	 DWORD PTR __N$[ebp]
  00020	75 ed		 jne	 SHORT $LL4@wmemcmp
$LN2@wmemcmp:

; 1207 :         return (0); }

  00022	33 c0		 xor	 eax, eax
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
$LN8@wmemcmp:

; 1206 :                         return (*_S1 < *_S2 ? -1 : +1);

  00026	0f b7 00	 movzx	 eax, WORD PTR [eax]
  00029	66 3b 01	 cmp	 ax, WORD PTR [ecx]
  0002c	1b c0		 sbb	 eax, eax
  0002e	83 e0 fe	 and	 eax, -2			; fffffffeH
  00031	40		 inc	 eax

; 1207 :         return (0); }

  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
_wmemcmp ENDP
_TEXT	ENDS
PUBLIC	_wmemcpy
EXTRN	_memcpy:PROC
; Function compile flags: /Ogsp
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 1210 :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1211 : #pragma warning( push )
; 1212 : #pragma warning( disable : 4996 6386 )
; 1213 :             return (wchar_t *)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00003	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  00006	03 c0		 add	 eax, eax
  00008	50		 push	 eax
  00009	ff 75 0c	 push	 DWORD PTR __S2$[ebp]
  0000c	ff 75 08	 push	 DWORD PTR __S1$[ebp]
  0000f	e8 00 00 00 00	 call	 _memcpy
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1214 : #pragma warning( pop )
; 1215 :         }

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
_wmemcpy ENDP
_TEXT	ENDS
PUBLIC	_wmemmove
EXTRN	__imp__memmove:PROC
; Function compile flags: /Ogsp
;	COMDAT _wmemmove
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemmove PROC						; COMDAT

; 1218 :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1219 : #pragma warning( push )
; 1220 : #pragma warning( disable : 4996 6386 )
; 1221 : #pragma warning( disable : 6387)
; 1222 : 			/* prefast noise VSW 493303 */
; 1223 :             return (wchar_t *)memmove(_S1, _S2, _N*sizeof(wchar_t));

  00003	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  00006	03 c0		 add	 eax, eax
  00008	50		 push	 eax
  00009	ff 75 0c	 push	 DWORD PTR __S2$[ebp]
  0000c	ff 75 08	 push	 DWORD PTR __S1$[ebp]
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1224 : #pragma warning( pop )
; 1225 :         }

  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
_wmemmove ENDP
_TEXT	ENDS
PUBLIC	?compare@?$char_traits@_W@std@@SAHPB_W0I@Z	; std::char_traits<wchar_t>::compare
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
;	COMDAT ?compare@?$char_traits@_W@std@@SAHPB_W0I@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?compare@?$char_traits@_W@std@@SAHPB_W0I@Z PROC		; std::char_traits<wchar_t>::compare, COMDAT

; 291  : 		{	// compare [_First1, _First1 + _Count) with [_First2, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 293  : 		}

  00003	5d		 pop	 ebp

; 292  : 		return (_CSTD wmemcmp(_First1, _First2, _Count));

  00004	e9 00 00 00 00	 jmp	 _wmemcmp
?compare@?$char_traits@_W@std@@SAHPB_W0I@Z ENDP		; std::char_traits<wchar_t>::compare
_TEXT	ENDS
PUBLIC	?length@?$char_traits@_W@std@@SAIPB_W@Z		; std::char_traits<wchar_t>::length
; Function compile flags: /Ogsp
;	COMDAT ?length@?$char_traits@_W@std@@SAIPB_W@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@_W@std@@SAIPB_W@Z PROC		; std::char_traits<wchar_t>::length, COMDAT

; 296  : 		{	// find length of null-terminated sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 297  : 		return (_CSTD wcslen(_First));

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8d 50 02	 lea	 edx, DWORD PTR [eax+2]
$LL3@length:
  00009	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000c	83 c0 02	 add	 eax, 2
  0000f	66 85 c9	 test	 cx, cx
  00012	75 f5		 jne	 SHORT $LL3@length
  00014	2b c2		 sub	 eax, edx
  00016	d1 f8		 sar	 eax, 1

; 298  : 		}

  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?length@?$char_traits@_W@std@@SAIPB_W@Z ENDP		; std::char_traits<wchar_t>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z	; std::char_traits<wchar_t>::copy
; Function compile flags: /Ogsp
;	COMDAT ?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z PROC	; std::char_traits<wchar_t>::copy, COMDAT

; 302  : 		{	// copy [_First1, _First1 + _Count) to [_First2, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 303  : 		return ((_Elem *)_CSTD wmemcpy(_First1, _First2, _Count));

  00003	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	03 c0		 add	 eax, eax
  00008	50		 push	 eax
  00009	ff 75 0c	 push	 DWORD PTR __First2$[ebp]
  0000c	ff 75 08	 push	 DWORD PTR __First1$[ebp]
  0000f	e8 00 00 00 00	 call	 _memcpy
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 304  : 		}

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ENDP	; std::char_traits<wchar_t>::copy
_TEXT	ENDS
PUBLIC	?find@?$char_traits@_W@std@@SAPB_WPB_WIAB_W@Z	; std::char_traits<wchar_t>::find
; Function compile flags: /Ogsp
;	COMDAT ?find@?$char_traits@_W@std@@SAPB_WPB_WIAB_W@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 4
?find@?$char_traits@_W@std@@SAPB_WPB_WIAB_W@Z PROC	; std::char_traits<wchar_t>::find, COMDAT

; 316  : 		{	// look for _Ch in [_First, _First + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 317  : 		return ((const _Elem *)_CSTD wmemchr(_First, _Ch, _Count));

  00003	8b 45 10	 mov	 eax, DWORD PTR __Ch$[ebp]
  00006	0f b7 00	 movzx	 eax, WORD PTR [eax]
  00009	ff 75 0c	 push	 DWORD PTR __Count$[ebp]
  0000c	50		 push	 eax
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 _wmemchr
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH

; 318  : 		}

  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?find@?$char_traits@_W@std@@SAPB_WPB_WIAB_W@Z ENDP	; std::char_traits<wchar_t>::find
_TEXT	ENDS
PUBLIC	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z	; std::char_traits<wchar_t>::move
; Function compile flags: /Ogsp
;	COMDAT ?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z PROC	; std::char_traits<wchar_t>::move, COMDAT

; 322  : 		{	// copy [_First1, _First1 + _Count) to [_First2, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 323  : 		return ((_Elem *)_CSTD wmemmove(_First1, _First2, _Count));

  00003	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	03 c0		 add	 eax, eax
  00008	50		 push	 eax
  00009	ff 75 0c	 push	 DWORD PTR __First2$[ebp]
  0000c	ff 75 08	 push	 DWORD PTR __First1$[ebp]
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH

; 324  : 		}

  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ENDP	; std::char_traits<wchar_t>::move
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z	; std::char_traits<wchar_t>::assign
; Function compile flags: /Ogsp
;	COMDAT ?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT

; 332  : 		{	// assign an element

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 333  : 		_Left = _Right;

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	66 8b 00	 mov	 ax, WORD PTR [eax]
  00009	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000c	66 89 01	 mov	 WORD PTR [ecx], ax

; 334  : 		}

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ENDP	; std::char_traits<wchar_t>::assign
_TEXT	ENDS
PUBLIC	?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z	; std::char_traits<wchar_t>::eq_int_type
; Function compile flags: /Ogsp
;	COMDAT ?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z PROC	; std::char_traits<wchar_t>::eq_int_type, COMDAT

; 358  : 		{	// test for metacharacter equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 359  : 		return (_Left == _Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	66 8b 00	 mov	 ax, WORD PTR [eax]
  00009	8b 55 0c	 mov	 edx, DWORD PTR __Right$[ebp]
  0000c	33 c9		 xor	 ecx, ecx
  0000e	66 3b 02	 cmp	 ax, WORD PTR [edx]
  00011	0f 94 c0	 sete	 al

; 360  : 		}

  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ENDP	; std::char_traits<wchar_t>::eq_int_type
_TEXT	ENDS
PUBLIC	?eof@?$char_traits@_W@std@@SAGXZ		; std::char_traits<wchar_t>::eof
; Function compile flags: /Ogsp
;	COMDAT ?eof@?$char_traits@_W@std@@SAGXZ
_TEXT	SEGMENT
?eof@?$char_traits@_W@std@@SAGXZ PROC			; std::char_traits<wchar_t>::eof, COMDAT

; 369  : 		return (WEOF);

  00000	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH

; 370  : 		}

  00005	c3		 ret	 0
?eof@?$char_traits@_W@std@@SAGXZ ENDP			; std::char_traits<wchar_t>::eof
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	?_Register@facet@locale@std@@QAEXXZ		; std::locale::facet::_Register
EXTRN	?_Facet_Register@facet@locale@std@@CAXPAV123@@Z:PROC ; std::locale::facet::_Facet_Register
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xlocale
;	COMDAT ?_Register@facet@locale@std@@QAEXXZ
_TEXT	SEGMENT
?_Register@facet@locale@std@@QAEXXZ PROC		; std::locale::facet::_Register, COMDAT
; _this$ = ecx

; 129  :  #if defined(_M_CEE)
; 130  : 			_Facet_Register_m(this);
; 131  : 
; 132  :  #else /* defined(_M_CEE) */
; 133  : 			_Facet_Register(this);

  00000	51		 push	 ecx
  00001	e8 00 00 00 00	 call	 ?_Facet_Register@facet@locale@std@@CAXPAV123@@Z ; std::locale::facet::_Facet_Register
  00006	59		 pop	 ecx

; 134  :  #endif /* defined(_M_CEE) */
; 135  : 			}

  00007	c3		 ret	 0
?_Register@facet@locale@std@@QAEXXZ ENDP		; std::locale::facet::_Register
_TEXT	ENDS
PUBLIC	??1locale@std@@QAE@XZ				; std::locale::~locale
EXTRN	__imp_?_Decref@facet@locale@std@@QAEPAV123@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1locale@std@@QAE@XZ
_TEXT	SEGMENT
??1locale@std@@QAE@XZ PROC				; std::locale::~locale, COMDAT
; _this$ = ecx

; 410  : 		if (_Ptr != 0)

  00000	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00002	85 c9		 test	 ecx, ecx
  00004	74 12		 je	 SHORT $LN4@locale

; 411  : 			_DELETE_CRT(_Ptr->_Decref());

  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Decref@facet@locale@std@@QAEPAV123@XZ
  0000c	85 c0		 test	 eax, eax
  0000e	74 08		 je	 SHORT $LN4@locale
  00010	8b 10		 mov	 edx, DWORD PTR [eax]
  00012	6a 01		 push	 1
  00014	8b c8		 mov	 ecx, eax
  00016	ff 12		 call	 DWORD PTR [edx]
$LN4@locale:

; 412  : 		}

  00018	c3		 ret	 0
??1locale@std@@QAE@XZ ENDP				; std::locale::~locale
_TEXT	ENDS
PUBLIC	?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z	; std::locale::_Getfacet
EXTRN	__imp_?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z
_TEXT	SEGMENT
__Id$ = 8						; size = 4
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z PROC		; std::locale::_Getfacet, COMDAT
; _this$ = ecx

; 436  : 		{	// look up a facet in locale object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 437  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount
; 438  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	8b 75 08	 mov	 esi, DWORD PTR __Id$[ebp]
  00009	3b 71 0c	 cmp	 esi, DWORD PTR [ecx+12]
  0000c	73 08		 jae	 SHORT $LN6@Getfacet
  0000e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00011	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]
  00014	eb 02		 jmp	 SHORT $LN7@Getfacet
$LN6@Getfacet:
  00016	33 c0		 xor	 eax, eax
$LN7@Getfacet:

; 439  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  00018	85 c0		 test	 eax, eax
  0001a	75 1a		 jne	 SHORT $LN1@Getfacet
  0001c	38 41 14	 cmp	 BYTE PTR [ecx+20], al
  0001f	74 15		 je	 SHORT $LN1@Getfacet

; 440  : 			return (_Facptr);	// found facet or not transparent
; 441  : 		else
; 442  : 			{	// look in current locale
; 443  : 			locale::_Locimp *_Ptr = _Getgloballocale();

  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ

; 444  : 			return (_Id < _Ptr->_Facetcount
; 445  : 				? _Ptr->_Facetvec[_Id]	// get from current locale
; 446  : 				: 0);	// no entry in current locale

  00027	3b 70 0c	 cmp	 esi, DWORD PTR [eax+12]
  0002a	73 08		 jae	 SHORT $LN8@Getfacet
  0002c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002f	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]
  00032	eb 02		 jmp	 SHORT $LN1@Getfacet
$LN8@Getfacet:
  00034	33 c0		 xor	 eax, eax
$LN1@Getfacet:
  00036	5e		 pop	 esi

; 447  : 			}
; 448  : 		}

  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ENDP		; std::locale::_Getfacet
_TEXT	ENDS
PUBLIC	??0_Data@ASValue@@QAE@XZ			; ASValue::_Data::_Data
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\flashplayertodirectx\include\asinterface.inl
;	COMDAT ??0_Data@ASValue@@QAE@XZ
_TEXT	SEGMENT
??0_Data@ASValue@@QAE@XZ PROC				; ASValue::_Data::_Data, COMDAT
; _this$ = ecx

; 40   : 	{}

  00000	8b c1		 mov	 eax, ecx
  00002	83 08 ff	 or	 DWORD PTR [eax], -1
  00005	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  00009	c3		 ret	 0
??0_Data@ASValue@@QAE@XZ ENDP				; ASValue::_Data::_Data
_TEXT	ENDS
PUBLIC	?Destruct@_Data@ASValue@@QAEXXZ			; ASValue::_Data::Destruct
PUBLIC	??1_Data@ASValue@@QAE@XZ			; ASValue::_Data::~_Data
; Function compile flags: /Ogsp
;	COMDAT ??1_Data@ASValue@@QAE@XZ
_TEXT	SEGMENT
??1_Data@ASValue@@QAE@XZ PROC				; ASValue::_Data::~_Data, COMDAT
; _this$ = ecx

; 43   : 		Destruct();

  00000	e9 00 00 00 00	 jmp	 ?Destruct@_Data@ASValue@@QAEXXZ ; ASValue::_Data::Destruct
??1_Data@ASValue@@QAE@XZ ENDP				; ASValue::_Data::~_Data
_TEXT	ENDS
PUBLIC	??0ASValue@@QAE@XZ				; ASValue::ASValue
EXTRN	??2@YAPAXI@Z:PROC				; operator new
; Function compile flags: /Ogsp
;	COMDAT ??0ASValue@@QAE@XZ
_TEXT	SEGMENT
??0ASValue@@QAE@XZ PROC					; ASValue::ASValue, COMDAT
; _this$ = ecx

; 221  : {}

  00000	56		 push	 esi
  00001	6a 08		 push	 8
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	59		 pop	 ecx
  0000b	85 c0		 test	 eax, eax
  0000d	74 09		 je	 SHORT $LN3@ASValue
  0000f	83 08 ff	 or	 DWORD PTR [eax], -1
  00012	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  00016	eb 02		 jmp	 SHORT $LN4@ASValue
$LN3@ASValue:
  00018	33 c0		 xor	 eax, eax
$LN4@ASValue:
  0001a	89 06		 mov	 DWORD PTR [esi], eax
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	c3		 ret	 0
??0ASValue@@QAE@XZ ENDP					; ASValue::ASValue
_TEXT	ENDS
PUBLIC	??_G_Data@ASValue@@QAEPAXI@Z			; ASValue::_Data::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_G_Data@ASValue@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G_Data@ASValue@@QAEPAXI@Z PROC			; ASValue::_Data::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ?Destruct@_Data@ASValue@@QAEXXZ ; ASValue::_Data::Destruct
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@2
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@2:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_G_Data@ASValue@@QAEPAXI@Z ENDP			; ASValue::_Data::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?IsEmpty@ASValue@@QBE_NXZ			; ASValue::IsEmpty
; Function compile flags: /Ogsp
;	COMDAT ?IsEmpty@ASValue@@QBE_NXZ
_TEXT	SEGMENT
?IsEmpty@ASValue@@QBE_NXZ PROC				; ASValue::IsEmpty, COMDAT
; _this$ = ecx

; 253  : 	return m_data.type == -1;

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	33 c9		 xor	 ecx, ecx
  00004	83 38 ff	 cmp	 DWORD PTR [eax], -1
  00007	0f 94 c0	 sete	 al

; 254  : }

  0000a	c3		 ret	 0
?IsEmpty@ASValue@@QBE_NXZ ENDP				; ASValue::IsEmpty
_TEXT	ENDS
PUBLIC	?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length, COMDAT
; _this$ = ecx

; 1507 : 		return (this->_Mysize);

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 1508 : 		}

  00003	c3		 ret	 0
?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
_TEXT	ENDS
PUBLIC	?size@?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@QBEIXZ ; std::vector<ASValue,std::allocator<ASValue> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@QBEIXZ PROC ; std::vector<ASValue,std::allocator<ASValue> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@QBEIXZ ENDP ; std::vector<ASValue,std::allocator<ASValue> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@QBEABUASValue@@I@Z ; std::vector<ASValue,std::allocator<ASValue> >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@QBEABUASValue@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@QBEABUASValue@@I@Z PROC ; std::vector<ASValue,std::allocator<ASValue> >::operator[], COMDAT
; _this$ = ecx

; 912  : 		{	// subscript nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 913  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 914  : 		if (size() <= _Pos)
; 915  : 			{	// report error
; 916  : 			_DEBUG_ERROR("vector subscript out of range");
; 917  : 			_SCL_SECURE_OUT_OF_RANGE;
; 918  : 			}
; 919  : 
; 920  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 921  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 922  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 923  : 
; 924  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00008	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 925  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@QBEABUASValue@@I@Z ENDP ; std::vector<ASValue,std::allocator<ASValue> >::operator[]
_TEXT	ENDS
PUBLIC	?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size
; Function compile flags: /Ogsp
;	COMDAT ?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 1c		 push	 28			; 0000001cH
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 880  : 		}

  0000b	c3		 ret	 0
?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UASValue@@V?$allocator@UASValue@@@std@@@std@@QAE@XZ ; std::_Vector_val<ASValue,std::allocator<ASValue> >::~_Vector_val<ASValue,std::allocator<ASValue> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@UASValue@@V?$allocator@UASValue@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UASValue@@V?$allocator@UASValue@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ASValue,std::allocator<ASValue> >::~_Vector_val<ASValue,std::allocator<ASValue> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@UASValue@@V?$allocator@UASValue@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ASValue,std::allocator<ASValue> >::~_Vector_val<ASValue,std::allocator<ASValue> >
_TEXT	ENDS
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >::operator==
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())
; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 331  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::_Mynode
; Function compile flags: /Ogsp
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 123  : 		}

  00002	c3		 ret	 0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IBE_NPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IBE_NPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IBE_NPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IBE_NPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IBEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IBEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IBEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IBEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UASValue@@@std@@QAEXPAUASValue@@I@Z ; std::allocator<ASValue>::deallocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@UASValue@@@std@@QAEXPAUASValue@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UASValue@@@std@@QAEXPAUASValue@@I@Z PROC ; std::allocator<ASValue>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@UASValue@@@std@@QAEXPAUASValue@@I@Z ENDP ; std::allocator<ASValue>::deallocate
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Isnil
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 612  : 		return ((char&)(*_Pnode)._Isnil);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 2d	 add	 eax, 45			; 0000002dH

; 613  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Left
; Function compile flags: /Ogsp
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Parent
; Function compile flags: /Ogsp
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 628  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Right
; Function compile flags: /Ogsp
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 633  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Myval
; Function compile flags: /Ogsp
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 637  : 		return ((reference)(*_Pnode)._Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 638  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Min
; Function compile flags: /Ogsp
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Min
$LL2@Min:

; 650  : 			_Pnode = _Left(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Min:

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	80 79 2d 00	 cmp	 BYTE PTR [ecx+45], 0
  00010	74 f6		 je	 SHORT $LL2@Min

; 651  : 		return (_Pnode);
; 652  : 		}

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?_Min@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Node>::deallocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEHH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
;	COMDAT ?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEHH@Z
_TEXT	SEGMENT
__Mode$ = 8						; size = 4
?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEHH@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate, COMDAT
; _this$ = ecx

; 357  : 		{	// convert open mode to stream state bits

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 358  : 		_Strstate _State = (_Strstate)0;
; 359  : 		if (!(_Mode & ios_base::in))

  00003	8a 4d 08	 mov	 cl, BYTE PTR __Mode$[ebp]
  00006	33 c0		 xor	 eax, eax
  00008	f6 c1 01	 test	 cl, 1
  0000b	75 03		 jne	 SHORT $LN4@Getstate

; 360  : 			_State |= _Noread;

  0000d	6a 04		 push	 4
  0000f	58		 pop	 eax
$LN4@Getstate:

; 361  : 		if (!(_Mode & ios_base::out))

  00010	f6 c1 02	 test	 cl, 2
  00013	75 03		 jne	 SHORT $LN3@Getstate

; 362  : 			_State |= _Constant;

  00015	83 c8 02	 or	 eax, 2
$LN3@Getstate:

; 363  : 		if (_Mode & ios_base::app)

  00018	f6 c1 08	 test	 cl, 8
  0001b	74 03		 je	 SHORT $LN2@Getstate

; 364  : 			_State |= _Append;

  0001d	83 c8 08	 or	 eax, 8
$LN2@Getstate:

; 365  : 		if (_Mode & ios_base::ate)

  00020	f6 c1 04	 test	 cl, 4
  00023	74 03		 je	 SHORT $LN1@Getstate

; 366  : 			_State |= _Atend;

  00025	83 c8 10	 or	 eax, 16			; 00000010H
$LN1@Getstate:

; 367  : 		return (_State);
; 368  : 		}

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEHH@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 44   : 		this->_Adopt(_Plist);
; 45   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 1c		 push	 28			; 0000001cH
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 778  : 		}

  0000b	c3		 ret	 0
?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::capacity
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
  0000b	cc		 int	 3
?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Xlen
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Rmost
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1784 : 		return (this->_Right(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1785 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Root
; Function compile flags: /Ogsp
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1790 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Color
; Function compile flags: /Ogsp
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 607  : 		return ((char&)(*_Pnode)._Color);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 2c	 add	 eax, 44			; 0000002cH

; 608  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Max
; Function compile flags: /Ogsp
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Max
$LL2@Max:

; 643  : 			_Pnode = _Right(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Max:

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	80 79 2d 00	 cmp	 BYTE PTR [ecx+45], 0
  00011	74 f5		 je	 SHORT $LL2@Max

; 644  : 		return (_Pnode);
; 645  : 		}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Max@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBEIXZ ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBEIXZ PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 49 92 24 09	 mov	 eax, 153391689		; 09249249H

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::max_size
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Lrotate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00009	56		 push	 esi

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

  0000f	8b 30		 mov	 esi, DWORD PTR [eax]
  00011	80 7e 2d 00	 cmp	 BYTE PTR [esi+45], 0
  00015	75 03		 jne	 SHORT $LN5@Lrotate

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Lrotate:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 05		 jne	 SHORT $LN4@Lrotate

; 1772 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

  0002c	eb 0e		 jmp	 SHORT $LN1@Lrotate
$LN4@Lrotate:
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00033	75 04		 jne	 SHORT $LN2@Lrotate

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  00035	89 01		 mov	 DWORD PTR [ecx], eax

; 1775 : 		else

  00037	eb 03		 jmp	 SHORT $LN1@Lrotate
$LN2@Lrotate:

; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00039	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@Lrotate:

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0003c	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  0003e	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Rrotate
; Function compile flags: /Ogsp
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	56		 push	 esi

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

  00009	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000c	89 32		 mov	 DWORD PTR [edx], esi

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

  0000e	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00011	80 7e 2d 00	 cmp	 BYTE PTR [esi+45], 0
  00015	75 03		 jne	 SHORT $LN5@Rrotate

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Rrotate:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 05		 jne	 SHORT $LN4@Rrotate

; 1802 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

  0002c	eb 0f		 jmp	 SHORT $LN1@Rrotate
$LN4@Rrotate:
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00034	75 05		 jne	 SHORT $LN2@Rrotate

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00036	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1805 : 		else

  00039	eb 02		 jmp	 SHORT $LN1@Rrotate
$LN2@Rrotate:

; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  0003b	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@Rrotate:

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  0003d	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00040	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z PROC ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ENDP ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
PUBLIC	??$addressof@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >
; Function compile flags: /Ogsp
;	COMDAT ??$addressof@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@0@AAU10@@Z PROC ; std::addressof<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@IPAV10@@Z
_TEXT	SEGMENT
$T530743 = -12						; size = 12
$T530748 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@IPAV10@@Z PROC ; std::_Allocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 49 92 24
	09		 cmp	 ecx, 153391689		; 09249249H
  00015	77 0e		 ja	 SHORT $LN1@Allocate
  00017	6b c9 1c	 imul	 ecx, 28			; 0000001cH
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T530748[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T530748[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T530743[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T530743[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T530743[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@IPAV10@@Z ENDP ; std::_Allocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
PUBLIC	??_7IWndCreator@ioSP2GUIManager@@6B@		; ioSP2GUIManager::IWndCreator::`vftable'
PUBLIC	??0IWndCreator@ioSP2GUIManager@@QAE@XZ		; ioSP2GUIManager::IWndCreator::IWndCreator
PUBLIC	??_R4IWndCreator@ioSP2GUIManager@@6B@		; ioSP2GUIManager::IWndCreator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIWndCreator@ioSP2GUIManager@@@8		; ioSP2GUIManager::IWndCreator `RTTI Type Descriptor'
PUBLIC	??_R3IWndCreator@ioSP2GUIManager@@8		; ioSP2GUIManager::IWndCreator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IWndCreator@ioSP2GUIManager@@8		; ioSP2GUIManager::IWndCreator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IWndCreator@ioSP2GUIManager@@8	; ioSP2GUIManager::IWndCreator::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@IWndCreator@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IWndCreator@ioSP2GUIManager@@8 DD FLAT:??_R0?AVIWndCreator@ioSP2GUIManager@@@8 ; ioSP2GUIManager::IWndCreator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IWndCreator@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R2IWndCreator@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R2IWndCreator@ioSP2GUIManager@@8 DD FLAT:??_R1A@?0A@EA@IWndCreator@ioSP2GUIManager@@8 ; ioSP2GUIManager::IWndCreator::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IWndCreator@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R3IWndCreator@ioSP2GUIManager@@8 DD 00H		; ioSP2GUIManager::IWndCreator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IWndCreator@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIWndCreator@ioSP2GUIManager@@@8
_DATA	SEGMENT
??_R0?AVIWndCreator@ioSP2GUIManager@@@8 DD FLAT:??_7type_info@@6B@ ; ioSP2GUIManager::IWndCreator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIWndCreator@ioSP2GUIManager@@', 00H
_DATA	ENDS
;	COMDAT ??_R4IWndCreator@ioSP2GUIManager@@6B@
rdata$r	SEGMENT
??_R4IWndCreator@ioSP2GUIManager@@6B@ DD 00H		; ioSP2GUIManager::IWndCreator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIWndCreator@ioSP2GUIManager@@@8
	DD	FLAT:??_R3IWndCreator@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_7IWndCreator@ioSP2GUIManager@@6B@
CONST	SEGMENT
??_7IWndCreator@ioSP2GUIManager@@6B@ DD FLAT:??_R4IWndCreator@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::IWndCreator::`vftable'
	DD	FLAT:__purecall
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0IWndCreator@ioSP2GUIManager@@QAE@XZ
_TEXT	SEGMENT
??0IWndCreator@ioSP2GUIManager@@QAE@XZ PROC		; ioSP2GUIManager::IWndCreator::IWndCreator, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IWndCreator@ioSP2GUIManager@@6B@
  00008	c3		 ret	 0
??0IWndCreator@ioSP2GUIManager@@QAE@XZ ENDP		; ioSP2GUIManager::IWndCreator::IWndCreator
_TEXT	ENDS
PUBLIC	??1?$_Pair_base@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@XZ ; std::_Pair_base<ioHashString const ,ioSP2GUIManager::IWndCreator *>::~_Pair_base<ioHashString const ,ioSP2GUIManager::IWndCreator *>
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Pair_base@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Pair_base@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@XZ PROC ; std::_Pair_base<ioHashString const ,ioSP2GUIManager::IWndCreator *>::~_Pair_base<ioHashString const ,ioSP2GUIManager::IWndCreator *>, COMDAT
; _this$ = ecx
  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
??1?$_Pair_base@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@XZ ENDP ; std::_Pair_base<ioHashString const ,ioSP2GUIManager::IWndCreator *>::~_Pair_base<ioHashString const ,ioSP2GUIManager::IWndCreator *>
_TEXT	ENDS
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::operator==
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())
; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 331  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::_Mynode
; Function compile flags: /Ogsp
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 123  : 		}

  00002	c3		 ret	 0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Myval
; Function compile flags: /Ogsp
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 637  : 		return ((reference)(*_Pnode)._Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 638  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 		if (this->_Getcont() == 0
; 233  : 			|| this->_Ptr == 0
; 234  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)
; 235  : 			{	// report error
; 236  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 237  : 			_SCL_SECURE_OUT_OF_RANGE;
; 238  : 			}
; 239  : 
; 240  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 241  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 242  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 243  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 244  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 245  : 
; 246  : 		return (_Mytree::_Myval(this->_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 247  : 		}

  00005	c3		 ret	 0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Isnil
; Function compile flags: /Ogsp
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 612  : 		return ((char&)(*_Pnode)._Isnil);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 21	 add	 eax, 33			; 00000021H

; 613  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Left
; Function compile flags: /Ogsp
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Right
; Function compile flags: /Ogsp
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 633  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Parent
; Function compile flags: /Ogsp
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 628  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 44   : 		this->_Adopt(_Plist);
; 45   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@UASValue@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUASValue@@0@Z ; std::_Ptr_cat<ASValue,ASValue>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@UASValue@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUASValue@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UASValue@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUASValue@@0@Z PROC ; std::_Ptr_cat<ASValue,ASValue>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@UASValue@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUASValue@@0@Z ENDP ; std::_Ptr_cat<ASValue,ASValue>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ; std::_Ptr_cat<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
; Function compile flags: /Ogsp
;	COMDAT ??$_Ptr_cat@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z PROC ; std::_Ptr_cat<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ENDP ; std::_Ptr_cat<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
PUBLIC	??$_Kfn@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@SAABVioHashString@@ABU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z ; std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0>::_Kfn<ioHashString const ,ioSP2GUIManager::IWndCreator *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??$_Kfn@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@SAABVioHashString@@ABU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@SAABVioHashString@@ABU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z PROC ; std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0>::_Kfn<ioHashString const ,ioSP2GUIManager::IWndCreator *>, COMDAT

; 66   : 		static const _Kty& _Kfn(const _STD pair<_Ty1, _Ty2>& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 		{	// extract key from element value
; 68   : 		return (_Val.first);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 69   : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Kfn@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@SAABVioHashString@@ABU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z ENDP ; std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0>::_Kfn<ioHashString const ,ioSP2GUIManager::IWndCreator *>
_TEXT	ENDS
PUBLIC	??$move@AAPAVIWndCreator@ioSP2GUIManager@@@std@@YA$$QAPAVIWndCreator@ioSP2GUIManager@@AAPAV12@@Z ; std::move<ioSP2GUIManager::IWndCreator * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAPAVIWndCreator@ioSP2GUIManager@@@std@@YA$$QAPAVIWndCreator@ioSP2GUIManager@@AAPAV12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAPAVIWndCreator@ioSP2GUIManager@@@std@@YA$$QAPAVIWndCreator@ioSP2GUIManager@@AAPAV12@@Z PROC ; std::move<ioSP2GUIManager::IWndCreator * &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAPAVIWndCreator@ioSP2GUIManager@@@std@@YA$$QAPAVIWndCreator@ioSP2GUIManager@@AAPAV12@@Z ENDP ; std::move<ioSP2GUIManager::IWndCreator * &>
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::size, COMDAT
; _this$ = ecx

; 869  : 		return (this->_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 870  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::size
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Rmost
; Function compile flags: /Ogsp
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1784 : 		return (this->_Right(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1785 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Lmost
; Function compile flags: /Ogsp
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1759 : 		return (this->_Left(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1760 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Color
; Function compile flags: /Ogsp
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 607  : 		return ((char&)(*_Pnode)._Color);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 20	 add	 eax, 32			; 00000020H

; 608  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0

; 39   : 		}

  00005	c3		 ret	 0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Max
; Function compile flags: /Ogsp
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Max@2
$LL2@Max@2:

; 643  : 			_Pnode = _Right(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Max@2:

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	80 79 21 00	 cmp	 BYTE PTR [ecx+33], 0
  00011	74 f5		 je	 SHORT $LL2@Max@2

; 644  : 		return (_Pnode);
; 645  : 		}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Max@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Min
; Function compile flags: /Ogsp
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Min@2
$LL2@Min@2:

; 650  : 			_Pnode = _Left(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Min@2:

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	80 79 21 00	 cmp	 BYTE PTR [ecx+33], 0
  00010	74 f6		 je	 SHORT $LL2@Min@2

; 651  : 		return (_Pnode);
; 652  : 		}

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?_Min@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >::max_size
_TEXT	ENDS
PUBLIC	??$_Val_type@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@@Z ; std::_Val_type<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@@Z PROC ; std::_Val_type<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@@Z ENDP ; std::_Val_type<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *>
_TEXT	ENDS
PUBLIC	??$forward@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@YA$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@AAU10@@Z ; std::forward<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@YA$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@YA$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@AAU10@@Z PROC ; std::forward<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@YA$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@AAU10@@Z ENDP ; std::forward<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >
_TEXT	ENDS
PUBLIC	??$addressof@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@YAPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@AAU10@@Z ; std::addressof<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@YAPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@YAPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@AAU10@@Z PROC ; std::addressof<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@YAPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >
_TEXT	ENDS
PUBLIC	??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > > &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > > &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > > &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > > &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Node>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T530863 = -12						; size = 12
$T530867 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate@2

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 c7 71 1c
	07		 cmp	 ecx, 119304647		; 071c71c7H
  00015	77 0e		 ja	 SHORT $LN1@Allocate@2
  00017	6b c9 24	 imul	 ecx, 36			; 00000024H
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T530867[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T530867[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T530863[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T530863[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T530863[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate@2:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$forward@PAVIWndCreator@ioSP2GUIManager@@@std@@YA$$QAPAVIWndCreator@ioSP2GUIManager@@AAPAV12@@Z ; std::forward<ioSP2GUIManager::IWndCreator *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@PAVIWndCreator@ioSP2GUIManager@@@std@@YA$$QAPAVIWndCreator@ioSP2GUIManager@@AAPAV12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVIWndCreator@ioSP2GUIManager@@@std@@YA$$QAPAVIWndCreator@ioSP2GUIManager@@AAPAV12@@Z PROC ; std::forward<ioSP2GUIManager::IWndCreator *>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@PAVIWndCreator@ioSP2GUIManager@@@std@@YA$$QAPAVIWndCreator@ioSP2GUIManager@@AAPAV12@@Z ENDP ; std::forward<ioSP2GUIManager::IWndCreator *>
_TEXT	ENDS
PUBLIC	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size, COMDAT
; _this$ = ecx

; 1512 : 		return (this->_Mysize);

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 1513 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
; Function compile flags: /Ogsp
;	COMDAT ?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx

; 2010 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2011 : 			: this->_Bx._Buf);

  00000	83 79 14 08	 cmp	 DWORD PTR [ecx+20], 8
  00004	72 03		 jb	 SHORT $LN3@Myptr
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]

; 2012 : 		}

  00008	c3		 ret	 0
$LN3@Myptr:

; 2010 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2011 : 			: this->_Bx._Buf);

  00009	8b c1		 mov	 eax, ecx

; 2012 : 		}

  0000b	c3		 ret	 0
?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
_TEXT	ENDS
PUBLIC	??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ ; std::_String_val<wchar_t,std::allocator<wchar_t> >::~_String_val<wchar_t,std::allocator<wchar_t> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<wchar_t,std::allocator<wchar_t> >::~_String_val<wchar_t,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 459  : 		}

  00000	c3		 ret	 0
??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<wchar_t,std::allocator<wchar_t> >::~_String_val<wchar_t,std::allocator<wchar_t> >
_TEXT	ENDS
PUBLIC	??0?$allocator@_W@std@@QAE@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@_W@std@@QAE@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@_W@std@@QAE@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
PUBLIC	??0?$allocator@_W@std@@QAE@ABV01@@Z		; std::allocator<wchar_t>::allocator<wchar_t>
; Function compile flags: /Ogsp
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@_W@std@@QAE@ABV01@@Z PROC		; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@_W@std@@QAE@ABV01@@Z ENDP		; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
PUBLIC	??R?$less@VioHashString@@@std@@QBE_NABVioHashString@@0@Z ; std::less<ioHashString>::operator()
EXTRN	__imp_??MioHashString@@QBE_NABV0@@Z:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xfunctional
;	COMDAT ??R?$less@VioHashString@@@std@@QBE_NABVioHashString@@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@VioHashString@@@std@@QBE_NABVioHashString@@0@Z PROC ; std::less<ioHashString>::operator(), COMDAT
; _this$ = ecx

; 124  : 		{	// apply operator< to operands

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 125  : 		return (_Left < _Right);

  00003	ff 75 0c	 push	 DWORD PTR __Right$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??MioHashString@@QBE_NABV0@@Z

; 126  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
??R?$less@VioHashString@@@std@@QBE_NABVioHashString@@0@Z ENDP ; std::less<ioHashString>::operator()
_TEXT	ENDS
PUBLIC	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBEPQ_Bool_struct@2@HXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator int std::_Bool_struct::*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBEPQ_Bool_struct@2@HXZ
_TEXT	SEGMENT
??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBEPQ_Bool_struct@2@HXZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator int std::_Bool_struct::*, COMDAT
; _this$ = ecx

; 133  : 			return (_Ok ? _CONVERTIBLE_TO_TRUE : 0);

  00000	33 c0		 xor	 eax, eax
  00002	38 41 04	 cmp	 BYTE PTR [ecx+4], al
  00005	0f 95 c0	 setne	 al
  00008	48		 dec	 eax

; 134  : 			}

  00009	c3		 ret	 0
??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBEPQ_Bool_struct@2@HXZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator int std::_Bool_struct::*
_TEXT	ENDS
PUBLIC	?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$allocator@_W@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$allocator@_W@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator, COMDAT
; _this$ = ecx

; 1906 : 		{	// return allocator object for values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1907 : 		return (this->_Alval);

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1908 : 		}

  00006	5d		 pop	 ebp
  00007	c2 04 00	 ret	 4
?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$allocator@_W@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
; Function compile flags: /Ogsp
;	COMDAT ?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx

; 2004 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2005 : 			: this->_Bx._Buf);

  00000	83 79 14 08	 cmp	 DWORD PTR [ecx+20], 8
  00004	72 03		 jb	 SHORT $LN3@Myptr@2
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]

; 2006 : 		}

  00008	c3		 ret	 0
$LN3@Myptr@2:

; 2004 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2005 : 			: this->_Bx._Buf);

  00009	8b c1		 mov	 eax, ecx

; 2006 : 		}

  0000b	c3		 ret	 0
?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
_TEXT	ENDS
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen, COMDAT
; _this$ = ecx

; 2016 : 		_Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@2:
$LN3@Xlen@2:
  0000b	cc		 int	 3
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
_TEXT	ENDS
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran, COMDAT
; _this$ = ecx

; 2021 : 		_Xout_of_range("invalid string position");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN4@Xran:
$LN3@Xran:
  0000b	cc		 int	 3
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z	; std::allocator<wchar_t>::deallocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
PUBLIC	??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base
EXTRN	__imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx

; 91   : 			{	// lock the stream buffer, if there

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	89 06		 mov	 DWORD PTR [esi], eax

; 92   : 			if (_Myostr.rdbuf() != 0)

  0000b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00010	03 c8		 add	 ecx, eax
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  00018	85 c0		 test	 eax, eax
  0001a	74 16		 je	 SHORT $LN1@Sentry_bas

; 93   : 				_Myostr.rdbuf()->_Lock();

  0001c	8b 06		 mov	 eax, DWORD PTR [esi]
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	03 c8		 add	 ecx, eax
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  0002b	8b 10		 mov	 edx, DWORD PTR [eax]
  0002d	8b c8		 mov	 ecx, eax
  0002f	ff 52 04	 call	 DWORD PTR [edx+4]
$LN1@Sentry_bas:

; 94   : 			}

  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
PUBLIC	??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Ogsp
;	COMDAT ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx

; 97   : 			{	// destroy after unlocking

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 98   : 			if (_Myostr.rdbuf() != 0)

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	8b 08		 mov	 ecx, DWORD PTR [eax]
  00007	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000a	03 c8		 add	 ecx, eax
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  00012	85 c0		 test	 eax, eax
  00014	74 17		 je	 SHORT $LN1@Sentry_bas@2

; 99   : 				_Myostr.rdbuf()->_Unlock();

  00016	8b 06		 mov	 eax, DWORD PTR [esi]
  00018	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001a	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0001d	03 c8		 add	 ecx, eax
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  00025	8b 10		 mov	 edx, DWORD PTR [eax]
  00027	8b c8		 mov	 ecx, eax
  00029	5e		 pop	 esi
  0002a	ff 62 08	 jmp	 DWORD PTR [edx+8]
$LN1@Sentry_bas@2:
  0002d	5e		 pop	 esi

; 100  : 			}

  0002e	c3		 ret	 0
??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside, COMDAT
; _this$ = ecx

; 1973 : 		{	// test if _Ptr points inside string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1974 : 		if (_Ptr == 0 || _Ptr < _Myptr() || _Myptr() + this->_Mysize <= _Ptr)

  00003	83 7d 08 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00007	74 2d		 je	 SHORT $LN2@Inside@2
  00009	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0000c	83 fa 08	 cmp	 edx, 8
  0000f	72 04		 jb	 SHORT $LN8@Inside@2
  00011	8b 01		 mov	 eax, DWORD PTR [ecx]
  00013	eb 02		 jmp	 SHORT $LN9@Inside@2
$LN8@Inside@2:
  00015	8b c1		 mov	 eax, ecx
$LN9@Inside@2:
  00017	39 45 08	 cmp	 DWORD PTR __Ptr$[ebp], eax
  0001a	72 1a		 jb	 SHORT $LN2@Inside@2
  0001c	83 fa 08	 cmp	 edx, 8
  0001f	72 04		 jb	 SHORT $LN12@Inside@2
  00021	8b 01		 mov	 eax, DWORD PTR [ecx]
  00023	eb 02		 jmp	 SHORT $LN13@Inside@2
$LN12@Inside@2:
  00025	8b c1		 mov	 eax, ecx
$LN13@Inside@2:
  00027	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  0002a	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
  0002d	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  00030	76 04		 jbe	 SHORT $LN2@Inside@2

; 1976 : 		else
; 1977 : 			return (true);

  00032	b0 01		 mov	 al, 1
  00034	eb 02		 jmp	 SHORT $LN1@Inside@2
$LN2@Inside@2:

; 1975 : 			return (false);	// don't ask

  00036	32 c0		 xor	 al, al
$LN1@Inside@2:

; 1978 : 		}

  00038	5d		 pop	 ebp
  00039	c2 04 00	 ret	 4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@_W@std@@QBEIXZ		; std::allocator<wchar_t>::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@_W@std@@QBEIXZ PROC		; std::allocator<wchar_t>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@_W@std@@QBEIXZ ENDP		; std::allocator<wchar_t>::max_size
_TEXT	ENDS
PUBLIC	__TI2?AVbad_cast@std@@
PUBLIC	??_C@_08EPJLHIJG@bad?5cast?$AA@			; `string'
PUBLIC	?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
PUBLIC	??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<wchar_t> >
PUBLIC	__CTA2?AVbad_cast@std@@
PUBLIC	__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	__imp_?_Incref@facet@locale@std@@QAEXXZ:PROC
EXTRN	__imp_??0bad_cast@std@@QAE@PBD@Z:PROC
EXTRN	__imp_?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:PROC
EXTRN	__imp_??Bid@locale@std@@QAEIXZ:PROC
EXTRN	__imp_?id@?$ctype@_W@std@@2V0locale@2@A:DWORD
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
EXTRN	??1bad_cast@std@@UAE@XZ:PROC			; std::bad_cast::~bad_cast
EXTRN	??0bad_cast@std@@QAE@ABV01@@Z:PROC		; std::bad_cast::bad_cast
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xlocale
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
_BSS	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT
??_R0?AVbad_cast@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_cast@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_cast@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
__CTA2?AVbad_cast@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT
__TI2?AVbad_cast@std@@ DD 00H
	DD	FLAT:??1bad_cast@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast?$AA@ DB 'bad cast', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z$0
__ehfuncinfo$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT
$T530945 = -32						; size = 12
__Lock$488049 = -20					; size = 4
__Psave$488050 = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Loc$ = 8						; size = 4
??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z PROC ; std::use_facet<std::ctype<wchar_t> >, COMDAT

; 504  : 	{	// get facet reference from locale

  00000	6a 14		 push	 20			; 00000014H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 505  : 	_BEGIN_LOCK(_LOCK_LOCALE)	// the thread lock, make get atomic

  0000c	6a 00		 push	 0
  0000e	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$488049[ebp]
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z

; 506  : 		const locale::facet *_Psave =
; 507  : 			_Facetptr<_Facet>::_Psave;	// static pointer to lazy facet

  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<wchar_t> >::_Psave

; 508  : 
; 509  : 		size_t _Id = _Facet::id;

  0001c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?id@?$ctype@_W@std@@2V0locale@2@A
  00022	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00026	89 45 f0	 mov	 DWORD PTR __Psave$488050[ebp], eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Bid@locale@std@@QAEIXZ

; 510  : 		const locale::facet *_Pf = _Loc._Getfacet(_Id);

  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Loc$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ; std::locale::_Getfacet
  00038	8b f0		 mov	 esi, eax

; 511  : 
; 512  : 		if (_Pf != 0)

  0003a	85 f6		 test	 esi, esi
  0003c	75 51		 jne	 SHORT $LN10@use_facet

; 513  : 			;	// got facet from locale
; 514  : 		else if (_Psave != 0)

  0003e	8b 75 f0	 mov	 esi, DWORD PTR __Psave$488050[ebp]
  00041	85 f6		 test	 esi, esi

; 515  : 			_Pf = _Psave;	// lazy facet already allocated

  00043	75 4a		 jne	 SHORT $LN10@use_facet

; 516  : 		else if (_Facet::_Getcat(&_Psave, &_Loc) == (size_t)(-1))

  00045	ff 75 08	 push	 DWORD PTR __Loc$[ebp]
  00048	8d 45 f0	 lea	 eax, DWORD PTR __Psave$488050[ebp]
  0004b	50		 push	 eax
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
  00052	59		 pop	 ecx
  00053	59		 pop	 ecx
  00054	83 f8 ff	 cmp	 eax, -1
  00057	75 1c		 jne	 SHORT $LN2@use_facet

; 517  : 
; 518  :  #if _HAS_EXCEPTIONS
; 519  : 
; 520  : 			_THROW_NCEE(bad_cast, _EMPTY_ARGUMENT);	// lazy disallowed

  00059	68 00 00 00 00	 push	 OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
  0005e	8d 4d e0	 lea	 ecx, DWORD PTR $T530945[ebp]
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0bad_cast@std@@QAE@PBD@Z
  00067	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_cast@std@@
  0006c	8d 45 e0	 lea	 eax, DWORD PTR $T530945[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN14@use_facet:
$LN2@use_facet:

; 521  : 
; 522  :  #else /* _HAS_EXCEPTIONS */
; 523  : 			abort();	// lazy disallowed
; 524  :  #endif /* _HAS_EXCEPTIONS */
; 525  : 
; 526  : 		else
; 527  : 			{	// queue up lazy facet for destruction
; 528  : 			_Pf = _Psave;

  00075	8b 4d f0	 mov	 ecx, DWORD PTR __Psave$488050[ebp]
  00078	8b f1		 mov	 esi, ecx

; 529  : 			_Facetptr<_Facet>::_Psave = _Psave;

  0007a	89 0d 00 00 00
	00		 mov	 DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B, ecx ; std::_Facetptr<std::ctype<wchar_t> >::_Psave

; 530  : 
; 531  : 			locale::facet *_Pfmod = (_Facet *)_Psave;

  00080	8b f9		 mov	 edi, ecx

; 532  : 			_Pfmod->_Incref();

  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Incref@facet@locale@std@@QAEXXZ

; 533  : 			_Pfmod->_Register();

  00088	57		 push	 edi
  00089	e8 00 00 00 00	 call	 ?_Facet_Register@facet@locale@std@@CAXPAV123@@Z ; std::locale::facet::_Facet_Register
  0008e	59		 pop	 ecx
$LN10@use_facet:

; 534  : 			}
; 535  : 
; 536  : 		return ((const _Facet&)(*_Pf));	// should be dynamic_cast

  0008f	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00093	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$488049[ebp]
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0009c	8b c6		 mov	 eax, esi

; 537  : 	_END_LOCK()
; 538  : 	}

  0009e	e8 00 00 00 00	 call	 __EH_epilog3
  000a3	c3		 ret	 0
$LN13@use_facet:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$488049[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
__ehhandler$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::ctype<wchar_t> >
PUBLIC	??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z ; std::forward<std::allocator<wchar_t> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z PROC ; std::forward<std::allocator<wchar_t> >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z ENDP ; std::forward<std::allocator<wchar_t> >
_TEXT	ENDS
PUBLIC	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
; Function compile flags: /Ogsp
;	COMDAT ??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
PUBLIC	??$_Allocate@_W@std@@YAPA_WIPA_W@Z		; std::_Allocate<wchar_t>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT
$T530972 = -12						; size = 12
$T530976 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@_W@std@@YAPA_WIPA_W@Z PROC			; std::_Allocate<wchar_t>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate@3

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	7f		 cmp	 ecx, 2147483647		; 7fffffffH
  00015	77 0e		 ja	 SHORT $LN1@Allocate@3
  00017	8d 04 09	 lea	 eax, DWORD PTR [ecx+ecx]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate@3
$LN1@Allocate@3:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T530976[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T530976[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T530972[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T530972[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T530972[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@3:
$LN5@Allocate@3:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate@3:
??$_Allocate@_W@std@@YAPA_WIPA_W@Z ENDP			; std::_Allocate<wchar_t>
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z	; std::operator==<wchar_t,wchar_t>
; Function compile flags: /Ogsp
;	COMDAT ??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z PROC		; std::operator==<wchar_t,wchar_t>, COMDAT

; 263  : 	return (true);

  00000	b0 01		 mov	 al, 1

; 264  : 	}

  00002	c3		 ret	 0
??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z ENDP		; std::operator==<wchar_t,wchar_t>
_TEXT	ENDS
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT

; 94   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 95   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 96   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
_TEXT	ENDS
PUBLIC	??$move@AA_N@std@@YA$$QA_NAA_N@Z		; std::move<bool &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@AA_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AA_N@std@@YA$$QA_NAA_N@Z PROC			; std::move<bool &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AA_N@std@@YA$$QA_NAA_N@Z ENDP			; std::move<bool &>
_TEXT	ENDS
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
PUBLIC	??$forward@$$CBVioHashString@@@std@@YA$$QBVioHashString@@ABV1@@Z ; std::forward<ioHashString const >
; Function compile flags: /Ogsp
;	COMDAT ??$forward@$$CBVioHashString@@@std@@YA$$QBVioHashString@@ABV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@$$CBVioHashString@@@std@@YA$$QBVioHashString@@ABV1@@Z PROC ; std::forward<ioHashString const >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@$$CBVioHashString@@@std@@YA$$QBVioHashString@@ABV1@@Z ENDP ; std::forward<ioHashString const >
_TEXT	ENDS
PUBLIC	??$move@ABVioHashString@@@std@@YA$$QBVioHashString@@ABV1@@Z ; std::move<ioHashString const &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@ABVioHashString@@@std@@YA$$QBVioHashString@@ABV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@ABVioHashString@@@std@@YA$$QBVioHashString@@ABV1@@Z PROC ; std::move<ioHashString const &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@ABVioHashString@@@std@@YA$$QBVioHashString@@ABV1@@Z ENDP ; std::move<ioHashString const &>
_TEXT	ENDS
PUBLIC	??1ASValue@@QAE@XZ				; ASValue::~ASValue
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\flashplayertodirectx\include\asinterface.inl
;	COMDAT ??1ASValue@@QAE@XZ
_TEXT	SEGMENT
??1ASValue@@QAE@XZ PROC					; ASValue::~ASValue, COMDAT
; _this$ = ecx

; 247  : {

  00000	56		 push	 esi

; 248  : 	delete &m_data;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]
  00003	85 f6		 test	 esi, esi
  00005	74 0e		 je	 SHORT $LN5@ASValue@2
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Destruct@_Data@ASValue@@QAEXXZ ; ASValue::_Data::Destruct
  0000e	56		 push	 esi
  0000f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00014	59		 pop	 ecx
$LN5@ASValue@2:
  00015	5e		 pop	 esi

; 249  : }

  00016	c3		 ret	 0
??1ASValue@@QAE@XZ ENDP					; ASValue::~ASValue
_TEXT	ENDS
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >::operator!=
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >::operator!=, COMDAT
; _this$ = ecx

; 334  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 335  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 336  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Nm$ = 12						; size = 4
__Off$ = 12						; size = 4
__Count$ = 16						; size = 4
?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find, COMDAT
; _this$ = ecx

; 1618 : 		{	// look for [_Ptr, _Ptr + _Count) beginnng at or after _Off

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1619 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1620 : 		if (_Count != 0)
; 1621 : 			_DEBUG_POINTER(_Ptr);
; 1622 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1623 : 
; 1624 : 		if (_Count == 0 && _Off <= this->_Mysize)

  00004	83 7d 10 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00008	8b 45 0c	 mov	 eax, DWORD PTR __Off$[ebp]
  0000b	8b d1		 mov	 edx, ecx
  0000d	89 55 fc	 mov	 DWORD PTR _this$[ebp], edx
  00010	75 05		 jne	 SHORT $LN6@find
  00012	3b 42 10	 cmp	 eax, DWORD PTR [edx+16]

; 1625 : 			return (_Off);	// null string always matches (if inside string)

  00015	76 6d		 jbe	 SHORT $LN7@find
$LN6@find:

; 1626 : 
; 1627 : 		size_type _Nm;
; 1628 : 		if (_Off < this->_Mysize && _Count <= (_Nm = this->_Mysize - _Off))

  00017	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  0001a	53		 push	 ebx
  0001b	56		 push	 esi
  0001c	57		 push	 edi
  0001d	3b c1		 cmp	 eax, ecx
  0001f	73 5d		 jae	 SHORT $LN2@find
  00021	2b c8		 sub	 ecx, eax
  00023	39 4d 10	 cmp	 DWORD PTR __Count$[ebp], ecx
  00026	77 56		 ja	 SHORT $LN2@find

; 1629 : 			{	// room for match, look for it
; 1630 : 			const _Elem *_Uptr, *_Vptr;
; 1631 : 			for (_Nm -= _Count - 1, _Vptr = _Myptr() + _Off;

  00028	33 f6		 xor	 esi, esi
  0002a	46		 inc	 esi
  0002b	2b 75 10	 sub	 esi, DWORD PTR __Count$[ebp]
  0002e	03 ce		 add	 ecx, esi
  00030	83 7a 14 08	 cmp	 DWORD PTR [edx+20], 8
  00034	89 4d 0c	 mov	 DWORD PTR __Nm$[ebp], ecx
  00037	72 02		 jb	 SHORT $LN11@find
  00039	8b 12		 mov	 edx, DWORD PTR [edx]
$LN11@find:
  0003b	8d 3c 42	 lea	 edi, DWORD PTR [edx+eax*2]

; 1632 : 				(_Uptr = _Traits::find(_Vptr, _Nm, *_Ptr)) != 0;
; 1633 : 				_Nm -= _Uptr - _Vptr + 1, _Vptr = _Uptr + 1)

  0003e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00041	0f b7 18	 movzx	 ebx, WORD PTR [eax]
  00044	51		 push	 ecx
  00045	eb 27		 jmp	 SHORT $LN28@find
$LL4@find:

; 1634 : 				if (_Traits::compare(_Uptr, _Ptr, _Count) == 0)

  00047	ff 75 10	 push	 DWORD PTR __Count$[ebp]
  0004a	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  0004d	56		 push	 esi
  0004e	e8 00 00 00 00	 call	 _wmemcmp
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH
  00056	85 c0		 test	 eax, eax
  00058	74 2e		 je	 SHORT $LN22@find

; 1632 : 				(_Uptr = _Traits::find(_Vptr, _Nm, *_Ptr)) != 0;
; 1633 : 				_Nm -= _Uptr - _Vptr + 1, _Vptr = _Uptr + 1)

  0005a	8b c6		 mov	 eax, esi
  0005c	2b c7		 sub	 eax, edi
  0005e	d1 f8		 sar	 eax, 1
  00060	83 c9 ff	 or	 ecx, -1
  00063	2b c8		 sub	 ecx, eax
  00065	01 4d 0c	 add	 DWORD PTR __Nm$[ebp], ecx
  00068	ff 75 0c	 push	 DWORD PTR __Nm$[ebp]
  0006b	8d 7e 02	 lea	 edi, DWORD PTR [esi+2]
$LN28@find:
  0006e	53		 push	 ebx
  0006f	57		 push	 edi
  00070	e8 00 00 00 00	 call	 _wmemchr
  00075	8b f0		 mov	 esi, eax
  00077	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007a	85 f6		 test	 esi, esi
  0007c	75 c9		 jne	 SHORT $LL4@find
$LN2@find:

; 1636 : 			}
; 1637 : 
; 1638 : 		return (npos);	// no match

  0007e	83 c8 ff	 or	 eax, -1
$LN24@find:
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx
$LN7@find:

; 1639 : 		}

  00084	c9		 leave
  00085	c2 0c 00	 ret	 12			; 0000000cH
$LN22@find:

; 1635 : 					return (_Uptr - _Myptr());	// found a match

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	83 78 14 08	 cmp	 DWORD PTR [eax+20], 8
  0008f	72 04		 jb	 SHORT $LN19@find
  00091	8b 08		 mov	 ecx, DWORD PTR [eax]
  00093	eb 02		 jmp	 SHORT $LN20@find
$LN19@find:
  00095	8b c8		 mov	 ecx, eax
$LN20@find:
  00097	8b c6		 mov	 eax, esi
  00099	2b c1		 sub	 eax, ecx
  0009b	d1 f8		 sar	 eax, 1
  0009d	eb e2		 jmp	 SHORT $LN24@find
?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Lmost
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1759 : 		return (this->_Left(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1760 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >, COMDAT
; _this$ = ecx

; 555  : 		this->_Alnod.deallocate(this->_Myhead, 1);

  00000	ff 71 04	 push	 DWORD PTR [ecx+4]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx

; 556  : 		}

  00009	c3		 ret	 0
??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXXZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
EXTRN	__imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
;	COMDAT ?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXXZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy, COMDAT
; _this$ = ecx

; 340  : 		{	// discard any allocated buffer and clear pointers

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 341  : 		if (_Mystate & _Allocated)

  00003	f6 46 40 01	 test	 BYTE PTR [esi+64], 1
  00007	74 11		 je	 SHORT $LN14@Tidy

; 342  : 			_Al.deallocate(_Mysb::eback(),
; 343  : 				(_Mysb::pptr() != 0 ? _Mysb::epptr()
; 344  : 					: _Mysb::egptr()) - _Mysb::eback());

  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	ff 30		 push	 DWORD PTR [eax]
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
$LN14@Tidy:

; 345  : 		_Mysb::setg(0, 0, 0);

  0001a	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0001d	33 c0		 xor	 eax, eax
  0001f	89 01		 mov	 DWORD PTR [ecx], eax
  00021	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00024	89 01		 mov	 DWORD PTR [ecx], eax
  00026	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  00029	89 01		 mov	 DWORD PTR [ecx], eax

; 346  : 		_Mysb::setp(0, 0);

  0002b	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0002e	89 01		 mov	 DWORD PTR [ecx], eax
  00030	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00033	89 01		 mov	 DWORD PTR [ecx], eax
  00035	8b 4e 34	 mov	 ecx, DWORD PTR [esi+52]
  00038	89 01		 mov	 DWORD PTR [ecx], eax

; 347  : 		_Seekhigh = 0;
; 348  : 		_Mystate &= ~_Allocated;

  0003a	83 66 40 fe	 and	 DWORD PTR [esi+64], -2	; fffffffeH
  0003e	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  00041	5e		 pop	 esi

; 349  : 		}

  00042	c3		 ret	 0
?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXXZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 214  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >
_TEXT	ENDS
PUBLIC	??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@1@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::operator*, COMDAT
; _this$ = ecx

; 49   : 		return (_Mytree::_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 50   : 		}

  00005	c3		 ret	 0
??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@1@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::operator*
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	53		 push	 ebx
  00005	32 db		 xor	 bl, bl
  00007	38 59 2d	 cmp	 BYTE PTR [ecx+45], bl
  0000a	75 2d		 jne	 SHORT $LN3@operator

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

  0000c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000f	38 5a 2d	 cmp	 BYTE PTR [edx+45], bl
  00012	75 0d		 jne	 SHORT $LN34@operator

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

$LL18@operator:
  00014	8b ca		 mov	 ecx, edx
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	38 5a 2d	 cmp	 BYTE PTR [edx+45], bl
  0001b	74 f7		 je	 SHORT $LL18@operator
  0001d	89 08		 mov	 DWORD PTR [eax], ecx
  0001f	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  00020	c3		 ret	 0
$LN34@operator:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00021	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00024	eb 0c		 jmp	 SHORT $LN38@operator
$LL2@operator:
  00026	8b 08		 mov	 ecx, DWORD PTR [eax]
  00028	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  0002b	75 0a		 jne	 SHORT $LN1@operator

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
$LN38@operator:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00032	38 5a 2d	 cmp	 BYTE PTR [edx+45], bl
  00035	74 ef		 je	 SHORT $LL2@operator
$LN1@operator:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

  00037	89 10		 mov	 DWORD PTR [eax], edx
$LN3@operator:
  00039	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  0003a	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
PUBLIC	?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 49 92 24 09	 mov	 eax, 153391689		; 09249249H

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IBEII@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IBEII@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	6a 1c		 push	 28			; 0000001cH
  0000a	99		 cdq
  0000b	59		 pop	 ecx
  0000c	f7 f9		 idiv	 ecx

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0000e	ba 49 92 24 09	 mov	 edx, 153391689		; 09249249H
  00013	8b c8		 mov	 ecx, eax
  00015	d1 e9		 shr	 ecx, 1
  00017	2b d1		 sub	 edx, ecx
  00019	3b d0		 cmp	 edx, eax
  0001b	73 04		 jae	 SHORT $LN4@Grow_to
  0001d	33 c0		 xor	 eax, eax
  0001f	eb 02		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00021	03 c1		 add	 eax, ecx
$LN5@Grow_to:

; 1279 : 		if (_Capacity < _Count)

  00023	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00026	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?_Grow_to@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IBEII@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Grow_to
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >, COMDAT
; _this$ = ecx

; 378  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 379  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocate
_TEXT	ENDS
PUBLIC	??_7?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyMenu>::`vftable'
PUBLIC	??0?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@QAE@XZ ; ioSP2GUIManager::WindowCreator<QuickLobbyMenu>::WindowCreator<QuickLobbyMenu>
PUBLIC	??_R4?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyMenu>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyMenu> `RTTI Type Descriptor'
PUBLIC	??_R3?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyMenu>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyMenu>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyMenu>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?CreateWnd@?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ ; ioSP2GUIManager::WindowCreator<QuickLobbyMenu>::CreateWnd
;	COMDAT ??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@8 DD FLAT:??_R0?AV?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyMenu>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R2?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R2?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@8 DD FLAT:??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyMenu>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IWndCreator@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R3?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R3?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@8 DD 00H ; ioSP2GUIManager::WindowCreator<QuickLobbyMenu>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@@8
_DATA	SEGMENT
??_R0?AV?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@@8 DD FLAT:??_7type_info@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyMenu> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@6B@
rdata$r	SEGMENT
??_R4?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@6B@ DD 00H ; ioSP2GUIManager::WindowCreator<QuickLobbyMenu>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@@8
	DD	FLAT:??_R3?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_7?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@6B@
CONST	SEGMENT
??_7?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@6B@ DD FLAT:??_R4?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyMenu>::`vftable'
	DD	FLAT:?CreateWnd@?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@QAE@XZ
_TEXT	SEGMENT
??0?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@QAE@XZ PROC ; ioSP2GUIManager::WindowCreator<QuickLobbyMenu>::WindowCreator<QuickLobbyMenu>, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@6B@
  00008	c3		 ret	 0
??0?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@QAE@XZ ENDP ; ioSP2GUIManager::WindowCreator<QuickLobbyMenu>::WindowCreator<QuickLobbyMenu>
_TEXT	ENDS
EXTRN	??0QuickLobbyMenu@@QAE@XZ:PROC			; QuickLobbyMenu::QuickLobbyMenu
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\iosp2guimanager.h
xdata$x	SEGMENT
__unwindtable$?CreateWnd@?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateWnd@?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ$0
__ehfuncinfo$?CreateWnd@?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateWnd@?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?CreateWnd@?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
_TEXT	SEGMENT
$T531217 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateWnd@?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ PROC ; ioSP2GUIManager::WindowCreator<QuickLobbyMenu>::CreateWnd, COMDAT
; _this$ = ecx

; 87   : 		{

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?CreateWnd@?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 88   : 			return new T;

  0000c	68 cc 01 00 00	 push	 460			; 000001ccH
  00011	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00016	59		 pop	 ecx
  00017	8b c8		 mov	 ecx, eax
  00019	89 4d f0	 mov	 DWORD PTR $T531217[ebp], ecx
  0001c	33 c0		 xor	 eax, eax
  0001e	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00021	3b c8		 cmp	 ecx, eax
  00023	74 05		 je	 SHORT $LN3@CreateWnd
  00025	e8 00 00 00 00	 call	 ??0QuickLobbyMenu@@QAE@XZ ; QuickLobbyMenu::QuickLobbyMenu
$LN3@CreateWnd:

; 89   : 		}

  0002a	e8 00 00 00 00	 call	 __EH_epilog3
  0002f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateWnd@?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ$0:
  00000	ff 75 f0	 push	 DWORD PTR $T531217[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__ehhandler$?CreateWnd@?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00011	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateWnd@?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateWnd@?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ ENDP ; ioSP2GUIManager::WindowCreator<QuickLobbyMenu>::CreateWnd
PUBLIC	??_7?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyWnd>::`vftable'
PUBLIC	??0?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@QAE@XZ ; ioSP2GUIManager::WindowCreator<QuickLobbyWnd>::WindowCreator<QuickLobbyWnd>
PUBLIC	??_R4?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyWnd>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyWnd> `RTTI Type Descriptor'
PUBLIC	??_R3?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyWnd>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyWnd>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyWnd>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?CreateWnd@?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ ; ioSP2GUIManager::WindowCreator<QuickLobbyWnd>::CreateWnd
;	COMDAT ??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@8 DD FLAT:??_R0?AV?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyWnd>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R2?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R2?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@8 DD FLAT:??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyWnd>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IWndCreator@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R3?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R3?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@8 DD 00H ; ioSP2GUIManager::WindowCreator<QuickLobbyWnd>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@@8
_DATA	SEGMENT
??_R0?AV?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@@8 DD FLAT:??_7type_info@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyWnd> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@6B@
rdata$r	SEGMENT
??_R4?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@6B@ DD 00H ; ioSP2GUIManager::WindowCreator<QuickLobbyWnd>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@@8
	DD	FLAT:??_R3?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_7?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@6B@
CONST	SEGMENT
??_7?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@6B@ DD FLAT:??_R4?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyWnd>::`vftable'
	DD	FLAT:?CreateWnd@?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@QAE@XZ
_TEXT	SEGMENT
??0?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@QAE@XZ PROC ; ioSP2GUIManager::WindowCreator<QuickLobbyWnd>::WindowCreator<QuickLobbyWnd>, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@6B@
  00008	c3		 ret	 0
??0?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@QAE@XZ ENDP ; ioSP2GUIManager::WindowCreator<QuickLobbyWnd>::WindowCreator<QuickLobbyWnd>
_TEXT	ENDS
EXTRN	??0QuickLobbyWnd@@QAE@XZ:PROC			; QuickLobbyWnd::QuickLobbyWnd
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateWnd@?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateWnd@?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ$0
__ehfuncinfo$?CreateWnd@?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateWnd@?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?CreateWnd@?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
_TEXT	SEGMENT
$T531236 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateWnd@?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ PROC ; ioSP2GUIManager::WindowCreator<QuickLobbyWnd>::CreateWnd, COMDAT
; _this$ = ecx

; 87   : 		{

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?CreateWnd@?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 88   : 			return new T;

  0000c	68 c0 01 00 00	 push	 448			; 000001c0H
  00011	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00016	59		 pop	 ecx
  00017	8b c8		 mov	 ecx, eax
  00019	89 4d f0	 mov	 DWORD PTR $T531236[ebp], ecx
  0001c	33 c0		 xor	 eax, eax
  0001e	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00021	3b c8		 cmp	 ecx, eax
  00023	74 05		 je	 SHORT $LN3@CreateWnd@2
  00025	e8 00 00 00 00	 call	 ??0QuickLobbyWnd@@QAE@XZ ; QuickLobbyWnd::QuickLobbyWnd
$LN3@CreateWnd@2:

; 89   : 		}

  0002a	e8 00 00 00 00	 call	 __EH_epilog3
  0002f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateWnd@?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ$0:
  00000	ff 75 f0	 push	 DWORD PTR $T531236[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__ehhandler$?CreateWnd@?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00011	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateWnd@?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateWnd@?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ ENDP ; ioSP2GUIManager::WindowCreator<QuickLobbyWnd>::CreateWnd
PUBLIC	??_7?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyTournament>::`vftable'
PUBLIC	??0?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@QAE@XZ ; ioSP2GUIManager::WindowCreator<QuickLobbyTournament>::WindowCreator<QuickLobbyTournament>
PUBLIC	??_R4?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyTournament>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyTournament> `RTTI Type Descriptor'
PUBLIC	??_R3?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyTournament>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyTournament>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyTournament>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?CreateWnd@?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ ; ioSP2GUIManager::WindowCreator<QuickLobbyTournament>::CreateWnd
;	COMDAT ??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@8 DD FLAT:??_R0?AV?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyTournament>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R2?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R2?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@8 DD FLAT:??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyTournament>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IWndCreator@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R3?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R3?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@8 DD 00H ; ioSP2GUIManager::WindowCreator<QuickLobbyTournament>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@@8
_DATA	SEGMENT
??_R0?AV?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@@8 DD FLAT:??_7type_info@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyTournament> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIMana'
	DB	'ger@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@6B@
rdata$r	SEGMENT
??_R4?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@6B@ DD 00H ; ioSP2GUIManager::WindowCreator<QuickLobbyTournament>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@@8
	DD	FLAT:??_R3?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_7?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@6B@
CONST	SEGMENT
??_7?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@6B@ DD FLAT:??_R4?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyTournament>::`vftable'
	DD	FLAT:?CreateWnd@?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@QAE@XZ
_TEXT	SEGMENT
??0?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@QAE@XZ PROC ; ioSP2GUIManager::WindowCreator<QuickLobbyTournament>::WindowCreator<QuickLobbyTournament>, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@6B@
  00008	c3		 ret	 0
??0?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@QAE@XZ ENDP ; ioSP2GUIManager::WindowCreator<QuickLobbyTournament>::WindowCreator<QuickLobbyTournament>
_TEXT	ENDS
EXTRN	??0QuickLobbyTournament@@QAE@XZ:PROC		; QuickLobbyTournament::QuickLobbyTournament
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateWnd@?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateWnd@?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ$0
__ehfuncinfo$?CreateWnd@?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateWnd@?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?CreateWnd@?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
_TEXT	SEGMENT
$T531255 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateWnd@?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ PROC ; ioSP2GUIManager::WindowCreator<QuickLobbyTournament>::CreateWnd, COMDAT
; _this$ = ecx

; 87   : 		{

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?CreateWnd@?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 88   : 			return new T;

  0000c	68 a0 01 00 00	 push	 416			; 000001a0H
  00011	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00016	59		 pop	 ecx
  00017	8b c8		 mov	 ecx, eax
  00019	89 4d f0	 mov	 DWORD PTR $T531255[ebp], ecx
  0001c	33 c0		 xor	 eax, eax
  0001e	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00021	3b c8		 cmp	 ecx, eax
  00023	74 05		 je	 SHORT $LN3@CreateWnd@3
  00025	e8 00 00 00 00	 call	 ??0QuickLobbyTournament@@QAE@XZ ; QuickLobbyTournament::QuickLobbyTournament
$LN3@CreateWnd@3:

; 89   : 		}

  0002a	e8 00 00 00 00	 call	 __EH_epilog3
  0002f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateWnd@?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ$0:
  00000	ff 75 f0	 push	 DWORD PTR $T531255[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__ehhandler$?CreateWnd@?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00011	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateWnd@?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateWnd@?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ ENDP ; ioSP2GUIManager::WindowCreator<QuickLobbyTournament>::CreateWnd
PUBLIC	??_7?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyTradeInfoWnd>::`vftable'
PUBLIC	??0?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@QAE@XZ ; ioSP2GUIManager::WindowCreator<QuickLobbyTradeInfoWnd>::WindowCreator<QuickLobbyTradeInfoWnd>
PUBLIC	??_R4?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyTradeInfoWnd>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyTradeInfoWnd> `RTTI Type Descriptor'
PUBLIC	??_R3?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyTradeInfoWnd>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyTradeInfoWnd>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyTradeInfoWnd>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?CreateWnd@?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ ; ioSP2GUIManager::WindowCreator<QuickLobbyTradeInfoWnd>::CreateWnd
;	COMDAT ??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@8 DD FLAT:??_R0?AV?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyTradeInfoWnd>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R2?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R2?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@8 DD FLAT:??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyTradeInfoWnd>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IWndCreator@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R3?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R3?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@8 DD 00H ; ioSP2GUIManager::WindowCreator<QuickLobbyTradeInfoWnd>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@@8
_DATA	SEGMENT
??_R0?AV?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@@8 DD FLAT:??_7type_info@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyTradeInfoWnd> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIMa'
	DB	'nager@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@6B@
rdata$r	SEGMENT
??_R4?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@6B@ DD 00H ; ioSP2GUIManager::WindowCreator<QuickLobbyTradeInfoWnd>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@@8
	DD	FLAT:??_R3?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_7?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@6B@
CONST	SEGMENT
??_7?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@6B@ DD FLAT:??_R4?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyTradeInfoWnd>::`vftable'
	DD	FLAT:?CreateWnd@?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@QAE@XZ
_TEXT	SEGMENT
??0?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@QAE@XZ PROC ; ioSP2GUIManager::WindowCreator<QuickLobbyTradeInfoWnd>::WindowCreator<QuickLobbyTradeInfoWnd>, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@6B@
  00008	c3		 ret	 0
??0?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@QAE@XZ ENDP ; ioSP2GUIManager::WindowCreator<QuickLobbyTradeInfoWnd>::WindowCreator<QuickLobbyTradeInfoWnd>
_TEXT	ENDS
EXTRN	??0QuickLobbyTradeInfoWnd@@QAE@XZ:PROC		; QuickLobbyTradeInfoWnd::QuickLobbyTradeInfoWnd
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateWnd@?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateWnd@?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ$0
__ehfuncinfo$?CreateWnd@?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateWnd@?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?CreateWnd@?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
_TEXT	SEGMENT
$T531274 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateWnd@?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ PROC ; ioSP2GUIManager::WindowCreator<QuickLobbyTradeInfoWnd>::CreateWnd, COMDAT
; _this$ = ecx

; 87   : 		{

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?CreateWnd@?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 88   : 			return new T;

  0000c	68 64 01 00 00	 push	 356			; 00000164H
  00011	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00016	59		 pop	 ecx
  00017	8b c8		 mov	 ecx, eax
  00019	89 4d f0	 mov	 DWORD PTR $T531274[ebp], ecx
  0001c	33 c0		 xor	 eax, eax
  0001e	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00021	3b c8		 cmp	 ecx, eax
  00023	74 05		 je	 SHORT $LN3@CreateWnd@4
  00025	e8 00 00 00 00	 call	 ??0QuickLobbyTradeInfoWnd@@QAE@XZ ; QuickLobbyTradeInfoWnd::QuickLobbyTradeInfoWnd
$LN3@CreateWnd@4:

; 89   : 		}

  0002a	e8 00 00 00 00	 call	 __EH_epilog3
  0002f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateWnd@?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ$0:
  00000	ff 75 f0	 push	 DWORD PTR $T531274[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__ehhandler$?CreateWnd@?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00011	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateWnd@?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateWnd@?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ ENDP ; ioSP2GUIManager::WindowCreator<QuickLobbyTradeInfoWnd>::CreateWnd
PUBLIC	??_7?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::WindowCreator<ioShuffleButtonEx>::`vftable'
PUBLIC	??0?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@QAE@XZ ; ioSP2GUIManager::WindowCreator<ioShuffleButtonEx>::WindowCreator<ioShuffleButtonEx>
PUBLIC	??_R4?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::WindowCreator<ioShuffleButtonEx>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@@8 ; ioSP2GUIManager::WindowCreator<ioShuffleButtonEx> `RTTI Type Descriptor'
PUBLIC	??_R3?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<ioShuffleButtonEx>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<ioShuffleButtonEx>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<ioShuffleButtonEx>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?CreateWnd@?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ ; ioSP2GUIManager::WindowCreator<ioShuffleButtonEx>::CreateWnd
;	COMDAT ??_R1A@?0A@EA@?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@8 DD FLAT:??_R0?AV?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@@8 ; ioSP2GUIManager::WindowCreator<ioShuffleButtonEx>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R2?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R2?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@8 DD FLAT:??_R1A@?0A@EA@?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<ioShuffleButtonEx>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IWndCreator@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R3?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R3?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@8 DD 00H ; ioSP2GUIManager::WindowCreator<ioShuffleButtonEx>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@@8
_DATA	SEGMENT
??_R0?AV?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@@8 DD FLAT:??_7type_info@@6B@ ; ioSP2GUIManager::WindowCreator<ioShuffleButtonEx> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager'
	DB	'@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@6B@
rdata$r	SEGMENT
??_R4?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@6B@ DD 00H ; ioSP2GUIManager::WindowCreator<ioShuffleButtonEx>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@@8
	DD	FLAT:??_R3?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_7?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@6B@
CONST	SEGMENT
??_7?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@6B@ DD FLAT:??_R4?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::WindowCreator<ioShuffleButtonEx>::`vftable'
	DD	FLAT:?CreateWnd@?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@QAE@XZ
_TEXT	SEGMENT
??0?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@QAE@XZ PROC ; ioSP2GUIManager::WindowCreator<ioShuffleButtonEx>::WindowCreator<ioShuffleButtonEx>, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@6B@
  00008	c3		 ret	 0
??0?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@QAE@XZ ENDP ; ioSP2GUIManager::WindowCreator<ioShuffleButtonEx>::WindowCreator<ioShuffleButtonEx>
_TEXT	ENDS
EXTRN	??0ioShuffleButtonEx@@QAE@XZ:PROC		; ioShuffleButtonEx::ioShuffleButtonEx
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateWnd@?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateWnd@?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ$0
__ehfuncinfo$?CreateWnd@?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateWnd@?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?CreateWnd@?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
_TEXT	SEGMENT
$T531293 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateWnd@?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ PROC ; ioSP2GUIManager::WindowCreator<ioShuffleButtonEx>::CreateWnd, COMDAT
; _this$ = ecx

; 87   : 		{

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?CreateWnd@?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 88   : 			return new T;

  0000c	68 e4 01 00 00	 push	 484			; 000001e4H
  00011	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00016	59		 pop	 ecx
  00017	8b c8		 mov	 ecx, eax
  00019	89 4d f0	 mov	 DWORD PTR $T531293[ebp], ecx
  0001c	33 c0		 xor	 eax, eax
  0001e	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00021	3b c8		 cmp	 ecx, eax
  00023	74 05		 je	 SHORT $LN3@CreateWnd@5
  00025	e8 00 00 00 00	 call	 ??0ioShuffleButtonEx@@QAE@XZ ; ioShuffleButtonEx::ioShuffleButtonEx
$LN3@CreateWnd@5:

; 89   : 		}

  0002a	e8 00 00 00 00	 call	 __EH_epilog3
  0002f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateWnd@?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ$0:
  00000	ff 75 f0	 push	 DWORD PTR $T531293[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__ehhandler$?CreateWnd@?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00011	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateWnd@?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateWnd@?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ ENDP ; ioSP2GUIManager::WindowCreator<ioShuffleButtonEx>::CreateWnd
PUBLIC	??_7?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyExitWnd>::`vftable'
PUBLIC	??0?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@QAE@XZ ; ioSP2GUIManager::WindowCreator<QuickLobbyExitWnd>::WindowCreator<QuickLobbyExitWnd>
PUBLIC	??_R4?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyExitWnd>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyExitWnd> `RTTI Type Descriptor'
PUBLIC	??_R3?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyExitWnd>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyExitWnd>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyExitWnd>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?CreateWnd@?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ ; ioSP2GUIManager::WindowCreator<QuickLobbyExitWnd>::CreateWnd
;	COMDAT ??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@8 DD FLAT:??_R0?AV?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyExitWnd>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R2?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R2?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@8 DD FLAT:??_R1A@?0A@EA@?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@8 ; ioSP2GUIManager::WindowCreator<QuickLobbyExitWnd>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IWndCreator@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R3?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@8
rdata$r	SEGMENT
??_R3?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@8 DD 00H ; ioSP2GUIManager::WindowCreator<QuickLobbyExitWnd>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@@8
_DATA	SEGMENT
??_R0?AV?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@@8 DD FLAT:??_7type_info@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyExitWnd> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager'
	DB	'@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@6B@
rdata$r	SEGMENT
??_R4?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@6B@ DD 00H ; ioSP2GUIManager::WindowCreator<QuickLobbyExitWnd>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@@8
	DD	FLAT:??_R3?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@8
rdata$r	ENDS
;	COMDAT ??_7?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@6B@
CONST	SEGMENT
??_7?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@6B@ DD FLAT:??_R4?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@6B@ ; ioSP2GUIManager::WindowCreator<QuickLobbyExitWnd>::`vftable'
	DD	FLAT:?CreateWnd@?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@QAE@XZ
_TEXT	SEGMENT
??0?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@QAE@XZ PROC ; ioSP2GUIManager::WindowCreator<QuickLobbyExitWnd>::WindowCreator<QuickLobbyExitWnd>, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@6B@
  00008	c3		 ret	 0
??0?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@QAE@XZ ENDP ; ioSP2GUIManager::WindowCreator<QuickLobbyExitWnd>::WindowCreator<QuickLobbyExitWnd>
_TEXT	ENDS
EXTRN	??0QuickLobbyExitWnd@@QAE@XZ:PROC		; QuickLobbyExitWnd::QuickLobbyExitWnd
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateWnd@?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateWnd@?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ$0
__ehfuncinfo$?CreateWnd@?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateWnd@?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?CreateWnd@?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
_TEXT	SEGMENT
$T531312 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateWnd@?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ PROC ; ioSP2GUIManager::WindowCreator<QuickLobbyExitWnd>::CreateWnd, COMDAT
; _this$ = ecx

; 87   : 		{

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?CreateWnd@?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 88   : 			return new T;

  0000c	68 84 01 00 00	 push	 388			; 00000184H
  00011	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00016	59		 pop	 ecx
  00017	8b c8		 mov	 ecx, eax
  00019	89 4d f0	 mov	 DWORD PTR $T531312[ebp], ecx
  0001c	33 c0		 xor	 eax, eax
  0001e	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00021	3b c8		 cmp	 ecx, eax
  00023	74 05		 je	 SHORT $LN3@CreateWnd@6
  00025	e8 00 00 00 00	 call	 ??0QuickLobbyExitWnd@@QAE@XZ ; QuickLobbyExitWnd::QuickLobbyExitWnd
$LN3@CreateWnd@6:

; 89   : 		}

  0002a	e8 00 00 00 00	 call	 __EH_epilog3
  0002f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateWnd@?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ$0:
  00000	ff 75 f0	 push	 DWORD PTR $T531312[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__ehhandler$?CreateWnd@?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00011	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateWnd@?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateWnd@?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@UAEPAVioWnd@@XZ ENDP ; ioSP2GUIManager::WindowCreator<QuickLobbyExitWnd>::CreateWnd
PUBLIC	??1?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@XZ ; std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>::~pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>
; Function compile flags: /Ogsp
;	COMDAT ??1?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@XZ PROC ; std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>::~pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>, COMDAT
; _this$ = ecx
  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
??1?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@XZ ENDP ; std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>::~pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAVioHashString@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Key
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Key@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAVioHashString@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAVioHashString@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Key, COMDAT

; 616  : 		{	// return reference to key in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 617  : 		return ((key_type&)_Traits::_Kfn(_Myval(_Pnode)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 618  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Key@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@SAAAVioHashString@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 396  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 397  : 		}

  00005	c3		 ret	 0
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@ABVioHashString@@$$QAPAVIWndCreator@ioSP2GUIManager@@@Z ; std::_Pair_base<ioHashString const ,ioSP2GUIManager::IWndCreator *>::_Pair_base<ioHashString const ,ioSP2GUIManager::IWndCreator *>
EXTRN	__imp_??0ioHashString@@QAE@ABV0@@Z:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$_Pair_base@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@ABVioHashString@@$$QAPAVIWndCreator@ioSP2GUIManager@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@ABVioHashString@@$$QAPAVIWndCreator@ioSP2GUIManager@@@Z PROC ; std::_Pair_base<ioHashString const ,ioSP2GUIManager::IWndCreator *>::_Pair_base<ioHashString const ,ioSP2GUIManager::IWndCreator *>, COMDAT
; _this$ = ecx

; 150  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR __Val1$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  0000f	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  00012	8b 00		 mov	 eax, DWORD PTR [eax]
  00014	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 151  : 		}

  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
??0?$_Pair_base@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@ABVioHashString@@$$QAPAVIWndCreator@ioSP2GUIManager@@@Z ENDP ; std::_Pair_base<ioHashString const ,ioSP2GUIManager::IWndCreator *>::_Pair_base<ioHashString const ,ioSP2GUIManager::IWndCreator *>
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Root
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1790 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 214  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >, COMDAT
; _this$ = ecx

; 208  : 		{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0

; 209  : 		}

  00005	c3		 ret	 0
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 874  : 		return (this->_Alval.max_size());

  00000	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH

; 875  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Lrotate
; Function compile flags: /Ogsp
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00009	56		 push	 esi

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

  0000f	8b 30		 mov	 esi, DWORD PTR [eax]
  00011	80 7e 21 00	 cmp	 BYTE PTR [esi+33], 0
  00015	75 03		 jne	 SHORT $LN5@Lrotate@2

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Lrotate@2:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 05		 jne	 SHORT $LN4@Lrotate@2

; 1772 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

  0002c	eb 0e		 jmp	 SHORT $LN1@Lrotate@2
$LN4@Lrotate@2:
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00033	75 04		 jne	 SHORT $LN2@Lrotate@2

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  00035	89 01		 mov	 DWORD PTR [ecx], eax

; 1775 : 		else

  00037	eb 03		 jmp	 SHORT $LN1@Lrotate@2
$LN2@Lrotate@2:

; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00039	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@Lrotate@2:

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0003c	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  0003e	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Rrotate
; Function compile flags: /Ogsp
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	56		 push	 esi

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

  00009	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000c	89 32		 mov	 DWORD PTR [edx], esi

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

  0000e	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00011	80 7e 21 00	 cmp	 BYTE PTR [esi+33], 0
  00015	75 03		 jne	 SHORT $LN5@Rrotate@2

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Rrotate@2:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 05		 jne	 SHORT $LN4@Rrotate@2

; 1802 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

  0002c	eb 0f		 jmp	 SHORT $LN1@Rrotate@2
$LN4@Rrotate@2:
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00034	75 05		 jne	 SHORT $LN2@Rrotate@2

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00036	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1805 : 		else

  00039	eb 02		 jmp	 SHORT $LN1@Rrotate@2
$LN2@Rrotate@2:

; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  0003b	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@Rrotate@2:

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  0003d	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00040	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	53		 push	 ebx
  00005	32 db		 xor	 bl, bl
  00007	38 59 21	 cmp	 BYTE PTR [ecx+33], bl
  0000a	75 2d		 jne	 SHORT $LN3@operator@2

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

  0000c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000f	38 5a 21	 cmp	 BYTE PTR [edx+33], bl
  00012	75 0d		 jne	 SHORT $LN34@operator@2

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

$LL18@operator@2:
  00014	8b ca		 mov	 ecx, edx
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	38 5a 21	 cmp	 BYTE PTR [edx+33], bl
  0001b	74 f7		 je	 SHORT $LL18@operator@2
  0001d	89 08		 mov	 DWORD PTR [eax], ecx
  0001f	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  00020	c3		 ret	 0
$LN34@operator@2:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00021	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00024	eb 0c		 jmp	 SHORT $LN38@operator@2
$LL2@operator@2:
  00026	8b 08		 mov	 ecx, DWORD PTR [eax]
  00028	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  0002b	75 0a		 jne	 SHORT $LN1@operator@2

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
$LN38@operator@2:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00032	38 5a 21	 cmp	 BYTE PTR [edx+33], bl
  00035	74 ef		 je	 SHORT $LL2@operator@2
$LN1@operator@2:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

  00037	89 10		 mov	 DWORD PTR [eax], edx
$LN3@operator@2:
  00039	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  0003a	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::operator--
; Function compile flags: /Ogsp
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 83   : 		{	// predecrement

  00000	8b c1		 mov	 eax, ecx

; 84   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	53		 push	 ebx
  00005	32 db		 xor	 bl, bl
  00007	38 59 21	 cmp	 BYTE PTR [ecx+33], bl
  0000a	74 07		 je	 SHORT $LN8@operator@3

; 85   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

  0000c	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
  00011	5b		 pop	 ebx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00012	c3		 ret	 0
$LN8@operator@3:

; 86   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	38 5a 21	 cmp	 BYTE PTR [edx+33], bl
  00018	74 07		 je	 SHORT $LN44@operator@3

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0001a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001d	eb 17		 jmp	 SHORT $LN46@operator@3

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

$LL22@operator@3:
  0001f	8b d1		 mov	 edx, ecx
$LN44@operator@3:
  00021	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00024	38 59 21	 cmp	 BYTE PTR [ecx+33], bl
  00027	74 f6		 je	 SHORT $LL22@operator@3

; 89   : 		else

  00029	eb 17		 jmp	 SHORT $LN45@operator@3
$LL4@operator@3:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0002f	75 0a		 jne	 SHORT $LN3@operator@3

; 94   : 				_Ptr = _Pnode;	// ==> parent while left subtree

  00031	89 10		 mov	 DWORD PTR [eax], edx
  00033	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
$LN46@operator@3:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  00036	38 5a 21	 cmp	 BYTE PTR [edx+33], bl
  00039	74 f0		 je	 SHORT $LL4@operator@3
$LN3@operator@3:

; 95   : 			if (_Mytree::_Isnil(_Ptr))

  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	38 59 21	 cmp	 BYTE PTR [ecx+33], bl
  00040	75 02		 jne	 SHORT $LN1@operator@3
$LN45@operator@3:

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

  00042	89 10		 mov	 DWORD PTR [eax], edx
$LN1@operator@3:
  00044	5b		 pop	 ebx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00045	c3		 ret	 0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 146  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Node>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Node>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > > &,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 164  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??_G?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAEPAXI@Z ; std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_G?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAEPAXI@Z PROC ; std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  0000c	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00010	74 07		 je	 SHORT $LN1@scalar@3
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	59		 pop	 ecx
$LN1@scalar@3:
  00019	8b c6		 mov	 eax, esi
  0001b	5e		 pop	 esi
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??_G?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAEPAXI@Z ENDP ; std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GASValue@@QAEPAXI@Z				; ASValue::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_GASValue@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GASValue@@QAEPAXI@Z PROC				; ASValue::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ASValue@@QAE@XZ	; ASValue::~ASValue
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@4
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@4:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GASValue@@QAEPAXI@Z ENDP				; ASValue::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@$$QBVioHashString@@$$QAPAVIWndCreator@ioSP2GUIManager@@@Z ; std::_Pair_base<ioHashString const ,ioSP2GUIManager::IWndCreator *>::_Pair_base<ioHashString const ,ioSP2GUIManager::IWndCreator *>
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Pair_base@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@$$QBVioHashString@@$$QAPAVIWndCreator@ioSP2GUIManager@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@$$QBVioHashString@@$$QAPAVIWndCreator@ioSP2GUIManager@@@Z PROC ; std::_Pair_base<ioHashString const ,ioSP2GUIManager::IWndCreator *>::_Pair_base<ioHashString const ,ioSP2GUIManager::IWndCreator *>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR __Val1$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  0000f	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  00012	8b 00		 mov	 eax, DWORD PTR [eax]
  00014	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 146  : 		}

  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
??0?$_Pair_base@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@$$QBVioHashString@@$$QAPAVIWndCreator@ioSP2GUIManager@@@Z ENDP ; std::_Pair_base<ioHashString const ,ioSP2GUIManager::IWndCreator *>::_Pair_base<ioHashString const ,ioSP2GUIManager::IWndCreator *>
_TEXT	ENDS
PUBLIC	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str, COMDAT
; _this$ = ecx

; 1497 : 		return (_Myptr());

  00000	83 79 14 08	 cmp	 DWORD PTR [ecx+20], 8
  00004	72 03		 jb	 SHORT $LN5@c_str
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1498 : 		}

  00008	c3		 ret	 0

; 1497 : 		return (_Myptr());

$LN5@c_str:
  00009	8b c1		 mov	 eax, ecx

; 1498 : 		}

  0000b	c3		 ret	 0
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
_TEXT	ENDS
PUBLIC	??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z ; std::_String_val<wchar_t,std::allocator<wchar_t> >::_String_val<wchar_t,std::allocator<wchar_t> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z PROC ; std::_String_val<wchar_t,std::allocator<wchar_t> >::_String_val<wchar_t,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 454  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 455  : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z ENDP ; std::_String_val<wchar_t,std::allocator<wchar_t> >::_String_val<wchar_t,std::allocator<wchar_t> >
_TEXT	ENDS
PUBLIC	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
EXTRN	__imp_?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ:PROC
EXTRN	__imp_?good@ios_base@std@@QBE_NXZ:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\ostream
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry, COMDAT
; _this$ = ecx

; 114  : 			{	// construct locking and testing stream

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00011	8b 75 08	 mov	 esi, DWORD PTR __Ostr$[ebp]
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base

; 115  : 			if (_Ostr.good() && _Ostr.tie() != 0)

  0001a	8b 06		 mov	 eax, DWORD PTR [esi]
  0001c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001f	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00023	03 ce		 add	 ecx, esi
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
  0002b	84 c0		 test	 al, al
  0002d	74 26		 je	 SHORT $LN1@sentry
  0002f	8b 06		 mov	 eax, DWORD PTR [esi]
  00031	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00034	03 ce		 add	 ecx, esi
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ
  0003c	85 c0		 test	 eax, eax
  0003e	74 15		 je	 SHORT $LN1@sentry

; 116  : 				_Ostr.tie()->flush();

  00040	8b 06		 mov	 eax, DWORD PTR [esi]
  00042	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00045	03 ce		 add	 ecx, esi
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ
  0004d	8b c8		 mov	 ecx, eax
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@XZ
$LN1@sentry:

; 117  : 			_Ok = _Ostr.good();	// store test only after flushing tie

  00055	8b 06		 mov	 eax, DWORD PTR [esi]
  00057	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0005a	03 ce		 add	 ecx, esi
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
  00062	88 47 04	 mov	 BYTE PTR [edi+4], al

; 118  : 			}

  00065	8b c7		 mov	 eax, edi
  00067	e8 00 00 00 00	 call	 __EH_epilog3
  0006c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
EXTRN	__imp_?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_?uncaught_exception@std@@YA_NXZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry, COMDAT
; _this$ = ecx

; 121  : 			{	// destroy the object

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 122  :  #if _HAS_EXCEPTIONS
; 123  : 			if (!uncaught_exception())

  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
  0001b	84 c0		 test	 al, al
  0001d	75 08		 jne	 SHORT $LN1@sentry@2

; 124  : 				this->_Myostr._Osfx();

  0001f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ
$LN1@sentry@2:

; 125  : 
; 126  :  #else /* _HAS_EXCEPTIONS */
; 127  : 			this->_Myostr._Osfx();
; 128  :  #endif /* _HAS_EXCEPTIONS */
; 129  : 			}

  00027	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
  00032	e8 00 00 00 00	 call	 __EH_epilog3
  00037	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
__ehhandler$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
PUBLIC	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos, COMDAT
; _this$ = ecx

; 1953 : 		{	// set new length and null terminator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1954 : 		_Traits::assign(_Myptr()[this->_Mysize = _Newsize], _Elem());

  00003	83 79 14 08	 cmp	 DWORD PTR [ecx+20], 8
  00007	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0000a	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  0000d	72 02		 jb	 SHORT $LN5@Eos
  0000f	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN5@Eos:
  00011	33 d2		 xor	 edx, edx
  00013	66 89 14 41	 mov	 WORD PTR [ecx+eax*2], dx

; 1955 : 		}

  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx

; 1517 : 		size_type _Num = this->_Alval.max_size();
; 1518 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	b8 fe ff ff 7f	 mov	 eax, 2147483646		; 7ffffffeH

; 1519 : 		}

  00005	c3		 ret	 0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@_W@std@@QAEPA_WI@Z	; std::allocator<wchar_t>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z PROC		; std::allocator<wchar_t>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@_W@std@@YAPA_WIPA_W@Z ; std::_Allocate<wchar_t>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z ENDP		; std::allocator<wchar_t>::allocate
_TEXT	ENDS
PUBLIC	??$?9_W_W@std@@YA_NABV?$allocator@_W@0@0@Z	; std::operator!=<wchar_t,wchar_t>
; Function compile flags: /Ogsp
;	COMDAT ??$?9_W_W@std@@YA_NABV?$allocator@_W@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9_W_W@std@@YA_NABV?$allocator@_W@0@0@Z PROC		; std::operator!=<wchar_t,wchar_t>, COMDAT

; 271  : 	return (!(_Left == _Right));

  00000	32 c0		 xor	 al, al

; 272  : 	}

  00002	c3		 ret	 0
??$?9_W_W@std@@YA_NABV?$allocator@_W@0@0@Z ENDP		; std::operator!=<wchar_t,wchar_t>
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 101  : 	{	// exchange values stored at _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 102  : 	_Ty _Tmp = _Move(_Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8a 08		 mov	 cl, BYTE PTR [eax]
  00008	56		 push	 esi

; 103  : 	_Left = _Move(_Right);

  00009	8b 75 0c	 mov	 esi, DWORD PTR __Right$[ebp]
  0000c	8a 16		 mov	 dl, BYTE PTR [esi]
  0000e	88 10		 mov	 BYTE PTR [eax], dl

; 104  : 	_Right = _Move(_Tmp);

  00010	88 0e		 mov	 BYTE PTR [esi], cl
  00012	5e		 pop	 esi

; 105  : 	}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Off$ = 12						; size = 4
?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find, COMDAT
; _this$ = ecx

; 1642 : 		{	// look for [_Ptr, <null>) beginnng at or after _Off

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1643 : 		_DEBUG_POINTER(_Ptr);
; 1644 : 		return (find(_Ptr, _Off, _Traits::length(_Ptr)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	8d 50 02	 lea	 edx, DWORD PTR [eax+2]
  00009	56		 push	 esi
$LL5@find@2:
  0000a	66 8b 30	 mov	 si, WORD PTR [eax]
  0000d	83 c0 02	 add	 eax, 2
  00010	66 85 f6	 test	 si, si
  00013	75 f5		 jne	 SHORT $LL5@find@2
  00015	2b c2		 sub	 eax, edx
  00017	d1 f8		 sar	 eax, 1
  00019	50		 push	 eax
  0001a	ff 75 0c	 push	 DWORD PTR __Off$[ebp]
  0001d	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00020	e8 00 00 00 00	 call	 ?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find
  00025	5e		 pop	 esi

; 1645 : 		}

  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::begin
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::begin, COMDAT
; _this$ = ecx

; 811  : 		{	// return iterator for beginning of nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 812  : 		return (const_iterator(_Lmost(), this));

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 813  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::end, COMDAT
; _this$ = ecx

; 821  : 		{	// return iterator for end of nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 822  : 		return (const_iterator(this->_Myhead, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 823  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::end
_TEXT	ENDS
PUBLIC	??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
PUBLIC	??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::overflow
PUBLIC	?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGXZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekoff
PUBLIC	?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekpos
EXTRN	__imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ:PROC
EXTRN	??_E?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor'
EXTRN	?_Lock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Lock
EXTRN	?_Unlock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Unlock
EXTRN	?showmanyc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::showmanyc
EXTRN	?uflow@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::uflow
EXTRN	?xsgetn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JPA_W_J@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::xsgetn
EXTRN	?xsputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JPB_W_J@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::xsputn
EXTRN	?setbuf@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEPAV12@PA_W_J@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::setbuf
EXTRN	?sync@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::sync
EXTRN	?imbue@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEXABVlocale@2@@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::imbue
;	COMDAT ??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
rdata$r	SEGMENT
??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD 00H ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$alloca'
	DB	'tor@_W@2@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DD 00H ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DD FLAT:??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
	DD	FLAT:??_E?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z
	DD	FLAT:?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGXZ
	DD	FLAT:?uflow@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JPA_W_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JPB_W_J@Z
	DD	FLAT:?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEPAV12@PA_W_J@Z
	DD	FLAT:?sync@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ$0
__ehfuncinfo$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 75   : 		{	// destroy the object

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
  00017	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 76   : 		_Tidy();

  0001b	e8 00 00 00 00	 call	 ?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXXZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 77   : 		}

  00020	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00024	8b ce		 mov	 ecx, esi
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ
  0002c	e8 00 00 00 00	 call	 __EH_epilog3
  00031	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ
__ehhandler$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?eq@?$char_traits@_W@std@@SA_NAB_W0@Z		; std::char_traits<wchar_t>::eq
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
;	COMDAT ?eq@?$char_traits@_W@std@@SA_NAB_W0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq@?$char_traits@_W@std@@SA_NAB_W0@Z PROC		; std::char_traits<wchar_t>::eq, COMDAT

; 337  : 		{	// test for element equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 338  : 		return (_Left == _Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	66 8b 00	 mov	 ax, WORD PTR [eax]
  00009	8b 55 0c	 mov	 edx, DWORD PTR __Right$[ebp]
  0000c	33 c9		 xor	 ecx, ecx
  0000e	66 3b 02	 cmp	 ax, WORD PTR [edx]
  00011	0f 94 c0	 sete	 al

; 339  : 		}

  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?eq@?$char_traits@_W@std@@SA_NAB_W0@Z ENDP		; std::char_traits<wchar_t>::eq
_TEXT	ENDS
PUBLIC	?to_char_type@?$char_traits@_W@std@@SA_WABG@Z	; std::char_traits<wchar_t>::to_char_type
; Function compile flags: /Ogsp
;	COMDAT ?to_char_type@?$char_traits@_W@std@@SA_WABG@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?to_char_type@?$char_traits@_W@std@@SA_WABG@Z PROC	; std::char_traits<wchar_t>::to_char_type, COMDAT

; 347  : 		{	// convert metacharacter to character

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 348  : 		return (_Meta);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Meta$[ebp]
  00006	66 8b 00	 mov	 ax, WORD PTR [eax]

; 349  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?to_char_type@?$char_traits@_W@std@@SA_WABG@Z ENDP	; std::char_traits<wchar_t>::to_char_type
_TEXT	ENDS
PUBLIC	?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z	; std::char_traits<wchar_t>::to_int_type
; Function compile flags: /Ogsp
;	COMDAT ?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z PROC	; std::char_traits<wchar_t>::to_int_type, COMDAT

; 352  : 		{	// convert character to metacharacter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 353  : 		return (_Ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ch$[ebp]
  00006	66 8b 00	 mov	 ax, WORD PTR [eax]

; 354  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z ENDP	; std::char_traits<wchar_t>::to_int_type
_TEXT	ENDS
EXTRN	__imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
;	COMDAT ?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGXZ
_TEXT	SEGMENT
?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGXZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::underflow, COMDAT
; _this$ = ecx

; 206  : 		{	// get an element from stream, but don't point past it

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 207  : 		if (_Mysb::gptr() == 0)

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00009	85 c0		 test	 eax, eax
  0000b	75 07		 jne	 SHORT $LN8@underflow

; 208  : 			return (_Traits::eof());	// no character buffer, fail

  0000d	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  00012	5e		 pop	 esi

; 220  : 			}
; 221  : 		}

  00013	c3		 ret	 0
$LN8@underflow:

; 209  : 		else if (_Mysb::gptr() < _Mysb::egptr())

  00014	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  00017	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  0001a	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0001c	8b 00		 mov	 eax, DWORD PTR [eax]
  0001e	57		 push	 edi
  0001f	8d 3c 41	 lea	 edi, DWORD PTR [ecx+eax*2]
  00022	8b ce		 mov	 ecx, esi
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0002a	3b c7		 cmp	 eax, edi
  0002c	73 10		 jae	 SHORT $LN6@underflow

; 210  : 			return (_Traits::to_int_type(*_Mysb::gptr()));	// return buffered

  0002e	8b ce		 mov	 ecx, esi
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00036	66 8b 00	 mov	 ax, WORD PTR [eax]
  00039	e9 84 00 00 00	 jmp	 $LN25@underflow
$LN6@underflow:

; 211  : 		else if (_Mystate & _Noread || _Mysb::pptr() == 0
; 212  : 			|| _Mysb::pptr() <= _Mysb::gptr() && _Seekhigh <= _Mysb::gptr())

  0003e	f6 46 40 04	 test	 BYTE PTR [esi+64], 4
  00042	75 79		 jne	 SHORT $LN3@underflow
  00044	8b ce		 mov	 ecx, esi
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0004c	85 c0		 test	 eax, eax
  0004e	74 6d		 je	 SHORT $LN3@underflow
  00050	8b ce		 mov	 ecx, esi
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00058	8b ce		 mov	 ecx, esi
  0005a	8b f8		 mov	 edi, eax
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00062	3b f8		 cmp	 edi, eax
  00064	77 0d		 ja	 SHORT $LN4@underflow
  00066	8b ce		 mov	 ecx, esi
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0006e	39 46 3c	 cmp	 DWORD PTR [esi+60], eax
  00071	76 4a		 jbe	 SHORT $LN3@underflow
$LN4@underflow:

; 214  : 		else
; 215  : 			{	// extend read buffer into written area, then return buffered
; 216  : 			if (_Seekhigh < _Mysb::pptr())

  00073	8b ce		 mov	 ecx, esi
  00075	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0007b	39 46 3c	 cmp	 DWORD PTR [esi+60], eax
  0007e	73 0b		 jae	 SHORT $LN1@underflow

; 217  : 				_Seekhigh = _Mysb::pptr();

  00080	8b ce		 mov	 ecx, esi
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00088	89 46 3c	 mov	 DWORD PTR [esi+60], eax
$LN1@underflow:

; 218  : 			_Mysb::setg(_Mysb::eback(), _Mysb::gptr(), _Seekhigh);

  0008b	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0008e	8b 7e 3c	 mov	 edi, DWORD PTR [esi+60]
  00091	53		 push	 ebx
  00092	8b 18		 mov	 ebx, DWORD PTR [eax]
  00094	8b ce		 mov	 ecx, esi
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0009c	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0009f	89 19		 mov	 DWORD PTR [ecx], ebx
  000a1	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  000a4	89 01		 mov	 DWORD PTR [ecx], eax
  000a6	2b f8		 sub	 edi, eax
  000a8	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  000ab	d1 ff		 sar	 edi, 1

; 219  : 			return (_Traits::to_int_type(*_Mysb::gptr()));

  000ad	8b ce		 mov	 ecx, esi
  000af	89 38		 mov	 DWORD PTR [eax], edi
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  000b7	66 8b 00	 mov	 ax, WORD PTR [eax]
  000ba	5b		 pop	 ebx
  000bb	eb 05		 jmp	 SHORT $LN25@underflow
$LN3@underflow:

; 213  : 			return (_Traits::eof());	// can't read, fail

  000bd	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
$LN25@underflow:
  000c2	5f		 pop	 edi
  000c3	5e		 pop	 esi

; 220  : 			}
; 221  : 		}

  000c4	c3		 ret	 0
?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGXZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::underflow
_TEXT	ENDS
PUBLIC	??B?$fpos@H@std@@QBE_JXZ			; std::fpos<int>::operator __int64
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
;	COMDAT ??B?$fpos@H@std@@QBE_JXZ
_TEXT	SEGMENT
??B?$fpos@H@std@@QBE_JXZ PROC				; std::fpos<int>::operator __int64, COMDAT
; _this$ = ecx

; 65   : 		return ((streamoff)(_Myoff + _FPOSOFF(_Fpos)));

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	99		 cdq
  00004	03 01		 add	 eax, DWORD PTR [ecx]
  00006	13 51 04	 adc	 edx, DWORD PTR [ecx+4]

; 66   : 		}

  00009	c3		 ret	 0
??B?$fpos@H@std@@QBE_JXZ ENDP				; std::fpos<int>::operator __int64
_TEXT	ENDS
PUBLIC	??0?$fpos@H@std@@QAE@_J@Z			; std::fpos<int>::fpos<int>
; Function compile flags: /Ogsp
;	COMDAT ??0?$fpos@H@std@@QAE@_J@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 8
??0?$fpos@H@std@@QAE@_J@Z PROC				; std::fpos<int>::fpos<int>, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with stream offset

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp+4]
  0000d	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00010	33 c9		 xor	 ecx, ecx
  00012	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00015	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  00018	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 41   : 		}

  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
??0?$fpos@H@std@@QAE@_J@Z ENDP				; std::fpos<int>::fpos<int>
_TEXT	ENDS
PUBLIC	?not_eof@?$char_traits@_W@std@@SAGABG@Z		; std::char_traits<wchar_t>::not_eof
; Function compile flags: /Ogsp
;	COMDAT ?not_eof@?$char_traits@_W@std@@SAGABG@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?not_eof@?$char_traits@_W@std@@SAGABG@Z PROC		; std::char_traits<wchar_t>::not_eof, COMDAT

; 363  : 		{	// return anything but EOF

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 364  : 		return (_Meta != eof() ? _Meta : !eof());

  00003	8b 45 08	 mov	 eax, DWORD PTR __Meta$[ebp]
  00006	0f b7 00	 movzx	 eax, WORD PTR [eax]
  00009	b9 ff ff 00 00	 mov	 ecx, 65535		; 0000ffffH
  0000e	66 3b c1	 cmp	 ax, cx
  00011	75 02		 jne	 SHORT $LN4@not_eof
  00013	33 c0		 xor	 eax, eax
$LN4@not_eof:

; 365  : 		}

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?not_eof@?$char_traits@_W@std@@SAGABG@Z ENDP		; std::char_traits<wchar_t>::not_eof
_TEXT	ENDS
EXTRN	__imp_?gbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
;	COMDAT ?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 2
?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::pbackfail, COMDAT
; _this$ = ecx

; 189  : 		{	// put an element back to stream

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 190  : 		if (_Mysb::gptr() == 0
; 191  : 			|| _Mysb::gptr() <= _Mysb::eback()
; 192  : 			|| !_Traits::eq_int_type(_Traits::eof(), _Meta)
; 193  : 			&& !_Traits::eq(_Traits::to_char_type(_Meta), _Mysb::gptr()[-1])
; 194  : 			&& _Mystate & _Constant)

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0000e	bb ff ff 00 00	 mov	 ebx, 65535		; 0000ffffH
  00013	85 c0		 test	 eax, eax
  00015	74 53		 je	 SHORT $LN3@pbackfail
  00017	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0001a	8b 30		 mov	 esi, DWORD PTR [eax]
  0001c	8b cf		 mov	 ecx, edi
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00024	3b c6		 cmp	 eax, esi
  00026	76 42		 jbe	 SHORT $LN3@pbackfail
  00028	66 8b 75 08	 mov	 si, WORD PTR __Meta$[ebp]
  0002c	8b c3		 mov	 eax, ebx
  0002e	66 3b c6	 cmp	 ax, si
  00031	74 14		 je	 SHORT $LN4@pbackfail
  00033	8b cf		 mov	 ecx, edi
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0003b	66 3b 70 fe	 cmp	 si, WORD PTR [eax-2]
  0003f	74 06		 je	 SHORT $LN4@pbackfail
  00041	f6 47 40 02	 test	 BYTE PTR [edi+64], 2
  00045	75 23		 jne	 SHORT $LN3@pbackfail
$LN4@pbackfail:

; 196  : 		else
; 197  : 			{	// back up one position and store put-back character
; 198  : 			_Mysb::gbump(-1);

  00047	6a ff		 push	 -1
  00049	8b cf		 mov	 ecx, edi
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z

; 199  : 			if (!_Traits::eq_int_type(_Traits::eof(), _Meta))

  00051	66 3b de	 cmp	 bx, si
  00054	74 10		 je	 SHORT $LN27@pbackfail

; 200  : 				*_Mysb::gptr() = _Traits::to_char_type(_Meta);

  00056	8b cf		 mov	 ecx, edi
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0005e	66 89 30	 mov	 WORD PTR [eax], si

; 201  : 			return (_Traits::not_eof(_Meta));

  00061	0f b7 c6	 movzx	 eax, si
  00064	eb 06		 jmp	 SHORT $LN2@pbackfail
$LN27@pbackfail:
  00066	33 c0		 xor	 eax, eax
  00068	eb 02		 jmp	 SHORT $LN2@pbackfail
$LN3@pbackfail:

; 195  : 			return (_Traits::eof());	// can't put back, fail

  0006a	8b c3		 mov	 eax, ebx
$LN2@pbackfail:
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx

; 202  : 			}
; 203  : 		}

  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::pbackfail
_TEXT	ENDS
EXTRN	__imp_?pbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?_BADOFF@std@@3_JB:QWORD
; Function compile flags: /Ogsp
;	COMDAT ?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
tv365 = 20						; size = 4
$T531952 = 20						; size = 4
__Way$ = 20						; size = 4
$T531948 = 24						; size = 4
__Which$ = 24						; size = 4
?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekoff, COMDAT
; _this$ = ecx

; 226  : 		{	// change position by _Off, according to _Way, _Mode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f1		 mov	 esi, ecx

; 227  : 		if (_Mysb::pptr() != 0 && _Seekhigh < _Mysb::pptr())

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0000e	85 c0		 test	 eax, eax
  00010	74 18		 je	 SHORT $LN21@seekoff
  00012	8b ce		 mov	 ecx, esi
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0001a	39 46 3c	 cmp	 DWORD PTR [esi+60], eax
  0001d	73 0b		 jae	 SHORT $LN21@seekoff

; 228  : 			_Seekhigh = _Mysb::pptr();	// update high-water pointer

  0001f	8b ce		 mov	 ecx, esi
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00027	89 46 3c	 mov	 DWORD PTR [esi+60], eax
$LN21@seekoff:

; 229  : 
; 230  : 		if (_Which & ios_base::in && _Mysb::gptr() != 0)

  0002a	f6 45 18 01	 test	 BYTE PTR __Which$[ebp], 1
  0002e	0f 84 0a 01 00
	00		 je	 $LN20@seekoff
  00034	8b ce		 mov	 ecx, esi
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0003c	85 c0		 test	 eax, eax
  0003e	0f 84 fa 00 00
	00		 je	 $LN20@seekoff

; 231  : 			{	// position within read buffer
; 232  : 			if (_Way == ios_base::end)

  00044	83 7d 14 02	 cmp	 DWORD PTR __Way$[ebp], 2
  00048	75 0a		 jne	 SHORT $LN19@seekoff

; 233  : 				_Off += (off_type)(_Seekhigh - _Mysb::eback());

  0004a	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0004d	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  00050	2b 01		 sub	 eax, DWORD PTR [ecx]

; 234  : 			else if (_Way == ios_base::cur

  00052	eb 1b		 jmp	 SHORT $LN59@seekoff
$LN19@seekoff:

; 235  : 				&& (_Which & ios_base::out) == 0)

  00054	83 7d 14 01	 cmp	 DWORD PTR __Way$[ebp], 1
  00058	75 24		 jne	 SHORT $LN17@seekoff
  0005a	f6 45 18 02	 test	 BYTE PTR __Which$[ebp], 2
  0005e	75 24		 jne	 SHORT $LN55@seekoff

; 236  : 				_Off += (off_type)(_Mysb::gptr() - _Mysb::eback());

  00060	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00063	8b 38		 mov	 edi, DWORD PTR [eax]
  00065	8b ce		 mov	 ecx, esi
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0006d	2b c7		 sub	 eax, edi
$LN59@seekoff:
  0006f	8b 7d 0c	 mov	 edi, DWORD PTR __Off$[ebp]
  00072	8b 5d 10	 mov	 ebx, DWORD PTR __Off$[ebp+4]
  00075	d1 f8		 sar	 eax, 1
  00077	99		 cdq
  00078	03 f8		 add	 edi, eax
  0007a	13 da		 adc	 ebx, edx
  0007c	eb 18		 jmp	 SHORT $LN15@seekoff
$LN17@seekoff:

; 237  : 			else if (_Way != ios_base::beg)

  0007e	83 7d 14 00	 cmp	 DWORD PTR __Way$[ebp], 0
  00082	74 0c		 je	 SHORT $LN53@seekoff
$LN55@seekoff:

; 238  : 				_Off = _BADOFF;

  00084	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00089	8b 38		 mov	 edi, DWORD PTR [eax]
  0008b	8b 58 04	 mov	 ebx, DWORD PTR [eax+4]
  0008e	eb 06		 jmp	 SHORT $LN15@seekoff
$LN53@seekoff:
  00090	8b 5d 10	 mov	 ebx, DWORD PTR __Off$[ebp+4]
  00093	8b 7d 0c	 mov	 edi, DWORD PTR __Off$[ebp]
$LN15@seekoff:

; 239  : 
; 240  : 			if (0 <= _Off && _Off <= _Seekhigh - _Mysb::eback())

  00096	85 db		 test	 ebx, ebx
  00098	0f 8c 54 01 00
	00		 jl	 $LN58@seekoff
  0009e	7f 08		 jg	 SHORT $LN49@seekoff
  000a0	85 ff		 test	 edi, edi
  000a2	0f 82 4a 01 00
	00		 jb	 $LN58@seekoff
$LN49@seekoff:
  000a8	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000ab	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ad	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  000b0	2b c1		 sub	 eax, ecx
  000b2	d1 f8		 sar	 eax, 1
  000b4	99		 cdq
  000b5	89 4d 14	 mov	 DWORD PTR tv365[ebp], ecx
  000b8	3b da		 cmp	 ebx, edx
  000ba	0f 8f 32 01 00
	00		 jg	 $LN58@seekoff
  000c0	7c 08		 jl	 SHORT $LN50@seekoff
  000c2	3b f8		 cmp	 edi, eax
  000c4	0f 87 28 01 00
	00		 ja	 $LN58@seekoff
$LN50@seekoff:

; 241  : 				{	// change read position
; 242  : 				_Mysb::gbump((int)(_Mysb::eback() - _Mysb::gptr() + _Off));

  000ca	8b ce		 mov	 ecx, esi
  000cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  000d2	8b c8		 mov	 ecx, eax
  000d4	8b 45 14	 mov	 eax, DWORD PTR tv365[ebp]
  000d7	2b c1		 sub	 eax, ecx
  000d9	d1 f8		 sar	 eax, 1
  000db	03 c7		 add	 eax, edi
  000dd	50		 push	 eax
  000de	8b ce		 mov	 ecx, esi
  000e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z

; 243  : 				if (_Which & ios_base::out && _Mysb::pptr() != 0)

  000e6	f6 45 18 02	 test	 BYTE PTR __Which$[ebp], 2
  000ea	0f 84 0c 01 00
	00		 je	 $LN56@seekoff
  000f0	8b ce		 mov	 ecx, esi
  000f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  000f8	85 c0		 test	 eax, eax
  000fa	0f 84 fc 00 00
	00		 je	 $LN56@seekoff

; 244  : 					_Mysb::setp(_Mysb::pbase(), _Mysb::gptr(),
; 245  : 						_Mysb::epptr());	// change write position to match

  00100	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  00103	8b 00		 mov	 eax, DWORD PTR [eax]
  00105	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00108	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0010a	8d 04 41	 lea	 eax, DWORD PTR [ecx+eax*2]
  0010d	89 45 18	 mov	 DWORD PTR $T531948[ebp], eax
  00110	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00113	8b 00		 mov	 eax, DWORD PTR [eax]
  00115	8b ce		 mov	 ecx, esi
  00117	89 45 14	 mov	 DWORD PTR $T531952[ebp], eax
  0011a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00120	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00123	8b 55 14	 mov	 edx, DWORD PTR $T531952[ebp]
  00126	89 11		 mov	 DWORD PTR [ecx], edx
  00128	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  0012b	89 01		 mov	 DWORD PTR [ecx], eax
  0012d	8b 4d 18	 mov	 ecx, DWORD PTR $T531948[ebp]
  00130	2b c8		 sub	 ecx, eax
  00132	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  00135	d1 f9		 sar	 ecx, 1
  00137	89 08		 mov	 DWORD PTR [eax], ecx

; 246  : 				}
; 247  : 			else

  00139	e9 be 00 00 00	 jmp	 $LN56@seekoff
$LN20@seekoff:

; 248  : 				_Off = _BADOFF;
; 249  : 			}
; 250  : 		else if (_Which & ios_base::out && _Mysb::pptr() != 0)

  0013e	f6 45 18 02	 test	 BYTE PTR __Which$[ebp], 2
  00142	0f 84 9e 00 00
	00		 je	 $LN10@seekoff
  00148	8b ce		 mov	 ecx, esi
  0014a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00150	85 c0		 test	 eax, eax
  00152	0f 84 8e 00 00
	00		 je	 $LN10@seekoff

; 251  : 			{	// position within write buffer
; 252  : 			if (_Way == ios_base::end)

  00158	83 7d 14 02	 cmp	 DWORD PTR __Way$[ebp], 2
  0015c	75 0a		 jne	 SHORT $LN9@seekoff

; 253  : 				_Off += (off_type)(_Seekhigh - _Mysb::eback());

  0015e	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00161	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  00164	2b 01		 sub	 eax, DWORD PTR [ecx]
  00166	eb 15		 jmp	 SHORT $LN60@seekoff
$LN9@seekoff:

; 254  : 			else if (_Way == ios_base::cur)

  00168	83 7d 14 01	 cmp	 DWORD PTR __Way$[ebp], 1
  0016c	75 1e		 jne	 SHORT $LN7@seekoff

; 255  : 				_Off += (off_type)(_Mysb::pptr() - _Mysb::eback());

  0016e	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00171	8b 38		 mov	 edi, DWORD PTR [eax]
  00173	8b ce		 mov	 ecx, esi
  00175	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0017b	2b c7		 sub	 eax, edi
$LN60@seekoff:
  0017d	8b 7d 0c	 mov	 edi, DWORD PTR __Off$[ebp]
  00180	8b 5d 10	 mov	 ebx, DWORD PTR __Off$[ebp+4]
  00183	d1 f8		 sar	 eax, 1
  00185	99		 cdq
  00186	03 f8		 add	 edi, eax
  00188	13 da		 adc	 ebx, edx
  0018a	eb 18		 jmp	 SHORT $LN5@seekoff
$LN7@seekoff:

; 256  : 			else if (_Way != ios_base::beg)

  0018c	83 7d 14 00	 cmp	 DWORD PTR __Way$[ebp], 0
  00190	74 0c		 je	 SHORT $LN54@seekoff

; 257  : 				_Off = _BADOFF;

  00192	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00197	8b 38		 mov	 edi, DWORD PTR [eax]
  00199	8b 58 04	 mov	 ebx, DWORD PTR [eax+4]
  0019c	eb 06		 jmp	 SHORT $LN5@seekoff
$LN54@seekoff:
  0019e	8b 5d 10	 mov	 ebx, DWORD PTR __Off$[ebp+4]
  001a1	8b 7d 0c	 mov	 edi, DWORD PTR __Off$[ebp]
$LN5@seekoff:

; 258  : 
; 259  : 			if (0 <= _Off && _Off <= _Seekhigh - _Mysb::eback())

  001a4	85 db		 test	 ebx, ebx
  001a6	7c 4a		 jl	 SHORT $LN58@seekoff
  001a8	7f 04		 jg	 SHORT $LN51@seekoff
  001aa	85 ff		 test	 edi, edi
  001ac	72 44		 jb	 SHORT $LN58@seekoff
$LN51@seekoff:
  001ae	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  001b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b3	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  001b6	2b c1		 sub	 eax, ecx
  001b8	d1 f8		 sar	 eax, 1
  001ba	99		 cdq
  001bb	89 4d 14	 mov	 DWORD PTR tv365[ebp], ecx
  001be	3b da		 cmp	 ebx, edx
  001c0	7f 30		 jg	 SHORT $LN58@seekoff
  001c2	7c 04		 jl	 SHORT $LN52@seekoff
  001c4	3b f8		 cmp	 edi, eax
  001c6	77 2a		 ja	 SHORT $LN58@seekoff
$LN52@seekoff:

; 260  : 				_Mysb::pbump((int)(_Mysb::eback()
; 261  : 					- _Mysb::pptr() + _Off));	// change write position

  001c8	8b ce		 mov	 ecx, esi
  001ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  001d0	8b c8		 mov	 ecx, eax
  001d2	8b 45 14	 mov	 eax, DWORD PTR tv365[ebp]
  001d5	2b c1		 sub	 eax, ecx
  001d7	d1 f8		 sar	 eax, 1
  001d9	03 c7		 add	 eax, edi
  001db	50		 push	 eax
  001dc	8b ce		 mov	 ecx, esi
  001de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z

; 262  : 			else

  001e4	eb 16		 jmp	 SHORT $LN56@seekoff
$LN10@seekoff:

; 263  : 				_Off = _BADOFF;
; 264  : 			}
; 265  : 
; 266  :  #if _HAS_CPP0X
; 267  : 		else if (_Off != 0)

  001e6	8b 7d 0c	 mov	 edi, DWORD PTR __Off$[ebp]
  001e9	8b 5d 10	 mov	 ebx, DWORD PTR __Off$[ebp+4]
  001ec	8b c7		 mov	 eax, edi
  001ee	0b c3		 or	 eax, ebx
  001f0	74 0a		 je	 SHORT $LN56@seekoff
$LN58@seekoff:

; 268  : 
; 269  :  #else /* _HAS_CPP0X */
; 270  : 		else
; 271  :  #endif /* _HAS_CPP0X */
; 272  : 
; 273  : 			_Off = _BADOFF;	// neither read nor write buffer selected, fail

  001f2	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  001f7	8b 38		 mov	 edi, DWORD PTR [eax]
  001f9	8b 58 04	 mov	 ebx, DWORD PTR [eax+4]
$LN56@seekoff:

; 274  : 		return (pos_type(_Off));

  001fc	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  001ff	89 38		 mov	 DWORD PTR [eax], edi
  00201	5f		 pop	 edi
  00202	33 c9		 xor	 ecx, ecx
  00204	5e		 pop	 esi
  00205	89 58 04	 mov	 DWORD PTR [eax+4], ebx
  00208	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0020b	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  0020e	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00211	5b		 pop	 ebx

; 275  : 		}

  00212	5d		 pop	 ebp
  00213	c2 14 00	 ret	 20			; 00000014H
?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekoff
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
__Off$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Ptr$ = 12						; size = 24
$T532009 = 36						; size = 4
__Mode$ = 36						; size = 4
?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekpos, COMDAT
; _this$ = ecx

; 279  : 		{	// change position to _Pos, according to _Mode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx

; 280  : 		streamoff _Off = (streamoff)_Ptr;

  00005	8b 45 14	 mov	 eax, DWORD PTR __Ptr$[ebp+8]
  00008	53		 push	 ebx
  00009	56		 push	 esi
  0000a	99		 cdq
  0000b	57		 push	 edi
  0000c	8b f8		 mov	 edi, eax
  0000e	03 7d 0c	 add	 edi, DWORD PTR __Ptr$[ebp]
  00011	8b da		 mov	 ebx, edx
  00013	13 5d 10	 adc	 ebx, DWORD PTR __Ptr$[ebp+4]
  00016	8b f1		 mov	 esi, ecx
  00018	89 5d fc	 mov	 DWORD PTR __Off$[ebp+4], ebx

; 281  : 		if (_Mysb::pptr() != 0 && _Seekhigh < _Mysb::pptr())

  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00021	85 c0		 test	 eax, eax
  00023	74 18		 je	 SHORT $LN12@seekpos
  00025	8b ce		 mov	 ecx, esi
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0002d	39 46 3c	 cmp	 DWORD PTR [esi+60], eax
  00030	73 0b		 jae	 SHORT $LN12@seekpos

; 282  : 			_Seekhigh = _Mysb::pptr();	// update high-water pointer

  00032	8b ce		 mov	 ecx, esi
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0003a	89 46 3c	 mov	 DWORD PTR [esi+60], eax
$LN12@seekpos:

; 283  : 
; 284  : 		if (_Off == _BADOFF)

  0003d	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00042	3b 38		 cmp	 edi, DWORD PTR [eax]
  00044	75 09		 jne	 SHORT $LN33@seekpos
  00046	3b 58 04	 cmp	 ebx, DWORD PTR [eax+4]
  00049	0f 84 11 01 00
	00		 je	 $LN40@seekpos
$LN33@seekpos:

; 285  : 			;
; 286  : 		else if (_Mode & ios_base::in && _Mysb::gptr() != 0)

  0004f	f6 45 24 01	 test	 BYTE PTR __Mode$[ebp], 1
  00053	0f 84 ad 00 00
	00		 je	 $LN9@seekpos
  00059	8b ce		 mov	 ecx, esi
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00061	85 c0		 test	 eax, eax
  00063	0f 84 98 00 00
	00		 je	 $LN38@seekpos

; 287  : 			{	// position within read buffer
; 288  : 			if (0 <= _Off && _Off <= _Seekhigh - _Mysb::eback())

  00069	85 db		 test	 ebx, ebx
  0006b	0f 8c e2 00 00
	00		 jl	 $LN39@seekpos
  00071	7f 08		 jg	 SHORT $LN34@seekpos
  00073	85 ff		 test	 edi, edi
  00075	0f 82 d8 00 00
	00		 jb	 $LN39@seekpos
$LN34@seekpos:
  0007b	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0007e	8b 18		 mov	 ebx, DWORD PTR [eax]
  00080	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  00083	2b c3		 sub	 eax, ebx
  00085	d1 f8		 sar	 eax, 1
  00087	99		 cdq
  00088	39 55 fc	 cmp	 DWORD PTR __Off$[ebp+4], edx
  0008b	0f 8f c2 00 00
	00		 jg	 $LN39@seekpos
  00091	7c 08		 jl	 SHORT $LN35@seekpos
  00093	3b f8		 cmp	 edi, eax
  00095	0f 87 b8 00 00
	00		 ja	 $LN39@seekpos
$LN35@seekpos:

; 289  : 				{	// change read position
; 290  : 				_Mysb::gbump((int)(_Mysb::eback() - _Mysb::gptr() + _Off));

  0009b	8b ce		 mov	 ecx, esi
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  000a3	2b d8		 sub	 ebx, eax
  000a5	d1 fb		 sar	 ebx, 1
  000a7	03 df		 add	 ebx, edi
  000a9	53		 push	 ebx
  000aa	8b ce		 mov	 ecx, esi
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z

; 291  : 				if (_Mode & ios_base::out && _Mysb::pptr() != 0)

  000b2	f6 45 24 02	 test	 BYTE PTR __Mode$[ebp], 2
  000b6	0f 84 a4 00 00
	00		 je	 $LN40@seekpos
  000bc	8b ce		 mov	 ecx, esi
  000be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  000c4	85 c0		 test	 eax, eax
  000c6	0f 84 94 00 00
	00		 je	 $LN40@seekpos

; 292  : 					_Mysb::setp(_Mysb::pbase(), _Mysb::gptr(),
; 293  : 						_Mysb::epptr());	// change write position to match

  000cc	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  000cf	8b 00		 mov	 eax, DWORD PTR [eax]
  000d1	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  000d4	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000d6	8d 1c 41	 lea	 ebx, DWORD PTR [ecx+eax*2]
  000d9	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  000dc	8b 00		 mov	 eax, DWORD PTR [eax]
  000de	8b ce		 mov	 ecx, esi
  000e0	89 45 24	 mov	 DWORD PTR $T532009[ebp], eax
  000e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  000e9	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  000ec	8b 55 24	 mov	 edx, DWORD PTR $T532009[ebp]
  000ef	89 11		 mov	 DWORD PTR [ecx], edx
  000f1	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  000f4	2b d8		 sub	 ebx, eax
  000f6	89 01		 mov	 DWORD PTR [ecx], eax
  000f8	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  000fb	d1 fb		 sar	 ebx, 1
  000fd	89 18		 mov	 DWORD PTR [eax], ebx

; 294  : 				}
; 295  : 			else
; 296  : 				_Off = _BADOFF;

  000ff	eb 5f		 jmp	 SHORT $LN40@seekpos
$LN38@seekpos:
  00101	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
$LN9@seekpos:

; 297  : 			}
; 298  : 		else if (_Mode & ios_base::out && _Mysb::pptr() != 0)

  00106	f6 45 24 02	 test	 BYTE PTR __Mode$[ebp], 2
  0010a	74 4c		 je	 SHORT $LN4@seekpos
  0010c	8b ce		 mov	 ecx, esi
  0010e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00114	85 c0		 test	 eax, eax
  00116	74 3b		 je	 SHORT $LN39@seekpos

; 299  : 			{	// position within write buffer
; 300  : 			if (0 <= _Off && _Off <= _Seekhigh - _Mysb::eback())

  00118	85 db		 test	 ebx, ebx
  0011a	7c 37		 jl	 SHORT $LN39@seekpos
  0011c	7f 04		 jg	 SHORT $LN36@seekpos
  0011e	85 ff		 test	 edi, edi
  00120	72 31		 jb	 SHORT $LN39@seekpos
$LN36@seekpos:
  00122	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00125	8b 18		 mov	 ebx, DWORD PTR [eax]
  00127	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  0012a	2b c3		 sub	 eax, ebx
  0012c	d1 f8		 sar	 eax, 1
  0012e	99		 cdq
  0012f	39 55 fc	 cmp	 DWORD PTR __Off$[ebp+4], edx
  00132	7f 1f		 jg	 SHORT $LN39@seekpos
  00134	7c 04		 jl	 SHORT $LN37@seekpos
  00136	3b f8		 cmp	 edi, eax
  00138	77 19		 ja	 SHORT $LN39@seekpos
$LN37@seekpos:

; 301  : 				_Mysb::pbump((int)(_Mysb::eback()
; 302  : 					- _Mysb::pptr() + _Off));	// change write position

  0013a	8b ce		 mov	 ecx, esi
  0013c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00142	2b d8		 sub	 ebx, eax
  00144	d1 fb		 sar	 ebx, 1
  00146	03 df		 add	 ebx, edi
  00148	53		 push	 ebx
  00149	8b ce		 mov	 ecx, esi
  0014b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z

; 303  : 			else

  00151	eb 0d		 jmp	 SHORT $LN40@seekpos
$LN39@seekpos:

; 304  : 				_Off = _BADOFF;
; 305  : 			}
; 306  : 		else

  00153	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
$LN4@seekpos:

; 307  : 			_Off = _BADOFF;	// neither read nor write buffer selected, fail

  00158	8b 38		 mov	 edi, DWORD PTR [eax]
  0015a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0015d	89 45 fc	 mov	 DWORD PTR __Off$[ebp+4], eax
$LN40@seekpos:

; 308  : 		return (streampos(_Off));

  00160	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00163	8b 4d fc	 mov	 ecx, DWORD PTR __Off$[ebp+4]
  00166	89 38		 mov	 DWORD PTR [eax], edi
  00168	5f		 pop	 edi
  00169	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0016c	33 c9		 xor	 ecx, ecx
  0016e	5e		 pop	 esi
  0016f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00172	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  00175	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00178	5b		 pop	 ebx

; 309  : 		}

  00179	c9		 leave
  0017a	c2 20 00	 ret	 32			; 00000020H
?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekpos
_TEXT	ENDS
EXTRN	__imp_?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z
_TEXT	SEGMENT
__Newsize$521756 = -8					; size = 4
__Oldptr$521763 = -4					; size = 4
__Meta$ = 8						; size = 2
?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::overflow, COMDAT
; _this$ = ecx

; 120  : 		{	// put an element to stream

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	53		 push	 ebx
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 121  : 		if (_Mystate & _Append
; 122  : 			&& _Mysb::pptr() != 0 && _Mysb::pptr() < _Seekhigh)

  00009	f6 46 40 08	 test	 BYTE PTR [esi+64], 8
  0000d	57		 push	 edi
  0000e	74 31		 je	 SHORT $LN29@overflow
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00016	85 c0		 test	 eax, eax
  00018	74 27		 je	 SHORT $LN29@overflow
  0001a	8b 7e 3c	 mov	 edi, DWORD PTR [esi+60]
  0001d	8b ce		 mov	 ecx, esi
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00025	3b c7		 cmp	 eax, edi
  00027	73 18		 jae	 SHORT $LN29@overflow

; 123  : 			_Mysb::setp(_Mysb::pbase(), _Seekhigh, _Mysb::epptr());

  00029	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  0002c	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  0002f	8b 00		 mov	 eax, DWORD PTR [eax]
  00031	8b 11		 mov	 edx, DWORD PTR [ecx]
  00033	8d 04 42	 lea	 eax, DWORD PTR [edx+eax*2]
  00036	89 39		 mov	 DWORD PTR [ecx], edi
  00038	8b 4e 34	 mov	 ecx, DWORD PTR [esi+52]
  0003b	2b c7		 sub	 eax, edi
  0003d	d1 f8		 sar	 eax, 1
  0003f	89 01		 mov	 DWORD PTR [ecx], eax
$LN29@overflow:

; 124  : 
; 125  : 		if (_Traits::eq_int_type(_Traits::eof(), _Meta))

  00041	66 8b 5d 08	 mov	 bx, WORD PTR __Meta$[ebp]
  00045	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  0004a	66 3b c3	 cmp	 ax, bx
  0004d	75 07		 jne	 SHORT $LN17@overflow

; 126  : 			return (_Traits::not_eof(_Meta));	// EOF, return success code

  0004f	33 c0		 xor	 eax, eax
  00051	e9 a8 01 00 00	 jmp	 $LN12@overflow
$LN17@overflow:

; 127  : 		else if (_Mysb::pptr() != 0
; 128  : 			&& _Mysb::pptr() < _Mysb::epptr())

  00056	8b ce		 mov	 ecx, esi
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0005e	85 c0		 test	 eax, eax
  00060	74 2c		 je	 SHORT $LN86@overflow
  00062	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  00065	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00068	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	8d 3c 41	 lea	 edi, DWORD PTR [ecx+eax*2]
  0006f	8b ce		 mov	 ecx, esi
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00077	3b c7		 cmp	 eax, edi
  00079	73 13		 jae	 SHORT $LN86@overflow

; 129  : 			{	// room in buffer, store it
; 130  : 			*_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

  0007b	8b ce		 mov	 ecx, esi
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ
  00083	66 89 18	 mov	 WORD PTR [eax], bx

; 131  : 			return (_Meta);

  00086	66 8b c3	 mov	 ax, bx
  00089	e9 70 01 00 00	 jmp	 $LN12@overflow
$LN86@overflow:

; 132  : 			}
; 133  : 		else if (_Mystate & _Constant)

  0008e	f6 46 40 02	 test	 BYTE PTR [esi+64], 2
  00092	74 0a		 je	 SHORT $LN13@overflow
$LN90@overflow:

; 134  : 			return (_Traits::eof());	// array nonmutable, fail

  00094	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  00099	e9 60 01 00 00	 jmp	 $LN12@overflow
$LN13@overflow:

; 135  : 		else
; 136  : 			{	// grow buffer and store element
; 137  : 			size_t _Oldsize = _Mysb::pptr() == 0
; 138  : 				? 0 : _Mysb::epptr() - _Mysb::eback();

  0009e	8b ce		 mov	 ecx, esi
  000a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  000a6	85 c0		 test	 eax, eax
  000a8	75 04		 jne	 SHORT $LN21@overflow
  000aa	33 db		 xor	 ebx, ebx
  000ac	eb 13		 jmp	 SHORT $LN22@overflow
$LN21@overflow:
  000ae	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  000b1	8b 18		 mov	 ebx, DWORD PTR [eax]
  000b3	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000b6	03 db		 add	 ebx, ebx
  000b8	2b 18		 sub	 ebx, DWORD PTR [eax]
  000ba	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  000bd	03 18		 add	 ebx, DWORD PTR [eax]
  000bf	d1 fb		 sar	 ebx, 1
$LN22@overflow:

; 139  : 			size_t _Newsize = _Oldsize;
; 140  : 			size_t _Inc = _Newsize / 2 < _MINSIZE
; 141  : 				? _MINSIZE : _Newsize / 2;	// grow by 50 per cent

  000c1	8b c3		 mov	 eax, ebx
  000c3	d1 e8		 shr	 eax, 1
  000c5	83 f8 20	 cmp	 eax, 32			; 00000020H
  000c8	73 05		 jae	 SHORT $LN23@overflow
  000ca	6a 20		 push	 32			; 00000020H
  000cc	58		 pop	 eax
  000cd	eb 04		 jmp	 SHORT $LL11@overflow
$LN23@overflow:

; 142  : 
; 143  : 			while (0 < _Inc && INT_MAX - _Inc < _Newsize)

  000cf	85 c0		 test	 eax, eax
  000d1	74 c1		 je	 SHORT $LN90@overflow
$LL11@overflow:
  000d3	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  000d8	2b c8		 sub	 ecx, eax
  000da	3b cb		 cmp	 ecx, ebx
  000dc	73 04		 jae	 SHORT $LN87@overflow

; 144  : 				_Inc /= 2;	// increment causes overflow, halve it

  000de	d1 e8		 shr	 eax, 1

; 142  : 
; 143  : 			while (0 < _Inc && INT_MAX - _Inc < _Newsize)

  000e0	75 f1		 jne	 SHORT $LL11@overflow
$LN87@overflow:

; 145  : 			if (_Inc == 0)

  000e2	85 c0		 test	 eax, eax

; 146  : 				return (_Traits::eof());	// buffer can't grow, fail

  000e4	74 ae		 je	 SHORT $LN90@overflow

; 147  : 
; 148  : 			_Newsize += _Inc;

  000e6	03 c3		 add	 eax, ebx

; 149  : 
; 150  : 			_Elem *_Newptr = _Al.allocate(_Newsize);

  000e8	6a 00		 push	 0
  000ea	50		 push	 eax
  000eb	89 45 f8	 mov	 DWORD PTR __Newsize$521756[ebp], eax
  000ee	e8 00 00 00 00	 call	 ??$_Allocate@_W@std@@YAPA_WIPA_W@Z ; std::_Allocate<wchar_t>
  000f3	8b f8		 mov	 edi, eax

; 151  : 			_Elem *_Oldptr = _Mysb::eback();

  000f5	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000f8	8b 00		 mov	 eax, DWORD PTR [eax]
  000fa	59		 pop	 ecx
  000fb	59		 pop	 ecx
  000fc	89 45 fc	 mov	 DWORD PTR __Oldptr$521763[ebp], eax

; 152  : 
; 153  : 			if (0 < _Oldsize)

  000ff	85 db		 test	 ebx, ebx
  00101	74 12		 je	 SHORT $LN92@overflow

; 154  : 				_Traits::copy(_Newptr, _Oldptr, _Oldsize);

  00103	8d 0c 1b	 lea	 ecx, DWORD PTR [ebx+ebx]
  00106	51		 push	 ecx
  00107	50		 push	 eax
  00108	57		 push	 edi
  00109	e8 00 00 00 00	 call	 _memcpy
  0010e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 155  : 
; 156  : 			if (_Oldsize == 0)

  00111	85 db		 test	 ebx, ebx
  00113	75 37		 jne	 SHORT $LN7@overflow
$LN92@overflow:

; 157  : 				{	// first growth, set up pointers
; 158  : 				_Seekhigh = _Newptr;
; 159  : 				_Mysb::setp(_Newptr, _Newptr + _Newsize);

  00115	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00118	89 7e 3c	 mov	 DWORD PTR [esi+60], edi
  0011b	89 38		 mov	 DWORD PTR [eax], edi
  0011d	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  00120	89 38		 mov	 DWORD PTR [eax], edi
  00122	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$521756[ebp]
  00125	8b 4e 34	 mov	 ecx, DWORD PTR [esi+52]
  00128	03 c0		 add	 eax, eax
  0012a	d1 f8		 sar	 eax, 1
  0012c	89 01		 mov	 DWORD PTR [ecx], eax

; 160  : 				if (_Mystate & _Noread)
; 161  : 					_Mysb::setg(_Newptr, 0, _Newptr);

  0012e	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00131	f6 46 40 04	 test	 BYTE PTR [esi+64], 4
  00135	89 38		 mov	 DWORD PTR [eax], edi
  00137	8b 46 20	 mov	 eax, DWORD PTR [esi+32]

; 162  : 				else

  0013a	75 63		 jne	 SHORT $LN93@overflow

; 163  : 					_Mysb::setg(_Newptr, _Newptr, _Newptr + 1);

  0013c	89 38		 mov	 DWORD PTR [eax], edi
  0013e	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  00141	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 164  : 				}
; 165  : 			else

  00147	e9 8d 00 00 00	 jmp	 $LN75@overflow
$LN7@overflow:

; 166  : 				{	// not first growth, adjust pointers
; 167  : 				_Seekhigh = _Newptr + (_Seekhigh - _Oldptr);

  0014c	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  0014f	2b 45 fc	 sub	 eax, DWORD PTR __Oldptr$521763[ebp]

; 168  : 				_Mysb::setp(_Newptr + (_Mysb::pbase() - _Oldptr),
; 169  : 					_Newptr + (_Mysb::pptr() - _Oldptr),
; 170  : 					_Newptr + _Newsize);

  00152	8b ce		 mov	 ecx, esi
  00154	d1 f8		 sar	 eax, 1
  00156	8d 04 47	 lea	 eax, DWORD PTR [edi+eax*2]
  00159	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  0015c	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0015f	8b 18		 mov	 ebx, DWORD PTR [eax]
  00161	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00167	2b 5d fc	 sub	 ebx, DWORD PTR __Oldptr$521763[ebp]
  0016a	2b 45 fc	 sub	 eax, DWORD PTR __Oldptr$521763[ebp]
  0016d	8b 56 14	 mov	 edx, DWORD PTR [esi+20]
  00170	d1 fb		 sar	 ebx, 1
  00172	d1 f8		 sar	 eax, 1
  00174	8d 0c 5f	 lea	 ecx, DWORD PTR [edi+ebx*2]
  00177	89 0a		 mov	 DWORD PTR [edx], ecx
  00179	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  0017c	8d 04 47	 lea	 eax, DWORD PTR [edi+eax*2]
  0017f	89 01		 mov	 DWORD PTR [ecx], eax
  00181	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$521756[ebp]
  00184	03 c9		 add	 ecx, ecx
  00186	2b c8		 sub	 ecx, eax
  00188	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  0018b	03 cf		 add	 ecx, edi
  0018d	d1 f9		 sar	 ecx, 1
  0018f	89 08		 mov	 DWORD PTR [eax], ecx

; 171  : 				if (_Mystate & _Noread)

  00191	f6 46 40 04	 test	 BYTE PTR [esi+64], 4
  00195	74 14		 je	 SHORT $LN3@overflow

; 172  : 					_Mysb::setg(_Newptr, 0, _Newptr);

  00197	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0019a	89 38		 mov	 DWORD PTR [eax], edi
  0019c	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
$LN93@overflow:
  0019f	83 20 00	 and	 DWORD PTR [eax], 0
  001a2	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  001a5	d1 ff		 sar	 edi, 1
  001a7	89 38		 mov	 DWORD PTR [eax], edi

; 173  : 				else

  001a9	eb 2e		 jmp	 SHORT $LN75@overflow
$LN3@overflow:

; 174  : 					_Mysb::setg(_Newptr,
; 175  : 						_Newptr + (_Mysb::gptr() - _Oldptr),
; 176  : 						_Mysb::pptr() + 1);

  001ab	8b ce		 mov	 ecx, esi
  001ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  001b3	8b ce		 mov	 ecx, esi
  001b5	8d 58 02	 lea	 ebx, DWORD PTR [eax+2]
  001b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  001be	2b 45 fc	 sub	 eax, DWORD PTR __Oldptr$521763[ebp]
  001c1	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  001c4	d1 f8		 sar	 eax, 1
  001c6	89 39		 mov	 DWORD PTR [ecx], edi
  001c8	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  001cb	8d 04 47	 lea	 eax, DWORD PTR [edi+eax*2]
  001ce	2b d8		 sub	 ebx, eax
  001d0	89 01		 mov	 DWORD PTR [ecx], eax
  001d2	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  001d5	d1 fb		 sar	 ebx, 1
  001d7	89 18		 mov	 DWORD PTR [eax], ebx
$LN75@overflow:

; 177  : 				}
; 178  : 
; 179  : 			if (_Mystate & _Allocated)

  001d9	f6 46 40 01	 test	 BYTE PTR [esi+64], 1
  001dd	74 09		 je	 SHORT $LN77@overflow

; 180  : 				_Al.deallocate(_Oldptr, _Oldsize);

  001df	ff 75 fc	 push	 DWORD PTR __Oldptr$521763[ebp]
  001e2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001e7	59		 pop	 ecx
$LN77@overflow:

; 181  : 			_Mystate |= _Allocated;

  001e8	83 4e 40 01	 or	 DWORD PTR [esi+64], 1

; 182  : 
; 183  : 			*_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

  001ec	8b ce		 mov	 ecx, esi
  001ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ
  001f4	66 8b 4d 08	 mov	 cx, WORD PTR __Meta$[ebp]
  001f8	66 89 08	 mov	 WORD PTR [eax], cx

; 184  : 			return (_Meta);

  001fb	66 8b c1	 mov	 ax, cx
$LN12@overflow:
  001fe	5f		 pop	 edi
  001ff	5e		 pop	 esi
  00200	5b		 pop	 ebx

; 185  : 			}
; 186  : 		}

  00201	c9		 leave
  00202	c2 04 00	 ret	 4
?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::overflow
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >::operator++
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))
; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 257  : 			_SCL_SECURE_OUT_OF_RANGE;
; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::operator++

; 266  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 267  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::operator->
; Function compile flags: /Ogsp
;	COMDAT ??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@1@XZ
_TEXT	SEGMENT
??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@1@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::operator->, COMDAT
; _this$ = ecx

; 54   : 		return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 55   : 		}

  00005	c3		 ret	 0
??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@1@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::operator->
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@5
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@5:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 817  : 		return (iterator(this->_Myhead, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 818  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 807  : 		return (iterator(_Lmost(), this));

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 808  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::begin
_TEXT	ENDS
PUBLIC	?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXPB_WIH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Init
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
;	COMDAT ?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXPB_WIH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__State$ = 16						; size = 4
?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXPB_WIH@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Init, COMDAT
; _this$ = ecx

; 313  : 		{	// initialize buffer to [_Ptr, _Ptr + _Count), set state

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 314  : 		_Seekhigh = 0;
; 315  : 		_Mystate = _State;

  00003	8b 45 10	 mov	 eax, DWORD PTR __State$[ebp]
  00006	53		 push	 ebx

; 316  : 
; 317  : 		if (_Count != 0
; 318  : 			&& (_Mystate & (_Noread | _Constant)) != (_Noread | _Constant))

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Count$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	83 66 3c 00	 and	 DWORD PTR [esi+60], 0
  00011	89 46 40	 mov	 DWORD PTR [esi+64], eax
  00014	85 db		 test	 ebx, ebx
  00016	0f 84 86 00 00
	00		 je	 $LN4@Init
  0001c	83 e0 06	 and	 eax, 6
  0001f	3c 06		 cmp	 al, 6
  00021	74 7f		 je	 SHORT $LN4@Init

; 319  : 			{	// finite buffer that can be read or written, set it up
; 320  : 			_Elem *_Pnew = _Al.allocate(_Count);

  00023	57		 push	 edi
  00024	6a 00		 push	 0
  00026	53		 push	 ebx
  00027	e8 00 00 00 00	 call	 ??$_Allocate@_W@std@@YAPA_WIPA_W@Z ; std::_Allocate<wchar_t>

; 321  : 			_Traits::copy(_Pnew, _Ptr, _Count);

  0002c	03 db		 add	 ebx, ebx
  0002e	53		 push	 ebx
  0002f	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00032	8b f8		 mov	 edi, eax
  00034	57		 push	 edi
  00035	e8 00 00 00 00	 call	 _memcpy
  0003a	83 c4 14	 add	 esp, 20			; 00000014H

; 322  : 			_Seekhigh = _Pnew + _Count;
; 323  : 
; 324  : 			if (!(_Mystate & _Noread))

  0003d	f6 46 40 04	 test	 BYTE PTR [esi+64], 4
  00041	8d 04 3b	 lea	 eax, DWORD PTR [ebx+edi]
  00044	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  00047	75 13		 jne	 SHORT $LN15@Init

; 325  : 				_Mysb::setg(_Pnew, _Pnew,
; 326  : 					_Pnew + _Count);	// setup read buffer

  00049	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0004c	89 39		 mov	 DWORD PTR [ecx], edi
  0004e	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00051	89 39		 mov	 DWORD PTR [ecx], edi
  00053	8b 56 30	 mov	 edx, DWORD PTR [esi+48]
  00056	8b cb		 mov	 ecx, ebx
  00058	d1 f9		 sar	 ecx, 1
  0005a	89 0a		 mov	 DWORD PTR [edx], ecx
$LN15@Init:

; 327  : 			if (!(_Mystate & _Constant))

  0005c	8b 4e 40	 mov	 ecx, DWORD PTR [esi+64]
  0005f	f6 c1 02	 test	 cl, 2
  00062	75 39		 jne	 SHORT $LN19@Init

; 328  : 				{	// setup write buffer, and maybe read buffer
; 329  : 				_Mysb::setp(_Pnew,
; 330  : 					(_Mystate & _Atend) ? _Pnew + _Count : _Pnew,
; 331  : 					_Pnew + _Count);

  00064	f6 c1 10	 test	 cl, 16			; 00000010H
  00067	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0006a	0f 44 c7	 cmove	 eax, edi
  0006d	89 39		 mov	 DWORD PTR [ecx], edi
  0006f	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00072	2b d8		 sub	 ebx, eax
  00074	89 01		 mov	 DWORD PTR [ecx], eax
  00076	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  00079	03 df		 add	 ebx, edi
  0007b	d1 fb		 sar	 ebx, 1

; 332  : 				if (_Mysb::gptr() == 0)

  0007d	8b ce		 mov	 ecx, esi
  0007f	89 18		 mov	 DWORD PTR [eax], ebx
  00081	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00087	85 c0		 test	 eax, eax
  00089	75 12		 jne	 SHORT $LN19@Init

; 333  : 					_Mysb::setg(_Pnew, 0, _Pnew);

  0008b	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0008e	89 38		 mov	 DWORD PTR [eax], edi
  00090	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  00093	83 20 00	 and	 DWORD PTR [eax], 0
  00096	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  00099	d1 ff		 sar	 edi, 1
  0009b	89 38		 mov	 DWORD PTR [eax], edi
$LN19@Init:

; 334  : 				}
; 335  : 			_Mystate |= _Allocated;

  0009d	83 4e 40 01	 or	 DWORD PTR [esi+64], 1
  000a1	5f		 pop	 edi
$LN4@Init:
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx

; 336  : 			}
; 337  : 		}

  000a4	5d		 pop	 ebp
  000a5	c2 0c 00	 ret	 12			; 0000000cH
?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXPB_WIH@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Init
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >::operator++
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 270  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 271  : 		_Myiter _Tmp = *this;

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 06		 mov	 DWORD PTR [esi], eax

; 272  : 		++*this;

  0000b	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::operator++

; 273  : 		return (_Tmp);

  00010	8b c6		 mov	 eax, esi
  00012	5e		 pop	 esi

; 274  : 		}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
EXTRN	__imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?width@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_?widen@?$ctype@_W@std@@QBE_WD@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z:PROC
EXTRN	__imp_?flags@ios_base@std@@QBEHXZ:PROC
EXTRN	__imp_?getloc@ios_base@std@@QBE?AVlocale@2@XZ:PROC
EXTRN	__imp_?width@ios_base@std@@QBE_JXZ:PROC
EXTRN	__EH_prolog3_catch:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__catchsym$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$0
__tryblocktable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z DD 01H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$4
__unwindtable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$2
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$3
	DD	00H
	DD	00H
__ehfuncinfo$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\ostream
xdata$x	ENDS
;	COMDAT ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
__Ok$ = -52						; size = 8
__Pad$ = -44						; size = 8
__Count$ = -36						; size = 8
tv265 = -28						; size = 4
$T532271 = -24						; size = 4
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<wchar_t,std::char_traits<wchar_t> >, COMDAT

; 681  : 	{	// insert NTBS

  00000	6a 28		 push	 40			; 00000028H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch

; 682  : 	ios_base::iostate _State = ios_base::goodbit;
; 683  : 	streamsize _Count = (streamsize)_CSTD strlen(_Val);	// may overflow

  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  0000f	33 ff		 xor	 edi, edi
  00011	89 7d ec	 mov	 DWORD PTR __State$[ebp], edi
  00014	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
$LL55@operator@4:
  00017	8a 10		 mov	 dl, BYTE PTR [eax]
  00019	40		 inc	 eax
  0001a	84 d2		 test	 dl, dl
  0001c	75 f9		 jne	 SHORT $LL55@operator@4

; 684  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count
; 685  : 		? 0 : _Ostr.width() - _Count;

  0001e	8b 75 08	 mov	 esi, DWORD PTR __Ostr$[ebp]
  00021	2b c1		 sub	 eax, ecx
  00023	89 45 dc	 mov	 DWORD PTR __Count$[ebp], eax
  00026	8b 06		 mov	 eax, DWORD PTR [esi]
  00028	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002b	03 ce		 add	 ecx, esi
  0002d	89 7d e0	 mov	 DWORD PTR __Count$[ebp+4], edi
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  00036	3b d7		 cmp	 edx, edi
  00038	7c 39		 jl	 SHORT $LN20@operator@4
  0003a	7f 04		 jg	 SHORT $LN56@operator@4
  0003c	3b c7		 cmp	 eax, edi
  0003e	76 33		 jbe	 SHORT $LN20@operator@4
$LN56@operator@4:
  00040	8b 06		 mov	 eax, DWORD PTR [esi]
  00042	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00045	03 ce		 add	 ecx, esi
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  0004d	3b 55 e0	 cmp	 edx, DWORD PTR __Count$[ebp+4]
  00050	7c 21		 jl	 SHORT $LN20@operator@4
  00052	7f 05		 jg	 SHORT $LN57@operator@4
  00054	3b 45 dc	 cmp	 eax, DWORD PTR __Count$[ebp]
  00057	76 1a		 jbe	 SHORT $LN20@operator@4
$LN57@operator@4:
  00059	8b 06		 mov	 eax, DWORD PTR [esi]
  0005b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0005e	03 ce		 add	 ecx, esi
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  00066	8b d8		 mov	 ebx, eax
  00068	2b 5d dc	 sub	 ebx, DWORD PTR __Count$[ebp]
  0006b	1b 55 e0	 sbb	 edx, DWORD PTR __Count$[ebp+4]
  0006e	89 55 d8	 mov	 DWORD PTR __Pad$[ebp+4], edx
  00071	eb 0c		 jmp	 SHORT $LN21@operator@4
$LN20@operator@4:
  00073	66 0f 57 c0	 xorpd	 xmm0, xmm0
  00077	66 0f 13 45 d4	 movlpd	 QWORD PTR __Pad$[ebp], xmm0
  0007c	8b 5d d4	 mov	 ebx, DWORD PTR __Pad$[ebp]
$LN21@operator@4:

; 686  : 	const typename basic_ostream<_Elem, _Traits>::sentry _Ok(_Ostr);

  0007f	56		 push	 esi
  00080	8d 4d cc	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00083	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry

; 687  : 
; 688  : 	if (!_Ok)

  00088	80 7d d0 00	 cmp	 BYTE PTR __Ok$[ebp+4], 0
  0008c	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+12], edi
  0008f	75 0c		 jne	 SHORT $LN17@operator@4

; 689  : 		_State |= ios_base::badbit;

  00091	c7 45 ec 04 00
	00 00		 mov	 DWORD PTR __State$[ebp], 4

; 690  : 	else

  00098	e9 61 01 00 00	 jmp	 $LN27@operator@4
$LN17@operator@4:

; 691  : 		{	// state okay, insert characters
; 692  : 		_TRY_IO_BEGIN
; 693  : 		const ctype<_Elem>& _Ctype_fac = _USE(_Ostr.getloc(), ctype<_Elem>);

  0009d	8d 45 e8	 lea	 eax, DWORD PTR $T532271[ebp]
  000a0	50		 push	 eax
  000a1	8b 06		 mov	 eax, DWORD PTR [esi]
  000a3	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a6	03 ce		 add	 ecx, esi
  000a8	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?getloc@ios_base@std@@QBE?AVlocale@2@XZ
  000b2	50		 push	 eax
  000b3	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  000b7	e8 00 00 00 00	 call	 ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<wchar_t> >
  000bc	59		 pop	 ecx
  000bd	8d 4d e8	 lea	 ecx, DWORD PTR $T532271[ebp]
  000c0	89 45 e4	 mov	 DWORD PTR tv265[ebp], eax
  000c3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  000c7	e8 00 00 00 00	 call	 ??1locale@std@@QAE@XZ	; std::locale::~locale

; 694  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

  000cc	8b 06		 mov	 eax, DWORD PTR [esi]
  000ce	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d1	03 ce		 add	 ecx, esi
  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
  000d9	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  000de	83 f8 40	 cmp	 eax, 64			; 00000040H
  000e1	74 37		 je	 SHORT $LL53@operator@4
$LL13@operator@4:

; 695  : 			for (; 0 < _Pad; --_Pad)	// pad on left

  000e3	83 7d d8 00	 cmp	 DWORD PTR __Pad$[ebp+4], 0
  000e7	7c 31		 jl	 SHORT $LL53@operator@4
  000e9	7f 04		 jg	 SHORT $LN58@operator@4
  000eb	85 db		 test	 ebx, ebx
  000ed	74 2b		 je	 SHORT $LL53@operator@4
$LN58@operator@4:

; 696  : 				if (_Traits::eq_int_type(_Traits::eof(),
; 697  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))

  000ef	8b 06		 mov	 eax, DWORD PTR [esi]
  000f1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f4	03 ce		 add	 ecx, esi
  000f6	0f b7 79 40	 movzx	 edi, WORD PTR [ecx+64]
  000fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  00100	57		 push	 edi
  00101	8b c8		 mov	 ecx, eax
  00103	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
  00109	0f b7 c0	 movzx	 eax, ax
  0010c	b9 ff ff 00 00	 mov	 ecx, 65535		; 0000ffffH
  00111	66 3b c8	 cmp	 cx, ax
  00114	75 65		 jne	 SHORT $LN12@operator@4

; 698  : 					{	// insertion failed, quit
; 699  : 					_State |= ios_base::badbit;

  00116	83 4d ec 04	 or	 DWORD PTR __State$[ebp], 4
$LL53@operator@4:

; 700  : 					break;
; 701  : 					}
; 702  : 
; 703  : 		for (; _State == ios_base::goodbit && 0 < _Count; --_Count, ++_Val)

  0011a	33 c0		 xor	 eax, eax
  0011c	39 45 ec	 cmp	 DWORD PTR __State$[ebp], eax
  0011f	0f 85 99 00 00
	00		 jne	 $LN2@operator@4
  00125	39 45 e0	 cmp	 DWORD PTR __Count$[ebp+4], eax
  00128	7c 5d		 jl	 SHORT $LL54@operator@4
  0012a	7f 05		 jg	 SHORT $LN59@operator@4
  0012c	39 45 dc	 cmp	 DWORD PTR __Count$[ebp], eax
  0012f	76 56		 jbe	 SHORT $LL54@operator@4
$LN59@operator@4:

; 704  : 			if (_Traits::eq_int_type(_Traits::eof(),
; 705  : 				_Ostr.rdbuf()->sputc(_Ctype_fac.widen(*_Val))))

  00131	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  00134	0f b6 00	 movzx	 eax, BYTE PTR [eax]
  00137	8b 4d e4	 mov	 ecx, DWORD PTR tv265[ebp]
  0013a	50		 push	 eax
  0013b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?widen@?$ctype@_W@std@@QBE_WD@Z
  00141	0f b7 f8	 movzx	 edi, ax
  00144	8b 06		 mov	 eax, DWORD PTR [esi]
  00146	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00149	03 ce		 add	 ecx, esi
  0014b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  00151	57		 push	 edi
  00152	8b c8		 mov	 ecx, eax
  00154	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
  0015a	0f b7 c0	 movzx	 eax, ax
  0015d	b9 ff ff 00 00	 mov	 ecx, 65535		; 0000ffffH
  00162	66 3b c8	 cmp	 cx, ax
  00165	75 07		 jne	 SHORT $LN8@operator@4

; 706  : 					_State |= ios_base::badbit;

  00167	c7 45 ec 04 00
	00 00		 mov	 DWORD PTR __State$[ebp], 4
$LN8@operator@4:

; 700  : 					break;
; 701  : 					}
; 702  : 
; 703  : 		for (; _State == ios_base::goodbit && 0 < _Count; --_Count, ++_Val)

  0016e	83 45 dc ff	 add	 DWORD PTR __Count$[ebp], -1
  00172	83 55 e0 ff	 adc	 DWORD PTR __Count$[ebp+4], -1
  00176	ff 45 0c	 inc	 DWORD PTR __Val$[ebp]
  00179	eb 9f		 jmp	 SHORT $LL53@operator@4
$LN12@operator@4:

; 695  : 			for (; 0 < _Pad; --_Pad)	// pad on left

  0017b	83 c3 ff	 add	 ebx, -1
  0017e	83 55 d8 ff	 adc	 DWORD PTR __Pad$[ebp+4], -1
  00182	e9 5c ff ff ff	 jmp	 $LL13@operator@4
$LL54@operator@4:

; 707  : 
; 708  : 		if (_State == ios_base::goodbit)
; 709  : 			for (; 0 < _Pad; --_Pad)	// pad on right

  00187	83 7d d8 00	 cmp	 DWORD PTR __Pad$[ebp+4], 0
  0018b	7c 31		 jl	 SHORT $LN2@operator@4
  0018d	7f 04		 jg	 SHORT $LN60@operator@4
  0018f	85 db		 test	 ebx, ebx
  00191	74 2b		 je	 SHORT $LN2@operator@4
$LN60@operator@4:

; 710  : 				if (_Traits::eq_int_type(_Traits::eof(),
; 711  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))

  00193	8b 06		 mov	 eax, DWORD PTR [esi]
  00195	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00198	03 ce		 add	 ecx, esi
  0019a	0f b7 79 40	 movzx	 edi, WORD PTR [ecx+64]
  0019e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  001a4	57		 push	 edi
  001a5	8b c8		 mov	 ecx, eax
  001a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
  001ad	0f b7 c0	 movzx	 eax, ax
  001b0	b9 ff ff 00 00	 mov	 ecx, 65535		; 0000ffffH
  001b5	66 3b c8	 cmp	 cx, ax
  001b8	75 1a		 jne	 SHORT $LN3@operator@4

; 712  : 					{	// insertion failed, quit
; 713  : 					_State |= ios_base::badbit;

  001ba	83 4d ec 04	 or	 DWORD PTR __State$[ebp], 4
$LN2@operator@4:

; 714  : 					break;
; 715  : 					}
; 716  : 		_Ostr.width(0);

  001be	8b 06		 mov	 eax, DWORD PTR [esi]
  001c0	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001c3	33 ff		 xor	 edi, edi
  001c5	57		 push	 edi
  001c6	57		 push	 edi
  001c7	03 ce		 add	 ecx, esi
  001c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
  001cf	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+12], edi
  001d2	eb 2a		 jmp	 SHORT $LN27@operator@4
$LN3@operator@4:

; 707  : 
; 708  : 		if (_State == ios_base::goodbit)
; 709  : 			for (; 0 < _Pad; --_Pad)	// pad on right

  001d4	83 c3 ff	 add	 ebx, -1
  001d7	83 55 d8 ff	 adc	 DWORD PTR __Pad$[ebp+4], -1
  001db	eb aa		 jmp	 SHORT $LL54@operator@4
__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$0:

; 717  : 		_CATCH_IO_(_Ostr)

  001dd	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  001e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e2	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  001e5	6a 01		 push	 1
  001e7	6a 04		 push	 4
  001e9	03 c8		 add	 ecx, eax
  001eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
  001f1	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  001f5	b8 00 00 00 00	 mov	 eax, $LN66@operator@4
  001fa	c3		 ret	 0
$LN66@operator@4:
  001fb	8b 75 08	 mov	 esi, DWORD PTR __Ostr$[ebp]
$LN27@operator@4:

; 718  : 		}
; 719  : 
; 720  : 	_Ostr.setstate(_State);

  001fe	8b 06		 mov	 eax, DWORD PTR [esi]
  00200	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00203	6a 00		 push	 0
  00205	ff 75 ec	 push	 DWORD PTR __State$[ebp]
  00208	03 ce		 add	 ecx, esi
  0020a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z

; 721  : 	return (_Ostr);

  00210	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  00214	8d 4d cc	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00217	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
  0021c	8b c6		 mov	 eax, esi

; 722  : 	}

  0021e	e8 00 00 00 00	 call	 __EH_epilog3
  00223	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$2:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$3:
  00008	8d 4d e8	 lea	 ecx, DWORD PTR $T532271[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1locale@std@@QAE@XZ	; std::locale::~locale
__ehhandler$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
EXTRN	__imp_?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAE_JPB_W_J@Z:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__catchsym$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$0
__tryblocktable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$3
__unwindtable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\ostream
xdata$x	ENDS
;	COMDAT ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
_TEXT	SEGMENT
__Ok$ = -40						; size = 8
__Pad$ = -32						; size = 8
tv284 = -24						; size = 4
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z PROC ; std::operator<<<wchar_t,std::char_traits<wchar_t> >, COMDAT

; 853  : 	{	// insert NTCS

  00000	6a 1c		 push	 28			; 0000001cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch

; 854  : 	typedef basic_ostream<_Elem, _Traits> _Myos;
; 855  : 
; 856  : 	ios_base::iostate _State = ios_base::goodbit;
; 857  : 	streamsize _Count = (streamsize)_Traits::length(_Val);	// may overflow

  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  0000f	33 ff		 xor	 edi, edi
  00011	89 7d ec	 mov	 DWORD PTR __State$[ebp], edi
  00014	8d 48 02	 lea	 ecx, DWORD PTR [eax+2]
$LL45@operator@5:
  00017	66 8b 10	 mov	 dx, WORD PTR [eax]
  0001a	83 c0 02	 add	 eax, 2
  0001d	66 3b d7	 cmp	 dx, di
  00020	75 f5		 jne	 SHORT $LL45@operator@5

; 858  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count
; 859  : 		? 0 : _Ostr.width() - _Count;

  00022	8b 75 08	 mov	 esi, DWORD PTR __Ostr$[ebp]
  00025	2b c1		 sub	 eax, ecx
  00027	d1 f8		 sar	 eax, 1
  00029	89 45 e8	 mov	 DWORD PTR tv284[ebp], eax
  0002c	8b 06		 mov	 eax, DWORD PTR [esi]
  0002e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00031	03 ce		 add	 ecx, esi
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  00039	3b d7		 cmp	 edx, edi
  0003b	7c 37		 jl	 SHORT $LN17@operator@5
  0003d	7f 04		 jg	 SHORT $LN46@operator@5
  0003f	3b c7		 cmp	 eax, edi
  00041	76 31		 jbe	 SHORT $LN17@operator@5
$LN46@operator@5:
  00043	8b 06		 mov	 eax, DWORD PTR [esi]
  00045	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00048	03 ce		 add	 ecx, esi
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  00050	3b d7		 cmp	 edx, edi
  00052	7c 20		 jl	 SHORT $LN17@operator@5
  00054	7f 05		 jg	 SHORT $LN47@operator@5
  00056	3b 45 e8	 cmp	 eax, DWORD PTR tv284[ebp]
  00059	76 19		 jbe	 SHORT $LN17@operator@5
$LN47@operator@5:
  0005b	8b 06		 mov	 eax, DWORD PTR [esi]
  0005d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00060	03 ce		 add	 ecx, esi
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  00068	8b d8		 mov	 ebx, eax
  0006a	2b 5d e8	 sub	 ebx, DWORD PTR tv284[ebp]
  0006d	1b d7		 sbb	 edx, edi
  0006f	89 55 e4	 mov	 DWORD PTR __Pad$[ebp+4], edx
  00072	eb 0c		 jmp	 SHORT $LN18@operator@5
$LN17@operator@5:
  00074	66 0f 57 c0	 xorpd	 xmm0, xmm0
  00078	66 0f 13 45 e0	 movlpd	 QWORD PTR __Pad$[ebp], xmm0
  0007d	8b 5d e0	 mov	 ebx, DWORD PTR __Pad$[ebp]
$LN18@operator@5:

; 860  : 	const typename _Myos::sentry _Ok(_Ostr);

  00080	56		 push	 esi
  00081	8d 4d d8	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00084	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
  00089	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0

; 861  : 
; 862  : 	if (!_Ok)

  0008d	80 7d dc 00	 cmp	 BYTE PTR __Ok$[ebp+4], 0
  00091	75 0c		 jne	 SHORT $LN14@operator@5

; 863  : 		_State |= ios_base::badbit;

  00093	c7 45 ec 04 00
	00 00		 mov	 DWORD PTR __State$[ebp], 4

; 864  : 	else

  0009a	e9 0b 01 00 00	 jmp	 $LN23@operator@5
$LN14@operator@5:

; 865  : 		{	// state okay, insert
; 866  : 		_TRY_IO_BEGIN
; 867  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

  0009f	8b 06		 mov	 eax, DWORD PTR [esi]
  000a1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a4	03 ce		 add	 ecx, esi
  000a6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  000aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
  000b0	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  000b5	83 f8 40	 cmp	 eax, 64			; 00000040H
  000b8	74 3d		 je	 SHORT $LN43@operator@5
$LL10@operator@5:

; 868  : 			for (; 0 < _Pad; --_Pad)	// pad on left

  000ba	83 7d e4 00	 cmp	 DWORD PTR __Pad$[ebp+4], 0
  000be	7c 31		 jl	 SHORT $LN8@operator@5
  000c0	7f 04		 jg	 SHORT $LN48@operator@5
  000c2	85 db		 test	 ebx, ebx
  000c4	74 2b		 je	 SHORT $LN8@operator@5
$LN48@operator@5:

; 869  : 				if (_Traits::eq_int_type(_Traits::eof(),
; 870  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))

  000c6	8b 06		 mov	 eax, DWORD PTR [esi]
  000c8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000cb	03 ce		 add	 ecx, esi
  000cd	0f b7 79 40	 movzx	 edi, WORD PTR [ecx+64]
  000d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  000d7	57		 push	 edi
  000d8	8b c8		 mov	 ecx, eax
  000da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
  000e0	0f b7 c0	 movzx	 eax, ax
  000e3	b9 ff ff 00 00	 mov	 ecx, 65535		; 0000ffffH
  000e8	66 3b c8	 cmp	 cx, ax
  000eb	75 4e		 jne	 SHORT $LN9@operator@5

; 871  : 					{	// insertion failed, quit
; 872  : 					_State |= ios_base::badbit;

  000ed	83 4d ec 04	 or	 DWORD PTR __State$[ebp], 4
$LN8@operator@5:

; 873  : 					break;
; 874  : 					}
; 875  : 
; 876  : 		if (_State == ios_base::goodbit
; 877  : 			&& _Ostr.rdbuf()->sputn(_Val, _Count) != _Count)

  000f1	83 7d ec 00	 cmp	 DWORD PTR __State$[ebp], 0
  000f5	75 2e		 jne	 SHORT $LN2@operator@5
$LN43@operator@5:
  000f7	8b 06		 mov	 eax, DWORD PTR [esi]
  000f9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000fc	03 ce		 add	 ecx, esi
  000fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  00104	33 ff		 xor	 edi, edi
  00106	57		 push	 edi
  00107	ff 75 e8	 push	 DWORD PTR tv284[ebp]
  0010a	8b c8		 mov	 ecx, eax
  0010c	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  0010f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAE_JPB_W_J@Z
  00115	3b 45 e8	 cmp	 eax, DWORD PTR tv284[ebp]
  00118	75 04		 jne	 SHORT $LN49@operator@5
  0011a	3b d7		 cmp	 edx, edi
  0011c	74 29		 je	 SHORT $LL44@operator@5
$LN49@operator@5:

; 878  : 			_State |= ios_base::badbit;

  0011e	c7 45 ec 04 00
	00 00		 mov	 DWORD PTR __State$[ebp], 4
$LN2@operator@5:

; 887  : 					}
; 888  : 		_Ostr.width(0);

  00125	8b 06		 mov	 eax, DWORD PTR [esi]
  00127	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0012a	33 ff		 xor	 edi, edi
  0012c	57		 push	 edi
  0012d	57		 push	 edi
  0012e	03 ce		 add	 ecx, esi
  00130	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
  00136	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+12], edi
  00139	eb 6f		 jmp	 SHORT $LN23@operator@5
$LN9@operator@5:

; 868  : 			for (; 0 < _Pad; --_Pad)	// pad on left

  0013b	83 c3 ff	 add	 ebx, -1
  0013e	83 55 e4 ff	 adc	 DWORD PTR __Pad$[ebp+4], -1
  00142	e9 73 ff ff ff	 jmp	 $LL10@operator@5
$LL44@operator@5:

; 879  : 
; 880  : 		if (_State == ios_base::goodbit)
; 881  : 			for (; 0 < _Pad; --_Pad)	// pad on right

  00147	83 7d e4 00	 cmp	 DWORD PTR __Pad$[ebp+4], 0
  0014b	7c d8		 jl	 SHORT $LN2@operator@5
  0014d	7f 04		 jg	 SHORT $LN50@operator@5
  0014f	85 db		 test	 ebx, ebx
  00151	74 d2		 je	 SHORT $LN2@operator@5
$LN50@operator@5:

; 882  : 				if (_Traits::eq_int_type(_Traits::eof(),
; 883  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))

  00153	8b 06		 mov	 eax, DWORD PTR [esi]
  00155	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00158	03 ce		 add	 ecx, esi
  0015a	0f b7 79 40	 movzx	 edi, WORD PTR [ecx+64]
  0015e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  00164	57		 push	 edi
  00165	8b c8		 mov	 ecx, eax
  00167	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
  0016d	0f b7 c0	 movzx	 eax, ax
  00170	b9 ff ff 00 00	 mov	 ecx, 65535		; 0000ffffH
  00175	66 3b c8	 cmp	 cx, ax
  00178	75 06		 jne	 SHORT $LN3@operator@5

; 884  : 					{	// insertion failed, quit
; 885  : 					_State |= ios_base::badbit;

  0017a	83 4d ec 04	 or	 DWORD PTR __State$[ebp], 4

; 886  : 					break;

  0017e	eb a5		 jmp	 SHORT $LN2@operator@5
$LN3@operator@5:

; 879  : 
; 880  : 		if (_State == ios_base::goodbit)
; 881  : 			for (; 0 < _Pad; --_Pad)	// pad on right

  00180	83 c3 ff	 add	 ebx, -1
  00183	83 55 e4 ff	 adc	 DWORD PTR __Pad$[ebp+4], -1
  00187	eb be		 jmp	 SHORT $LL44@operator@5
__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$0:

; 889  : 		_CATCH_IO_(_Ostr)

  00189	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0018c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0018e	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00191	6a 01		 push	 1
  00193	6a 04		 push	 4
  00195	03 c8		 add	 ecx, eax
  00197	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
  0019d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  001a1	b8 00 00 00 00	 mov	 eax, $LN54@operator@5
  001a6	c3		 ret	 0
$LN54@operator@5:
  001a7	8b 75 08	 mov	 esi, DWORD PTR __Ostr$[ebp]
$LN23@operator@5:

; 890  : 		}
; 891  : 
; 892  : 	_Ostr.setstate(_State);

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001af	6a 00		 push	 0
  001b1	ff 75 ec	 push	 DWORD PTR __State$[ebp]
  001b4	03 ce		 add	 ecx, esi
  001b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z

; 893  : 	return (_Ostr);

  001bc	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  001c0	8d 4d d8	 lea	 ecx, DWORD PTR __Ok$[ebp]
  001c3	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
  001c8	8b c6		 mov	 eax, esi

; 894  : 	}

  001ca	e8 00 00 00 00	 call	 __EH_epilog3
  001cf	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$2:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
__ehhandler$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ENDP ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__catchsym$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z$0
__tryblocktable$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z$3
__unwindtable$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string
xdata$x	ENDS
;	COMDAT ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
_TEXT	SEGMENT
__Ok$ = -32						; size = 8
__Size$ = -24						; size = 4
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Pad$ = 12						; size = 4
__Str$ = 12						; size = 4
??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z PROC ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 492  : 	{	// insert a string

  00000	6a 14		 push	 20			; 00000014H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch

; 493  : 	typedef basic_ostream<_Elem, _Traits> _Myos;
; 494  : 	typedef basic_string<_Elem, _Traits, _Alloc> _Mystr;
; 495  : 	typedef typename _Mystr::size_type _Mysizt;
; 496  : 
; 497  : 	ios_base::iostate _State = ios_base::goodbit;
; 498  : 	_Mysizt _Size = _Str.size();
; 499  : 	_Mysizt _Pad = _Ostr.width() <= 0 || (_Mysizt)_Ostr.width() <= _Size
; 500  : 		? 0 : (_Mysizt)_Ostr.width() - _Size;

  0000c	8b 75 08	 mov	 esi, DWORD PTR __Ostr$[ebp]
  0000f	8b 06		 mov	 eax, DWORD PTR [esi]
  00011	8b 5d 0c	 mov	 ebx, DWORD PTR __Str$[ebp]
  00014	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00017	8b 7b 10	 mov	 edi, DWORD PTR [ebx+16]
  0001a	83 65 ec 00	 and	 DWORD PTR __State$[ebp], 0
  0001e	03 ce		 add	 ecx, esi
  00020	89 7d e8	 mov	 DWORD PTR __Size$[ebp], edi
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  00029	85 d2		 test	 edx, edx
  0002b	7c 2b		 jl	 SHORT $LN17@operator@6
  0002d	7f 04		 jg	 SHORT $LN51@operator@6
  0002f	85 c0		 test	 eax, eax
  00031	74 25		 je	 SHORT $LN17@operator@6
$LN51@operator@6:
  00033	8b 06		 mov	 eax, DWORD PTR [esi]
  00035	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00038	03 ce		 add	 ecx, esi
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  00040	3b c7		 cmp	 eax, edi
  00042	76 14		 jbe	 SHORT $LN17@operator@6
  00044	8b 06		 mov	 eax, DWORD PTR [esi]
  00046	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00049	03 ce		 add	 ecx, esi
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  00051	2b c7		 sub	 eax, edi
  00053	89 45 0c	 mov	 DWORD PTR __Pad$[ebp], eax
  00056	eb 04		 jmp	 SHORT $LN18@operator@6
$LN17@operator@6:
  00058	83 65 0c 00	 and	 DWORD PTR __Pad$[ebp], 0
$LN18@operator@6:

; 501  : 	const typename _Myos::sentry _Ok(_Ostr);

  0005c	56		 push	 esi
  0005d	8d 4d e0	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00060	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
  00065	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0

; 502  : 
; 503  : 	if (!_Ok)

  00069	80 7d e4 00	 cmp	 BYTE PTR __Ok$[ebp+4], 0
  0006d	75 0c		 jne	 SHORT $LN14@operator@6

; 504  : 		_State |= ios_base::badbit;

  0006f	c7 45 ec 04 00
	00 00		 mov	 DWORD PTR __State$[ebp], 4

; 505  : 	else

  00076	e9 fd 00 00 00	 jmp	 $LN23@operator@6
$LN14@operator@6:

; 506  : 		{	// state okay, insert characters
; 507  : 	_TRY_IO_BEGIN
; 508  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

  0007b	8b 06		 mov	 eax, DWORD PTR [esi]
  0007d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00080	03 ce		 add	 ecx, esi
  00082	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00086	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
  0008c	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  00091	83 f8 40	 cmp	 eax, 64			; 00000040H
  00094	74 37		 je	 SHORT $LN49@operator@6
$LL10@operator@6:

; 509  : 			for (; 0 < _Pad; --_Pad)	// pad on left

  00096	83 7d 0c 00	 cmp	 DWORD PTR __Pad$[ebp], 0
  0009a	76 2b		 jbe	 SHORT $LN8@operator@6

; 510  : 				if (_Traits::eq_int_type(_Traits::eof(),
; 511  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))

  0009c	8b 06		 mov	 eax, DWORD PTR [esi]
  0009e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a1	03 ce		 add	 ecx, esi
  000a3	0f b7 79 40	 movzx	 edi, WORD PTR [ecx+64]
  000a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  000ad	57		 push	 edi
  000ae	8b c8		 mov	 ecx, eax
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
  000b6	0f b7 c0	 movzx	 eax, ax
  000b9	b9 ff ff 00 00	 mov	 ecx, 65535		; 0000ffffH
  000be	66 3b c8	 cmp	 cx, ax
  000c1	75 54		 jne	 SHORT $LN9@operator@6

; 512  : 					{	// insertion failed, quit
; 513  : 					_State |= ios_base::badbit;

  000c3	83 4d ec 04	 or	 DWORD PTR __State$[ebp], 4
$LN8@operator@6:

; 514  : 					break;
; 515  : 					}
; 516  : 
; 517  : 		if (_State == ios_base::goodbit
; 518  : 			&& _Ostr.rdbuf()->sputn(_Str.c_str(), _Size) != (streamsize)_Size)

  000c7	83 7d ec 00	 cmp	 DWORD PTR __State$[ebp], 0
  000cb	75 52		 jne	 SHORT $LL50@operator@6
$LN49@operator@6:
  000cd	83 7b 14 08	 cmp	 DWORD PTR [ebx+20], 8
  000d1	72 02		 jb	 SHORT $LN38@operator@6
  000d3	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$LN38@operator@6:
  000d5	8b 06		 mov	 eax, DWORD PTR [esi]
  000d7	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000da	03 ce		 add	 ecx, esi
  000dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  000e2	33 ff		 xor	 edi, edi
  000e4	57		 push	 edi
  000e5	ff 75 e8	 push	 DWORD PTR __Size$[ebp]
  000e8	8b c8		 mov	 ecx, eax
  000ea	53		 push	 ebx
  000eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAE_JPB_W_J@Z
  000f1	3b 45 e8	 cmp	 eax, DWORD PTR __Size$[ebp]
  000f4	75 04		 jne	 SHORT $LN52@operator@6
  000f6	3b d7		 cmp	 edx, edi
  000f8	74 25		 je	 SHORT $LL50@operator@6
$LN52@operator@6:

; 519  : 				_State |= ios_base::badbit;

  000fa	c7 45 ec 04 00
	00 00		 mov	 DWORD PTR __State$[ebp], 4
$LN2@operator@6:

; 527  : 					}
; 528  : 		_Ostr.width(0);

  00101	8b 06		 mov	 eax, DWORD PTR [esi]
  00103	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00106	33 ff		 xor	 edi, edi
  00108	57		 push	 edi
  00109	57		 push	 edi
  0010a	03 ce		 add	 ecx, esi
  0010c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
  00112	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+12], edi
  00115	eb 61		 jmp	 SHORT $LN23@operator@6
$LN9@operator@6:

; 509  : 			for (; 0 < _Pad; --_Pad)	// pad on left

  00117	ff 4d 0c	 dec	 DWORD PTR __Pad$[ebp]
  0011a	e9 77 ff ff ff	 jmp	 $LL10@operator@6
$LL50@operator@6:

; 520  : 		else
; 521  : 			for (; 0 < _Pad; --_Pad)	// pad on right

  0011f	83 7d 0c 00	 cmp	 DWORD PTR __Pad$[ebp], 0
  00123	76 dc		 jbe	 SHORT $LN2@operator@6

; 522  : 				if (_Traits::eq_int_type(_Traits::eof(),
; 523  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))

  00125	8b 06		 mov	 eax, DWORD PTR [esi]
  00127	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0012a	03 ce		 add	 ecx, esi
  0012c	0f b7 79 40	 movzx	 edi, WORD PTR [ecx+64]
  00130	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  00136	57		 push	 edi
  00137	8b c8		 mov	 ecx, eax
  00139	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
  0013f	0f b7 c0	 movzx	 eax, ax
  00142	b9 ff ff 00 00	 mov	 ecx, 65535		; 0000ffffH
  00147	66 3b c8	 cmp	 cx, ax
  0014a	75 06		 jne	 SHORT $LN3@operator@6

; 524  : 					{	// insertion failed, quit
; 525  : 					_State |= ios_base::badbit;

  0014c	83 4d ec 04	 or	 DWORD PTR __State$[ebp], 4

; 526  : 					break;

  00150	eb af		 jmp	 SHORT $LN2@operator@6
$LN3@operator@6:

; 520  : 		else
; 521  : 			for (; 0 < _Pad; --_Pad)	// pad on right

  00152	ff 4d 0c	 dec	 DWORD PTR __Pad$[ebp]
  00155	eb c8		 jmp	 SHORT $LL50@operator@6
__catch$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z$0:

; 529  : 		_CATCH_IO_(_Ostr)

  00157	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0015a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015c	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0015f	6a 01		 push	 1
  00161	6a 04		 push	 4
  00163	03 c8		 add	 ecx, eax
  00165	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
  0016b	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  0016f	b8 00 00 00 00	 mov	 eax, $LN56@operator@6
  00174	c3		 ret	 0
$LN56@operator@6:
  00175	8b 75 08	 mov	 esi, DWORD PTR __Ostr$[ebp]
$LN23@operator@6:

; 530  : 		}
; 531  : 
; 532  : 	_Ostr.setstate(_State);

  00178	8b 06		 mov	 eax, DWORD PTR [esi]
  0017a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0017d	6a 00		 push	 0
  0017f	ff 75 ec	 push	 DWORD PTR __State$[ebp]
  00182	03 ce		 add	 ecx, esi
  00184	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z

; 533  : 	return (_Ostr);

  0018a	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  0018e	8d 4d e0	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00191	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
  00196	8b c6		 mov	 eax, esi

; 534  : 	}

  00198	e8 00 00 00 00	 call	 __EH_epilog3
  0019d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z$2:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
__ehhandler$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ENDP ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@ABVioHashString@@$$QAPAVIWndCreator@ioSP2GUIManager@@@Z ; std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@ABVioHashString@@$$QAPAVIWndCreator@ioSP2GUIManager@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@ABVioHashString@@$$QAPAVIWndCreator@ioSP2GUIManager@@@Z PROC ; std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>, COMDAT
; _this$ = ecx

; 233  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR __Val1$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  0000f	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  00012	8b 00		 mov	 eax, DWORD PTR [eax]
  00014	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 234  : 		}

  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
??0?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@ABVioHashString@@$$QAPAVIWndCreator@ioSP2GUIManager@@@Z ENDP ; std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@ABVioHashString@@@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Lbound
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@ABVioHashString@@@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@ABVioHashString@@@Z PROC ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 1741 : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1742 : 		_Nodeptr _Pnode = _Root();

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	56		 push	 esi
  00007	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  0000a	57		 push	 edi

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails

  0000b	8b f8		 mov	 edi, eax
  0000d	eb 19		 jmp	 SHORT $LN26@Lbound
$LL4@Lbound:

; 1746 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

  0000f	ff 75 08	 push	 DWORD PTR __Keyval$[ebp]
  00012	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??MioHashString@@QBE_NABV0@@Z
  0001b	84 c0		 test	 al, al
  0001d	74 05		 je	 SHORT $LN2@Lbound

; 1747 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  0001f	8b 76 08	 mov	 esi, DWORD PTR [esi+8]

; 1748 : 			else

  00022	eb 04		 jmp	 SHORT $LN26@Lbound
$LN2@Lbound:

; 1749 : 				{	// _Pnode not less than _Keyval, remember it
; 1750 : 				_Wherenode = _Pnode;

  00024	8b fe		 mov	 edi, esi

; 1751 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  00026	8b 36		 mov	 esi, DWORD PTR [esi]
$LN26@Lbound:

; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00028	80 7e 21 00	 cmp	 BYTE PTR [esi+33], 0
  0002c	74 e1		 je	 SHORT $LL4@Lbound

; 1752 : 				}
; 1753 : 
; 1754 : 		return (_Wherenode);	// return best remembered candidate

  0002e	8b c7		 mov	 eax, edi
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi

; 1755 : 		}

  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@ABVioHashString@@@Z ENDP ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >, COMDAT
; _this$ = ecx

; 378  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 379  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 807  : 		return (iterator(_Lmost(), this));

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 808  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::begin
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))
; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 257  : 			_SCL_SECURE_OUT_OF_RANGE;
; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::operator++

; 266  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 267  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::operator--
; Function compile flags: /Ogsp
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 277  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 278  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 279  : 		if (this->_Getcont() == 0
; 280  : 			|| this->_Ptr == 0)
; 281  : 			{	// report error
; 282  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 283  : 			_SCL_SECURE_OUT_OF_RANGE;
; 284  : 			}
; 285  : 
; 286  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 287  : 		--(*(_Mybase *)this);
; 288  : 		if (_Ptrsav == this->_Ptr)
; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 291  : 			_SCL_SECURE_OUT_OF_RANGE;
; 292  : 			}
; 293  : 
; 294  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 295  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 296  : 
; 297  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 298  : 		--(*(_Mybase *)this);
; 299  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 300  : 
; 301  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 302  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::operator--

; 303  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 304  : 
; 305  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 306  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::operator--
; Function compile flags: /Ogsp
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 418  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 419  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::operator--

; 420  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 421  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 227  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 228  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > > &,bool>
; Function compile flags: /Ogsp
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 248  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Buynode
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Buynode@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ
_TEXT	SEGMENT
$T532666 = -16						; size = 12
$T532650 = -4						; size = 4
?_Buynode@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ PROC ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 559  : 		{	// allocate a node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00007	6a 24		 push	 36			; 00000024H
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	59		 pop	 ecx
  00011	33 c9		 xor	 ecx, ecx
  00013	3b c1		 cmp	 eax, ecx
  00015	74 18		 je	 SHORT $LN5@Buynode

; 561  : 
; 562  : 		this->_Left(_Wherenode) = this->_Myhead;

  00017	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001a	89 10		 mov	 DWORD PTR [eax], edx

; 563  : 		this->_Parent(_Wherenode) = this->_Myhead;

  0001c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001f	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 564  : 		this->_Right(_Wherenode) = this->_Myhead;

  00022	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00025	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 565  : 		this->_Color(_Wherenode) = this->_Red;

  00028	66 89 48 20	 mov	 WORD PTR [eax+32], cx
  0002c	5e		 pop	 esi

; 566  : 		this->_Isnil(_Wherenode) = false;
; 567  : 		return (_Wherenode);
; 568  : 		}

  0002d	c9		 leave
  0002e	c3		 ret	 0

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

$LN5@Buynode:
  0002f	8d 45 fc	 lea	 eax, DWORD PTR $T532650[ebp]
  00032	89 4d fc	 mov	 DWORD PTR $T532650[ebp], ecx
  00035	50		 push	 eax
  00036	8d 4d f0	 lea	 ecx, DWORD PTR $T532666[ebp]
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  0003f	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00044	8d 45 f0	 lea	 eax, DWORD PTR $T532666[ebp]
  00047	50		 push	 eax
  00048	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T532666[ebp], OFFSET ??_7bad_alloc@std@@6B@
  0004f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN27@Buynode:
$LN26@Buynode:
  00054	cc		 int	 3
?_Buynode@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@YAXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@@Z ; std::_Destroy<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@YAXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@YAXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@@Z PROC ; std::_Destroy<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >, COMDAT

; 62   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	_Ptr->~_Ty();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]

; 64   : 	}

  00006	5d		 pop	 ebp

; 63   : 	_Ptr->~_Ty();

  00007	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
??$_Destroy@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@YAXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@@Z ENDP ; std::_Destroy<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >
_TEXT	ENDS
PUBLIC	??$_Destroy@UASValue@@@std@@YAXPAUASValue@@@Z	; std::_Destroy<ASValue>
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy@UASValue@@@std@@YAXPAUASValue@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UASValue@@@std@@YAXPAUASValue@@@Z PROC	; std::_Destroy<ASValue>, COMDAT

; 62   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	_Ptr->~_Ty();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]

; 64   : 	}

  00006	5d		 pop	 ebp

; 63   : 	_Ptr->~_Ty();

  00007	e9 00 00 00 00	 jmp	 ??1ASValue@@QAE@XZ	; ASValue::~ASValue
??$_Destroy@UASValue@@@std@@YAXPAUASValue@@@Z ENDP	; std::_Destroy<ASValue>
_TEXT	ENDS
PUBLIC	??$?0$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@$$QAU01@@Z ; std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *><ioHashString const ,ioSP2GUIManager::IWndCreator *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@$$QAU01@@Z PROC ; std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *><ioHashString const ,ioSP2GUIManager::IWndCreator *>, COMDAT
; _this$ = ecx

; 255  : 		{	// construct from moved compatible pair

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b 7d 08	 mov	 edi, DWORD PTR __Right$[ebp]
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  00011	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00014	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00017	5f		 pop	 edi

; 256  : 		}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??$?0$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@$$QAU01@@Z ENDP ; std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *><ioHashString const ,ioSP2GUIManager::IWndCreator *>
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy, COMDAT
; _this$ = ecx

; 1988 : 		{	// initialize buffer, deallocating any storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1989 : 		if (!_Built)

  00003	80 7d 08 00	 cmp	 BYTE PTR __Built$[ebp], 0
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	74 23		 je	 SHORT $LN11@Tidy@2

; 1990 : 			;
; 1991 : 		else if (this->_BUF_SIZE <= this->_Myres)

  00010	83 7e 14 08	 cmp	 DWORD PTR [esi+20], 8
  00014	72 1d		 jb	 SHORT $LN11@Tidy@2

; 1992 : 			{	// copy any leftovers to small buffer and deallocate
; 1993 : 			_Elem *_Ptr = this->_Bx._Ptr;

  00016	53		 push	 ebx
  00017	8b 1e		 mov	 ebx, DWORD PTR [esi]

; 1994 : 			if (0 < _Newsize)

  00019	85 ff		 test	 edi, edi
  0001b	74 0e		 je	 SHORT $LN7@Tidy@2

; 1995 : 				_Traits::copy(this->_Bx._Buf, _Ptr, _Newsize);

  0001d	8d 04 3f	 lea	 eax, DWORD PTR [edi+edi]
  00020	50		 push	 eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	e8 00 00 00 00	 call	 _memcpy
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@Tidy@2:

; 1996 : 			this->_Alval.deallocate(_Ptr, this->_Myres + 1);

  0002b	53		 push	 ebx
  0002c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00031	59		 pop	 ecx
  00032	5b		 pop	 ebx
$LN11@Tidy@2:

; 1997 : 			}
; 1998 : 		this->_Myres = this->_BUF_SIZE - 1;
; 1999 : 		_Eos(_Newsize);

  00033	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  00036	c7 46 14 07 00
	00 00		 mov	 DWORD PTR [esi+20], 7
  0003d	33 c0		 xor	 eax, eax
  0003f	66 89 04 7e	 mov	 WORD PTR [esi+edi*2], ax
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi

; 2000 : 		}

  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx

; 1109 : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1110 : 		if (this->_Mysize < _Off)

  00006	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00009	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  0000c	57		 push	 edi
  0000d	3b c1		 cmp	 eax, ecx
  0000f	73 0b		 jae	 SHORT $LN3@erase

; 1111 : 			_Xran();	// _Off off end

  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN30@erase:
$LN3@erase:

; 1112 : 		if (this->_Mysize - _Off < _Count)

  0001c	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0001f	2b c1		 sub	 eax, ecx
  00021	3b c7		 cmp	 eax, edi

; 1113 : 			_Count = this->_Mysize - _Off;	// trim _Count

  00023	0f 42 f8	 cmovb	 edi, eax

; 1114 : 		if (0 < _Count)

  00026	85 ff		 test	 edi, edi
  00028	74 4e		 je	 SHORT $LN27@erase

; 1115 : 			{	// move elements down
; 1116 : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 1117 : 				this->_Mysize - _Off - _Count);

  0002a	8b 56 14	 mov	 edx, DWORD PTR [esi+20]
  0002d	53		 push	 ebx
  0002e	83 fa 08	 cmp	 edx, 8
  00031	72 04		 jb	 SHORT $LN11@erase
  00033	8b 1e		 mov	 ebx, DWORD PTR [esi]
  00035	eb 02		 jmp	 SHORT $LN12@erase
$LN11@erase:
  00037	8b de		 mov	 ebx, esi
$LN12@erase:
  00039	83 fa 08	 cmp	 edx, 8
  0003c	72 04		 jb	 SHORT $LN15@erase
  0003e	8b 16		 mov	 edx, DWORD PTR [esi]
  00040	eb 02		 jmp	 SHORT $LN16@erase
$LN15@erase:
  00042	8b d6		 mov	 edx, esi
$LN16@erase:
  00044	2b c7		 sub	 eax, edi
  00046	03 c0		 add	 eax, eax
  00048	50		 push	 eax
  00049	8d 04 39	 lea	 eax, DWORD PTR [ecx+edi]
  0004c	8d 04 43	 lea	 eax, DWORD PTR [ebx+eax*2]
  0004f	50		 push	 eax
  00050	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  00053	50		 push	 eax
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove

; 1118 : 			size_type _Newsize = this->_Mysize - _Count;

  0005a	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	2b c7		 sub	 eax, edi

; 1119 : 			_Eos(_Newsize);

  00062	83 7e 14 08	 cmp	 DWORD PTR [esi+20], 8
  00066	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00069	5b		 pop	 ebx
  0006a	72 04		 jb	 SHORT $LN25@erase
  0006c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0006e	eb 02		 jmp	 SHORT $LN26@erase
$LN25@erase:
  00070	8b ce		 mov	 ecx, esi
$LN26@erase:
  00072	33 d2		 xor	 edx, edx
  00074	66 89 14 41	 mov	 WORD PTR [ecx+eax*2], dx
$LN27@erase:

; 1120 : 			}
; 1121 : 		return (*this);

  00078	5f		 pop	 edi
  00079	8b c6		 mov	 eax, esi
  0007b	5e		 pop	 esi

; 1122 : 		}

  0007c	5d		 pop	 ebp
  0007d	c2 08 00	 ret	 8
$LN29@erase:
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$5
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
tv296 = -20						; size = 4
__Newres$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy, COMDAT
; _this$ = ecx

; 1919 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	6a 0c		 push	 12			; 0000000cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 e8	 mov	 DWORD PTR _this$[ebp], esi

; 1920 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

  00011	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  00014	83 cf 07	 or	 edi, 7

; 1921 : 		if (max_size() < _Newres)

  00017	81 ff fe ff ff
	7f		 cmp	 edi, 2147483646		; 7ffffffeH
  0001d	76 05		 jbe	 SHORT $LN9@Copy

; 1922 : 			_Newres = _Newsize;	// undo roundup if too big

  0001f	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  00022	eb 29		 jmp	 SHORT $LN5@Copy
$LN9@Copy:

; 1923 : 		else if (this->_Myres / 2 <= _Newres / 3)

  00024	33 d2		 xor	 edx, edx
  00026	6a 03		 push	 3
  00028	8b c7		 mov	 eax, edi
  0002a	5b		 pop	 ebx
  0002b	f7 f3		 div	 ebx
  0002d	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00030	89 4d ec	 mov	 DWORD PTR tv296[ebp], ecx
  00033	d1 6d ec	 shr	 DWORD PTR tv296[ebp], 1
  00036	8b 55 ec	 mov	 edx, DWORD PTR tv296[ebp]
  00039	3b d0		 cmp	 edx, eax
  0003b	76 10		 jbe	 SHORT $LN5@Copy

; 1924 : 			;
; 1925 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

  0003d	bf fe ff ff 7f	 mov	 edi, 2147483646		; 7ffffffeH
  00042	8b c7		 mov	 eax, edi
  00044	2b c2		 sub	 eax, edx
  00046	3b c8		 cmp	 ecx, eax
  00048	77 03		 ja	 SHORT $LN5@Copy

; 1926 : 			_Newres = this->_Myres
; 1927 : 				+ this->_Myres / 2;	// grow exponentially if possible

  0004a	8d 3c 0a	 lea	 edi, DWORD PTR [edx+ecx]
$LN5@Copy:

; 1928 : 		else
; 1929 : 			_Newres = max_size();	// settle for max_size()
; 1930 : 
; 1931 : 		_Elem *_Ptr;
; 1932 : 		_TRY_BEGIN

  0004d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0

; 1933 : 			_Ptr = this->_Alval.allocate(_Newres + 1);

  00051	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  00054	6a 00		 push	 0
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ??$_Allocate@_W@std@@YAPA_WIPA_W@Z ; std::_Allocate<wchar_t>
  0005c	59		 pop	 ecx
  0005d	59		 pop	 ecx
  0005e	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  00061	eb 27		 jmp	 SHORT $LN19@Copy
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$0:

; 1934 : 		_CATCH_ALL
; 1935 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  00063	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00066	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00069	89 45 ec	 mov	 DWORD PTR __Newres$[ebp], eax

; 1936 : 			_TRY_BEGIN
; 1937 : 				_Ptr = this->_Alval.allocate(_Newres + 1);

  0006c	40		 inc	 eax
  0006d	6a 00		 push	 0
  0006f	50		 push	 eax
  00070	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00074	e8 00 00 00 00	 call	 ??$_Allocate@_W@std@@YAPA_WIPA_W@Z ; std::_Allocate<wchar_t>
  00079	59		 pop	 ecx
  0007a	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  0007d	59		 pop	 ecx

; 1941 : 			_CATCH_END
; 1942 : 		_CATCH_END

  0007e	b8 00 00 00 00	 mov	 eax, $LN65@Copy
  00083	c3		 ret	 0
$LN65@Copy:
  00084	8b 75 e8	 mov	 esi, DWORD PTR _this$[ebp]
  00087	8b 7d ec	 mov	 edi, DWORD PTR __Newres$[ebp]
$LN19@Copy:

; 1943 : 
; 1944 : 		if (0 < _Oldlen)

  0008a	8b 5d 0c	 mov	 ebx, DWORD PTR __Oldlen$[ebp]
  0008d	85 db		 test	 ebx, ebx
  0008f	74 1c		 je	 SHORT $LN52@Copy

; 1945 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  00091	83 7e 14 08	 cmp	 DWORD PTR [esi+20], 8
  00095	72 04		 jb	 SHORT $LN50@Copy
  00097	8b 06		 mov	 eax, DWORD PTR [esi]
  00099	eb 02		 jmp	 SHORT $LN51@Copy
$LN50@Copy:
  0009b	8b c6		 mov	 eax, esi
$LN51@Copy:
  0009d	8d 0c 1b	 lea	 ecx, DWORD PTR [ebx+ebx]
  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  000a5	e8 00 00 00 00	 call	 _memcpy
  000aa	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN52@Copy:

; 1946 : 		_Tidy(true);

  000ad	6a 00		 push	 0
  000af	6a 01		 push	 1
  000b1	8b ce		 mov	 ecx, esi
  000b3	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 1947 : 		this->_Bx._Ptr = _Ptr;

  000b8	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 1948 : 		this->_Myres = _Newres;
; 1949 : 		_Eos(_Oldlen);

  000bb	83 ff 08	 cmp	 edi, 8
  000be	89 06		 mov	 DWORD PTR [esi], eax
  000c0	0f 42 c6	 cmovb	 eax, esi
  000c3	33 c9		 xor	 ecx, ecx
  000c5	89 7e 14	 mov	 DWORD PTR [esi+20], edi
  000c8	89 5e 10	 mov	 DWORD PTR [esi+16], ebx
  000cb	66 89 0c 58	 mov	 WORD PTR [eax+ebx*2], cx

; 1950 : 		}

  000cf	e8 00 00 00 00	 call	 __EH_epilog3
  000d4	c2 08 00	 ret	 8
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$1:

; 1938 : 			_CATCH_ALL
; 1939 : 			_Tidy(true);	// failed again, discard storage and reraise

  000d7	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	33 f6		 xor	 esi, esi
  000dc	56		 push	 esi
  000dd	6a 01		 push	 1
  000df	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 1940 : 			_RERAISE;

  000e4	56		 push	 esi
  000e5	56		 push	 esi
  000e6	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN69@Copy:
$LN68@Copy:
  000eb	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
PUBLIC	??_7?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
PUBLIC	??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??_R4?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_iostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_iostream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_iostream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_iostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_iostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_istream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_istream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_istream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_istream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_istream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_istream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R1BA@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_??1?$basic_iostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ:PROC
EXTRN	??_E?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BA@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	03H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
_DATA	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DD FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Iosb@H@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
_DATA	SEGMENT
??_R0?AVios_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVios_base@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_istream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_istream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_istream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_istream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istream@_WU?$char_traits@_W@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_istream@_WU?$char_traits@_W@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_istream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_istream@_WU?$char_traits@_W@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_istream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_istream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_istream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_iostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R1BA@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_iostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	09H
	DD	FLAT:??_R2?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_iostream@_WU?$char_traits@_W@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_iostream@_WU?$char_traits@_W@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_iostream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_iostream@_WU?$char_traits@_W@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_iostream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_iostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R1BA@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD 00H ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	0aH
	DD	FLAT:??_R2?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringstream@_WU?$char_traits@_W@std@@V?$all'
	DB	'ocator@_W@2@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DD 00H ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
	DD	060H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DD FLAT:??_R4?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
	DD	FLAT:??_E?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ$0
__ehfuncinfo$??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ PROC ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 704  : 		{	// destroy the object

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b 41 a0	 mov	 eax, DWORD PTR [ecx-96]
  00012	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00015	c7 44 08 a0 00
	00 00 00	 mov	 DWORD PTR [eax+ecx-96], OFFSET ??_7?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
  0001d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 705  : 		}

  00021	8d 71 b8	 lea	 esi, DWORD PTR [ecx-72]
  00024	8b ce		 mov	 ecx, esi
  00026	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0002b	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0002f	8b ce		 mov	 ecx, esi
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_iostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ
  00037	e8 00 00 00 00	 call	 __EH_epilog3
  0003c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 e9 48	 sub	 ecx, 72			; 00000048H
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_iostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ
__ehhandler$??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ:
  0000c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00010	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00013	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00016	33 c8		 xor	 ecx, eax
  00018	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ
  00022	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ENDP ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
EXTRN	__imp_??0?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAE@XZ:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z$0
__ehfuncinfo$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
xdata$x	ENDS
;	COMDAT ??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__Mode$ = 8						; size = 4
??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 26   : 	explicit basic_stringbuf(ios_base::openmode _Mode =

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAE@XZ

; 27   : 		ios_base::in | ios_base::out)
; 28   : 		{	// construct empty character buffer from mode
; 29   : 		_Init(0, 0, _Getstate(_Mode));

  00014	ff 75 08	 push	 DWORD PTR __Mode$[ebp]
  00017	83 66 3c 00	 and	 DWORD PTR [esi+60], 0
  0001b	8b ce		 mov	 ecx, esi
  0001d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
  00023	e8 00 00 00 00	 call	 ?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEHH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate
  00028	89 46 40	 mov	 DWORD PTR [esi+64], eax

; 30   : 		}

  0002b	8b c6		 mov	 eax, esi
  0002d	e8 00 00 00 00	 call	 __EH_epilog3
  00032	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ
__ehhandler$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::end
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 817  : 		return (iterator(this->_Myhead, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 818  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::end
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@ABVioHashString@@@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::lower_bound
; Function compile flags: /Ogsp
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@ABVioHashString@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@ABVioHashString@@@Z PROC ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1449 : 		{	// find leftmost node not less than _Keyval in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1450 : 		return (iterator(_Lbound(_Keyval), this));

  00003	ff 75 0c	 push	 DWORD PTR __Keyval$[ebp]
  00006	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@ABVioHashString@@@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Lbound
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000e	89 01		 mov	 DWORD PTR [ecx], eax
  00010	8b c1		 mov	 eax, ecx

; 1451 : 		}

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@ABVioHashString@@@Z ENDP ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QAEXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@@Z ; std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >::destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QAEXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QAEXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@@Z PROC ; std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 213  : 		_Destroy(_Ptr);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ

; 214  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?destroy@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QAEXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@@Z ENDP ; std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UASValue@@@std@@QAEXPAUASValue@@@Z ; std::allocator<ASValue>::destroy
; Function compile flags: /Ogsp
;	COMDAT ?destroy@?$allocator@UASValue@@@std@@QAEXPAUASValue@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UASValue@@@std@@QAEXPAUASValue@@@Z PROC ; std::allocator<ASValue>::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 213  : 		_Destroy(_Ptr);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??1ASValue@@QAE@XZ	; ASValue::~ASValue

; 214  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?destroy@?$allocator@UASValue@@@std@@QAEXPAUASValue@@@Z ENDP ; std::allocator<ASValue>::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QAEXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@$$QAU32@@Z ; std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >::construct
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QAEXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@$$QAU32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QAEXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@$$QAU32@@Z$0
__ehfuncinfo$?construct@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QAEXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@$$QAU32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QAEXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@$$QAU32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QAEXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@$$QAU32@@Z
_TEXT	SEGMENT
$T533131 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QAEXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@$$QAU32@@Z PROC ; std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?construct@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QAEXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@$$QAU32@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  0000c	8b 75 08	 mov	 esi, DWORD PTR __Ptr$[ebp]
  0000f	89 75 f0	 mov	 DWORD PTR $T533131[ebp], esi
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 f6		 test	 esi, esi
  00018	74 12		 je	 SHORT $LN3@construct
  0001a	8b 7d 0c	 mov	 edi, DWORD PTR __Val$[ebp]
  0001d	57		 push	 edi
  0001e	8b ce		 mov	 ecx, esi
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  00026	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00029	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN3@construct:

; 203  : 		}

  0002c	e8 00 00 00 00	 call	 __EH_epilog3
  00031	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QAEXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@$$QAU32@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T533131[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$?construct@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QAEXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@$$QAU32@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?construct@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QAEXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@$$QAU32@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QAEXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@$$QAU32@@Z ENDP ; std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >::construct
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 754  : 		_Tidy(true);

  00000	6a 00		 push	 0
  00002	6a 01		 push	 1
  00004	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 755  : 		}

  00009	c3		 ret	 0
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 550  : 		{	// construct empty string

  00000	8b c1		 mov	 eax, ecx

; 551  : 		_Tidy();

  00002	83 60 10 00	 and	 DWORD PTR [eax+16], 0
  00006	33 c9		 xor	 ecx, ecx
  00008	c7 40 14 07 00
	00 00		 mov	 DWORD PTR [eax+20], 7
  0000f	66 89 08	 mov	 WORD PTR [eax], cx

; 552  : 		}

  00012	c3		 ret	 0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
; Function compile flags: /Ogsp
;	COMDAT ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow, COMDAT
; _this$ = ecx

; 1959 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1960 : 		if (max_size() < _Newsize)

  00004	8b 75 08	 mov	 esi, DWORD PTR __Newsize$[ebp]
  00007	81 fe fe ff ff
	7f		 cmp	 esi, 2147483646		; 7ffffffeH
  0000d	76 0b		 jbe	 SHORT $LN6@Grow

; 1961 : 			_Xlen();	// result too long

  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN31@Grow:
$LN6@Grow:

; 1962 : 		if (this->_Myres < _Newsize)

  0001a	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  0001d	3b c6		 cmp	 eax, esi
  0001f	73 0b		 jae	 SHORT $LN5@Grow

; 1963 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

  00021	ff 71 10	 push	 DWORD PTR [ecx+16]
  00024	56		 push	 esi
  00025	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
  0002a	eb 30		 jmp	 SHORT $LN28@Grow
$LN5@Grow:

; 1964 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

  0002c	80 7d 0c 00	 cmp	 BYTE PTR __Trim$[ebp], 0
  00030	74 17		 je	 SHORT $LN3@Grow
  00032	83 fe 08	 cmp	 esi, 8
  00035	73 12		 jae	 SHORT $LN3@Grow

; 1965 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1966 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

  00037	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0003a	3b f0		 cmp	 esi, eax
  0003c	0f 42 c6	 cmovb	 eax, esi
  0003f	50		 push	 eax
  00040	6a 01		 push	 1
  00042	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
  00047	eb 13		 jmp	 SHORT $LN28@Grow
$LN3@Grow:

; 1967 : 		else if (_Newsize == 0)

  00049	85 f6		 test	 esi, esi
  0004b	75 0f		 jne	 SHORT $LN28@Grow

; 1968 : 			_Eos(0);	// new size is zero, just null terminate

  0004d	21 71 10	 and	 DWORD PTR [ecx+16], esi
  00050	83 f8 08	 cmp	 eax, 8
  00053	72 02		 jb	 SHORT $LN26@Grow
  00055	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN26@Grow:
  00057	33 c0		 xor	 eax, eax
  00059	66 89 01	 mov	 WORD PTR [ecx], ax
$LN28@Grow:

; 1969 : 		return (0 < _Newsize);	// return true only if more work to do

  0005c	33 c0		 xor	 eax, eax
  0005e	3b c6		 cmp	 eax, esi
  00060	1b c0		 sbb	 eax, eax
  00062	f7 d8		 neg	 eax
  00064	5e		 pop	 esi

; 1970 : 		}

  00065	5d		 pop	 ebp
  00066	c2 08 00	 ret	 8
$LN30@Grow:
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
_TEXT	ENDS
PUBLIC	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
; Function compile flags: /Ogsp
;	COMDAT ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append, COMDAT
; _this$ = ecx

; 799  : 		{	// append _Right [_Roff, _Roff + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 800  : 		if (_Right.size() < _Roff)

  00003	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b f1		 mov	 esi, ecx
  0000d	3b 45 0c	 cmp	 eax, DWORD PTR __Roff$[ebp]
  00010	73 0b		 jae	 SHORT $LN4@append

; 801  : 			_Xran();	// _Roff off end

  00012	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN38@append:
$LN4@append:

; 802  : 		size_type _Num = _Right.size() - _Roff;

  0001d	2b 45 0c	 sub	 eax, DWORD PTR __Roff$[ebp]

; 803  : 		if (_Num < _Count)

  00020	8b 7d 10	 mov	 edi, DWORD PTR __Count$[ebp]
  00023	3b c7		 cmp	 eax, edi

; 804  : 			_Count = _Num;	// trim _Count to size

  00025	0f 42 f8	 cmovb	 edi, eax

; 805  : 		if (npos - this->_Mysize <= _Count)

  00028	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0002b	83 c9 ff	 or	 ecx, -1
  0002e	2b c8		 sub	 ecx, eax
  00030	3b cf		 cmp	 ecx, edi
  00032	77 0b		 ja	 SHORT $LN2@append

; 806  : 			_Xlen();	// result too long

  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN39@append:
$LN2@append:

; 807  : 
; 808  : 		if (0 < _Count && _Grow(_Num = this->_Mysize + _Count))

  0003f	85 ff		 test	 edi, edi
  00041	74 59		 je	 SHORT $LN34@append
  00043	53		 push	 ebx
  00044	8d 1c 38	 lea	 ebx, DWORD PTR [eax+edi]
  00047	6a 00		 push	 0
  00049	53		 push	 ebx
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
  00051	84 c0		 test	 al, al
  00053	74 46		 je	 SHORT $LN36@append

; 809  : 			{	// make room and append new stuff
; 810  : 			_Traits::copy(_Myptr() + this->_Mysize,
; 811  : 				_Right._Myptr() + _Roff, _Count);

  00055	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00058	83 79 14 08	 cmp	 DWORD PTR [ecx+20], 8
  0005c	72 02		 jb	 SHORT $LN18@append
  0005e	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN18@append:
  00060	83 7e 14 08	 cmp	 DWORD PTR [esi+20], 8
  00064	72 04		 jb	 SHORT $LN22@append
  00066	8b 06		 mov	 eax, DWORD PTR [esi]
  00068	eb 02		 jmp	 SHORT $LN23@append
$LN22@append:
  0006a	8b c6		 mov	 eax, esi
$LN23@append:
  0006c	8d 14 3f	 lea	 edx, DWORD PTR [edi+edi]
  0006f	52		 push	 edx
  00070	8b 55 0c	 mov	 edx, DWORD PTR __Roff$[ebp]
  00073	8d 0c 51	 lea	 ecx, DWORD PTR [ecx+edx*2]
  00076	51		 push	 ecx
  00077	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0007a	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 _memcpy
  00083	83 c4 0c	 add	 esp, 12			; 0000000cH

; 812  : 			_Eos(_Num);

  00086	83 7e 14 08	 cmp	 DWORD PTR [esi+20], 8
  0008a	89 5e 10	 mov	 DWORD PTR [esi+16], ebx
  0008d	72 04		 jb	 SHORT $LN32@append
  0008f	8b 06		 mov	 eax, DWORD PTR [esi]
  00091	eb 02		 jmp	 SHORT $LN33@append
$LN32@append:
  00093	8b c6		 mov	 eax, esi
$LN33@append:
  00095	33 c9		 xor	 ecx, ecx
  00097	66 89 0c 58	 mov	 WORD PTR [eax+ebx*2], cx
$LN36@append:
  0009b	5b		 pop	 ebx
$LN34@append:

; 813  : 			}
; 814  : 		return (*this);

  0009c	5f		 pop	 edi
  0009d	8b c6		 mov	 eax, esi
  0009f	5e		 pop	 esi

; 815  : 		}

  000a0	5d		 pop	 ebp
  000a1	c2 0c 00	 ret	 12			; 0000000cH
$LN37@append:
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
_TEXT	ENDS
PUBLIC	??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPAXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPAXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	6a 00		 push	 0
  00006	6a 01		 push	 1
  00008	8b f1		 mov	 esi, ecx
  0000a	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
  0000f	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00013	74 07		 je	 SHORT $LN1@scalar@6
  00015	56		 push	 esi
  00016	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001b	59		 pop	 ecx
$LN1@scalar@6:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPAXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbase destructor'
EXTRN	__imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
_TEXT	SEGMENT
??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ PROC ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbase destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8d 71 60	 lea	 esi, DWORD PTR [ecx+96]
  00004	8b ce		 mov	 ecx, esi
  00006	e8 00 00 00 00	 call	 ??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0000b	8b ce		 mov	 ecx, esi
  0000d	5e		 pop	 esi
  0000e	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ
??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ENDP ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbase destructor'
_TEXT	ENDS
PUBLIC	??_8?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B?$basic_ostream@_WU?$char_traits@_W@std@@@1@@ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbtable'
PUBLIC	??_8?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B?$basic_istream@_WU?$char_traits@_W@std@@@1@@ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbtable'
PUBLIC	??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
EXTRN	__imp_??0?$basic_iostream@_WU?$char_traits@_W@std@@@std@@QAE@PAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@@Z:PROC
EXTRN	__imp_??0?$basic_ios@_WU?$char_traits@_W@std@@@std@@IAE@XZ:PROC
;	COMDAT ??_8?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B?$basic_ostream@_WU?$char_traits@_W@std@@@1@@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
CONST	SEGMENT
??_8?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B?$basic_ostream@_WU?$char_traits@_W@std@@@1@@ DD 00H ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbtable'
	DD	050H
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B?$basic_istream@_WU?$char_traits@_W@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B?$basic_istream@_WU?$char_traits@_W@std@@@1@@ DD 00H ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbtable'
	DD	060H
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z$1
__ehfuncinfo$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T533393 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
_$initVBases$ = 12					; size = 4
??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z PROC ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 658  : 		{	// construct empty character buffer

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00011	33 ff		 xor	 edi, edi
  00013	33 db		 xor	 ebx, ebx
  00015	47		 inc	 edi
  00016	89 5d f0	 mov	 DWORD PTR $T533393[ebp], ebx
  00019	39 5d 0c	 cmp	 DWORD PTR _$initVBases$[ebp], ebx
  0001c	74 1c		 je	 SHORT $LN1@basic_stri
  0001e	8d 4e 60	 lea	 ecx, DWORD PTR [esi+96]
  00021	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_8?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B?$basic_istream@_WU?$char_traits@_W@std@@@1@@
  00027	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], OFFSET ??_8?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B?$basic_ostream@_WU?$char_traits@_W@std@@@1@@
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_ios@_WU?$char_traits@_W@std@@@std@@IAE@XZ
  00034	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00037	89 7d f0	 mov	 DWORD PTR $T533393[ebp], edi
$LN1@basic_stri:
  0003a	6a 00		 push	 0
  0003c	8d 5e 18	 lea	 ebx, DWORD PTR [esi+24]
  0003f	53		 push	 ebx
  00040	8b ce		 mov	 ecx, esi
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_iostream@_WU?$char_traits@_W@std@@@std@@QAE@PAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@@Z
  00048	8b 06		 mov	 eax, DWORD PTR [esi]
  0004a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004d	ff 75 08	 push	 DWORD PTR __Mode$[ebp]
  00050	8b cb		 mov	 ecx, ebx
  00052	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  00055	c7 04 06 00 00
	00 00		 mov	 DWORD PTR [esi+eax], OFFSET ??_7?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
  0005c	e8 00 00 00 00	 call	 ??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 659  : 		}

  00061	8b c6		 mov	 eax, esi
  00063	e8 00 00 00 00	 call	 __EH_epilog3
  00068	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T533393[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 10 00 00
	00		 je	 $LN5@basic_stri
  0000c	83 65 f0 fe	 and	 DWORD PTR $T533393[ebp], -2 ; fffffffeH
  00010	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 60	 add	 ecx, 96			; 00000060H
  00016	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ
$LN5@basic_stri:
  0001c	c3		 ret	 0
__unwindfunclet$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z$1:
  0001d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	83 c1 18	 add	 ecx, 24			; 00000018H
  00023	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_iostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ
__ehhandler$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z:
  00029	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00030	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00033	33 c8		 xor	 ecx, eax
  00035	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
  0003f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ENDP ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Ogsp
;	COMDAT ??_G?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z PROC ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 71 a0	 lea	 esi, DWORD PTR [ecx-96]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
  0000e	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00012	74 07		 je	 SHORT $LN1@scalar@7
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001a	59		 pop	 ecx
$LN1@scalar@7:
  0001b	8b c6		 mov	 eax, esi
  0001d	5e		 pop	 esi
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??_G?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ ; std::_Pair_base<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue>::~_Pair_base<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ PROC ; std::_Pair_base<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue>::~_Pair_base<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue>, COMDAT
; _this$ = ecx
  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00015	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  00018	e8 00 00 00 00	 call	 ??1ASValue@@QAE@XZ	; ASValue::~ASValue
  0001d	6a 00		 push	 0
  0001f	6a 01		 push	 1
  00021	8b ce		 mov	 ecx, esi
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
  00028	e8 00 00 00 00	 call	 __EH_epilog3
  0002d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ ENDP ; std::_Pair_base<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue>::~_Pair_base<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue>
PUBLIC	??$_Dest_val@V?$allocator@UASValue@@@std@@UASValue@@@std@@YAXAAV?$allocator@UASValue@@@0@PAUASValue@@@Z ; std::_Dest_val<std::allocator<ASValue>,ASValue>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@UASValue@@@std@@UASValue@@@std@@YAXAAV?$allocator@UASValue@@@0@PAUASValue@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@UASValue@@@std@@UASValue@@@std@@YAXAAV?$allocator@UASValue@@@0@PAUASValue@@@Z PROC ; std::_Dest_val<std::allocator<ASValue>,ASValue>, COMDAT

; 286  : 	{	// destroy using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]

; 288  : 	}

  00006	5d		 pop	 ebp

; 287  : 	_Alval.destroy(_Pdest);

  00007	e9 00 00 00 00	 jmp	 ??1ASValue@@QAE@XZ	; ASValue::~ASValue
??$_Dest_val@V?$allocator@UASValue@@@std@@UASValue@@@std@@YAXAAV?$allocator@UASValue@@@0@PAUASValue@@@Z ENDP ; std::_Dest_val<std::allocator<ASValue>,ASValue>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@0@PAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@0@PAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@0@PAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >, COMDAT

; 286  : 	{	// destroy using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]

; 288  : 	}

  00006	5d		 pop	 ebp

; 287  : 	_Alval.destroy(_Pdest);

  00007	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
??$_Dest_val@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@0@PAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@0@PAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>,std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@0@PAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@0@PAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>,std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  0000c	e8 00 00 00 00	 call	 ?construct@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QAEXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@$$QAU32@@Z ; std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >::construct

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@0@PAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *>,std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >
_TEXT	ENDS
PUBLIC	??$_Destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::_Destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z PROC ; std::_Destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 62   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	_Ptr->~_Ty();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	6a 00		 push	 0
  00008	6a 01		 push	 1
  0000a	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 64   : 	}

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??$_Destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ENDP ; std::_Destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 893  : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 894  : 		if (_Right.size() < _Roff)

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Roff$[ebp]
  00006	53		 push	 ebx
  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Right$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b 7b 10	 mov	 edi, DWORD PTR [ebx+16]
  0000f	8b f1		 mov	 esi, ecx
  00011	3b f8		 cmp	 edi, eax
  00013	73 0b		 jae	 SHORT $LN5@assign

; 895  : 			_Xran();	// _Roff off end

  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN36@assign:
$LN5@assign:

; 896  : 		size_type _Num = _Right.size() - _Roff;

  00020	2b f8		 sub	 edi, eax

; 897  : 		if (_Count < _Num)

  00022	39 7d 10	 cmp	 DWORD PTR __Count$[ebp], edi

; 898  : 			_Num = _Count;	// trim _Num to size

  00025	0f 42 7d 10	 cmovb	 edi, DWORD PTR __Count$[ebp]

; 899  : 
; 900  : 		if (this == &_Right)

  00029	3b f3		 cmp	 esi, ebx
  0002b	75 18		 jne	 SHORT $LN3@assign

; 901  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

  0002d	6a ff		 push	 -1
  0002f	03 f8		 add	 edi, eax
  00031	57		 push	 edi
  00032	e8 00 00 00 00	 call	 ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
  00037	ff 75 0c	 push	 DWORD PTR __Roff$[ebp]
  0003a	8b ce		 mov	 ecx, esi
  0003c	6a 00		 push	 0
  0003e	e8 00 00 00 00	 call	 ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
  00043	eb 4d		 jmp	 SHORT $LN33@assign
$LN3@assign:

; 902  : 		else if (_Grow(_Num))

  00045	6a 00		 push	 0
  00047	57		 push	 edi
  00048	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
  0004d	84 c0		 test	 al, al
  0004f	74 41		 je	 SHORT $LN33@assign

; 903  : 			{	// make room and assign new stuff
; 904  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

  00051	83 7b 14 08	 cmp	 DWORD PTR [ebx+20], 8
  00055	72 04		 jb	 SHORT $LN17@assign
  00057	8b 03		 mov	 eax, DWORD PTR [ebx]
  00059	eb 02		 jmp	 SHORT $LN18@assign
$LN17@assign:
  0005b	8b c3		 mov	 eax, ebx
$LN18@assign:
  0005d	83 7e 14 08	 cmp	 DWORD PTR [esi+20], 8
  00061	72 04		 jb	 SHORT $LN21@assign
  00063	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00065	eb 02		 jmp	 SHORT $LN22@assign
$LN21@assign:
  00067	8b ce		 mov	 ecx, esi
$LN22@assign:
  00069	8b 55 0c	 mov	 edx, DWORD PTR __Roff$[ebp]
  0006c	8d 1c 3f	 lea	 ebx, DWORD PTR [edi+edi]
  0006f	53		 push	 ebx
  00070	8d 04 50	 lea	 eax, DWORD PTR [eax+edx*2]
  00073	50		 push	 eax
  00074	51		 push	 ecx
  00075	e8 00 00 00 00	 call	 _memcpy
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 905  : 			_Eos(_Num);

  0007d	83 7e 14 08	 cmp	 DWORD PTR [esi+20], 8
  00081	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  00084	72 04		 jb	 SHORT $LN31@assign
  00086	8b 06		 mov	 eax, DWORD PTR [esi]
  00088	eb 02		 jmp	 SHORT $LN32@assign
$LN31@assign:
  0008a	8b c6		 mov	 eax, esi
$LN32@assign:
  0008c	33 c9		 xor	 ecx, ecx
  0008e	66 89 0c 03	 mov	 WORD PTR [ebx+eax], cx
$LN33@assign:

; 906  : 			}
; 907  : 		return (*this);

  00092	5f		 pop	 edi
  00093	8b c6		 mov	 eax, esi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx

; 908  : 		}

  00097	5d		 pop	 ebp
  00098	c2 0c 00	 ret	 12			; 0000000cH
$LN35@assign:
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
PUBLIC	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
; Function compile flags: /Ogsp
;	COMDAT ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append, COMDAT
; _this$ = ecx

; 793  : 		{	// append _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 794  : 		return (append(_Right, 0, npos));

  00003	6a ff		 push	 -1
  00005	6a 00		 push	 0
  00007	ff 75 08	 push	 DWORD PTR __Right$[ebp]
  0000a	e8 00 00 00 00	 call	 ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append

; 795  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Function compile flags: /Ogsp
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 887  : 		{	// assign _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 888  : 		return (assign(_Right, 0, npos));

  00003	6a ff		 push	 -1
  00005	6a 00		 push	 0
  00007	ff 75 08	 push	 DWORD PTR __Right$[ebp]
  0000a	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 889  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Function compile flags: /Ogsp
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 911  : 		{	// assign [_Ptr, _Ptr + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 912  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 913  : 		if (_Count != 0)
; 914  : 			_DEBUG_POINTER(_Ptr);
; 915  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 916  : 
; 917  : 		if (_Inside(_Ptr))

  00005	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
  00010	84 c0		 test	 al, al
  00012	74 1e		 je	 SHORT $LN2@assign@2

; 918  : 			return (assign(*this, _Ptr - _Myptr(), _Count));	// substring

  00014	83 7e 14 08	 cmp	 DWORD PTR [esi+20], 8
  00018	72 04		 jb	 SHORT $LN7@assign@2
  0001a	8b 06		 mov	 eax, DWORD PTR [esi]
  0001c	eb 02		 jmp	 SHORT $LN8@assign@2
$LN7@assign@2:
  0001e	8b c6		 mov	 eax, esi
$LN8@assign@2:
  00020	ff 75 0c	 push	 DWORD PTR __Count$[ebp]
  00023	2b f8		 sub	 edi, eax
  00025	d1 ff		 sar	 edi, 1
  00027	57		 push	 edi
  00028	56		 push	 esi
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  00030	eb 46		 jmp	 SHORT $LN3@assign@2
$LN2@assign@2:

; 919  : 
; 920  : 		if (_Grow(_Count))

  00032	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  00035	6a 00		 push	 0
  00037	57		 push	 edi
  00038	8b ce		 mov	 ecx, esi
  0003a	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
  0003f	84 c0		 test	 al, al
  00041	74 33		 je	 SHORT $LN23@assign@2

; 921  : 			{	// make room and assign new stuff
; 922  : 			_Traits::copy(_Myptr(), _Ptr, _Count);

  00043	83 7e 14 08	 cmp	 DWORD PTR [esi+20], 8
  00047	72 04		 jb	 SHORT $LN11@assign@2
  00049	8b 06		 mov	 eax, DWORD PTR [esi]
  0004b	eb 02		 jmp	 SHORT $LN12@assign@2
$LN11@assign@2:
  0004d	8b c6		 mov	 eax, esi
$LN12@assign@2:
  0004f	53		 push	 ebx
  00050	8d 1c 3f	 lea	 ebx, DWORD PTR [edi+edi]
  00053	53		 push	 ebx
  00054	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 _memcpy
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 923  : 			_Eos(_Count);

  00060	83 7e 14 08	 cmp	 DWORD PTR [esi+20], 8
  00064	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  00067	72 04		 jb	 SHORT $LN21@assign@2
  00069	8b 06		 mov	 eax, DWORD PTR [esi]
  0006b	eb 02		 jmp	 SHORT $LN22@assign@2
$LN21@assign@2:
  0006d	8b c6		 mov	 eax, esi
$LN22@assign@2:
  0006f	33 c9		 xor	 ecx, ecx
  00071	66 89 0c 03	 mov	 WORD PTR [ebx+eax], cx
  00075	5b		 pop	 ebx
$LN23@assign@2:

; 924  : 			}
; 925  : 		return (*this);

  00076	8b c6		 mov	 eax, esi
$LN3@assign@2:
  00078	5f		 pop	 edi
  00079	5e		 pop	 esi

; 926  : 		}

  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
PUBLIC	??1?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue>::~pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue>
; Function compile flags: /Ogsp
;	COMDAT ??1?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue>::~pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue>, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ
??1?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue>::~pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue>
_TEXT	ENDS
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@IIABV?$allocator@_W@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@IIABV?$allocator@_W@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
__Al$ = 20						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@IIABV?$allocator@_W@1@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 571  : 		{	// construct from _Right [_Roff, _Roff + _Count) with allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 572  : 		_Tidy();
; 573  : 		assign(_Right, _Roff, _Count);

  00004	ff 75 10	 push	 DWORD PTR __Count$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 0c	 push	 DWORD PTR __Roff$[ebp]
  0000c	83 66 10 00	 and	 DWORD PTR [esi+16], 0
  00010	ff 75 08	 push	 DWORD PTR __Right$[ebp]
  00013	33 c0		 xor	 eax, eax
  00015	c7 46 14 07 00
	00 00		 mov	 DWORD PTR [esi+20], 7
  0001c	66 89 06	 mov	 WORD PTR [esi], ax
  0001f	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 574  : 		}

  00024	8b c6		 mov	 eax, esi
  00026	5e		 pop	 esi
  00027	5d		 pop	 ebp
  00028	c2 10 00	 ret	 16			; 00000010H
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@IIABV?$allocator@_W@1@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UASValue@@@std@@@std@@YAXPAUASValue@@0AAV?$allocator@UASValue@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ASValue> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UASValue@@@std@@@std@@YAXPAUASValue@@0AAV?$allocator@UASValue@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UASValue@@@std@@@std@@YAXPAUASValue@@0AAV?$allocator@UASValue@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ASValue> >, COMDAT

; 95   : 	{	// destroy [_First, _Last), arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 96   : 	for (; _First != _Last; ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0a		 jmp	 SHORT $LN17@Destroy_ra
$LL3@Destroy_ra:

; 97   : 		_Dest_val(_Al, _First);

  00009	8b ce		 mov	 ecx, esi
  0000b	e8 00 00 00 00	 call	 ??1ASValue@@QAE@XZ	; ASValue::~ASValue
  00010	83 c6 04	 add	 esi, 4
$LN17@Destroy_ra:

; 96   : 	for (; _First != _Last; ++_First)

  00013	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00016	75 f1		 jne	 SHORT $LL3@Destroy_ra
  00018	5e		 pop	 esi

; 98   : 	}

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??$_Destroy_range@V?$allocator@UASValue@@@std@@@std@@YAXPAUASValue@@0AAV?$allocator@UASValue@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ASValue> >
_TEXT	ENDS
PUBLIC	??_G?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAEPAXI@Z ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue>::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_G?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAEPAXI@Z PROC ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@8
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@8:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_G?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAEPAXI@Z ENDP ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Insert
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1631 : 		{	// add node with value next to _Wherenode, to left if _Addleft

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 1632 : 		if (max_size() - 1 <= this->_Mysize)

  00008	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0000b	3d cb cc cc 0c	 cmp	 eax, 214748363		; 0ccccccbH
  00010	72 1f		 jb	 SHORT $LN17@Insert

; 1633 : 			{	// tree would get too big, fail
; 1634 : 			_Dest_val(this->_Alval,
; 1635 : 				_STD addressof(this->_Myval(_Newnode)));

  00012	8b 75 14	 mov	 esi, DWORD PTR __Newnode$[ebp]
  00015	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ

; 1636 : 
; 1637 : 			this->_Alnod.deallocate(_Newnode, 1);

  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 1638 : 
; 1639 : 			_Xlength_error("map/set<T> too long");

  00024	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN197@Insert:
$LN17@Insert:

; 1640 : 			}
; 1641 : 		++this->_Mysize;
; 1642 : 		_Newnode->_Parent = _Wherenode;

  00031	8b 5d 14	 mov	 ebx, DWORD PTR __Newnode$[ebp]
  00034	40		 inc	 eax
  00035	89 47 08	 mov	 DWORD PTR [edi+8], eax
  00038	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0003b	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 1643 : 
; 1644 : 		if (_Wherenode == this->_Myhead)

  0003e	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00041	3b c1		 cmp	 eax, ecx
  00043	75 10		 jne	 SHORT $LN16@Insert

; 1645 : 			{	// first node in tree, just set head values
; 1646 : 			_Root() = _Newnode;

  00045	89 59 04	 mov	 DWORD PTR [ecx+4], ebx

; 1647 : 			_Lmost() = _Newnode;

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	89 18		 mov	 DWORD PTR [eax], ebx

; 1648 : 			_Rmost() = _Newnode;

  0004d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00050	89 58 08	 mov	 DWORD PTR [eax+8], ebx
  00053	eb 21		 jmp	 SHORT $LN11@Insert
$LN16@Insert:

; 1649 : 			}
; 1650 : 		else if (_Addleft)

  00055	80 7d 0c 00	 cmp	 BYTE PTR __Addleft$[ebp], 0
  00059	74 0d		 je	 SHORT $LN14@Insert

; 1651 : 			{	// add to left of _Wherenode
; 1652 : 			this->_Left(_Wherenode) = _Newnode;

  0005b	89 18		 mov	 DWORD PTR [eax], ebx

; 1653 : 			if (_Wherenode == _Lmost())

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00062	75 12		 jne	 SHORT $LN11@Insert

; 1654 : 				_Lmost() = _Newnode;

  00064	89 19		 mov	 DWORD PTR [ecx], ebx

; 1655 : 			}
; 1656 : 		else

  00066	eb 0e		 jmp	 SHORT $LN11@Insert
$LN14@Insert:

; 1657 : 			{	// add to right of _Wherenode
; 1658 : 			this->_Right(_Wherenode) = _Newnode;

  00068	89 58 08	 mov	 DWORD PTR [eax+8], ebx

; 1659 : 			if (_Wherenode == _Rmost())

  0006b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0006e	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00071	75 03		 jne	 SHORT $LN11@Insert

; 1660 : 				_Rmost() = _Newnode;

  00073	89 59 08	 mov	 DWORD PTR [ecx+8], ebx
$LN11@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  00076	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00079	8b f3		 mov	 esi, ebx
  0007b	e9 93 00 00 00	 jmp	 $LN195@Insert
$LL10@Insert:

; 1665 : 			if (this->_Parent(_Pnode)
; 1666 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

  00080	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00083	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00086	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00088	75 38		 jne	 SHORT $LN8@Insert

; 1667 : 				{	// fixup red-red in left subtree
; 1668 : 				_Wherenode =
; 1669 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

  0008a	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1670 : 				if (this->_Color(_Wherenode) == this->_Red)

  0008d	80 79 20 00	 cmp	 BYTE PTR [ecx+32], 0

; 1671 : 					{	// parent has two red children, blacken both
; 1672 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;
; 1673 : 					this->_Color(_Wherenode) = this->_Black;
; 1674 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1675 : 						= this->_Red;
; 1676 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));
; 1677 : 					}
; 1678 : 				else

  00091	74 37		 je	 SHORT $LN196@Insert

; 1679 : 					{	// parent has red and black children
; 1680 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

  00093	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00096	75 0a		 jne	 SHORT $LN5@Insert

; 1681 : 						{	// rotate right child to left
; 1682 : 						_Pnode = this->_Parent(_Pnode);

  00098	8b f0		 mov	 esi, eax

; 1683 : 						_Lrotate(_Pnode);

  0009a	56		 push	 esi
  0009b	8b cf		 mov	 ecx, edi
  0009d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Lrotate
$LN5@Insert:

; 1684 : 						}
; 1685 : 					this->_Color(this->_Parent(_Pnode)) =
; 1686 : 						this->_Black;	// propagate red up

  000a2	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a5	c6 40 20 01	 mov	 BYTE PTR [eax+32], 1

; 1687 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1688 : 						this->_Red;

  000a9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000ac	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000af	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

  000b3	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b6	ff 70 04	 push	 DWORD PTR [eax+4]
  000b9	8b cf		 mov	 ecx, edi
  000bb	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Rrotate

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  000c0	eb 4e		 jmp	 SHORT $LN2@Insert
$LN8@Insert:

; 1693 : 				{	// fixup red-red in right subtree
; 1694 : 				_Wherenode =
; 1695 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

  000c2	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1696 : 				if (this->_Color(_Wherenode) == this->_Red)

  000c4	80 79 20 00	 cmp	 BYTE PTR [ecx+32], 0
  000c8	75 1a		 jne	 SHORT $LN3@Insert
$LN196@Insert:

; 1697 : 					{	// parent has two red children, blacken both
; 1698 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  000ca	c6 40 20 01	 mov	 BYTE PTR [eax+32], 1

; 1699 : 					this->_Color(_Wherenode) = this->_Black;

  000ce	c6 41 20 01	 mov	 BYTE PTR [ecx+32], 1

; 1700 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1701 : 						this->_Red;

  000d2	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000d5	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000d8	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 1702 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  000dc	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000df	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 1703 : 					}
; 1704 : 				else

  000e2	eb 2c		 jmp	 SHORT $LN2@Insert
$LN3@Insert:

; 1705 : 					{	// parent has red and black children
; 1706 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

  000e4	3b 30		 cmp	 esi, DWORD PTR [eax]
  000e6	75 0a		 jne	 SHORT $LN1@Insert

; 1707 : 						{	// rotate left child to right
; 1708 : 						_Pnode = this->_Parent(_Pnode);

  000e8	8b f0		 mov	 esi, eax

; 1709 : 						_Rrotate(_Pnode);

  000ea	56		 push	 esi
  000eb	8b cf		 mov	 ecx, edi
  000ed	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Rrotate
$LN1@Insert:

; 1710 : 						}
; 1711 : 					this->_Color(this->_Parent(_Pnode)) =
; 1712 : 						this->_Black;	// propagate red up

  000f2	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000f5	c6 40 20 01	 mov	 BYTE PTR [eax+32], 1

; 1713 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1714 : 						this->_Red;

  000f9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000fc	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000ff	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 1715 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

  00103	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00106	ff 70 04	 push	 DWORD PTR [eax+4]
  00109	8b cf		 mov	 ecx, edi
  0010b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Lrotate
$LN2@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  00110	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
$LN195@Insert:
  00113	80 78 20 00	 cmp	 BYTE PTR [eax+32], 0
  00117	0f 84 63 ff ff
	ff		 je	 $LL10@Insert

; 1716 : 					}
; 1717 : 				}
; 1718 : 
; 1719 : 		this->_Color(_Root()) = this->_Black;	// root is always black

  0011d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00120	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00123	5f		 pop	 edi
  00124	c6 40 20 01	 mov	 BYTE PTR [eax+32], 1

; 1720 : 		return (iterator(_Newnode, this));

  00128	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0012b	5e		 pop	 esi
  0012c	89 18		 mov	 DWORD PTR [eax], ebx
  0012e	5b		 pop	 ebx

; 1721 : 		}

  0012f	5d		 pop	 ebp
  00130	c2 10 00	 ret	 16			; 00000010H
$LN194@Insert:
?_Insert@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??$_Buynode@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Buynode<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??$_Buynode@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z$0
__unwindtable$??$_Buynode@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z$2
__ehfuncinfo$??$_Buynode@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??$_Buynode@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z
_TEXT	SEGMENT
__Wherenode$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Val$ = 8						; size = 4
??$_Buynode@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Buynode<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >, COMDAT
; _this$ = ecx

; 586  : 		_Nodeptr _Buynode(_Valty&& _Val)

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Buynode@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

  0000e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Buynode

; 589  : 
; 590  : 		_TRY_BEGIN
; 591  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Wherenode)),
; 592  : 			_STD forward<_Valty>(_Val));

  00013	ff 75 08	 push	 DWORD PTR __Val$[ebp]
  00016	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  0001a	8b f8		 mov	 edi, eax
  0001c	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  0001f	50		 push	 eax
  00020	8d 4e 0d	 lea	 ecx, DWORD PTR [esi+13]
  00023	89 7d ec	 mov	 DWORD PTR __Wherenode$[ebp], edi
  00026	e8 00 00 00 00	 call	 ?construct@?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@std@@QAEXPAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@2@$$QAU32@@Z ; std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >::construct

; 596  : 		_CATCH_END
; 597  : 
; 598  : 		return (_Wherenode);

  0002b	8b c7		 mov	 eax, edi

; 599  : 		}

  0002d	e8 00 00 00 00	 call	 __EH_epilog3
  00032	c2 04 00	 ret	 4
__catch$??$_Buynode@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z$0:

; 593  : 		_CATCH_ALL
; 594  : 		this->_Alnod.deallocate(_Wherenode, 1);

  00035	ff 75 ec	 push	 DWORD PTR __Wherenode$[ebp]
  00038	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003d	59		 pop	 ecx

; 595  : 		_RERAISE;

  0003e	6a 00		 push	 0
  00040	6a 00		 push	 0
  00042	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN23@Buynode@2:
$LN22@Buynode@2:
  00047	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Buynode@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Buynode@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Buynode<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >
PUBLIC	?destroy@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 213  : 		_Destroy(_Ptr);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	6a 00		 push	 0
  00008	6a 01		 push	 1
  0000a	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 214  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?destroy@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::destroy
_TEXT	ENDS
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 578  : 		{	// construct from [_Ptr, _Ptr + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 579  : 		_Tidy();
; 580  : 		assign(_Ptr, _Count);

  00004	ff 75 0c	 push	 DWORD PTR __Count$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	83 66 10 00	 and	 DWORD PTR [esi+16], 0
  0000d	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00010	33 c0		 xor	 eax, eax
  00012	c7 46 14 07 00
	00 00		 mov	 DWORD PTR [esi+20], 7
  00019	66 89 06	 mov	 WORD PTR [esi], ax
  0001c	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 581  : 		}

  00021	8b c6		 mov	 eax, esi
  00023	5e		 pop	 esi
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
PUBLIC	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
; Function compile flags: /Ogsp
;	COMDAT ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=, COMDAT
; _this$ = ecx

; 763  : 		{	// assign _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 764  : 		return (assign(_Right));

  00003	6a ff		 push	 -1
  00005	6a 00		 push	 0
  00007	ff 75 08	 push	 DWORD PTR __Right$[ebp]
  0000a	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 765  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
_TEXT	ENDS
PUBLIC	??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
; Function compile flags: /Ogsp
;	COMDAT ??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=, COMDAT
; _this$ = ecx

; 778  : 		{	// append _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 779  : 		return (append(_Right));

  00003	6a ff		 push	 -1
  00005	6a 00		 push	 0
  00007	ff 75 08	 push	 DWORD PTR __Right$[ebp]
  0000a	e8 00 00 00 00	 call	 ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append

; 780  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
_TEXT	ENDS
PUBLIC	?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr
; Function compile flags: /Ogsp
;	COMDAT ?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV12@II@Z
_TEXT	SEGMENT
$T534229 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
$T534227 = 11						; size = 1
__Off$ = 12						; size = 4
__Count$ = 16						; size = 4
?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr, COMDAT
; _this$ = ecx

; 1848 : 		{	// return [_Off, _Off + _Count) as new string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	83 65 fc 00	 and	 DWORD PTR $T534229[ebp], 0

; 1849 : 		return (_Myt(*this, _Off, _Count, get_allocator()));

  00008	8d 45 0b	 lea	 eax, DWORD PTR $T534227[ebp]
  0000b	50		 push	 eax
  0000c	ff 75 10	 push	 DWORD PTR __Count$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR __Off$[ebp]
  00012	51		 push	 ecx
  00013	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00016	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@IIABV?$allocator@_W@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1850 : 		}

  0001e	c9		 leave
  0001f	c2 0c 00	 ret	 12			; 0000000cH
?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UASValue@@@std@@@std@@YAXPAUASValue@@0AAV?$allocator@UASValue@@@0@@Z ; std::_Destroy_range<std::allocator<ASValue> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UASValue@@@std@@@std@@YAXPAUASValue@@0AAV?$allocator@UASValue@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UASValue@@@std@@@std@@YAXPAUASValue@@0AAV?$allocator@UASValue@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ASValue> >, COMDAT

; 87   : 	{	// destroy [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0a		 jmp	 SHORT $LN21@Destroy_ra@2
$LL7@Destroy_ra@2:
  00009	8b ce		 mov	 ecx, esi
  0000b	e8 00 00 00 00	 call	 ??1ASValue@@QAE@XZ	; ASValue::~ASValue
  00010	83 c6 04	 add	 esi, 4
$LN21@Destroy_ra@2:
  00013	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00016	75 f1		 jne	 SHORT $LL7@Destroy_ra@2
  00018	5e		 pop	 esi

; 89   : 	}

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??$_Destroy_range@V?$allocator@UASValue@@@std@@@std@@YAXPAUASValue@@0AAV?$allocator@UASValue@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ASValue> >
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@std@@YAXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@0@@Z ; std::_Destroy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@std@@YAXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@std@@YAXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@0@@Z PROC ; std::_Destroy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >, COMDAT

; 62   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	_Ptr->~_Ty();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]

; 64   : 	}

  00006	5d		 pop	 ebp

; 63   : 	_Ptr->~_Ty();

  00007	e9 00 00 00 00	 jmp	 ??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ
??$_Destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@std@@YAXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@0@@Z ENDP ; std::_Destroy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >
_TEXT	ENDS
PUBLIC	?_Linsert@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Linsert
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Linsert@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
__Addleft$ = -8						; size = 1
__Wherenode$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Node$ = 12						; size = 4
$T534315 = 16						; size = 4
__Where$526566 = 16					; size = 4
__Leftish$ = 16						; size = 1
?_Linsert@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Linsert, COMDAT
; _this$ = ecx

; 944  : 		{	// try to insert node at _Node, on left if _Leftish

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	53		 push	 ebx

; 945  : 		const value_type& _Val = this->_Myval(_Node);

  00006	8b 5d 0c	 mov	 ebx, DWORD PTR __Node$[ebp]
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx

; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();

  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 948  : 		_Nodeptr _Wherenode = this->_Myhead;

  00013	89 45 fc	 mov	 DWORD PTR __Wherenode$[ebp], eax

; 949  : 		bool _Addleft = true;	// add to left of head if tree empty

  00016	b0 01		 mov	 al, 1
  00018	83 c3 0c	 add	 ebx, 12			; 0000000cH
  0001b	88 45 f8	 mov	 BYTE PTR __Addleft$[ebp], al
  0001e	eb 35		 jmp	 SHORT $LN160@Linsert
$LL12@Linsert:

; 951  : 			{	// look for leaf to insert before (_Addleft) or after
; 952  : 			_Wherenode = _Trynode;
; 953  : 			if (_Leftish)

  00020	80 7d 10 00	 cmp	 BYTE PTR __Leftish$[ebp], 0
  00024	89 75 fc	 mov	 DWORD PTR __Wherenode$[ebp], esi
  00027	74 12		 je	 SHORT $LN10@Linsert

; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,

  00029	53		 push	 ebx
  0002a	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??MioHashString@@QBE_NABV0@@Z
  00033	f6 d8		 neg	 al
  00035	1a c0		 sbb	 al, al
  00037	fe c0		 inc	 al

; 955  : 					this->_Key(_Trynode),
; 956  : 					this->_Kfn(_Val));	// favor left end
; 957  : 			else

  00039	eb 0c		 jmp	 SHORT $LN161@Linsert
$LN10@Linsert:

; 958  : 				_Addleft = _DEBUG_LT_PRED(this->comp,

  0003b	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  0003e	50		 push	 eax
  0003f	8b cb		 mov	 ecx, ebx
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??MioHashString@@QBE_NABV0@@Z
$LN161@Linsert:
  00047	88 45 f8	 mov	 BYTE PTR __Addleft$[ebp], al

; 959  : 					this->_Kfn(_Val),
; 960  : 					this->_Key(_Trynode));	// favor right end
; 961  : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 962  : 				: this->_Right(_Trynode);

  0004a	84 c0		 test	 al, al
  0004c	74 04		 je	 SHORT $LN15@Linsert
  0004e	8b 36		 mov	 esi, DWORD PTR [esi]
  00050	eb 03		 jmp	 SHORT $LN160@Linsert
$LN15@Linsert:
  00052	8b 76 08	 mov	 esi, DWORD PTR [esi+8]
$LN160@Linsert:

; 950  : 		while (!this->_Isnil(_Trynode))

  00055	80 7e 21 00	 cmp	 BYTE PTR [esi+33], 0
  00059	74 c5		 je	 SHORT $LL12@Linsert

; 963  : 			}
; 964  : 
; 965  : 		if (this->_Multi)
; 966  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));
; 967  : 		else
; 968  : 			{	// insert only if unique
; 969  : 			iterator _Where = iterator(_Wherenode, this);

  0005b	8b 75 fc	 mov	 esi, DWORD PTR __Wherenode$[ebp]
  0005e	89 75 10	 mov	 DWORD PTR __Where$526566[ebp], esi

; 970  : 			if (!_Addleft)

  00061	84 c0		 test	 al, al
  00063	74 30		 je	 SHORT $LN99@Linsert

; 971  : 				;	// need to test if insert after is okay
; 972  : 			else if (_Where == begin())

  00065	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00068	3b 30		 cmp	 esi, DWORD PTR [eax]
  0006a	75 1e		 jne	 SHORT $LN4@Linsert

; 973  : 				return (_Pairib(_Insert(true, _Wherenode, _Node), true));

  0006c	ff 75 0c	 push	 DWORD PTR __Node$[ebp]
  0006f	56		 push	 esi
  00070	6a 01		 push	 1
$LN162@Linsert:
  00072	8d 45 10	 lea	 eax, DWORD PTR $T534315[ebp]
  00075	50		 push	 eax
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Insert
  0007d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00082	89 08		 mov	 DWORD PTR [eax], ecx
  00084	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  00088	eb 3e		 jmp	 SHORT $LN1@Linsert
$LN4@Linsert:

; 974  : 			else
; 975  : 				--_Where;	// need to test if insert before is okay

  0008a	8d 4d 10	 lea	 ecx, DWORD PTR __Where$526566[ebp]
  0008d	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::operator--
  00092	8b 75 10	 mov	 esi, DWORD PTR __Where$526566[ebp]
$LN99@Linsert:

; 976  : 
; 977  : 			if (_DEBUG_LT_PRED(this->comp,

  00095	53		 push	 ebx
  00096	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??MioHashString@@QBE_NABV0@@Z
  0009f	84 c0		 test	 al, al
  000a1	74 0b		 je	 SHORT $LN2@Linsert

; 978  : 				this->_Key(_Where._Mynode()),
; 979  : 				this->_Kfn(_Val)))
; 980  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

  000a3	ff 75 0c	 push	 DWORD PTR __Node$[ebp]
  000a6	ff 75 fc	 push	 DWORD PTR __Wherenode$[ebp]
  000a9	ff 75 f8	 push	 DWORD PTR __Addleft$[ebp]
  000ac	eb c4		 jmp	 SHORT $LN162@Linsert
$LN2@Linsert:

; 981  : 			else
; 982  : 				{	// duplicate, don't insert
; 983  : 				_Dest_val(this->_Alval,
; 984  : 					_STD addressof(this->_Myval(_Node)));

  000ae	8b cb		 mov	 ecx, ebx
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ

; 985  : 
; 986  : 				this->_Alnod.deallocate(_Node, 1);

  000b6	ff 75 0c	 push	 DWORD PTR __Node$[ebp]
  000b9	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

  000be	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000c1	59		 pop	 ecx
  000c2	89 30		 mov	 DWORD PTR [eax], esi
  000c4	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
$LN1@Linsert:
  000c8	5f		 pop	 edi
  000c9	5e		 pop	 esi
  000ca	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  000cb	c9		 leave
  000cc	c2 0c 00	 ret	 12			; 0000000cH
?_Linsert@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Linsert
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::_Dest_val<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z PROC ; std::_Dest_val<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 286  : 	{	// destroy using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  00006	6a 00		 push	 0
  00008	6a 01		 push	 1
  0000a	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 288  : 	}

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??$_Dest_val@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@$$QAV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@$$QAV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 713  : 		{	// assign by moving _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 714  : 		if (this == &_Right)

  00004	8b 75 08	 mov	 esi, DWORD PTR __Right$[ebp]
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	3b fe		 cmp	 edi, esi
  0000c	74 3f		 je	 SHORT $LN3@assign@3

; 715  : 			;
; 716  : 		else if (get_allocator() != _Right.get_allocator()
; 717  : 			&& this->_BUF_SIZE <= _Right._Myres)
; 718  : 			*this = _Right;
; 719  : 		else
; 720  : 			{	// not same, clear this and steal from _Right
; 721  : 			_Tidy(true);

  0000e	6a 00		 push	 0
  00010	6a 01		 push	 1
  00012	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 722  : 			if (_Right._Myres < this->_BUF_SIZE)

  00017	83 7e 14 08	 cmp	 DWORD PTR [esi+20], 8
  0001b	73 15		 jae	 SHORT $LN2@assign@3

; 723  : 				_Traits::move(this->_Bx._Buf, _Right._Bx._Buf,
; 724  : 					_Right._Mysize + 1);

  0001d	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00020	8d 44 00 02	 lea	 eax, DWORD PTR [eax+eax+2]
  00024	50		 push	 eax
  00025	56		 push	 esi
  00026	57		 push	 edi
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 725  : 			else

  00030	eb 07		 jmp	 SHORT $LN1@assign@3
$LN2@assign@3:

; 726  : 				{	// copy pointer
; 727  : 				this->_Bx._Ptr = _Right._Bx._Ptr;

  00032	8b 06		 mov	 eax, DWORD PTR [esi]
  00034	89 07		 mov	 DWORD PTR [edi], eax

; 728  : 				_Right._Bx._Ptr = 0;

  00036	83 26 00	 and	 DWORD PTR [esi], 0
$LN1@assign@3:

; 729  : 				}
; 730  : 			this->_Mysize = _Right._Mysize;

  00039	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0003c	89 47 10	 mov	 DWORD PTR [edi+16], eax

; 731  : 			this->_Myres = _Right._Myres;

  0003f	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00042	89 47 14	 mov	 DWORD PTR [edi+20], eax

; 732  : 
; 733  : 			_Right._Mysize = 0;

  00045	83 66 10 00	 and	 DWORD PTR [esi+16], 0

; 734  : 			_Right._Myres = 0;

  00049	83 66 14 00	 and	 DWORD PTR [esi+20], 0
$LN3@assign@3:

; 735  : 			}
; 736  : 		return (*this);

  0004d	8b c7		 mov	 eax, edi
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 737  : 		}

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@$$QAV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 702  : 		{	// construct by moving _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 703  : 		_Tidy();
; 704  : 		assign(_STD forward<_Myt>(_Right));

  00004	ff 75 08	 push	 DWORD PTR __Right$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	83 66 10 00	 and	 DWORD PTR [esi+16], 0
  0000d	33 c0		 xor	 eax, eax
  0000f	c7 46 14 07 00
	00 00		 mov	 DWORD PTR [esi+20], 7
  00016	66 89 06	 mov	 WORD PTR [esi], ax
  00019	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 705  : 		}

  0001e	8b c6		 mov	 eax, esi
  00020	5e		 pop	 esi
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
PUBLIC	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
; Function compile flags: /Ogsp
;	COMDAT ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=, COMDAT
; _this$ = ecx

; 708  : 		{	// assign by moving _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 710  : 		}

  00003	5d		 pop	 ebp

; 709  : 		return (assign(_STD forward<_Myt>(_Right)));

  00004	e9 00 00 00 00	 jmp	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
_TEXT	ENDS
PUBLIC	??_C@_1BI@DKLJGDLN@?$AA?$DM?$AA?1?$AAp?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AA?$DO?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@JHJDECBH@?$AA?$DM?$AAp?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AA?5?$AAi?$AAd?$AA?$DN?$AA?$AA@ ; `string'
PUBLIC	_length$GSCopy$
PUBLIC	??_C@_13MOEPKPHB@?$AA?$DO?$AA?$AA@		; `string'
PUBLIC	_content$GSCopy$
EXTRN	__imp__wcsncmp:PROC
EXTRN	__EH_epilog3_GS:PROC
EXTRN	__EH_prolog3_GS:PROC
;	COMDAT ??_C@_1BI@DKLJGDLN@?$AA?$DM?$AA?1?$AAp?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AA?$DO?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@DKLJGDLN@?$AA?$DM?$AA?1?$AAp?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AA?$DO?$AA?$AA@ DB '<'
	DB	00H, '/', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 'e', 00H
	DB	'r', 00H, 't', 00H, 'y', 00H, '>', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@JHJDECBH@?$AA?$DM?$AAp?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AA?5?$AAi?$AAd?$AA?$DN?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@JHJDECBH@?$AA?$DM?$AAp?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AA?5?$AAi?$AAd?$AA?$DN?$AA?$AA@ DB '<'
	DB	00H, 'p', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H
	DB	't', 00H, 'y', 00H, ' ', 00H, 'i', 00H, 'd', 00H, '=', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_13MOEPKPHB@?$AA?$DO?$AA?$AA@
CONST	SEGMENT
??_C@_13MOEPKPHB@?$AA?$DO?$AA?$AA@ DB '>', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parseFirst@_Props@?1??FromXML@ASValue@@QAEXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@SAX0AAV45@1AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseFirst@_Props@?1??FromXML@ASValue@@QAEXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@SAX0AAV45@1AAI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?parseFirst@_Props@?1??FromXML@ASValue@@QAEXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@SAX0AAV45@1AAI@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?parseFirst@_Props@?1??FromXML@ASValue@@QAEXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@SAX0AAV45@1AAI@Z$2
__ehfuncinfo$?parseFirst@_Props@?1??FromXML@ASValue@@QAEXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@SAX0AAV45@1AAI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?parseFirst@_Props@?1??FromXML@ASValue@@QAEXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@SAX0AAV45@1AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\flashplayertodirectx\include\asinterface.inl
xdata$x	ENDS
;	COMDAT ?parseFirst@_Props@?1??FromXML@ASValue@@QAEXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@SAX0AAV45@1AAI@Z
_TEXT	SEGMENT
_content$GSCopy$ = -84					; size = 4
_length$GSCopy$ = -80					; size = 4
_nesting$ = -76						; size = 4
$T516605 = -72						; size = 28
$T516592 = -72						; size = 28
_propOpen$ = -44					; size = 28
__$EHRec$ = -12						; size = 12
_content$ = 8						; size = 4
_length$ = 12						; size = 4
?parseFirst@_Props@?1??FromXML@ASValue@@QAEXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@SAX0AAV45@1AAI@Z PROC ; `ASValue::FromXML'::`2'::_Props::parseFirst, COMDAT
; _xml$ = ecx
; _name$ = edx

; 319  : 	{

  00000	6a 48		 push	 72			; 00000048H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?parseFirst@_Props@?1??FromXML@ASValue@@QAEXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@SAX0AAV45@1AAI@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000c	8b 45 08	 mov	 eax, DWORD PTR _content$[ebp]

; 320  : 		std::wstring propOpen = xml.substr(0, xml.find(L">") + 1);

  0000f	6a 01		 push	 1
  00011	33 db		 xor	 ebx, ebx

; 335  : 		content = xml.substr(propOpen.length(), propClose - xml.c_str() - propOpen.length());

  00013	89 45 ac	 mov	 DWORD PTR _content$GSCopy$[ebp], eax
  00016	8b 45 0c	 mov	 eax, DWORD PTR _length$[ebp]
  00019	53		 push	 ebx
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_13MOEPKPHB@?$AA?$DO?$AA?$AA@
  0001f	8b f1		 mov	 esi, ecx
  00021	8b fa		 mov	 edi, edx
  00023	89 45 b0	 mov	 DWORD PTR _length$GSCopy$[ebp], eax
  00026	e8 00 00 00 00	 call	 ?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find
  0002b	40		 inc	 eax
  0002c	50		 push	 eax
  0002d	53		 push	 ebx
  0002e	8d 45 d4	 lea	 eax, DWORD PTR _propOpen$[ebp]
  00031	50		 push	 eax
  00032	8b ce		 mov	 ecx, esi
  00034	e8 00 00 00 00	 call	 ?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr
  00039	8b 45 e4	 mov	 eax, DWORD PTR _propOpen$[ebp+16]
  0003c	83 c0 f0	 add	 eax, -16		; fffffff0H
  0003f	50		 push	 eax
  00040	6a 0e		 push	 14			; 0000000eH
  00042	8d 45 b8	 lea	 eax, DWORD PTR $T516592[ebp]
  00045	50		 push	 eax
  00046	8d 4d d4	 lea	 ecx, DWORD PTR _propOpen$[ebp]
  00049	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  0004c	e8 00 00 00 00	 call	 ?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr
  00051	50		 push	 eax
  00052	8b cf		 mov	 ecx, edi
  00054	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00058	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  0005d	53		 push	 ebx
  0005e	6a 01		 push	 1
  00060	8d 4d b8	 lea	 ecx, DWORD PTR $T516592[ebp]
  00063	88 5d fc	 mov	 BYTE PTR __$EHRec$[ebp+8], bl
  00066	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
  0006b	83 7e 14 08	 cmp	 DWORD PTR [esi+20], 8
  0006f	72 04		 jb	 SHORT $LN31@parseFirst

; 321  : 		name = propOpen.substr(14, propOpen.length() - 14 - 2);
; 322  : 		const wchar_t* propClose = xml.c_str() + propOpen.length();

  00071	8b 3e		 mov	 edi, DWORD PTR [esi]
  00073	eb 02		 jmp	 SHORT $LN32@parseFirst
$LN31@parseFirst:
  00075	8b fe		 mov	 edi, esi
$LN32@parseFirst:
  00077	8b 45 e4	 mov	 eax, DWORD PTR _propOpen$[ebp+16]
  0007a	8d 3c 47	 lea	 edi, DWORD PTR [edi+eax*2]

; 323  : 		int nesting = 0;

  0007d	89 5d b4	 mov	 DWORD PTR _nesting$[ebp], ebx
$LL7@parseFirst:

; 324  : 		while (propClose - xml.c_str() < (int)xml.length())

  00080	83 7e 14 08	 cmp	 DWORD PTR [esi+20], 8
  00084	72 04		 jb	 SHORT $LN39@parseFirst
  00086	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00088	eb 02		 jmp	 SHORT $LN40@parseFirst
$LN39@parseFirst:
  0008a	8b ce		 mov	 ecx, esi
$LN40@parseFirst:
  0008c	8b d7		 mov	 edx, edi
  0008e	2b d1		 sub	 edx, ecx
  00090	d1 fa		 sar	 edx, 1
  00092	3b 56 10	 cmp	 edx, DWORD PTR [esi+16]
  00095	7d 3c		 jge	 SHORT $LN2@parseFirst

; 325  : 		{
; 326  : 			if (wcsncmp(propClose, L"<property id=", 13) == 0) ++nesting;

  00097	6a 0d		 push	 13			; 0000000dH
  00099	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@JHJDECBH@?$AA?$DM?$AAp?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AA?5?$AAi?$AAd?$AA?$DN?$AA?$AA@
  0009e	57		 push	 edi
  0009f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcsncmp
  000a5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a8	85 c0		 test	 eax, eax
  000aa	75 05		 jne	 SHORT $LN5@parseFirst
  000ac	ff 45 b4	 inc	 DWORD PTR _nesting$[ebp]

; 327  : 			else

  000af	eb 1d		 jmp	 SHORT $LN1@parseFirst
$LN5@parseFirst:

; 328  : 			if (wcsncmp(propClose, L"</property>", 10) == 0)

  000b1	6a 0a		 push	 10			; 0000000aH
  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_1BI@DKLJGDLN@?$AA?$DM?$AA?1?$AAp?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AA?$DO?$AA?$AA@
  000b8	57		 push	 edi
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcsncmp
  000bf	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c2	85 c0		 test	 eax, eax
  000c4	75 08		 jne	 SHORT $LN1@parseFirst

; 329  : 			{
; 330  : 				if (nesting != 0) --nesting;

  000c6	39 5d b4	 cmp	 DWORD PTR _nesting$[ebp], ebx
  000c9	74 08		 je	 SHORT $LN2@parseFirst
  000cb	ff 4d b4	 dec	 DWORD PTR _nesting$[ebp]
$LN1@parseFirst:

; 331  : 				else break;
; 332  : 			}
; 333  : 			++propClose;

  000ce	83 c7 02	 add	 edi, 2

; 334  : 		}

  000d1	eb ad		 jmp	 SHORT $LL7@parseFirst
$LN2@parseFirst:

; 335  : 		content = xml.substr(propOpen.length(), propClose - xml.c_str() - propOpen.length());

  000d3	83 7e 14 08	 cmp	 DWORD PTR [esi+20], 8
  000d7	72 04		 jb	 SHORT $LN47@parseFirst
  000d9	8b 06		 mov	 eax, DWORD PTR [esi]
  000db	eb 02		 jmp	 SHORT $LN48@parseFirst
$LN47@parseFirst:
  000dd	8b c6		 mov	 eax, esi
$LN48@parseFirst:
  000df	2b f8		 sub	 edi, eax
  000e1	d1 ff		 sar	 edi, 1
  000e3	2b 7d e4	 sub	 edi, DWORD PTR _propOpen$[ebp+16]
  000e6	8d 45 b8	 lea	 eax, DWORD PTR $T516605[ebp]
  000e9	57		 push	 edi
  000ea	ff 75 e4	 push	 DWORD PTR _propOpen$[ebp+16]
  000ed	8b ce		 mov	 ecx, esi
  000ef	50		 push	 eax
  000f0	e8 00 00 00 00	 call	 ?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr
  000f5	8b 75 ac	 mov	 esi, DWORD PTR _content$GSCopy$[ebp]
  000f8	50		 push	 eax
  000f9	8b ce		 mov	 ecx, esi
  000fb	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000ff	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  00104	53		 push	 ebx
  00105	6a 01		 push	 1
  00107	8d 4d b8	 lea	 ecx, DWORD PTR $T516605[ebp]
  0010a	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 336  : 		length = propOpen.length() + content.length() + 11;

  0010f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00112	8b 4d e4	 mov	 ecx, DWORD PTR _propOpen$[ebp+16]
  00115	8d 44 08 0b	 lea	 eax, DWORD PTR [eax+ecx+11]
  00119	8b 4d b0	 mov	 ecx, DWORD PTR _length$GSCopy$[ebp]

; 337  : 	}};

  0011c	53		 push	 ebx
  0011d	89 01		 mov	 DWORD PTR [ecx], eax
  0011f	6a 01		 push	 1
  00121	8d 4d d4	 lea	 ecx, DWORD PTR _propOpen$[ebp]
  00124	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
  00129	e8 00 00 00 00	 call	 __EH_epilog3_GS
  0012e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseFirst@_Props@?1??FromXML@ASValue@@QAEXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@SAX0AAV45@1AAI@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _propOpen$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?parseFirst@_Props@?1??FromXML@ASValue@@QAEXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@SAX0AAV45@1AAI@Z$1:
  00008	8d 4d b8	 lea	 ecx, DWORD PTR $T516592[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?parseFirst@_Props@?1??FromXML@ASValue@@QAEXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@SAX0AAV45@1AAI@Z$2:
  00010	8d 4d b8	 lea	 ecx, DWORD PTR $T516605[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?parseFirst@_Props@?1??FromXML@ASValue@@QAEXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@SAX0AAV45@1AAI@Z:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002c	33 c8		 xor	 ecx, eax
  0002e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00033	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?parseFirst@_Props@?1??FromXML@ASValue@@QAEXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@SAX0AAV45@1AAI@Z
  00038	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?parseFirst@_Props@?1??FromXML@ASValue@@QAEXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@SAX0AAV45@1AAI@Z ENDP ; `ASValue::FromXML'::`2'::_Props::parseFirst
PUBLIC	?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ$3
__ehfuncinfo$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
xdata$x	ENDS
;	COMDAT ?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
tv328 = -76						; size = 4
$T535003 = -76						; size = 4
__Nul$522482 = -72					; size = 28
__Str$522480 = -44					; size = 28
__Str$522477 = -44					; size = 28
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str, COMDAT
; _this$ = ecx

; 93   : 		{	// return string copy of character array

  00000	6a 40		 push	 64			; 00000040H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000c	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000f	8b f1		 mov	 esi, ecx
  00011	33 db		 xor	 ebx, ebx

; 94   : 		if (!(_Mystate & _Constant) && _Mysb::pptr() != 0)

  00013	f6 46 40 02	 test	 BYTE PTR [esi+64], 2
  00017	89 5d b4	 mov	 DWORD PTR $T535003[ebp], ebx
  0001a	75 50		 jne	 SHORT $LN4@str
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00022	85 c0		 test	 eax, eax
  00024	74 46		 je	 SHORT $LN4@str

; 95   : 			{	// writable, make string from write buffer
; 96   : 			_Mystr _Str(_Mysb::pbase(), (_Seekhigh < _Mysb::pptr()
; 97   : 				? _Mysb::pptr() : _Seekhigh) - _Mysb::pbase());

  00026	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  00029	8b ce		 mov	 ecx, esi
  0002b	89 45 b4	 mov	 DWORD PTR tv328[ebp], eax
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00034	39 45 b4	 cmp	 DWORD PTR tv328[ebp], eax
  00037	73 0a		 jae	 SHORT $LN7@str
  00039	8b ce		 mov	 ecx, esi
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00041	eb 03		 jmp	 SHORT $LN8@str
$LN7@str:
  00043	8b 45 b4	 mov	 eax, DWORD PTR tv328[ebp]
$LN8@str:
  00046	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00049	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0004b	2b c1		 sub	 eax, ecx
  0004d	d1 f8		 sar	 eax, 1
  0004f	50		 push	 eax
  00050	51		 push	 ecx
  00051	8d 4d d4	 lea	 ecx, DWORD PTR __Str$522477[ebp]
  00054	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 98   : 			return (_Str);

  00059	8d 45 d4	 lea	 eax, DWORD PTR __Str$522477[ebp]
  0005c	50		 push	 eax
  0005d	8b cf		 mov	 ecx, edi
  0005f	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00062	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00067	8d 4d d4	 lea	 ecx, DWORD PTR __Str$522477[ebp]
  0006a	eb 6f		 jmp	 SHORT $LN65@str
$LN4@str:

; 99   : 			}
; 100  : 		else if (!(_Mystate & _Noread) && _Mysb::gptr() != 0)

  0006c	f6 46 40 04	 test	 BYTE PTR [esi+64], 4
  00070	75 44		 jne	 SHORT $LN2@str
  00072	8b ce		 mov	 ecx, esi
  00074	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0007a	85 c0		 test	 eax, eax
  0007c	74 38		 je	 SHORT $LN2@str

; 101  : 			{	// readable, make string from read buffer
; 102  : 			_Mystr _Str(_Mysb::eback(), _Mysb::egptr() - _Mysb::eback());

  0007e	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  00081	8b 00		 mov	 eax, DWORD PTR [eax]
  00083	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00086	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00088	8d 04 41	 lea	 eax, DWORD PTR [ecx+eax*2]
  0008b	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0008e	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00090	2b c1		 sub	 eax, ecx
  00092	d1 f8		 sar	 eax, 1
  00094	50		 push	 eax
  00095	51		 push	 ecx
  00096	8d 4d d4	 lea	 ecx, DWORD PTR __Str$522480[ebp]
  00099	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0009e	33 f6		 xor	 esi, esi

; 103  : 			return (_Str);

  000a0	8d 45 d4	 lea	 eax, DWORD PTR __Str$522480[ebp]
  000a3	46		 inc	 esi
  000a4	50		 push	 eax
  000a5	8b cf		 mov	 ecx, edi
  000a7	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
  000aa	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000af	53		 push	 ebx
  000b0	56		 push	 esi
  000b1	8d 4d d4	 lea	 ecx, DWORD PTR __Str$522480[ebp]
  000b4	eb 28		 jmp	 SHORT $LN66@str
$LN2@str:

; 104  : 			}
; 105  : 		else
; 106  : 			{	// inaccessible, return empty string
; 107  : 			_Mystr _Nul;

  000b6	33 c0		 xor	 eax, eax
  000b8	c7 45 cc 07 00
	00 00		 mov	 DWORD PTR __Nul$522482[ebp+20], 7
  000bf	89 5d c8	 mov	 DWORD PTR __Nul$522482[ebp+16], ebx
  000c2	66 89 45 b8	 mov	 WORD PTR __Nul$522482[ebp], ax

; 108  : 			return (_Nul);

  000c6	8d 45 b8	 lea	 eax, DWORD PTR __Nul$522482[ebp]
  000c9	50		 push	 eax
  000ca	8b cf		 mov	 ecx, edi
  000cc	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  000d3	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000d8	8d 4d b8	 lea	 ecx, DWORD PTR __Nul$522482[ebp]
$LN65@str:
  000db	53		 push	 ebx
  000dc	6a 01		 push	 1
$LN66@str:
  000de	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
  000e3	8b c7		 mov	 eax, edi

; 109  : 			}
; 110  : 		}

  000e5	e8 00 00 00 00	 call	 __EH_epilog3_GS
  000ea	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR __Str$522477[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ$2:
  00008	8d 4d d4	 lea	 ecx, DWORD PTR __Str$522480[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ$3:
  00010	8d 4d b8	 lea	 ecx, DWORD PTR __Nul$522482[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a b0	 mov	 ecx, DWORD PTR [edx-80]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002c	33 c8		 xor	 ecx, eax
  0002e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00033	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
  00038	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
PUBLIC	?_Destroy@?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@IAEXPAUASValue@@0@Z ; std::vector<ASValue,std::allocator<ASValue> >::_Destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@IAEXPAUASValue@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@IAEXPAUASValue@@0@Z PROC ; std::vector<ASValue,std::allocator<ASValue> >::_Destroy, COMDAT
; _this$ = ecx

; 1269 : 		{	// destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0a		 jmp	 SHORT $LN23@Destroy
$LL9@Destroy:
  00009	8b ce		 mov	 ecx, esi
  0000b	e8 00 00 00 00	 call	 ??1ASValue@@QAE@XZ	; ASValue::~ASValue
  00010	83 c6 04	 add	 esi, 4
$LN23@Destroy:
  00013	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00016	75 f1		 jne	 SHORT $LL9@Destroy
  00018	5e		 pop	 esi

; 1271 : 		}

  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?_Destroy@?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@IAEXPAUASValue@@0@Z ENDP ; std::vector<ASValue,std::allocator<ASValue> >::_Destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@2@@Z ; std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >::destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@2@@Z PROC ; std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 213  : 		_Destroy(_Ptr);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ

; 214  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?destroy@?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@2@@Z ENDP ; std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@$$QAV32@@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@$$QAV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@$$QAV32@@Z$0
__ehfuncinfo$?construct@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@$$QAV32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@$$QAV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@$$QAV32@@Z
_TEXT	SEGMENT
$T535261 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@$$QAV32@@Z PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?construct@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@$$QAV32@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0000f	89 4d f0	 mov	 DWORD PTR $T535261[ebp], ecx
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 c9		 test	 ecx, ecx
  00018	74 08		 je	 SHORT $LN3@construct@2
  0001a	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN3@construct@2:

; 203  : 		}

  00022	e8 00 00 00 00	 call	 __EH_epilog3
  00027	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@$$QAV32@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T535261[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$?construct@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@$$QAV32@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?construct@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@$$QAV32@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@$$QAV32@@Z ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 95   : 	{	// destroy [_First, _Last), arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 96   : 	for (; _First != _Last; ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0e		 jmp	 SHORT $LN21@Destroy_ra@3
$LL3@Destroy_ra@3:

; 97   : 		_Dest_val(_Al, _First);

  00009	6a 00		 push	 0
  0000b	6a 01		 push	 1
  0000d	8b ce		 mov	 ecx, esi
  0000f	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
  00014	83 c6 1c	 add	 esi, 28			; 0000001cH
$LN21@Destroy_ra@3:

; 96   : 	for (; _First != _Last; ++_First)

  00017	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  0001a	75 ed		 jne	 SHORT $LL3@Destroy_ra@3
  0001c	5e		 pop	 esi

; 98   : 	}

  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Insert
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT
$T535342 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Next$ = 16						; size = 4
__Node$ = 16						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1089 : 		{	// try to insert node at _Node using _Where as a hint

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	53		 push	 ebx

; 1090 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1091 : 		if (_Where._Getcont() != this)
; 1092 : 			_DEBUG_ERROR("map/set insert iterator outside range");
; 1093 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1094 : 
; 1095 : 		const value_type& _Val = this->_Myval(_Node);

  00006	8b 5d 10	 mov	 ebx, DWORD PTR __Node$[ebp]
  00009	56		 push	 esi
  0000a	8b f1		 mov	 esi, ecx

; 1096 : 
; 1097 : 		const_iterator _Next;
; 1098 : 		bool _Leftish = false;	// assume nearest point is end of sequence
; 1099 : 
; 1100 : 		if (size() == 0)

  0000c	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  00010	57		 push	 edi
  00011	8d 7b 0c	 lea	 edi, DWORD PTR [ebx+12]
  00014	75 16		 jne	 SHORT $LN33@Insert@2

; 1101 : 			return (_Insert(true, this->_Myhead, _Node));	// empty tree

  00016	53		 push	 ebx
  00017	ff 76 04	 push	 DWORD PTR [esi+4]
$LN336@Insert@2:
  0001a	6a 01		 push	 1
$LN335@Insert@2:
  0001c	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  0001f	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Insert
  00024	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00027	e9 ff 00 00 00	 jmp	 $LN34@Insert@2
$LN33@Insert@2:

; 1102 : 		else if (this->_Multi)
; 1103 : 			{	// insert even if duplicate
; 1104 : 			if (_Where == begin())
; 1105 : 				{	// insert at beginning if before first element
; 1106 : 				if (!_DEBUG_LT_PRED(this->comp,
; 1107 : 					this->_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 1108 : 					return (_Insert(true, _Where._Mynode(), _Node));
; 1109 : 				_Leftish = true;	// nearest point is beginning of sequence
; 1110 : 				}
; 1111 : 			else if (_Where == end())
; 1112 : 				{	// insert at end if after last element
; 1113 : 				if (!_DEBUG_LT_PRED(this->comp,
; 1114 : 					this->_Kfn(_Val), this->_Key(_Rmost())))
; 1115 : 					return (_Insert(false, _Rmost(), _Node));
; 1116 : 				}
; 1117 : 			else if (!_DEBUG_LT_PRED(this->comp,
; 1118 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1119 : 				&& !_DEBUG_LT_PRED(this->comp,
; 1120 : 					this->_Kfn(_Val),
; 1121 : 					this->_Key((--(_Next = _Where))._Mynode())))
; 1122 : 				{	// insert before _Where
; 1123 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))
; 1124 : 					return (_Insert(false, _Next._Mynode(), _Node));
; 1125 : 				else
; 1126 : 					return (_Insert(true, _Where._Mynode(), _Node));
; 1127 : 				}
; 1128 : 			else if (!_DEBUG_LT_PRED(this->comp,
; 1129 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1130 : 				&& (++(_Next = _Where) == end()
; 1131 : 					|| !_DEBUG_LT_PRED(this->comp,
; 1132 : 						this->_Key(_Next._Mynode()), this->_Kfn(_Val))))
; 1133 : 				{	// insert after _Where
; 1134 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))
; 1135 : 					return (_Insert(false, _Where._Mynode(), _Node));
; 1136 : 				else
; 1137 : 					return (_Insert(true, _Next._Mynode(), _Node));
; 1138 : 				}
; 1139 : 			else
; 1140 : 				_Leftish = true;	// nearest point is beginning of sequence
; 1141 : 			}
; 1142 : 		else
; 1143 : 			{	// insert only if unique
; 1144 : 			if (_Where == begin())

  0002c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00032	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00034	75 1e		 jne	 SHORT $LN14@Insert@2

; 1145 : 				{	// insert at beginning if before first element
; 1146 : 				if (_DEBUG_LT_PRED(this->comp,

  00036	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00039	51		 push	 ecx
  0003a	8b cf		 mov	 ecx, edi
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??MioHashString@@QBE_NABV0@@Z
  00042	84 c0		 test	 al, al
  00044	0f 84 cc 00 00
	00		 je	 $LN332@Insert@2

; 1147 : 					this->_Kfn(_Val), this->_Key(_Where._Mynode())))
; 1148 : 					return (_Insert(true, _Where._Mynode(), _Node));

  0004a	53		 push	 ebx
  0004b	ff 75 0c	 push	 DWORD PTR __Where$[ebp]
  0004e	6a 01		 push	 1
$LN338@Insert@2:
  00050	8b ce		 mov	 ecx, esi
  00052	eb c8		 jmp	 SHORT $LN335@Insert@2
$LN14@Insert@2:

; 1149 : 				}
; 1150 : 			else if (_Where == end())

  00054	3b c8		 cmp	 ecx, eax
  00056	75 20		 jne	 SHORT $LN11@Insert@2

; 1151 : 				{	// insert at end if after last element
; 1152 : 				if (_DEBUG_LT_PRED(this->comp,

  00058	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0005b	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0005e	57		 push	 edi
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??MioHashString@@QBE_NABV0@@Z
  00065	84 c0		 test	 al, al
  00067	0f 84 a9 00 00
	00		 je	 $LN332@Insert@2

; 1153 : 					this->_Key(_Rmost()), this->_Kfn(_Val)))
; 1154 : 					return (_Insert(false, _Rmost(), _Node));

  0006d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00070	53		 push	 ebx
  00071	ff 70 08	 push	 DWORD PTR [eax+8]
  00074	6a 00		 push	 0
  00076	eb d8		 jmp	 SHORT $LN338@Insert@2
$LN11@Insert@2:

; 1155 : 				}
; 1156 : 			else if (_DEBUG_LT_PRED(this->comp,
; 1157 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1158 : 				&& _DEBUG_LT_PRED(this->comp,

  00078	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0007b	51		 push	 ecx
  0007c	8b cf		 mov	 ecx, edi
  0007e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??MioHashString@@QBE_NABV0@@Z
  00084	84 c0		 test	 al, al
  00086	74 3b		 je	 SHORT $LN333@Insert@2
  00088	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  0008b	8d 4d 10	 lea	 ecx, DWORD PTR __Next$[ebp]
  0008e	89 45 10	 mov	 DWORD PTR __Next$[ebp], eax
  00091	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::operator--
  00096	57		 push	 edi
  00097	8b 7d 10	 mov	 edi, DWORD PTR __Next$[ebp]
  0009a	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??MioHashString@@QBE_NABV0@@Z
  000a3	84 c0		 test	 al, al
  000a5	74 1c		 je	 SHORT $LN333@Insert@2

; 1159 : 					this->_Key((--(_Next = _Where))._Mynode()),
; 1160 : 					this->_Kfn(_Val)))
; 1161 : 				{	// insert before _Where
; 1162 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))

  000a7	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000aa	80 78 21 00	 cmp	 BYTE PTR [eax+33], 0

; 1163 : 					return (_Insert(false, _Next._Mynode(), _Node));

  000ae	53		 push	 ebx
  000af	8b ce		 mov	 ecx, esi
  000b1	74 08		 je	 SHORT $LN7@Insert@2
$LN337@Insert@2:
  000b3	57		 push	 edi
  000b4	6a 00		 push	 0
  000b6	e9 61 ff ff ff	 jmp	 $LN335@Insert@2
$LN7@Insert@2:

; 1164 : 				else
; 1165 : 					return (_Insert(true, _Where._Mynode(), _Node));

  000bb	ff 75 0c	 push	 DWORD PTR __Where$[ebp]
  000be	e9 57 ff ff ff	 jmp	 $LN336@Insert@2
$LN333@Insert@2:

; 1166 : 				}
; 1167 : 			else if (_DEBUG_LT_PRED(this->comp,
; 1168 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1169 : 				&& (++(_Next = _Where) == end()
; 1170 : 					|| _DEBUG_LT_PRED(this->comp,

  000c3	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  000c6	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  000c9	50		 push	 eax
  000ca	83 c1 0c	 add	 ecx, 12			; 0000000cH
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??MioHashString@@QBE_NABV0@@Z
  000d3	84 c0		 test	 al, al
  000d5	74 3f		 je	 SHORT $LN332@Insert@2
  000d7	8b 7d 0c	 mov	 edi, DWORD PTR __Where$[ebp]
  000da	8d 4d 10	 lea	 ecx, DWORD PTR __Next$[ebp]
  000dd	89 7d 10	 mov	 DWORD PTR __Next$[ebp], edi
  000e0	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >,std::_Iterator_base0>::operator++
  000e5	8b 45 10	 mov	 eax, DWORD PTR __Next$[ebp]
  000e8	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  000eb	74 17		 je	 SHORT $LN3@Insert@2
  000ed	83 c0 0c	 add	 eax, 12			; 0000000cH
  000f0	50		 push	 eax
  000f1	8d 4b 0c	 lea	 ecx, DWORD PTR [ebx+12]
  000f4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??MioHashString@@QBE_NABV0@@Z
  000fa	84 c0		 test	 al, al
  000fc	74 18		 je	 SHORT $LN332@Insert@2
  000fe	8b 7d 0c	 mov	 edi, DWORD PTR __Where$[ebp]
  00101	8b 45 10	 mov	 eax, DWORD PTR __Next$[ebp]
$LN3@Insert@2:

; 1171 : 						this->_Kfn(_Val), this->_Key(_Next._Mynode()))))
; 1172 : 				{	// insert after _Where
; 1173 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))

  00104	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00107	80 79 21 00	 cmp	 BYTE PTR [ecx+33], 0

; 1174 : 					return (_Insert(false, _Where._Mynode(), _Node));

  0010b	53		 push	 ebx
  0010c	8b ce		 mov	 ecx, esi
  0010e	75 a3		 jne	 SHORT $LN337@Insert@2

; 1175 : 				else
; 1176 : 					return (_Insert(true, _Next._Mynode(), _Node));

  00110	50		 push	 eax
  00111	e9 04 ff ff ff	 jmp	 $LN336@Insert@2
$LN332@Insert@2:

; 1177 : 				}
; 1178 : 			}
; 1179 : 
; 1180 : 		return (_Linsert(_Node, _Leftish).first);	// try usual insert

  00116	6a 00		 push	 0
  00118	53		 push	 ebx
  00119	8d 45 f8	 lea	 eax, DWORD PTR $T535342[ebp]
  0011c	50		 push	 eax
  0011d	8b ce		 mov	 ecx, esi
  0011f	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Linsert
  00124	8b 08		 mov	 ecx, DWORD PTR [eax]
  00126	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00129	89 08		 mov	 DWORD PTR [eax], ecx
$LN34@Insert@2:
  0012b	5f		 pop	 edi
  0012c	5e		 pop	 esi
  0012d	5b		 pop	 ebx

; 1181 : 		}

  0012e	c9		 leave
  0012f	c2 0c 00	 ret	 12			; 0000000cH
?_Insert@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	?str@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
;	COMDAT ?str@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
$T536010 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str, COMDAT
; _this$ = ecx

; 713  : 		{	// return string copy of character array

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 714  : 		return (_Stringbuffer.str());

  00004	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  00007	83 65 fc 00	 and	 DWORD PTR $T536010[ebp], 0
  0000b	83 c1 18	 add	 ecx, 24			; 00000018H
  0000e	e8 00 00 00 00	 call	 ?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
  00013	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 715  : 		}

  00016	c9		 leave
  00017	c2 04 00	 ret	 4
?str@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@IAEXXZ ; std::vector<ASValue,std::allocator<ASValue> >::_Tidy
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@IAEXXZ PROC ; std::vector<ASValue,std::allocator<ASValue> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 27		 je	 SHORT $LN24@Tidy@3

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	53		 push	 ebx
  00009	57		 push	 edi
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);

  00010	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
  00015	eb 0a		 jmp	 SHORT $LN28@Tidy@3
$LL12@Tidy@3:
  00017	8b cf		 mov	 ecx, edi
  00019	e8 00 00 00 00	 call	 ??1ASValue@@QAE@XZ	; ASValue::~ASValue
  0001e	83 c7 04	 add	 edi, 4
$LN28@Tidy@3:
  00021	3b fb		 cmp	 edi, ebx
  00023	75 f2		 jne	 SHORT $LL12@Tidy@3

; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  00025	ff 36		 push	 DWORD PTR [esi]
  00027	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002c	59		 pop	 ecx
  0002d	5f		 pop	 edi
  0002e	5b		 pop	 ebx
$LN24@Tidy@3:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  0002f	33 c0		 xor	 eax, eax
  00031	89 06		 mov	 DWORD PTR [esi], eax

; 1310 : 		this->_Mylast = 0;

  00033	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1311 : 		this->_Myend = 0;

  00036	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00039	5e		 pop	 esi

; 1312 : 		}

  0003a	c3		 ret	 0
?_Tidy@?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@IAEXXZ ENDP ; std::vector<ASValue,std::allocator<ASValue> >::_Tidy
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Cons_val@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV20@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Cons_val@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV20@@Z$0
__ehfuncinfo$??$_Cons_val@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV20@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Cons_val@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV20@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV20@@Z
_TEXT	SEGMENT
$T536138 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV20@@Z PROC ; std::_Cons_val<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 279  : 	{	// construct using allocator

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Cons_val@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV20@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  0000f	89 4d f0	 mov	 DWORD PTR $T536138[ebp], ecx
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 c9		 test	 ecx, ecx
  00018	74 08		 je	 SHORT $LN7@Cons_val
  0001a	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN7@Cons_val:

; 281  : 	}

  00022	e8 00 00 00 00	 call	 __EH_epilog3
  00027	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Cons_val@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV20@@Z$0:
  00000	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T536138[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$??$_Cons_val@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV20@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Cons_val@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV20@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Cons_val@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV20@@Z ENDP ; std::_Cons_val<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$536157 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 87   : 	{	// destroy [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$536157[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Al$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 89   : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@std@@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@0@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@std@@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@0@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@std@@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@0@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >, COMDAT

; 286  : 	{	// destroy using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]

; 288  : 	}

  00006	5d		 pop	 ebp

; 287  : 	_Alval.destroy(_Pdest);

  00007	e9 00 00 00 00	 jmp	 ??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ
??$_Dest_val@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@std@@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@0@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >
_TEXT	ENDS
PUBLIC	??$insert@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::insert<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??$insert@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
??$insert@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::insert<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >, COMDAT
; _this$ = ecx

; 760  : 		typename _STD tr1::enable_if<!_STD tr1::is_same<const_iterator,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 761  : 			typename _STD tr1::remove_reference<_Valty>::type>::value,
; 762  : 				iterator>::type
; 763  : 		insert(const_iterator _Where,
; 764  : 			_Valty&& _Val)
; 765  : 		{	// try to insert node with value _Val using _Where as a hint
; 766  : 		return (_Insert(_Where,
; 767  : 			this->_Buynode(_STD forward<_Valty>(_Val))));

  00004	ff 75 10	 push	 DWORD PTR __Val$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Buynode<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >
  0000e	50		 push	 eax
  0000f	ff 75 0c	 push	 DWORD PTR __Where$[ebp]
  00012	8b ce		 mov	 ecx, esi
  00014	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  00017	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Insert
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001f	5e		 pop	 esi

; 768  : 		}

  00020	5d		 pop	 ebp
  00021	c2 0c 00	 ret	 12			; 0000000cH
??$insert@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::insert<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V12@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V12@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V12@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V12@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V12@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V12@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V12@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V12@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V12@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V12@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V12@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Uninit_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V12@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;

  0000c	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 428  : 
; 429  : 	_TRY_BEGIN

  0000f	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00013	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00016	89 45 ec	 mov	 DWORD PTR __Next$[ebp], eax
$LL6@Uninit_mov:

; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  00019	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  0001c	74 37		 je	 SHORT $LN4@Uninit_mov

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

  0001e	56		 push	 esi
  0001f	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00022	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  00025	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  0002a	83 45 10 1c	 add	 DWORD PTR __Dest$[ebp], 28 ; 0000001cH
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00031	83 c6 1c	 add	 esi, 28			; 0000001cH
  00034	eb e3		 jmp	 SHORT $LL6@Uninit_mov
__catch$??$_Uninit_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V12@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)

  00036	8b 75 ec	 mov	 esi, DWORD PTR __Next$[ebp]
  00039	eb 0c		 jmp	 SHORT $LN34@Uninit_mov
$LL3@Uninit_mov:

; 434  : 		_Dest_val(_Al, _Next);

  0003b	6a 01		 push	 1
  0003d	8b ce		 mov	 ecx, esi
  0003f	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
  00044	83 c6 1c	 add	 esi, 28			; 0000001cH
$LN34@Uninit_mov:

; 435  : 	_RERAISE;

  00047	6a 00		 push	 0
  00049	3b 75 10	 cmp	 esi, DWORD PTR __Dest$[ebp]
  0004c	75 ed		 jne	 SHORT $LL3@Uninit_mov
  0004e	6a 00		 push	 0
  00050	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN35@Uninit_mov:
$LN4@Uninit_mov:

; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

  00055	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 438  : 	}

  00058	e8 00 00 00 00	 call	 __EH_epilog3
  0005d	c3		 ret	 0
$LN33@Uninit_mov:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V12@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V12@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V12@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??_C@_08IAODCIJN@?$DM?1array?$DO?$AA@		; `string'
PUBLIC	??_C@_1BO@KALEKEDO@?$AA?$DM?$AAp?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AA?5?$AAi?$AAd?$AA?$DN?$AA?8?$AA?$AA@ ; `string'
PUBLIC	??_C@_15EEGAOEEA@?$AA?8?$AA?$DO?$AA?$AA@	; `string'
PUBLIC	?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; ASValue::ToXML
PUBLIC	??_C@_07DJPJOGFE@?$DMarray?$DO?$AA@		; `string'
PUBLIC	___$ReturnUdt$GSCopy$
EXTRN	__imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@I@Z:PROC
;	COMDAT ??_C@_08IAODCIJN@?$DM?1array?$DO?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\flashplayertodirectx\include\asinterface.inl
CONST	SEGMENT
??_C@_08IAODCIJN@?$DM?1array?$DO?$AA@ DB '</array>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@KALEKEDO@?$AA?$DM?$AAp?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AA?5?$AAi?$AAd?$AA?$DN?$AA?8?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@KALEKEDO@?$AA?$DM?$AAp?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AA?5?$AAi?$AAd?$AA?$DN?$AA?8?$AA?$AA@ DB '<'
	DB	00H, 'p', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H
	DB	't', 00H, 'y', 00H, ' ', 00H, 'i', 00H, 'd', 00H, '=', 00H, ''''
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_15EEGAOEEA@?$AA?8?$AA?$DO?$AA?$AA@
CONST	SEGMENT
??_C@_15EEGAOEEA@?$AA?8?$AA?$DO?$AA?$AA@ DB '''', 00H, '>', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DJPJOGFE@?$DMarray?$DO?$AA@
CONST	SEGMENT
??_C@_07DJPJOGFE@?$DMarray?$DO?$AA@ DB '<array>', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ToXML@_Array@?1??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$vector@UASValue@@V?$allocator@UASValue@@@std@@@4@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ToXML@_Array@?1??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$vector@UASValue@@V?$allocator@UASValue@@@std@@@4@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?ToXML@_Array@?1??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$vector@UASValue@@V?$allocator@UASValue@@@std@@@4@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?ToXML@_Array@?1??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$vector@UASValue@@V?$allocator@UASValue@@@std@@@4@@Z$1
__ehfuncinfo$?ToXML@_Array@?1??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$vector@UASValue@@V?$allocator@UASValue@@@std@@@4@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?ToXML@_Array@?1??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$vector@UASValue@@V?$allocator@UASValue@@@std@@@4@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?ToXML@_Array@?1??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$vector@UASValue@@V?$allocator@UASValue@@@std@@@4@@Z
_TEXT	SEGMENT
_s$ = -220						; size = 168
$T536281 = -52						; size = 4
___$ReturnUdt$GSCopy$ = -48				; size = 4
$T516216 = -44						; size = 28
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?ToXML@_Array@?1??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$vector@UASValue@@V?$allocator@UASValue@@@std@@@4@@Z PROC ; `ASValue::ToXML'::`2'::_Array::ToXML, COMDAT
; _a$ = edi

; 279  : 	{

  00000	68 d0 00 00 00	 push	 208			; 000000d0H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?ToXML@_Array@?1??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$vector@UASValue@@V?$allocator@UASValue@@@std@@@4@@Z
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS

; 287  : 		return s.str();

  0000f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00012	33 f6		 xor	 esi, esi
  00014	46		 inc	 esi
  00015	56		 push	 esi
  00016	33 db		 xor	 ebx, ebx
  00018	6a 03		 push	 3
  0001a	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  00020	89 45 d0	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], eax
  00023	89 5d cc	 mov	 DWORD PTR $T536281[ebp], ebx
  00026	e8 00 00 00 00	 call	 ??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0002b	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp+16]
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_07DJPJOGFE@?$DMarray?$DO?$AA@
  00036	50		 push	 eax
  00037	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
  0003a	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  0003f	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00042	2b 37		 sub	 esi, DWORD PTR [edi]
  00044	59		 pop	 ecx
  00045	c1 fe 02	 sar	 esi, 2
  00048	59		 pop	 ecx
  00049	85 f6		 test	 esi, esi
  0004b	74 66		 je	 SHORT $LN1@ToXML
$LL3@ToXML:

; 280  : 		std::wstringstream s;
; 281  : 		s << "<array>";
; 282  : 		for (size_t i = 0, e = (unsigned int)a.size(); i < e; ++i)

  0004d	8b 07		 mov	 eax, DWORD PTR [edi]
  0004f	8d 0c 98	 lea	 ecx, DWORD PTR [eax+ebx*4]

; 283  : 		{
; 284  : 			s << L"<property id='" << i << L"'>" << a[i].ToXML() << L"</property>";

  00052	8d 45 d4	 lea	 eax, DWORD PTR $T516216[ebp]
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 ?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; ASValue::ToXML
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1BI@DKLJGDLN@?$AA?$DM?$AA?1?$AAp?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AA?$DO?$AA?$AA@
  00060	50		 push	 eax
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_15EEGAOEEA@?$AA?8?$AA?$DO?$AA?$AA@
  00066	53		 push	 ebx
  00067	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp+16]
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@KALEKEDO@?$AA?$DM?$AAp?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AA?5?$AAi?$AAd?$AA?$DN?$AA?8?$AA?$AA@
  00072	50		 push	 eax
  00073	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00077	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  0007c	59		 pop	 ecx
  0007d	59		 pop	 ecx
  0007e	8b c8		 mov	 ecx, eax
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@I@Z
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  0008c	59		 pop	 ecx
  0008d	59		 pop	 ecx
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00094	59		 pop	 ecx
  00095	59		 pop	 ecx
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  0009c	59		 pop	 ecx
  0009d	59		 pop	 ecx
  0009e	6a 00		 push	 0
  000a0	6a 01		 push	 1
  000a2	8d 4d d4	 lea	 ecx, DWORD PTR $T516216[ebp]
  000a5	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000a9	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
  000ae	43		 inc	 ebx
  000af	3b de		 cmp	 ebx, esi
  000b1	72 9a		 jb	 SHORT $LL3@ToXML
$LN1@ToXML:

; 285  : 		}
; 286  : 		s << "</array>";

  000b3	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp+16]
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_08IAODCIJN@?$DM?1array?$DO?$AA@
  000be	50		 push	 eax
  000bf	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  000c4	59		 pop	 ecx
  000c5	59		 pop	 ecx

; 287  : 		return s.str();

  000c6	ff 75 d0	 push	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
  000c9	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  000cf	e8 00 00 00 00	 call	 ?str@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
  000d4	8d 4d 84	 lea	 ecx, DWORD PTR _s$[ebp+96]
  000d7	c7 45 cc 01 00
	00 00		 mov	 DWORD PTR $T536281[ebp], 1
  000de	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000e2	e8 00 00 00 00	 call	 ??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000e7	8d 4d 84	 lea	 ecx, DWORD PTR _s$[ebp+96]
  000ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ
  000f0	8b 45 d0	 mov	 eax, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]

; 288  : 	}};

  000f3	e8 00 00 00 00	 call	 __EH_epilog3_GS
  000f8	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ToXML@_Array@?1??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$vector@UASValue@@V?$allocator@UASValue@@@std@@@4@@Z$0:
  00000	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
__unwindfunclet$?ToXML@_Array@?1??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$vector@UASValue@@V?$allocator@UASValue@@@std@@@4@@Z$1:
  0000b	8d 4d d4	 lea	 ecx, DWORD PTR $T516216[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?ToXML@_Array@?1??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$vector@UASValue@@V?$allocator@UASValue@@@std@@@4@@Z$2:
  00013	8b 45 cc	 mov	 eax, DWORD PTR $T536281[ebp]
  00016	83 e0 01	 and	 eax, 1
  00019	0f 84 0c 00 00
	00		 je	 $LN15@ToXML
  0001f	83 65 cc fe	 and	 DWORD PTR $T536281[ebp], -2 ; fffffffeH
  00023	8b 4d d0	 mov	 ecx, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN15@ToXML:
  0002b	c3		 ret	 0
__ehhandler$?ToXML@_Array@?1??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$vector@UASValue@@V?$allocator@UASValue@@@std@@@4@@Z:
  0002c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00030	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00033	8b 8a 20 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-224]
  00039	33 c8		 xor	 ecx, eax
  0003b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00040	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00043	33 c8		 xor	 ecx, eax
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ToXML@_Array@?1??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$vector@UASValue@@V?$allocator@UASValue@@@std@@@4@@Z
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ToXML@_Array@?1??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$vector@UASValue@@V?$allocator@UASValue@@@std@@@4@@Z ENDP ; `ASValue::ToXML'::`2'::_Array::ToXML
PUBLIC	??_C@_09OFADAAIL@?$DM?1object?$DO?$AA@		; `string'
PUBLIC	??_C@_0P@FMJALFCA@?$DMproperty?5id?$DN?8?$AA@	; `string'
PUBLIC	??_C@_02HMHJGNPF@?8?$DO?$AA@			; `string'
PUBLIC	??_C@_0M@GIEBGHNM@?$DM?1property?$DO?$AA@	; `string'
PUBLIC	??_C@_08HACGAFB@?$DMobject?$DO?$AA@		; `string'
PUBLIC	___$ReturnUdt$GSCopy$
;	COMDAT ??_C@_09OFADAAIL@?$DM?1object?$DO?$AA@
CONST	SEGMENT
??_C@_09OFADAAIL@?$DM?1object?$DO?$AA@ DB '</object>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FMJALFCA@?$DMproperty?5id?$DN?8?$AA@
CONST	SEGMENT
??_C@_0P@FMJALFCA@?$DMproperty?5id?$DN?8?$AA@ DB '<property id=''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02HMHJGNPF@?8?$DO?$AA@
CONST	SEGMENT
??_C@_02HMHJGNPF@?8?$DO?$AA@ DB '''>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GIEBGHNM@?$DM?1property?$DO?$AA@
CONST	SEGMENT
??_C@_0M@GIEBGHNM@?$DM?1property?$DO?$AA@ DB '</property>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HACGAFB@?$DMobject?$DO?$AA@
CONST	SEGMENT
??_C@_08HACGAFB@?$DMobject?$DO?$AA@ DB '<object>', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ToXML@_Object@?2??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@4@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ToXML@_Object@?2??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@4@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?ToXML@_Object@?2??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@4@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?ToXML@_Object@?2??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@4@@Z$1
__ehfuncinfo$?ToXML@_Object@?2??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@4@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?ToXML@_Object@?2??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@4@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?ToXML@_Object@?2??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@4@@Z
_TEXT	SEGMENT
_s$ = -224						; size = 168
$T536323 = -56						; size = 4
_i$516327 = -52						; size = 4
___$ReturnUdt$GSCopy$ = -48				; size = 4
$T516498 = -44						; size = 28
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?ToXML@_Object@?2??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@4@@Z PROC ; `ASValue::ToXML'::`3'::_Object::ToXML, COMDAT
; _o$ = ecx

; 291  : 	{

  00000	68 d4 00 00 00	 push	 212			; 000000d4H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?ToXML@_Object@?2??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@4@@Z
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS

; 299  : 		return s.str();

  0000f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00012	83 65 c8 00	 and	 DWORD PTR $T536323[ebp], 0
  00016	33 db		 xor	 ebx, ebx
  00018	43		 inc	 ebx
  00019	53		 push	 ebx
  0001a	8b f1		 mov	 esi, ecx
  0001c	6a 03		 push	 3
  0001e	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  00024	89 45 d0	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], eax
  00027	e8 00 00 00 00	 call	 ??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0002c	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp+16]
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_08HACGAFB@?$DMobject?$DO?$AA@
  00037	50		 push	 eax
  00038	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  0003b	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  00040	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00043	8b 06		 mov	 eax, DWORD PTR [esi]
  00045	59		 pop	 ecx
  00046	59		 pop	 ecx
  00047	89 45 cc	 mov	 DWORD PTR _i$516327[ebp], eax
  0004a	eb 6b		 jmp	 SHORT $LN63@ToXML@2

; 292  : 		std::wstringstream s;
; 293  : 		s << "<object>";
; 294  : 		for (Object::const_iterator i = o.begin(), e = o.end(); i != e; ++i)

$LL36@ToXML@2:

; 295  : 		{
; 296  : 			s << "<property id='" << i->first << "'>" << i->second.ToXML() << "</property>";

  0004c	8d 78 0c	 lea	 edi, DWORD PTR [eax+12]
  0004f	8d 45 d4	 lea	 eax, DWORD PTR $T516498[ebp]
  00052	50		 push	 eax
  00053	8d 4f 1c	 lea	 ecx, DWORD PTR [edi+28]
  00056	e8 00 00 00 00	 call	 ?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; ASValue::ToXML
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GIEBGHNM@?$DM?1property?$DO?$AA@
  00060	50		 push	 eax
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_02HMHJGNPF@?8?$DO?$AA@
  00066	57		 push	 edi
  00067	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp+16]
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FMJALFCA@?$DMproperty?5id?$DN?8?$AA@
  00072	50		 push	 eax
  00073	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00077	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  0007c	59		 pop	 ecx
  0007d	59		 pop	 ecx
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00084	59		 pop	 ecx
  00085	59		 pop	 ecx
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  0008c	59		 pop	 ecx
  0008d	59		 pop	 ecx
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00094	59		 pop	 ecx
  00095	59		 pop	 ecx
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  0009c	59		 pop	 ecx
  0009d	59		 pop	 ecx
  0009e	6a 00		 push	 0
  000a0	53		 push	 ebx
  000a1	8d 4d d4	 lea	 ecx, DWORD PTR $T516498[ebp]
  000a4	88 5d fc	 mov	 BYTE PTR __$EHRec$[ebp+8], bl
  000a7	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
  000ac	8d 4d cc	 lea	 ecx, DWORD PTR _i$516327[ebp]
  000af	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::operator++
  000b4	8b 45 cc	 mov	 eax, DWORD PTR _i$516327[ebp]
$LN63@ToXML@2:

; 292  : 		std::wstringstream s;
; 293  : 		s << "<object>";
; 294  : 		for (Object::const_iterator i = o.begin(), e = o.end(); i != e; ++i)

  000b7	3b c6		 cmp	 eax, esi
  000b9	75 91		 jne	 SHORT $LL36@ToXML@2

; 297  : 		}
; 298  : 		s << "</object>";

  000bb	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp+16]
  000c1	68 00 00 00 00	 push	 OFFSET ??_C@_09OFADAAIL@?$DM?1object?$DO?$AA@
  000c6	50		 push	 eax
  000c7	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  000cc	59		 pop	 ecx
  000cd	59		 pop	 ecx

; 299  : 		return s.str();

  000ce	ff 75 d0	 push	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
  000d1	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  000d7	e8 00 00 00 00	 call	 ?str@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
  000dc	8d 4d 80	 lea	 ecx, DWORD PTR _s$[ebp+96]
  000df	89 5d c8	 mov	 DWORD PTR $T536323[ebp], ebx
  000e2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000e6	e8 00 00 00 00	 call	 ??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000eb	8d 4d 80	 lea	 ecx, DWORD PTR _s$[ebp+96]
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ
  000f4	8b 45 d0	 mov	 eax, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]

; 300  : 	}};

  000f7	e8 00 00 00 00	 call	 __EH_epilog3_GS
  000fc	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ToXML@_Object@?2??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@4@@Z$0:
  00000	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
__unwindfunclet$?ToXML@_Object@?2??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@4@@Z$1:
  0000b	8d 4d d4	 lea	 ecx, DWORD PTR $T516498[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?ToXML@_Object@?2??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@4@@Z$2:
  00013	8b 45 c8	 mov	 eax, DWORD PTR $T536323[ebp]
  00016	83 e0 01	 and	 eax, 1
  00019	0f 84 0c 00 00
	00		 je	 $LN15@ToXML@2
  0001f	83 65 c8 fe	 and	 DWORD PTR $T536323[ebp], -2 ; fffffffeH
  00023	8b 4d d0	 mov	 ecx, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN15@ToXML@2:
  0002b	c3		 ret	 0
__ehhandler$?ToXML@_Object@?2??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@4@@Z:
  0002c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00030	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00033	8b 8a 1c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-228]
  00039	33 c8		 xor	 ecx, eax
  0003b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00040	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00043	33 c8		 xor	 ecx, eax
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ToXML@_Object@?2??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@4@@Z
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ToXML@_Object@?2??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@4@@Z ENDP ; `ASValue::ToXML'::`3'::_Object::ToXML
PUBLIC	??1?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@QAE@XZ ; std::vector<ASValue,std::allocator<ASValue> >::~vector<ASValue,std::allocator<ASValue> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@QAE@XZ PROC ; std::vector<ASValue,std::allocator<ASValue> >::~vector<ASValue,std::allocator<ASValue> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@IAEXXZ ; std::vector<ASValue,std::allocator<ASValue> >::_Tidy
??1?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@QAE@XZ ENDP ; std::vector<ASValue,std::allocator<ASValue> >::~vector<ASValue,std::allocator<ASValue> >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Cat$536472 = 12					; size = 1
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy, COMDAT
; _this$ = ecx

; 1269 : 		{	// destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);

  00003	ff 75 0c	 push	 DWORD PTR __Cat$536472[ebp]
  00006	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00009	51		 push	 ecx
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1271 : 		}

  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IAEXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy
_TEXT	ENDS
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::erase
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::erase, COMDAT
; _this$ = ecx

; 1195 : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))
; 1198 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1199 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1200 : 		++_Where;	// save successor iterator for return
; 1201 : 		_Orphan_ptr(*this, _Erasednode);
; 1202 : 
; 1203 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1204 : 		if (this->_Isnil(_Where._Mynode()))

  00007	8b 7d 0c	 mov	 edi, DWORD PTR __Where$[ebp]
  0000a	80 7f 2d 00	 cmp	 BYTE PTR [edi+45], 0
  0000e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00011	74 0b		 je	 SHORT $LN40@erase@2

; 1205 : 			_Xout_of_range("invalid map/set<T> iterator");

  00013	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN335@erase@2:
$LN40@erase@2:

; 1206 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1207 : 		++_Where;	// save successor iterator for return

  0001e	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00021	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::operator++

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1211 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1212 : 		_Nodeptr _Pnode = _Erasednode;
; 1213 : 
; 1214 : 		if (this->_Isnil(this->_Left(_Pnode)))

  00026	8b 17		 mov	 edx, DWORD PTR [edi]
  00028	80 7a 2d 00	 cmp	 BYTE PTR [edx+45], 0
  0002c	74 05		 je	 SHORT $LN39@erase@2

; 1215 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

  0002e	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]

; 1216 : 		else if (this->_Isnil(this->_Right(_Pnode)))

  00031	eb 17		 jmp	 SHORT $LN327@erase@2
$LN39@erase@2:
  00033	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00036	80 78 2d 00	 cmp	 BYTE PTR [eax+45], 0
  0003a	74 04		 je	 SHORT $LN37@erase@2

; 1217 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

  0003c	8b da		 mov	 ebx, edx

; 1218 : 		else

  0003e	eb 0a		 jmp	 SHORT $LN327@erase@2
$LN37@erase@2:

; 1219 : 			{	// two subtrees, must lift successor node to replace erased
; 1220 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

  00040	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 1221 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

  00043	8b 58 08	 mov	 ebx, DWORD PTR [eax+8]

; 1222 : 			}
; 1223 : 
; 1224 : 		if (_Pnode == _Erasednode)

  00046	3b c7		 cmp	 eax, edi
  00048	75 76		 jne	 SHORT $LN35@erase@2
$LN327@erase@2:

; 1225 : 			{	// at most one subtree, relink it
; 1226 : 			_Fixnodeparent = this->_Parent(_Erasednode);
; 1227 : 			if (!this->_Isnil(_Fixnode))

  0004a	80 7b 2d 00	 cmp	 BYTE PTR [ebx+45], 0
  0004e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00051	75 03		 jne	 SHORT $LN34@erase@2

; 1228 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

  00053	89 73 04	 mov	 DWORD PTR [ebx+4], esi
$LN34@erase@2:

; 1229 : 
; 1230 : 			if (_Root() == _Erasednode)

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0005c	39 78 04	 cmp	 DWORD PTR [eax+4], edi
  0005f	75 05		 jne	 SHORT $LN33@erase@2

; 1231 : 				_Root() = _Fixnode;	// link down from root

  00061	89 58 04	 mov	 DWORD PTR [eax+4], ebx

; 1232 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

  00064	eb 0b		 jmp	 SHORT $LN30@erase@2
$LN33@erase@2:
  00066	39 3e		 cmp	 DWORD PTR [esi], edi
  00068	75 04		 jne	 SHORT $LN31@erase@2

; 1233 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  0006a	89 1e		 mov	 DWORD PTR [esi], ebx

; 1234 : 			else

  0006c	eb 03		 jmp	 SHORT $LN30@erase@2
$LN31@erase@2:

; 1235 : 				this->_Right(_Fixnodeparent) =
; 1236 : 					_Fixnode;	// link down to right

  0006e	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
$LN30@erase@2:

; 1237 : 
; 1238 : 			if (_Lmost() == _Erasednode)

  00071	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00074	39 39		 cmp	 DWORD PTR [ecx], edi
  00076	75 1c		 jne	 SHORT $LN29@erase@2

; 1239 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1240 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1241 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

  00078	80 7b 2d 00	 cmp	 BYTE PTR [ebx+45], 0
  0007c	74 04		 je	 SHORT $LN43@erase@2
  0007e	8b d6		 mov	 edx, esi
  00080	eb 10		 jmp	 SHORT $LN97@erase@2
$LN43@erase@2:
  00082	8b 03		 mov	 eax, DWORD PTR [ebx]
  00084	8b d3		 mov	 edx, ebx
  00086	eb 04		 jmp	 SHORT $LN329@erase@2
$LL98@erase@2:
  00088	8b d0		 mov	 edx, eax
  0008a	8b 02		 mov	 eax, DWORD PTR [edx]
$LN329@erase@2:
  0008c	80 78 2d 00	 cmp	 BYTE PTR [eax+45], 0
  00090	74 f6		 je	 SHORT $LL98@erase@2
$LN97@erase@2:
  00092	89 11		 mov	 DWORD PTR [ecx], edx
$LN29@erase@2:

; 1242 : 
; 1243 : 			if (_Rmost() == _Erasednode)

  00094	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00097	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0009a	39 79 08	 cmp	 DWORD PTR [ecx+8], edi
  0009d	75 7b		 jne	 SHORT $LN185@erase@2

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  0009f	80 7b 2d 00	 cmp	 BYTE PTR [ebx+45], 0
  000a3	74 04		 je	 SHORT $LN45@erase@2
  000a5	8b d6		 mov	 edx, esi
  000a7	eb 12		 jmp	 SHORT $LN117@erase@2
$LN45@erase@2:
  000a9	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  000ac	8b d3		 mov	 edx, ebx
  000ae	eb 05		 jmp	 SHORT $LN330@erase@2
$LL118@erase@2:
  000b0	8b d0		 mov	 edx, eax
  000b2	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
$LN330@erase@2:
  000b5	80 78 2d 00	 cmp	 BYTE PTR [eax+45], 0
  000b9	74 f5		 je	 SHORT $LL118@erase@2
$LN117@erase@2:
  000bb	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 1247 : 			}
; 1248 : 		else

  000be	eb 5a		 jmp	 SHORT $LN185@erase@2
$LN35@erase@2:

; 1249 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1250 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1251 : 				_Pnode;	// link left up

  000c0	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1252 : 			this->_Left(_Pnode) =
; 1253 : 				this->_Left(_Erasednode);	// link successor down

  000c3	8b 17		 mov	 edx, DWORD PTR [edi]
  000c5	89 10		 mov	 DWORD PTR [eax], edx

; 1254 : 
; 1255 : 			if (_Pnode == this->_Right(_Erasednode))

  000c7	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  000ca	75 04		 jne	 SHORT $LN26@erase@2

; 1256 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  000cc	8b f0		 mov	 esi, eax

; 1257 : 			else

  000ce	eb 1a		 jmp	 SHORT $LN25@erase@2
$LN26@erase@2:

; 1258 : 				{	// successor further down, link in place of erased
; 1259 : 				_Fixnodeparent =
; 1260 : 					this->_Parent(_Pnode);	// parent is successor's
; 1261 : 				if (!this->_Isnil(_Fixnode))

  000d0	80 7b 2d 00	 cmp	 BYTE PTR [ebx+45], 0
  000d4	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000d7	75 03		 jne	 SHORT $LN24@erase@2

; 1262 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  000d9	89 73 04	 mov	 DWORD PTR [ebx+4], esi
$LN24@erase@2:

; 1263 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  000dc	89 1e		 mov	 DWORD PTR [esi], ebx

; 1264 : 				this->_Right(_Pnode) =
; 1265 : 					this->_Right(_Erasednode);	// link next down

  000de	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  000e1	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1266 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1267 : 					_Pnode;	// right up

  000e4	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  000e7	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN25@erase@2:

; 1268 : 				}
; 1269 : 
; 1270 : 			if (_Root() == _Erasednode)

  000ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000f0	39 79 04	 cmp	 DWORD PTR [ecx+4], edi
  000f3	75 05		 jne	 SHORT $LN23@erase@2

; 1271 : 				_Root() = _Pnode;	// link down from root

  000f5	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1272 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

  000f8	eb 0e		 jmp	 SHORT $LN20@erase@2
$LN23@erase@2:
  000fa	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000fd	39 39		 cmp	 DWORD PTR [ecx], edi
  000ff	75 04		 jne	 SHORT $LN21@erase@2

; 1273 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1274 : 					_Pnode;	// link down to left

  00101	89 01		 mov	 DWORD PTR [ecx], eax

; 1275 : 			else

  00103	eb 03		 jmp	 SHORT $LN20@erase@2
$LN21@erase@2:

; 1276 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1277 : 					_Pnode;	// link down to right

  00105	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN20@erase@2:

; 1278 : 
; 1279 : 			this->_Parent(_Pnode) =
; 1280 : 				this->_Parent(_Erasednode);	// link successor up

  00108	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0010b	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1281 : 			_STD swap(this->_Color(_Pnode),
; 1282 : 				this->_Color(_Erasednode));	// recolor it

  0010e	8a 57 2c	 mov	 dl, BYTE PTR [edi+44]
  00111	8a 48 2c	 mov	 cl, BYTE PTR [eax+44]
  00114	88 50 2c	 mov	 BYTE PTR [eax+44], dl
  00117	88 4f 2c	 mov	 BYTE PTR [edi+44], cl
$LN185@erase@2:

; 1283 : 			}
; 1284 : 
; 1285 : 		if (this->_Color(_Erasednode) == this->_Black)

  0011a	80 7f 2c 01	 cmp	 BYTE PTR [edi+44], 1
  0011e	0f 85 03 01 00
	00		 jne	 $LN19@erase@2

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00124	e9 b2 00 00 00	 jmp	 $LN332@erase@2
$LL18@erase@2:
  00129	80 7b 2c 01	 cmp	 BYTE PTR [ebx+44], 1
  0012d	0f 85 f0 00 00
	00		 jne	 $LN16@erase@2

; 1290 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

  00133	8b 06		 mov	 eax, DWORD PTR [esi]
  00135	3b d8		 cmp	 ebx, eax
  00137	75 6c		 jne	 SHORT $LN15@erase@2

; 1291 : 					{	// fixup left subtree
; 1292 : 					_Pnode = this->_Right(_Fixnodeparent);

  00139	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 1293 : 					if (this->_Color(_Pnode) == this->_Red)

  0013c	80 78 2c 00	 cmp	 BYTE PTR [eax+44], 0
  00140	75 11		 jne	 SHORT $LN14@erase@2

; 1294 : 						{	// rotate red up from right subtree
; 1295 : 						this->_Color(_Pnode) = this->_Black;

  00142	c6 40 2c 01	 mov	 BYTE PTR [eax+44], 1

; 1296 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1297 : 						_Lrotate(_Fixnodeparent);

  00146	56		 push	 esi
  00147	c6 46 2c 00	 mov	 BYTE PTR [esi+44], 0
  0014b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Lrotate

; 1298 : 						_Pnode = this->_Right(_Fixnodeparent);

  00150	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN14@erase@2:

; 1299 : 						}
; 1300 : 
; 1301 : 					if (this->_Isnil(_Pnode))

  00153	80 78 2d 00	 cmp	 BYTE PTR [eax+45], 0

; 1302 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1303 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

  00157	75 7d		 jne	 SHORT $LN333@erase@2

; 1304 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

  00159	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015b	80 79 2c 01	 cmp	 BYTE PTR [ecx+44], 1
  0015f	75 09		 jne	 SHORT $LN11@erase@2
  00161	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00164	80 79 2c 01	 cmp	 BYTE PTR [ecx+44], 1
  00168	74 68		 je	 SHORT $LN334@erase@2
$LN11@erase@2:

; 1305 : 						{	// redden right subtree with black children
; 1306 : 						this->_Color(_Pnode) = this->_Red;
; 1307 : 						_Fixnode = _Fixnodeparent;
; 1308 : 						}
; 1309 : 					else
; 1310 : 						{	// must rearrange right subtree
; 1311 : 						if (this->_Color(this->_Right(_Pnode))
; 1312 : 							== this->_Black)

  0016a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0016d	80 79 2c 01	 cmp	 BYTE PTR [ecx+44], 1
  00171	75 16		 jne	 SHORT $LN9@erase@2

; 1313 : 							{	// rotate red up from left sub-subtree
; 1314 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

  00173	8b 08		 mov	 ecx, DWORD PTR [eax]
  00175	c6 41 2c 01	 mov	 BYTE PTR [ecx+44], 1

; 1315 : 							this->_Color(_Pnode) = this->_Red;
; 1316 : 							_Rrotate(_Pnode);

  00179	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017c	50		 push	 eax
  0017d	c6 40 2c 00	 mov	 BYTE PTR [eax+44], 0
  00181	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Rrotate

; 1317 : 							_Pnode = this->_Right(_Fixnodeparent);

  00186	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN9@erase@2:

; 1318 : 							}
; 1319 : 
; 1320 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  00189	8a 4e 2c	 mov	 cl, BYTE PTR [esi+44]
  0018c	88 48 2c	 mov	 BYTE PTR [eax+44], cl

; 1321 : 						this->_Color(_Fixnodeparent) = this->_Black;
; 1322 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;
; 1323 : 						_Lrotate(_Fixnodeparent);

  0018f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00192	c6 46 2c 01	 mov	 BYTE PTR [esi+44], 1
  00196	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00199	56		 push	 esi
  0019a	c6 40 2c 01	 mov	 BYTE PTR [eax+44], 1
  0019e	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Lrotate

; 1324 : 						break;	// tree now recolored/rebalanced

  001a3	eb 7e		 jmp	 SHORT $LN16@erase@2
$LN15@erase@2:

; 1325 : 						}
; 1326 : 					}
; 1327 : 				else
; 1328 : 					{	// fixup right subtree
; 1329 : 					_Pnode = this->_Left(_Fixnodeparent);
; 1330 : 					if (this->_Color(_Pnode) == this->_Red)

  001a5	80 78 2c 00	 cmp	 BYTE PTR [eax+44], 0
  001a9	75 10		 jne	 SHORT $LN7@erase@2

; 1331 : 						{	// rotate red up from left subtree
; 1332 : 						this->_Color(_Pnode) = this->_Black;

  001ab	c6 40 2c 01	 mov	 BYTE PTR [eax+44], 1

; 1333 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1334 : 						_Rrotate(_Fixnodeparent);

  001af	56		 push	 esi
  001b0	c6 46 2c 00	 mov	 BYTE PTR [esi+44], 0
  001b4	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Rrotate

; 1335 : 						_Pnode = this->_Left(_Fixnodeparent);

  001b9	8b 06		 mov	 eax, DWORD PTR [esi]
$LN7@erase@2:

; 1336 : 						}
; 1337 : 					if (this->_Isnil(_Pnode))

  001bb	80 78 2d 00	 cmp	 BYTE PTR [eax+45], 0

; 1338 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1339 : 					else if (this->_Color(this->_Right(_Pnode)) ==

  001bf	75 15		 jne	 SHORT $LN333@erase@2

; 1340 : 						this->_Black
; 1341 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

  001c1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001c4	80 79 2c 01	 cmp	 BYTE PTR [ecx+44], 1
  001c8	75 22		 jne	 SHORT $LN4@erase@2
  001ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  001cc	80 79 2c 01	 cmp	 BYTE PTR [ecx+44], 1
  001d0	75 1a		 jne	 SHORT $LN4@erase@2
$LN334@erase@2:

; 1342 : 						{	// redden left subtree with black children
; 1343 : 						this->_Color(_Pnode) = this->_Red;

  001d2	c6 40 2c 00	 mov	 BYTE PTR [eax+44], 0
$LN333@erase@2:

; 1344 : 						_Fixnode = _Fixnodeparent;

  001d6	8b de		 mov	 ebx, esi
  001d8	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
$LN332@erase@2:

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  001db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001de	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001e1	3b 58 04	 cmp	 ebx, DWORD PTR [eax+4]
  001e4	0f 85 3f ff ff
	ff		 jne	 $LL18@erase@2
  001ea	eb 37		 jmp	 SHORT $LN16@erase@2
$LN4@erase@2:

; 1345 : 						}
; 1346 : 					else
; 1347 : 						{	// must rearrange left subtree
; 1348 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

  001ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ee	80 79 2c 01	 cmp	 BYTE PTR [ecx+44], 1
  001f2	75 16		 jne	 SHORT $LN2@erase@2

; 1349 : 							{	// rotate red up from right sub-subtree
; 1350 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

  001f4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001f7	c6 41 2c 01	 mov	 BYTE PTR [ecx+44], 1

; 1351 : 							this->_Color(_Pnode) = this->_Red;
; 1352 : 							_Lrotate(_Pnode);

  001fb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001fe	50		 push	 eax
  001ff	c6 40 2c 00	 mov	 BYTE PTR [eax+44], 0
  00203	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Lrotate

; 1353 : 							_Pnode = this->_Left(_Fixnodeparent);

  00208	8b 06		 mov	 eax, DWORD PTR [esi]
$LN2@erase@2:

; 1354 : 							}
; 1355 : 
; 1356 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  0020a	8a 4e 2c	 mov	 cl, BYTE PTR [esi+44]
  0020d	88 48 2c	 mov	 BYTE PTR [eax+44], cl

; 1357 : 						this->_Color(_Fixnodeparent) = this->_Black;
; 1358 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;
; 1359 : 						_Rrotate(_Fixnodeparent);

  00210	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00213	c6 46 2c 01	 mov	 BYTE PTR [esi+44], 1
  00217	8b 00		 mov	 eax, DWORD PTR [eax]
  00219	56		 push	 esi
  0021a	c6 40 2c 01	 mov	 BYTE PTR [eax+44], 1
  0021e	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Rrotate
$LN16@erase@2:

; 1360 : 						break;	// tree now recolored/rebalanced
; 1361 : 						}
; 1362 : 					}
; 1363 : 
; 1364 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

  00223	c6 43 2c 01	 mov	 BYTE PTR [ebx+44], 1
$LN19@erase@2:

; 1365 : 			}
; 1366 : 
; 1367 : 		_Dest_val(this->_Alval,
; 1368 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node

  00227	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  0022a	e8 00 00 00 00	 call	 ??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ

; 1369 : 
; 1370 : 		this->_Alnod.deallocate(_Erasednode, 1);

  0022f	57		 push	 edi
  00230	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00235	59		 pop	 ecx

; 1371 : 
; 1372 : 		if (0 < this->_Mysize)

  00236	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00239	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0023c	5f		 pop	 edi
  0023d	5e		 pop	 esi
  0023e	5b		 pop	 ebx
  0023f	85 c0		 test	 eax, eax
  00241	74 04		 je	 SHORT $LN1@erase@2

; 1373 : 			--this->_Mysize;

  00243	48		 dec	 eax
  00244	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@erase@2:

; 1374 : 
; 1375 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

  00247	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0024a	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  0024d	89 08		 mov	 DWORD PTR [eax], ecx

; 1376 : 		}

  0024f	c9		 leave
  00250	c2 08 00	 ret	 8
$LN328@erase@2:
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Erase
; Function compile flags: /Ogsp
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1610 : 		{	// free entire subtree, recursively

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1611 : 		for (_Nodeptr _Pnode = _Rootnode;

  00006	8b 7d 08	 mov	 edi, DWORD PTR __Rootnode$[ebp]

; 1612 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

  00009	80 7f 2d 00	 cmp	 BYTE PTR [edi+45], 0
  0000d	8b d9		 mov	 ebx, ecx
  0000f	8b f7		 mov	 esi, edi
  00011	75 23		 jne	 SHORT $LN1@Erase
$LL3@Erase:

; 1613 : 			{	// free subtrees, then node
; 1614 : 			_Erase(this->_Right(_Pnode));

  00013	ff 76 08	 push	 DWORD PTR [esi+8]
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Erase

; 1615 : 			_Pnode = this->_Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 1616 : 			_Dest_val(this->_Alval,
; 1617 : 				_STD addressof(this->_Myval(_Rootnode)));

  0001f	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  00022	e8 00 00 00 00	 call	 ??1?$_Pair_base@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@QAE@XZ

; 1618 : 
; 1619 : 			this->_Alnod.deallocate(_Rootnode, 1);

  00027	57		 push	 edi
  00028	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002d	80 7e 2d 00	 cmp	 BYTE PTR [esi+45], 0
  00031	59		 pop	 ecx
  00032	8b fe		 mov	 edi, esi
  00034	74 dd		 je	 SHORT $LL3@Erase
$LN1@Erase:
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx

; 1620 : 			}
; 1621 : 		}

  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	??A?$map@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@@std@@QAEAAPAVIWndCreator@ioSP2GUIManager@@ABVioHashString@@@Z ; std::map<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> > >::operator[]
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??A?$map@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@@std@@QAEAAPAVIWndCreator@ioSP2GUIManager@@ABVioHashString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@@std@@QAEAAPAVIWndCreator@ioSP2GUIManager@@ABVioHashString@@@Z$0
__ehfuncinfo$??A?$map@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@@std@@QAEAAPAVIWndCreator@ioSP2GUIManager@@ABVioHashString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??A?$map@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@@std@@QAEAAPAVIWndCreator@ioSP2GUIManager@@ABVioHashString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
xdata$x	ENDS
;	COMDAT ??A?$map@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@@std@@QAEAAPAVIWndCreator@ioSP2GUIManager@@ABVioHashString@@@Z
_TEXT	SEGMENT
$T537051 = -32						; size = 20
__$EHRec$ = -12						; size = 12
$T537054 = 8						; size = 4
__Keyval$ = 8						; size = 4
??A?$map@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@@std@@QAEAAPAVIWndCreator@ioSP2GUIManager@@ABVioHashString@@@Z PROC ; std::map<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> > >::operator[], COMDAT
; _this$ = ecx

; 210  : 		{	// find element matching _Keyval or insert with default mapped

  00000	6a 14		 push	 20			; 00000014H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??A?$map@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@@std@@QAEAAPAVIWndCreator@ioSP2GUIManager@@ABVioHashString@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx

; 211  : 		iterator _Where = this->lower_bound(_Keyval);

  0000e	ff 75 08	 push	 DWORD PTR __Keyval$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@ABVioHashString@@@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Lbound
  00016	8b f0		 mov	 esi, eax

; 212  : 		if (_Where == this->end()
; 213  : 			|| this->comp(_Keyval, this->_Key(_Where._Mynode())))

  00018	3b 77 04	 cmp	 esi, DWORD PTR [edi+4]
  0001b	74 11		 je	 SHORT $LN1@operator@7
  0001d	8b 4d 08	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00023	50		 push	 eax
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??MioHashString@@QBE_NABV0@@Z
  0002a	84 c0		 test	 al, al
  0002c	74 3c		 je	 SHORT $LN2@operator@7
$LN1@operator@7:

; 214  : 			_Where = this->insert(_Where,
; 215  : 				value_type(_Keyval, mapped_type()));

  0002e	ff 75 08	 push	 DWORD PTR __Keyval$[ebp]
  00031	8d 4d e0	 lea	 ecx, DWORD PTR $T537051[ebp]
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  0003a	83 65 f0 00	 and	 DWORD PTR $T537051[ebp+16], 0
  0003e	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00042	8d 45 e0	 lea	 eax, DWORD PTR $T537051[ebp]
  00045	50		 push	 eax
  00046	8b cf		 mov	 ecx, edi
  00048	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@1@$$QAU?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Buynode<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >
  0004d	50		 push	 eax
  0004e	56		 push	 esi
  0004f	8d 45 08	 lea	 eax, DWORD PTR $T537054[ebp]
  00052	50		 push	 eax
  00053	8b cf		 mov	 ecx, edi
  00055	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> >,0> >::_Insert
  0005a	8b 75 08	 mov	 esi, DWORD PTR $T537054[ebp]
  0005d	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d e0	 lea	 ecx, DWORD PTR $T537051[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
$LN2@operator@7:

; 216  : 		return ((*_Where).second);

  0006a	8d 46 1c	 lea	 eax, DWORD PTR [esi+28]

; 217  : 		}

  0006d	e8 00 00 00 00	 call	 __EH_epilog3
  00072	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??A?$map@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@@std@@QAEAAPAVIWndCreator@ioSP2GUIManager@@ABVioHashString@@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR $T537051[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@QAE@XZ
__ehhandler$??A?$map@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@@std@@QAEAAPAVIWndCreator@ioSP2GUIManager@@ABVioHashString@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??A?$map@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@@std@@QAEAAPAVIWndCreator@ioSP2GUIManager@@ABVioHashString@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??A?$map@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@@std@@QAEAAPAVIWndCreator@ioSP2GUIManager@@ABVioHashString@@@Z ENDP ; std::map<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> > >::operator[]
PUBLIC	??$_Uninitialized_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$537219 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$537219[ebp]
  00007	6a 00		 push	 0
  00009	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000c	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00012	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00015	e8 00 00 00 00	 call	 ??$_Uninit_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V12@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  0001a	83 c4 18	 add	 esp, 24			; 00000018H

; 472  : 	}

  0001d	c9		 leave
  0001e	c3		 ret	 0
??$_Uninitialized_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
PUBLIC	??_G?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@QAEPAXI@Z ; std::vector<ASValue,std::allocator<ASValue> >::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_G?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@QAEPAXI@Z PROC ; std::vector<ASValue,std::allocator<ASValue> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@IAEXXZ ; std::vector<ASValue,std::allocator<ASValue> >::_Tidy
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@9
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@9:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_G?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@QAEPAXI@Z ENDP ; std::vector<ASValue,std::allocator<ASValue> >::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_1BC@MCNJKOBA@?$AA?$DM?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?1?$AA?$DO?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@BAKJNJMG@?$AA?$DM?$AAt?$AAr?$AAu?$AAe?$AA?1?$AA?$DO?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@CNANDPLI@?$AA?$DM?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$DO?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BE@KIOKCMMH@?$AA?$DM?$AA?1?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$DO?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@NHHCKEAN@?$AA?$DM?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$DO?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BE@FCJFLHHC@?$AA?$DM?$AA?1?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$DO?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@BEEAGHLH@?$AA?$DM?$AAn?$AAu?$AAl?$AAl?$AA?1?$AA?$DO?$AA?$AA@ ; `string'
PUBLIC	___$ReturnUdt$GSCopy$
EXTRN	__imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@M@Z:PROC
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_1BC@MCNJKOBA@?$AA?$DM?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?1?$AA?$DO?$AA?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\flashplayertodirectx\include\asinterface.inl
CONST	SEGMENT
??_C@_1BC@MCNJKOBA@?$AA?$DM?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?1?$AA?$DO?$AA?$AA@ DB '<'
	DB	00H, 'f', 00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, '/', 00H
	DB	'>', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@BAKJNJMG@?$AA?$DM?$AAt?$AAr?$AAu?$AAe?$AA?1?$AA?$DO?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@BAKJNJMG@?$AA?$DM?$AAt?$AAr?$AAu?$AAe?$AA?1?$AA?$DO?$AA?$AA@ DB '<'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'e', 00H, '/', 00H, '>', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@CNANDPLI@?$AA?$DM?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$DO?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@CNANDPLI@?$AA?$DM?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$DO?$AA?$AA@ DB '<'
	DB	00H, 'n', 00H, 'u', 00H, 'm', 00H, 'b', 00H, 'e', 00H, 'r', 00H
	DB	'>', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@KIOKCMMH@?$AA?$DM?$AA?1?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$DO?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@KIOKCMMH@?$AA?$DM?$AA?1?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$DO?$AA?$AA@ DB '<'
	DB	00H, '/', 00H, 'n', 00H, 'u', 00H, 'm', 00H, 'b', 00H, 'e', 00H
	DB	'r', 00H, '>', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@NHHCKEAN@?$AA?$DM?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$DO?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@NHHCKEAN@?$AA?$DM?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$DO?$AA?$AA@ DB '<'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'>', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@FCJFLHHC@?$AA?$DM?$AA?1?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$DO?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@FCJFLHHC@?$AA?$DM?$AA?1?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$DO?$AA?$AA@ DB '<'
	DB	00H, '/', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, '>', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@BEEAGHLH@?$AA?$DM?$AAn?$AAu?$AAl?$AAl?$AA?1?$AA?$DO?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@BEEAGHLH@?$AA?$DM?$AAn?$AAu?$AAl?$AAl?$AA?1?$AA?$DO?$AA?$AA@ DB '<'
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, '/', 00H, '>', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$3
	DD	00H
	DD	FLAT:__unwindfunclet$?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$0
	DD	01H
	DD	FLAT:__unwindfunclet$?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$2
__ehfuncinfo$?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
_TEXT	SEGMENT
_s$ = -248						; size = 168
$T537254 = -80						; size = 4
___$ReturnUdt$GSCopy$ = -76				; size = 4
$T516180 = -72						; size = 28
$T516183 = -44						; size = 28
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ PROC ; ASValue::ToXML, COMDAT
; _this$ = ecx

; 277  : {

  00000	68 ec 00 00 00	 push	 236			; 000000ecH
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS

; 312  : 	}
; 313  : 
; 314  : 	return s.str();

  0000f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00012	83 65 b0 00	 and	 DWORD PTR $T537254[ebp], 0
  00016	33 db		 xor	 ebx, ebx
  00018	43		 inc	 ebx
  00019	53		 push	 ebx
  0001a	8b f9		 mov	 edi, ecx
  0001c	6a 03		 push	 3
  0001e	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  00024	89 45 b4	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], eax
  00027	e8 00 00 00 00	 call	 ??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0002c	8b 07		 mov	 eax, DWORD PTR [edi]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	83 e9 00	 sub	 ecx, 0
  00033	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00036	0f 84 c0 00 00
	00		 je	 $LN6@ToXML@3

; 278  : 	struct _Array { static std::wstring ToXML(const Array &a)
; 279  : 	{
; 280  : 		std::wstringstream s;
; 281  : 		s << "<array>";
; 282  : 		for (size_t i = 0, e = (unsigned int)a.size(); i < e; ++i)
; 283  : 		{
; 284  : 			s << L"<property id='" << i << L"'>" << a[i].ToXML() << L"</property>";
; 285  : 		}
; 286  : 		s << "</array>";
; 287  : 		return s.str();
; 288  : 	}};
; 289  : 
; 290  : 	struct _Object { static std::wstring ToXML(const Object &o)
; 291  : 	{
; 292  : 		std::wstringstream s;
; 293  : 		s << "<object>";
; 294  : 		for (Object::const_iterator i = o.begin(), e = o.end(); i != e; ++i)
; 295  : 		{
; 296  : 			s << "<property id='" << i->first << "'>" << i->second.ToXML() << "</property>";
; 297  : 		}
; 298  : 		s << "</object>";
; 299  : 		return s.str();
; 300  : 	}};
; 301  : 
; 302  : 	std::wstringstream s;
; 303  : 
; 304  : 	switch (m_data.type)

  0003c	49		 dec	 ecx
  0003d	0f 84 8a 00 00
	00		 je	 $LN5@ToXML@3
  00043	49		 dec	 ecx
  00044	74 62		 je	 SHORT $LN4@ToXML@3
  00046	49		 dec	 ecx
  00047	74 2f		 je	 SHORT $LN3@ToXML@3
  00049	49		 dec	 ecx
  0004a	74 0a		 je	 SHORT $LN2@ToXML@3

; 311  : 	default: s << L"<null/>"; break;

  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_1BA@BEEAGHLH@?$AA?$DM?$AAn?$AAu?$AAl?$AAl?$AA?1?$AA?$DO?$AA?$AA@
  00051	e9 b9 00 00 00	 jmp	 $LN41@ToXML@3
$LN2@ToXML@3:

; 310  : 	case 4: s << _Object::ToXML(*(Object*)m_data.data); break;

  00056	8d 4d d4	 lea	 ecx, DWORD PTR $T516183[ebp]
  00059	51		 push	 ecx
  0005a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0005d	e8 00 00 00 00	 call	 ?ToXML@_Object@?2??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@4@@Z ; `ASValue::ToXML'::`3'::_Object::ToXML
  00062	50		 push	 eax
  00063	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp+16]
  00069	50		 push	 eax
  0006a	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0006e	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00073	8d 4d d4	 lea	 ecx, DWORD PTR $T516183[ebp]
  00076	eb 20		 jmp	 SHORT $LN44@ToXML@3
$LN3@ToXML@3:

; 309  : 	case 3: s << _Array::ToXML(*(Array*)m_data.data); break;

  00078	8b 78 04	 mov	 edi, DWORD PTR [eax+4]
  0007b	8d 4d b8	 lea	 ecx, DWORD PTR $T516180[ebp]
  0007e	51		 push	 ecx
  0007f	e8 00 00 00 00	 call	 ?ToXML@_Array@?1??0ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ@SA?AV34@ABV?$vector@UASValue@@V?$allocator@UASValue@@@std@@@4@@Z ; `ASValue::ToXML'::`2'::_Array::ToXML
  00084	50		 push	 eax
  00085	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp+16]
  0008b	50		 push	 eax
  0008c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00090	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00095	8d 4d b8	 lea	 ecx, DWORD PTR $T516180[ebp]
$LN44@ToXML@3:
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	6a 00		 push	 0
  0009d	53		 push	 ebx
  0009e	88 5d fc	 mov	 BYTE PTR __$EHRec$[ebp+8], bl
  000a1	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
  000a6	eb 75		 jmp	 SHORT $LN7@ToXML@3
$LN4@ToXML@3:

; 308  : 	case 2: s << L"<string>" << *(String*)m_data.data << L"</string>"; break;

  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_1BE@FCJFLHHC@?$AA?$DM?$AA?1?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$DO?$AA?$AA@
  000ad	ff 70 04	 push	 DWORD PTR [eax+4]
  000b0	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp+16]
  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@NHHCKEAN@?$AA?$DM?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$DO?$AA?$AA@
  000bb	50		 push	 eax
  000bc	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  000c1	59		 pop	 ecx
  000c2	59		 pop	 ecx
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000c9	59		 pop	 ecx
  000ca	59		 pop	 ecx
  000cb	eb 48		 jmp	 SHORT $LN42@ToXML@3
$LN5@ToXML@3:

; 307  : 	case 1: s << L"<number>" << *(Number*)m_data.data << L"</number>"; break;

  000cd	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000d0	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000d4	68 00 00 00 00	 push	 OFFSET ??_C@_1BE@KIOKCMMH@?$AA?$DM?$AA?1?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$DO?$AA?$AA@
  000d9	51		 push	 ecx
  000da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000df	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp+16]
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@CNANDPLI@?$AA?$DM?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$DO?$AA?$AA@
  000ea	50		 push	 eax
  000eb	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  000f0	59		 pop	 ecx
  000f1	59		 pop	 ecx
  000f2	8b c8		 mov	 ecx, eax
  000f4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@M@Z
  000fa	eb 19		 jmp	 SHORT $LN42@ToXML@3
$LN6@ToXML@3:

; 305  : 	{
; 306  : 	case 0: s << (*(Boolean*)m_data.data ? L"<true/>" : L"<false/>"); break;

  000fc	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000ff	80 38 00	 cmp	 BYTE PTR [eax], 0
  00102	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_1BA@BAKJNJMG@?$AA?$DM?$AAt?$AAr?$AAu?$AAe?$AA?1?$AA?$DO?$AA?$AA@
  00107	75 05		 jne	 SHORT $LN12@ToXML@3
  00109	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_1BC@MCNJKOBA@?$AA?$DM?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?1?$AA?$DO?$AA?$AA@
$LN12@ToXML@3:
  0010e	50		 push	 eax
$LN41@ToXML@3:
  0010f	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp+16]
$LN42@ToXML@3:
  00115	50		 push	 eax
  00116	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  0011b	59		 pop	 ecx
  0011c	59		 pop	 ecx
$LN7@ToXML@3:

; 312  : 	}
; 313  : 
; 314  : 	return s.str();

  0011d	ff 75 b4	 push	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
  00120	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  00126	e8 00 00 00 00	 call	 ?str@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
  0012b	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp+96]
  00131	89 5d b0	 mov	 DWORD PTR $T537254[ebp], ebx
  00134	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00138	e8 00 00 00 00	 call	 ??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0013d	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp+96]
  00143	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ
  00149	8b 45 b4	 mov	 eax, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]

; 315  : }

  0014c	e8 00 00 00 00	 call	 __EH_epilog3_GS
  00151	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$0:
  00000	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
__unwindfunclet$?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$2:
  0000b	8d 4d d4	 lea	 ecx, DWORD PTR $T516183[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$1:
  00013	8d 4d b8	 lea	 ecx, DWORD PTR $T516180[ebp]
  00016	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$3:
  0001b	8b 45 b0	 mov	 eax, DWORD PTR $T537254[ebp]
  0001e	83 e0 01	 and	 eax, 1
  00021	0f 84 0c 00 00
	00		 je	 $LN29@ToXML@3
  00027	83 65 b0 fe	 and	 DWORD PTR $T537254[ebp], -2 ; fffffffeH
  0002b	8b 4d b4	 mov	 ecx, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
  0002e	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN29@ToXML@3:
  00033	c3		 ret	 0
__ehhandler$?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ:
  00034	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00038	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003b	8b 8a 04 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-252]
  00041	33 c8		 xor	 ecx, eax
  00043	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00048	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004b	33 c8		 xor	 ecx, eax
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
  00057	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ENDP ; ASValue::ToXML
PUBLIC	_arg9$GSCopy$
PUBLIC	_arg8$GSCopy$
PUBLIC	_arg7$GSCopy$
PUBLIC	_arg6$GSCopy$
PUBLIC	_arg5$GSCopy$
PUBLIC	_arg4$GSCopy$
PUBLIC	_arg3$GSCopy$
PUBLIC	_arg2$GSCopy$
PUBLIC	_arg1$GSCopy$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ToXML@_Args@?1??Call@ASInterface@@QAE?AUASValue@@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABU4@111111111@Z@SAXAAV56@1111111111@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ToXML@_Args@?1??Call@ASInterface@@QAE?AUASValue@@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABU4@111111111@Z@SAXAAV56@1111111111@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ToXML@_Args@?1??Call@ASInterface@@QAE?AUASValue@@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABU4@111111111@Z@SAXAAV56@1111111111@Z$1
__ehfuncinfo$?ToXML@_Args@?1??Call@ASInterface@@QAE?AUASValue@@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABU4@111111111@Z@SAXAAV56@1111111111@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?ToXML@_Args@?1??Call@ASInterface@@QAE?AUASValue@@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABU4@111111111@Z@SAXAAV56@1111111111@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?ToXML@_Args@?1??Call@ASInterface@@QAE?AUASValue@@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABU4@111111111@Z@SAXAAV56@1111111111@Z
_TEXT	SEGMENT
_arg8$GSCopy$ = -84					; size = 4
_arg9$GSCopy$ = -80					; size = 4
$T537291 = -76						; size = 4
_arg6$GSCopy$ = -72					; size = 4
_arg1$GSCopy$ = -68					; size = 4
_arg5$GSCopy$ = -64					; size = 4
_arg2$GSCopy$ = -60					; size = 4
_arg7$GSCopy$ = -56					; size = 4
_arg3$GSCopy$ = -52					; size = 4
_arg4$GSCopy$ = -48					; size = 4
$T518896 = -44						; size = 28
__$EHRec$ = -12						; size = 12
_arguments$ = 8						; size = 4
_arg0$ = 12						; size = 4
_arg1$ = 16						; size = 4
_arg2$ = 20						; size = 4
_arg3$ = 24						; size = 4
_arg4$ = 28						; size = 4
_arg5$ = 32						; size = 4
_arg6$ = 36						; size = 4
_arg7$ = 40						; size = 4
_arg8$ = 44						; size = 4
_arg9$ = 48						; size = 4
?ToXML@_Args@?1??Call@ASInterface@@QAE?AUASValue@@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABU4@111111111@Z@SAXAAV56@1111111111@Z PROC ; `ASInterface::Call'::`2'::_Args::ToXML, COMDAT

; 842  : 	{

  00000	6a 48		 push	 72			; 00000048H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?ToXML@_Args@?1??Call@ASInterface@@QAE?AUASValue@@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABU4@111111111@Z@SAXAAV56@1111111111@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000c	8b 45 10	 mov	 eax, DWORD PTR _arg1$[ebp]
  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR _arg0$[ebp]

; 843  : 		if (arg0.IsEmpty()) return;
; 844  : 
; 845  : 		arguments += arg0.ToXML();

  00012	89 45 bc	 mov	 DWORD PTR _arg1$GSCopy$[ebp], eax
  00015	8b 45 14	 mov	 eax, DWORD PTR _arg2$[ebp]
  00018	8b 75 08	 mov	 esi, DWORD PTR _arguments$[ebp]
  0001b	89 45 c4	 mov	 DWORD PTR _arg2$GSCopy$[ebp], eax
  0001e	8b 45 18	 mov	 eax, DWORD PTR _arg3$[ebp]
  00021	89 45 cc	 mov	 DWORD PTR _arg3$GSCopy$[ebp], eax
  00024	8b 45 1c	 mov	 eax, DWORD PTR _arg4$[ebp]
  00027	89 45 d0	 mov	 DWORD PTR _arg4$GSCopy$[ebp], eax
  0002a	8b 45 20	 mov	 eax, DWORD PTR _arg5$[ebp]
  0002d	89 45 c0	 mov	 DWORD PTR _arg5$GSCopy$[ebp], eax
  00030	8b 45 24	 mov	 eax, DWORD PTR _arg6$[ebp]
  00033	89 45 b8	 mov	 DWORD PTR _arg6$GSCopy$[ebp], eax
  00036	8b 45 28	 mov	 eax, DWORD PTR _arg7$[ebp]
  00039	89 45 c8	 mov	 DWORD PTR _arg7$GSCopy$[ebp], eax
  0003c	8b 45 2c	 mov	 eax, DWORD PTR _arg8$[ebp]
  0003f	89 45 ac	 mov	 DWORD PTR _arg8$GSCopy$[ebp], eax
  00042	8b 45 30	 mov	 eax, DWORD PTR _arg9$[ebp]
  00045	89 45 b0	 mov	 DWORD PTR _arg9$GSCopy$[ebp], eax
  00048	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004a	83 38 ff	 cmp	 DWORD PTR [eax], -1
  0004d	74 76		 je	 SHORT $LN20@ToXML@4
  0004f	8d 45 d4	 lea	 eax, DWORD PTR $T518896[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?ToXML@ASValue@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; ASValue::ToXML
  00058	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0005c	6a ff		 push	 -1
  0005e	6a 00		 push	 0
  00060	50		 push	 eax
  00061	8b ce		 mov	 ecx, esi
  00063	e8 00 00 00 00	 call	 ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
  00068	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0006c	6a 00		 push	 0
  0006e	6a 01		 push	 1
  00070	8d 4d d4	 lea	 ecx, DWORD PTR $T518896[ebp]
  00073	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 846  : 
; 847  : 		ToXML(arguments, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);

  00078	8d 4d b4	 lea	 ecx, DWORD PTR $T537291[ebp]
  0007b	e8 00 00 00 00	 call	 ??0ASValue@@QAE@XZ	; ASValue::ASValue
  00080	50		 push	 eax
  00081	ff 75 b0	 push	 DWORD PTR _arg9$GSCopy$[ebp]
  00084	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0008b	ff 75 ac	 push	 DWORD PTR _arg8$GSCopy$[ebp]
  0008e	ff 75 c8	 push	 DWORD PTR _arg7$GSCopy$[ebp]
  00091	ff 75 b8	 push	 DWORD PTR _arg6$GSCopy$[ebp]
  00094	ff 75 c0	 push	 DWORD PTR _arg5$GSCopy$[ebp]
  00097	ff 75 d0	 push	 DWORD PTR _arg4$GSCopy$[ebp]
  0009a	ff 75 cc	 push	 DWORD PTR _arg3$GSCopy$[ebp]
  0009d	ff 75 c4	 push	 DWORD PTR _arg2$GSCopy$[ebp]
  000a0	ff 75 bc	 push	 DWORD PTR _arg1$GSCopy$[ebp]
  000a3	56		 push	 esi
  000a4	e8 00 00 00 00	 call	 ?ToXML@_Args@?1??Call@ASInterface@@QAE?AUASValue@@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABU4@111111111@Z@SAXAAV56@1111111111@Z ; `ASInterface::Call'::`2'::_Args::ToXML
  000a9	8b 4d b4	 mov	 ecx, DWORD PTR $T537291[ebp]
  000ac	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000b0	83 c4 2c	 add	 esp, 44			; 0000002cH
  000b3	8b f1		 mov	 esi, ecx
  000b5	85 c9		 test	 ecx, ecx
  000b7	74 0c		 je	 SHORT $LN20@ToXML@4
  000b9	e8 00 00 00 00	 call	 ?Destruct@_Data@ASValue@@QAEXXZ ; ASValue::_Data::Destruct
  000be	56		 push	 esi
  000bf	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000c4	59		 pop	 ecx
$LN20@ToXML@4:

; 848  : 	}};

  000c5	e8 00 00 00 00	 call	 __EH_epilog3_GS
  000ca	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ToXML@_Args@?1??Call@ASInterface@@QAE?AUASValue@@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABU4@111111111@Z@SAXAAV56@1111111111@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR $T518896[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?ToXML@_Args@?1??Call@ASInterface@@QAE?AUASValue@@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABU4@111111111@Z@SAXAAV56@1111111111@Z$1:
  00008	8d 4d b4	 lea	 ecx, DWORD PTR $T537291[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1ASValue@@QAE@XZ	; ASValue::~ASValue
__ehhandler$?ToXML@_Args@?1??Call@ASInterface@@QAE?AUASValue@@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABU4@111111111@Z@SAXAAV56@1111111111@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ToXML@_Args@?1??Call@ASInterface@@QAE?AUASValue@@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABU4@111111111@Z@SAXAAV56@1111111111@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ToXML@_Args@?1??Call@ASInterface@@QAE?AUASValue@@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABU4@111111111@Z@SAXAAV56@1111111111@Z ENDP ; `ASInterface::Call'::`2'::_Args::ToXML
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::clear
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::clear, COMDAT
; _this$ = ecx

; 1410 : 		{	// erase all

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 1411 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1412 : 		this->_Orphan_ptr(*this, 0);
; 1413 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1414 : 
; 1415 : 		_Erase(_Root());

  00004	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00007	ff 70 04	 push	 DWORD PTR [eax+4]
  0000a	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Erase

; 1416 : 		_Root() = this->_Myhead;

  0000f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1417 : 		_Lmost() = this->_Myhead;

  00015	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax

; 1418 : 		_Rmost() = this->_Myhead;

  0001a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0001d	89 76 08	 mov	 DWORD PTR [esi+8], esi

; 1419 : 		this->_Mysize = 0;

  00020	83 67 08 00	 and	 DWORD PTR [edi+8], 0
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi

; 1420 : 		}

  00026	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::clear
_TEXT	ENDS
PUBLIC	??$RegisterWndCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@QAEXPBD@Z ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyMenu>
EXTRN	__imp_??0ioHashString@@QAE@PBD@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$RegisterWndCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$RegisterWndCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@QAEXPBD@Z$0
__ehfuncinfo$??$RegisterWndCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$RegisterWndCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\iosp2guimanager.h
xdata$x	ENDS
;	COMDAT ??$RegisterWndCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@QAEXPBD@Z
_TEXT	SEGMENT
$T537394 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
??$RegisterWndCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@QAEXPBD@Z PROC ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyMenu>, COMDAT
; _this$ = ecx

; 127  : 	{

  00000	6a 10		 push	 16			; 00000010H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$RegisterWndCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@QAEXPBD@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx

; 128  : 		if ( !key ) {

  0000e	83 7d 08 00	 cmp	 DWORD PTR _key$[ebp], 0
  00012	74 46		 je	 SHORT $LN2@RegisterWn

; 129  : 			return;
; 130  : 		}
; 131  : 		m_CreateTable[ key ] = new WindowCreator<T>;

  00014	6a 04		 push	 4
  00016	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001b	59		 pop	 ecx
  0001c	85 c0		 test	 eax, eax
  0001e	74 0a		 je	 SHORT $LN4@RegisterWn
  00020	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$WindowCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@6B@
  00026	8b f0		 mov	 esi, eax
  00028	eb 02		 jmp	 SHORT $LN5@RegisterWn
$LN4@RegisterWn:
  0002a	33 f6		 xor	 esi, esi
$LN5@RegisterWn:
  0002c	ff 75 08	 push	 DWORD PTR _key$[ebp]
  0002f	8d 4d e4	 lea	 ecx, DWORD PTR $T537394[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00038	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	8d 45 e4	 lea	 eax, DWORD PTR $T537394[ebp]
  0003f	50		 push	 eax
  00040	8d 8f b0 00 00
	00		 lea	 ecx, DWORD PTR [edi+176]
  00046	e8 00 00 00 00	 call	 ??A?$map@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@@std@@QAEAAPAVIWndCreator@ioSP2GUIManager@@ABVioHashString@@@Z ; std::map<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> > >::operator[]
  0004b	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0004f	8d 4d e4	 lea	 ecx, DWORD PTR $T537394[ebp]
  00052	89 30		 mov	 DWORD PTR [eax], esi
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
$LN2@RegisterWn:

; 132  : 	}

  0005a	e8 00 00 00 00	 call	 __EH_epilog3
  0005f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$RegisterWndCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@QAEXPBD@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR $T537394[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??$RegisterWndCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@QAEXPBD@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$RegisterWndCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@QAEXPBD@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$RegisterWndCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@QAEXPBD@Z ENDP ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyMenu>
PUBLIC	??$RegisterWndCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@QAEXPBD@Z ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyWnd>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??$RegisterWndCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$RegisterWndCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@QAEXPBD@Z$0
__ehfuncinfo$??$RegisterWndCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$RegisterWndCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\iosp2guimanager.h
xdata$x	ENDS
;	COMDAT ??$RegisterWndCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@QAEXPBD@Z
_TEXT	SEGMENT
$T537415 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
??$RegisterWndCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@QAEXPBD@Z PROC ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyWnd>, COMDAT
; _this$ = ecx

; 127  : 	{

  00000	6a 10		 push	 16			; 00000010H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$RegisterWndCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@QAEXPBD@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx

; 128  : 		if ( !key ) {

  0000e	83 7d 08 00	 cmp	 DWORD PTR _key$[ebp], 0
  00012	74 46		 je	 SHORT $LN2@RegisterWn@2

; 129  : 			return;
; 130  : 		}
; 131  : 		m_CreateTable[ key ] = new WindowCreator<T>;

  00014	6a 04		 push	 4
  00016	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001b	59		 pop	 ecx
  0001c	85 c0		 test	 eax, eax
  0001e	74 0a		 je	 SHORT $LN4@RegisterWn@2
  00020	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$WindowCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@6B@
  00026	8b f0		 mov	 esi, eax
  00028	eb 02		 jmp	 SHORT $LN5@RegisterWn@2
$LN4@RegisterWn@2:
  0002a	33 f6		 xor	 esi, esi
$LN5@RegisterWn@2:
  0002c	ff 75 08	 push	 DWORD PTR _key$[ebp]
  0002f	8d 4d e4	 lea	 ecx, DWORD PTR $T537415[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00038	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	8d 45 e4	 lea	 eax, DWORD PTR $T537415[ebp]
  0003f	50		 push	 eax
  00040	8d 8f b0 00 00
	00		 lea	 ecx, DWORD PTR [edi+176]
  00046	e8 00 00 00 00	 call	 ??A?$map@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@@std@@QAEAAPAVIWndCreator@ioSP2GUIManager@@ABVioHashString@@@Z ; std::map<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> > >::operator[]
  0004b	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0004f	8d 4d e4	 lea	 ecx, DWORD PTR $T537415[ebp]
  00052	89 30		 mov	 DWORD PTR [eax], esi
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
$LN2@RegisterWn@2:

; 132  : 	}

  0005a	e8 00 00 00 00	 call	 __EH_epilog3
  0005f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$RegisterWndCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@QAEXPBD@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR $T537415[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??$RegisterWndCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@QAEXPBD@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$RegisterWndCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@QAEXPBD@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$RegisterWndCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@QAEXPBD@Z ENDP ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyWnd>
PUBLIC	??$RegisterWndCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@QAEXPBD@Z ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyTournament>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??$RegisterWndCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$RegisterWndCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@QAEXPBD@Z$0
__ehfuncinfo$??$RegisterWndCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$RegisterWndCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\iosp2guimanager.h
xdata$x	ENDS
;	COMDAT ??$RegisterWndCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@QAEXPBD@Z
_TEXT	SEGMENT
$T537436 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
??$RegisterWndCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@QAEXPBD@Z PROC ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyTournament>, COMDAT
; _this$ = ecx

; 127  : 	{

  00000	6a 10		 push	 16			; 00000010H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$RegisterWndCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@QAEXPBD@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx

; 128  : 		if ( !key ) {

  0000e	83 7d 08 00	 cmp	 DWORD PTR _key$[ebp], 0
  00012	74 46		 je	 SHORT $LN2@RegisterWn@3

; 129  : 			return;
; 130  : 		}
; 131  : 		m_CreateTable[ key ] = new WindowCreator<T>;

  00014	6a 04		 push	 4
  00016	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001b	59		 pop	 ecx
  0001c	85 c0		 test	 eax, eax
  0001e	74 0a		 je	 SHORT $LN4@RegisterWn@3
  00020	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$WindowCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@6B@
  00026	8b f0		 mov	 esi, eax
  00028	eb 02		 jmp	 SHORT $LN5@RegisterWn@3
$LN4@RegisterWn@3:
  0002a	33 f6		 xor	 esi, esi
$LN5@RegisterWn@3:
  0002c	ff 75 08	 push	 DWORD PTR _key$[ebp]
  0002f	8d 4d e4	 lea	 ecx, DWORD PTR $T537436[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00038	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	8d 45 e4	 lea	 eax, DWORD PTR $T537436[ebp]
  0003f	50		 push	 eax
  00040	8d 8f b0 00 00
	00		 lea	 ecx, DWORD PTR [edi+176]
  00046	e8 00 00 00 00	 call	 ??A?$map@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@@std@@QAEAAPAVIWndCreator@ioSP2GUIManager@@ABVioHashString@@@Z ; std::map<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> > >::operator[]
  0004b	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0004f	8d 4d e4	 lea	 ecx, DWORD PTR $T537436[ebp]
  00052	89 30		 mov	 DWORD PTR [eax], esi
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
$LN2@RegisterWn@3:

; 132  : 	}

  0005a	e8 00 00 00 00	 call	 __EH_epilog3
  0005f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$RegisterWndCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@QAEXPBD@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR $T537436[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??$RegisterWndCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@QAEXPBD@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$RegisterWndCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@QAEXPBD@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$RegisterWndCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@QAEXPBD@Z ENDP ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyTournament>
PUBLIC	??$RegisterWndCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@QAEXPBD@Z ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyTradeInfoWnd>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??$RegisterWndCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$RegisterWndCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@QAEXPBD@Z$0
__ehfuncinfo$??$RegisterWndCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$RegisterWndCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\iosp2guimanager.h
xdata$x	ENDS
;	COMDAT ??$RegisterWndCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@QAEXPBD@Z
_TEXT	SEGMENT
$T537457 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
??$RegisterWndCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@QAEXPBD@Z PROC ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyTradeInfoWnd>, COMDAT
; _this$ = ecx

; 127  : 	{

  00000	6a 10		 push	 16			; 00000010H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$RegisterWndCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@QAEXPBD@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx

; 128  : 		if ( !key ) {

  0000e	83 7d 08 00	 cmp	 DWORD PTR _key$[ebp], 0
  00012	74 46		 je	 SHORT $LN2@RegisterWn@4

; 129  : 			return;
; 130  : 		}
; 131  : 		m_CreateTable[ key ] = new WindowCreator<T>;

  00014	6a 04		 push	 4
  00016	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001b	59		 pop	 ecx
  0001c	85 c0		 test	 eax, eax
  0001e	74 0a		 je	 SHORT $LN4@RegisterWn@4
  00020	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$WindowCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@6B@
  00026	8b f0		 mov	 esi, eax
  00028	eb 02		 jmp	 SHORT $LN5@RegisterWn@4
$LN4@RegisterWn@4:
  0002a	33 f6		 xor	 esi, esi
$LN5@RegisterWn@4:
  0002c	ff 75 08	 push	 DWORD PTR _key$[ebp]
  0002f	8d 4d e4	 lea	 ecx, DWORD PTR $T537457[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00038	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	8d 45 e4	 lea	 eax, DWORD PTR $T537457[ebp]
  0003f	50		 push	 eax
  00040	8d 8f b0 00 00
	00		 lea	 ecx, DWORD PTR [edi+176]
  00046	e8 00 00 00 00	 call	 ??A?$map@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@@std@@QAEAAPAVIWndCreator@ioSP2GUIManager@@ABVioHashString@@@Z ; std::map<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> > >::operator[]
  0004b	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0004f	8d 4d e4	 lea	 ecx, DWORD PTR $T537457[ebp]
  00052	89 30		 mov	 DWORD PTR [eax], esi
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
$LN2@RegisterWn@4:

; 132  : 	}

  0005a	e8 00 00 00 00	 call	 __EH_epilog3
  0005f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$RegisterWndCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@QAEXPBD@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR $T537457[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??$RegisterWndCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@QAEXPBD@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$RegisterWndCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@QAEXPBD@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$RegisterWndCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@QAEXPBD@Z ENDP ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyTradeInfoWnd>
PUBLIC	??$RegisterWndCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@QAEXPBD@Z ; ioSP2GUIManager::RegisterWndCreator<ioShuffleButtonEx>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??$RegisterWndCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$RegisterWndCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@QAEXPBD@Z$0
__ehfuncinfo$??$RegisterWndCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$RegisterWndCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\iosp2guimanager.h
xdata$x	ENDS
;	COMDAT ??$RegisterWndCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@QAEXPBD@Z
_TEXT	SEGMENT
$T537478 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
??$RegisterWndCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@QAEXPBD@Z PROC ; ioSP2GUIManager::RegisterWndCreator<ioShuffleButtonEx>, COMDAT
; _this$ = ecx

; 127  : 	{

  00000	6a 10		 push	 16			; 00000010H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$RegisterWndCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@QAEXPBD@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx

; 128  : 		if ( !key ) {

  0000e	83 7d 08 00	 cmp	 DWORD PTR _key$[ebp], 0
  00012	74 46		 je	 SHORT $LN2@RegisterWn@5

; 129  : 			return;
; 130  : 		}
; 131  : 		m_CreateTable[ key ] = new WindowCreator<T>;

  00014	6a 04		 push	 4
  00016	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001b	59		 pop	 ecx
  0001c	85 c0		 test	 eax, eax
  0001e	74 0a		 je	 SHORT $LN4@RegisterWn@5
  00020	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$WindowCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@6B@
  00026	8b f0		 mov	 esi, eax
  00028	eb 02		 jmp	 SHORT $LN5@RegisterWn@5
$LN4@RegisterWn@5:
  0002a	33 f6		 xor	 esi, esi
$LN5@RegisterWn@5:
  0002c	ff 75 08	 push	 DWORD PTR _key$[ebp]
  0002f	8d 4d e4	 lea	 ecx, DWORD PTR $T537478[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00038	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	8d 45 e4	 lea	 eax, DWORD PTR $T537478[ebp]
  0003f	50		 push	 eax
  00040	8d 8f b0 00 00
	00		 lea	 ecx, DWORD PTR [edi+176]
  00046	e8 00 00 00 00	 call	 ??A?$map@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@@std@@QAEAAPAVIWndCreator@ioSP2GUIManager@@ABVioHashString@@@Z ; std::map<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> > >::operator[]
  0004b	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0004f	8d 4d e4	 lea	 ecx, DWORD PTR $T537478[ebp]
  00052	89 30		 mov	 DWORD PTR [eax], esi
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
$LN2@RegisterWn@5:

; 132  : 	}

  0005a	e8 00 00 00 00	 call	 __EH_epilog3
  0005f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$RegisterWndCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@QAEXPBD@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR $T537478[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??$RegisterWndCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@QAEXPBD@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$RegisterWndCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@QAEXPBD@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$RegisterWndCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@QAEXPBD@Z ENDP ; ioSP2GUIManager::RegisterWndCreator<ioShuffleButtonEx>
PUBLIC	??$RegisterWndCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@QAEXPBD@Z ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyExitWnd>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??$RegisterWndCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$RegisterWndCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@QAEXPBD@Z$0
__ehfuncinfo$??$RegisterWndCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$RegisterWndCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\iosp2guimanager.h
xdata$x	ENDS
;	COMDAT ??$RegisterWndCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@QAEXPBD@Z
_TEXT	SEGMENT
$T537499 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
??$RegisterWndCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@QAEXPBD@Z PROC ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyExitWnd>, COMDAT
; _this$ = ecx

; 127  : 	{

  00000	6a 10		 push	 16			; 00000010H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$RegisterWndCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@QAEXPBD@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx

; 128  : 		if ( !key ) {

  0000e	83 7d 08 00	 cmp	 DWORD PTR _key$[ebp], 0
  00012	74 46		 je	 SHORT $LN2@RegisterWn@6

; 129  : 			return;
; 130  : 		}
; 131  : 		m_CreateTable[ key ] = new WindowCreator<T>;

  00014	6a 04		 push	 4
  00016	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001b	59		 pop	 ecx
  0001c	85 c0		 test	 eax, eax
  0001e	74 0a		 je	 SHORT $LN4@RegisterWn@6
  00020	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$WindowCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@6B@
  00026	8b f0		 mov	 esi, eax
  00028	eb 02		 jmp	 SHORT $LN5@RegisterWn@6
$LN4@RegisterWn@6:
  0002a	33 f6		 xor	 esi, esi
$LN5@RegisterWn@6:
  0002c	ff 75 08	 push	 DWORD PTR _key$[ebp]
  0002f	8d 4d e4	 lea	 ecx, DWORD PTR $T537499[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00038	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	8d 45 e4	 lea	 eax, DWORD PTR $T537499[ebp]
  0003f	50		 push	 eax
  00040	8d 8f b0 00 00
	00		 lea	 ecx, DWORD PTR [edi+176]
  00046	e8 00 00 00 00	 call	 ??A?$map@VioHashString@@PAVIWndCreator@ioSP2GUIManager@@U?$less@VioHashString@@@std@@V?$allocator@U?$pair@$$CBVioHashString@@PAVIWndCreator@ioSP2GUIManager@@@std@@@5@@std@@QAEAAPAVIWndCreator@ioSP2GUIManager@@ABVioHashString@@@Z ; std::map<ioHashString,ioSP2GUIManager::IWndCreator *,std::less<ioHashString>,std::allocator<std::pair<ioHashString const ,ioSP2GUIManager::IWndCreator *> > >::operator[]
  0004b	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0004f	8d 4d e4	 lea	 ecx, DWORD PTR $T537499[ebp]
  00052	89 30		 mov	 DWORD PTR [eax], esi
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
$LN2@RegisterWn@6:

; 132  : 	}

  0005a	e8 00 00 00 00	 call	 __EH_epilog3
  0005f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$RegisterWndCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@QAEXPBD@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR $T537499[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??$RegisterWndCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@QAEXPBD@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$RegisterWndCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@QAEXPBD@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$RegisterWndCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@QAEXPBD@Z ENDP ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyExitWnd>
PUBLIC	??$_Umove@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IAEPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PAV21@00@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??$_Umove@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IAEPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PAV21@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IAEPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PAV21@00@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IAEPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PAV21@00@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *>
_TEXT	ENDS
PUBLIC	??_C@_0BC@HDBEPAAK@QuickLobbyExitWnd?$AA@	; `string'
PUBLIC	??_C@_0BC@PJLEHIEN@ioShuffleButtonEx?$AA@	; `string'
PUBLIC	??_C@_0BH@EKOJHHBA@QuickLobbyTradeInfoWnd?$AA@	; `string'
PUBLIC	??_C@_0BF@OBDPOENB@QuickLobbyTournament?$AA@	; `string'
PUBLIC	??_C@_0O@OPOJHGNG@QuickLobbyWnd?$AA@		; `string'
PUBLIC	??_C@_0P@MNNBJONA@QuickLobbyMenu?$AA@		; `string'
PUBLIC	?Register@ioGUIRegister@@SAXPAVioSP2GUIManager@@@Z ; ioGUIRegister::Register
;	COMDAT ??_C@_0BC@HDBEPAAK@QuickLobbyExitWnd?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\ioguiregister.cpp
CONST	SEGMENT
??_C@_0BC@HDBEPAAK@QuickLobbyExitWnd?$AA@ DB 'QuickLobbyExitWnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PJLEHIEN@ioShuffleButtonEx?$AA@
CONST	SEGMENT
??_C@_0BC@PJLEHIEN@ioShuffleButtonEx?$AA@ DB 'ioShuffleButtonEx', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EKOJHHBA@QuickLobbyTradeInfoWnd?$AA@
CONST	SEGMENT
??_C@_0BH@EKOJHHBA@QuickLobbyTradeInfoWnd?$AA@ DB 'QuickLobbyTradeInfoWnd'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OBDPOENB@QuickLobbyTournament?$AA@
CONST	SEGMENT
??_C@_0BF@OBDPOENB@QuickLobbyTournament?$AA@ DB 'QuickLobbyTournament', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OPOJHGNG@QuickLobbyWnd?$AA@
CONST	SEGMENT
??_C@_0O@OPOJHGNG@QuickLobbyWnd?$AA@ DB 'QuickLobbyWnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MNNBJONA@QuickLobbyMenu?$AA@
CONST	SEGMENT
??_C@_0P@MNNBJONA@QuickLobbyMenu?$AA@ DB 'QuickLobbyMenu', 00H ; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?Register@ioGUIRegister@@SAXPAVioSP2GUIManager@@@Z
_TEXT	SEGMENT
_guimgr$ = 8						; size = 4
?Register@ioGUIRegister@@SAXPAVioSP2GUIManager@@@Z PROC	; ioGUIRegister::Register, COMDAT

; 42   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 43   : 	if ( !guimgr ) {

  00004	8b 75 08	 mov	 esi, DWORD PTR _guimgr$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 48		 je	 SHORT $LN2@Register

; 44   : 		return;
; 45   : 	}
; 46   : 	/*
; 47   : 	guimgr->RegisterWndCreator<CharacterControlWnd>( "CharacterControlWnd" );
; 48   : 	guimgr->RegisterWndCreator<ShopWnd>( "ShopWnd" );
; 49   : 	guimgr->RegisterWndCreator<ShopWndWeeklyTab>( "ShopWndWeeklyTab" );
; 50   : 	guimgr->RegisterWndCreator<ShopWndETCTab>( "ShopWndETCTab" );
; 51   : 	guimgr->RegisterWndCreator<ShopBuyWndFrame>( "ShopBuyWndFrame" );
; 52   : 	guimgr->RegisterWndCreator<MercenaryEquipInfoTabWnd>( "MercenaryEquipInfoTabWnd" );
; 53   : 	guimgr->RegisterWndCreator<DecoInfoTabWnd>( "DecoInfoTabWnd" );
; 54   : 	guimgr->RegisterWndCreator<ETCInfoTabWnd>( "ETCInfoTabWnd" );
; 55   : 	guimgr->RegisterWndCreator<ShopBuyWnd>( "ShopBuyWnd" );
; 56   : 	guimgr->RegisterWndCreator<PaperMercenaryControlWnd>( "PaperMercenaryControlWnd" );
; 57   : 	*/
; 58   : 
; 59   : 	guimgr->RegisterWndCreator<QuickLobbyMenu>( "QuickLobbyMenu" );

  0000b	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MNNBJONA@QuickLobbyMenu?$AA@
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ??$RegisterWndCreator@VQuickLobbyMenu@@@ioSP2GUIManager@@QAEXPBD@Z ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyMenu>

; 60   : 	guimgr->RegisterWndCreator<QuickLobbyWnd>( "QuickLobbyWnd" );

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OPOJHGNG@QuickLobbyWnd?$AA@
  0001c	8b ce		 mov	 ecx, esi
  0001e	e8 00 00 00 00	 call	 ??$RegisterWndCreator@VQuickLobbyWnd@@@ioSP2GUIManager@@QAEXPBD@Z ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyWnd>

; 61   : 	guimgr->RegisterWndCreator<QuickLobbyTournament>( "QuickLobbyTournament" );

  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@OBDPOENB@QuickLobbyTournament?$AA@
  00028	8b ce		 mov	 ecx, esi
  0002a	e8 00 00 00 00	 call	 ??$RegisterWndCreator@VQuickLobbyTournament@@@ioSP2GUIManager@@QAEXPBD@Z ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyTournament>

; 62   : 	guimgr->RegisterWndCreator<QuickLobbyTradeInfoWnd>( "QuickLobbyTradeInfoWnd" );

  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@EKOJHHBA@QuickLobbyTradeInfoWnd?$AA@
  00034	8b ce		 mov	 ecx, esi
  00036	e8 00 00 00 00	 call	 ??$RegisterWndCreator@VQuickLobbyTradeInfoWnd@@@ioSP2GUIManager@@QAEXPBD@Z ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyTradeInfoWnd>

; 63   : 	guimgr->RegisterWndCreator<ioShuffleButtonEx>( "ioShuffleButtonEx" );

  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PJLEHIEN@ioShuffleButtonEx?$AA@
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ??$RegisterWndCreator@VioShuffleButtonEx@@@ioSP2GUIManager@@QAEXPBD@Z ; ioSP2GUIManager::RegisterWndCreator<ioShuffleButtonEx>

; 64   : 	guimgr->RegisterWndCreator<QuickLobbyExitWnd>( "QuickLobbyExitWnd" );

  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@HDBEPAAK@QuickLobbyExitWnd?$AA@
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??$RegisterWndCreator@VQuickLobbyExitWnd@@@ioSP2GUIManager@@QAEXPBD@Z ; ioSP2GUIManager::RegisterWndCreator<QuickLobbyExitWnd>
$LN2@Register:
  00053	5e		 pop	 esi

; 65   : 
; 66   : 	
; 67   : //#$%REGADDMARK%$#
; 68   : }

  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?Register@ioGUIRegister@@SAXPAVioSP2GUIManager@@@Z ENDP	; ioGUIRegister::Register
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::erase
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T537527 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::erase, COMDAT
; _this$ = ecx

; 1379 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1380 : 		if (_First == begin() && _Last == end())

  00007	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  0000d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0000f	75 13		 jne	 SHORT $LN65@erase@3
  00011	39 45 10	 cmp	 DWORD PTR __Last$[ebp], eax
  00014	75 0e		 jne	 SHORT $LN65@erase@3

; 1381 : 			{	// erase all
; 1382 : 			clear();

  00016	8b ce		 mov	 ecx, esi
  00018	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::clear

; 1383 : 			return (begin());

  0001d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00020	8b 08		 mov	 ecx, DWORD PTR [eax]
  00022	eb 25		 jmp	 SHORT $LN1@erase@3
$LN65@erase@3:

; 1384 : 			}
; 1385 : 		else
; 1386 : 			{	// partial erase, one at a time
; 1387 : 			while (_First != _Last)

  00024	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00027	74 20		 je	 SHORT $LN1@erase@3
  00029	57		 push	 edi
$LL2@erase@3:

; 1388 : 				erase(_First++);

  0002a	8b f9		 mov	 edi, ecx
  0002c	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0002f	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >,std::_Iterator_base0>::operator++
  00034	57		 push	 edi
  00035	8d 45 fc	 lea	 eax, DWORD PTR $T537527[ebp]
  00038	50		 push	 eax
  00039	8b ce		 mov	 ecx, esi
  0003b	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::erase
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00043	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00046	75 e2		 jne	 SHORT $LL2@erase@3
  00048	5f		 pop	 edi
$LN1@erase@3:

; 1389 : 			return (iterator(_First._Ptr, this));

  00049	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0004c	89 08		 mov	 DWORD PTR [eax], ecx
  0004e	5e		 pop	 esi

; 1390 : 			}
; 1391 : 		}

  0004f	c9		 leave
  00050	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::erase
_TEXT	ENDS
PUBLIC	?reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEXI@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::reserve
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
__Cat$537774 = 8					; size = 1
__Ptr$522863 = 8					; size = 4
__Count$ = 8						; size = 4
?reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEXI@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEXI@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx

; 747  : 		if (max_size() < _Count)

  0000e	8b 5d 08	 mov	 ebx, DWORD PTR __Count$[ebp]
  00011	81 fb 49 92 24
	09		 cmp	 ebx, 153391689		; 09249249H
  00017	76 0b		 jbe	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN42@reserve:
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  00024	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00027	2b 06		 sub	 eax, DWORD PTR [esi]
  00029	6a 1c		 push	 28			; 0000001cH
  0002b	99		 cdq
  0002c	59		 pop	 ecx
  0002d	f7 f9		 idiv	 ecx
  0002f	3b c3		 cmp	 eax, ebx
  00031	73 73		 jae	 SHORT $LN3@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00033	6a 00		 push	 0
  00035	53		 push	 ebx
  00036	e8 00 00 00 00	 call	 ??$_Allocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  0003b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0003d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00041	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00044	52		 push	 edx
  00045	89 45 08	 mov	 DWORD PTR __Ptr$522863[ebp], eax
  00048	ff 75 08	 push	 DWORD PTR __Ptr$522863[ebp]
  0004b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004e	50		 push	 eax
  0004f	51		 push	 ecx
  00050	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PAV10@00AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >

; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00055	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00057	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0005a	83 c4 18	 add	 esp, 24			; 00000018H
  0005d	2b c1		 sub	 eax, ecx
  0005f	6a 1c		 push	 28			; 0000001cH
  00061	99		 cdq
  00062	5f		 pop	 edi
  00063	f7 ff		 idiv	 edi
  00065	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  00069	8b f8		 mov	 edi, eax
  0006b	85 c9		 test	 ecx, ecx
  0006d	74 1a		 je	 SHORT $LN37@reserve

; 761  : 			if (this->_Myfirst != 0)
; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);

  0006f	ff 75 08	 push	 DWORD PTR __Cat$537774[ebp]
  00072	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00075	50		 push	 eax
  00076	ff 76 04	 push	 DWORD PTR [esi+4]
  00079	51		 push	 ecx
  0007a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >

; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  0007f	ff 36		 push	 DWORD PTR [esi]
  00081	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00086	83 c4 14	 add	 esp, 20			; 00000014H
$LN37@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  00089	8b ce		 mov	 ecx, esi
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00091	6b db 1c	 imul	 ebx, 28			; 0000001cH

; 770  : 			this->_Mylast = _Ptr + _Size;

  00094	6b ff 1c	 imul	 edi, 28			; 0000001cH
  00097	8b 45 08	 mov	 eax, DWORD PTR __Ptr$522863[ebp]
  0009a	03 d8		 add	 ebx, eax
  0009c	03 f8		 add	 edi, eax
  0009e	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  000a1	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 771  : 			this->_Myfirst = _Ptr;

  000a4	89 06		 mov	 DWORD PTR [esi], eax
$LN3@reserve:

; 772  : 			}
; 773  : 		}

  000a6	e8 00 00 00 00	 call	 __EH_epilog3
  000ab	c2 04 00	 ret	 4
__catch$?reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEXI@Z$0:

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

  000ae	ff 75 08	 push	 DWORD PTR __Ptr$522863[ebp]
  000b1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000b6	59		 pop	 ecx

; 757  : 			_RERAISE;

  000b7	6a 00		 push	 0
  000b9	6a 00		 push	 0
  000bb	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN43@reserve:
$LN41@reserve:
  000c0	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEXI@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::reserve
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Tidy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T537801 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1865 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1866 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 10		 mov	 edx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T537801[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::erase

; 1867 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reserve
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx
  0000d	57		 push	 edi
  0000e	99		 cdq
  0000f	6a 1c		 push	 28			; 0000001cH
  00011	5f		 pop	 edi
  00012	f7 ff		 idiv	 edi
  00014	8b f8		 mov	 edi, eax

; 1292 : 		if (max_size() - _Count < _Size)

  00016	b8 49 92 24 09	 mov	 eax, 153391689		; 09249249H
  0001b	2b 45 08	 sub	 eax, DWORD PTR __Count$[ebp]
  0001e	3b c7		 cmp	 eax, edi
  00020	73 0b		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve:
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  0002d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00030	2b c1		 sub	 eax, ecx
  00032	6a 1c		 push	 28			; 0000001cH
  00034	99		 cdq
  00035	59		 pop	 ecx
  00036	f7 f9		 idiv	 ecx
  00038	03 7d 08	 add	 edi, DWORD PTR __Count$[ebp]
  0003b	3b f8		 cmp	 edi, eax
  0003d	76 10		 jbe	 SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  0003f	57		 push	 edi
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IBEII@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Grow_to
  00047	50		 push	 eax
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEXI@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::reserve
$LN1@Reserve:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1298 : 		}

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
$LN20@Reserve:
?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reserve
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T538017 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >, COMDAT
; _this$ = ecx

; 790  : 		{	// destroy tree

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 791  : 		_Tidy();

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	8d 45 ec	 lea	 eax, DWORD PTR $T538017[ebp]
  0001f	50		 push	 eax
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::erase

; 792  : 		}

  00027	ff 76 04	 push	 DWORD PTR [esi+4]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	e8 00 00 00 00	 call	 __EH_epilog3
  00035	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >
__ehhandler$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >
PUBLIC	?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back, COMDAT
; _this$ = ecx

; 631  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 632  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f9		 cmp	 edi, ecx
  0000f	73 27		 jae	 SHORT $LN4@push_back
  00011	8b 16		 mov	 edx, DWORD PTR [esi]
  00013	3b d7		 cmp	 edx, edi
  00015	77 21		 ja	 SHORT $LN4@push_back

; 633  : 			{	// push back an element
; 634  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	8b c7		 mov	 eax, edi
  00019	2b c2		 sub	 eax, edx
  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	99		 cdq
  0001e	5f		 pop	 edi
  0001f	f7 ff		 idiv	 edi
  00021	8b f8		 mov	 edi, eax

; 635  : 			if (this->_Mylast == this->_Myend)

  00023	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00026	75 09		 jne	 SHORT $LN3@push_back

; 636  : 				_Reserve(1);

  00028	6a 01		 push	 1
  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reserve
$LN3@push_back:

; 637  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 638  : 			_Cons_val(this->_Alval,
; 639  : 				this->_Mylast,
; 640  : 				_STD forward<_Ty>(this->_Myfirst[_Idx]));

  00031	6b ff 1c	 imul	 edi, 28			; 0000001cH
  00034	03 3e		 add	 edi, DWORD PTR [esi]

; 641  : 			++this->_Mylast;
; 642  : 			}
; 643  : 		else

  00036	eb 0e		 jmp	 SHORT $LN1@push_back
$LN4@push_back:

; 644  : 			{	// push back a non-element
; 645  : 			if (this->_Mylast == this->_Myend)

  00038	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  0003b	75 09		 jne	 SHORT $LN1@push_back

; 646  : 				_Reserve(1);

  0003d	6a 01		 push	 1
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reserve
$LN1@push_back:

; 647  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 648  : 			_Cons_val(this->_Alval,
; 649  : 				this->_Mylast,
; 650  : 				_STD forward<_Ty>(_Val));

  00046	57		 push	 edi
  00047	ff 76 04	 push	 DWORD PTR [esi+4]
  0004a	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 651  : 			++this->_Mylast;

  00056	83 46 04 1c	 add	 DWORD PTR [esi+4], 28	; 0000001cH
  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi

; 652  : 			}
; 653  : 		}

  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back
_TEXT	ENDS
PUBLIC	??1?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> > >::~map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> > >
; Function compile flags: /Ogsp
;	COMDAT ??1?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@std@@QAE@XZ PROC ; std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> > >::~map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> > >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >
??1?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> > >::~map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> > >
_TEXT	ENDS
PUBLIC	??_C@_15KIDDGGCN@?$AA?1?$AA?$DO?$AA?$AA@	; `string'
PUBLIC	??_C@_13GEEGGHPK@?$AA?$DM?$AA?$AA@		; `string'
PUBLIC	??_C@_15MFNECGOC@?$AA?$DM?$AA?1?$AA?$AA@	; `string'
PUBLIC	??_C@_1BI@GEAHPNAM@?$AA?$DM?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?$DO?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@BFGFAPKA@?$AA?$DM?$AA?1?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?$DO?$AA?$AA@ ; `string'
PUBLIC	_args$GSCopy$
;	COMDAT ??_C@_15KIDDGGCN@?$AA?1?$AA?$DO?$AA?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
CONST	SEGMENT
??_C@_15KIDDGGCN@?$AA?1?$AA?$DO?$AA?$AA@ DB '/', 00H, '>', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_13GEEGGHPK@?$AA?$DM?$AA?$AA@
CONST	SEGMENT
??_C@_13GEEGGHPK@?$AA?$DM?$AA?$AA@ DB '<', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15MFNECGOC@?$AA?$DM?$AA?1?$AA?$AA@
CONST	SEGMENT
??_C@_15MFNECGOC@?$AA?$DM?$AA?1?$AA?$AA@ DB '<', 00H, '/', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@GEAHPNAM@?$AA?$DM?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?$DO?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@GEAHPNAM@?$AA?$DM?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?$DO?$AA?$AA@ DB '<'
	DB	00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 's', 00H, '>', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@BFGFAPKA@?$AA?$DM?$AA?1?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?$DO?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@BFGFAPKA@?$AA?$DM?$AA?1?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?$DO?$AA?$AA@ DB '<'
	DB	00H, '/', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '>', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?split@_Args@?1??FlashCall@_Data@ASInterface@@UAEJPB_W@Z@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@6@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?split@_Args@?1??FlashCall@_Data@ASInterface@@UAEJPB_W@Z@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@6@@Z$0
__ehfuncinfo$?split@_Args@?1??FlashCall@_Data@ASInterface@@UAEJPB_W@Z@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@6@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?split@_Args@?1??FlashCall@_Data@ASInterface@@UAEJPB_W@Z@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@6@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\flashplayertodirectx\include\asinterface.inl
xdata$x	ENDS
;	COMDAT ?split@_Args@?1??FlashCall@_Data@ASInterface@@UAEJPB_W@Z@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@6@@Z
_TEXT	SEGMENT
_args$GSCopy$ = -60					; size = 4
_nesting$ = -56						; size = 4
_argStart$ = -52					; size = 4
_closetag$ = -45					; size = 1
$T518688 = -44						; size = 28
__$EHRec$ = -12						; size = 12
_args$ = 8						; size = 4
?split@_Args@?1??FlashCall@_Data@ASInterface@@UAEJPB_W@Z@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@6@@Z PROC ; `ASInterface::_Data::FlashCall'::`2'::_Args::split, COMDAT
; _xml$ = esi

; 747  : 		{

  00000	6a 30		 push	 48			; 00000030H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?split@_Args@?1??FlashCall@_Data@ASInterface@@UAEJPB_W@Z@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@6@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000c	8b 45 08	 mov	 eax, DWORD PTR _args$[ebp]

; 779  : 							argStart = argEnd + 1;
; 780  : 						}
; 781  : 					}
; 782  : 				}
; 783  : 				++argEnd;

  0000f	89 45 c4	 mov	 DWORD PTR _args$GSCopy$[ebp], eax
  00012	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00015	83 f8 08	 cmp	 eax, 8
  00018	72 07		 jb	 SHORT $LN23@split

; 748  : 			const wchar_t* argStart = xml.c_str();

  0001a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0001c	89 4d cc	 mov	 DWORD PTR _argStart$[ebp], ecx
  0001f	eb 03		 jmp	 SHORT $LN24@split
$LN23@split:
  00021	89 75 cc	 mov	 DWORD PTR _argStart$[ebp], esi
$LN24@split:

; 749  : 			const wchar_t* argEnd = xml.c_str();

  00024	83 f8 08	 cmp	 eax, 8
  00027	72 04		 jb	 SHORT $LN29@split
  00029	8b 3e		 mov	 edi, DWORD PTR [esi]
  0002b	eb 02		 jmp	 SHORT $LN30@split
$LN29@split:
  0002d	8b fe		 mov	 edi, esi
$LN30@split:

; 750  : 			int nesting = 0;

  0002f	83 65 c8 00	 and	 DWORD PTR _nesting$[ebp], 0

; 751  : 			bool closetag = false;

  00033	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__wcsncmp
  00039	c6 45 d3 00	 mov	 BYTE PTR _closetag$[ebp], 0
$LL15@split:

; 752  : 			while (argEnd - xml.c_str() < (int)xml.length())

  0003d	83 7e 14 08	 cmp	 DWORD PTR [esi+20], 8
  00041	72 04		 jb	 SHORT $LN35@split
  00043	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00045	eb 02		 jmp	 SHORT $LN36@split
$LN35@split:
  00047	8b ce		 mov	 ecx, esi
$LN36@split:
  00049	8b d7		 mov	 edx, edi
  0004b	2b d1		 sub	 edx, ecx
  0004d	d1 fa		 sar	 edx, 1
  0004f	3b 56 10	 cmp	 edx, DWORD PTR [esi+16]
  00052	0f 8d e7 00 00
	00		 jge	 $LN50@split

; 753  : 			{
; 754  : 				if (wcsncmp(argEnd, L"</arguments>", 12) == 0) break;

  00058	6a 0c		 push	 12			; 0000000cH
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@BFGFAPKA@?$AA?$DM?$AA?1?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?$DO?$AA?$AA@
  0005f	57		 push	 edi
  00060	ff d3		 call	 ebx
  00062	83 c4 0c	 add	 esp, 12			; 0000000cH
  00065	85 c0		 test	 eax, eax
  00067	0f 84 d2 00 00
	00		 je	 $LN50@split

; 755  : 				else
; 756  : 				if (wcsncmp(argEnd, L"<arguments>", 11) == 0)

  0006d	6a 0b		 push	 11			; 0000000bH
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_1BI@GEAHPNAM@?$AA?$DM?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?$DO?$AA?$AA@
  00074	57		 push	 edi
  00075	ff d3		 call	 ebx
  00077	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007a	85 c0		 test	 eax, eax
  0007c	75 0f		 jne	 SHORT $LN11@split

; 757  : 				{
; 758  : 					nesting = 0;

  0007e	21 45 c8	 and	 DWORD PTR _nesting$[ebp], eax

; 759  : 					argStart += 11;

  00081	83 45 cc 16	 add	 DWORD PTR _argStart$[ebp], 22 ; 00000016H

; 760  : 					argEnd += 10;

  00085	83 c7 14	 add	 edi, 20			; 00000014H

; 761  : 				}
; 762  : 				else

  00088	e9 aa 00 00 00	 jmp	 $LN1@split
$LN11@split:

; 763  : 				if (wcsncmp(argEnd, L"</", 2) == 0) closetag = true;

  0008d	6a 02		 push	 2
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_15MFNECGOC@?$AA?$DM?$AA?1?$AA?$AA@
  00094	57		 push	 edi
  00095	ff d3		 call	 ebx
  00097	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009a	85 c0		 test	 eax, eax

; 764  : 				else

  0009c	74 2a		 je	 SHORT $LN52@split

; 765  : 				if (wcsncmp(argEnd, L"<", 1) == 0) ++nesting;

  0009e	6a 01		 push	 1
  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_13GEEGGHPK@?$AA?$DM?$AA?$AA@
  000a5	57		 push	 edi
  000a6	ff d3		 call	 ebx
  000a8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ab	85 c0		 test	 eax, eax
  000ad	75 08		 jne	 SHORT $LN7@split
  000af	ff 45 c8	 inc	 DWORD PTR _nesting$[ebp]

; 766  : 				else

  000b2	e9 80 00 00 00	 jmp	 $LN1@split
$LN7@split:

; 767  : 				if (wcsncmp(argEnd, L"/>", 2) == 0) closetag = true;

  000b7	6a 02		 push	 2
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_15KIDDGGCN@?$AA?1?$AA?$DO?$AA?$AA@
  000be	57		 push	 edi
  000bf	ff d3		 call	 ebx
  000c1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c4	85 c0		 test	 eax, eax
  000c6	75 06		 jne	 SHORT $LN5@split
$LN52@split:
  000c8	c6 45 d3 01	 mov	 BYTE PTR _closetag$[ebp], 1

; 768  : 				else

  000cc	eb 69		 jmp	 SHORT $LN1@split
$LN5@split:

; 769  : 				if (wcsncmp(argEnd, L">", 1) == 0)

  000ce	6a 01		 push	 1
  000d0	68 00 00 00 00	 push	 OFFSET ??_C@_13MOEPKPHB@?$AA?$DO?$AA?$AA@
  000d5	57		 push	 edi
  000d6	ff d3		 call	 ebx
  000d8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000db	85 c0		 test	 eax, eax
  000dd	75 58		 jne	 SHORT $LN1@split

; 770  : 				{
; 771  : 					if (closetag)

  000df	38 45 d3	 cmp	 BYTE PTR _closetag$[ebp], al
  000e2	74 53		 je	 SHORT $LN1@split

; 772  : 					{
; 773  : 						closetag = false;
; 774  : 						if (--nesting == 0)

  000e4	ff 4d c8	 dec	 DWORD PTR _nesting$[ebp]
  000e7	88 45 d3	 mov	 BYTE PTR _closetag$[ebp], al
  000ea	75 4b		 jne	 SHORT $LN1@split

; 775  : 						{
; 776  : 							size_t start = argStart - xml.c_str();

  000ec	83 7e 14 08	 cmp	 DWORD PTR [esi+20], 8
  000f0	72 04		 jb	 SHORT $LN43@split
  000f2	8b 06		 mov	 eax, DWORD PTR [esi]
  000f4	eb 02		 jmp	 SHORT $LN44@split
$LN43@split:
  000f6	8b c6		 mov	 eax, esi
$LN44@split:
  000f8	8b 4d cc	 mov	 ecx, DWORD PTR _argStart$[ebp]
  000fb	2b c8		 sub	 ecx, eax

; 777  : 							size_t size = argEnd - argStart + 1;

  000fd	8b c7		 mov	 eax, edi
  000ff	2b 45 cc	 sub	 eax, DWORD PTR _argStart$[ebp]
  00102	d1 f9		 sar	 ecx, 1
  00104	d1 f8		 sar	 eax, 1
  00106	40		 inc	 eax

; 778  : 							args.push_back(xml.substr(start, size));

  00107	50		 push	 eax
  00108	51		 push	 ecx
  00109	8d 45 d4	 lea	 eax, DWORD PTR $T518688[ebp]
  0010c	50		 push	 eax
  0010d	8b ce		 mov	 ecx, esi
  0010f	e8 00 00 00 00	 call	 ?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr
  00114	8b 4d c4	 mov	 ecx, DWORD PTR _args$GSCopy$[ebp]
  00117	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back
  00121	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00125	6a 00		 push	 0
  00127	6a 01		 push	 1
  00129	8d 4d d4	 lea	 ecx, DWORD PTR $T518688[ebp]
  0012c	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 784  : 			}

  00131	8d 47 02	 lea	 eax, DWORD PTR [edi+2]
  00134	89 45 cc	 mov	 DWORD PTR _argStart$[ebp], eax
$LN1@split:

; 779  : 							argStart = argEnd + 1;
; 780  : 						}
; 781  : 					}
; 782  : 				}
; 783  : 				++argEnd;

  00137	83 c7 02	 add	 edi, 2

; 784  : 			}

  0013a	e9 fe fe ff ff	 jmp	 $LL15@split
$LN50@split:

; 785  : 		}};

  0013f	e8 00 00 00 00	 call	 __EH_epilog3_GS
  00144	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?split@_Args@?1??FlashCall@_Data@ASInterface@@UAEJPB_W@Z@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@6@@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR $T518688[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?split@_Args@?1??FlashCall@_Data@ASInterface@@UAEJPB_W@Z@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@6@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?split@_Args@?1??FlashCall@_Data@ASInterface@@UAEJPB_W@Z@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@6@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?split@_Args@?1??FlashCall@_Data@ASInterface@@UAEJPB_W@Z@SAXABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@6@@Z ENDP ; `ASInterface::_Data::FlashCall'::`2'::_Args::split
PUBLIC	??_G?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@std@@QAEPAXI@Z ; std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> > >::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_G?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@std@@QAEPAXI@Z PROC ; std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@10
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@10:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_G?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@@std@@QAEPAXI@Z ENDP ; std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> > >::`scalar deleting destructor'
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?Destruct@_Data@ASValue@@QAEXXZ
_TEXT	SEGMENT
?Destruct@_Data@ASValue@@QAEXXZ PROC			; ASValue::_Data::Destruct, COMDAT
; _this$ = ecx

; 60   : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 61   : 		switch (type)

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	83 e8 00	 sub	 eax, 0
  00008	57		 push	 edi
  00009	74 41		 je	 SHORT $LN5@Destruct
  0000b	48		 dec	 eax
  0000c	74 3e		 je	 SHORT $LN5@Destruct
  0000e	48		 dec	 eax
  0000f	74 27		 je	 SHORT $LN3@Destruct
  00011	48		 dec	 eax
  00012	74 14		 je	 SHORT $LN2@Destruct
  00014	48		 dec	 eax
  00015	75 3e		 jne	 SHORT $LN6@Destruct

; 67   : 		case 4: delete reinterpret_cast<Object*>(data); break;

  00017	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0001a	85 ff		 test	 edi, edi
  0001c	74 37		 je	 SHORT $LN6@Destruct
  0001e	8b cf		 mov	 ecx, edi
  00020	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@U?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UASValue@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,ASValue,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,ASValue> >,0> >
$LN37@Destruct:
  00025	57		 push	 edi
  00026	eb 27		 jmp	 SHORT $LN36@Destruct
$LN2@Destruct:

; 66   : 		case 3: delete reinterpret_cast<Array*>(data); break;

  00028	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0002b	85 ff		 test	 edi, edi
  0002d	74 26		 je	 SHORT $LN6@Destruct
  0002f	8b cf		 mov	 ecx, edi
  00031	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UASValue@@V?$allocator@UASValue@@@std@@@std@@IAEXXZ ; std::vector<ASValue,std::allocator<ASValue> >::_Tidy
  00036	eb ed		 jmp	 SHORT $LN37@Destruct
$LN3@Destruct:

; 64   : 		case 1: delete reinterpret_cast<Number*>(data); break;
; 65   : 		case 2: delete reinterpret_cast<String*>(data); break;

  00038	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0003b	85 ff		 test	 edi, edi
  0003d	74 16		 je	 SHORT $LN6@Destruct
  0003f	6a 00		 push	 0
  00041	6a 01		 push	 1
  00043	8b cf		 mov	 ecx, edi
  00045	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
  0004a	eb d9		 jmp	 SHORT $LN37@Destruct
$LN5@Destruct:

; 62   : 		{
; 63   : 		case 0: delete reinterpret_cast<Boolean*>(data); break;

  0004c	ff 76 04	 push	 DWORD PTR [esi+4]
$LN36@Destruct:
  0004f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00054	59		 pop	 ecx
$LN6@Destruct:

; 68   : 		}
; 69   : 		type = -1;

  00055	83 0e ff	 or	 DWORD PTR [esi], -1
  00058	5f		 pop	 edi
  00059	5e		 pop	 esi

; 70   : 	}

  0005a	c3		 ret	 0
?Destruct@_Data@ASValue@@QAEXXZ ENDP			; ASValue::_Data::Destruct
_TEXT	ENDS
END
