; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\Housing\ioBlockManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
PUBLIC	?ms_Singleton@?$Singleton@VioBlockManager@@@@1PAVioBlockManager@@A ; Singleton<ioBlockManager>::ms_Singleton
;	COMDAT ?ms_Singleton@?$Singleton@VioBlockManager@@@@1PAVioBlockManager@@A
_BSS	SEGMENT
?ms_Singleton@?$Singleton@VioBlockManager@@@@1PAVioBlockManager@@A DD 01H DUP (?) ; Singleton<ioBlockManager>::ms_Singleton
_BSS	ENDS
;	COMDAT ?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB DD 01H ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
CONST	ENDS
PUBLIC	??0TilePos@@QAE@HHH@Z				; TilePos::TilePos
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\blockdefine.h
;	COMDAT ??0TilePos@@QAE@HHH@Z
_TEXT	SEGMENT
_nX$ = 8						; size = 4
_nY$ = 12						; size = 4
_nZ$ = 16						; size = 4
??0TilePos@@QAE@HHH@Z PROC				; TilePos::TilePos, COMDAT
; _this$ = ecx

; 96   : 	TilePos( int nX, int nY, int nZ )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 97   : 	{
; 98   : 		x		= nX;

  00005	8b 4d 08	 mov	 ecx, DWORD PTR _nX$[ebp]

; 99   : 		y		= nY;
; 100  : 		z		= nZ;
; 101  : 		event	= 0;

  00008	83 60 0c 00	 and	 DWORD PTR [eax+12], 0
  0000c	89 08		 mov	 DWORD PTR [eax], ecx
  0000e	8b 4d 0c	 mov	 ecx, DWORD PTR _nY$[ebp]
  00011	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00014	8b 4d 10	 mov	 ecx, DWORD PTR _nZ$[ebp]
  00017	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 102  : 	}

  0001a	5d		 pop	 ebp
  0001b	c2 0c 00	 ret	 12			; 0000000cH
??0TilePos@@QAE@HHH@Z ENDP				; TilePos::TilePos
_TEXT	ENDS
PUBLIC	?SetCode@ioBlockProperty@@IAEXH@Z		; ioBlockProperty::SetCode
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockproperty.h
;	COMDAT ?SetCode@ioBlockProperty@@IAEXH@Z
_TEXT	SEGMENT
_nCode$ = 8						; size = 4
?SetCode@ioBlockProperty@@IAEXH@Z PROC			; ioBlockProperty::SetCode, COMDAT
; _this$ = ecx

; 130  : 	void SetCode( int nCode ){ m_nCode = nCode; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _nCode$[ebp]
  00006	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetCode@ioBlockProperty@@IAEXH@Z ENDP			; ioBlockProperty::SetCode
_TEXT	ENDS
PUBLIC	?GetCode@ioBlockProperty@@QBEHXZ		; ioBlockProperty::GetCode
; Function compile flags: /Ogsp
;	COMDAT ?GetCode@ioBlockProperty@@QBEHXZ
_TEXT	SEGMENT
?GetCode@ioBlockProperty@@QBEHXZ PROC			; ioBlockProperty::GetCode, COMDAT
; _this$ = ecx

; 133  : 	int GetCode() const { return m_nCode; }

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetCode@ioBlockProperty@@QBEHXZ ENDP			; ioBlockProperty::GetCode
_TEXT	ENDS
PUBLIC	?GetShadowType@ioBlockProperty@@QBE?AW4ShadowType@1@XZ ; ioBlockProperty::GetShadowType
; Function compile flags: /Ogsp
;	COMDAT ?GetShadowType@ioBlockProperty@@QBE?AW4ShadowType@1@XZ
_TEXT	SEGMENT
?GetShadowType@ioBlockProperty@@QBE?AW4ShadowType@1@XZ PROC ; ioBlockProperty::GetShadowType, COMDAT
; _this$ = ecx

; 136  : 	ioBlockProperty::ShadowType GetShadowType() const { return m_eShadowType; }

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00003	c3		 ret	 0
?GetShadowType@ioBlockProperty@@QBE?AW4ShadowType@1@XZ ENDP ; ioBlockProperty::GetShadowType
_TEXT	ENDS
PUBLIC	?GetTileMax@ioBlockManager@@QAEHXZ		; ioBlockManager::GetTileMax
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockmanager.h
;	COMDAT ?GetTileMax@ioBlockManager@@QAEHXZ
_TEXT	SEGMENT
?GetTileMax@ioBlockManager@@QAEHXZ PROC			; ioBlockManager::GetTileMax, COMDAT
; _this$ = ecx

; 71   : 	int GetTileMax(){ return m_nTileMax; }

  00000	8b 41 48	 mov	 eax, DWORD PTR [ecx+72]
  00003	c3		 ret	 0
?GetTileMax@ioBlockManager@@QAEHXZ ENDP			; ioBlockManager::GetTileMax
_TEXT	ENDS
PUBLIC	?GetUniqueIndex@ioBlock@@QAE_JXZ		; ioBlock::GetUniqueIndex
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblock.h
;	COMDAT ?GetUniqueIndex@ioBlock@@QAE_JXZ
_TEXT	SEGMENT
?GetUniqueIndex@ioBlock@@QAE_JXZ PROC			; ioBlock::GetUniqueIndex, COMDAT
; _this$ = ecx

; 157  : 	inline __int64 GetUniqueIndex(){ return m_nUniqueIndex; }

  00000	8b 81 c8 01 00
	00		 mov	 eax, DWORD PTR [ecx+456]
  00006	8b 91 cc 01 00
	00		 mov	 edx, DWORD PTR [ecx+460]
  0000c	c3		 ret	 0
?GetUniqueIndex@ioBlock@@QAE_JXZ ENDP			; ioBlock::GetUniqueIndex
_TEXT	ENDS
PUBLIC	?GetTilePos@ioBlock@@QBEABVTilePos@@XZ		; ioBlock::GetTilePos
; Function compile flags: /Ogsp
;	COMDAT ?GetTilePos@ioBlock@@QBEABVTilePos@@XZ
_TEXT	SEGMENT
?GetTilePos@ioBlock@@QBEABVTilePos@@XZ PROC		; ioBlock::GetTilePos, COMDAT
; _this$ = ecx

; 158  : 	const TilePos& GetTilePos() const { return m_Pos; }

  00000	8d 81 d4 01 00
	00		 lea	 eax, DWORD PTR [ecx+468]
  00006	c3		 ret	 0
?GetTilePos@ioBlock@@QBEABVTilePos@@XZ ENDP		; ioBlock::GetTilePos
_TEXT	ENDS
PUBLIC	?GetPlayMode@ioPlayStage@@QBEPAVioPlayMode@@XZ	; ioPlayStage::GetPlayMode
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioplaystage.h
;	COMDAT ?GetPlayMode@ioPlayStage@@QBEPAVioPlayMode@@XZ
_TEXT	SEGMENT
?GetPlayMode@ioPlayStage@@QBEPAVioPlayMode@@XZ PROC	; ioPlayStage::GetPlayMode, COMDAT
; _this$ = ecx

; 780  : 	inline ioPlayMode* GetPlayMode() const { return m_pPlayMode; }

  00000	8b 81 10 01 00
	00		 mov	 eax, DWORD PTR [ecx+272]
  00006	c3		 ret	 0
?GetPlayMode@ioPlayStage@@QBEPAVioPlayMode@@XZ ENDP	; ioPlayStage::GetPlayMode
_TEXT	ENDS
PUBLIC	??_GioBlockProperty@@QAEPAXI@Z			; ioBlockProperty::`scalar deleting destructor'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??1ioBlockProperty@@QAE@XZ:PROC			; ioBlockProperty::~ioBlockProperty
; Function compile flags: /Ogsp
;	COMDAT ??_GioBlockProperty@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioBlockProperty@@QAEPAXI@Z PROC			; ioBlockProperty::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioBlockProperty@@QAE@XZ ; ioBlockProperty::~ioBlockProperty
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioBlockProperty@@QAEPAXI@Z ENDP			; ioBlockProperty::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?SetBlockModeType@ioBlockManager@@QAEXW4BlockModeType@@@Z ; ioBlockManager::SetBlockModeType
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockmanager.cpp
;	COMDAT ?SetBlockModeType@ioBlockManager@@QAEXW4BlockModeType@@@Z
_TEXT	SEGMENT
_eType$ = 8						; size = 4
?SetBlockModeType@ioBlockManager@@QAEXW4BlockModeType@@@Z PROC ; ioBlockManager::SetBlockModeType, COMDAT
; _this$ = ecx

; 45   : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 46   : 	m_eType = eType;

  00003	8b 45 08	 mov	 eax, DWORD PTR _eType$[ebp]
  00006	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 47   : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetBlockModeType@ioBlockManager@@QAEXW4BlockModeType@@@Z ENDP ; ioBlockManager::SetBlockModeType
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1exception@std@@UAE@XZ
  00012	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00016	74 07		 je	 SHORT $LN1@scalar@2
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	59		 pop	 ecx
$LN1@scalar@2:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1ioINILoader_e@@QAE@XZ			; ioINILoader_e::~ioINILoader_e
EXTRN	__imp_??1ioINILoader@@QAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1ioINILoader_e@@QAE@XZ
_TEXT	SEGMENT
??1ioINILoader_e@@QAE@XZ PROC				; ioINILoader_e::~ioINILoader_e, COMDAT
; _this$ = ecx
  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
??1ioINILoader_e@@QAE@XZ ENDP				; ioINILoader_e::~ioINILoader_e
_TEXT	ENDS
PUBLIC	?SetTileMax@ioBlockManager@@QAEXHH@Z		; ioBlockManager::SetTileMax
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockmanager.cpp
;	COMDAT ?SetTileMax@ioBlockManager@@QAEXHH@Z
_TEXT	SEGMENT
_nMax$ = 8						; size = 4
_nHeight$ = 12						; size = 4
?SetTileMax@ioBlockManager@@QAEXHH@Z PROC		; ioBlockManager::SetTileMax, COMDAT
; _this$ = ecx

; 89   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 90   : 	m_nTileMax		= nMax; 

  00003	8b 45 08	 mov	 eax, DWORD PTR _nMax$[ebp]
  00006	89 41 48	 mov	 DWORD PTR [ecx+72], eax

; 91   : 	m_nHeightMax	= nHeight;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _nHeight$[ebp]
  0000c	89 41 4c	 mov	 DWORD PTR [ecx+76], eax

; 92   : }

  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
?SetTileMax@ioBlockManager@@QAEXHH@Z ENDP		; ioBlockManager::SetTileMax
_TEXT	ENDS
PUBLIC	??_C@_0CC@GDEIPCMD@Create?5Block?5Templete?5Failed?5?3?5?$CF@ ; `string'
PUBLIC	?CreateBlockTemplete@ioBlockManager@@IAEPAVioBlockProperty@@AAVioINILoader@@H@Z ; ioBlockManager::CreateBlockTemplete
EXTRN	__imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ:PROC
EXTRN	__imp_?LOG@@3VCLog@@A:BYTE
EXTRN	??0ioBlockProperty@@QAE@XZ:PROC			; ioBlockProperty::ioBlockProperty
EXTRN	??0ioFishBlockProperty@@QAE@XZ:PROC		; ioFishBlockProperty::ioFishBlockProperty
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
;	COMDAT ??_C@_0CC@GDEIPCMD@Create?5Block?5Templete?5Failed?5?3?5?$CF@
CONST	SEGMENT
??_C@_0CC@GDEIPCMD@Create?5Block?5Templete?5Failed?5?3?5?$CF@ DB 'Create '
	DB	'Block Templete Failed : %d', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateBlockTemplete@ioBlockManager@@IAEPAVioBlockProperty@@AAVioINILoader@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateBlockTemplete@ioBlockManager@@IAEPAVioBlockProperty@@AAVioINILoader@@H@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateBlockTemplete@ioBlockManager@@IAEPAVioBlockProperty@@AAVioINILoader@@H@Z$1
__ehfuncinfo$?CreateBlockTemplete@ioBlockManager@@IAEPAVioBlockProperty@@AAVioINILoader@@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CreateBlockTemplete@ioBlockManager@@IAEPAVioBlockProperty@@AAVioINILoader@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?CreateBlockTemplete@ioBlockManager@@IAEPAVioBlockProperty@@AAVioINILoader@@H@Z
_TEXT	SEGMENT
$T518054 = -16						; size = 4
$T518050 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_rkLoader$ = 8						; size = 4
_nCode$ = 12						; size = 4
?CreateBlockTemplete@ioBlockManager@@IAEPAVioBlockProperty@@AAVioINILoader@@H@Z PROC ; ioBlockManager::CreateBlockTemplete, COMDAT
; _this$ = ecx

; 95   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?CreateBlockTemplete@ioBlockManager@@IAEPAVioBlockProperty@@AAVioINILoader@@H@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 96   : 	ioBlockProperty* pProperty = NULL;
; 97   : 	switch( nCode / ioBlock::BT_DIVIDE )

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _nCode$[ebp]
  0000f	99		 cdq
  00010	b9 40 42 0f 00	 mov	 ecx, 1000000		; 000f4240H
  00015	f7 f9		 idiv	 ecx
  00017	85 c0		 test	 eax, eax
  00019	7e 64		 jle	 SHORT $LN2@CreateBloc
  0001b	83 f8 02	 cmp	 eax, 2
  0001e	7e 27		 jle	 SHORT $LN4@CreateBloc
  00020	83 f8 03	 cmp	 eax, 3
  00023	75 5a		 jne	 SHORT $LN2@CreateBloc

; 102  : 		break;
; 103  : 	case ioBlock::BT_FISHING:
; 104  : 		pProperty = new ioFishBlockProperty();

  00025	68 a8 00 00 00	 push	 168			; 000000a8H
  0002a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002f	59		 pop	 ecx
  00030	8b c8		 mov	 ecx, eax
  00032	89 4d f0	 mov	 DWORD PTR $T518054[ebp], ecx
  00035	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0003c	85 c9		 test	 ecx, ecx
  0003e	74 26		 je	 SHORT $LN9@CreateBloc
  00040	e8 00 00 00 00	 call	 ??0ioFishBlockProperty@@QAE@XZ ; ioFishBlockProperty::ioFishBlockProperty
  00045	eb 21		 jmp	 SHORT $LN10@CreateBloc
$LN4@CreateBloc:

; 98   : 	{
; 99   : 	case ioBlock::BT_DEFAULT:	
; 100  : 	case ioBlock::BT_TILE:
; 101  : 		pProperty = new ioBlockProperty();

  00047	68 a8 00 00 00	 push	 168			; 000000a8H
  0004c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00051	59		 pop	 ecx
  00052	8b c8		 mov	 ecx, eax
  00054	89 4d f0	 mov	 DWORD PTR $T518050[ebp], ecx
  00057	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0005b	85 c9		 test	 ecx, ecx
  0005d	74 07		 je	 SHORT $LN9@CreateBloc
  0005f	e8 00 00 00 00	 call	 ??0ioBlockProperty@@QAE@XZ ; ioBlockProperty::ioBlockProperty
  00064	eb 02		 jmp	 SHORT $LN10@CreateBloc
$LN9@CreateBloc:
  00066	33 c0		 xor	 eax, eax
$LN10@CreateBloc:
  00068	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0006c	8b f0		 mov	 esi, eax

; 105  : 		break;
; 106  : 	}
; 107  : 
; 108  : 	if( pProperty )

  0006e	85 f6		 test	 esi, esi
  00070	74 0d		 je	 SHORT $LN2@CreateBloc

; 109  : 	{
; 110  : 		pProperty->LoadBlockProperty( rkLoader );

  00072	ff 75 08	 push	 DWORD PTR _rkLoader$[ebp]
  00075	8b 06		 mov	 eax, DWORD PTR [esi]
  00077	8b ce		 mov	 ecx, esi
  00079	ff 10		 call	 DWORD PTR [eax]

; 111  : 		return pProperty;

  0007b	8b c6		 mov	 eax, esi
  0007d	eb 1b		 jmp	 SHORT $LN7@CreateBloc
$LN2@CreateBloc:

; 112  : 	}
; 113  : 	else
; 114  : 	{
; 115  : 		LOG.PrintTimeAndLog(0, "Create Block Templete Failed : %d", nCode );

  0007f	ff 75 0c	 push	 DWORD PTR _nCode$[ebp]
  00082	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@GDEIPCMD@Create?5Block?5Templete?5Failed?5?3?5?$CF@
  00087	6a 00		 push	 0
  00089	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  00095	83 c4 10	 add	 esp, 16			; 00000010H

; 116  : 	}
; 117  : 
; 118  : 	return NULL;

  00098	33 c0		 xor	 eax, eax
$LN7@CreateBloc:

; 119  : }

  0009a	e8 00 00 00 00	 call	 __EH_epilog3
  0009f	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateBlockTemplete@ioBlockManager@@IAEPAVioBlockProperty@@AAVioINILoader@@H@Z$1:
  00000	ff 75 f0	 push	 DWORD PTR $T518054[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__unwindfunclet$?CreateBlockTemplete@ioBlockManager@@IAEPAVioBlockProperty@@AAVioINILoader@@H@Z$0:
  0000a	ff 75 f0	 push	 DWORD PTR $T518050[ebp]
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	59		 pop	 ecx
  00013	c3		 ret	 0
__ehhandler$?CreateBlockTemplete@ioBlockManager@@IAEPAVioBlockProperty@@AAVioINILoader@@H@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001e	33 c8		 xor	 ecx, eax
  00020	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00025	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateBlockTemplete@ioBlockManager@@IAEPAVioBlockProperty@@AAVioINILoader@@H@Z
  0002a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateBlockTemplete@ioBlockManager@@IAEPAVioBlockProperty@@AAVioINILoader@@H@Z ENDP ; ioBlockManager::CreateBlockTemplete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	return (_Where);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 58   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 62   : 	}

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?GetAllBlock@ioBlockManager@@QAEABV?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@XZ ; ioBlockManager::GetAllBlock
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockmanager.cpp
;	COMDAT ?GetAllBlock@ioBlockManager@@QAEABV?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@XZ
_TEXT	SEGMENT
?GetAllBlock@ioBlockManager@@QAEABV?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@XZ PROC ; ioBlockManager::GetAllBlock, COMDAT
; _this$ = ecx

; 255  : 	return m_BlockList;

  00000	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]

; 256  : }

  00003	c3		 ret	 0
?GetAllBlock@ioBlockManager@@QAEABV?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@XZ ENDP ; ioBlockManager::GetAllBlock
_TEXT	ENDS
PUBLIC	?StartUpdateBound@ioBlockManager@@QAEXXZ	; ioBlockManager::StartUpdateBound
EXTRN	__imp_?GetLoopSec@ioFrameTimer@@QBEKXZ:PROC
EXTRN	__imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?StartUpdateBound@ioBlockManager@@QAEXXZ
_TEXT	SEGMENT
?StartUpdateBound@ioBlockManager@@QAEXXZ PROC		; ioBlockManager::StartUpdateBound, COMDAT
; _this$ = ecx

; 302  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 303  : 	m_dwPlayStartTime = FRAMEGETTIME();

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00009	8b c8		 mov	 ecx, eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00011	89 46 30	 mov	 DWORD PTR [esi+48], eax
  00014	5e		 pop	 esi

; 304  : }

  00015	c3		 ret	 0
?StartUpdateBound@ioBlockManager@@QAEXXZ ENDP		; ioBlockManager::StartUpdateBound
_TEXT	ENDS
PUBLIC	??0?$Singleton@VioBlockManager@@@@QAE@XZ	; Singleton<ioBlockManager>::Singleton<ioBlockManager>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
;	COMDAT ??0?$Singleton@VioBlockManager@@@@QAE@XZ
_TEXT	SEGMENT
??0?$Singleton@VioBlockManager@@@@QAE@XZ PROC		; Singleton<ioBlockManager>::Singleton<ioBlockManager>, COMDAT
; _this$ = ecx

; 27   : 	Singleton()

  00000	8b c1		 mov	 eax, ecx

; 28   : 	{
; 29   : 		assert( !ms_Singleton );
; 30   : 		int offset = (int)(T*)1 - (int)(Singleton <T>*)(T*)1;
; 31   : 		ms_Singleton = (T*)((int)this + offset);

  00002	8d 48 fc	 lea	 ecx, DWORD PTR [eax-4]
  00005	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioBlockManager@@@@1PAVioBlockManager@@A, ecx ; Singleton<ioBlockManager>::ms_Singleton

; 32   : 	}

  0000b	c3		 ret	 0
??0?$Singleton@VioBlockManager@@@@QAE@XZ ENDP		; Singleton<ioBlockManager>::Singleton<ioBlockManager>
_TEXT	ENDS
PUBLIC	??1?$Singleton@VioBlockManager@@@@QAE@XZ	; Singleton<ioBlockManager>::~Singleton<ioBlockManager>
; Function compile flags: /Ogsp
;	COMDAT ??1?$Singleton@VioBlockManager@@@@QAE@XZ
_TEXT	SEGMENT
??1?$Singleton@VioBlockManager@@@@QAE@XZ PROC		; Singleton<ioBlockManager>::~Singleton<ioBlockManager>, COMDAT
; _this$ = ecx

; 36   : 		assert( ms_Singleton );
; 37   : 		ms_Singleton = 0;

  00000	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioBlockManager@@@@1PAVioBlockManager@@A, 0 ; Singleton<ioBlockManager>::ms_Singleton

; 38   : 	}

  00007	c3		 ret	 0
??1?$Singleton@VioBlockManager@@@@QAE@XZ ENDP		; Singleton<ioBlockManager>::~Singleton<ioBlockManager>
_TEXT	ENDS
PUBLIC	?GetSingleton@?$Singleton@VioBlockManager@@@@SAAAVioBlockManager@@XZ ; Singleton<ioBlockManager>::GetSingleton
; Function compile flags: /Ogsp
;	COMDAT ?GetSingleton@?$Singleton@VioBlockManager@@@@SAAAVioBlockManager@@XZ
_TEXT	SEGMENT
?GetSingleton@?$Singleton@VioBlockManager@@@@SAAAVioBlockManager@@XZ PROC ; Singleton<ioBlockManager>::GetSingleton, COMDAT

; 42   : 		assert( ms_Singleton );
; 43   : 		return (*ms_Singleton);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioBlockManager@@@@1PAVioBlockManager@@A ; Singleton<ioBlockManager>::ms_Singleton

; 44   : 	}

  00005	c3		 ret	 0
?GetSingleton@?$Singleton@VioBlockManager@@@@SAAAVioBlockManager@@XZ ENDP ; Singleton<ioBlockManager>::GetSingleton
_TEXT	ENDS
PUBLIC	?size@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBEIXZ ; std::vector<ioBlock *,std::allocator<ioBlock *> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBEIXZ PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::size
_TEXT	ENDS
PUBLIC	?empty@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBE_NXZ ; std::vector<ioBlock *,std::allocator<ioBlock *> >::empty
; Function compile flags: /Ogsp
;	COMDAT ?empty@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBE_NXZ PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::empty, COMDAT
; _this$ = ecx

; 889  : 		return (this->_Myfirst == this->_Mylast);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00005	f7 d8		 neg	 eax
  00007	1b c0		 sbb	 eax, eax
  00009	40		 inc	 eax

; 890  : 		}

  0000a	c3		 ret	 0
?empty@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBE_NXZ ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::empty
_TEXT	ENDS
PUBLIC	??R?$less@H@std@@QBE_NABH0@Z			; std::less<int>::operator()
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xfunctional
;	COMDAT ??R?$less@H@std@@QBE_NABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@H@std@@QBE_NABH0@Z PROC			; std::less<int>::operator(), COMDAT
; _this$ = ecx

; 124  : 		{	// apply operator< to operands

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 125  : 		return (_Left < _Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	8b 55 0c	 mov	 edx, DWORD PTR __Right$[ebp]
  0000b	33 c9		 xor	 ecx, ecx
  0000d	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000f	0f 9c c0	 setl	 al

; 126  : 		}

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
??R?$less@H@std@@QBE_NABH0@Z ENDP			; std::less<int>::operator()
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<int const ,ioBlockProperty *> >::allocator<std::pair<int const ,ioBlockProperty *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<int const ,ioBlockProperty *> >::allocator<std::pair<int const ,ioBlockProperty *> >, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<int const ,ioBlockProperty *> >::allocator<std::pair<int const ,ioBlockProperty *> >
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IBE_NPBQAVioBlock@@@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IBE_NPBQAVioBlock@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IBE_NPBQAVioBlock@@@Z PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IBE_NPBQAVioBlock@@@Z ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IBEXPAPAVioBlock@@0@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IBEXPAPAVioBlock@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IBEXPAPAVioBlock@@0@Z PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IBEXPAPAVioBlock@@0@Z ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE@XZ ; std::_Vector_val<ioBlock *,std::allocator<ioBlock *> >::~_Vector_val<ioBlock *,std::allocator<ioBlock *> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ioBlock *,std::allocator<ioBlock *> >::~_Vector_val<ioBlock *,std::allocator<ioBlock *> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ioBlock *,std::allocator<ioBlock *> >::~_Vector_val<ioBlock *,std::allocator<ioBlock *> >
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVioBlock@@@std@@QAE@XZ		; std::allocator<ioBlock *>::allocator<ioBlock *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAVioBlock@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAVioBlock@@@std@@QAE@XZ PROC		; std::allocator<ioBlock *>::allocator<ioBlock *>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@PAVioBlock@@@std@@QAE@XZ ENDP		; std::allocator<ioBlock *>::allocator<ioBlock *>
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBEABQAVioBlock@@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBEABQAVioBlock@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBEABQAVioBlock@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::operator*, COMDAT
; _this$ = ecx

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 85   : 		}

  00002	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBEABQAVioBlock@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::operator++, COMDAT
; _this$ = ecx

; 93   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 111  : 		return (*this);
; 112  : 		}

  00005	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::operator++
_TEXT	ENDS
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator==
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())
; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 331  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::_Mynode
; Function compile flags: /Ogsp
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 123  : 		}

  00002	c3		 ret	 0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Isnil
; Function compile flags: /Ogsp
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 612  : 		return ((char&)(*_Pnode)._Isnil);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 15	 add	 eax, 21			; 00000015H

; 613  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Left
; Function compile flags: /Ogsp
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Parent
; Function compile flags: /Ogsp
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 628  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Right
; Function compile flags: /Ogsp
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 633  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAVioBlockProperty@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Myval
; Function compile flags: /Ogsp
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAVioBlockProperty@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAVioBlockProperty@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 637  : 		return ((reference)(*_Pnode)._Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 638  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAVioBlockProperty@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<int const ,ioBlockProperty *> >::allocator<std::pair<int const ,ioBlockProperty *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<int const ,ioBlockProperty *> >::allocator<std::pair<int const ,ioBlockProperty *> >, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<int const ,ioBlockProperty *> >::allocator<std::pair<int const ,ioBlockProperty *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?capacity@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBEIXZ ; std::vector<ioBlock *,std::allocator<ioBlock *> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBEIXZ PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 778  : 		}

  00008	c3		 ret	 0
?capacity@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::capacity
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IBEXXZ ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IBEXXZ PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
  0000b	cc		 int	 3
?_Xlen@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IBEXXZ ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVioBlock@@@std@@QAE@ABV01@@Z	; std::allocator<ioBlock *>::allocator<ioBlock *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAVioBlock@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAVioBlock@@@std@@QAE@ABV01@@Z PROC	; std::allocator<ioBlock *>::allocator<ioBlock *>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@PAVioBlock@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<ioBlock *>::allocator<ioBlock *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVioBlock@@@std@@QAEXPAPAVioBlock@@I@Z ; std::allocator<ioBlock *>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@PAVioBlock@@@std@@QAEXPAPAVioBlock@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVioBlock@@@std@@QAEXPAPAVioBlock@@I@Z PROC ; std::allocator<ioBlock *>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVioBlock@@@std@@QAEXPAPAVioBlock@@I@Z ENDP ; std::allocator<ioBlock *>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QAE@PAPAVioBlock@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QAE@PAPAVioBlock@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QAE@PAPAVioBlock@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QAE@PAPAVioBlock@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::_Compat
; Function compile flags: /Ogsp
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::_Compat
_TEXT	ENDS
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAVioBlockProperty@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAVioBlockProperty@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAVioBlockProperty@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 		if (this->_Getcont() == 0
; 233  : 			|| this->_Ptr == 0
; 234  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)
; 235  : 			{	// report error
; 236  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 237  : 			_SCL_SECURE_OUT_OF_RANGE;
; 238  : 			}
; 239  : 
; 240  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 241  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 242  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 243  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 244  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 245  : 
; 246  : 		return (_Mytree::_Myval(this->_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 247  : 		}

  00005	c3		 ret	 0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAVioBlockProperty@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Color
; Function compile flags: /Ogsp
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 607  : 		return ((char&)(*_Pnode)._Color);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 14	 add	 eax, 20			; 00000014H

; 608  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Min
; Function compile flags: /Ogsp
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Min
$LL2@Min:

; 650  : 			_Pnode = _Left(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Min:

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00010	74 f6		 je	 SHORT $LL2@Min

; 651  : 		return (_Pnode);
; 652  : 		}

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?_Min@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVioBlock@@@std@@QBEIXZ	; std::allocator<ioBlock *>::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@PAVioBlock@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAVioBlock@@@std@@QBEIXZ PROC	; std::allocator<ioBlock *>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@PAVioBlock@@@std@@QBEIXZ ENDP	; std::allocator<ioBlock *>::max_size
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 44   : 		this->_Adopt(_Plist);
; 45   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Max
; Function compile flags: /Ogsp
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Max
$LL2@Max:

; 643  : 			_Pnode = _Right(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Max:

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00011	74 f5		 je	 SHORT $LL2@Max

; 644  : 		return (_Pnode);
; 645  : 		}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Max@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z ; std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0>::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z PROC ; std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0>::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0>, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 41   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z ENDP ; std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0>::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0>
_TEXT	ENDS
PUBLIC	__real@3f91df46a2526c7a
PUBLIC	??$DEGtoRAD@M@@YAMM@Z				; DEGtoRAD<float>
EXTRN	__fltused:DWORD
;	COMDAT __real@3f91df46a2526c7a
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\veryoftenusedefine.h
CONST	SEGMENT
__real@3f91df46a2526c7a DQ 03f91df46a2526c7ar	; 0.0174533
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??$DEGtoRAD@M@@YAMM@Z
_TEXT	SEGMENT
tv129 = 8						; size = 4
_val$ = 8						; size = 4
??$DEGtoRAD@M@@YAMM@Z PROC				; DEGtoRAD<float>, COMDAT

; 20   : type  DEGtoRAD (type val) {return (type) (val * 0.0174532925199);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	d9 45 08	 fld	 DWORD PTR _val$[ebp]
  00006	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3f91df46a2526c7a
  0000c	d9 5d 08	 fstp	 DWORD PTR tv129[ebp]
  0000f	d9 45 08	 fld	 DWORD PTR tv129[ebp]
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??$DEGtoRAD@M@@YAMM@Z ENDP				; DEGtoRAD<float>
_TEXT	ENDS
PUBLIC	??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ		; sprintf_s<260>
EXTRN	__imp__vsprintf_s:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\stdio.h
;	COMDAT ??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Format$ = 12						; size = 4
??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ PROC		; sprintf_s<260>, COMDAT

; 323  : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(int, sprintf_s, vsprintf_s, _Deref_post_z_ char, _Dest, _In_z_ _Printf_format_string_ const char *, _Format)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000a	68 04 01 00 00	 push	 260			; 00000104H
  0000f	ff 75 08	 push	 DWORD PTR __Dest$[ebp]
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__vsprintf_s
  00018	83 c4 10	 add	 esp, 16			; 00000010H
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ ENDP		; sprintf_s<260>
_TEXT	ENDS
PUBLIC	??$addressof@QAVioBlock@@@std@@YAPBQAVioBlock@@ABQAV1@@Z ; std::addressof<ioBlock * const>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@QAVioBlock@@@std@@YAPBQAVioBlock@@ABQAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAVioBlock@@@std@@YAPBQAVioBlock@@ABQAV1@@Z PROC ; std::addressof<ioBlock * const>, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@QAVioBlock@@@std@@YAPBQAVioBlock@@ABQAV1@@Z ENDP ; std::addressof<ioBlock * const>
_TEXT	ENDS
PUBLIC	??$addressof@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@YAPAU?$pair@$$CBHPAVioBlockProperty@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,ioBlockProperty *> >
; Function compile flags: /Ogsp
;	COMDAT ??$addressof@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@YAPAU?$pair@$$CBHPAVioBlockProperty@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@YAPAU?$pair@$$CBHPAVioBlockProperty@@@0@AAU10@@Z PROC ; std::addressof<std::pair<int const ,ioBlockProperty *> >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@YAPAU?$pair@$$CBHPAVioBlockProperty@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<int const ,ioBlockProperty *> >
_TEXT	ENDS
PUBLIC	??$_Kfn@$$CBHPAVioBlockProperty@@@?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVioBlockProperty@@@1@@Z ; std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0>::_Kfn<int const ,ioBlockProperty *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??$_Kfn@$$CBHPAVioBlockProperty@@@?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVioBlockProperty@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBHPAVioBlockProperty@@@?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVioBlockProperty@@@1@@Z PROC ; std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0>::_Kfn<int const ,ioBlockProperty *>, COMDAT

; 66   : 		static const _Kty& _Kfn(const _STD pair<_Ty1, _Ty2>& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 		{	// extract key from element value
; 68   : 		return (_Val.first);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 69   : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Kfn@$$CBHPAVioBlockProperty@@@?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAVioBlockProperty@@@1@@Z ENDP ; std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0>::_Kfn<int const ,ioBlockProperty *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBHPAVioBlockProperty@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Node><std::pair<int const ,ioBlockProperty *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBHPAVioBlockProperty@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBHPAVioBlockProperty@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Node><std::pair<int const ,ioBlockProperty *> >, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBHPAVioBlockProperty@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Node><std::pair<int const ,ioBlockProperty *> >
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Node>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T518236 = -12						; size = 12
$T518241 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 aa aa aa
	0a		 cmp	 ecx, 178956970		; 0aaaaaaaH
  00015	77 0e		 ja	 SHORT $LN1@Allocate
  00017	6b c9 18	 imul	 ecx, 24			; 00000018H
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T518241[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T518241[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T518236[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T518236[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T518236[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Allocate@PAVioBlock@@@std@@YAPAPAVioBlock@@IPAPAV1@@Z ; std::_Allocate<ioBlock *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@PAVioBlock@@@std@@YAPAPAVioBlock@@IPAPAV1@@Z
_TEXT	SEGMENT
$T518246 = -12						; size = 12
$T518250 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVioBlock@@@std@@YAPAPAVioBlock@@IPAPAV1@@Z PROC ; std::_Allocate<ioBlock *>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3e		 je	 SHORT $LN5@Allocate@2

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate@2
  00017	8b c1		 mov	 eax, ecx
  00019	c1 e0 02	 shl	 eax, 2
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	59		 pop	 ecx
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 26		 jne	 SHORT $LN5@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	83 65 08 00	 and	 DWORD PTR $T518250[ebp], 0
  0002b	8d 45 08	 lea	 eax, DWORD PTR $T518250[ebp]
  0002e	50		 push	 eax
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T518246[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003d	8d 45 f4	 lea	 eax, DWORD PTR $T518246[ebp]
  00040	50		 push	 eax
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T518246[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:

; 40   : 	}

  0004d	c9		 leave
  0004e	c3		 ret	 0
$LN9@Allocate@2:
??$_Allocate@PAVioBlock@@@std@@YAPAPAVioBlock@@IPAPAV1@@Z ENDP ; std::_Allocate<ioBlock *>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<int const ,ioBlockProperty *> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<int const ,ioBlockProperty *> >::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<int const ,ioBlockProperty *> >::max_size
_TEXT	ENDS
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::operator--
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 83   : 		{	// predecrement

  00000	8b c1		 mov	 eax, ecx

; 84   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	53		 push	 ebx
  00005	32 db		 xor	 bl, bl
  00007	38 59 15	 cmp	 BYTE PTR [ecx+21], bl
  0000a	74 07		 je	 SHORT $LN8@operator

; 85   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

  0000c	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
  00011	5b		 pop	 ebx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00012	c3		 ret	 0
$LN8@operator:

; 86   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	38 5a 15	 cmp	 BYTE PTR [edx+21], bl
  00018	74 07		 je	 SHORT $LN44@operator

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0001a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001d	eb 17		 jmp	 SHORT $LN46@operator

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

$LL22@operator:
  0001f	8b d1		 mov	 edx, ecx
$LN44@operator:
  00021	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00024	38 59 15	 cmp	 BYTE PTR [ecx+21], bl
  00027	74 f6		 je	 SHORT $LL22@operator

; 89   : 		else

  00029	eb 17		 jmp	 SHORT $LN45@operator
$LL4@operator:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0002f	75 0a		 jne	 SHORT $LN3@operator

; 94   : 				_Ptr = _Pnode;	// ==> parent while left subtree

  00031	89 10		 mov	 DWORD PTR [eax], edx
  00033	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
$LN46@operator:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  00036	38 5a 15	 cmp	 BYTE PTR [edx+21], bl
  00039	74 f0		 je	 SHORT $LL4@operator
$LN3@operator:

; 95   : 			if (_Mytree::_Isnil(_Ptr))

  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	38 59 15	 cmp	 BYTE PTR [ecx+21], bl
  00040	75 02		 jne	 SHORT $LN1@operator
$LN45@operator:

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

  00042	89 10		 mov	 DWORD PTR [eax], edx
$LN1@operator:
  00044	5b		 pop	 ebx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00045	c3		 ret	 0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
PUBLIC	??$forward@AAPAVioBlockProperty@@@std@@YAAAPAVioBlockProperty@@AAPAV1@@Z ; std::forward<ioBlockProperty * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAPAVioBlockProperty@@@std@@YAAAPAVioBlockProperty@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVioBlockProperty@@@std@@YAAAPAVioBlockProperty@@AAPAV1@@Z PROC ; std::forward<ioBlockProperty * &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAVioBlockProperty@@@std@@YAAAPAVioBlockProperty@@AAPAV1@@Z ENDP ; std::forward<ioBlockProperty * &>
_TEXT	ENDS
PUBLIC	??$forward@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@YA$$QAU?$pair@$$CBHPAVioBlockProperty@@@0@AAU10@@Z ; std::forward<std::pair<int const ,ioBlockProperty *> >
; Function compile flags: /Ogsp
;	COMDAT ??$forward@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@YA$$QAU?$pair@$$CBHPAVioBlockProperty@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@YA$$QAU?$pair@$$CBHPAVioBlockProperty@@@0@AAU10@@Z PROC ; std::forward<std::pair<int const ,ioBlockProperty *> >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@YA$$QAU?$pair@$$CBHPAVioBlockProperty@@@0@AAU10@@Z ENDP ; std::forward<std::pair<int const ,ioBlockProperty *> >
_TEXT	ENDS
PUBLIC	??$forward@AAPAVioBlock@@@std@@YAAAPAVioBlock@@AAPAV1@@Z ; std::forward<ioBlock * &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@AAPAVioBlock@@@std@@YAAAPAVioBlock@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVioBlock@@@std@@YAAAPAVioBlock@@AAPAV1@@Z PROC ; std::forward<ioBlock * &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAVioBlock@@@std@@YAAAPAVioBlock@@AAPAV1@@Z ENDP ; std::forward<ioBlock * &>
_TEXT	ENDS
PUBLIC	??$construct@AAPAVioBlock@@@?$allocator@PAVioBlock@@@std@@QAEXPAPAVioBlock@@AAPAV2@@Z ; std::allocator<ioBlock *>::construct<ioBlock * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAPAVioBlock@@@?$allocator@PAVioBlock@@@std@@QAEXPAPAVioBlock@@AAPAV2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAPAVioBlock@@@?$allocator@PAVioBlock@@@std@@QAEXPAPAVioBlock@@AAPAV2@@Z PROC ; std::allocator<ioBlock *>::construct<ioBlock * &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@construct:

; 209  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
??$construct@AAPAVioBlock@@@?$allocator@PAVioBlock@@@std@@QAEXPAPAVioBlock@@AAPAV2@@Z ENDP ; std::allocator<ioBlock *>::construct<ioBlock * &>
_TEXT	ENDS
PUBLIC	??$forward@ABQAVioBlock@@@std@@YAABQAVioBlock@@ABQAV1@@Z ; std::forward<ioBlock * const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABQAVioBlock@@@std@@YAABQAVioBlock@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVioBlock@@@std@@YAABQAVioBlock@@ABQAV1@@Z PROC ; std::forward<ioBlock * const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABQAVioBlock@@@std@@YAABQAVioBlock@@ABQAV1@@Z ENDP ; std::forward<ioBlock * const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAVioBlock@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioBlock@@0@Z ; std::_Ptr_cat<ioBlock *,ioBlock *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAVioBlock@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioBlock@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVioBlock@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioBlock@@0@Z PROC ; std::_Ptr_cat<ioBlock *,ioBlock *>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@PAVioBlock@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioBlock@@0@Z ENDP ; std::_Ptr_cat<ioBlock *,ioBlock *>
_TEXT	ENDS
PUBLIC	??$_Move@PAPAVioBlock@@PAPAV1@@std@@YAPAPAVioBlock@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ioBlock * *,ioBlock * *>
EXTRN	__imp__memmove:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$_Move@PAPAVioBlock@@PAPAV1@@std@@YAPAPAVioBlock@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAPAVioBlock@@PAPAV1@@std@@YAPAPAVioBlock@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<ioBlock * *,ioBlock * *>, COMDAT

; 2522 : 	{	// move [_First, _Last) to [_Dest, ...), pointers to scalars

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2523 : 	ptrdiff_t _Count = _Last - _First;

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	57		 push	 edi

; 2524 : 	_CSTD memmove(&*_Dest, &*_First,
; 2525 : 		_Count * sizeof (*_First));

  0000b	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0000e	c1 fe 02	 sar	 esi, 2
  00011	c1 e6 02	 shl	 esi, 2
  00014	56		 push	 esi
  00015	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00018	57		 push	 edi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2526 : 	return (_Dest + _Count);

  00022	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 2527 : 	}

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Move@PAPAVioBlock@@PAPAV1@@std@@YAPAPAVioBlock@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<ioBlock * *,ioBlock * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVioBlock@@@std@@@std@@YAXPAPAVioBlock@@0AAV?$allocator@PAVioBlock@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ioBlock *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVioBlock@@@std@@@std@@YAXPAPAVioBlock@@0AAV?$allocator@PAVioBlock@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAVioBlock@@@std@@@std@@YAXPAPAVioBlock@@0AAV?$allocator@PAVioBlock@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ioBlock *> >, COMDAT

; 105  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAVioBlock@@@std@@@std@@YAXPAPAVioBlock@@0AAV?$allocator@PAVioBlock@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioBlock *> >
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@YAXPAU?$pair@$$CBHPAVioBlockProperty@@@0@@Z ; std::_Destroy<std::pair<int const ,ioBlockProperty *> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@YAXPAU?$pair@$$CBHPAVioBlockProperty@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@YAXPAU?$pair@$$CBHPAVioBlockProperty@@@0@@Z PROC ; std::_Destroy<std::pair<int const ,ioBlockProperty *> >, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@YAXPAU?$pair@$$CBHPAVioBlockProperty@@@0@@Z ENDP ; std::_Destroy<std::pair<int const ,ioBlockProperty *> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAVioBlock@@ABQAV1@@std@@YAXPAPAVioBlock@@ABQAV1@@Z ; std::_Construct<ioBlock *,ioBlock * const &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Construct@PAVioBlock@@ABQAV1@@std@@YAXPAPAVioBlock@@ABQAV1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAVioBlock@@ABQAV1@@std@@YAXPAPAVioBlock@@ABQAV1@@Z PROC ; std::_Construct<ioBlock *,ioBlock * const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@Construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@Construct:

; 49   : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Construct@PAVioBlock@@ABQAV1@@std@@YAXPAPAVioBlock@@ABQAV1@@Z ENDP ; std::_Construct<ioBlock *,ioBlock * const &>
_TEXT	ENDS
PUBLIC	??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > > &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > > &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAPAVioBlock@@@std@@YAPAPAVioBlock@@PAPAV1@@Z ; std::_Val_type<ioBlock * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAPAVioBlock@@@std@@YAPAPAVioBlock@@PAPAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAVioBlock@@@std@@YAPAPAVioBlock@@PAPAV1@@Z PROC ; std::_Val_type<ioBlock * *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAPAVioBlock@@@std@@YAPAPAVioBlock@@PAPAV1@@Z ENDP ; std::_Val_type<ioBlock * *>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAVioBlock@@PAV1@PAV1@@std@@YAPAPAVioBlock@@PAPAV1@00AAV?$allocator@PAVioBlock@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioBlock *,ioBlock *,ioBlock *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@PAVioBlock@@PAV1@PAV1@@std@@YAPAPAVioBlock@@PAPAV1@00AAV?$allocator@PAVioBlock@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVioBlock@@PAV1@PAV1@@std@@YAPAPAVioBlock@@PAPAV1@00AAV?$allocator@PAVioBlock@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<ioBlock *,ioBlock *,ioBlock *>, COMDAT

; 456  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 457  : 	_DEBUG_RANGE(_First, _Last);
; 458  : 	_DEBUG_POINTER(_Dest);
; 459  : 	size_t _Count = (size_t)(_Last - _First);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2

; 460  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 461  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 462  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninit_move@PAVioBlock@@PAV1@PAV1@@std@@YAPAPAVioBlock@@PAPAV1@00AAV?$allocator@PAVioBlock@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<ioBlock *,ioBlock *,ioBlock *>
_TEXT	ENDS
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > > &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > > &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$forward@$$CBH@std@@YA$$QBHABH@Z		; std::forward<int const >
; Function compile flags: /Ogsp
;	COMDAT ??$forward@$$CBH@std@@YA$$QBHABH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@$$CBH@std@@YA$$QBHABH@Z PROC			; std::forward<int const >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@$$CBH@std@@YA$$QBHABH@Z ENDP			; std::forward<int const >
_TEXT	ENDS
PUBLIC	??$forward@PAVioBlockProperty@@@std@@YA$$QAPAVioBlockProperty@@AAPAV1@@Z ; std::forward<ioBlockProperty *>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@PAVioBlockProperty@@@std@@YA$$QAPAVioBlockProperty@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVioBlockProperty@@@std@@YA$$QAPAVioBlockProperty@@AAPAV1@@Z PROC ; std::forward<ioBlockProperty *>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@PAVioBlockProperty@@@std@@YA$$QAPAVioBlockProperty@@AAPAV1@@Z ENDP ; std::forward<ioBlockProperty *>
_TEXT	ENDS
PUBLIC	??$move@ABH@std@@YA$$QBHABH@Z			; std::move<int const &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@ABH@std@@YA$$QBHABH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@ABH@std@@YA$$QBHABH@Z PROC			; std::move<int const &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@ABH@std@@YA$$QBHABH@Z ENDP			; std::move<int const &>
_TEXT	ENDS
PUBLIC	??$move@AAPAVioBlockProperty@@@std@@YA$$QAPAVioBlockProperty@@AAPAV1@@Z ; std::move<ioBlockProperty * &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@AAPAVioBlockProperty@@@std@@YA$$QAPAVioBlockProperty@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAPAVioBlockProperty@@@std@@YA$$QAPAVioBlockProperty@@AAPAV1@@Z PROC ; std::move<ioBlockProperty * &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAPAVioBlockProperty@@@std@@YA$$QAPAVioBlockProperty@@AAPAV1@@Z ENDP ; std::move<ioBlockProperty * &>
_TEXT	ENDS
PUBLIC	??0D3DXQUATERNION@@QAE@XZ			; D3DXQUATERNION::D3DXQUATERNION
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.h
;	COMDAT ??0D3DXQUATERNION@@QAE@XZ
_TEXT	SEGMENT
??0D3DXQUATERNION@@QAE@XZ PROC				; D3DXQUATERNION::D3DXQUATERNION, COMDAT
; _this$ = ecx

; 429  :     D3DXQUATERNION() {}

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXQUATERNION@@QAE@XZ ENDP				; D3DXQUATERNION::D3DXQUATERNION
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
PUBLIC	??0ioINILoader_e@@QAE@ABVioINILoader@@@Z	; ioINILoader_e::ioINILoader_e
EXTRN	__imp_??0ioINILoader@@QAE@ABV0@@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??0ioINILoader_e@@QAE@ABVioINILoader@@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
??0ioINILoader_e@@QAE@ABVioINILoader@@@Z PROC		; ioINILoader_e::ioINILoader_e, COMDAT
; _this$ = ecx

; 237  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR _rhs$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@ABV0@@Z

; 238  : 	}

  0000f	8b c6		 mov	 eax, esi
  00011	5e		 pop	 esi
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
??0ioINILoader_e@@QAE@ABVioINILoader@@@Z ENDP		; ioINILoader_e::ioINILoader_e
_TEXT	ENDS
PUBLIC	?UseShadow@Setting@@SA_NXZ			; Setting::UseShadow
EXTRN	?m_Option@Setting@@1USettingOption@@A:BYTE	; Setting::m_Option
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\setting.h
;	COMDAT ?UseShadow@Setting@@SA_NXZ
_TEXT	SEGMENT
?UseShadow@Setting@@SA_NXZ PROC				; Setting::UseShadow, COMDAT

; 251  : 	static bool UseShadow() { return m_Option.m_bShadow; }

  00000	a0 01 00 00 00	 mov	 al, BYTE PTR ?m_Option@Setting@@1USettingOption@@A+1
  00005	c3		 ret	 0
?UseShadow@Setting@@SA_NXZ ENDP				; Setting::UseShadow
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$forward@AAH@std@@YAAAHAAH@Z			; std::forward<int &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAH@std@@YAAAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAH@std@@YAAAHAAH@Z PROC			; std::forward<int &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAH@std@@YAAAHAAH@Z ENDP			; std::forward<int &>
_TEXT	ENDS
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT

; 94   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 95   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 96   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
_TEXT	ENDS
PUBLIC	??$move@AA_N@std@@YA$$QA_NAA_N@Z		; std::move<bool &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@AA_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AA_N@std@@YA$$QA_NAA_N@Z PROC			; std::move<bool &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AA_N@std@@YA$$QA_NAA_N@Z ENDP			; std::move<bool &>
_TEXT	ENDS
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
PUBLIC	?GetSingleton@ioBlockManager@@SAAAV1@XZ		; ioBlockManager::GetSingleton
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockmanager.cpp
;	COMDAT ?GetSingleton@ioBlockManager@@SAAAV1@XZ
_TEXT	SEGMENT
?GetSingleton@ioBlockManager@@SAAAV1@XZ PROC		; ioBlockManager::GetSingleton, COMDAT

; 41   : 	return Singleton< ioBlockManager >::GetSingleton();

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioBlockManager@@@@1PAVioBlockManager@@A ; Singleton<ioBlockManager>::ms_Singleton

; 42   : }

  00005	c3		 ret	 0
?GetSingleton@ioBlockManager@@SAAAV1@XZ ENDP		; ioBlockManager::GetSingleton
_TEXT	ENDS
PUBLIC	?GetBlockTotalCount@ioBlockManager@@QAEHXZ	; ioBlockManager::GetBlockTotalCount
; Function compile flags: /Ogsp
;	COMDAT ?GetBlockTotalCount@ioBlockManager@@QAEHXZ
_TEXT	SEGMENT
?GetBlockTotalCount@ioBlockManager@@QAEHXZ PROC		; ioBlockManager::GetBlockTotalCount, COMDAT
; _this$ = ecx

; 260  : 	return (int)m_BlockList.size();

  00000	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  00003	2b 41 1c	 sub	 eax, DWORD PTR [ecx+28]
  00006	c1 f8 02	 sar	 eax, 2

; 261  : }

  00009	c3		 ret	 0
?GetBlockTotalCount@ioBlockManager@@QAEHXZ ENDP		; ioBlockManager::GetBlockTotalCount
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBEAAPAVioBlock@@XZ ; std::_Vector_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBEAAPAVioBlock@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBEAAPAVioBlock@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::operator*, COMDAT
; _this$ = ecx

; 322  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 323  : 		}

  00002	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBEAAPAVioBlock@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::operator++, COMDAT
; _this$ = ecx

; 331  : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 332  : 		++*(_Mybase *)this;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 333  : 		return (*this);
; 334  : 		}

  00005	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::operator++
_TEXT	ENDS
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator!=
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator!=, COMDAT
; _this$ = ecx

; 334  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 335  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 336  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Lmost
; Function compile flags: /Ogsp
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1759 : 		return (this->_Left(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1760 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Rmost
; Function compile flags: /Ogsp
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1784 : 		return (this->_Right(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1785 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Root
; Function compile flags: /Ogsp
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1790 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::~_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::~_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >, COMDAT
; _this$ = ecx

; 555  : 		this->_Alnod.deallocate(this->_Myhead, 1);

  00000	ff 71 04	 push	 DWORD PTR [ecx+4]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx

; 556  : 		}

  00009	c3		 ret	 0
??1?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::~_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Key
; Function compile flags: /Ogsp
;	COMDAT ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Key, COMDAT

; 616  : 		{	// return reference to key in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 617  : 		return ((key_type&)_Traits::_Kfn(_Myval(_Pnode)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 618  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Key@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE@V?$allocator@PAVioBlock@@@1@@Z ; std::_Vector_val<ioBlock *,std::allocator<ioBlock *> >::_Vector_val<ioBlock *,std::allocator<ioBlock *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE@V?$allocator@PAVioBlock@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE@V?$allocator@PAVioBlock@@@1@@Z PROC ; std::_Vector_val<ioBlock *,std::allocator<ioBlock *> >::_Vector_val<ioBlock *,std::allocator<ioBlock *> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE@V?$allocator@PAVioBlock@@@1@@Z ENDP ; std::_Vector_val<ioBlock *,std::allocator<ioBlock *> >::_Vector_val<ioBlock *,std::allocator<ioBlock *> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QAE@PAPAVioBlock@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::_Vector_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QAE@PAPAVioBlock@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QAE@PAPAVioBlock@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::_Vector_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QAE@PAPAVioBlock@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::_Vector_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::operator==
_TEXT	ENDS
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAVioBlockProperty@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAVioBlockProperty@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAVioBlockProperty@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 396  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 397  : 		}

  00005	c3		 ret	 0
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAVioBlockProperty@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Lbound
; Function compile flags: /Ogsp
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@ABH@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 1741 : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1742 : 		_Nodeptr _Pnode = _Root();

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00009	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  0000d	75 19		 jne	 SHORT $LN3@Lbound
  0000f	8b 55 08	 mov	 edx, DWORD PTR __Keyval$[ebp]
  00012	8b 12		 mov	 edx, DWORD PTR [edx]
$LL4@Lbound:

; 1746 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	7d 05		 jge	 SHORT $LN2@Lbound

; 1747 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1748 : 			else

  0001c	eb 04		 jmp	 SHORT $LN1@Lbound
$LN2@Lbound:

; 1749 : 				{	// _Pnode not less than _Keyval, remember it
; 1750 : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 1751 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN1@Lbound:

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00022	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00026	74 ec		 je	 SHORT $LL4@Lbound
$LN3@Lbound:

; 1752 : 				}
; 1753 : 
; 1754 : 		return (_Wherenode);	// return best remembered candidate
; 1755 : 		}

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?max_size@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBEIXZ ; std::vector<ioBlock *,std::allocator<ioBlock *> >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?max_size@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBEIXZ PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IBEII@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IBEII@Z PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  00008	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  0000d	c1 f8 02	 sar	 eax, 2
  00010	8b c8		 mov	 ecx, eax
  00012	d1 e9		 shr	 ecx, 1
  00014	2b d1		 sub	 edx, ecx
  00016	3b d0		 cmp	 edx, eax
  00018	73 04		 jae	 SHORT $LN4@Grow_to
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 02		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  0001e	03 c1		 add	 eax, ecx
$LN5@Grow_to:

; 1279 : 		if (_Capacity < _Count)

  00020	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00023	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IBEII@Z ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Grow_to
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 214  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	53		 push	 ebx
  00005	32 db		 xor	 bl, bl
  00007	38 59 15	 cmp	 BYTE PTR [ecx+21], bl
  0000a	75 2d		 jne	 SHORT $LN3@operator@2

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

  0000c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000f	38 5a 15	 cmp	 BYTE PTR [edx+21], bl
  00012	75 0d		 jne	 SHORT $LN34@operator@2

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

$LL18@operator@2:
  00014	8b ca		 mov	 ecx, edx
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	38 5a 15	 cmp	 BYTE PTR [edx+21], bl
  0001b	74 f7		 je	 SHORT $LL18@operator@2
  0001d	89 08		 mov	 DWORD PTR [eax], ecx
  0001f	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  00020	c3		 ret	 0
$LN34@operator@2:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00021	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00024	eb 0c		 jmp	 SHORT $LN38@operator@2
$LL2@operator@2:
  00026	8b 08		 mov	 ecx, DWORD PTR [eax]
  00028	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  0002b	75 0a		 jne	 SHORT $LN1@operator@2

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
$LN38@operator@2:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00032	38 5a 15	 cmp	 BYTE PTR [edx+21], bl
  00035	74 ef		 je	 SHORT $LL2@operator@2
$LN1@operator@2:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

  00037	89 10		 mov	 DWORD PTR [eax], edx
$LN3@operator@2:
  00039	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  0003a	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >, COMDAT
; _this$ = ecx

; 482  : 		{	// construct traits from _Parg and allocators from _Al

  00000	8b c1		 mov	 eax, ecx

; 483  : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Node>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Node>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAVioBlock@@@std@@QAEPAPAVioBlock@@I@Z ; std::allocator<ioBlock *>::allocate
; Function compile flags: /Ogsp
;	COMDAT ?allocate@?$allocator@PAVioBlock@@@std@@QAEPAPAVioBlock@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVioBlock@@@std@@QAEPAPAVioBlock@@I@Z PROC ; std::allocator<ioBlock *>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@PAVioBlock@@@std@@YAPAPAVioBlock@@IPAPAV1@@Z ; std::_Allocate<ioBlock *>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@PAVioBlock@@@std@@QAEPAPAVioBlock@@I@Z ENDP ; std::allocator<ioBlock *>::allocate
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Lrotate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00009	56		 push	 esi

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

  0000f	8b 30		 mov	 esi, DWORD PTR [eax]
  00011	80 7e 15 00	 cmp	 BYTE PTR [esi+21], 0
  00015	75 03		 jne	 SHORT $LN5@Lrotate

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Lrotate:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 05		 jne	 SHORT $LN4@Lrotate

; 1772 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

  0002c	eb 0e		 jmp	 SHORT $LN1@Lrotate
$LN4@Lrotate:
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00033	75 04		 jne	 SHORT $LN2@Lrotate

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  00035	89 01		 mov	 DWORD PTR [ecx], eax

; 1775 : 		else

  00037	eb 03		 jmp	 SHORT $LN1@Lrotate
$LN2@Lrotate:

; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00039	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@Lrotate:

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0003c	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  0003e	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Rrotate
; Function compile flags: /Ogsp
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	56		 push	 esi

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

  00009	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000c	89 32		 mov	 DWORD PTR [edx], esi

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

  0000e	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00011	80 7e 15 00	 cmp	 BYTE PTR [esi+21], 0
  00015	75 03		 jne	 SHORT $LN5@Rrotate

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Rrotate:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 05		 jne	 SHORT $LN4@Rrotate

; 1802 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

  0002c	eb 0f		 jmp	 SHORT $LN1@Rrotate
$LN4@Rrotate:
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00034	75 05		 jne	 SHORT $LN2@Rrotate

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00036	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1805 : 		else

  00039	eb 02		 jmp	 SHORT $LN1@Rrotate
$LN2@Rrotate:

; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  0003b	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@Rrotate:

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  0003d	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00040	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$SetTitle_e@$06@ioINILoader@@QAEXAAY06$$CBD@Z	; ioINILoader::SetTitle_e<7>
EXTRN	__imp_?SetTitle@ioINILoader@@QAEXPBD@Z:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$SetTitle_e@$06@ioINILoader@@QAEXAAY06$$CBD@Z
_TEXT	SEGMENT
__t$ = -16						; size = 7
__$ArrayPad$ = -4					; size = 4
_t$ = 8							; size = 4
??$SetTitle_e@$06@ioINILoader@@QAEXAAY06$$CBD@Z PROC	; ioINILoader::SetTitle_e<7>, COMDAT
; _this$ = ecx

; 188  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]

; 189  : 		_ENCSTR(t, _t);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 c0 00 00
	00		 je	 $LN96@SetTitle_e
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 f0	 mov	 BYTE PTR __t$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 a9 00 00
	00		 je	 $LN95@SetTitle_e
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 f1	 mov	 BYTE PTR __t$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 92 00 00
	00		 je	 $LN94@SetTitle_e
  00042	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00045	88 55 f2	 mov	 BYTE PTR __t$[ebp+2], dl
  00048	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004b	84 d2		 test	 dl, dl
  0004d	74 7f		 je	 SHORT $LN93@SetTitle_e
  0004f	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00052	88 55 f3	 mov	 BYTE PTR __t$[ebp+3], dl
  00055	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00058	84 d2		 test	 dl, dl
  0005a	74 6c		 je	 SHORT $LN92@SetTitle_e
  0005c	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0005f	88 55 f4	 mov	 BYTE PTR __t$[ebp+4], dl
  00062	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00065	84 d2		 test	 dl, dl
  00067	74 59		 je	 SHORT $LN91@SetTitle_e
  00069	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0006c	80 78 06 00	 cmp	 BYTE PTR [eax+6], 0
  00070	88 55 f5	 mov	 BYTE PTR __t$[ebp+5], dl
  00073	74 6f		 je	 SHORT $LN1@SetTitle_e
  00075	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00078	84 d2		 test	 dl, dl
  0007a	74 40		 je	 SHORT $LN89@SetTitle_e
  0007c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0007f	88 55 f7	 mov	 BYTE PTR __t$[ebp+7], dl
  00082	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  00085	84 d2		 test	 dl, dl
  00087	74 2d		 je	 SHORT $LN88@SetTitle_e
  00089	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0008c	88 55 f8	 mov	 BYTE PTR __t$[ebp+8], dl
  0008f	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  00092	84 d2		 test	 dl, dl
  00094	74 1a		 je	 SHORT $LN87@SetTitle_e
  00096	8a 40 0a	 mov	 al, BYTE PTR [eax+10]
  00099	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0009c	88 55 f9	 mov	 BYTE PTR __t$[ebp+9], dl
  0009f	84 c0		 test	 al, al
  000a1	74 07		 je	 SHORT $LN86@SetTitle_e
  000a3	34 eb		 xor	 al, -21			; ffffffebH
  000a5	88 45 fa	 mov	 BYTE PTR __t$[ebp+10], al
  000a8	eb 3a		 jmp	 SHORT $LN1@SetTitle_e
$LN86@SetTitle_e:
  000aa	c6 45 fa eb	 mov	 BYTE PTR __t$[ebp+10], -21 ; ffffffebH
  000ae	eb 34		 jmp	 SHORT $LN1@SetTitle_e
$LN87@SetTitle_e:
  000b0	c6 45 f9 ec	 mov	 BYTE PTR __t$[ebp+9], -20 ; ffffffecH
  000b4	eb 2e		 jmp	 SHORT $LN1@SetTitle_e
$LN88@SetTitle_e:
  000b6	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  000ba	eb 28		 jmp	 SHORT $LN1@SetTitle_e
$LN89@SetTitle_e:
  000bc	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  000c0	eb 22		 jmp	 SHORT $LN1@SetTitle_e
$LN91@SetTitle_e:
  000c2	c6 45 f5 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  000c6	eb 1c		 jmp	 SHORT $LN1@SetTitle_e
$LN92@SetTitle_e:
  000c8	c6 45 f4 ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  000cc	eb 16		 jmp	 SHORT $LN1@SetTitle_e
$LN93@SetTitle_e:
  000ce	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  000d2	eb 10		 jmp	 SHORT $LN1@SetTitle_e
$LN94@SetTitle_e:
  000d4	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  000d8	eb 0a		 jmp	 SHORT $LN1@SetTitle_e
$LN95@SetTitle_e:
  000da	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  000de	eb 04		 jmp	 SHORT $LN1@SetTitle_e
$LN96@SetTitle_e:
  000e0	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@SetTitle_e:
  000e4	81 75 f0 ed ec
	eb ea		 xor	 DWORD PTR __t$[ebp], -353637139 ; eaebecedH
  000eb	6a 04		 push	 4
  000ed	c6 45 f6 00	 mov	 BYTE PTR __t$[ebp+6], 0
  000f1	58		 pop	 eax
$LL101@SetTitle_e:
  000f2	8b c8		 mov	 ecx, eax
  000f4	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  000fa	79 05		 jns	 SHORT $LN111@SetTitle_e
  000fc	49		 dec	 ecx
  000fd	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00100	41		 inc	 ecx
$LN111@SetTitle_e:
  00101	b2 ed		 mov	 dl, -19			; ffffffedH
  00103	2a d1		 sub	 dl, cl
  00105	30 54 05 f0	 xor	 BYTE PTR __t$[ebp+eax], dl
  00109	40		 inc	 eax
  0010a	83 f8 06	 cmp	 eax, 6
  0010d	7c e3		 jl	 SHORT $LL101@SetTitle_e

; 190  : 		SetTitle(_t);

  0010f	8d 45 f0	 lea	 eax, DWORD PTR __t$[ebp]
  00112	50		 push	 eax
  00113	8b ce		 mov	 ecx, esi
  00115	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 191  : 	}

  0011b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0011e	33 cd		 xor	 ecx, ebp
  00120	5e		 pop	 esi
  00121	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00126	c9		 leave
  00127	c2 04 00	 ret	 4
??$SetTitle_e@$06@ioINILoader@@QAEXAAY06$$CBD@Z ENDP	; ioINILoader::SetTitle_e<7>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$SetTitle_e@$04@ioINILoader@@QAEXAAY04$$CBD@Z	; ioINILoader::SetTitle_e<5>
; Function compile flags: /Ogsp
;	COMDAT ??$SetTitle_e@$04@ioINILoader@@QAEXAAY04$$CBD@Z
_TEXT	SEGMENT
__t$ = -16						; size = 5
__$ArrayPad$ = -4					; size = 4
_t$ = 8							; size = 4
??$SetTitle_e@$04@ioINILoader@@QAEXAAY04$$CBD@Z PROC	; ioINILoader::SetTitle_e<5>, COMDAT
; _this$ = ecx

; 188  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]

; 189  : 		_ENCSTR(t, _t);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	84 d2		 test	 dl, dl
  00017	0f 84 92 00 00
	00		 je	 $LN96@SetTitle_e@2
  0001d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00020	88 55 f0	 mov	 BYTE PTR __t$[ebp], dl
  00023	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00026	84 d2		 test	 dl, dl
  00028	74 7f		 je	 SHORT $LN95@SetTitle_e@2
  0002a	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0002d	88 55 f1	 mov	 BYTE PTR __t$[ebp+1], dl
  00030	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  00033	84 d2		 test	 dl, dl
  00035	74 6c		 je	 SHORT $LN94@SetTitle_e@2
  00037	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0003a	88 55 f2	 mov	 BYTE PTR __t$[ebp+2], dl
  0003d	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  00040	84 d2		 test	 dl, dl
  00042	74 59		 je	 SHORT $LN93@SetTitle_e@2
  00044	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00047	80 78 04 00	 cmp	 BYTE PTR [eax+4], 0
  0004b	88 55 f3	 mov	 BYTE PTR __t$[ebp+3], dl
  0004e	74 63		 je	 SHORT $LN1@SetTitle_e@2
  00050	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00053	84 d2		 test	 dl, dl
  00055	74 40		 je	 SHORT $LN91@SetTitle_e@2
  00057	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0005a	88 55 f5	 mov	 BYTE PTR __t$[ebp+5], dl
  0005d	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00060	84 d2		 test	 dl, dl
  00062	74 2d		 je	 SHORT $LN90@SetTitle_e@2
  00064	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00067	88 55 f6	 mov	 BYTE PTR __t$[ebp+6], dl
  0006a	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0006d	84 d2		 test	 dl, dl
  0006f	74 1a		 je	 SHORT $LN89@SetTitle_e@2
  00071	8a 40 08	 mov	 al, BYTE PTR [eax+8]
  00074	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00077	88 55 f7	 mov	 BYTE PTR __t$[ebp+7], dl
  0007a	84 c0		 test	 al, al
  0007c	74 07		 je	 SHORT $LN88@SetTitle_e@2
  0007e	34 ed		 xor	 al, -19			; ffffffedH
  00080	88 45 f8	 mov	 BYTE PTR __t$[ebp+8], al
  00083	eb 2e		 jmp	 SHORT $LN1@SetTitle_e@2
$LN88@SetTitle_e@2:
  00085	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  00089	eb 28		 jmp	 SHORT $LN1@SetTitle_e@2
$LN89@SetTitle_e@2:
  0008b	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  0008f	eb 22		 jmp	 SHORT $LN1@SetTitle_e@2
$LN90@SetTitle_e@2:
  00091	c6 45 f6 eb	 mov	 BYTE PTR __t$[ebp+6], -21 ; ffffffebH
  00095	eb 1c		 jmp	 SHORT $LN1@SetTitle_e@2
$LN91@SetTitle_e@2:
  00097	c6 45 f5 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  0009b	eb 16		 jmp	 SHORT $LN1@SetTitle_e@2
$LN93@SetTitle_e@2:
  0009d	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  000a1	eb 10		 jmp	 SHORT $LN1@SetTitle_e@2
$LN94@SetTitle_e@2:
  000a3	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  000a7	eb 0a		 jmp	 SHORT $LN1@SetTitle_e@2
$LN95@SetTitle_e@2:
  000a9	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  000ad	eb 04		 jmp	 SHORT $LN1@SetTitle_e@2
$LN96@SetTitle_e@2:
  000af	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@SetTitle_e@2:
  000b3	81 75 f0 ed ec
	eb ea		 xor	 DWORD PTR __t$[ebp], -353637139 ; eaebecedH

; 190  : 		SetTitle(_t);

  000ba	8d 45 f0	 lea	 eax, DWORD PTR __t$[ebp]
  000bd	50		 push	 eax
  000be	c6 45 f4 00	 mov	 BYTE PTR __t$[ebp+4], 0
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 191  : 	}

  000c8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cb	33 cd		 xor	 ecx, ebp
  000cd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d2	c9		 leave
  000d3	c2 04 00	 ret	 4
??$SetTitle_e@$04@ioINILoader@@QAEXAAY04$$CBD@Z ENDP	; ioINILoader::SetTitle_e<5>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$SetTitle_e@$0BC@@ioINILoader@@QAEXAAY0BC@$$CBD@Z ; ioINILoader::SetTitle_e<18>
; Function compile flags: /Ogsp
;	COMDAT ??$SetTitle_e@$0BC@@ioINILoader@@QAEXAAY0BC@$$CBD@Z
_TEXT	SEGMENT
__t$ = -28						; size = 18
__$ArrayPad$ = -4					; size = 4
_t$ = 8							; size = 4
??$SetTitle_e@$0BC@@ioINILoader@@QAEXAAY0BC@$$CBD@Z PROC ; ioINILoader::SetTitle_e<18>, COMDAT
; _this$ = ecx

; 188  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]

; 189  : 		_ENCSTR(t, _t);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 be 01 00
	00		 je	 $LN96@SetTitle_e@3
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e4	 mov	 BYTE PTR __t$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 a7 01 00
	00		 je	 $LN95@SetTitle_e@3
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 e5	 mov	 BYTE PTR __t$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 90 01 00
	00		 je	 $LN94@SetTitle_e@3
  00042	b1 eb		 mov	 cl, -21			; ffffffebH
  00044	32 d1		 xor	 dl, cl
  00046	88 55 e6	 mov	 BYTE PTR __t$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 78 01 00
	00		 je	 $LN93@SetTitle_e@3
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 e7	 mov	 BYTE PTR __t$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 61 01 00
	00		 je	 $LN92@SetTitle_e@3
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 e8	 mov	 BYTE PTR __t$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 4a 01 00
	00		 je	 $LN91@SetTitle_e@3
  00076	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00079	88 55 e9	 mov	 BYTE PTR __t$[ebp+5], dl
  0007c	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007f	84 d2		 test	 dl, dl
  00081	0f 84 34 01 00
	00		 je	 $LN90@SetTitle_e@3
  00087	32 d1		 xor	 dl, cl
  00089	88 55 ea	 mov	 BYTE PTR __t$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 1e 01 00
	00		 je	 $LN89@SetTitle_e@3
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 eb	 mov	 BYTE PTR __t$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 07 01 00
	00		 je	 $LN88@SetTitle_e@3
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 ec	 mov	 BYTE PTR __t$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 f0 00 00
	00		 je	 $LN87@SetTitle_e@3
  000b9	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000bc	88 55 ed	 mov	 BYTE PTR __t$[ebp+9], dl
  000bf	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c2	84 d2		 test	 dl, dl
  000c4	0f 84 da 00 00
	00		 je	 $LN86@SetTitle_e@3
  000ca	32 d1		 xor	 dl, cl
  000cc	88 55 ee	 mov	 BYTE PTR __t$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	0f 84 c4 00 00
	00		 je	 $LN85@SetTitle_e@3
  000da	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000dd	88 55 ef	 mov	 BYTE PTR __t$[ebp+11], dl
  000e0	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e3	84 d2		 test	 dl, dl
  000e5	0f 84 ad 00 00
	00		 je	 $LN84@SetTitle_e@3
  000eb	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ee	88 55 f0	 mov	 BYTE PTR __t$[ebp+12], dl
  000f1	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f4	84 d2		 test	 dl, dl
  000f6	0f 84 96 00 00
	00		 je	 $LN83@SetTitle_e@3
  000fc	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000ff	88 55 f1	 mov	 BYTE PTR __t$[ebp+13], dl
  00102	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  00105	84 d2		 test	 dl, dl
  00107	0f 84 80 00 00
	00		 je	 $LN82@SetTitle_e@3
  0010d	32 d1		 xor	 dl, cl
  0010f	88 55 f2	 mov	 BYTE PTR __t$[ebp+14], dl
  00112	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00115	84 d2		 test	 dl, dl
  00117	74 6e		 je	 SHORT $LN81@SetTitle_e@3
  00119	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0011c	88 55 f3	 mov	 BYTE PTR __t$[ebp+15], dl
  0011f	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00122	84 d2		 test	 dl, dl
  00124	74 5b		 je	 SHORT $LN80@SetTitle_e@3
  00126	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00129	80 78 11 00	 cmp	 BYTE PTR [eax+17], 0
  0012d	88 55 f4	 mov	 BYTE PTR __t$[ebp+16], dl
  00130	0f 84 ac 00 00
	00		 je	 $LN1@SetTitle_e@3
  00136	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  00139	84 d2		 test	 dl, dl
  0013b	74 3f		 je	 SHORT $LN78@SetTitle_e@3
  0013d	32 d1		 xor	 dl, cl
  0013f	88 55 f6	 mov	 BYTE PTR __t$[ebp+18], dl
  00142	8a 50 13	 mov	 dl, BYTE PTR [eax+19]
  00145	84 d2		 test	 dl, dl
  00147	74 2d		 je	 SHORT $LN77@SetTitle_e@3
  00149	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0014c	88 55 f7	 mov	 BYTE PTR __t$[ebp+19], dl
  0014f	8a 50 14	 mov	 dl, BYTE PTR [eax+20]
  00152	84 d2		 test	 dl, dl
  00154	74 1a		 je	 SHORT $LN76@SetTitle_e@3
  00156	8a 40 15	 mov	 al, BYTE PTR [eax+21]
  00159	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0015c	88 55 f8	 mov	 BYTE PTR __t$[ebp+20], dl
  0015f	84 c0		 test	 al, al
  00161	74 07		 je	 SHORT $LN75@SetTitle_e@3
  00163	34 ec		 xor	 al, -20			; ffffffecH
  00165	88 45 f9	 mov	 BYTE PTR __t$[ebp+21], al
  00168	eb 78		 jmp	 SHORT $LN1@SetTitle_e@3
$LN75@SetTitle_e@3:
  0016a	c6 45 f9 ec	 mov	 BYTE PTR __t$[ebp+21], -20 ; ffffffecH
  0016e	eb 72		 jmp	 SHORT $LN1@SetTitle_e@3
$LN76@SetTitle_e@3:
  00170	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+20], -19 ; ffffffedH
  00174	eb 6c		 jmp	 SHORT $LN1@SetTitle_e@3
$LN77@SetTitle_e@3:
  00176	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+19], -22 ; ffffffeaH
  0017a	eb 66		 jmp	 SHORT $LN1@SetTitle_e@3
$LN78@SetTitle_e@3:
  0017c	88 4d f6	 mov	 BYTE PTR __t$[ebp+18], cl
  0017f	eb 61		 jmp	 SHORT $LN1@SetTitle_e@3
$LN80@SetTitle_e@3:
  00181	c6 45 f4 ed	 mov	 BYTE PTR __t$[ebp+16], -19 ; ffffffedH
  00185	eb 5b		 jmp	 SHORT $LN1@SetTitle_e@3
$LN81@SetTitle_e@3:
  00187	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+15], -22 ; ffffffeaH
  0018b	eb 55		 jmp	 SHORT $LN1@SetTitle_e@3
$LN82@SetTitle_e@3:
  0018d	88 4d f2	 mov	 BYTE PTR __t$[ebp+14], cl
  00190	eb 50		 jmp	 SHORT $LN1@SetTitle_e@3
$LN83@SetTitle_e@3:
  00192	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+13], -20 ; ffffffecH
  00196	eb 4a		 jmp	 SHORT $LN1@SetTitle_e@3
$LN84@SetTitle_e@3:
  00198	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp+12], -19 ; ffffffedH
  0019c	eb 44		 jmp	 SHORT $LN1@SetTitle_e@3
$LN85@SetTitle_e@3:
  0019e	c6 45 ef ea	 mov	 BYTE PTR __t$[ebp+11], -22 ; ffffffeaH
  001a2	eb 3e		 jmp	 SHORT $LN1@SetTitle_e@3
$LN86@SetTitle_e@3:
  001a4	88 4d ee	 mov	 BYTE PTR __t$[ebp+10], cl
  001a7	eb 39		 jmp	 SHORT $LN1@SetTitle_e@3
$LN87@SetTitle_e@3:
  001a9	c6 45 ed ec	 mov	 BYTE PTR __t$[ebp+9], -20 ; ffffffecH
  001ad	eb 33		 jmp	 SHORT $LN1@SetTitle_e@3
$LN88@SetTitle_e@3:
  001af	c6 45 ec ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  001b3	eb 2d		 jmp	 SHORT $LN1@SetTitle_e@3
$LN89@SetTitle_e@3:
  001b5	c6 45 eb ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  001b9	eb 27		 jmp	 SHORT $LN1@SetTitle_e@3
$LN90@SetTitle_e@3:
  001bb	88 4d ea	 mov	 BYTE PTR __t$[ebp+6], cl
  001be	eb 22		 jmp	 SHORT $LN1@SetTitle_e@3
$LN91@SetTitle_e@3:
  001c0	c6 45 e9 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  001c4	eb 1c		 jmp	 SHORT $LN1@SetTitle_e@3
$LN92@SetTitle_e@3:
  001c6	c6 45 e8 ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  001ca	eb 16		 jmp	 SHORT $LN1@SetTitle_e@3
$LN93@SetTitle_e@3:
  001cc	c6 45 e7 ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  001d0	eb 10		 jmp	 SHORT $LN1@SetTitle_e@3
$LN94@SetTitle_e@3:
  001d2	c6 45 e6 eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  001d6	eb 0a		 jmp	 SHORT $LN1@SetTitle_e@3
$LN95@SetTitle_e@3:
  001d8	c6 45 e5 ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  001dc	eb 04		 jmp	 SHORT $LN1@SetTitle_e@3
$LN96@SetTitle_e@3:
  001de	c6 45 e4 ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@SetTitle_e@3:
  001e2	6a 04		 push	 4
  001e4	8d 45 e4	 lea	 eax, DWORD PTR __t$[ebp]
  001e7	c6 45 f5 00	 mov	 BYTE PTR __t$[ebp+17], 0
  001eb	5a		 pop	 edx
$LL104@SetTitle_e@3:
  001ec	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001f2	83 c0 04	 add	 eax, 4
  001f5	4a		 dec	 edx
  001f6	75 f4		 jne	 SHORT $LL104@SetTitle_e@3
  001f8	80 75 f4 ed	 xor	 BYTE PTR __t$[ebp+16], -19 ; ffffffedH

; 190  : 		SetTitle(_t);

  001fc	8d 45 e4	 lea	 eax, DWORD PTR __t$[ebp]
  001ff	50		 push	 eax
  00200	8b ce		 mov	 ecx, esi
  00202	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 191  : 	}

  00208	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0020b	33 cd		 xor	 ecx, ebp
  0020d	5e		 pop	 esi
  0020e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00213	c9		 leave
  00214	c2 04 00	 ret	 4
??$SetTitle_e@$0BC@@ioINILoader@@QAEXAAY0BC@$$CBD@Z ENDP ; ioINILoader::SetTitle_e<18>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVioBlock@@@std@@PAVioBlock@@AAPAV3@@std@@YAXAAV?$allocator@PAVioBlock@@@0@PAPAVioBlock@@AAPAV2@@Z ; std::_Cons_val<std::allocator<ioBlock *>,ioBlock *,ioBlock * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@PAVioBlock@@@std@@PAVioBlock@@AAPAV3@@std@@YAXAAV?$allocator@PAVioBlock@@@0@PAPAVioBlock@@AAPAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVioBlock@@@std@@PAVioBlock@@AAPAV3@@std@@YAXAAV?$allocator@PAVioBlock@@@0@PAPAVioBlock@@AAPAV2@@Z PROC ; std::_Cons_val<std::allocator<ioBlock *>,ioBlock *,ioBlock * &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN7@Cons_val
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@Cons_val:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@PAVioBlock@@@std@@PAVioBlock@@AAPAV3@@std@@YAXAAV?$allocator@PAVioBlock@@@0@PAPAVioBlock@@AAPAV2@@Z ENDP ; std::_Cons_val<std::allocator<ioBlock *>,ioBlock *,ioBlock * &>
_TEXT	ENDS
PUBLIC	??$_Move@PAPAVioBlock@@PAPAV1@@std@@YAPAPAVioBlock@@PAPAV1@00@Z ; std::_Move<ioBlock * *,ioBlock * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAPAVioBlock@@PAPAV1@@std@@YAPAPAVioBlock@@PAPAV1@00@Z
_TEXT	SEGMENT
__Cat$518889 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAPAVioBlock@@PAPAV1@@std@@YAPAPAVioBlock@@PAPAV1@00@Z PROC ; std::_Move<ioBlock * *,ioBlock * *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$518889[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAPAVioBlock@@PAPAV1@@std@@YAPAPAVioBlock@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ioBlock * *,ioBlock * *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAPAVioBlock@@PAPAV1@@std@@YAPAPAVioBlock@@PAPAV1@00@Z ENDP ; std::_Move<ioBlock * *,ioBlock * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVioBlock@@@std@@@std@@YAXPAPAVioBlock@@0AAV?$allocator@PAVioBlock@@@0@@Z ; std::_Destroy_range<std::allocator<ioBlock *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVioBlock@@@std@@@std@@YAXPAPAVioBlock@@0AAV?$allocator@PAVioBlock@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVioBlock@@@std@@@std@@YAXPAPAVioBlock@@0AAV?$allocator@PAVioBlock@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ioBlock *> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAVioBlock@@@std@@@std@@YAXPAPAVioBlock@@0AAV?$allocator@PAVioBlock@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioBlock *> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVioBlockProperty@@@2@@Z ; std::allocator<std::pair<int const ,ioBlockProperty *> >::destroy
; Function compile flags: /Ogsp
;	COMDAT ?destroy@?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVioBlockProperty@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVioBlockProperty@@@2@@Z PROC ; std::allocator<std::pair<int const ,ioBlockProperty *> >::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVioBlockProperty@@@2@@Z ENDP ; std::allocator<std::pair<int const ,ioBlockProperty *> >::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVioBlock@@@std@@QAEXPAPAVioBlock@@ABQAV3@@Z ; std::allocator<ioBlock *>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@PAVioBlock@@@std@@QAEXPAPAVioBlock@@ABQAV3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVioBlock@@@std@@QAEXPAPAVioBlock@@ABQAV3@@Z PROC ; std::allocator<ioBlock *>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN5@construct@2
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN5@construct@2:

; 198  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?construct@?$allocator@PAVioBlock@@@std@@QAEXPAPAVioBlock@@ABQAV3@@Z ENDP ; std::allocator<ioBlock *>::construct
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 874  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 875  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator--
; Function compile flags: /Ogsp
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 277  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 278  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 279  : 		if (this->_Getcont() == 0
; 280  : 			|| this->_Ptr == 0)
; 281  : 			{	// report error
; 282  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 283  : 			_SCL_SECURE_OUT_OF_RANGE;
; 284  : 			}
; 285  : 
; 286  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 287  : 		--(*(_Mybase *)this);
; 288  : 		if (_Ptrsav == this->_Ptr)
; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 291  : 			_SCL_SECURE_OUT_OF_RANGE;
; 292  : 			}
; 293  : 
; 294  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 295  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 296  : 
; 297  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 298  : 		--(*(_Mybase *)this);
; 299  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 300  : 
; 301  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 302  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::operator--

; 303  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 304  : 
; 305  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 306  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 146  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??$encodeString@$0BN@@ioINILoader_e@@AAEPADAAY0BN@$$CBDPAD@Z ; ioINILoader_e::encodeString<29>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$encodeString@$0BN@@ioINILoader_e@@AAEPADAAY0BN@$$CBDPAD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_e$ = 12						; size = 4
??$encodeString@$0BN@@ioINILoader_e@@AAEPADAAY0BN@$$CBDPAD@Z PROC ; ioINILoader_e::encodeString<29>, COMDAT
; _this$ = ecx

; 215  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 216  : 		__ENCSTR(s, e);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _s$[ebp]
  00006	8a 11		 mov	 dl, BYTE PTR [ecx]
  00008	8b 45 0c	 mov	 eax, DWORD PTR _e$[ebp]
  0000b	53		 push	 ebx
  0000c	84 d2		 test	 dl, dl
  0000e	0f 84 6a 04 00
	00		 je	 $LN96@encodeStri
  00014	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00017	88 10		 mov	 BYTE PTR [eax], dl
  00019	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  0001c	84 d2		 test	 dl, dl
  0001e	0f 84 54 04 00
	00		 je	 $LN95@encodeStri
  00024	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00027	88 50 01	 mov	 BYTE PTR [eax+1], dl
  0002a	8a 51 02	 mov	 dl, BYTE PTR [ecx+2]
  0002d	84 d2		 test	 dl, dl
  0002f	0f 84 3d 04 00
	00		 je	 $LN94@encodeStri
  00035	b3 eb		 mov	 bl, -21			; ffffffebH
  00037	32 d3		 xor	 dl, bl
  00039	88 50 02	 mov	 BYTE PTR [eax+2], dl
  0003c	8a 51 03	 mov	 dl, BYTE PTR [ecx+3]
  0003f	84 d2		 test	 dl, dl
  00041	0f 84 25 04 00
	00		 je	 $LN93@encodeStri
  00047	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0004a	88 50 03	 mov	 BYTE PTR [eax+3], dl
  0004d	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  00050	84 d2		 test	 dl, dl
  00052	0f 84 0e 04 00
	00		 je	 $LN92@encodeStri
  00058	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0005b	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0005e	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  00061	84 d2		 test	 dl, dl
  00063	0f 84 f7 03 00
	00		 je	 $LN91@encodeStri
  00069	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0006c	88 50 05	 mov	 BYTE PTR [eax+5], dl
  0006f	8a 51 06	 mov	 dl, BYTE PTR [ecx+6]
  00072	84 d2		 test	 dl, dl
  00074	0f 84 e1 03 00
	00		 je	 $LN90@encodeStri
  0007a	32 d3		 xor	 dl, bl
  0007c	88 50 06	 mov	 BYTE PTR [eax+6], dl
  0007f	8a 51 07	 mov	 dl, BYTE PTR [ecx+7]
  00082	84 d2		 test	 dl, dl
  00084	0f 84 cb 03 00
	00		 je	 $LN89@encodeStri
  0008a	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0008d	88 50 07	 mov	 BYTE PTR [eax+7], dl
  00090	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  00093	84 d2		 test	 dl, dl
  00095	0f 84 b4 03 00
	00		 je	 $LN88@encodeStri
  0009b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0009e	88 50 08	 mov	 BYTE PTR [eax+8], dl
  000a1	8a 51 09	 mov	 dl, BYTE PTR [ecx+9]
  000a4	84 d2		 test	 dl, dl
  000a6	0f 84 9d 03 00
	00		 je	 $LN87@encodeStri
  000ac	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000af	88 50 09	 mov	 BYTE PTR [eax+9], dl
  000b2	8a 51 0a	 mov	 dl, BYTE PTR [ecx+10]
  000b5	84 d2		 test	 dl, dl
  000b7	0f 84 87 03 00
	00		 je	 $LN86@encodeStri
  000bd	32 d3		 xor	 dl, bl
  000bf	88 50 0a	 mov	 BYTE PTR [eax+10], dl
  000c2	8a 51 0b	 mov	 dl, BYTE PTR [ecx+11]
  000c5	84 d2		 test	 dl, dl
  000c7	0f 84 71 03 00
	00		 je	 $LN85@encodeStri
  000cd	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d0	88 50 0b	 mov	 BYTE PTR [eax+11], dl
  000d3	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
  000d6	84 d2		 test	 dl, dl
  000d8	0f 84 5a 03 00
	00		 je	 $LN84@encodeStri
  000de	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e1	88 50 0c	 mov	 BYTE PTR [eax+12], dl
  000e4	8a 51 0d	 mov	 dl, BYTE PTR [ecx+13]
  000e7	84 d2		 test	 dl, dl
  000e9	0f 84 43 03 00
	00		 je	 $LN83@encodeStri
  000ef	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000f2	88 50 0d	 mov	 BYTE PTR [eax+13], dl
  000f5	8a 51 0e	 mov	 dl, BYTE PTR [ecx+14]
  000f8	84 d2		 test	 dl, dl
  000fa	0f 84 2d 03 00
	00		 je	 $LN82@encodeStri
  00100	32 d3		 xor	 dl, bl
  00102	88 50 0e	 mov	 BYTE PTR [eax+14], dl
  00105	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  00108	84 d2		 test	 dl, dl
  0010a	0f 84 17 03 00
	00		 je	 $LN81@encodeStri
  00110	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00113	88 50 0f	 mov	 BYTE PTR [eax+15], dl
  00116	8a 51 10	 mov	 dl, BYTE PTR [ecx+16]
  00119	84 d2		 test	 dl, dl
  0011b	0f 84 00 03 00
	00		 je	 $LN80@encodeStri
  00121	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00124	88 50 10	 mov	 BYTE PTR [eax+16], dl
  00127	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  0012a	84 d2		 test	 dl, dl
  0012c	0f 84 e9 02 00
	00		 je	 $LN79@encodeStri
  00132	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00135	88 50 11	 mov	 BYTE PTR [eax+17], dl
  00138	8a 51 12	 mov	 dl, BYTE PTR [ecx+18]
  0013b	84 d2		 test	 dl, dl
  0013d	0f 84 d3 02 00
	00		 je	 $LN78@encodeStri
  00143	32 d3		 xor	 dl, bl
  00145	88 50 12	 mov	 BYTE PTR [eax+18], dl
  00148	8a 51 13	 mov	 dl, BYTE PTR [ecx+19]
  0014b	84 d2		 test	 dl, dl
  0014d	0f 84 bd 02 00
	00		 je	 $LN77@encodeStri
  00153	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00156	88 50 13	 mov	 BYTE PTR [eax+19], dl
  00159	8a 51 14	 mov	 dl, BYTE PTR [ecx+20]
  0015c	84 d2		 test	 dl, dl
  0015e	0f 84 a6 02 00
	00		 je	 $LN76@encodeStri
  00164	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00167	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0016a	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0016d	84 d2		 test	 dl, dl
  0016f	0f 84 8f 02 00
	00		 je	 $LN75@encodeStri
  00175	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00178	88 50 15	 mov	 BYTE PTR [eax+21], dl
  0017b	8a 51 16	 mov	 dl, BYTE PTR [ecx+22]
  0017e	84 d2		 test	 dl, dl
  00180	0f 84 79 02 00
	00		 je	 $LN74@encodeStri
  00186	32 d3		 xor	 dl, bl
  00188	88 50 16	 mov	 BYTE PTR [eax+22], dl
  0018b	8a 51 17	 mov	 dl, BYTE PTR [ecx+23]
  0018e	84 d2		 test	 dl, dl
  00190	0f 84 60 02 00
	00		 je	 $LN73@encodeStri
  00196	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00199	88 50 17	 mov	 BYTE PTR [eax+23], dl
  0019c	8a 51 18	 mov	 dl, BYTE PTR [ecx+24]
  0019f	84 d2		 test	 dl, dl
  001a1	0f 84 46 02 00
	00		 je	 $LN72@encodeStri
  001a7	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001aa	88 50 18	 mov	 BYTE PTR [eax+24], dl
  001ad	8a 51 19	 mov	 dl, BYTE PTR [ecx+25]
  001b0	84 d2		 test	 dl, dl
  001b2	0f 84 2c 02 00
	00		 je	 $LN71@encodeStri
  001b8	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001bb	88 50 19	 mov	 BYTE PTR [eax+25], dl
  001be	8a 51 1a	 mov	 dl, BYTE PTR [ecx+26]
  001c1	84 d2		 test	 dl, dl
  001c3	0f 84 13 02 00
	00		 je	 $LN70@encodeStri
  001c9	32 d3		 xor	 dl, bl
  001cb	88 50 1a	 mov	 BYTE PTR [eax+26], dl
  001ce	8a 51 1b	 mov	 dl, BYTE PTR [ecx+27]
  001d1	84 d2		 test	 dl, dl
  001d3	0f 84 fa 01 00
	00		 je	 $LN69@encodeStri
  001d9	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001dc	88 50 1b	 mov	 BYTE PTR [eax+27], dl
  001df	8a 51 1c	 mov	 dl, BYTE PTR [ecx+28]
  001e2	84 d2		 test	 dl, dl
  001e4	0f 84 e0 01 00
	00		 je	 $LN68@encodeStri
  001ea	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001ed	88 50 1c	 mov	 BYTE PTR [eax+28], dl
  001f0	8a 51 1d	 mov	 dl, BYTE PTR [ecx+29]
  001f3	84 d2		 test	 dl, dl
  001f5	0f 84 c6 01 00
	00		 je	 $LN67@encodeStri
  001fb	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001fe	88 50 1d	 mov	 BYTE PTR [eax+29], dl
  00201	8a 51 1e	 mov	 dl, BYTE PTR [ecx+30]
  00204	84 d2		 test	 dl, dl
  00206	0f 84 ad 01 00
	00		 je	 $LN66@encodeStri
  0020c	32 d3		 xor	 dl, bl
  0020e	88 50 1e	 mov	 BYTE PTR [eax+30], dl
  00211	8a 51 1f	 mov	 dl, BYTE PTR [ecx+31]
  00214	84 d2		 test	 dl, dl
  00216	0f 84 94 01 00
	00		 je	 $LN65@encodeStri
  0021c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0021f	88 50 1f	 mov	 BYTE PTR [eax+31], dl
  00222	8a 51 20	 mov	 dl, BYTE PTR [ecx+32]
  00225	84 d2		 test	 dl, dl
  00227	0f 84 7a 01 00
	00		 je	 $LN64@encodeStri
  0022d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00230	88 50 20	 mov	 BYTE PTR [eax+32], dl
  00233	8a 51 21	 mov	 dl, BYTE PTR [ecx+33]
  00236	84 d2		 test	 dl, dl
  00238	0f 84 60 01 00
	00		 je	 $LN63@encodeStri
  0023e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00241	88 50 21	 mov	 BYTE PTR [eax+33], dl
  00244	8a 51 22	 mov	 dl, BYTE PTR [ecx+34]
  00247	84 d2		 test	 dl, dl
  00249	0f 84 47 01 00
	00		 je	 $LN62@encodeStri
  0024f	32 d3		 xor	 dl, bl
  00251	88 50 22	 mov	 BYTE PTR [eax+34], dl
  00254	8a 51 23	 mov	 dl, BYTE PTR [ecx+35]
  00257	84 d2		 test	 dl, dl
  00259	0f 84 2e 01 00
	00		 je	 $LN61@encodeStri
  0025f	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00262	88 50 23	 mov	 BYTE PTR [eax+35], dl
  00265	8a 51 24	 mov	 dl, BYTE PTR [ecx+36]
  00268	84 d2		 test	 dl, dl
  0026a	0f 84 14 01 00
	00		 je	 $LN60@encodeStri
  00270	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00273	88 50 24	 mov	 BYTE PTR [eax+36], dl
  00276	8a 51 25	 mov	 dl, BYTE PTR [ecx+37]
  00279	84 d2		 test	 dl, dl
  0027b	0f 84 fa 00 00
	00		 je	 $LN59@encodeStri
  00281	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00284	88 50 25	 mov	 BYTE PTR [eax+37], dl
  00287	8a 51 26	 mov	 dl, BYTE PTR [ecx+38]
  0028a	84 d2		 test	 dl, dl
  0028c	0f 84 e1 00 00
	00		 je	 $LN58@encodeStri
  00292	32 d3		 xor	 dl, bl
  00294	88 50 26	 mov	 BYTE PTR [eax+38], dl
  00297	8a 51 27	 mov	 dl, BYTE PTR [ecx+39]
  0029a	84 d2		 test	 dl, dl
  0029c	0f 84 c8 00 00
	00		 je	 $LN57@encodeStri
  002a2	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002a5	88 50 27	 mov	 BYTE PTR [eax+39], dl
  002a8	8a 51 28	 mov	 dl, BYTE PTR [ecx+40]
  002ab	84 d2		 test	 dl, dl
  002ad	0f 84 ae 00 00
	00		 je	 $LN56@encodeStri
  002b3	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002b6	88 50 28	 mov	 BYTE PTR [eax+40], dl
  002b9	8a 51 29	 mov	 dl, BYTE PTR [ecx+41]
  002bc	84 d2		 test	 dl, dl
  002be	0f 84 94 00 00
	00		 je	 $LN55@encodeStri
  002c4	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002c7	88 50 29	 mov	 BYTE PTR [eax+41], dl
  002ca	8a 51 2a	 mov	 dl, BYTE PTR [ecx+42]
  002cd	84 d2		 test	 dl, dl
  002cf	74 7f		 je	 SHORT $LN54@encodeStri
  002d1	32 d3		 xor	 dl, bl
  002d3	88 50 2a	 mov	 BYTE PTR [eax+42], dl
  002d6	8a 51 2b	 mov	 dl, BYTE PTR [ecx+43]
  002d9	84 d2		 test	 dl, dl
  002db	74 6a		 je	 SHORT $LN53@encodeStri
  002dd	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002e0	88 50 2b	 mov	 BYTE PTR [eax+43], dl
  002e3	8a 51 2c	 mov	 dl, BYTE PTR [ecx+44]
  002e6	84 d2		 test	 dl, dl
  002e8	74 54		 je	 SHORT $LN52@encodeStri
  002ea	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002ed	88 50 2c	 mov	 BYTE PTR [eax+44], dl
  002f0	8a 51 2d	 mov	 dl, BYTE PTR [ecx+45]
  002f3	84 d2		 test	 dl, dl
  002f5	74 3e		 je	 SHORT $LN51@encodeStri
  002f7	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002fa	88 50 2d	 mov	 BYTE PTR [eax+45], dl
  002fd	8a 51 2e	 mov	 dl, BYTE PTR [ecx+46]
  00300	84 d2		 test	 dl, dl
  00302	74 29		 je	 SHORT $LN50@encodeStri
  00304	32 d3		 xor	 dl, bl
  00306	88 50 2e	 mov	 BYTE PTR [eax+46], dl
  00309	8a 51 2f	 mov	 dl, BYTE PTR [ecx+47]
  0030c	84 d2		 test	 dl, dl
  0030e	74 14		 je	 SHORT $LN49@encodeStri
  00310	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00313	88 50 2f	 mov	 BYTE PTR [eax+47], dl
  00316	8a 49 30	 mov	 cl, BYTE PTR [ecx+48]
  00319	80 f1 ed	 xor	 cl, -19			; ffffffedH
  0031c	88 48 30	 mov	 BYTE PTR [eax+48], cl
  0031f	e9 5d 01 00 00	 jmp	 $LN1@encodeStri
$LN49@encodeStri:
  00324	c6 40 2f ea	 mov	 BYTE PTR [eax+47], -22	; ffffffeaH
  00328	e9 54 01 00 00	 jmp	 $LN1@encodeStri
$LN50@encodeStri:
  0032d	88 58 2e	 mov	 BYTE PTR [eax+46], bl
  00330	e9 4c 01 00 00	 jmp	 $LN1@encodeStri
$LN51@encodeStri:
  00335	c6 40 2d ec	 mov	 BYTE PTR [eax+45], -20	; ffffffecH
  00339	e9 43 01 00 00	 jmp	 $LN1@encodeStri
$LN52@encodeStri:
  0033e	c6 40 2c ed	 mov	 BYTE PTR [eax+44], -19	; ffffffedH
  00342	e9 3a 01 00 00	 jmp	 $LN1@encodeStri
$LN53@encodeStri:
  00347	c6 40 2b ea	 mov	 BYTE PTR [eax+43], -22	; ffffffeaH
  0034b	e9 31 01 00 00	 jmp	 $LN1@encodeStri
$LN54@encodeStri:
  00350	88 58 2a	 mov	 BYTE PTR [eax+42], bl
  00353	e9 29 01 00 00	 jmp	 $LN1@encodeStri
$LN55@encodeStri:
  00358	c6 40 29 ec	 mov	 BYTE PTR [eax+41], -20	; ffffffecH
  0035c	e9 20 01 00 00	 jmp	 $LN1@encodeStri
$LN56@encodeStri:
  00361	c6 40 28 ed	 mov	 BYTE PTR [eax+40], -19	; ffffffedH
  00365	e9 17 01 00 00	 jmp	 $LN1@encodeStri
$LN57@encodeStri:
  0036a	c6 40 27 ea	 mov	 BYTE PTR [eax+39], -22	; ffffffeaH
  0036e	e9 0e 01 00 00	 jmp	 $LN1@encodeStri
$LN58@encodeStri:
  00373	88 58 26	 mov	 BYTE PTR [eax+38], bl
  00376	e9 06 01 00 00	 jmp	 $LN1@encodeStri
$LN59@encodeStri:
  0037b	c6 40 25 ec	 mov	 BYTE PTR [eax+37], -20	; ffffffecH
  0037f	e9 fd 00 00 00	 jmp	 $LN1@encodeStri
$LN60@encodeStri:
  00384	c6 40 24 ed	 mov	 BYTE PTR [eax+36], -19	; ffffffedH
  00388	e9 f4 00 00 00	 jmp	 $LN1@encodeStri
$LN61@encodeStri:
  0038d	c6 40 23 ea	 mov	 BYTE PTR [eax+35], -22	; ffffffeaH
  00391	e9 eb 00 00 00	 jmp	 $LN1@encodeStri
$LN62@encodeStri:
  00396	88 58 22	 mov	 BYTE PTR [eax+34], bl
  00399	e9 e3 00 00 00	 jmp	 $LN1@encodeStri
$LN63@encodeStri:
  0039e	c6 40 21 ec	 mov	 BYTE PTR [eax+33], -20	; ffffffecH
  003a2	e9 da 00 00 00	 jmp	 $LN1@encodeStri
$LN64@encodeStri:
  003a7	c6 40 20 ed	 mov	 BYTE PTR [eax+32], -19	; ffffffedH
  003ab	e9 d1 00 00 00	 jmp	 $LN1@encodeStri
$LN65@encodeStri:
  003b0	c6 40 1f ea	 mov	 BYTE PTR [eax+31], -22	; ffffffeaH
  003b4	e9 c8 00 00 00	 jmp	 $LN1@encodeStri
$LN66@encodeStri:
  003b9	88 58 1e	 mov	 BYTE PTR [eax+30], bl
  003bc	e9 c0 00 00 00	 jmp	 $LN1@encodeStri
$LN67@encodeStri:
  003c1	c6 40 1d ec	 mov	 BYTE PTR [eax+29], -20	; ffffffecH
  003c5	e9 b7 00 00 00	 jmp	 $LN1@encodeStri
$LN68@encodeStri:
  003ca	c6 40 1c ed	 mov	 BYTE PTR [eax+28], -19	; ffffffedH
  003ce	e9 ae 00 00 00	 jmp	 $LN1@encodeStri
$LN69@encodeStri:
  003d3	c6 40 1b ea	 mov	 BYTE PTR [eax+27], -22	; ffffffeaH
  003d7	e9 a5 00 00 00	 jmp	 $LN1@encodeStri
$LN70@encodeStri:
  003dc	88 58 1a	 mov	 BYTE PTR [eax+26], bl
  003df	e9 9d 00 00 00	 jmp	 $LN1@encodeStri
$LN71@encodeStri:
  003e4	c6 40 19 ec	 mov	 BYTE PTR [eax+25], -20	; ffffffecH
  003e8	e9 94 00 00 00	 jmp	 $LN1@encodeStri
$LN72@encodeStri:
  003ed	c6 40 18 ed	 mov	 BYTE PTR [eax+24], -19	; ffffffedH
  003f1	e9 8b 00 00 00	 jmp	 $LN1@encodeStri
$LN73@encodeStri:
  003f6	c6 40 17 ea	 mov	 BYTE PTR [eax+23], -22	; ffffffeaH
  003fa	e9 82 00 00 00	 jmp	 $LN1@encodeStri
$LN74@encodeStri:
  003ff	88 58 16	 mov	 BYTE PTR [eax+22], bl
  00402	eb 7d		 jmp	 SHORT $LN1@encodeStri
$LN75@encodeStri:
  00404	c6 40 15 ec	 mov	 BYTE PTR [eax+21], -20	; ffffffecH
  00408	eb 77		 jmp	 SHORT $LN1@encodeStri
$LN76@encodeStri:
  0040a	c6 40 14 ed	 mov	 BYTE PTR [eax+20], -19	; ffffffedH
  0040e	eb 71		 jmp	 SHORT $LN1@encodeStri
$LN77@encodeStri:
  00410	c6 40 13 ea	 mov	 BYTE PTR [eax+19], -22	; ffffffeaH
  00414	eb 6b		 jmp	 SHORT $LN1@encodeStri
$LN78@encodeStri:
  00416	88 58 12	 mov	 BYTE PTR [eax+18], bl
  00419	eb 66		 jmp	 SHORT $LN1@encodeStri
$LN79@encodeStri:
  0041b	c6 40 11 ec	 mov	 BYTE PTR [eax+17], -20	; ffffffecH
  0041f	eb 60		 jmp	 SHORT $LN1@encodeStri
$LN80@encodeStri:
  00421	c6 40 10 ed	 mov	 BYTE PTR [eax+16], -19	; ffffffedH
  00425	eb 5a		 jmp	 SHORT $LN1@encodeStri
$LN81@encodeStri:
  00427	c6 40 0f ea	 mov	 BYTE PTR [eax+15], -22	; ffffffeaH
  0042b	eb 54		 jmp	 SHORT $LN1@encodeStri
$LN82@encodeStri:
  0042d	88 58 0e	 mov	 BYTE PTR [eax+14], bl
  00430	eb 4f		 jmp	 SHORT $LN1@encodeStri
$LN83@encodeStri:
  00432	c6 40 0d ec	 mov	 BYTE PTR [eax+13], -20	; ffffffecH
  00436	eb 49		 jmp	 SHORT $LN1@encodeStri
$LN84@encodeStri:
  00438	c6 40 0c ed	 mov	 BYTE PTR [eax+12], -19	; ffffffedH
  0043c	eb 43		 jmp	 SHORT $LN1@encodeStri
$LN85@encodeStri:
  0043e	c6 40 0b ea	 mov	 BYTE PTR [eax+11], -22	; ffffffeaH
  00442	eb 3d		 jmp	 SHORT $LN1@encodeStri
$LN86@encodeStri:
  00444	88 58 0a	 mov	 BYTE PTR [eax+10], bl
  00447	eb 38		 jmp	 SHORT $LN1@encodeStri
$LN87@encodeStri:
  00449	c6 40 09 ec	 mov	 BYTE PTR [eax+9], -20	; ffffffecH
  0044d	eb 32		 jmp	 SHORT $LN1@encodeStri
$LN88@encodeStri:
  0044f	c6 40 08 ed	 mov	 BYTE PTR [eax+8], -19	; ffffffedH
  00453	eb 2c		 jmp	 SHORT $LN1@encodeStri
$LN89@encodeStri:
  00455	c6 40 07 ea	 mov	 BYTE PTR [eax+7], -22	; ffffffeaH
  00459	eb 26		 jmp	 SHORT $LN1@encodeStri
$LN90@encodeStri:
  0045b	88 58 06	 mov	 BYTE PTR [eax+6], bl
  0045e	eb 21		 jmp	 SHORT $LN1@encodeStri
$LN91@encodeStri:
  00460	c6 40 05 ec	 mov	 BYTE PTR [eax+5], -20	; ffffffecH
  00464	eb 1b		 jmp	 SHORT $LN1@encodeStri
$LN92@encodeStri:
  00466	c6 40 04 ed	 mov	 BYTE PTR [eax+4], -19	; ffffffedH
  0046a	eb 15		 jmp	 SHORT $LN1@encodeStri
$LN93@encodeStri:
  0046c	c6 40 03 ea	 mov	 BYTE PTR [eax+3], -22	; ffffffeaH
  00470	eb 0f		 jmp	 SHORT $LN1@encodeStri
$LN94@encodeStri:
  00472	c6 40 02 eb	 mov	 BYTE PTR [eax+2], -21	; ffffffebH
  00476	eb 09		 jmp	 SHORT $LN1@encodeStri
$LN95@encodeStri:
  00478	c6 40 01 ec	 mov	 BYTE PTR [eax+1], -20	; ffffffecH
  0047c	eb 03		 jmp	 SHORT $LN1@encodeStri
$LN96@encodeStri:
  0047e	c6 00 ed	 mov	 BYTE PTR [eax], -19	; ffffffedH
$LN1@encodeStri:
  00481	6a 07		 push	 7
  00483	5a		 pop	 edx
  00484	8b c8		 mov	 ecx, eax
  00486	c6 40 1c 00	 mov	 BYTE PTR [eax+28], 0
  0048a	5b		 pop	 ebx
$LL104@encodeStri:
  0048b	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  00491	83 c1 04	 add	 ecx, 4
  00494	4a		 dec	 edx
  00495	75 f4		 jne	 SHORT $LL104@encodeStri

; 217  : 		return e;
; 218  : 	}

  00497	5d		 pop	 ebp
  00498	c2 08 00	 ret	 8
??$encodeString@$0BN@@ioINILoader_e@@AAEPADAAY0BN@$$CBDPAD@Z ENDP ; ioINILoader_e::encodeString<29>
_TEXT	ENDS
PUBLIC	??$?0AAHAAPAVioBlockProperty@@@?$_Pair_base@$$CBHPAVioBlockProperty@@@std@@QAE@AAHAAPAVioBlockProperty@@@Z ; std::_Pair_base<int const ,ioBlockProperty *>::_Pair_base<int const ,ioBlockProperty *><int &,ioBlockProperty * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAHAAPAVioBlockProperty@@@?$_Pair_base@$$CBHPAVioBlockProperty@@@std@@QAE@AAHAAPAVioBlockProperty@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAHAAPAVioBlockProperty@@@?$_Pair_base@$$CBHPAVioBlockProperty@@@std@@QAE@AAHAAPAVioBlockProperty@@@Z PROC ; std::_Pair_base<int const ,ioBlockProperty *>::_Pair_base<int const ,ioBlockProperty *><int &,ioBlockProperty * &>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00011	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 164  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAHAAPAVioBlockProperty@@@?$_Pair_base@$$CBHPAVioBlockProperty@@@std@@QAE@AAHAAPAVioBlockProperty@@@Z ENDP ; std::_Pair_base<int const ,ioBlockProperty *>::_Pair_base<int const ,ioBlockProperty *><int &,ioBlockProperty * &>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAPAVioBlock@@PAPAV1@V?$allocator@PAVioBlock@@@std@@@std@@YAPAPAVioBlock@@PAPAV1@00AAV?$allocator@PAVioBlock@@@0@@Z ; std::_Uninitialized_move<ioBlock * *,ioBlock * *,std::allocator<ioBlock *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAPAVioBlock@@PAPAV1@V?$allocator@PAVioBlock@@@std@@@std@@YAPAPAVioBlock@@PAPAV1@00AAV?$allocator@PAVioBlock@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVioBlock@@PAPAV1@V?$allocator@PAVioBlock@@@std@@@std@@YAPAPAVioBlock@@PAPAV1@00AAV?$allocator@PAVioBlock@@@0@@Z PROC ; std::_Uninitialized_move<ioBlock * *,ioBlock * *,std::allocator<ioBlock *> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2
  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 472  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVioBlock@@PAPAV1@V?$allocator@PAVioBlock@@@std@@@std@@YAPAPAVioBlock@@PAPAV1@00AAV?$allocator@PAVioBlock@@@0@@Z ENDP ; std::_Uninitialized_move<ioBlock * *,ioBlock * *,std::allocator<ioBlock *> >
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Buynode
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
$T519019 = -16						; size = 12
$T519002 = -4						; size = 4
?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 559  : 		{	// allocate a node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00007	6a 18		 push	 24			; 00000018H
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	59		 pop	 ecx
  00011	33 c9		 xor	 ecx, ecx
  00013	3b c1		 cmp	 eax, ecx
  00015	74 18		 je	 SHORT $LN5@Buynode

; 561  : 
; 562  : 		this->_Left(_Wherenode) = this->_Myhead;

  00017	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001a	89 10		 mov	 DWORD PTR [eax], edx

; 563  : 		this->_Parent(_Wherenode) = this->_Myhead;

  0001c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001f	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 564  : 		this->_Right(_Wherenode) = this->_Myhead;

  00022	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00025	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 565  : 		this->_Color(_Wherenode) = this->_Red;

  00028	66 89 48 14	 mov	 WORD PTR [eax+20], cx
  0002c	5e		 pop	 esi

; 566  : 		this->_Isnil(_Wherenode) = false;
; 567  : 		return (_Wherenode);
; 568  : 		}

  0002d	c9		 leave
  0002e	c3		 ret	 0

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

$LN5@Buynode:
  0002f	8d 45 fc	 lea	 eax, DWORD PTR $T519002[ebp]
  00032	89 4d fc	 mov	 DWORD PTR $T519002[ebp], ecx
  00035	50		 push	 eax
  00036	8d 4d f0	 lea	 ecx, DWORD PTR $T519019[ebp]
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  0003f	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00044	8d 45 f0	 lea	 eax, DWORD PTR $T519019[ebp]
  00047	50		 push	 eax
  00048	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T519019[ebp], OFFSET ??_7bad_alloc@std@@6B@
  0004f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN27@Buynode:
$LN26@Buynode:
  00054	cc		 int	 3
?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > > &,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 164  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@$$CBHPAVioBlockProperty@@@std@@QAE@$$QBH$$QAPAVioBlockProperty@@@Z ; std::_Pair_base<int const ,ioBlockProperty *>::_Pair_base<int const ,ioBlockProperty *>
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Pair_base@$$CBHPAVioBlockProperty@@@std@@QAE@$$QBH$$QAPAVioBlockProperty@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@$$CBHPAVioBlockProperty@@@std@@QAE@$$QBH$$QAPAVioBlockProperty@@@Z PROC ; std::_Pair_base<int const ,ioBlockProperty *>::_Pair_base<int const ,ioBlockProperty *>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00011	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 146  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$_Pair_base@$$CBHPAVioBlockProperty@@@std@@QAE@$$QBH$$QAPAVioBlockProperty@@@Z ENDP ; std::_Pair_base<int const ,ioBlockProperty *>::_Pair_base<int const ,ioBlockProperty *>
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogsp
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 101  : 	{	// exchange values stored at _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 102  : 	_Ty _Tmp = _Move(_Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8a 08		 mov	 cl, BYTE PTR [eax]
  00008	56		 push	 esi

; 103  : 	_Left = _Move(_Right);

  00009	8b 75 0c	 mov	 esi, DWORD PTR __Right$[ebp]
  0000c	8a 16		 mov	 dl, BYTE PTR [esi]
  0000e	88 10		 mov	 BYTE PTR [eax], dl

; 104  : 	_Right = _Move(_Tmp);

  00010	88 0e		 mov	 BYTE PTR [esi], cl
  00012	5e		 pop	 esi

; 105  : 	}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??0?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE@XZ ; std::vector<ioBlock *,std::allocator<ioBlock *> >::vector<ioBlock *,std::allocator<ioBlock *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE@XZ PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::vector<ioBlock *,std::allocator<ioBlock *> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::vector<ioBlock *,std::allocator<ioBlock *> >
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@XZ ; std::vector<ioBlock *,std::allocator<ioBlock *> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@XZ PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@XZ ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@XZ ; std::vector<ioBlock *,std::allocator<ioBlock *> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@XZ PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@XZ ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::end
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioBlock *,std::allocator<ioBlock *> > >::operator!=
_TEXT	ENDS
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAVioBlockProperty@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator->
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAVioBlockProperty@@@1@XZ
_TEXT	SEGMENT
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAVioBlockProperty@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator->, COMDAT
; _this$ = ecx

; 401  : 		return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 402  : 		}

  00005	c3		 ret	 0
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAVioBlockProperty@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator->
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Make_iter
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Make_iter@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@@Z PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@@Z ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Make_iter
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEXPAPAVioBlock@@0@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEXPAPAVioBlock@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEXPAPAVioBlock@@0@Z PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEXPAPAVioBlock@@0@Z ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEXXZ ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Tidy
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEXXZ PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN12@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN12@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEXXZ ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >, COMDAT
; _this$ = ecx

; 378  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 379  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))
; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 257  : 			_SCL_SECURE_OUT_OF_RANGE;
; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::operator++

; 266  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 267  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z
_TEXT	SEGMENT
$T519296 = -16						; size = 12
$T519280 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >, COMDAT
; _this$ = ecx

; 542  : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 543  : 		this->_Mysize = 0;

  00009	83 66 08 00	 and	 DWORD PTR [esi+8], 0

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

  0000d	6a 18		 push	 24			; 00000018H
  0000f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00014	59		 pop	 ecx
  00015	85 c0		 test	 eax, eax
  00017	74 26		 je	 SHORT $LN15@Tree_val
  00019	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 545  : 
; 546  : 		this->_Left(this->_Myhead) = this->_Myhead;

  0001c	89 00		 mov	 DWORD PTR [eax], eax

; 547  : 		this->_Parent(this->_Myhead) = this->_Myhead;

  0001e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00021	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 548  : 		this->_Right(this->_Myhead) = this->_Myhead;

  00024	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00027	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 549  : 		this->_Color(this->_Myhead) = this->_Black;

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 550  : 		this->_Isnil(this->_Myhead) = true;

  00031	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00034	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 551  : 		}

  00038	8b c6		 mov	 eax, esi
  0003a	5e		 pop	 esi
  0003b	c9		 leave
  0003c	c2 08 00	 ret	 8

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

$LN15@Tree_val:
  0003f	83 65 fc 00	 and	 DWORD PTR $T519280[ebp], 0
  00043	8d 45 fc	 lea	 eax, DWORD PTR $T519280[ebp]
  00046	50		 push	 eax
  00047	8d 4d f0	 lea	 ecx, DWORD PTR $T519296[ebp]
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00050	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00055	8d 45 f0	 lea	 eax, DWORD PTR $T519296[ebp]
  00058	50		 push	 eax
  00059	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T519296[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00060	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN37@Tree_val:
$LN36@Tree_val:
  00065	cc		 int	 3
??0?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 270  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 271  : 		_Myiter _Tmp = *this;

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 06		 mov	 DWORD PTR [esi], eax

; 272  : 		++*this;

  0000b	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::operator++

; 273  : 		return (_Tmp);

  00010	8b c6		 mov	 eax, esi
  00012	5e		 pop	 esi

; 274  : 		}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??$?0$0BN@@ioINILoader_e@@QAE@AAY0BN@$$CBD_N@Z	; ioINILoader_e::ioINILoader_e<29>
EXTRN	__imp_??0ioINILoader@@QAE@PBD_N@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$?0$0BN@@ioINILoader_e@@QAE@AAY0BN@$$CBD_N@Z
_TEXT	SEGMENT
_fn$ = 8						; size = 4
_b$ = 12						; size = 1
??$?0$0BN@@ioINILoader_e@@QAE@AAY0BN@$$CBD_N@Z PROC	; ioINILoader_e::ioINILoader_e<29>, COMDAT
; _this$ = ecx

; 224  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _fn$[ebp]
  0000a	8a 11		 mov	 dl, BYTE PTR [ecx]
  0000c	8d 86 50 03 00
	00		 lea	 eax, DWORD PTR [esi+848]
  00012	84 d2		 test	 dl, dl
  00014	0f 84 6a 04 00
	00		 je	 $LN99@ioINILoade
  0001a	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0001d	88 10		 mov	 BYTE PTR [eax], dl
  0001f	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  00022	84 d2		 test	 dl, dl
  00024	0f 84 54 04 00
	00		 je	 $LN98@ioINILoade
  0002a	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0002d	88 50 01	 mov	 BYTE PTR [eax+1], dl
  00030	8a 51 02	 mov	 dl, BYTE PTR [ecx+2]
  00033	84 d2		 test	 dl, dl
  00035	0f 84 3d 04 00
	00		 je	 $LN97@ioINILoade
  0003b	b3 eb		 mov	 bl, -21			; ffffffebH
  0003d	32 d3		 xor	 dl, bl
  0003f	88 50 02	 mov	 BYTE PTR [eax+2], dl
  00042	8a 51 03	 mov	 dl, BYTE PTR [ecx+3]
  00045	84 d2		 test	 dl, dl
  00047	0f 84 25 04 00
	00		 je	 $LN96@ioINILoade
  0004d	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00050	88 50 03	 mov	 BYTE PTR [eax+3], dl
  00053	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  00056	84 d2		 test	 dl, dl
  00058	0f 84 0e 04 00
	00		 je	 $LN95@ioINILoade
  0005e	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00061	88 50 04	 mov	 BYTE PTR [eax+4], dl
  00064	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  00067	84 d2		 test	 dl, dl
  00069	0f 84 f7 03 00
	00		 je	 $LN94@ioINILoade
  0006f	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00072	88 50 05	 mov	 BYTE PTR [eax+5], dl
  00075	8a 51 06	 mov	 dl, BYTE PTR [ecx+6]
  00078	84 d2		 test	 dl, dl
  0007a	0f 84 e1 03 00
	00		 je	 $LN93@ioINILoade
  00080	32 d3		 xor	 dl, bl
  00082	88 50 06	 mov	 BYTE PTR [eax+6], dl
  00085	8a 51 07	 mov	 dl, BYTE PTR [ecx+7]
  00088	84 d2		 test	 dl, dl
  0008a	0f 84 cb 03 00
	00		 je	 $LN92@ioINILoade
  00090	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00093	88 50 07	 mov	 BYTE PTR [eax+7], dl
  00096	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  00099	84 d2		 test	 dl, dl
  0009b	0f 84 b4 03 00
	00		 je	 $LN91@ioINILoade
  000a1	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a4	88 50 08	 mov	 BYTE PTR [eax+8], dl
  000a7	8a 51 09	 mov	 dl, BYTE PTR [ecx+9]
  000aa	84 d2		 test	 dl, dl
  000ac	0f 84 9d 03 00
	00		 je	 $LN90@ioINILoade
  000b2	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b5	88 50 09	 mov	 BYTE PTR [eax+9], dl
  000b8	8a 51 0a	 mov	 dl, BYTE PTR [ecx+10]
  000bb	84 d2		 test	 dl, dl
  000bd	0f 84 87 03 00
	00		 je	 $LN89@ioINILoade
  000c3	32 d3		 xor	 dl, bl
  000c5	88 50 0a	 mov	 BYTE PTR [eax+10], dl
  000c8	8a 51 0b	 mov	 dl, BYTE PTR [ecx+11]
  000cb	84 d2		 test	 dl, dl
  000cd	0f 84 71 03 00
	00		 je	 $LN88@ioINILoade
  000d3	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d6	88 50 0b	 mov	 BYTE PTR [eax+11], dl
  000d9	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
  000dc	84 d2		 test	 dl, dl
  000de	0f 84 5a 03 00
	00		 je	 $LN87@ioINILoade
  000e4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e7	88 50 0c	 mov	 BYTE PTR [eax+12], dl
  000ea	8a 51 0d	 mov	 dl, BYTE PTR [ecx+13]
  000ed	84 d2		 test	 dl, dl
  000ef	0f 84 43 03 00
	00		 je	 $LN86@ioINILoade
  000f5	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000f8	88 50 0d	 mov	 BYTE PTR [eax+13], dl
  000fb	8a 51 0e	 mov	 dl, BYTE PTR [ecx+14]
  000fe	84 d2		 test	 dl, dl
  00100	0f 84 2d 03 00
	00		 je	 $LN85@ioINILoade
  00106	32 d3		 xor	 dl, bl
  00108	88 50 0e	 mov	 BYTE PTR [eax+14], dl
  0010b	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  0010e	84 d2		 test	 dl, dl
  00110	0f 84 17 03 00
	00		 je	 $LN84@ioINILoade
  00116	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00119	88 50 0f	 mov	 BYTE PTR [eax+15], dl
  0011c	8a 51 10	 mov	 dl, BYTE PTR [ecx+16]
  0011f	84 d2		 test	 dl, dl
  00121	0f 84 00 03 00
	00		 je	 $LN83@ioINILoade
  00127	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0012a	88 50 10	 mov	 BYTE PTR [eax+16], dl
  0012d	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  00130	84 d2		 test	 dl, dl
  00132	0f 84 e9 02 00
	00		 je	 $LN82@ioINILoade
  00138	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0013b	88 50 11	 mov	 BYTE PTR [eax+17], dl
  0013e	8a 51 12	 mov	 dl, BYTE PTR [ecx+18]
  00141	84 d2		 test	 dl, dl
  00143	0f 84 d3 02 00
	00		 je	 $LN81@ioINILoade
  00149	32 d3		 xor	 dl, bl
  0014b	88 50 12	 mov	 BYTE PTR [eax+18], dl
  0014e	8a 51 13	 mov	 dl, BYTE PTR [ecx+19]
  00151	84 d2		 test	 dl, dl
  00153	0f 84 bd 02 00
	00		 je	 $LN80@ioINILoade
  00159	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0015c	88 50 13	 mov	 BYTE PTR [eax+19], dl
  0015f	8a 51 14	 mov	 dl, BYTE PTR [ecx+20]
  00162	84 d2		 test	 dl, dl
  00164	0f 84 a6 02 00
	00		 je	 $LN79@ioINILoade
  0016a	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0016d	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00170	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00173	84 d2		 test	 dl, dl
  00175	0f 84 8f 02 00
	00		 je	 $LN78@ioINILoade
  0017b	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0017e	88 50 15	 mov	 BYTE PTR [eax+21], dl
  00181	8a 51 16	 mov	 dl, BYTE PTR [ecx+22]
  00184	84 d2		 test	 dl, dl
  00186	0f 84 79 02 00
	00		 je	 $LN77@ioINILoade
  0018c	32 d3		 xor	 dl, bl
  0018e	88 50 16	 mov	 BYTE PTR [eax+22], dl
  00191	8a 51 17	 mov	 dl, BYTE PTR [ecx+23]
  00194	84 d2		 test	 dl, dl
  00196	0f 84 60 02 00
	00		 je	 $LN76@ioINILoade
  0019c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0019f	88 50 17	 mov	 BYTE PTR [eax+23], dl
  001a2	8a 51 18	 mov	 dl, BYTE PTR [ecx+24]
  001a5	84 d2		 test	 dl, dl
  001a7	0f 84 46 02 00
	00		 je	 $LN75@ioINILoade
  001ad	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001b0	88 50 18	 mov	 BYTE PTR [eax+24], dl
  001b3	8a 51 19	 mov	 dl, BYTE PTR [ecx+25]
  001b6	84 d2		 test	 dl, dl
  001b8	0f 84 2c 02 00
	00		 je	 $LN74@ioINILoade
  001be	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001c1	88 50 19	 mov	 BYTE PTR [eax+25], dl
  001c4	8a 51 1a	 mov	 dl, BYTE PTR [ecx+26]
  001c7	84 d2		 test	 dl, dl
  001c9	0f 84 13 02 00
	00		 je	 $LN73@ioINILoade
  001cf	32 d3		 xor	 dl, bl
  001d1	88 50 1a	 mov	 BYTE PTR [eax+26], dl
  001d4	8a 51 1b	 mov	 dl, BYTE PTR [ecx+27]
  001d7	84 d2		 test	 dl, dl
  001d9	0f 84 fa 01 00
	00		 je	 $LN72@ioINILoade
  001df	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001e2	88 50 1b	 mov	 BYTE PTR [eax+27], dl
  001e5	8a 51 1c	 mov	 dl, BYTE PTR [ecx+28]
  001e8	84 d2		 test	 dl, dl
  001ea	0f 84 e0 01 00
	00		 je	 $LN71@ioINILoade
  001f0	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001f3	88 50 1c	 mov	 BYTE PTR [eax+28], dl
  001f6	8a 51 1d	 mov	 dl, BYTE PTR [ecx+29]
  001f9	84 d2		 test	 dl, dl
  001fb	0f 84 c6 01 00
	00		 je	 $LN70@ioINILoade
  00201	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00204	88 50 1d	 mov	 BYTE PTR [eax+29], dl
  00207	8a 51 1e	 mov	 dl, BYTE PTR [ecx+30]
  0020a	84 d2		 test	 dl, dl
  0020c	0f 84 ad 01 00
	00		 je	 $LN69@ioINILoade
  00212	32 d3		 xor	 dl, bl
  00214	88 50 1e	 mov	 BYTE PTR [eax+30], dl
  00217	8a 51 1f	 mov	 dl, BYTE PTR [ecx+31]
  0021a	84 d2		 test	 dl, dl
  0021c	0f 84 94 01 00
	00		 je	 $LN68@ioINILoade
  00222	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00225	88 50 1f	 mov	 BYTE PTR [eax+31], dl
  00228	8a 51 20	 mov	 dl, BYTE PTR [ecx+32]
  0022b	84 d2		 test	 dl, dl
  0022d	0f 84 7a 01 00
	00		 je	 $LN67@ioINILoade
  00233	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00236	88 50 20	 mov	 BYTE PTR [eax+32], dl
  00239	8a 51 21	 mov	 dl, BYTE PTR [ecx+33]
  0023c	84 d2		 test	 dl, dl
  0023e	0f 84 60 01 00
	00		 je	 $LN66@ioINILoade
  00244	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00247	88 50 21	 mov	 BYTE PTR [eax+33], dl
  0024a	8a 51 22	 mov	 dl, BYTE PTR [ecx+34]
  0024d	84 d2		 test	 dl, dl
  0024f	0f 84 47 01 00
	00		 je	 $LN65@ioINILoade
  00255	32 d3		 xor	 dl, bl
  00257	88 50 22	 mov	 BYTE PTR [eax+34], dl
  0025a	8a 51 23	 mov	 dl, BYTE PTR [ecx+35]
  0025d	84 d2		 test	 dl, dl
  0025f	0f 84 2e 01 00
	00		 je	 $LN64@ioINILoade
  00265	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00268	88 50 23	 mov	 BYTE PTR [eax+35], dl
  0026b	8a 51 24	 mov	 dl, BYTE PTR [ecx+36]
  0026e	84 d2		 test	 dl, dl
  00270	0f 84 14 01 00
	00		 je	 $LN63@ioINILoade
  00276	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00279	88 50 24	 mov	 BYTE PTR [eax+36], dl
  0027c	8a 51 25	 mov	 dl, BYTE PTR [ecx+37]
  0027f	84 d2		 test	 dl, dl
  00281	0f 84 fa 00 00
	00		 je	 $LN62@ioINILoade
  00287	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0028a	88 50 25	 mov	 BYTE PTR [eax+37], dl
  0028d	8a 51 26	 mov	 dl, BYTE PTR [ecx+38]
  00290	84 d2		 test	 dl, dl
  00292	0f 84 e1 00 00
	00		 je	 $LN61@ioINILoade
  00298	32 d3		 xor	 dl, bl
  0029a	88 50 26	 mov	 BYTE PTR [eax+38], dl
  0029d	8a 51 27	 mov	 dl, BYTE PTR [ecx+39]
  002a0	84 d2		 test	 dl, dl
  002a2	0f 84 c8 00 00
	00		 je	 $LN60@ioINILoade
  002a8	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002ab	88 50 27	 mov	 BYTE PTR [eax+39], dl
  002ae	8a 51 28	 mov	 dl, BYTE PTR [ecx+40]
  002b1	84 d2		 test	 dl, dl
  002b3	0f 84 ae 00 00
	00		 je	 $LN59@ioINILoade
  002b9	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002bc	88 50 28	 mov	 BYTE PTR [eax+40], dl
  002bf	8a 51 29	 mov	 dl, BYTE PTR [ecx+41]
  002c2	84 d2		 test	 dl, dl
  002c4	0f 84 94 00 00
	00		 je	 $LN58@ioINILoade
  002ca	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002cd	88 50 29	 mov	 BYTE PTR [eax+41], dl
  002d0	8a 51 2a	 mov	 dl, BYTE PTR [ecx+42]
  002d3	84 d2		 test	 dl, dl
  002d5	74 7f		 je	 SHORT $LN57@ioINILoade
  002d7	32 d3		 xor	 dl, bl
  002d9	88 50 2a	 mov	 BYTE PTR [eax+42], dl
  002dc	8a 51 2b	 mov	 dl, BYTE PTR [ecx+43]
  002df	84 d2		 test	 dl, dl
  002e1	74 6a		 je	 SHORT $LN56@ioINILoade
  002e3	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002e6	88 50 2b	 mov	 BYTE PTR [eax+43], dl
  002e9	8a 51 2c	 mov	 dl, BYTE PTR [ecx+44]
  002ec	84 d2		 test	 dl, dl
  002ee	74 54		 je	 SHORT $LN55@ioINILoade
  002f0	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002f3	88 50 2c	 mov	 BYTE PTR [eax+44], dl
  002f6	8a 51 2d	 mov	 dl, BYTE PTR [ecx+45]
  002f9	84 d2		 test	 dl, dl
  002fb	74 3e		 je	 SHORT $LN54@ioINILoade
  002fd	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00300	88 50 2d	 mov	 BYTE PTR [eax+45], dl
  00303	8a 51 2e	 mov	 dl, BYTE PTR [ecx+46]
  00306	84 d2		 test	 dl, dl
  00308	74 29		 je	 SHORT $LN53@ioINILoade
  0030a	32 d3		 xor	 dl, bl
  0030c	88 50 2e	 mov	 BYTE PTR [eax+46], dl
  0030f	8a 51 2f	 mov	 dl, BYTE PTR [ecx+47]
  00312	84 d2		 test	 dl, dl
  00314	74 14		 je	 SHORT $LN52@ioINILoade
  00316	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00319	88 50 2f	 mov	 BYTE PTR [eax+47], dl
  0031c	8a 49 30	 mov	 cl, BYTE PTR [ecx+48]
  0031f	80 f1 ed	 xor	 cl, -19			; ffffffedH
  00322	88 48 30	 mov	 BYTE PTR [eax+48], cl
  00325	e9 5d 01 00 00	 jmp	 $LN4@ioINILoade
$LN52@ioINILoade:
  0032a	c6 40 2f ea	 mov	 BYTE PTR [eax+47], -22	; ffffffeaH
  0032e	e9 54 01 00 00	 jmp	 $LN4@ioINILoade
$LN53@ioINILoade:
  00333	88 58 2e	 mov	 BYTE PTR [eax+46], bl
  00336	e9 4c 01 00 00	 jmp	 $LN4@ioINILoade
$LN54@ioINILoade:
  0033b	c6 40 2d ec	 mov	 BYTE PTR [eax+45], -20	; ffffffecH
  0033f	e9 43 01 00 00	 jmp	 $LN4@ioINILoade
$LN55@ioINILoade:
  00344	c6 40 2c ed	 mov	 BYTE PTR [eax+44], -19	; ffffffedH
  00348	e9 3a 01 00 00	 jmp	 $LN4@ioINILoade
$LN56@ioINILoade:
  0034d	c6 40 2b ea	 mov	 BYTE PTR [eax+43], -22	; ffffffeaH
  00351	e9 31 01 00 00	 jmp	 $LN4@ioINILoade
$LN57@ioINILoade:
  00356	88 58 2a	 mov	 BYTE PTR [eax+42], bl
  00359	e9 29 01 00 00	 jmp	 $LN4@ioINILoade
$LN58@ioINILoade:
  0035e	c6 40 29 ec	 mov	 BYTE PTR [eax+41], -20	; ffffffecH
  00362	e9 20 01 00 00	 jmp	 $LN4@ioINILoade
$LN59@ioINILoade:
  00367	c6 40 28 ed	 mov	 BYTE PTR [eax+40], -19	; ffffffedH
  0036b	e9 17 01 00 00	 jmp	 $LN4@ioINILoade
$LN60@ioINILoade:
  00370	c6 40 27 ea	 mov	 BYTE PTR [eax+39], -22	; ffffffeaH
  00374	e9 0e 01 00 00	 jmp	 $LN4@ioINILoade
$LN61@ioINILoade:
  00379	88 58 26	 mov	 BYTE PTR [eax+38], bl
  0037c	e9 06 01 00 00	 jmp	 $LN4@ioINILoade
$LN62@ioINILoade:
  00381	c6 40 25 ec	 mov	 BYTE PTR [eax+37], -20	; ffffffecH
  00385	e9 fd 00 00 00	 jmp	 $LN4@ioINILoade
$LN63@ioINILoade:
  0038a	c6 40 24 ed	 mov	 BYTE PTR [eax+36], -19	; ffffffedH
  0038e	e9 f4 00 00 00	 jmp	 $LN4@ioINILoade
$LN64@ioINILoade:
  00393	c6 40 23 ea	 mov	 BYTE PTR [eax+35], -22	; ffffffeaH
  00397	e9 eb 00 00 00	 jmp	 $LN4@ioINILoade
$LN65@ioINILoade:
  0039c	88 58 22	 mov	 BYTE PTR [eax+34], bl
  0039f	e9 e3 00 00 00	 jmp	 $LN4@ioINILoade
$LN66@ioINILoade:
  003a4	c6 40 21 ec	 mov	 BYTE PTR [eax+33], -20	; ffffffecH
  003a8	e9 da 00 00 00	 jmp	 $LN4@ioINILoade
$LN67@ioINILoade:
  003ad	c6 40 20 ed	 mov	 BYTE PTR [eax+32], -19	; ffffffedH
  003b1	e9 d1 00 00 00	 jmp	 $LN4@ioINILoade
$LN68@ioINILoade:
  003b6	c6 40 1f ea	 mov	 BYTE PTR [eax+31], -22	; ffffffeaH
  003ba	e9 c8 00 00 00	 jmp	 $LN4@ioINILoade
$LN69@ioINILoade:
  003bf	88 58 1e	 mov	 BYTE PTR [eax+30], bl
  003c2	e9 c0 00 00 00	 jmp	 $LN4@ioINILoade
$LN70@ioINILoade:
  003c7	c6 40 1d ec	 mov	 BYTE PTR [eax+29], -20	; ffffffecH
  003cb	e9 b7 00 00 00	 jmp	 $LN4@ioINILoade
$LN71@ioINILoade:
  003d0	c6 40 1c ed	 mov	 BYTE PTR [eax+28], -19	; ffffffedH
  003d4	e9 ae 00 00 00	 jmp	 $LN4@ioINILoade
$LN72@ioINILoade:
  003d9	c6 40 1b ea	 mov	 BYTE PTR [eax+27], -22	; ffffffeaH
  003dd	e9 a5 00 00 00	 jmp	 $LN4@ioINILoade
$LN73@ioINILoade:
  003e2	88 58 1a	 mov	 BYTE PTR [eax+26], bl
  003e5	e9 9d 00 00 00	 jmp	 $LN4@ioINILoade
$LN74@ioINILoade:
  003ea	c6 40 19 ec	 mov	 BYTE PTR [eax+25], -20	; ffffffecH
  003ee	e9 94 00 00 00	 jmp	 $LN4@ioINILoade
$LN75@ioINILoade:
  003f3	c6 40 18 ed	 mov	 BYTE PTR [eax+24], -19	; ffffffedH
  003f7	e9 8b 00 00 00	 jmp	 $LN4@ioINILoade
$LN76@ioINILoade:
  003fc	c6 40 17 ea	 mov	 BYTE PTR [eax+23], -22	; ffffffeaH
  00400	e9 82 00 00 00	 jmp	 $LN4@ioINILoade
$LN77@ioINILoade:
  00405	88 58 16	 mov	 BYTE PTR [eax+22], bl
  00408	eb 7d		 jmp	 SHORT $LN4@ioINILoade
$LN78@ioINILoade:
  0040a	c6 40 15 ec	 mov	 BYTE PTR [eax+21], -20	; ffffffecH
  0040e	eb 77		 jmp	 SHORT $LN4@ioINILoade
$LN79@ioINILoade:
  00410	c6 40 14 ed	 mov	 BYTE PTR [eax+20], -19	; ffffffedH
  00414	eb 71		 jmp	 SHORT $LN4@ioINILoade
$LN80@ioINILoade:
  00416	c6 40 13 ea	 mov	 BYTE PTR [eax+19], -22	; ffffffeaH
  0041a	eb 6b		 jmp	 SHORT $LN4@ioINILoade
$LN81@ioINILoade:
  0041c	88 58 12	 mov	 BYTE PTR [eax+18], bl
  0041f	eb 66		 jmp	 SHORT $LN4@ioINILoade
$LN82@ioINILoade:
  00421	c6 40 11 ec	 mov	 BYTE PTR [eax+17], -20	; ffffffecH
  00425	eb 60		 jmp	 SHORT $LN4@ioINILoade
$LN83@ioINILoade:
  00427	c6 40 10 ed	 mov	 BYTE PTR [eax+16], -19	; ffffffedH
  0042b	eb 5a		 jmp	 SHORT $LN4@ioINILoade
$LN84@ioINILoade:
  0042d	c6 40 0f ea	 mov	 BYTE PTR [eax+15], -22	; ffffffeaH
  00431	eb 54		 jmp	 SHORT $LN4@ioINILoade
$LN85@ioINILoade:
  00433	88 58 0e	 mov	 BYTE PTR [eax+14], bl
  00436	eb 4f		 jmp	 SHORT $LN4@ioINILoade
$LN86@ioINILoade:
  00438	c6 40 0d ec	 mov	 BYTE PTR [eax+13], -20	; ffffffecH
  0043c	eb 49		 jmp	 SHORT $LN4@ioINILoade
$LN87@ioINILoade:
  0043e	c6 40 0c ed	 mov	 BYTE PTR [eax+12], -19	; ffffffedH
  00442	eb 43		 jmp	 SHORT $LN4@ioINILoade
$LN88@ioINILoade:
  00444	c6 40 0b ea	 mov	 BYTE PTR [eax+11], -22	; ffffffeaH
  00448	eb 3d		 jmp	 SHORT $LN4@ioINILoade
$LN89@ioINILoade:
  0044a	88 58 0a	 mov	 BYTE PTR [eax+10], bl
  0044d	eb 38		 jmp	 SHORT $LN4@ioINILoade
$LN90@ioINILoade:
  0044f	c6 40 09 ec	 mov	 BYTE PTR [eax+9], -20	; ffffffecH
  00453	eb 32		 jmp	 SHORT $LN4@ioINILoade
$LN91@ioINILoade:
  00455	c6 40 08 ed	 mov	 BYTE PTR [eax+8], -19	; ffffffedH
  00459	eb 2c		 jmp	 SHORT $LN4@ioINILoade
$LN92@ioINILoade:
  0045b	c6 40 07 ea	 mov	 BYTE PTR [eax+7], -22	; ffffffeaH
  0045f	eb 26		 jmp	 SHORT $LN4@ioINILoade
$LN93@ioINILoade:
  00461	88 58 06	 mov	 BYTE PTR [eax+6], bl
  00464	eb 21		 jmp	 SHORT $LN4@ioINILoade
$LN94@ioINILoade:
  00466	c6 40 05 ec	 mov	 BYTE PTR [eax+5], -20	; ffffffecH
  0046a	eb 1b		 jmp	 SHORT $LN4@ioINILoade
$LN95@ioINILoade:
  0046c	c6 40 04 ed	 mov	 BYTE PTR [eax+4], -19	; ffffffedH
  00470	eb 15		 jmp	 SHORT $LN4@ioINILoade
$LN96@ioINILoade:
  00472	c6 40 03 ea	 mov	 BYTE PTR [eax+3], -22	; ffffffeaH
  00476	eb 0f		 jmp	 SHORT $LN4@ioINILoade
$LN97@ioINILoade:
  00478	c6 40 02 eb	 mov	 BYTE PTR [eax+2], -21	; ffffffebH
  0047c	eb 09		 jmp	 SHORT $LN4@ioINILoade
$LN98@ioINILoade:
  0047e	c6 40 01 ec	 mov	 BYTE PTR [eax+1], -20	; ffffffecH
  00482	eb 03		 jmp	 SHORT $LN4@ioINILoade
$LN99@ioINILoade:
  00484	c6 00 ed	 mov	 BYTE PTR [eax], -19	; ffffffedH
$LN4@ioINILoade:
  00487	6a 07		 push	 7
  00489	8b c8		 mov	 ecx, eax
  0048b	c6 40 1c 00	 mov	 BYTE PTR [eax+28], 0
  0048f	5a		 pop	 edx
$LL107@ioINILoade:
  00490	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  00496	83 c1 04	 add	 ecx, 4
  00499	4a		 dec	 edx
  0049a	75 f4		 jne	 SHORT $LL107@ioINILoade
  0049c	ff 75 0c	 push	 DWORD PTR _b$[ebp]
  0049f	8b ce		 mov	 ecx, esi
  004a1	50		 push	 eax
  004a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@PBD_N@Z

; 225  : 	}

  004a8	8b c6		 mov	 eax, esi
  004aa	5e		 pop	 esi
  004ab	5b		 pop	 ebx
  004ac	5d		 pop	 ebp
  004ad	c2 08 00	 ret	 8
??$?0$0BN@@ioINILoader_e@@QAE@AAY0BN@$$CBD_N@Z ENDP	; ioINILoader_e::ioINILoader_e<29>
_TEXT	ENDS
PUBLIC	??$?0AAHAAPAVioBlockProperty@@@?$pair@$$CBHPAVioBlockProperty@@@std@@QAE@AAHAAPAVioBlockProperty@@@Z ; std::pair<int const ,ioBlockProperty *>::pair<int const ,ioBlockProperty *><int &,ioBlockProperty * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAHAAPAVioBlockProperty@@@?$pair@$$CBHPAVioBlockProperty@@@std@@QAE@AAHAAPAVioBlockProperty@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAHAAPAVioBlockProperty@@@?$pair@$$CBHPAVioBlockProperty@@@std@@QAE@AAHAAPAVioBlockProperty@@@Z PROC ; std::pair<int const ,ioBlockProperty *>::pair<int const ,ioBlockProperty *><int &,ioBlockProperty * &>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00011	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 248  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAHAAPAVioBlockProperty@@@?$pair@$$CBHPAVioBlockProperty@@@std@@QAE@AAHAAPAVioBlockProperty@@@Z ENDP ; std::pair<int const ,ioBlockProperty *>::pair<int const ,ioBlockProperty *><int &,ioBlockProperty * &>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVioBlock@@@std@@PAVioBlock@@ABQAV3@@std@@YAXAAV?$allocator@PAVioBlock@@@0@PAPAVioBlock@@ABQAV2@@Z ; std::_Cons_val<std::allocator<ioBlock *>,ioBlock *,ioBlock * const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@PAVioBlock@@@std@@PAVioBlock@@ABQAV3@@std@@YAXAAV?$allocator@PAVioBlock@@@0@PAPAVioBlock@@ABQAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVioBlock@@@std@@PAVioBlock@@ABQAV3@@std@@YAXAAV?$allocator@PAVioBlock@@@0@PAPAVioBlock@@ABQAV2@@Z PROC ; std::_Cons_val<std::allocator<ioBlock *>,ioBlock *,ioBlock * const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN9@Cons_val@2
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN9@Cons_val@2:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@PAVioBlock@@@std@@PAVioBlock@@ABQAV3@@std@@YAXAAV?$allocator@PAVioBlock@@@0@PAPAVioBlock@@ABQAV2@@Z ENDP ; std::_Cons_val<std::allocator<ioBlock *>,ioBlock *,ioBlock * const &>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@U?$pair@$$CBHPAVioBlockProperty@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@0@PAU?$pair@$$CBHPAVioBlockProperty@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<int const ,ioBlockProperty *> >,std::pair<int const ,ioBlockProperty *> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@U?$pair@$$CBHPAVioBlockProperty@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@0@PAU?$pair@$$CBHPAVioBlockProperty@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@U?$pair@$$CBHPAVioBlockProperty@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@0@PAU?$pair@$$CBHPAVioBlockProperty@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<int const ,ioBlockProperty *> >,std::pair<int const ,ioBlockProperty *> >, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@U?$pair@$$CBHPAVioBlockProperty@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@0@PAU?$pair@$$CBHPAVioBlockProperty@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<int const ,ioBlockProperty *> >,std::pair<int const ,ioBlockProperty *> >
_TEXT	ENDS
PUBLIC	??$_Umove@PAPAVioBlock@@@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEPAPAVioBlock@@PAPAV2@00@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Umove<ioBlock * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??$_Umove@PAPAVioBlock@@@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEPAPAVioBlock@@PAPAV2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAVioBlock@@@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEPAPAVioBlock@@PAPAV2@00@Z PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Umove<ioBlock * *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVioBlock@@PAPAV1@V?$allocator@PAVioBlock@@@std@@@std@@YAPAPAVioBlock@@PAPAV1@00AAV?$allocator@PAVioBlock@@@0@@Z ; std::_Uninitialized_move<ioBlock * *,ioBlock * *,std::allocator<ioBlock *> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAPAVioBlock@@@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEPAPAVioBlock@@PAPAV2@00@Z ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Umove<ioBlock * *>
_TEXT	ENDS
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Insert
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1631 : 		{	// add node with value next to _Wherenode, to left if _Addleft

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 1632 : 		if (max_size() - 1 <= this->_Mysize)

  00008	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0000b	3d fe ff ff 1f	 cmp	 eax, 536870910		; 1ffffffeH
  00010	72 15		 jb	 SHORT $LN17@Insert

; 1633 : 			{	// tree would get too big, fail
; 1634 : 			_Dest_val(this->_Alval,
; 1635 : 				_STD addressof(this->_Myval(_Newnode)));
; 1636 : 
; 1637 : 			this->_Alnod.deallocate(_Newnode, 1);

  00012	ff 75 14	 push	 DWORD PTR __Newnode$[ebp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 1638 : 
; 1639 : 			_Xlength_error("map/set<T> too long");

  0001a	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN188@Insert:
$LN17@Insert:

; 1640 : 			}
; 1641 : 		++this->_Mysize;
; 1642 : 		_Newnode->_Parent = _Wherenode;

  00027	8b 5d 14	 mov	 ebx, DWORD PTR __Newnode$[ebp]
  0002a	40		 inc	 eax
  0002b	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0002e	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00031	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 1643 : 
; 1644 : 		if (_Wherenode == this->_Myhead)

  00034	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00037	3b c1		 cmp	 eax, ecx
  00039	75 10		 jne	 SHORT $LN16@Insert

; 1645 : 			{	// first node in tree, just set head values
; 1646 : 			_Root() = _Newnode;

  0003b	89 59 04	 mov	 DWORD PTR [ecx+4], ebx

; 1647 : 			_Lmost() = _Newnode;

  0003e	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00041	89 18		 mov	 DWORD PTR [eax], ebx

; 1648 : 			_Rmost() = _Newnode;

  00043	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00046	89 58 08	 mov	 DWORD PTR [eax+8], ebx
  00049	eb 21		 jmp	 SHORT $LN11@Insert
$LN16@Insert:

; 1649 : 			}
; 1650 : 		else if (_Addleft)

  0004b	80 7d 0c 00	 cmp	 BYTE PTR __Addleft$[ebp], 0
  0004f	74 0d		 je	 SHORT $LN14@Insert

; 1651 : 			{	// add to left of _Wherenode
; 1652 : 			this->_Left(_Wherenode) = _Newnode;

  00051	89 18		 mov	 DWORD PTR [eax], ebx

; 1653 : 			if (_Wherenode == _Lmost())

  00053	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00056	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00058	75 12		 jne	 SHORT $LN11@Insert

; 1654 : 				_Lmost() = _Newnode;

  0005a	89 19		 mov	 DWORD PTR [ecx], ebx

; 1655 : 			}
; 1656 : 		else

  0005c	eb 0e		 jmp	 SHORT $LN11@Insert
$LN14@Insert:

; 1657 : 			{	// add to right of _Wherenode
; 1658 : 			this->_Right(_Wherenode) = _Newnode;

  0005e	89 58 08	 mov	 DWORD PTR [eax+8], ebx

; 1659 : 			if (_Wherenode == _Rmost())

  00061	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00064	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00067	75 03		 jne	 SHORT $LN11@Insert

; 1660 : 				_Rmost() = _Newnode;

  00069	89 59 08	 mov	 DWORD PTR [ecx+8], ebx
$LN11@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  0006c	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0006f	8b f3		 mov	 esi, ebx
  00071	e9 93 00 00 00	 jmp	 $LN186@Insert
$LL10@Insert:

; 1665 : 			if (this->_Parent(_Pnode)
; 1666 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

  00076	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00079	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007c	3b 01		 cmp	 eax, DWORD PTR [ecx]
  0007e	75 38		 jne	 SHORT $LN8@Insert

; 1667 : 				{	// fixup red-red in left subtree
; 1668 : 				_Wherenode =
; 1669 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

  00080	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1670 : 				if (this->_Color(_Wherenode) == this->_Red)

  00083	80 79 14 00	 cmp	 BYTE PTR [ecx+20], 0

; 1671 : 					{	// parent has two red children, blacken both
; 1672 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;
; 1673 : 					this->_Color(_Wherenode) = this->_Black;
; 1674 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1675 : 						= this->_Red;
; 1676 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));
; 1677 : 					}
; 1678 : 				else

  00087	74 37		 je	 SHORT $LN187@Insert

; 1679 : 					{	// parent has red and black children
; 1680 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

  00089	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008c	75 0a		 jne	 SHORT $LN5@Insert

; 1681 : 						{	// rotate right child to left
; 1682 : 						_Pnode = this->_Parent(_Pnode);

  0008e	8b f0		 mov	 esi, eax

; 1683 : 						_Lrotate(_Pnode);

  00090	56		 push	 esi
  00091	8b cf		 mov	 ecx, edi
  00093	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Lrotate
$LN5@Insert:

; 1684 : 						}
; 1685 : 					this->_Color(this->_Parent(_Pnode)) =
; 1686 : 						this->_Black;	// propagate red up

  00098	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0009b	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1687 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1688 : 						this->_Red;

  0009f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a2	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000a5	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

  000a9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000ac	ff 70 04	 push	 DWORD PTR [eax+4]
  000af	8b cf		 mov	 ecx, edi
  000b1	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Rrotate

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  000b6	eb 4e		 jmp	 SHORT $LN2@Insert
$LN8@Insert:

; 1693 : 				{	// fixup red-red in right subtree
; 1694 : 				_Wherenode =
; 1695 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

  000b8	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1696 : 				if (this->_Color(_Wherenode) == this->_Red)

  000ba	80 79 14 00	 cmp	 BYTE PTR [ecx+20], 0
  000be	75 1a		 jne	 SHORT $LN3@Insert
$LN187@Insert:

; 1697 : 					{	// parent has two red children, blacken both
; 1698 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  000c0	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1699 : 					this->_Color(_Wherenode) = this->_Black;

  000c4	c6 41 14 01	 mov	 BYTE PTR [ecx+20], 1

; 1700 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1701 : 						this->_Red;

  000c8	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cb	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000ce	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0

; 1702 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  000d2	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000d5	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 1703 : 					}
; 1704 : 				else

  000d8	eb 2c		 jmp	 SHORT $LN2@Insert
$LN3@Insert:

; 1705 : 					{	// parent has red and black children
; 1706 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

  000da	3b 30		 cmp	 esi, DWORD PTR [eax]
  000dc	75 0a		 jne	 SHORT $LN1@Insert

; 1707 : 						{	// rotate left child to right
; 1708 : 						_Pnode = this->_Parent(_Pnode);

  000de	8b f0		 mov	 esi, eax

; 1709 : 						_Rrotate(_Pnode);

  000e0	56		 push	 esi
  000e1	8b cf		 mov	 ecx, edi
  000e3	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Rrotate
$LN1@Insert:

; 1710 : 						}
; 1711 : 					this->_Color(this->_Parent(_Pnode)) =
; 1712 : 						this->_Black;	// propagate red up

  000e8	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000eb	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1713 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1714 : 						this->_Red;

  000ef	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000f2	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000f5	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0

; 1715 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

  000f9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000fc	ff 70 04	 push	 DWORD PTR [eax+4]
  000ff	8b cf		 mov	 ecx, edi
  00101	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Lrotate
$LN2@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  00106	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
$LN186@Insert:
  00109	80 78 14 00	 cmp	 BYTE PTR [eax+20], 0
  0010d	0f 84 63 ff ff
	ff		 je	 $LL10@Insert

; 1716 : 					}
; 1717 : 				}
; 1718 : 
; 1719 : 		this->_Color(_Root()) = this->_Black;	// root is always black

  00113	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00116	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00119	5f		 pop	 edi
  0011a	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1720 : 		return (iterator(_Newnode, this));

  0011e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00121	5e		 pop	 esi
  00122	89 18		 mov	 DWORD PTR [eax], ebx
  00124	5b		 pop	 ebx

; 1721 : 		}

  00125	5d		 pop	 ebp
  00126	c2 10 00	 ret	 16			; 00000010H
$LN185@Insert:
?_Insert@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator--
; Function compile flags: /Ogsp
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 418  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 419  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::operator--

; 420  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 421  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 227  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 228  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > > &,bool>
; Function compile flags: /Ogsp
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 248  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??$?0$$CBHPAVioBlockProperty@@@?$pair@$$CBHPAVioBlockProperty@@@std@@QAE@$$QAU01@@Z ; std::pair<int const ,ioBlockProperty *>::pair<int const ,ioBlockProperty *><int const ,ioBlockProperty *>
; Function compile flags: /Ogsp
;	COMDAT ??$?0$$CBHPAVioBlockProperty@@@?$pair@$$CBHPAVioBlockProperty@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0$$CBHPAVioBlockProperty@@@?$pair@$$CBHPAVioBlockProperty@@@std@@QAE@$$QAU01@@Z PROC ; std::pair<int const ,ioBlockProperty *>::pair<int const ,ioBlockProperty *><int const ,ioBlockProperty *>, COMDAT
; _this$ = ecx

; 255  : 		{	// construct from moved compatible pair

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	89 10		 mov	 DWORD PTR [eax], edx
  0000c	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 256  : 		}

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
??$?0$$CBHPAVioBlockProperty@@@?$pair@$$CBHPAVioBlockProperty@@@std@@QAE@$$QAU01@@Z ENDP ; std::pair<int const ,ioBlockProperty *>::pair<int const ,ioBlockProperty *><int const ,ioBlockProperty *>
_TEXT	ENDS
PUBLIC	?GetBlock@ioBlockManager@@QAEPAVioBlock@@_J@Z	; ioBlockManager::GetBlock
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockmanager.cpp
;	COMDAT ?GetBlock@ioBlockManager@@QAEPAVioBlock@@_J@Z
_TEXT	SEGMENT
_nUniqueIndex$ = 8					; size = 8
?GetBlock@ioBlockManager@@QAEPAVioBlock@@_J@Z PROC	; ioBlockManager::GetBlock, COMDAT
; _this$ = ecx

; 225  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 226  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter )

  00003	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00006	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00009	56		 push	 esi
  0000a	eb 1f		 jmp	 SHORT $LN43@GetBlock
$LL17@GetBlock:

; 227  : 	{
; 228  : 		ioBlock* pBlock = *iter;

  0000c	8b 02		 mov	 eax, DWORD PTR [edx]

; 229  : 		if( pBlock && pBlock->GetUniqueIndex() == nUniqueIndex )

  0000e	85 c0		 test	 eax, eax
  00010	74 16		 je	 SHORT $LN3@GetBlock
  00012	8b b0 c8 01 00
	00		 mov	 esi, DWORD PTR [eax+456]
  00018	3b 75 08	 cmp	 esi, DWORD PTR _nUniqueIndex$[ebp]
  0001b	75 0b		 jne	 SHORT $LN3@GetBlock
  0001d	8b b0 cc 01 00
	00		 mov	 esi, DWORD PTR [eax+460]
  00023	3b 75 0c	 cmp	 esi, DWORD PTR _nUniqueIndex$[ebp+4]
  00026	74 09		 je	 SHORT $LN5@GetBlock
$LN3@GetBlock:

; 226  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter )

  00028	83 c2 04	 add	 edx, 4
$LN43@GetBlock:
  0002b	3b d1		 cmp	 edx, ecx
  0002d	75 dd		 jne	 SHORT $LL17@GetBlock

; 230  : 		{
; 231  : 			return pBlock;
; 232  : 		}
; 233  : 	}
; 234  : 
; 235  : 	return NULL;

  0002f	33 c0		 xor	 eax, eax
$LN5@GetBlock:
  00031	5e		 pop	 esi

; 236  : }

  00032	5d		 pop	 ebp
  00033	c2 08 00	 ret	 8
?GetBlock@ioBlockManager@@QAEPAVioBlock@@_J@Z ENDP	; ioBlockManager::GetBlock
_TEXT	ENDS
PUBLIC	?GetBlockCount@ioBlockManager@@QAEHH@Z		; ioBlockManager::GetBlockCount
; Function compile flags: /Ogsp
;	COMDAT ?GetBlockCount@ioBlockManager@@QAEHH@Z
_TEXT	SEGMENT
_nCount$ = -4						; size = 4
_nCode$ = 8						; size = 4
?GetBlockCount@ioBlockManager@@QAEHH@Z PROC		; ioBlockManager::GetBlockCount, COMDAT
; _this$ = ecx

; 239  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 240  : 	int nCount = 0;

  00004	83 65 fc 00	 and	 DWORD PTR _nCount$[ebp], 0
  00008	53		 push	 ebx
  00009	8b d9		 mov	 ebx, ecx
  0000b	56		 push	 esi

; 241  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter )

  0000c	8b 73 1c	 mov	 esi, DWORD PTR [ebx+28]
  0000f	3b 73 20	 cmp	 esi, DWORD PTR [ebx+32]
  00012	74 33		 je	 SHORT $LN2@GetBlockCo
  00014	57		 push	 edi
$LL42@GetBlockCo:

; 242  : 	{
; 243  : 		ioBlock* pBlock = *iter;

  00015	8b 3e		 mov	 edi, DWORD PTR [esi]

; 244  : 		if( pBlock && pBlock->GetProperty() && pBlock->GetProperty()->GetCode() == nCode )

  00017	85 ff		 test	 edi, edi
  00019	74 23		 je	 SHORT $LN3@GetBlockCo
  0001b	8b 07		 mov	 eax, DWORD PTR [edi]
  0001d	8b cf		 mov	 ecx, edi
  0001f	ff 90 e4 00 00
	00		 call	 DWORD PTR [eax+228]
  00025	85 c0		 test	 eax, eax
  00027	74 15		 je	 SHORT $LN3@GetBlockCo
  00029	8b 07		 mov	 eax, DWORD PTR [edi]
  0002b	8b cf		 mov	 ecx, edi
  0002d	ff 90 e4 00 00
	00		 call	 DWORD PTR [eax+228]
  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	3b 45 08	 cmp	 eax, DWORD PTR _nCode$[ebp]
  00039	75 03		 jne	 SHORT $LN3@GetBlockCo

; 245  : 		{
; 246  : 			nCount++;

  0003b	ff 45 fc	 inc	 DWORD PTR _nCount$[ebp]
$LN3@GetBlockCo:

; 241  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter )

  0003e	83 c6 04	 add	 esi, 4
  00041	3b 73 20	 cmp	 esi, DWORD PTR [ebx+32]
  00044	75 cf		 jne	 SHORT $LL42@GetBlockCo
  00046	5f		 pop	 edi
$LN2@GetBlockCo:

; 247  : 		}
; 248  : 	}
; 249  : 
; 250  : 	return nCount;

  00047	8b 45 fc	 mov	 eax, DWORD PTR _nCount$[ebp]
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx

; 251  : }

  0004c	c9		 leave
  0004d	c2 04 00	 ret	 4
?GetBlockCount@ioBlockManager@@QAEHH@Z ENDP		; ioBlockManager::GetBlockCount
_TEXT	ENDS
PUBLIC	?UpdateAfter@ioBlockManager@@QAEXXZ		; ioBlockManager::UpdateAfter
EXTRN	__imp_?GetCurFrameGap@ioFrameTimer@@QBEMXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?UpdateAfter@ioBlockManager@@QAEXXZ
_TEXT	SEGMENT
_fFrameGap$ = -4					; size = 4
?UpdateAfter@ioBlockManager@@QAEXXZ PROC		; ioBlockManager::UpdateAfter, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 288  : 	float fFrameGap = g_FrameTimer.GetCurFrameGap();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  0000e	8b c8		 mov	 ecx, eax
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetCurFrameGap@ioFrameTimer@@QBEMXZ
  00016	d9 5d fc	 fstp	 DWORD PTR _fFrameGap$[ebp]

; 289  : 
; 290  : 	int nDebug = (int)m_BlockList.size();
; 291  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter )

  00019	8b 77 1c	 mov	 esi, DWORD PTR [edi+28]
  0001c	eb 19		 jmp	 SHORT $LN41@UpdateAfte
$LL19@UpdateAfte:

; 292  : 	{
; 293  : 		ioBlock* pBlock = *iter;

  0001e	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 294  : 		if( !pBlock )

  00020	85 c9		 test	 ecx, ecx
  00022	74 10		 je	 SHORT $LN3@UpdateAfte

; 295  : 			continue;
; 296  : 
; 297  : 		pBlock->UpdateAfter( fFrameGap );

  00024	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fFrameGap$[ebp]
  00029	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002b	51		 push	 ecx
  0002c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00031	ff 50 0c	 call	 DWORD PTR [eax+12]
$LN3@UpdateAfte:

; 289  : 
; 290  : 	int nDebug = (int)m_BlockList.size();
; 291  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter )

  00034	83 c6 04	 add	 esi, 4
$LN41@UpdateAfte:
  00037	3b 77 20	 cmp	 esi, DWORD PTR [edi+32]
  0003a	75 e2		 jne	 SHORT $LL19@UpdateAfte
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi

; 298  : 	}
; 299  : }

  0003e	c9		 leave
  0003f	c3		 ret	 0
?UpdateAfter@ioBlockManager@@QAEXXZ ENDP		; ioBlockManager::UpdateAfter
_TEXT	ENDS
PUBLIC	?UpdateBound@ioBlockManager@@QAEXXZ		; ioBlockManager::UpdateBound
EXTRN	?UpdateBound@ioBlock@@QAEXXZ:PROC		; ioBlock::UpdateBound
; Function compile flags: /Ogsp
;	COMDAT ?UpdateBound@ioBlockManager@@QAEXXZ
_TEXT	SEGMENT
?UpdateBound@ioBlockManager@@QAEXXZ PROC		; ioBlockManager::UpdateBound, COMDAT
; _this$ = ecx

; 307  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 308  : 	int nDebug = (int)m_BlockList.size();
; 309  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter )

  00004	8b 77 1c	 mov	 esi, DWORD PTR [edi+28]
  00007	eb 0e		 jmp	 SHORT $LN41@UpdateBoun
$LL19@UpdateBoun:

; 310  : 	{
; 311  : 		ioBlock* pBlock = *iter;

  00009	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 312  : 		if( !pBlock )

  0000b	85 c9		 test	 ecx, ecx
  0000d	74 05		 je	 SHORT $LN3@UpdateBoun

; 313  : 			continue;
; 314  : 
; 315  : 		pBlock->UpdateBound();

  0000f	e8 00 00 00 00	 call	 ?UpdateBound@ioBlock@@QAEXXZ ; ioBlock::UpdateBound
$LN3@UpdateBoun:

; 308  : 	int nDebug = (int)m_BlockList.size();
; 309  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter )

  00014	83 c6 04	 add	 esi, 4
$LN41@UpdateBoun:
  00017	3b 77 20	 cmp	 esi, DWORD PTR [edi+32]
  0001a	75 ed		 jne	 SHORT $LL19@UpdateBoun

; 316  : 	}
; 317  : }

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	c3		 ret	 0
?UpdateBound@ioBlockManager@@QAEXXZ ENDP		; ioBlockManager::UpdateBound
_TEXT	ENDS
PUBLIC	?SetShadowMapEnable@ioBlockManager@@QAEX_N@Z	; ioBlockManager::SetShadowMapEnable
EXTRN	?SetShadowCastEnable@ioBlock@@QAEX_N@Z:PROC	; ioBlock::SetShadowCastEnable
EXTRN	?SetShadowRecvEnable@ioBlock@@QAEX_N@Z:PROC	; ioBlock::SetShadowRecvEnable
; Function compile flags: /Ogsp
;	COMDAT ?SetShadowMapEnable@ioBlockManager@@QAEX_N@Z
_TEXT	SEGMENT
_bEnable$ = 8						; size = 1
?SetShadowMapEnable@ioBlockManager@@QAEX_N@Z PROC	; ioBlockManager::SetShadowMapEnable, COMDAT
; _this$ = ecx

; 320  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b d9		 mov	 ebx, ecx
  00006	57		 push	 edi

; 321  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter )

  00007	8b 7b 1c	 mov	 edi, DWORD PTR [ebx+28]
  0000a	3b 7b 20	 cmp	 edi, DWORD PTR [ebx+32]
  0000d	74 47		 je	 SHORT $LN7@SetShadowM
  0000f	56		 push	 esi
$LL22@SetShadowM:

; 322  : 	{	
; 323  : 		ioBlock* pBlock = *iter;

  00010	8b 37		 mov	 esi, DWORD PTR [edi]

; 324  : 		if( !pBlock )

  00012	85 f6		 test	 esi, esi
  00014	74 37		 je	 SHORT $LN8@SetShadowM

; 325  : 			continue;
; 326  : 
; 327  : 		if( pBlock->GetProperty() )

  00016	8b 06		 mov	 eax, DWORD PTR [esi]
  00018	8b ce		 mov	 ecx, esi
  0001a	ff 90 e4 00 00
	00		 call	 DWORD PTR [eax+228]
  00020	85 c0		 test	 eax, eax
  00022	74 29		 je	 SHORT $LN8@SetShadowM

; 328  : 		{
; 329  : 			switch( pBlock->GetProperty()->GetShadowType() )

  00024	8b 06		 mov	 eax, DWORD PTR [esi]
  00026	8b ce		 mov	 ecx, esi
  00028	ff 90 e4 00 00
	00		 call	 DWORD PTR [eax+228]
  0002e	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00031	48		 dec	 eax
  00032	74 0f		 je	 SHORT $LN2@SetShadowM
  00034	48		 dec	 eax
  00035	75 16		 jne	 SHORT $LN8@SetShadowM

; 334  : 				}
; 335  : 				break;				
; 336  : 			case ioBlockProperty::ST_RECIVE:
; 337  : 				{
; 338  : 					pBlock->SetShadowRecvEnable( bEnable );

  00037	ff 75 08	 push	 DWORD PTR _bEnable$[ebp]
  0003a	8b ce		 mov	 ecx, esi
  0003c	e8 00 00 00 00	 call	 ?SetShadowRecvEnable@ioBlock@@QAEX_N@Z ; ioBlock::SetShadowRecvEnable

; 339  : 				}
; 340  : 				break;

  00041	eb 0a		 jmp	 SHORT $LN8@SetShadowM
$LN2@SetShadowM:

; 330  : 			{
; 331  : 			case ioBlockProperty::ST_CAST:
; 332  : 				{
; 333  : 					pBlock->SetShadowCastEnable( bEnable );

  00043	ff 75 08	 push	 DWORD PTR _bEnable$[ebp]
  00046	8b ce		 mov	 ecx, esi
  00048	e8 00 00 00 00	 call	 ?SetShadowCastEnable@ioBlock@@QAEX_N@Z ; ioBlock::SetShadowCastEnable
$LN8@SetShadowM:

; 321  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter )

  0004d	83 c7 04	 add	 edi, 4
  00050	3b 7b 20	 cmp	 edi, DWORD PTR [ebx+32]
  00053	75 bb		 jne	 SHORT $LL22@SetShadowM
  00055	5e		 pop	 esi
$LN7@SetShadowM:
  00056	5f		 pop	 edi
  00057	5b		 pop	 ebx

; 341  : 			}
; 342  : 		}
; 343  : 	}
; 344  : }

  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?SetShadowMapEnable@ioBlockManager@@QAEX_N@Z ENDP	; ioBlockManager::SetShadowMapEnable
_TEXT	ENDS
PUBLIC	?EnableMapEdge@ioBlockManager@@QAEX_N@Z		; ioBlockManager::EnableMapEdge
EXTRN	?EnableMapEdge@ioBlock@@QAEX_N@Z:PROC		; ioBlock::EnableMapEdge
; Function compile flags: /Ogsp
;	COMDAT ?EnableMapEdge@ioBlockManager@@QAEX_N@Z
_TEXT	SEGMENT
_bEnable$ = 8						; size = 1
?EnableMapEdge@ioBlockManager@@QAEX_N@Z PROC		; ioBlockManager::EnableMapEdge, COMDAT
; _this$ = ecx

; 347  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 348  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter )

  00007	8b 77 1c	 mov	 esi, DWORD PTR [edi+28]
  0000a	eb 11		 jmp	 SHORT $LN40@EnableMapE
$LL18@EnableMapE:

; 349  : 	{	
; 350  : 		ioBlock* pBlock = *iter;

  0000c	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 351  : 		if( !pBlock )

  0000e	85 c9		 test	 ecx, ecx
  00010	74 08		 je	 SHORT $LN4@EnableMapE

; 352  : 			continue;
; 353  : 
; 354  : 		if( pBlock )
; 355  : 			pBlock->EnableMapEdge( bEnable );

  00012	ff 75 08	 push	 DWORD PTR _bEnable$[ebp]
  00015	e8 00 00 00 00	 call	 ?EnableMapEdge@ioBlock@@QAEX_N@Z ; ioBlock::EnableMapEdge
$LN4@EnableMapE:

; 348  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter )

  0001a	83 c6 04	 add	 esi, 4
$LN40@EnableMapE:
  0001d	3b 77 20	 cmp	 esi, DWORD PTR [edi+32]
  00020	75 ea		 jne	 SHORT $LL18@EnableMapE
  00022	5f		 pop	 edi
  00023	5e		 pop	 esi

; 356  : 	}
; 357  : }

  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?EnableMapEdge@ioBlockManager@@QAEX_N@Z ENDP		; ioBlockManager::EnableMapEdge
_TEXT	ENDS
PUBLIC	?StopAllTextureEffect@ioBlockManager@@QAEX_N@Z	; ioBlockManager::StopAllTextureEffect
EXTRN	?StopAllTextureEffect@ioBlock@@QAEX_N@Z:PROC	; ioBlock::StopAllTextureEffect
; Function compile flags: /Ogsp
;	COMDAT ?StopAllTextureEffect@ioBlockManager@@QAEX_N@Z
_TEXT	SEGMENT
_bStop$ = 8						; size = 1
?StopAllTextureEffect@ioBlockManager@@QAEX_N@Z PROC	; ioBlockManager::StopAllTextureEffect, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 361  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter )

  00007	8b 77 1c	 mov	 esi, DWORD PTR [edi+28]
  0000a	eb 11		 jmp	 SHORT $LN40@StopAllTex
$LL18@StopAllTex:

; 362  : 	{	
; 363  : 		ioBlock* pBlock = *iter;

  0000c	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 364  : 		if( !pBlock )

  0000e	85 c9		 test	 ecx, ecx
  00010	74 08		 je	 SHORT $LN4@StopAllTex

; 365  : 			continue;
; 366  : 
; 367  : 		if( pBlock )
; 368  : 			pBlock->StopAllTextureEffect( bStop );

  00012	ff 75 08	 push	 DWORD PTR _bStop$[ebp]
  00015	e8 00 00 00 00	 call	 ?StopAllTextureEffect@ioBlock@@QAEX_N@Z ; ioBlock::StopAllTextureEffect
$LN4@StopAllTex:

; 361  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter )

  0001a	83 c6 04	 add	 esi, 4
$LN40@StopAllTex:
  0001d	3b 77 20	 cmp	 esi, DWORD PTR [edi+32]
  00020	75 ea		 jne	 SHORT $LL18@StopAllTex
  00022	5f		 pop	 edi
  00023	5e		 pop	 esi

; 369  : 	}
; 370  : }

  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?StopAllTextureEffect@ioBlockManager@@QAEX_N@Z ENDP	; ioBlockManager::StopAllTextureEffect
_TEXT	ENDS
PUBLIC	??_C@_0M@PGJLBAOC@direction?$CFd?$AA@		; `string'
PUBLIC	??_C@_03FHKJEKGD@Y?$CFd?$AA@			; `string'
PUBLIC	??_C@_04KKBJEJIG@XZ?$CFd?$AA@			; `string'
PUBLIC	??_C@_06ELIHJLCL@item?$CFd?$AA@			; `string'
PUBLIC	??_C@_0CI@DILBDAGN@config?1housing?1sp2_guild_room_bl@ ; `string'
PUBLIC	??_C@_0CL@HLJPMJEC@config?1housing?1sp2_personal_room@ ; `string'
PUBLIC	?ExportBlockWorld@ioBlockManager@@QAEXXZ	; ioBlockManager::ExportBlockWorld
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
EXTRN	__imp_?SaveInt@ioINILoader@@QAEXPBDH@Z:PROC
EXTRN	__imp_?c_str@ioHashString@@QBEPBDXZ:PROC
EXTRN	__imp_?IsEmpty@ioHashString@@QBE_NXZ:PROC
EXTRN	__imp_??4ioHashString@@QAEAAV0@PBD@Z:PROC
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
EXTRN	__EH_epilog3_GS:PROC
EXTRN	__EH_prolog3_GS:PROC
EXTRN	__ftol2_sse:PROC
;	COMDAT ??_C@_0M@PGJLBAOC@direction?$CFd?$AA@
CONST	SEGMENT
??_C@_0M@PGJLBAOC@direction?$CFd?$AA@ DB 'direction%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03FHKJEKGD@Y?$CFd?$AA@
CONST	SEGMENT
??_C@_03FHKJEKGD@Y?$CFd?$AA@ DB 'Y%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KKBJEJIG@XZ?$CFd?$AA@
CONST	SEGMENT
??_C@_04KKBJEJIG@XZ?$CFd?$AA@ DB 'XZ%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06ELIHJLCL@item?$CFd?$AA@
CONST	SEGMENT
??_C@_06ELIHJLCL@item?$CFd?$AA@ DB 'item%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@DILBDAGN@config?1housing?1sp2_guild_room_bl@
CONST	SEGMENT
??_C@_0CI@DILBDAGN@config?1housing?1sp2_guild_room_bl@ DB 'config/housing'
	DB	'/sp2_guild_room_block.ini', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@HLJPMJEC@config?1housing?1sp2_personal_room@
CONST	SEGMENT
??_C@_0CL@HLJPMJEC@config?1housing?1sp2_personal_room@ DB 'config/housing'
	DB	'/sp2_personal_room_block.ini', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ExportBlockWorld@ioBlockManager@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ExportBlockWorld@ioBlockManager@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ExportBlockWorld@ioBlockManager@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?ExportBlockWorld@ioBlockManager@@QAEXXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?ExportBlockWorld@ioBlockManager@@QAEXXZ$2
__ehfuncinfo$?ExportBlockWorld@ioBlockManager@@QAEXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?ExportBlockWorld@ioBlockManager@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?ExportBlockWorld@ioBlockManager@@QAEXXZ
_TEXT	SEGMENT
_szFileName$ = -2020					; size = 16
_iter$515745 = -2004					; size = 4
tv1356 = -2000						; size = 4
$T515739 = -1996					; size = 784
_kLoader$ = -1212					; size = 912
_szBuf$ = -300						; size = 260
__t$520583 = -40					; size = 18
__$EHRec$ = -12						; size = 12
?ExportBlockWorld@ioBlockManager@@QAEXXZ PROC		; ioBlockManager::ExportBlockWorld, COMDAT
; _this$ = ecx

; 373  : {

  00000	68 d8 07 00 00	 push	 2008			; 000007d8H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?ExportBlockWorld@ioBlockManager@@QAEXXZ
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000f	8b d9		 mov	 ebx, ecx

; 374  : 	if( m_BlockList.empty() )

  00011	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
  00014	3b 43 20	 cmp	 eax, DWORD PTR [ebx+32]
  00017	0f 84 33 02 00
	00		 je	 $LN12@ExportBloc

; 375  : 		return;
; 376  : 
; 377  : 	ioHashString szFileName;

  0001d	8d 8d 1c f8 ff
	ff		 lea	 ecx, DWORD PTR _szFileName$[ebp]
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ

; 378  : 	switch( m_eType )

  00029	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0002c	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00030	83 e8 00	 sub	 eax, 0
  00033	74 0a		 je	 SHORT $LN8@ExportBloc
  00035	48		 dec	 eax
  00036	75 18		 jne	 SHORT $LN9@ExportBloc

; 382  : 		break;
; 383  : 	case BMT_PERSONAL:	
; 384  : 		szFileName = "config/housing/sp2_personal_room_block.ini";

  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@HLJPMJEC@config?1housing?1sp2_personal_room@

; 385  : 		break;

  0003d	eb 05		 jmp	 SHORT $LN179@ExportBloc
$LN8@ExportBloc:

; 379  : 	{
; 380  : 	case BMT_GUILD:
; 381  : 		szFileName = "config/housing/sp2_guild_room_block.ini";

  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@DILBDAGN@config?1housing?1sp2_guild_room_bl@
$LN179@ExportBloc:
  00044	8d 8d 1c f8 ff
	ff		 lea	 ecx, DWORD PTR _szFileName$[ebp]
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z
$LN9@ExportBloc:

; 386  : 	}
; 387  : 
; 388  : 	if( szFileName.IsEmpty() )

  00050	8d 8d 1c f8 ff
	ff		 lea	 ecx, DWORD PTR _szFileName$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@ioHashString@@QBE_NXZ

; 389  : 		return;

  0005c	8d 8d 1c f8 ff
	ff		 lea	 ecx, DWORD PTR _szFileName$[ebp]
  00062	84 c0		 test	 al, al
  00064	0f 85 dc 01 00
	00		 jne	 $LN180@ExportBloc

; 390  : 
; 391  : 	char szBuf[MAX_PATH];
; 392  : 	ioINILoader_e kLoader( szFileName.c_str() );

  0006a	33 f6		 xor	 esi, esi
  0006c	46		 inc	 esi
  0006d	56		 push	 esi
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  00074	50		 push	 eax
  00075	8d 8d 34 f8 ff
	ff		 lea	 ecx, DWORD PTR $T515739[ebp]
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@PBD_N@Z
  00081	8d 85 34 f8 ff
	ff		 lea	 eax, DWORD PTR $T515739[ebp]
  00087	50		 push	 eax
  00088	8d 8d 44 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  0008e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00092	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@ABV0@@Z
  00098	8d 8d 34 f8 ff
	ff		 lea	 ecx, DWORD PTR $T515739[ebp]
  0009e	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
  000a8	6a 04		 push	 4

; 393  : 	kLoader.SetTitle_e( "default_construct" );

  000aa	c7 45 d8 89 89
	8d 8b		 mov	 DWORD PTR __t$520583[ebp], -1953658487 ; 8b8d8989H
  000b1	c7 45 dc 98 80
	9f b5		 mov	 DWORD PTR __t$520583[ebp+4], -1247838056 ; b59f8098H
  000b8	c7 45 e0 8e 83
	85 99		 mov	 DWORD PTR __t$520583[ebp+8], -1719303282 ; 9985838eH
  000bf	c7 45 e4 99 9e
	9e 89		 mov	 DWORD PTR __t$520583[ebp+12], -1986093415 ; 899e9e99H
  000c6	8d 45 d8	 lea	 eax, DWORD PTR __t$520583[ebp]
  000c9	66 c7 45 e8 99
	00		 mov	 WORD PTR __t$520583[ebp+16], 153 ; 00000099H
  000cf	59		 pop	 ecx
$LL125@ExportBloc:
  000d0	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  000d6	83 c0 04	 add	 eax, 4
  000d9	49		 dec	 ecx
  000da	75 f4		 jne	 SHORT $LL125@ExportBloc
  000dc	80 75 e8 ed	 xor	 BYTE PTR __t$520583[ebp+16], -19 ; ffffffedH
  000e0	8d 45 d8	 lea	 eax, DWORD PTR __t$520583[ebp]
  000e3	50		 push	 eax
  000e4	8d 8d 44 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  000ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 394  : 
; 395  : 	int i = 0;
; 396  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter, ++i )

  000f0	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
  000f3	89 85 2c f8 ff
	ff		 mov	 DWORD PTR _iter$515745[ebp], eax
  000f9	3b 43 20	 cmp	 eax, DWORD PTR [ebx+32]
  000fc	0f 84 2e 01 00
	00		 je	 $LN3@ExportBloc

; 393  : 	kLoader.SetTitle_e( "default_construct" );

  00102	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?SaveInt@ioINILoader@@QAEXPBDH@Z
  00108	89 b5 30 f8 ff
	ff		 mov	 DWORD PTR tv1356[ebp], esi
$LL5@ExportBloc:

; 397  : 	{	
; 398  : 		ioBlock* pBlock = *iter;

  0010e	8b 30		 mov	 esi, DWORD PTR [eax]

; 399  : 		if( !pBlock || !pBlock->GetProperty() )

  00110	85 f6		 test	 esi, esi
  00112	0f 84 00 01 00
	00		 je	 $LN4@ExportBloc
  00118	8b 06		 mov	 eax, DWORD PTR [esi]
  0011a	8b ce		 mov	 ecx, esi
  0011c	ff 90 e4 00 00
	00		 call	 DWORD PTR [eax+228]
  00122	85 c0		 test	 eax, eax
  00124	0f 84 e8 00 00
	00		 je	 $LN177@ExportBloc

; 400  : 			continue;
; 401  : 				 
; 402  : 		sprintf_s( szBuf, "item%d", i + 1 );

  0012a	ff b5 30 f8 ff
	ff		 push	 DWORD PTR tv1356[ebp]
  00130	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00136	68 00 00 00 00	 push	 OFFSET ??_C@_06ELIHJLCL@item?$CFd?$AA@
  0013b	50		 push	 eax
  0013c	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ ; sprintf_s<260>

; 403  : 		kLoader.SaveInt( szBuf, pBlock->GetProperty()->GetCode() );

  00141	8b 06		 mov	 eax, DWORD PTR [esi]
  00143	83 c4 0c	 add	 esp, 12			; 0000000cH
  00146	8b ce		 mov	 ecx, esi
  00148	ff 90 e4 00 00
	00		 call	 DWORD PTR [eax+228]
  0014e	ff 70 04	 push	 DWORD PTR [eax+4]
  00151	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00157	50		 push	 eax
  00158	8d 8d 44 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  0015e	ff d7		 call	 edi

; 404  : 
; 405  : 		const TilePos& Pos = pBlock->GetTilePos();
; 406  : 		sprintf_s( szBuf, "XZ%d", i + 1 );

  00160	ff b5 30 f8 ff
	ff		 push	 DWORD PTR tv1356[ebp]
  00166	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0016c	68 00 00 00 00	 push	 OFFSET ??_C@_04KKBJEJIG@XZ?$CFd?$AA@
  00171	50		 push	 eax
  00172	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ ; sprintf_s<260>

; 407  : 		kLoader.SaveInt( szBuf, Pos.x + Pos.z * g_BlockManager.GetTileMax() );

  00177	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioBlockManager@@@@1PAVioBlockManager@@A ; Singleton<ioBlockManager>::ms_Singleton
  0017c	8b 40 48	 mov	 eax, DWORD PTR [eax+72]
  0017f	8b 8e d8 01 00
	00		 mov	 ecx, DWORD PTR [esi+472]
  00185	0f af c8	 imul	 ecx, eax
  00188	03 8e d4 01 00
	00		 add	 ecx, DWORD PTR [esi+468]
  0018e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00191	51		 push	 ecx
  00192	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00198	50		 push	 eax
  00199	8d 8d 44 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  0019f	ff d7		 call	 edi

; 408  : 
; 409  : 		sprintf_s( szBuf, "Y%d", i + 1 );

  001a1	ff b5 30 f8 ff
	ff		 push	 DWORD PTR tv1356[ebp]
  001a7	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  001ad	68 00 00 00 00	 push	 OFFSET ??_C@_03FHKJEKGD@Y?$CFd?$AA@
  001b2	50		 push	 eax
  001b3	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ ; sprintf_s<260>
  001b8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 410  : 		kLoader.SaveInt( szBuf, Pos.y );

  001bb	ff b6 dc 01 00
	00		 push	 DWORD PTR [esi+476]
  001c1	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  001c7	50		 push	 eax
  001c8	8d 8d 44 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  001ce	ff d7		 call	 edi

; 411  : 
; 412  : 		sprintf_s( szBuf, "direction%d", i + 1 );

  001d0	ff b5 30 f8 ff
	ff		 push	 DWORD PTR tv1356[ebp]
  001d6	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  001dc	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PGJLBAOC@direction?$CFd?$AA@
  001e1	50		 push	 eax
  001e2	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ ; sprintf_s<260>

; 413  : 		BYTE Rotate = (int)pBlock->GetRotate()/ROTATE_VALUE;

  001e7	8b 06		 mov	 eax, DWORD PTR [esi]
  001e9	83 c4 0c	 add	 esp, 12			; 0000000cH
  001ec	8b ce		 mov	 ecx, esi
  001ee	ff 90 e8 00 00
	00		 call	 DWORD PTR [eax+232]
  001f4	e8 00 00 00 00	 call	 __ftol2_sse
  001f9	6a 5a		 push	 90			; 0000005aH
  001fb	99		 cdq
  001fc	59		 pop	 ecx
  001fd	f7 f9		 idiv	 ecx

; 414  : 		kLoader.SaveInt( szBuf, Rotate );

  001ff	8d 8d 44 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00205	0f b6 c0	 movzx	 eax, al
  00208	50		 push	 eax
  00209	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0020f	50		 push	 eax
  00210	ff d7		 call	 edi
$LN177@ExportBloc:
  00212	8b 85 2c f8 ff
	ff		 mov	 eax, DWORD PTR _iter$515745[ebp]
$LN4@ExportBloc:

; 394  : 
; 395  : 	int i = 0;
; 396  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter, ++i )

  00218	83 c0 04	 add	 eax, 4
  0021b	ff 85 30 f8 ff
	ff		 inc	 DWORD PTR tv1356[ebp]
  00221	89 85 2c f8 ff
	ff		 mov	 DWORD PTR _iter$515745[ebp], eax
  00227	3b 43 20	 cmp	 eax, DWORD PTR [ebx+32]
  0022a	0f 85 de fe ff
	ff		 jne	 $LL5@ExportBloc
$LN3@ExportBloc:

; 415  : 	}
; 416  : }

  00230	8d 8d 44 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00236	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0023a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
  00240	8d 8d 1c f8 ff
	ff		 lea	 ecx, DWORD PTR _szFileName$[ebp]
$LN180@ExportBloc:
  00246	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0024a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
$LN12@ExportBloc:
  00250	e8 00 00 00 00	 call	 __EH_epilog3_GS
  00255	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ExportBlockWorld@ioBlockManager@@QAEXXZ$0:
  00000	8d 8d 1c f8 ff
	ff		 lea	 ecx, DWORD PTR _szFileName$[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?ExportBlockWorld@ioBlockManager@@QAEXXZ$1:
  0000c	8d 8d 34 f8 ff
	ff		 lea	 ecx, DWORD PTR $T515739[ebp]
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
__unwindfunclet$?ExportBlockWorld@ioBlockManager@@QAEXXZ$2:
  00018	8d 8d 44 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1ioINILoader_e@@QAE@XZ
__ehhandler$?ExportBlockWorld@ioBlockManager@@QAEXXZ:
  00023	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00027	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002a	8b 8a 18 f8 ff
	ff		 mov	 ecx, DWORD PTR [edx-2024]
  00030	33 c8		 xor	 ecx, eax
  00032	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00037	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0003a	33 c8		 xor	 ecx, eax
  0003c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00041	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ExportBlockWorld@ioBlockManager@@QAEXXZ
  00046	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ExportBlockWorld@ioBlockManager@@QAEXXZ ENDP		; ioBlockManager::ExportBlockWorld
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::begin
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 807  : 		return (iterator(_Lmost(), this));

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 808  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 817  : 		return (iterator(this->_Myhead, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 818  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::end
_TEXT	ENDS
PUBLIC	??1?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE@XZ ; std::vector<ioBlock *,std::allocator<ioBlock *> >::~vector<ioBlock *,std::allocator<ioBlock *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE@XZ PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::~vector<ioBlock *,std::allocator<ioBlock *> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEXXZ ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Tidy
??1?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::~vector<ioBlock *,std::allocator<ioBlock *> >
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cat$520885 = 12					; size = 1
__Where$ = 12						; size = 4
?erase@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@@Z PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::erase, COMDAT
; _this$ = ecx

; 1179 : 		{	// erase element at where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1180 : 		_Move(_VIPTR(_Where) + 1, this->_Mylast,
; 1181 : 			_VIPTR(_Where));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	56		 push	 esi
  00007	ff 75 0c	 push	 DWORD PTR __Cat$520885[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	ff 76 04	 push	 DWORD PTR [esi+4]
  00010	83 c0 04	 add	 eax, 4
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Move@PAPAVioBlock@@PAPAV1@@std@@YAPAPAVioBlock@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ioBlock * *,ioBlock * *>

; 1182 : 		_Destroy(this->_Mylast - 1, this->_Mylast);
; 1183 : 		--this->_Mylast;
; 1184 : 		return (_Make_iter(_Where));

  00019	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  0001f	83 c4 10	 add	 esp, 16			; 00000010H
  00022	83 46 04 fc	 add	 DWORD PTR [esi+4], -4	; fffffffcH
  00026	89 08		 mov	 DWORD PTR [eax], ecx
  00028	5e		 pop	 esi

; 1185 : 		}

  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?erase@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@@Z ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::erase
_TEXT	ENDS
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator++
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 405  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 406  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::operator++

; 407  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 408  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z
_TEXT	SEGMENT
$T520954 = -4						; size = 4
$T520949 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >, COMDAT
; _this$ = ecx

; 698  : 		{	// construct empty tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	51		 push	 ecx
  00006	89 65 fc	 mov	 DWORD PTR $T520949[ebp], esp
  00009	89 65 fc	 mov	 DWORD PTR $T520954[ebp], esp
  0000c	ff 75 08	 push	 DWORD PTR __Parg$[ebp]
  0000f	8b f1		 mov	 esi, ecx
  00011	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >

; 699  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	c9		 leave
  0001a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::lower_bound
; Function compile flags: /Ogsp
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1449 : 		{	// find leftmost node not less than _Keyval in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1450 : 		return (iterator(_Lbound(_Keyval), this));

  00003	ff 75 0c	 push	 DWORD PTR __Keyval$[ebp]
  00006	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Lbound
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000e	89 01		 mov	 DWORD PTR [ecx], eax
  00010	8b c1		 mov	 eax, ecx

; 1451 : 		}

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Erase
; Function compile flags: /Ogsp
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1610 : 		{	// free entire subtree, recursively

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1611 : 		for (_Nodeptr _Pnode = _Rootnode;

  00006	8b 7d 08	 mov	 edi, DWORD PTR __Rootnode$[ebp]

; 1612 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

  00009	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  0000d	8b d9		 mov	 ebx, ecx
  0000f	8b f7		 mov	 esi, edi
  00011	75 1b		 jne	 SHORT $LN1@Erase
$LL3@Erase:

; 1613 : 			{	// free subtrees, then node
; 1614 : 			_Erase(this->_Right(_Pnode));

  00013	ff 76 08	 push	 DWORD PTR [esi+8]
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Erase

; 1615 : 			_Pnode = this->_Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 1616 : 			_Dest_val(this->_Alval,
; 1617 : 				_STD addressof(this->_Myval(_Rootnode)));
; 1618 : 
; 1619 : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	80 7e 15 00	 cmp	 BYTE PTR [esi+21], 0
  00029	59		 pop	 ecx
  0002a	8b fe		 mov	 edi, esi
  0002c	74 e5		 je	 SHORT $LL3@Erase
$LN1@Erase:
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx

; 1620 : 			}
; 1621 : 		}

  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@0@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::erase
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?erase@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$521094 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@0@Z PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __First_arg$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	8b f1		 mov	 esi, ecx
  0000d	89 07		 mov	 DWORD PTR [edi], eax

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 45 10	 cmp	 eax, DWORD PTR __Last_arg$[ebp]
  00012	74 16		 je	 SHORT $LN1@erase

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	ff 75 10	 push	 DWORD PTR __Cat$521094[ebp]
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  0001f	e8 00 00 00 00	 call	 ??$_Move@PAPAVioBlock@@PAPAV1@@std@@YAPAPAVioBlock@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ioBlock * *,ioBlock * *>
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

  00027	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN1@erase:

; 1212 : 			}
; 1213 : 		return (_First);

  0002a	8b c7		 mov	 eax, edi
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi

; 1214 : 		}

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@0@Z ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::erase
_TEXT	ENDS
PUBLIC	?reserve@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAEXI@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::reserve
; Function compile flags: /Ogsp
;	COMDAT ?reserve@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?reserve@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAEXI@Z PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 747  : 		if (max_size() < _Count)

  00003	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	76 0b		 jbe	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN43@reserve:
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  0001a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0001d	2b 06		 sub	 eax, DWORD PTR [esi]
  0001f	c1 f8 02	 sar	 eax, 2
  00022	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00025	73 52		 jae	 SHORT $LN3@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00027	53		 push	 ebx
  00028	57		 push	 edi
  00029	6a 00		 push	 0
  0002b	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate@PAVioBlock@@@std@@YAPAPAVioBlock@@IPAPAV1@@Z ; std::_Allocate<ioBlock *>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00033	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00035	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00038	52		 push	 edx
  00039	8b d8		 mov	 ebx, eax
  0003b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003e	53		 push	 ebx
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVioBlock@@PAPAV1@V?$allocator@PAVioBlock@@@std@@@std@@YAPAPAVioBlock@@PAPAV1@00AAV?$allocator@PAVioBlock@@@0@@Z ; std::_Uninitialized_move<ioBlock * *,ioBlock * *,std::allocator<ioBlock *> >

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00046	8b 06		 mov	 eax, DWORD PTR [esi]
  00048	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0004b	2b f8		 sub	 edi, eax
  0004d	83 c4 18	 add	 esp, 24			; 00000018H
  00050	c1 ff 02	 sar	 edi, 2

; 761  : 			if (this->_Myfirst != 0)

  00053	85 c0		 test	 eax, eax
  00055	74 07		 je	 SHORT $LN39@reserve

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);
; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0005d	59		 pop	 ecx
$LN39@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  0005e	8b ce		 mov	 ecx, esi
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00066	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00069	8d 04 83	 lea	 eax, DWORD PTR [ebx+eax*4]
  0006c	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 770  : 			this->_Mylast = _Ptr + _Size;

  0006f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00072	5f		 pop	 edi

; 771  : 			this->_Myfirst = _Ptr;

  00073	89 1e		 mov	 DWORD PTR [esi], ebx
  00075	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00078	5b		 pop	 ebx
$LN3@reserve:
  00079	5e		 pop	 esi

; 772  : 			}
; 773  : 		}

  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
$LN42@reserve:
?reserve@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAEXI@Z ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::reserve
_TEXT	ENDS
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::erase
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1195 : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))
; 1198 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1199 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1200 : 		++_Where;	// save successor iterator for return
; 1201 : 		_Orphan_ptr(*this, _Erasednode);
; 1202 : 
; 1203 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1204 : 		if (this->_Isnil(_Where._Mynode()))

  00005	8b 5d 0c	 mov	 ebx, DWORD PTR __Where$[ebp]
  00008	80 7b 15 00	 cmp	 BYTE PTR [ebx+21], 0
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00011	74 0b		 je	 SHORT $LN40@erase@2

; 1205 : 			_Xout_of_range("invalid map/set<T> iterator");

  00013	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN329@erase@2:
$LN40@erase@2:

; 1206 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1207 : 		++_Where;	// save successor iterator for return

  0001e	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00021	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::operator++

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1211 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1212 : 		_Nodeptr _Pnode = _Erasednode;
; 1213 : 
; 1214 : 		if (this->_Isnil(this->_Left(_Pnode)))

  00026	8b 13		 mov	 edx, DWORD PTR [ebx]
  00028	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0
  0002c	74 05		 je	 SHORT $LN39@erase@2

; 1215 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

  0002e	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 1216 : 		else if (this->_Isnil(this->_Right(_Pnode)))

  00031	eb 17		 jmp	 SHORT $LN321@erase@2
$LN39@erase@2:
  00033	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00036	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003a	74 04		 je	 SHORT $LN37@erase@2

; 1217 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

  0003c	8b fa		 mov	 edi, edx

; 1218 : 		else

  0003e	eb 0a		 jmp	 SHORT $LN321@erase@2
$LN37@erase@2:

; 1219 : 			{	// two subtrees, must lift successor node to replace erased
; 1220 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

  00040	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 1221 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

  00043	8b 78 08	 mov	 edi, DWORD PTR [eax+8]

; 1222 : 			}
; 1223 : 
; 1224 : 		if (_Pnode == _Erasednode)

  00046	3b c3		 cmp	 eax, ebx
  00048	75 76		 jne	 SHORT $LN35@erase@2
$LN321@erase@2:

; 1225 : 			{	// at most one subtree, relink it
; 1226 : 			_Fixnodeparent = this->_Parent(_Erasednode);
; 1227 : 			if (!this->_Isnil(_Fixnode))

  0004a	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  0004e	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  00051	75 03		 jne	 SHORT $LN34@erase@2

; 1228 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

  00053	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN34@erase@2:

; 1229 : 
; 1230 : 			if (_Root() == _Erasednode)

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0005c	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0005f	75 05		 jne	 SHORT $LN33@erase@2

; 1231 : 				_Root() = _Fixnode;	// link down from root

  00061	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 1232 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

  00064	eb 0b		 jmp	 SHORT $LN30@erase@2
$LN33@erase@2:
  00066	39 1e		 cmp	 DWORD PTR [esi], ebx
  00068	75 04		 jne	 SHORT $LN31@erase@2

; 1233 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  0006a	89 3e		 mov	 DWORD PTR [esi], edi

; 1234 : 			else

  0006c	eb 03		 jmp	 SHORT $LN30@erase@2
$LN31@erase@2:

; 1235 : 				this->_Right(_Fixnodeparent) =
; 1236 : 					_Fixnode;	// link down to right

  0006e	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$LN30@erase@2:

; 1237 : 
; 1238 : 			if (_Lmost() == _Erasednode)

  00071	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00074	39 19		 cmp	 DWORD PTR [ecx], ebx
  00076	75 1c		 jne	 SHORT $LN29@erase@2

; 1239 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1240 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1241 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

  00078	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  0007c	74 04		 je	 SHORT $LN43@erase@2
  0007e	8b d6		 mov	 edx, esi
  00080	eb 10		 jmp	 SHORT $LN97@erase@2
$LN43@erase@2:
  00082	8b 07		 mov	 eax, DWORD PTR [edi]
  00084	8b d7		 mov	 edx, edi
  00086	eb 04		 jmp	 SHORT $LN323@erase@2
$LL98@erase@2:
  00088	8b d0		 mov	 edx, eax
  0008a	8b 02		 mov	 eax, DWORD PTR [edx]
$LN323@erase@2:
  0008c	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00090	74 f6		 je	 SHORT $LL98@erase@2
$LN97@erase@2:
  00092	89 11		 mov	 DWORD PTR [ecx], edx
$LN29@erase@2:

; 1242 : 
; 1243 : 			if (_Rmost() == _Erasednode)

  00094	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00097	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0009a	39 59 08	 cmp	 DWORD PTR [ecx+8], ebx
  0009d	75 7b		 jne	 SHORT $LN185@erase@2

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  0009f	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  000a3	74 04		 je	 SHORT $LN45@erase@2
  000a5	8b d6		 mov	 edx, esi
  000a7	eb 12		 jmp	 SHORT $LN117@erase@2
$LN45@erase@2:
  000a9	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000ac	8b d7		 mov	 edx, edi
  000ae	eb 05		 jmp	 SHORT $LN324@erase@2
$LL118@erase@2:
  000b0	8b d0		 mov	 edx, eax
  000b2	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
$LN324@erase@2:
  000b5	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  000b9	74 f5		 je	 SHORT $LL118@erase@2
$LN117@erase@2:
  000bb	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 1247 : 			}
; 1248 : 		else

  000be	eb 5a		 jmp	 SHORT $LN185@erase@2
$LN35@erase@2:

; 1249 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1250 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1251 : 				_Pnode;	// link left up

  000c0	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1252 : 			this->_Left(_Pnode) =
; 1253 : 				this->_Left(_Erasednode);	// link successor down

  000c3	8b 13		 mov	 edx, DWORD PTR [ebx]
  000c5	89 10		 mov	 DWORD PTR [eax], edx

; 1254 : 
; 1255 : 			if (_Pnode == this->_Right(_Erasednode))

  000c7	3b 43 08	 cmp	 eax, DWORD PTR [ebx+8]
  000ca	75 04		 jne	 SHORT $LN26@erase@2

; 1256 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  000cc	8b f0		 mov	 esi, eax

; 1257 : 			else

  000ce	eb 1a		 jmp	 SHORT $LN25@erase@2
$LN26@erase@2:

; 1258 : 				{	// successor further down, link in place of erased
; 1259 : 				_Fixnodeparent =
; 1260 : 					this->_Parent(_Pnode);	// parent is successor's
; 1261 : 				if (!this->_Isnil(_Fixnode))

  000d0	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  000d4	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000d7	75 03		 jne	 SHORT $LN24@erase@2

; 1262 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  000d9	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN24@erase@2:

; 1263 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  000dc	89 3e		 mov	 DWORD PTR [esi], edi

; 1264 : 				this->_Right(_Pnode) =
; 1265 : 					this->_Right(_Erasednode);	// link next down

  000de	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  000e1	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1266 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1267 : 					_Pnode;	// right up

  000e4	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000e7	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN25@erase@2:

; 1268 : 				}
; 1269 : 
; 1270 : 			if (_Root() == _Erasednode)

  000ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000f0	39 59 04	 cmp	 DWORD PTR [ecx+4], ebx
  000f3	75 05		 jne	 SHORT $LN23@erase@2

; 1271 : 				_Root() = _Pnode;	// link down from root

  000f5	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1272 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

  000f8	eb 0e		 jmp	 SHORT $LN20@erase@2
$LN23@erase@2:
  000fa	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000fd	39 19		 cmp	 DWORD PTR [ecx], ebx
  000ff	75 04		 jne	 SHORT $LN21@erase@2

; 1273 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1274 : 					_Pnode;	// link down to left

  00101	89 01		 mov	 DWORD PTR [ecx], eax

; 1275 : 			else

  00103	eb 03		 jmp	 SHORT $LN20@erase@2
$LN21@erase@2:

; 1276 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1277 : 					_Pnode;	// link down to right

  00105	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN20@erase@2:

; 1278 : 
; 1279 : 			this->_Parent(_Pnode) =
; 1280 : 				this->_Parent(_Erasednode);	// link successor up

  00108	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0010b	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1281 : 			_STD swap(this->_Color(_Pnode),
; 1282 : 				this->_Color(_Erasednode));	// recolor it

  0010e	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00111	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00114	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00117	88 4b 14	 mov	 BYTE PTR [ebx+20], cl
$LN185@erase@2:

; 1283 : 			}
; 1284 : 
; 1285 : 		if (this->_Color(_Erasednode) == this->_Black)

  0011a	80 7b 14 01	 cmp	 BYTE PTR [ebx+20], 1
  0011e	0f 85 03 01 00
	00		 jne	 $LN19@erase@2

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00124	e9 b2 00 00 00	 jmp	 $LN326@erase@2
$LL18@erase@2:
  00129	80 7f 14 01	 cmp	 BYTE PTR [edi+20], 1
  0012d	0f 85 f0 00 00
	00		 jne	 $LN16@erase@2

; 1290 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

  00133	8b 06		 mov	 eax, DWORD PTR [esi]
  00135	3b f8		 cmp	 edi, eax
  00137	75 6c		 jne	 SHORT $LN15@erase@2

; 1291 : 					{	// fixup left subtree
; 1292 : 					_Pnode = this->_Right(_Fixnodeparent);

  00139	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 1293 : 					if (this->_Color(_Pnode) == this->_Red)

  0013c	80 78 14 00	 cmp	 BYTE PTR [eax+20], 0
  00140	75 11		 jne	 SHORT $LN14@erase@2

; 1294 : 						{	// rotate red up from right subtree
; 1295 : 						this->_Color(_Pnode) = this->_Black;

  00142	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1296 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1297 : 						_Lrotate(_Fixnodeparent);

  00146	56		 push	 esi
  00147	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  0014b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Lrotate

; 1298 : 						_Pnode = this->_Right(_Fixnodeparent);

  00150	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN14@erase@2:

; 1299 : 						}
; 1300 : 
; 1301 : 					if (this->_Isnil(_Pnode))

  00153	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0

; 1302 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1303 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

  00157	75 7d		 jne	 SHORT $LN327@erase@2

; 1304 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

  00159	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015b	80 79 14 01	 cmp	 BYTE PTR [ecx+20], 1
  0015f	75 09		 jne	 SHORT $LN11@erase@2
  00161	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00164	80 79 14 01	 cmp	 BYTE PTR [ecx+20], 1
  00168	74 68		 je	 SHORT $LN328@erase@2
$LN11@erase@2:

; 1305 : 						{	// redden right subtree with black children
; 1306 : 						this->_Color(_Pnode) = this->_Red;
; 1307 : 						_Fixnode = _Fixnodeparent;
; 1308 : 						}
; 1309 : 					else
; 1310 : 						{	// must rearrange right subtree
; 1311 : 						if (this->_Color(this->_Right(_Pnode))
; 1312 : 							== this->_Black)

  0016a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0016d	80 79 14 01	 cmp	 BYTE PTR [ecx+20], 1
  00171	75 16		 jne	 SHORT $LN9@erase@2

; 1313 : 							{	// rotate red up from left sub-subtree
; 1314 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

  00173	8b 08		 mov	 ecx, DWORD PTR [eax]
  00175	c6 41 14 01	 mov	 BYTE PTR [ecx+20], 1

; 1315 : 							this->_Color(_Pnode) = this->_Red;
; 1316 : 							_Rrotate(_Pnode);

  00179	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017c	50		 push	 eax
  0017d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00181	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Rrotate

; 1317 : 							_Pnode = this->_Right(_Fixnodeparent);

  00186	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN9@erase@2:

; 1318 : 							}
; 1319 : 
; 1320 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  00189	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0018c	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 1321 : 						this->_Color(_Fixnodeparent) = this->_Black;
; 1322 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;
; 1323 : 						_Lrotate(_Fixnodeparent);

  0018f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00192	c6 46 14 01	 mov	 BYTE PTR [esi+20], 1
  00196	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00199	56		 push	 esi
  0019a	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1
  0019e	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Lrotate

; 1324 : 						break;	// tree now recolored/rebalanced

  001a3	eb 7e		 jmp	 SHORT $LN16@erase@2
$LN15@erase@2:

; 1325 : 						}
; 1326 : 					}
; 1327 : 				else
; 1328 : 					{	// fixup right subtree
; 1329 : 					_Pnode = this->_Left(_Fixnodeparent);
; 1330 : 					if (this->_Color(_Pnode) == this->_Red)

  001a5	80 78 14 00	 cmp	 BYTE PTR [eax+20], 0
  001a9	75 10		 jne	 SHORT $LN7@erase@2

; 1331 : 						{	// rotate red up from left subtree
; 1332 : 						this->_Color(_Pnode) = this->_Black;

  001ab	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1333 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1334 : 						_Rrotate(_Fixnodeparent);

  001af	56		 push	 esi
  001b0	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b4	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Rrotate

; 1335 : 						_Pnode = this->_Left(_Fixnodeparent);

  001b9	8b 06		 mov	 eax, DWORD PTR [esi]
$LN7@erase@2:

; 1336 : 						}
; 1337 : 					if (this->_Isnil(_Pnode))

  001bb	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0

; 1338 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1339 : 					else if (this->_Color(this->_Right(_Pnode)) ==

  001bf	75 15		 jne	 SHORT $LN327@erase@2

; 1340 : 						this->_Black
; 1341 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

  001c1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001c4	80 79 14 01	 cmp	 BYTE PTR [ecx+20], 1
  001c8	75 22		 jne	 SHORT $LN4@erase@2
  001ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  001cc	80 79 14 01	 cmp	 BYTE PTR [ecx+20], 1
  001d0	75 1a		 jne	 SHORT $LN4@erase@2
$LN328@erase@2:

; 1342 : 						{	// redden left subtree with black children
; 1343 : 						this->_Color(_Pnode) = this->_Red;

  001d2	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$LN327@erase@2:

; 1344 : 						_Fixnode = _Fixnodeparent;

  001d6	8b fe		 mov	 edi, esi
  001d8	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
$LN326@erase@2:

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  001db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001de	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001e1	3b 78 04	 cmp	 edi, DWORD PTR [eax+4]
  001e4	0f 85 3f ff ff
	ff		 jne	 $LL18@erase@2
  001ea	eb 37		 jmp	 SHORT $LN16@erase@2
$LN4@erase@2:

; 1345 : 						}
; 1346 : 					else
; 1347 : 						{	// must rearrange left subtree
; 1348 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

  001ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ee	80 79 14 01	 cmp	 BYTE PTR [ecx+20], 1
  001f2	75 16		 jne	 SHORT $LN2@erase@2

; 1349 : 							{	// rotate red up from right sub-subtree
; 1350 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

  001f4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001f7	c6 41 14 01	 mov	 BYTE PTR [ecx+20], 1

; 1351 : 							this->_Color(_Pnode) = this->_Red;
; 1352 : 							_Lrotate(_Pnode);

  001fb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001fe	50		 push	 eax
  001ff	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00203	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Lrotate

; 1353 : 							_Pnode = this->_Left(_Fixnodeparent);

  00208	8b 06		 mov	 eax, DWORD PTR [esi]
$LN2@erase@2:

; 1354 : 							}
; 1355 : 
; 1356 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  0020a	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0020d	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 1357 : 						this->_Color(_Fixnodeparent) = this->_Black;
; 1358 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;
; 1359 : 						_Rrotate(_Fixnodeparent);

  00210	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00213	c6 46 14 01	 mov	 BYTE PTR [esi+20], 1
  00217	8b 00		 mov	 eax, DWORD PTR [eax]
  00219	56		 push	 esi
  0021a	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1
  0021e	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Rrotate
$LN16@erase@2:

; 1360 : 						break;	// tree now recolored/rebalanced
; 1361 : 						}
; 1362 : 					}
; 1363 : 
; 1364 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

  00223	c6 47 14 01	 mov	 BYTE PTR [edi+20], 1
$LN19@erase@2:

; 1365 : 			}
; 1366 : 
; 1367 : 		_Dest_val(this->_Alval,
; 1368 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node
; 1369 : 
; 1370 : 		this->_Alnod.deallocate(_Erasednode, 1);

  00227	53		 push	 ebx
  00228	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0022d	59		 pop	 ecx

; 1371 : 
; 1372 : 		if (0 < this->_Mysize)

  0022e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00231	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00234	5f		 pop	 edi
  00235	5e		 pop	 esi
  00236	5b		 pop	 ebx
  00237	85 c0		 test	 eax, eax
  00239	74 04		 je	 SHORT $LN1@erase@2

; 1373 : 			--this->_Mysize;

  0023b	48		 dec	 eax
  0023c	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@erase@2:

; 1374 : 
; 1375 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

  0023f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00242	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00245	89 08		 mov	 DWORD PTR [eax], ecx

; 1376 : 		}

  00247	c9		 leave
  00248	c2 08 00	 ret	 8
$LN322@erase@2:
?erase@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Linsert@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Linsert
; Function compile flags: /Ogsp
;	COMDAT ?_Linsert@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Node$ = 12						; size = 4
$T521701 = 16						; size = 4
__Where$517138 = 16					; size = 4
__Leftish$ = 16						; size = 1
?_Linsert@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Linsert, COMDAT
; _this$ = ecx

; 944  : 		{	// try to insert node at _Node, on left if _Leftish

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 945  : 		const value_type& _Val = this->_Myval(_Node);
; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();

  00008	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0000b	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  0000e	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00012	57		 push	 edi
  00013	8b d9		 mov	 ebx, ecx
  00015	c6 45 fc 01	 mov	 BYTE PTR __Addleft$[ebp], 1
  00019	75 31		 jne	 SHORT $LN151@Linsert

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Node$[ebp]
  0001e	8b 79 0c	 mov	 edi, DWORD PTR [ecx+12]
$LL12@Linsert:

; 951  : 			{	// look for leaf to insert before (_Addleft) or after
; 952  : 			_Wherenode = _Trynode;

  00021	80 7d 10 00	 cmp	 BYTE PTR __Leftish$[ebp], 0
  00025	8b d8		 mov	 ebx, eax

; 953  : 			if (_Leftish)

  00027	74 09		 je	 SHORT $LN10@Linsert

; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,

  00029	39 78 0c	 cmp	 DWORD PTR [eax+12], edi
  0002c	0f 9d 45 fc	 setge	 BYTE PTR __Addleft$[ebp]

; 955  : 					this->_Key(_Trynode),
; 956  : 					this->_Kfn(_Val));	// favor left end
; 957  : 			else

  00030	eb 07		 jmp	 SHORT $LN9@Linsert
$LN10@Linsert:

; 958  : 				_Addleft = _DEBUG_LT_PRED(this->comp,

  00032	3b 78 0c	 cmp	 edi, DWORD PTR [eax+12]
  00035	0f 9c 45 fc	 setl	 BYTE PTR __Addleft$[ebp]
$LN9@Linsert:

; 959  : 					this->_Kfn(_Val),
; 960  : 					this->_Key(_Trynode));	// favor right end
; 961  : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 962  : 				: this->_Right(_Trynode);

  00039	80 7d fc 00	 cmp	 BYTE PTR __Addleft$[ebp], 0
  0003d	74 04		 je	 SHORT $LN15@Linsert
  0003f	8b 00		 mov	 eax, DWORD PTR [eax]
  00041	eb 03		 jmp	 SHORT $LN16@Linsert
$LN15@Linsert:
  00043	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$LN16@Linsert:

; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  00046	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0004a	74 d5		 je	 SHORT $LL12@Linsert
$LN151@Linsert:

; 963  : 			}
; 964  : 
; 965  : 		if (this->_Multi)
; 966  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));
; 967  : 		else
; 968  : 			{	// insert only if unique
; 969  : 			iterator _Where = iterator(_Wherenode, this);
; 970  : 			if (!_Addleft)

  0004c	80 7d fc 00	 cmp	 BYTE PTR __Addleft$[ebp], 0
  00050	8b fb		 mov	 edi, ebx
  00052	89 7d 10	 mov	 DWORD PTR __Where$517138[ebp], edi
  00055	74 30		 je	 SHORT $LN99@Linsert

; 971  : 				;	// need to test if insert after is okay
; 972  : 			else if (_Where == begin())

  00057	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0005a	3b 18		 cmp	 ebx, DWORD PTR [eax]
  0005c	75 1e		 jne	 SHORT $LN4@Linsert

; 973  : 				return (_Pairib(_Insert(true, _Wherenode, _Node), true));

  0005e	ff 75 0c	 push	 DWORD PTR __Node$[ebp]
  00061	53		 push	 ebx
  00062	6a 01		 push	 1
$LN152@Linsert:
  00064	8d 45 10	 lea	 eax, DWORD PTR $T521701[ebp]
  00067	50		 push	 eax
  00068	8b ce		 mov	 ecx, esi
  0006a	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Insert
  0006f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00071	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00074	89 08		 mov	 DWORD PTR [eax], ecx
  00076	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  0007a	eb 2c		 jmp	 SHORT $LN1@Linsert
$LN4@Linsert:

; 974  : 			else
; 975  : 				--_Where;	// need to test if insert before is okay

  0007c	8d 4d 10	 lea	 ecx, DWORD PTR __Where$517138[ebp]
  0007f	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::operator--
  00084	8b 7d 10	 mov	 edi, DWORD PTR __Where$517138[ebp]
$LN99@Linsert:

; 976  : 
; 977  : 			if (_DEBUG_LT_PRED(this->comp,

  00087	8b 45 0c	 mov	 eax, DWORD PTR __Node$[ebp]
  0008a	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]

; 978  : 				this->_Key(_Where._Mynode()),
; 979  : 				this->_Kfn(_Val)))
; 980  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

  0008d	50		 push	 eax
  0008e	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00091	7d 06		 jge	 SHORT $LN2@Linsert
  00093	53		 push	 ebx
  00094	ff 75 fc	 push	 DWORD PTR __Addleft$[ebp]
  00097	eb cb		 jmp	 SHORT $LN152@Linsert
$LN2@Linsert:

; 981  : 			else
; 982  : 				{	// duplicate, don't insert
; 983  : 				_Dest_val(this->_Alval,
; 984  : 					_STD addressof(this->_Myval(_Node)));
; 985  : 
; 986  : 				this->_Alnod.deallocate(_Node, 1);

  00099	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

  0009e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a1	59		 pop	 ecx
  000a2	89 38		 mov	 DWORD PTR [eax], edi
  000a4	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
$LN1@Linsert:
  000a8	5f		 pop	 edi
  000a9	5e		 pop	 esi
  000aa	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  000ab	c9		 leave
  000ac	c2 0c 00	 ret	 12			; 0000000cH
?_Linsert@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Linsert
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVioBlockProperty@@@2@$$QAU32@@Z ; std::allocator<std::pair<int const ,ioBlockProperty *> >::construct
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVioBlockProperty@@@2@$$QAU32@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVioBlockProperty@@@2@$$QAU32@@Z PROC ; std::allocator<std::pair<int const ,ioBlockProperty *> >::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN3@construct@3
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN3@construct@3:

; 203  : 		}

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
?construct@?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@QAEXPAU?$pair@$$CBHPAVioBlockProperty@@@2@$$QAU32@@Z ENDP ; std::allocator<std::pair<int const ,ioBlockProperty *> >::construct
_TEXT	ENDS
PUBLIC	??_C@_0BL@GLJGFJAA@GetBlockTemplete?5Fail?5?9?5?$CFd?$AA@ ; `string'
PUBLIC	?GetBlockTemplete@ioBlockManager@@QAEPBVioBlockProperty@@H@Z ; ioBlockManager::GetBlockTemplete
;	COMDAT ??_C@_0BL@GLJGFJAA@GetBlockTemplete?5Fail?5?9?5?$CFd?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	SEGMENT
??_C@_0BL@GLJGFJAA@GetBlockTemplete?5Fail?5?9?5?$CFd?$AA@ DB 'GetBlockTem'
	DB	'plete Fail - %d', 00H			; `string'
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockmanager.cpp
CONST	ENDS
;	COMDAT ?GetBlockTemplete@ioBlockManager@@QAEPBVioBlockProperty@@H@Z
_TEXT	SEGMENT
_iter$515527 = -4					; size = 4
_nCode$ = 8						; size = 4
?GetBlockTemplete@ioBlockManager@@QAEPBVioBlockProperty@@H@Z PROC ; ioBlockManager::GetBlockTemplete, COMDAT
; _this$ = ecx

; 122  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 123  : 	for( BlockTempleteMap::iterator iter = m_BlockTempleteMap.begin(); iter != m_BlockTempleteMap.end(); ++iter )

  00005	8b 71 10	 mov	 esi, DWORD PTR [ecx+16]
  00008	8b 06		 mov	 eax, DWORD PTR [esi]
  0000a	57		 push	 edi
  0000b	8b 7d 08	 mov	 edi, DWORD PTR _nCode$[ebp]
  0000e	89 45 fc	 mov	 DWORD PTR _iter$515527[ebp], eax
  00011	eb 17		 jmp	 SHORT $LN50@GetBlockTe
$LL23@GetBlockTe:

; 124  : 	{
; 125  : 		const ioBlockProperty* pTemplete = iter->second;

  00013	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 126  : 		if( pTemplete && pTemplete->m_nCode == nCode )

  00016	85 c0		 test	 eax, eax
  00018	74 05		 je	 SHORT $LN3@GetBlockTe
  0001a	39 78 04	 cmp	 DWORD PTR [eax+4], edi
  0001d	74 28		 je	 SHORT $LN5@GetBlockTe
$LN3@GetBlockTe:

; 123  : 	for( BlockTempleteMap::iterator iter = m_BlockTempleteMap.begin(); iter != m_BlockTempleteMap.end(); ++iter )

  0001f	8d 4d fc	 lea	 ecx, DWORD PTR _iter$515527[ebp]
  00022	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::operator++
  00027	8b 45 fc	 mov	 eax, DWORD PTR _iter$515527[ebp]
$LN50@GetBlockTe:
  0002a	3b c6		 cmp	 eax, esi
  0002c	75 e5		 jne	 SHORT $LL23@GetBlockTe

; 127  : 			return pTemplete;
; 128  : 	}
; 129  : 
; 130  : 	LOG.PrintTimeAndLog(0, "GetBlockTemplete Fail - %d", nCode );

  0002e	57		 push	 edi
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@GLJGFJAA@GetBlockTemplete?5Fail?5?9?5?$CFd?$AA@
  00034	6a 00		 push	 0
  00036	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  00042	83 c4 10	 add	 esp, 16			; 00000010H

; 131  : 	return NULL;

  00045	33 c0		 xor	 eax, eax
$LN5@GetBlockTe:
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi

; 132  : }

  00049	c9		 leave
  0004a	c2 04 00	 ret	 4
?GetBlockTemplete@ioBlockManager@@QAEPBVioBlockProperty@@H@Z ENDP ; ioBlockManager::GetBlockTemplete
_TEXT	ENDS
PUBLIC	?DestroyBlock@ioBlockManager@@QAEX_J@Z		; ioBlockManager::DestroyBlock
EXTRN	?DestroyAreaWeapon@ioBlock@@QAEXXZ:PROC		; ioBlock::DestroyAreaWeapon
; Function compile flags: /Ogsp
;	COMDAT ?DestroyBlock@ioBlockManager@@QAEX_J@Z
_TEXT	SEGMENT
_nUniqueIndex$ = 8					; size = 8
$T522213 = 12						; size = 4
?DestroyBlock@ioBlockManager@@QAEX_J@Z PROC		; ioBlockManager::DestroyBlock, COMDAT
; _this$ = ecx

; 135  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 136  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end();  )

  00004	8d 59 1c	 lea	 ebx, DWORD PTR [ecx+28]
  00007	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  0000a	57		 push	 edi
  0000b	8b 3b		 mov	 edi, DWORD PTR [ebx]
  0000d	3b f9		 cmp	 edi, ecx
  0000f	74 43		 je	 SHORT $LN4@DestroyBlo
  00011	56		 push	 esi
$LL5@DestroyBlo:

; 137  : 	{
; 138  : 		ioBlock* pBlock = *iter;

  00012	8b 37		 mov	 esi, DWORD PTR [edi]

; 139  : 		if( pBlock && pBlock->GetUniqueIndex() == nUniqueIndex )

  00014	85 f6		 test	 esi, esi
  00016	74 16		 je	 SHORT $LN44@DestroyBlo
  00018	8b 86 c8 01 00
	00		 mov	 eax, DWORD PTR [esi+456]
  0001e	3b 45 08	 cmp	 eax, DWORD PTR _nUniqueIndex$[ebp]
  00021	75 0b		 jne	 SHORT $LN44@DestroyBlo
  00023	8b 86 cc 01 00
	00		 mov	 eax, DWORD PTR [esi+460]
  00029	3b 45 0c	 cmp	 eax, DWORD PTR _nUniqueIndex$[ebp+4]
  0002c	74 09		 je	 SHORT $LN43@DestroyBlo
$LN44@DestroyBlo:

; 145  : 			return;
; 146  : 		}
; 147  : 		else
; 148  : 		{
; 149  : 			++iter;

  0002e	83 c7 04	 add	 edi, 4
  00031	3b f9		 cmp	 edi, ecx
  00033	75 dd		 jne	 SHORT $LL5@DestroyBlo

; 139  : 		if( pBlock && pBlock->GetUniqueIndex() == nUniqueIndex )

  00035	eb 1c		 jmp	 SHORT $LN45@DestroyBlo
$LN43@DestroyBlo:

; 140  : 		{
; 141  : 			pBlock->DestroyAreaWeapon();

  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?DestroyAreaWeapon@ioBlock@@QAEXXZ ; ioBlock::DestroyAreaWeapon

; 142  : 
; 143  : 			SAFEDELETE( pBlock );

  0003e	8b 06		 mov	 eax, DWORD PTR [esi]
  00040	6a 01		 push	 1
  00042	8b ce		 mov	 ecx, esi
  00044	ff 50 04	 call	 DWORD PTR [eax+4]

; 144  : 			iter = m_BlockList.erase( iter );

  00047	57		 push	 edi
  00048	8d 45 0c	 lea	 eax, DWORD PTR $T522213[ebp]
  0004b	50		 push	 eax
  0004c	8b cb		 mov	 ecx, ebx
  0004e	e8 00 00 00 00	 call	 ?erase@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::erase
$LN45@DestroyBlo:
  00053	5e		 pop	 esi
$LN4@DestroyBlo:
  00054	5f		 pop	 edi
  00055	5b		 pop	 ebx

; 150  : 		}
; 151  : 	}
; 152  : }

  00056	5d		 pop	 ebp
  00057	c2 08 00	 ret	 8
?DestroyBlock@ioBlockManager@@QAEX_J@Z ENDP		; ioBlockManager::DestroyBlock
_TEXT	ENDS
PUBLIC	?Update@ioBlockManager@@QAEXXZ			; ioBlockManager::Update
EXTRN	__imp_?GetSecPerFrame@ioFrameTimer@@QBEMXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?Update@ioBlockManager@@QAEXXZ
_TEXT	SEGMENT
_fTimePerSec$ = -4					; size = 4
?Update@ioBlockManager@@QAEXXZ PROC			; ioBlockManager::Update, COMDAT
; _this$ = ecx

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 265  : 	if( 0 < m_dwPlayStartTime && m_dwPlayStartTime + UPDATE_BOUND_TIME < FRAMEGETTIME() )

  00008	83 7e 30 00	 cmp	 DWORD PTR [esi+48], 0
  0000c	57		 push	 edi
  0000d	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00013	76 22		 jbe	 SHORT $LN5@Update
  00015	ff d7		 call	 edi
  00017	8b c8		 mov	 ecx, eax
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  0001f	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  00022	81 c1 b8 0b 00
	00		 add	 ecx, 3000		; 00000bb8H
  00028	3b c8		 cmp	 ecx, eax
  0002a	73 0b		 jae	 SHORT $LN5@Update

; 266  : 	{
; 267  : 		m_dwPlayStartTime = 0;

  0002c	83 66 30 00	 and	 DWORD PTR [esi+48], 0

; 268  : 		UpdateBound();

  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ?UpdateBound@ioBlockManager@@QAEXXZ ; ioBlockManager::UpdateBound
$LN5@Update:

; 269  : 	}
; 270  : 
; 271  : 	DWORD dwCurTime		= FRAMEGETTIME();

  00037	ff d7		 call	 edi
  00039	8b c8		 mov	 ecx, eax
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00041	8b d8		 mov	 ebx, eax

; 272  : 	float fTimePerSec	= g_FrameTimer.GetSecPerFrame();

  00043	ff d7		 call	 edi
  00045	8b c8		 mov	 ecx, eax
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSecPerFrame@ioFrameTimer@@QBEMXZ
  0004d	d9 5d fc	 fstp	 DWORD PTR _fTimePerSec$[ebp]

; 273  : 	
; 274  : 	int nDebug = (int)m_BlockList.size();
; 275  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter )

  00050	8b 7e 1c	 mov	 edi, DWORD PTR [esi+28]
  00053	eb 1d		 jmp	 SHORT $LN42@Update
$LL20@Update:

; 276  : 	{
; 277  : 		ioBlock* pBlock = *iter;

  00055	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 278  : 		if( !pBlock )

  00057	85 c9		 test	 ecx, ecx
  00059	74 14		 je	 SHORT $LN3@Update

; 279  : 			continue;
; 280  : 
; 281  : 		pBlock->Update( fTimePerSec, m_dwPreUpdatedTime, dwCurTime );

  0005b	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fTimePerSec$[ebp]
  00060	8b 01		 mov	 eax, DWORD PTR [ecx]
  00062	53		 push	 ebx
  00063	ff 76 2c	 push	 DWORD PTR [esi+44]
  00066	51		 push	 ecx
  00067	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006c	ff 50 08	 call	 DWORD PTR [eax+8]
$LN3@Update:

; 273  : 	
; 274  : 	int nDebug = (int)m_BlockList.size();
; 275  : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter )

  0006f	83 c7 04	 add	 edi, 4
$LN42@Update:
  00072	3b 7e 20	 cmp	 edi, DWORD PTR [esi+32]
  00075	75 de		 jne	 SHORT $LL20@Update

; 282  : 	}
; 283  : 	m_dwPreUpdatedTime = dwCurTime;

  00077	5f		 pop	 edi
  00078	89 5e 2c	 mov	 DWORD PTR [esi+44], ebx
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx

; 284  : }

  0007d	c9		 leave
  0007e	c3		 ret	 0
?Update@ioBlockManager@@QAEXXZ ENDP			; ioBlockManager::Update
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::clear
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::clear, COMDAT
; _this$ = ecx

; 1410 : 		{	// erase all

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 1411 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1412 : 		this->_Orphan_ptr(*this, 0);
; 1413 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1414 : 
; 1415 : 		_Erase(_Root());

  00004	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00007	ff 70 04	 push	 DWORD PTR [eax+4]
  0000a	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Erase

; 1416 : 		_Root() = this->_Myhead;

  0000f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1417 : 		_Lmost() = this->_Myhead;

  00015	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax

; 1418 : 		_Rmost() = this->_Myhead;

  0001a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0001d	89 76 08	 mov	 DWORD PTR [esi+8], esi

; 1419 : 		this->_Mysize = 0;

  00020	83 67 08 00	 and	 DWORD PTR [edi+8], 0
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi

; 1420 : 		}

  00026	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::find
; Function compile flags: /Ogsp
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z
_TEXT	SEGMENT
$T522435 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::find, COMDAT
; _this$ = ecx

; 1423 : 		{	// find an element in mutable sequence that matches _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1424 : 		iterator _Where = lower_bound(_Keyval);

  00006	8b 7d 0c	 mov	 edi, DWORD PTR __Keyval$[ebp]
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Lbound

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

  00011	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00014	89 45 0c	 mov	 DWORD PTR __Where$[ebp], eax
  00017	3b c6		 cmp	 eax, esi
  00019	74 0c		 je	 SHORT $LN3@find
  0001b	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0001d	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00020	7c 05		 jl	 SHORT $LN3@find
  00022	8d 45 0c	 lea	 eax, DWORD PTR __Where$[ebp]
  00025	eb 06		 jmp	 SHORT $LN4@find
$LN3@find:
  00027	89 75 fc	 mov	 DWORD PTR $T522435[ebp], esi
  0002a	8d 45 fc	 lea	 eax, DWORD PTR $T522435[ebp]
$LN4@find:
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00032	5f		 pop	 edi
  00033	89 08		 mov	 DWORD PTR [eax], ecx
  00035	5e		 pop	 esi

; 1429 : 		}

  00036	c9		 leave
  00037	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::find
_TEXT	ENDS
PUBLIC	?clear@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAEXXZ ; std::vector<ioBlock *,std::allocator<ioBlock *> >::clear
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?clear@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T522573 = -4						; size = 4
?clear@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAEXXZ PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T522573[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@0@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAEXXZ ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::clear
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEXI@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEXI@Z PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx

; 1292 : 		if (max_size() - _Count < _Size)

  0000d	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  00012	2b 55 08	 sub	 edx, DWORD PTR __Count$[ebp]
  00015	c1 f8 02	 sar	 eax, 2
  00018	3b d0		 cmp	 edx, eax
  0001a	73 0b		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve:
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  00027	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0002a	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0002d	2b d1		 sub	 edx, ecx
  0002f	c1 fa 02	 sar	 edx, 2
  00032	3b c2		 cmp	 eax, edx
  00034	76 10		 jbe	 SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  00036	50		 push	 eax
  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IBEII@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Grow_to
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?reserve@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAEXI@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::reserve
$LN1@Reserve:
  00046	5e		 pop	 esi

; 1298 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN20@Reserve:
?_Reserve@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEXI@Z ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Reserve
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::erase
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T522659 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1379 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1380 : 		if (_First == begin() && _Last == end())

  00007	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  0000d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0000f	75 13		 jne	 SHORT $LN65@erase@3
  00011	39 45 10	 cmp	 DWORD PTR __Last$[ebp], eax
  00014	75 0e		 jne	 SHORT $LN65@erase@3

; 1381 : 			{	// erase all
; 1382 : 			clear();

  00016	8b ce		 mov	 ecx, esi
  00018	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::clear

; 1383 : 			return (begin());

  0001d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00020	8b 08		 mov	 ecx, DWORD PTR [eax]
  00022	eb 25		 jmp	 SHORT $LN1@erase@3
$LN65@erase@3:

; 1384 : 			}
; 1385 : 		else
; 1386 : 			{	// partial erase, one at a time
; 1387 : 			while (_First != _Last)

  00024	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00027	74 20		 je	 SHORT $LN1@erase@3
  00029	57		 push	 edi
$LL2@erase@3:

; 1388 : 				erase(_First++);

  0002a	8b f9		 mov	 edi, ecx
  0002c	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0002f	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::operator++
  00034	57		 push	 edi
  00035	8d 45 fc	 lea	 eax, DWORD PTR $T522659[ebp]
  00038	50		 push	 eax
  00039	8b ce		 mov	 ecx, esi
  0003b	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::erase
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00043	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00046	75 e2		 jne	 SHORT $LL2@erase@3
  00048	5f		 pop	 edi
$LN1@erase@3:

; 1389 : 			return (iterator(_First._Ptr, this));

  00049	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0004c	89 08		 mov	 DWORD PTR [eax], ecx
  0004e	5e		 pop	 esi

; 1390 : 			}
; 1391 : 		}

  0004f	c9		 leave
  00050	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::erase
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@U?$pair@$$CBHPAVioBlockProperty@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@0@PAU?$pair@$$CBHPAVioBlockProperty@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<int const ,ioBlockProperty *> >,std::pair<int const ,ioBlockProperty *>,std::pair<int const ,ioBlockProperty *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@U?$pair@$$CBHPAVioBlockProperty@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@0@PAU?$pair@$$CBHPAVioBlockProperty@@@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@U?$pair@$$CBHPAVioBlockProperty@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@0@PAU?$pair@$$CBHPAVioBlockProperty@@@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::pair<int const ,ioBlockProperty *> >,std::pair<int const ,ioBlockProperty *>,std::pair<int const ,ioBlockProperty *> >, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN7@Cons_val@3
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN7@Cons_val@3:

; 281  : 	}

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Cons_val@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@U?$pair@$$CBHPAVioBlockProperty@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@0@PAU?$pair@$$CBHPAVioBlockProperty@@@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::pair<int const ,ioBlockProperty *> >,std::pair<int const ,ioBlockProperty *>,std::pair<int const ,ioBlockProperty *> >
_TEXT	ENDS
PUBLIC	?Destroy@ioBlockManager@@QAEXXZ			; ioBlockManager::Destroy
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockmanager.cpp
;	COMDAT ?Destroy@ioBlockManager@@QAEXXZ
_TEXT	SEGMENT
$T523084 = -4						; size = 4
_iter$515014 = -4					; size = 4
?Destroy@ioBlockManager@@QAEXXZ PROC			; ioBlockManager::Destroy, COMDAT
; _this$ = ecx

; 25   : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b d9		 mov	 ebx, ecx
  00008	57		 push	 edi

; 26   : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter )

  00009	8b 7b 1c	 mov	 edi, DWORD PTR [ebx+28]
  0000c	eb 13		 jmp	 SHORT $LN134@Destroy
$LL25@Destroy:

; 27   : 	{
; 28   : 		SAFEDELETE( *iter );

  0000e	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00010	85 c9		 test	 ecx, ecx
  00012	74 0a		 je	 SHORT $LN7@Destroy
  00014	8b 01		 mov	 eax, DWORD PTR [ecx]
  00016	6a 01		 push	 1
  00018	ff 50 04	 call	 DWORD PTR [eax+4]
  0001b	83 27 00	 and	 DWORD PTR [edi], 0
$LN7@Destroy:

; 26   : 	for( BlockList::iterator iter = m_BlockList.begin(); iter != m_BlockList.end(); ++iter )

  0001e	83 c7 04	 add	 edi, 4
$LN134@Destroy:
  00021	3b 7b 20	 cmp	 edi, DWORD PTR [ebx+32]
  00024	75 e8		 jne	 SHORT $LL25@Destroy

; 29   : 	}
; 30   : 	m_BlockList.clear();

  00026	8b 43 20	 mov	 eax, DWORD PTR [ebx+32]
  00029	8b 4b 1c	 mov	 ecx, DWORD PTR [ebx+28]
  0002c	50		 push	 eax
  0002d	51		 push	 ecx
  0002e	8d 45 fc	 lea	 eax, DWORD PTR $T523084[ebp]
  00031	50		 push	 eax
  00032	8d 4b 1c	 lea	 ecx, DWORD PTR [ebx+28]
  00035	e8 00 00 00 00	 call	 ?erase@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@@2@0@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::erase

; 31   : 
; 32   : 	for( BlockTempleteMap::iterator iter = m_BlockTempleteMap.begin(); iter != m_BlockTempleteMap.end(); ++iter )

  0003a	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  0003d	8b 30		 mov	 esi, DWORD PTR [eax]
  0003f	89 75 fc	 mov	 DWORD PTR _iter$515014[ebp], esi
  00042	3b f0		 cmp	 esi, eax
  00044	74 29		 je	 SHORT $LN2@Destroy
$LL87@Destroy:

; 33   : 	{
; 34   : 		SAFEDELETE( iter->second );

  00046	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  00049	85 ff		 test	 edi, edi
  0004b	74 12		 je	 SHORT $LN3@Destroy
  0004d	8b cf		 mov	 ecx, edi
  0004f	e8 00 00 00 00	 call	 ??1ioBlockProperty@@QAE@XZ ; ioBlockProperty::~ioBlockProperty
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0005a	83 66 10 00	 and	 DWORD PTR [esi+16], 0
  0005e	59		 pop	 ecx
$LN3@Destroy:

; 31   : 
; 32   : 	for( BlockTempleteMap::iterator iter = m_BlockTempleteMap.begin(); iter != m_BlockTempleteMap.end(); ++iter )

  0005f	8d 4d fc	 lea	 ecx, DWORD PTR _iter$515014[ebp]
  00062	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >,std::_Iterator_base0>::operator++
  00067	8b 75 fc	 mov	 esi, DWORD PTR _iter$515014[ebp]
  0006a	3b 73 10	 cmp	 esi, DWORD PTR [ebx+16]
  0006d	75 d7		 jne	 SHORT $LL87@Destroy
$LN2@Destroy:

; 35   : 	}
; 36   : 	m_BlockTempleteMap.clear();

  0006f	8d 4b 0c	 lea	 ecx, DWORD PTR [ebx+12]
  00072	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::clear
  00077	5f		 pop	 edi
  00078	5e		 pop	 esi
  00079	5b		 pop	 ebx

; 37   : }

  0007a	c9		 leave
  0007b	c3		 ret	 0
?Destroy@ioBlockManager@@QAEXXZ ENDP			; ioBlockManager::Destroy
_TEXT	ENDS
PUBLIC	?push_back@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAEXABQAVioBlock@@@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::push_back
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?push_back@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAEXABQAVioBlock@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAEXABQAVioBlock@@@Z PROC ; std::vector<ioBlock *,std::allocator<ioBlock *> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f8		 cmp	 edi, eax
  0000f	73 27		 jae	 SHORT $LN4@push_back
  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	3b cf		 cmp	 ecx, edi
  00015	77 21		 ja	 SHORT $LN4@push_back

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	2b f9		 sub	 edi, ecx
  00019	c1 ff 02	 sar	 edi, 2

; 980  : 			if (this->_Mylast == this->_Myend)

  0001c	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0001f	75 09		 jne	 SHORT $LN3@push_back

; 981  : 				_Reserve(1);

  00021	6a 01		 push	 1
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEXI@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Reserve
$LN3@push_back:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	85 c0		 test	 eax, eax
  0002f	74 20		 je	 SHORT $LN39@push_back
  00031	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00033	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00036	eb 17		 jmp	 SHORT $LN46@push_back
$LN4@push_back:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00038	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0003b	75 09		 jne	 SHORT $LN1@push_back

; 991  : 				_Reserve(1);

  0003d	6a 01		 push	 1
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEXI@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Reserve
$LN1@push_back:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00046	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00049	85 c0		 test	 eax, eax
  0004b	74 04		 je	 SHORT $LN39@push_back
  0004d	8b 0f		 mov	 ecx, DWORD PTR [edi]
$LN46@push_back:
  0004f	89 08		 mov	 DWORD PTR [eax], ecx
$LN39@push_back:

; 996  : 			++this->_Mylast;

  00051	83 46 04 04	 add	 DWORD PTR [esi+4], 4
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
?push_back@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAEXABQAVioBlock@@@Z ENDP ; std::vector<ioBlock *,std::allocator<ioBlock *> >::push_back
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Tidy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T523413 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1865 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1866 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 10		 mov	 edx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T523413[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::erase

; 1867 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	??$_Buynode@U?$pair@$$CBHPAVioBlockProperty@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVioBlockProperty@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Buynode<std::pair<int const ,ioBlockProperty *> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Buynode@U?$pair@$$CBHPAVioBlockProperty@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVioBlockProperty@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Buynode@U?$pair@$$CBHPAVioBlockProperty@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVioBlockProperty@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Buynode<std::pair<int const ,ioBlockProperty *> >, COMDAT
; _this$ = ecx

; 586  : 		_Nodeptr _Buynode(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f1		 mov	 esi, ecx

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

  00007	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Buynode

; 589  : 
; 590  : 		_TRY_BEGIN
; 591  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Wherenode)),
; 592  : 			_STD forward<_Valty>(_Val));

  0000c	ff 75 08	 push	 DWORD PTR __Val$[ebp]
  0000f	8b f8		 mov	 edi, eax
  00011	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  00014	50		 push	 eax
  00015	83 c6 0d	 add	 esi, 13			; 0000000dH
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@std@@U?$pair@$$CBHPAVioBlockProperty@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@0@PAU?$pair@$$CBHPAVioBlockProperty@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<int const ,ioBlockProperty *> >,std::pair<int const ,ioBlockProperty *>,std::pair<int const ,ioBlockProperty *> >
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 593  : 		_CATCH_ALL
; 594  : 		this->_Alnod.deallocate(_Wherenode, 1);
; 595  : 		_RERAISE;
; 596  : 		_CATCH_END
; 597  : 
; 598  : 		return (_Wherenode);

  00021	8b c7		 mov	 eax, edi
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi

; 599  : 		}

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??$_Buynode@U?$pair@$$CBHPAVioBlockProperty@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVioBlockProperty@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Buynode<std::pair<int const ,ioBlockProperty *> >
_TEXT	ENDS
PUBLIC	??_C@_0CJ@ILFBEIOE@CreateBlock?5Fail?$CI?$CFd?$CJ?5?3?5new?5Block@ ; `string'
PUBLIC	??_C@_0CJ@KGFNKFEM@CreateBlock?5Fail?$CI?$CFd?$CJ?5?3?5SceneNode@ ; `string'
PUBLIC	??_C@_0CJ@GOKFMCPG@CreateBlock?5Fail?$CI?$CFd?$CJ?5?3?5pProperty@ ; `string'
PUBLIC	?CreateBlock@ioBlockManager@@QAEPAVioBlock@@H_J@Z ; ioBlockManager::CreateBlock
EXTRN	?AddShadowRecvPass@ioBlock@@QAEXXZ:PROC		; ioBlock::AddShadowRecvPass
EXTRN	__imp_?SetLightApplyMask@ioEntityGroup@@QAEXK@Z:PROC
EXTRN	__imp_?SetEachEntityCull@ioEntityGroup@@QAEX_N@Z:PROC
EXTRN	??0ioBlock@@QAE@PAVioEntityGroup@@PAVioPlayMode@@PAVioBlockProperty@@_J@Z:PROC ; ioBlock::ioBlock
EXTRN	??0ioTileBlock@@QAE@PAVioEntityGroup@@PAVioPlayMode@@PAVioBlockProperty@@_J@Z:PROC ; ioTileBlock::ioTileBlock
EXTRN	??0ioFishingBlock@@QAE@PAVioEntityGroup@@PAVioPlayMode@@PAVioBlockProperty@@_J@Z:PROC ; ioFishingBlock::ioFishingBlock
EXTRN	?CreateEntityGrpAndSceneNode@ioPlayStage@@QAEPAVioEntityGroup@@ABVioHashString@@_N@Z:PROC ; ioPlayStage::CreateEntityGrpAndSceneNode
;	COMDAT ??_C@_0CJ@ILFBEIOE@CreateBlock?5Fail?$CI?$CFd?$CJ?5?3?5new?5Block@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\setting.h
CONST	SEGMENT
??_C@_0CJ@ILFBEIOE@CreateBlock?5Fail?$CI?$CFd?$CJ?5?3?5new?5Block@ DB 'Cr'
	DB	'eateBlock Fail(%d) : new Block == NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@KGFNKFEM@CreateBlock?5Fail?$CI?$CFd?$CJ?5?3?5SceneNode@
CONST	SEGMENT
??_C@_0CJ@KGFNKFEM@CreateBlock?5Fail?$CI?$CFd?$CJ?5?3?5SceneNode@ DB 'Cre'
	DB	'ateBlock Fail(%d) : SceneNode == NULL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@GOKFMCPG@CreateBlock?5Fail?$CI?$CFd?$CJ?5?3?5pProperty@
CONST	SEGMENT
??_C@_0CJ@GOKFMCPG@CreateBlock?5Fail?$CI?$CFd?$CJ?5?3?5pProperty@ DB 'Cre'
	DB	'ateBlock Fail(%d) : pProperty == NULL', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateBlock@ioBlockManager@@QAEPAVioBlock@@H_J@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateBlock@ioBlockManager@@QAEPAVioBlock@@H_J@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateBlock@ioBlockManager@@QAEPAVioBlock@@H_J@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateBlock@ioBlockManager@@QAEPAVioBlock@@H_J@Z$2
__ehfuncinfo$?CreateBlock@ioBlockManager@@QAEPAVioBlock@@H_J@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CreateBlock@ioBlockManager@@QAEPAVioBlock@@H_J@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockmanager.cpp
xdata$x	ENDS
;	COMDAT ?CreateBlock@ioBlockManager@@QAEPAVioBlock@@H_J@Z
_TEXT	SEGMENT
$T523532 = -16						; size = 4
$T523528 = -16						; size = 4
$T523524 = -16						; size = 4
_iter$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nCode$ = 8						; size = 4
_nUniqueIndex$ = 12					; size = 8
_pBlock$515569 = 16					; size = 4
?CreateBlock@ioBlockManager@@QAEPAVioBlock@@H_J@Z PROC	; ioBlockManager::CreateBlock, COMDAT
; _this$ = ecx

; 155  : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?CreateBlock@ioBlockManager@@QAEPAVioBlock@@H_J@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 156  : 	BlockTempleteMap::iterator iter = m_BlockTempleteMap.find( nCode );

  0000e	8d 45 08	 lea	 eax, DWORD PTR _nCode$[ebp]
  00011	50		 push	 eax
  00012	8d 45 f0	 lea	 eax, DWORD PTR _iter$[ebp]
  00015	50		 push	 eax
  00016	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00019	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::find

; 157  : 	if( iter != m_BlockTempleteMap.end() )

  0001e	8b 4d f0	 mov	 ecx, DWORD PTR _iter$[ebp]
  00021	3b 4e 10	 cmp	 ecx, DWORD PTR [esi+16]
  00024	0f 84 6e 01 00
	00		 je	 $LN1@CreateBloc@2

; 158  : 	{		
; 159  : 		ioBlockProperty* pProperty = iter->second;

  0002a	8b 59 10	 mov	 ebx, DWORD PTR [ecx+16]

; 160  : 		if( !pProperty )

  0002d	85 db		 test	 ebx, ebx
  0002f	75 0d		 jne	 SHORT $LN15@CreateBloc@2

; 161  : 		{
; 162  : 			LOG.PrintTimeAndLog(0, "CreateBlock Fail(%d) : pProperty == NULL", nCode );

  00031	ff 75 08	 push	 DWORD PTR _nCode$[ebp]
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@GOKFMCPG@CreateBlock?5Fail?$CI?$CFd?$CJ?5?3?5pProperty@

; 163  : 			return NULL;

  00039	e9 49 01 00 00	 jmp	 $LN62@CreateBloc@2
$LN15@CreateBloc@2:

; 164  : 		}
; 165  : 
; 166  : 		ioEntityGroup* pGrp = m_pStage->CreateEntityGrpAndSceneNode( pProperty->m_MeshFileName, true );

  0003e	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00041	6a 01		 push	 1
  00043	8d 43 34	 lea	 eax, DWORD PTR [ebx+52]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?CreateEntityGrpAndSceneNode@ioPlayStage@@QAEPAVioEntityGroup@@ABVioHashString@@_N@Z ; ioPlayStage::CreateEntityGrpAndSceneNode
  0004c	8b f8		 mov	 edi, eax

; 167  : 		if( !pGrp )

  0004e	85 ff		 test	 edi, edi
  00050	75 0d		 jne	 SHORT $LN14@CreateBloc@2

; 168  : 		{
; 169  : 			LOG.PrintTimeAndLog(0, "CreateBlock Fail(%d) : SceneNode == NULL", nCode );

  00052	ff 75 08	 push	 DWORD PTR _nCode$[ebp]
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@KGFNKFEM@CreateBlock?5Fail?$CI?$CFd?$CJ?5?3?5SceneNode@

; 170  : 			return NULL;

  0005a	e9 28 01 00 00	 jmp	 $LN62@CreateBloc@2
$LN14@CreateBloc@2:

; 171  : 		}
; 172  : 
; 173  : 		ioBlock* pBlock = NULL;
; 174  : 		switch( nCode / ioBlock::BT_DIVIDE )

  0005f	8b 45 08	 mov	 eax, DWORD PTR _nCode$[ebp]
  00062	99		 cdq
  00063	b9 40 42 0f 00	 mov	 ecx, 1000000		; 000f4240H
  00068	f7 f9		 idiv	 ecx
  0006a	48		 dec	 eax
  0006b	74 76		 je	 SHORT $LN11@CreateBloc@2
  0006d	48		 dec	 eax
  0006e	74 3f		 je	 SHORT $LN10@CreateBloc@2
  00070	48		 dec	 eax
  00071	0f 85 08 01 00
	00		 jne	 $LN8@CreateBloc@2

; 181  : 			break;
; 182  : 		case ioBlock::BT_FISHING:
; 183  : 			pBlock = new ioFishingBlock( pGrp, m_pStage->GetPlayMode(), pProperty, nUniqueIndex );

  00077	68 08 03 00 00	 push	 776			; 00000308H
  0007c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00081	59		 pop	 ecx
  00082	8b c8		 mov	 ecx, eax
  00084	89 4d f0	 mov	 DWORD PTR $T523532[ebp], ecx
  00087	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  0008e	85 c9		 test	 ecx, ecx
  00090	74 19		 je	 SHORT $LN23@CreateBloc@2
  00092	ff 75 10	 push	 DWORD PTR _nUniqueIndex$[ebp+4]
  00095	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00098	ff 75 0c	 push	 DWORD PTR _nUniqueIndex$[ebp]
  0009b	8b 80 10 01 00
	00		 mov	 eax, DWORD PTR [eax+272]
  000a1	53		 push	 ebx
  000a2	50		 push	 eax
  000a3	57		 push	 edi
  000a4	e8 00 00 00 00	 call	 ??0ioFishingBlock@@QAE@PAVioEntityGroup@@PAVioPlayMode@@PAVioBlockProperty@@_J@Z ; ioFishingBlock::ioFishingBlock
  000a9	eb 68		 jmp	 SHORT $LN19@CreateBloc@2
$LN23@CreateBloc@2:
  000ab	33 c0		 xor	 eax, eax

; 184  : 			break;

  000ad	eb 64		 jmp	 SHORT $LN19@CreateBloc@2
$LN10@CreateBloc@2:

; 178  : 			break;
; 179  : 		case ioBlock::BT_TILE:
; 180  : 			pBlock = new ioTileBlock( pGrp, m_pStage->GetPlayMode(), pProperty, nUniqueIndex );

  000af	68 08 03 00 00	 push	 776			; 00000308H
  000b4	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000b9	59		 pop	 ecx
  000ba	8b c8		 mov	 ecx, eax
  000bc	89 4d f0	 mov	 DWORD PTR $T523528[ebp], ecx
  000bf	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000c6	85 c9		 test	 ecx, ecx
  000c8	74 e1		 je	 SHORT $LN23@CreateBloc@2
  000ca	ff 75 10	 push	 DWORD PTR _nUniqueIndex$[ebp+4]
  000cd	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000d0	ff 75 0c	 push	 DWORD PTR _nUniqueIndex$[ebp]
  000d3	8b 80 10 01 00
	00		 mov	 eax, DWORD PTR [eax+272]
  000d9	53		 push	 ebx
  000da	50		 push	 eax
  000db	57		 push	 edi
  000dc	e8 00 00 00 00	 call	 ??0ioTileBlock@@QAE@PAVioEntityGroup@@PAVioPlayMode@@PAVioBlockProperty@@_J@Z ; ioTileBlock::ioTileBlock
  000e1	eb 30		 jmp	 SHORT $LN19@CreateBloc@2
$LN11@CreateBloc@2:

; 175  : 		{
; 176  : 		case ioBlock::BT_DEFAULT:
; 177  : 			pBlock = new ioBlock( pGrp, m_pStage->GetPlayMode(), pProperty, nUniqueIndex );

  000e3	68 08 03 00 00	 push	 776			; 00000308H
  000e8	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000ed	59		 pop	 ecx
  000ee	8b c8		 mov	 ecx, eax
  000f0	89 4d f0	 mov	 DWORD PTR $T523524[ebp], ecx
  000f3	33 c0		 xor	 eax, eax
  000f5	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  000f8	3b c8		 cmp	 ecx, eax
  000fa	74 17		 je	 SHORT $LN19@CreateBloc@2
  000fc	ff 75 10	 push	 DWORD PTR _nUniqueIndex$[ebp+4]
  000ff	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00102	ff 75 0c	 push	 DWORD PTR _nUniqueIndex$[ebp]
  00105	8b 80 10 01 00
	00		 mov	 eax, DWORD PTR [eax+272]
  0010b	53		 push	 ebx
  0010c	50		 push	 eax
  0010d	57		 push	 edi
  0010e	e8 00 00 00 00	 call	 ??0ioBlock@@QAE@PAVioEntityGroup@@PAVioPlayMode@@PAVioBlockProperty@@_J@Z ; ioBlock::ioBlock
$LN19@CreateBloc@2:
  00113	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00117	89 45 10	 mov	 DWORD PTR _pBlock$515569[ebp], eax

; 185  : 		}
; 186  : 		
; 187  : 		if( pBlock )

  0011a	85 c0		 test	 eax, eax
  0011c	74 61		 je	 SHORT $LN8@CreateBloc@2

; 188  : 		{
; 189  : 			pGrp->SetLightReceiveType( LRT_ALL_REAL_TIME );

  0011e	8b 07		 mov	 eax, DWORD PTR [edi]
  00120	6a 00		 push	 0
  00122	8b cf		 mov	 ecx, edi
  00124	ff 50 1c	 call	 DWORD PTR [eax+28]

; 190  : 			pGrp->SetEachEntityCull( true );

  00127	6a 01		 push	 1
  00129	8b cf		 mov	 ecx, edi
  0012b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetEachEntityCull@ioEntityGroup@@QAEX_N@Z

; 191  : 			pGrp->SetLightApplyMask( APPLY_SECOND_MAIN_LIGHT );

  00131	6a 02		 push	 2
  00133	8b cf		 mov	 ecx, edi
  00135	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetLightApplyMask@ioEntityGroup@@QAEXK@Z

; 192  : 			
; 193  : 			switch( pProperty->GetShadowType() )

  0013b	8b 5b 0c	 mov	 ebx, DWORD PTR [ebx+12]
  0013e	4b		 dec	 ebx
  0013f	74 23		 je	 SHORT $LN5@CreateBloc@2
  00141	4b		 dec	 ebx
  00142	75 2a		 jne	 SHORT $LN6@CreateBloc@2

; 198  : 				}
; 199  : 				break;
; 200  : 			case ioBlockProperty::ST_RECIVE:
; 201  : 				{					
; 202  : 					if( Setting::UseShadow() )
; 203  : 						pBlock->SetShadowRecvEnable( true );

  00144	8b 4d 10	 mov	 ecx, DWORD PTR _pBlock$515569[ebp]
  00147	38 1d 01 00 00
	00		 cmp	 BYTE PTR ?m_Option@Setting@@1USettingOption@@A+1, bl
  0014d	74 04		 je	 SHORT $LN3@CreateBloc@2
  0014f	6a 01		 push	 1

; 204  : 					else

  00151	eb 02		 jmp	 SHORT $LN63@CreateBloc@2
$LN3@CreateBloc@2:

; 205  : 						pBlock->SetShadowRecvEnable( false );

  00153	6a 00		 push	 0
$LN63@CreateBloc@2:
  00155	e8 00 00 00 00	 call	 ?SetShadowRecvEnable@ioBlock@@QAEX_N@Z ; ioBlock::SetShadowRecvEnable

; 206  : 
; 207  : 					pBlock->AddShadowRecvPass();

  0015a	8b 4d 10	 mov	 ecx, DWORD PTR _pBlock$515569[ebp]
  0015d	e8 00 00 00 00	 call	 ?AddShadowRecvPass@ioBlock@@QAEXXZ ; ioBlock::AddShadowRecvPass

; 208  : 				}
; 209  : 				break;

  00162	eb 0a		 jmp	 SHORT $LN6@CreateBloc@2
$LN5@CreateBloc@2:

; 194  : 			{
; 195  : 			case ioBlockProperty::ST_CAST:
; 196  : 				{
; 197  : 					pBlock->SetShadowCastEnable( true ); 

  00164	8b 4d 10	 mov	 ecx, DWORD PTR _pBlock$515569[ebp]
  00167	6a 01		 push	 1
  00169	e8 00 00 00 00	 call	 ?SetShadowCastEnable@ioBlock@@QAEX_N@Z ; ioBlock::SetShadowCastEnable
$LN6@CreateBloc@2:

; 210  : 			}
; 211  : 
; 212  : 			m_BlockList.push_back( pBlock );

  0016e	8d 45 10	 lea	 eax, DWORD PTR _pBlock$515569[ebp]
  00171	50		 push	 eax
  00172	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  00175	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAEXABQAVioBlock@@@Z ; std::vector<ioBlock *,std::allocator<ioBlock *> >::push_back

; 213  : 			return pBlock;

  0017a	8b 45 10	 mov	 eax, DWORD PTR _pBlock$515569[ebp]
  0017d	eb 1b		 jmp	 SHORT $LN17@CreateBloc@2
$LN8@CreateBloc@2:

; 214  : 		}
; 215  : 		else
; 216  : 		{
; 217  : 			LOG.PrintTimeAndLog(0, "CreateBlock Fail(%d) : new Block == NULL", nCode );

  0017f	ff 75 08	 push	 DWORD PTR _nCode$[ebp]
  00182	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@ILFBEIOE@CreateBlock?5Fail?$CI?$CFd?$CJ?5?3?5new?5Block@
$LN62@CreateBloc@2:
  00187	6a 00		 push	 0
  00189	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  0018f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  00195	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@CreateBloc@2:

; 218  : 		}
; 219  : 	}
; 220  : 
; 221  : 	return NULL;

  00198	33 c0		 xor	 eax, eax
$LN17@CreateBloc@2:

; 222  : }

  0019a	e8 00 00 00 00	 call	 __EH_epilog3
  0019f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateBlock@ioBlockManager@@QAEPAVioBlock@@H_J@Z$2:
  00000	ff 75 f0	 push	 DWORD PTR $T523532[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__unwindfunclet$?CreateBlock@ioBlockManager@@QAEPAVioBlock@@H_J@Z$1:
  0000a	ff 75 f0	 push	 DWORD PTR $T523528[ebp]
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	59		 pop	 ecx
  00013	c3		 ret	 0
__unwindfunclet$?CreateBlock@ioBlockManager@@QAEPAVioBlock@@H_J@Z$0:
  00014	ff 75 f0	 push	 DWORD PTR $T523524[ebp]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001c	59		 pop	 ecx
  0001d	c3		 ret	 0
__ehhandler$?CreateBlock@ioBlockManager@@QAEPAVioBlock@@H_J@Z:
  0001e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00022	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00025	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00028	33 c8		 xor	 ecx, eax
  0002a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateBlock@ioBlockManager@@QAEPAVioBlock@@H_J@Z
  00034	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateBlock@ioBlockManager@@QAEPAVioBlock@@H_J@Z ENDP	; ioBlockManager::CreateBlock
PUBLIC	??1?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::~_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T523733 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::~_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >, COMDAT
; _this$ = ecx

; 790  : 		{	// destroy tree

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 791  : 		_Tidy();

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	8d 45 ec	 lea	 eax, DWORD PTR $T523733[ebp]
  0001f	50		 push	 eax
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::erase

; 792  : 		}

  00027	ff 76 04	 push	 DWORD PTR [esi+4]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	e8 00 00 00 00	 call	 __EH_epilog3
  00035	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::~_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >
__ehhandler$??1?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::~_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >
PUBLIC	??$insert@U?$pair@$$CBHPAVioBlockProperty@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBHPAVioBlockProperty@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::insert<std::pair<int const ,ioBlockProperty *> >
; Function compile flags: /Ogsp
;	COMDAT ??$insert@U?$pair@$$CBHPAVioBlockProperty@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBHPAVioBlockProperty@@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@$$CBHPAVioBlockProperty@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBHPAVioBlockProperty@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::insert<std::pair<int const ,ioBlockProperty *> >, COMDAT
; _this$ = ecx

; 753  : 		_Pairib insert(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 754  : 		{	// try to insert node with value _Val, favoring right side
; 755  : 		return (_Linsert(this->_Buynode(_STD forward<_Valty>(_Val)),
; 756  : 			false));

  00004	6a 00		 push	 0
  00006	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBHPAVioBlockProperty@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVioBlockProperty@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Buynode<std::pair<int const ,ioBlockProperty *> >
  00010	50		 push	 eax
  00011	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  00014	8b ce		 mov	 ecx, esi
  00016	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Linsert
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	5e		 pop	 esi

; 757  : 		}

  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
??$insert@U?$pair@$$CBHPAVioBlockProperty@@@std@@@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBHPAVioBlockProperty@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::insert<std::pair<int const ,ioBlockProperty *> >
_TEXT	ENDS
PUBLIC	??1?$map@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@@std@@QAE@XZ ; std::map<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> > >::~map<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> > >
; Function compile flags: /Ogsp
;	COMDAT ??1?$map@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@@std@@QAE@XZ PROC ; std::map<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> > >::~map<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> > >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::~_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >
??1?$map@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> > >::~map<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> > >
_TEXT	ENDS
PUBLIC	??_7ioBlockManager@@6B@				; ioBlockManager::`vftable'
PUBLIC	??1ioBlockManager@@UAE@XZ			; ioBlockManager::~ioBlockManager
PUBLIC	??_R4ioBlockManager@@6B@			; ioBlockManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioBlockManager@@@8			; ioBlockManager `RTTI Type Descriptor'
PUBLIC	??_R3ioBlockManager@@8				; ioBlockManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioBlockManager@@8				; ioBlockManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioBlockManager@@8			; ioBlockManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@?$Singleton@VioBlockManager@@@@8	; Singleton<ioBlockManager>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AV?$Singleton@VioBlockManager@@@@@8	; Singleton<ioBlockManager> `RTTI Type Descriptor'
PUBLIC	??_R3?$Singleton@VioBlockManager@@@@8		; Singleton<ioBlockManager>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$Singleton@VioBlockManager@@@@8		; Singleton<ioBlockManager>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$Singleton@VioBlockManager@@@@8	; Singleton<ioBlockManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_EioBlockManager@@UAEPAXI@Z:PROC		; ioBlockManager::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$Singleton@VioBlockManager@@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
rdata$r	SEGMENT
??_R1A@?0A@EA@?$Singleton@VioBlockManager@@@@8 DD FLAT:??_R0?AV?$Singleton@VioBlockManager@@@@@8 ; Singleton<ioBlockManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioBlockManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$Singleton@VioBlockManager@@@@8
rdata$r	SEGMENT
??_R2?$Singleton@VioBlockManager@@@@8 DD FLAT:??_R1A@?0A@EA@?$Singleton@VioBlockManager@@@@8 ; Singleton<ioBlockManager>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$Singleton@VioBlockManager@@@@8
rdata$r	SEGMENT
??_R3?$Singleton@VioBlockManager@@@@8 DD 00H		; Singleton<ioBlockManager>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$Singleton@VioBlockManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$Singleton@VioBlockManager@@@@@8
_DATA	SEGMENT
??_R0?AV?$Singleton@VioBlockManager@@@@@8 DD FLAT:??_7type_info@@6B@ ; Singleton<ioBlockManager> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$Singleton@VioBlockManager@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@?$Singleton@VioBlockManager@@@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$Singleton@VioBlockManager@@@@8 DD FLAT:??_R0?AV?$Singleton@VioBlockManager@@@@@8 ; Singleton<ioBlockManager>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioBlockManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioBlockManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioBlockManager@@8 DD FLAT:??_R0?AVioBlockManager@@@8 ; ioBlockManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioBlockManager@@8
rdata$r	ENDS
;	COMDAT ??_R2ioBlockManager@@8
rdata$r	SEGMENT
??_R2ioBlockManager@@8 DD FLAT:??_R1A@?0A@EA@ioBlockManager@@8 ; ioBlockManager::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@?$Singleton@VioBlockManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R3ioBlockManager@@8
rdata$r	SEGMENT
??_R3ioBlockManager@@8 DD 00H				; ioBlockManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioBlockManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioBlockManager@@@8
_DATA	SEGMENT
??_R0?AVioBlockManager@@@8 DD FLAT:??_7type_info@@6B@	; ioBlockManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioBlockManager@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioBlockManager@@6B@
rdata$r	SEGMENT
??_R4ioBlockManager@@6B@ DD 00H				; ioBlockManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioBlockManager@@@8
	DD	FLAT:??_R3ioBlockManager@@8
rdata$r	ENDS
;	COMDAT ??_7ioBlockManager@@6B@
CONST	SEGMENT
??_7ioBlockManager@@6B@ DD FLAT:??_R4ioBlockManager@@6B@ ; ioBlockManager::`vftable'
	DD	FLAT:??_EioBlockManager@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ioBlockManager@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioBlockManager@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ioBlockManager@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1ioBlockManager@@UAE@XZ$2
__ehfuncinfo$??1ioBlockManager@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1ioBlockManager@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockmanager.cpp
xdata$x	ENDS
;	COMDAT ??1ioBlockManager@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioBlockManager@@UAE@XZ PROC				; ioBlockManager::~ioBlockManager, COMDAT
; _this$ = ecx

; 20   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioBlockManager@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioBlockManager@@6B@
  00017	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2

; 21   : 	Destroy();

  0001e	e8 00 00 00 00	 call	 ?Destroy@ioBlockManager@@QAEXXZ ; ioBlockManager::Destroy

; 22   : }

  00023	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  00026	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0002a	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@IAEXXZ ; std::vector<ioBlock *,std::allocator<ioBlock *> >::_Tidy
  0002f	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00032	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00036	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::~_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >
  0003b	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioBlockManager@@@@1PAVioBlockManager@@A, 0 ; Singleton<ioBlockManager>::ms_Singleton
  00042	e8 00 00 00 00	 call	 __EH_epilog3
  00047	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioBlockManager@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioBlockManager@@@@QAE@XZ ; Singleton<ioBlockManager>::~Singleton<ioBlockManager>
__unwindfunclet$??1ioBlockManager@@UAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00011	e9 00 00 00 00	 jmp	 ??1?$map@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@@std@@QAE@XZ
__unwindfunclet$??1ioBlockManager@@UAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0001c	e9 00 00 00 00	 jmp	 ??1?$vector@PAVioBlock@@V?$allocator@PAVioBlock@@@std@@@std@@QAE@XZ ; std::vector<ioBlock *,std::allocator<ioBlock *> >::~vector<ioBlock *,std::allocator<ioBlock *> >
__ehhandler$??1ioBlockManager@@UAE@XZ:
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioBlockManager@@UAE@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioBlockManager@@UAE@XZ ENDP				; ioBlockManager::~ioBlockManager
PUBLIC	??_C@_0BD@DELPHPHH@block_start_height?$AA@	; `string'
PUBLIC	??_C@_0CN@JMDHHOJJ@Block?5Manager?5Load?5Fail?5?9?5?$FLBlock@ ; `string'
PUBLIC	??_C@_04NDFOBODE@code?$AA@			; `string'
PUBLIC	??_C@_09HPGKAPKP@block_max?$AA@			; `string'
PUBLIC	?Initialize@ioBlockManager@@QAEXPAVioPlayStage@@@Z ; ioBlockManager::Initialize
EXTRN	__imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z:PROC
EXTRN	__imp_?LoadInt@ioINILoader@@QAEHPBDH@Z:PROC
;	COMDAT ??_C@_0BD@DELPHPHH@block_start_height?$AA@
CONST	SEGMENT
??_C@_0BD@DELPHPHH@block_start_height?$AA@ DB 'block_start_height', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@JMDHHOJJ@Block?5Manager?5Load?5Fail?5?9?5?$FLBlock@
CONST	SEGMENT
??_C@_0CN@JMDHHOJJ@Block?5Manager?5Load?5Fail?5?9?5?$FLBlock@ DB 'Block M'
	DB	'anager Load Fail - [Block%d] - Code 0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04NDFOBODE@code?$AA@
CONST	SEGMENT
??_C@_04NDFOBODE@code?$AA@ DB 'code', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09HPGKAPKP@block_max?$AA@
CONST	SEGMENT
??_C@_09HPGKAPKP@block_max?$AA@ DB 'block_max', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Initialize@ioBlockManager@@QAEXPAVioPlayStage@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Initialize@ioBlockManager@@QAEXPAVioPlayStage@@@Z$0
__ehfuncinfo$?Initialize@ioBlockManager@@QAEXPAVioPlayStage@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Initialize@ioBlockManager@@QAEXPAVioPlayStage@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?Initialize@ioBlockManager@@QAEXPAVioPlayStage@@@Z
_TEXT	SEGMENT
$T523814 = -1232					; size = 8
_nCode$515349 = -1224					; size = 4
tv1203 = -1220						; size = 4
tv3948 = -1216						; size = 4
_kLoader$ = -1212					; size = 912
_szBuf$ = -300						; size = 260
___encStr$515194 = -40					; size = 8
__t$524251 = -28					; size = 5
__t$524068 = -28					; size = 7
$T523815 = -28						; size = 8
__$EHRec$ = -12						; size = 12
_pStage$ = 8						; size = 4
?Initialize@ioBlockManager@@QAEXPAVioPlayStage@@@Z PROC	; ioBlockManager::Initialize, COMDAT
; _this$ = ecx

; 50   : {

  00000	68 c4 04 00 00	 push	 1220			; 000004c4H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?Initialize@ioBlockManager@@QAEXPAVioPlayStage@@@Z
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS

; 51   : 	m_pStage			= pStage;

  0000f	8b 45 08	 mov	 eax, DWORD PTR _pStage$[ebp]
  00012	8b f1		 mov	 esi, ecx

; 52   : 	m_dwPreUpdatedTime	= 0;	

  00014	33 db		 xor	 ebx, ebx

; 53   : 
; 54   : 	char szBuf[MAX_PATH];
; 55   : 
; 56   : 	ioINILoader_e kLoader( "config/housing/sp2_block.ini" );

  00016	6a 07		 push	 7
  00018	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0001b	89 5e 2c	 mov	 DWORD PTR [esi+44], ebx
  0001e	c7 85 94 fe ff
	ff 8e 83 85 8c	 mov	 DWORD PTR _kLoader$[ebp+848], -1937407090 ; 8c85838eH
  00028	c7 85 98 fe ff
	ff 84 8b c4 82	 mov	 DWORD PTR _kLoader$[ebp+852], -2101048444 ; 82c48b84H
  00032	c7 85 9c fe ff
	ff 82 99 98 83	 mov	 DWORD PTR _kLoader$[ebp+856], -2087151230 ; 83989982H
  0003c	c7 85 a0 fe ff
	ff 83 8b c4 99	 mov	 DWORD PTR _kLoader$[ebp+860], -1715172477 ; 99c48b83H
  00046	c7 85 a4 fe ff
	ff 9d de b4 88	 mov	 DWORD PTR _kLoader$[ebp+864], -2001412451 ; 88b4de9dH
  00050	c7 85 a8 fe ff
	ff 81 83 88 81	 mov	 DWORD PTR _kLoader$[ebp+868], -2121759871 ; 81888381H
  0005a	c7 85 ac fe ff
	ff c3 85 85 83	 mov	 DWORD PTR _kLoader$[ebp+872], -2088401469 ; 838585c3H
  00064	8d 85 94 fe ff
	ff		 lea	 eax, DWORD PTR _kLoader$[ebp+848]
  0006a	88 9d b0 fe ff
	ff		 mov	 BYTE PTR _kLoader$[ebp+876], bl
  00070	59		 pop	 ecx
  00071	bf ed ec eb ea	 mov	 edi, -353637139		; eaebecedH
$LL215@Initialize:
  00076	31 38		 xor	 DWORD PTR [eax], edi
  00078	83 c0 04	 add	 eax, 4
  0007b	49		 dec	 ecx
  0007c	75 f8		 jne	 SHORT $LL215@Initialize
  0007e	6a 01		 push	 1
  00080	8d 85 94 fe ff
	ff		 lea	 eax, DWORD PTR _kLoader$[ebp+848]
  00086	50		 push	 eax
  00087	8d 8d 44 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@PBD_N@Z

; 57   : 	kLoader.SetTitle_e( "common" );

  00093	6a 04		 push	 4
  00095	c7 45 e4 8e 83
	86 87		 mov	 DWORD PTR __t$524068[ebp], -2021227634 ; 8786838eH
  0009c	31 7d e4	 xor	 DWORD PTR __t$524068[ebp], edi
  0009f	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  000a2	66 c7 45 e8 82
	82		 mov	 WORD PTR __t$524068[ebp+4], 33410 ; 00008282H
  000a8	88 5d ea	 mov	 BYTE PTR __t$524068[ebp+6], bl
  000ab	58		 pop	 eax
$LL318@Initialize:
  000ac	8b c8		 mov	 ecx, eax
  000ae	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  000b4	79 05		 jns	 SHORT $LN480@Initialize
  000b6	49		 dec	 ecx
  000b7	83 c9 fc	 or	 ecx, -4			; fffffffcH
  000ba	41		 inc	 ecx
$LN480@Initialize:
  000bb	b2 ed		 mov	 dl, -19			; ffffffedH
  000bd	2a d1		 sub	 dl, cl
  000bf	30 54 05 e4	 xor	 BYTE PTR __t$524068[ebp+eax], dl
  000c3	40		 inc	 eax
  000c4	83 f8 06	 cmp	 eax, 6
  000c7	7c e3		 jl	 SHORT $LL318@Initialize
  000c9	8d 45 e4	 lea	 eax, DWORD PTR __t$524068[ebp]
  000cc	50		 push	 eax
  000cd	8d 8d 44 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 58   : 
; 59   : 	int nMax = kLoader.LoadInt( "block_max", 0 );

  000d9	53		 push	 ebx
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_09HPGKAPKP@block_max?$AA@
  000df	8d 8d 44 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 60   : 	for( int i = 0; i < nMax; ++i )

  000eb	3b c3		 cmp	 eax, ebx
  000ed	0f 8e fd 00 00
	00		 jle	 $LN103@Initialize

; 57   : 	kLoader.SetTitle_e( "common" );

  000f3	c7 85 40 fb ff
	ff 01 00 00 00	 mov	 DWORD PTR tv3948[ebp], 1
  000fd	89 85 3c fb ff
	ff		 mov	 DWORD PTR tv1203[ebp], eax
$LN105@Initialize:

; 61   : 	{
; 62   : 		sprintf_s_e( szBuf, "block%d", i + 1 );

  00103	6a 04		 push	 4
  00105	c7 45 d8 8f 80
	84 89		 mov	 DWORD PTR ___encStr$515194[ebp], -1987805041 ; 8984808fH
  0010c	31 7d d8	 xor	 DWORD PTR ___encStr$515194[ebp], edi
  0010f	c7 45 dc 86 c9
	8f 00		 mov	 DWORD PTR ___encStr$515194[ebp+4], 9423238 ; 008fc986H
  00116	58		 pop	 eax
$LL326@Initialize:
  00117	8b c8		 mov	 ecx, eax
  00119	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0011f	79 05		 jns	 SHORT $LN481@Initialize
  00121	49		 dec	 ecx
  00122	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00125	41		 inc	 ecx
$LN481@Initialize:
  00126	b2 ed		 mov	 dl, -19			; ffffffedH
  00128	2a d1		 sub	 dl, cl
  0012a	30 54 05 d8	 xor	 BYTE PTR ___encStr$515194[ebp+eax], dl
  0012e	40		 inc	 eax
  0012f	83 f8 07	 cmp	 eax, 7
  00132	7c e3		 jl	 SHORT $LL326@Initialize
  00134	ff b5 40 fb ff
	ff		 push	 DWORD PTR tv3948[ebp]
  0013a	8d 45 d8	 lea	 eax, DWORD PTR ___encStr$515194[ebp]
  0013d	50		 push	 eax
  0013e	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00144	50		 push	 eax
  00145	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ ; sprintf_s<260>
  0014a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 63   : 		kLoader.SetTitle( szBuf );

  0014d	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00153	50		 push	 eax
  00154	8d 8d 44 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  0015a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 64   : 
; 65   : 		int nCode = kLoader.LoadInt( "code", 0 );

  00160	53		 push	 ebx
  00161	68 00 00 00 00	 push	 OFFSET ??_C@_04NDFOBODE@code?$AA@
  00166	8d 8d 44 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  0016c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z
  00172	89 85 38 fb ff
	ff		 mov	 DWORD PTR _nCode$515349[ebp], eax

; 66   : 		if( nCode == 0 )

  00178	3b c3		 cmp	 eax, ebx

; 67   : 		{
; 68   : 			LOG.PrintTimeAndLog(0, "Block Manager Load Fail - [Block%d] - Code 0", i + 1 );
; 69   : 			continue;

  0017a	74 47		 je	 SHORT $LN2@Initialize

; 70   : 		}
; 71   : 
; 72   : 		ioBlockProperty* pProperty = CreateBlockTemplete( kLoader, nCode );

  0017c	50		 push	 eax
  0017d	8d 85 44 fb ff
	ff		 lea	 eax, DWORD PTR _kLoader$[ebp]
  00183	50		 push	 eax
  00184	8b ce		 mov	 ecx, esi
  00186	e8 00 00 00 00	 call	 ?CreateBlockTemplete@ioBlockManager@@IAEPAVioBlockProperty@@AAVioINILoader@@H@Z ; ioBlockManager::CreateBlockTemplete

; 73   : 		if( pProperty )

  0018b	3b c3		 cmp	 eax, ebx
  0018d	74 34		 je	 SHORT $LN2@Initialize

; 74   : 		{
; 75   : 			pProperty->SetCode( nCode );

  0018f	8b 8d 38 fb ff
	ff		 mov	 ecx, DWORD PTR _nCode$515349[ebp]
  00195	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 76   : 			m_BlockTempleteMap.insert( BlockTempleteMap::value_type( nCode, pProperty ) );

  00198	89 85 34 fb ff
	ff		 mov	 DWORD PTR $T523814[ebp+4], eax
  0019e	53		 push	 ebx
  0019f	8d 85 30 fb ff
	ff		 lea	 eax, DWORD PTR $T523814[ebp]
  001a5	89 8d 30 fb ff
	ff		 mov	 DWORD PTR $T523814[ebp], ecx
  001ab	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  001ae	50		 push	 eax
  001af	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBHPAVioBlockProperty@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAVioBlockProperty@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Buynode<std::pair<int const ,ioBlockProperty *> >
  001b4	50		 push	 eax
  001b5	8d 45 e4	 lea	 eax, DWORD PTR $T523815[ebp]
  001b8	50		 push	 eax
  001b9	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  001bc	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Linsert

; 77   : 		}
; 78   : 		else

  001c1	eb 1b		 jmp	 SHORT $LN104@Initialize
$LN2@Initialize:

; 79   : 		{
; 80   : 			LOG.PrintTimeAndLog(0, "Block Manager Load Fail - [Block%d] - Code 0", i + 1 );

  001c3	ff b5 40 fb ff
	ff		 push	 DWORD PTR tv3948[ebp]
  001c9	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@JMDHHOJJ@Block?5Manager?5Load?5Fail?5?9?5?$FLBlock@
  001ce	53		 push	 ebx
  001cf	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  001d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  001db	83 c4 10	 add	 esp, 16			; 00000010H
$LN104@Initialize:

; 60   : 	for( int i = 0; i < nMax; ++i )

  001de	ff 85 40 fb ff
	ff		 inc	 DWORD PTR tv3948[ebp]
  001e4	ff 8d 3c fb ff
	ff		 dec	 DWORD PTR tv1203[ebp]
  001ea	0f 85 13 ff ff
	ff		 jne	 $LN105@Initialize
$LN103@Initialize:

; 81   : 		}
; 82   : 	}
; 83   : 
; 84   : 	kLoader.SetTitle_e( "unit" );

  001f0	8d 45 e4	 lea	 eax, DWORD PTR __t$524251[ebp]
  001f3	c7 45 e4 98 82
	82 9e		 mov	 DWORD PTR __t$524251[ebp], -1635614056 ; 9e828298H
  001fa	31 7d e4	 xor	 DWORD PTR __t$524251[ebp], edi
  001fd	50		 push	 eax
  001fe	8d 8d 44 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00204	88 5d e8	 mov	 BYTE PTR __t$524251[ebp+4], bl
  00207	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 85   : 	m_fBlockStartHeight	= kLoader.LoadFloat( "block_start_height", 0.0f );

  0020d	0f 57 c0	 xorps	 xmm0, xmm0
  00210	51		 push	 ecx
  00211	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00216	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DELPHPHH@block_start_height?$AA@
  0021b	8d 8d 44 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00221	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z
  00227	d9 5e 34	 fstp	 DWORD PTR [esi+52]

; 86   : }

  0022a	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0022e	8d 8d 44 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00234	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
  0023a	e8 00 00 00 00	 call	 __EH_epilog3_GS
  0023f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Initialize@ioBlockManager@@QAEXPAVioPlayStage@@@Z$0:
  00000	8d 8d 44 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1ioINILoader_e@@QAE@XZ
__ehhandler$?Initialize@ioBlockManager@@QAEXPAVioPlayStage@@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 2c fb ff
	ff		 mov	 ecx, DWORD PTR [edx-1236]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Initialize@ioBlockManager@@QAEXPAVioPlayStage@@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Initialize@ioBlockManager@@QAEXPAVioPlayStage@@@Z ENDP	; ioBlockManager::Initialize
PUBLIC	??0?$map@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@@std@@QAE@XZ ; std::map<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> > >::map<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$map@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T524410 = -8						; size = 4
$T524412 = -8						; size = 4
$T524399 = -1						; size = 1
??0?$map@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@@std@@QAE@XZ PROC ; std::map<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> > >::map<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> > >, COMDAT
; _this$ = ecx

; 106  : 		{	// construct empty map from defaults

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	51		 push	 ecx
  00007	89 65 f8	 mov	 DWORD PTR $T524412[ebp], esp
  0000a	8d 45 ff	 lea	 eax, DWORD PTR $T524399[ebp]
  0000d	89 65 f8	 mov	 DWORD PTR $T524410[ebp], esp
  00010	50		 push	 eax
  00011	8b f1		 mov	 esi, ecx
  00013	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >

; 107  : 		}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c9		 leave
  0001c	c3		 ret	 0
??0?$map@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> > >::map<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> > >
_TEXT	ENDS
PUBLIC	__real@3f490fdb
PUBLIC	??0ioBlockManager@@QAE@XZ			; ioBlockManager::ioBlockManager
EXTRN	_D3DXQuaternionRotationYawPitchRoll@16:PROC
;	COMDAT __real@3f490fdb
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\veryoftenusedefine.h
CONST	SEGMENT
__real@3f490fdb DD 03f490fdbr			; 0.785398
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ioBlockManager@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioBlockManager@@QAE@XZ$0
__ehfuncinfo$??0ioBlockManager@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ioBlockManager@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockmanager.cpp
xdata$x	ENDS
;	COMDAT ??0ioBlockManager@@QAE@XZ
_TEXT	SEGMENT
$T524443 = -24						; size = 4
$T524455 = -24						; size = 4
_this$ = -20						; size = 4
$T524451 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??0ioBlockManager@@QAE@XZ PROC				; ioBlockManager::ioBlockManager, COMDAT
; _this$ = ecx

; 15   : {

  00000	6a 0c		 push	 12			; 0000000cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioBlockManager@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00011	8b c6		 mov	 eax, esi
  00013	a3 00 00 00 00	 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioBlockManager@@@@1PAVioBlockManager@@A, eax ; Singleton<ioBlockManager>::ms_Singleton
  00018	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0001b	51		 push	 ecx
  0001c	89 65 e8	 mov	 DWORD PTR $T524455[ebp], esp
  0001f	33 ff		 xor	 edi, edi
  00021	8d 45 f3	 lea	 eax, DWORD PTR $T524451[ebp]
  00024	89 65 e8	 mov	 DWORD PTR $T524443[ebp], esp
  00027	50		 push	 eax
  00028	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  0002b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioBlockManager@@6B@
  00031	89 7e 04	 mov	 DWORD PTR [esi+4], edi
  00034	89 7e 08	 mov	 DWORD PTR [esi+8], edi
  00037	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@HPAVioBlockProperty@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAVioBlockProperty@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >::_Tree_val<std::_Tmap_traits<int,ioBlockProperty *,std::less<int>,std::allocator<std::pair<int const ,ioBlockProperty *> >,0> >

; 16   : 	D3DXQuaternionRotationYawPitchRoll( &m_BlockRotation, DEGtoRAD( 45.0f ), 0.0f, 0.0f );

  0003c	0f 57 c0	 xorps	 xmm0, xmm0
  0003f	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00042	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00048	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0004e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f490fdb
  00056	89 7e 1c	 mov	 DWORD PTR [esi+28], edi
  00059	89 7e 20	 mov	 DWORD PTR [esi+32], edi
  0005c	89 7e 24	 mov	 DWORD PTR [esi+36], edi
  0005f	8d 46 38	 lea	 eax, DWORD PTR [esi+56]
  00062	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00067	50		 push	 eax
  00068	89 7e 2c	 mov	 DWORD PTR [esi+44], edi
  0006b	89 7e 30	 mov	 DWORD PTR [esi+48], edi
  0006e	89 7e 48	 mov	 DWORD PTR [esi+72], edi
  00071	89 7e 4c	 mov	 DWORD PTR [esi+76], edi
  00074	e8 00 00 00 00	 call	 _D3DXQuaternionRotationYawPitchRoll@16

; 17   : }

  00079	8b c6		 mov	 eax, esi
  0007b	e8 00 00 00 00	 call	 __EH_epilog3
  00080	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioBlockManager@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioBlockManager@@@@QAE@XZ ; Singleton<ioBlockManager>::~Singleton<ioBlockManager>
__ehhandler$??0ioBlockManager@@QAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioBlockManager@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioBlockManager@@QAE@XZ ENDP				; ioBlockManager::ioBlockManager
; Function compile flags: /Ogsp
;	COMDAT ??_GioBlockManager@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioBlockManager@@UAEPAXI@Z PROC			; ioBlockManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioBlockManager@@UAE@XZ ; ioBlockManager::~ioBlockManager
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@3
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@3:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioBlockManager@@UAEPAXI@Z ENDP			; ioBlockManager::`scalar deleting destructor'
_TEXT	ENDS
_BSS	SEGMENT
_ZERO_TILE_POS DB 010H DUP (?)
_BSS	ENDS
END
