; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioTime.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?GetYear@ioTime@@YAKK@Z				; ioTime::GetYear
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iotime.cpp
;	COMDAT ?GetYear@ioTime@@YAKK@Z
_TEXT	SEGMENT
_dwDate$ = 8						; size = 4
?GetYear@ioTime@@YAKK@Z PROC				; ioTime::GetYear, COMDAT

; 8    : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 9    : 		return ioTime::DEFAULT_YEAR + ( dwDate / ioTime::DATE_YEAR_VALUE );

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwDate$[ebp]
  00006	33 d2		 xor	 edx, edx
  00008	b9 00 e1 f5 05	 mov	 ecx, 100000000		; 05f5e100H
  0000d	f7 f1		 div	 ecx
  0000f	05 da 07 00 00	 add	 eax, 2010		; 000007daH

; 10   : 	}

  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?GetYear@ioTime@@YAKK@Z ENDP				; ioTime::GetYear
_TEXT	ENDS
PUBLIC	?GetMonth@ioTime@@YAKK@Z			; ioTime::GetMonth
; Function compile flags: /Ogsp
;	COMDAT ?GetMonth@ioTime@@YAKK@Z
_TEXT	SEGMENT
_dwDate$ = 8						; size = 4
?GetMonth@ioTime@@YAKK@Z PROC				; ioTime::GetMonth, COMDAT

; 13   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 14   : 		return ( dwDate % ioTime::DATE_YEAR_VALUE ) / ioTime::DATE_MONTH_VALUE;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwDate$[ebp]
  00006	33 d2		 xor	 edx, edx
  00008	b9 00 e1 f5 05	 mov	 ecx, 100000000		; 05f5e100H
  0000d	f7 f1		 div	 ecx
  0000f	b9 40 42 0f 00	 mov	 ecx, 1000000		; 000f4240H
  00014	8b c2		 mov	 eax, edx
  00016	33 d2		 xor	 edx, edx
  00018	f7 f1		 div	 ecx

; 15   : 	}

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetMonth@ioTime@@YAKK@Z ENDP				; ioTime::GetMonth
_TEXT	ENDS
PUBLIC	?GetDay@ioTime@@YAKK@Z				; ioTime::GetDay
; Function compile flags: /Ogsp
;	COMDAT ?GetDay@ioTime@@YAKK@Z
_TEXT	SEGMENT
_dwDate$ = 8						; size = 4
?GetDay@ioTime@@YAKK@Z PROC				; ioTime::GetDay, COMDAT

; 18   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 19   : 		return ( dwDate % ioTime::DATE_MONTH_VALUE ) / ioTime::DATE_DAY_VALUE;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwDate$[ebp]
  00006	33 d2		 xor	 edx, edx
  00008	b9 40 42 0f 00	 mov	 ecx, 1000000		; 000f4240H
  0000d	f7 f1		 div	 ecx
  0000f	b9 10 27 00 00	 mov	 ecx, 10000		; 00002710H
  00014	8b c2		 mov	 eax, edx
  00016	33 d2		 xor	 edx, edx
  00018	f7 f1		 div	 ecx

; 20   : 	}

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetDay@ioTime@@YAKK@Z ENDP				; ioTime::GetDay
_TEXT	ENDS
PUBLIC	?GetHour@ioTime@@YAKK@Z				; ioTime::GetHour
; Function compile flags: /Ogsp
;	COMDAT ?GetHour@ioTime@@YAKK@Z
_TEXT	SEGMENT
_dwDate$ = 8						; size = 4
?GetHour@ioTime@@YAKK@Z PROC				; ioTime::GetHour, COMDAT

; 23   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 24   : 		return ( dwDate % ioTime::DATE_DAY_VALUE ) / ioTime::DATE_HOUR_VALUE;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwDate$[ebp]
  00006	33 d2		 xor	 edx, edx
  00008	b9 10 27 00 00	 mov	 ecx, 10000		; 00002710H
  0000d	f7 f1		 div	 ecx
  0000f	6a 64		 push	 100			; 00000064H
  00011	59		 pop	 ecx
  00012	8b c2		 mov	 eax, edx
  00014	33 d2		 xor	 edx, edx
  00016	f7 f1		 div	 ecx

; 25   : 	}

  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetHour@ioTime@@YAKK@Z ENDP				; ioTime::GetHour
_TEXT	ENDS
PUBLIC	?GetMinute@ioTime@@YAKK@Z			; ioTime::GetMinute
; Function compile flags: /Ogsp
;	COMDAT ?GetMinute@ioTime@@YAKK@Z
_TEXT	SEGMENT
_dwDate$ = 8						; size = 4
?GetMinute@ioTime@@YAKK@Z PROC				; ioTime::GetMinute, COMDAT

; 28   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 29   : 		return ( dwDate % ioTime::DATE_HOUR_VALUE );

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwDate$[ebp]
  00006	6a 64		 push	 100			; 00000064H
  00008	33 d2		 xor	 edx, edx
  0000a	59		 pop	 ecx
  0000b	f7 f1		 div	 ecx
  0000d	8b c2		 mov	 eax, edx

; 30   : 	}

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetMinute@ioTime@@YAKK@Z ENDP				; ioTime::GetMinute
_TEXT	ENDS
END
