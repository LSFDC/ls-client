; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioPerformanceChecker.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_s_pInstance DD	01H DUP (?)
_BSS	ENDS
PUBLIC	?Initialize@ioPerformanceChecker@@QAEX_N0@Z	; ioPerformanceChecker::Initialize
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioperformancechecker.cpp
;	COMDAT ?Initialize@ioPerformanceChecker@@QAEX_N0@Z
_TEXT	SEGMENT
_bLogging$ = 8						; size = 1
_bSendLog$ = 12						; size = 1
?Initialize@ioPerformanceChecker@@QAEX_N0@Z PROC	; ioPerformanceChecker::Initialize, COMDAT
; _this$ = ecx

; 55   : #ifdef ENABLE_PERF_CHECK
; 56   : 
; 57   : 	m_dwStartTime = 0;
; 58   : 
; 59   : 	m_dwPreCheckTime = 0;
; 60   : 	m_iLoopCount = 0;
; 61   : 
; 62   : 	m_dwWaitTime = PERFCHECKTIME() + CHECK_WAIT_TIME;
; 63   : 	m_bCheckNow  = false;
; 64   : 
; 65   : 	m_iEvenCount = 0;
; 66   : 	m_dwEvenErrorSendTime = PERFCHECKTIME() + CHECK_ERROR_SEND_GAP;
; 67   : 	m_CheckPointMap.clear();
; 68   : 
; 69   : 	m_bLogging = bLogging;
; 70   : 	m_bSendLog = bSendLog;
; 71   : 
; 72   : #endif
; 73   : }

  00000	c2 08 00	 ret	 8
?Initialize@ioPerformanceChecker@@QAEX_N0@Z ENDP	; ioPerformanceChecker::Initialize
_TEXT	ENDS
PUBLIC	?FrameStart@ioPerformanceChecker@@QAEXXZ	; ioPerformanceChecker::FrameStart
; Function compile flags: /Ogsp
;	COMDAT ?FrameStart@ioPerformanceChecker@@QAEXXZ
_TEXT	SEGMENT
?FrameStart@ioPerformanceChecker@@QAEXXZ PROC		; ioPerformanceChecker::FrameStart, COMDAT
; _this$ = ecx

; 77   : #ifdef ENABLE_PERF_CHECK
; 78   : 
; 79   : 	DWORD dwCurTime = PERFCHECKTIME();
; 80   : 	if( m_dwWaitTime < dwCurTime )
; 81   : 	{
; 82   : 		m_bCheckNow = true;
; 83   : 	}
; 84   : 	else
; 85   : 	{
; 86   : 		m_bCheckNow = false;
; 87   : 		return;
; 88   : 	}
; 89   : 
; 90   : 	if( m_dwStartTime > 0 )
; 91   : 	{
; 92   : 		m_iLoopCount++;
; 93   : 	}
; 94   : 	else	// 시작
; 95   : 	{
; 96   : 		m_dwStartTime = dwCurTime;
; 97   : 		m_iLoopCount  = 0;
; 98   : 	}
; 99   : 
; 100  : 	m_dwPreCheckTime = dwCurTime;
; 101  : #endif
; 102  : }

  00000	c3		 ret	 0
?FrameStart@ioPerformanceChecker@@QAEXXZ ENDP		; ioPerformanceChecker::FrameStart
_TEXT	ENDS
PUBLIC	?CheckPoint@ioPerformanceChecker@@QAEXH@Z	; ioPerformanceChecker::CheckPoint
; Function compile flags: /Ogsp
;	COMDAT ?CheckPoint@ioPerformanceChecker@@QAEXH@Z
_TEXT	SEGMENT
_iPoint$ = 8						; size = 4
?CheckPoint@ioPerformanceChecker@@QAEXH@Z PROC		; ioPerformanceChecker::CheckPoint, COMDAT
; _this$ = ecx

; 106  : #ifdef ENABLE_PERF_CHECK
; 107  : 
; 108  : 	if( !m_bCheckNow )	return;
; 109  : 
; 110  : 	CheckPointMap::iterator iter = m_CheckPointMap.find( iPoint );
; 111  : 	if( iter == m_CheckPointMap.end() )
; 112  : 	{
; 113  : 		m_CheckPointMap.insert( CheckPointMap::value_type( iPoint, PointValue() ) );
; 114  : 	}
; 115  : 
; 116  : 	DWORD dwCurTime = PERFCHECKTIME();
; 117  : 	if( dwCurTime > m_dwPreCheckTime )
; 118  : 	{
; 119  : 		PointValue &rkValue = m_CheckPointMap[iPoint];
; 120  : 
; 121  : 		DWORD dwCheckTime = dwCurTime - m_dwPreCheckTime;
; 122  : 		rkValue.dwSum += dwCheckTime;
; 123  : 
; 124  : 		if( m_iEvenCount > 2 && rkValue.dwEven > 500 )
; 125  : 		{
; 126  : 			if( rkValue.dwEven * 3 < dwCheckTime )
; 127  : 			{
; 128  : 				SendLog( iPoint, rkValue.dwEven, dwCheckTime );
; 129  : 			}
; 130  : 		}
; 131  : 	}
; 132  : 
; 133  : 	m_dwPreCheckTime = dwCurTime;
; 134  : 
; 135  : #endif
; 136  : }

  00000	c2 04 00	 ret	 4
?CheckPoint@ioPerformanceChecker@@QAEXH@Z ENDP		; ioPerformanceChecker::CheckPoint
_TEXT	ENDS
PUBLIC	?SendLog@ioPerformanceChecker@@IAEXHKK@Z	; ioPerformanceChecker::SendLog
; Function compile flags: /Ogsp
;	COMDAT ?SendLog@ioPerformanceChecker@@IAEXHKK@Z
_TEXT	SEGMENT
_iPoint$ = 8						; size = 4
_dwEvenTime$ = 12					; size = 4
_dwCheckTime$ = 16					; size = 4
?SendLog@ioPerformanceChecker@@IAEXHKK@Z PROC		; ioPerformanceChecker::SendLog, COMDAT
; _this$ = ecx

; 140  : #ifdef ENABLE_PERF_CHECK
; 141  : 
; 142  : 	if( m_dwEvenErrorSendTime > PERFCHECKTIME() )
; 143  : 		return;
; 144  : 
; 145  : 	static char s_ErrorLog[2048];
; 146  : 	wsprintf( s_ErrorLog, "%s/%s\n%s\n%s\n%d:%d:%d", g_MyInfo.GetPrivateID().c_str(),
; 147  : 													 g_MyInfo.GetPublicID().c_str(),
; 148  : 													 Setting::GetFullSystemInfo(),
; 149  : 													 Setting::GetSettingString(),
; 150  : 													 iPoint, dwEvenTime, dwCheckTime );
; 151  : 
; 152  : 	if( m_bSendLog && P2PNetwork::IsNetworkPlaying() )
; 153  : 	{
; 154  : 		SP2Packet kPacket( LUPK_LOG );
; 155  : 		kPacket << "CheckError";
; 156  : 		kPacket << s_ErrorLog;
; 157  : 		kPacket << 365;   // 오류번호 : 365
; 158  : 		kPacket << false; // write db
; 159  : 		P2PNetwork::SendLog( kPacket );
; 160  : 	}
; 161  : 
; 162  : 	m_dwEvenErrorSendTime = PERFCHECKTIME() + CHECK_ERROR_SEND_GAP;
; 163  : 	LOG.PrintLog( 0, "%s", s_ErrorLog );
; 164  : 
; 165  : #endif
; 166  : }

  00000	c2 0c 00	 ret	 12			; 0000000cH
?SendLog@ioPerformanceChecker@@IAEXHKK@Z ENDP		; ioPerformanceChecker::SendLog
_TEXT	ENDS
PUBLIC	?Analysis@ioPerformanceChecker@@QAEXXZ		; ioPerformanceChecker::Analysis
; Function compile flags: /Ogsp
;	COMDAT ?Analysis@ioPerformanceChecker@@QAEXXZ
_TEXT	SEGMENT
?Analysis@ioPerformanceChecker@@QAEXXZ PROC		; ioPerformanceChecker::Analysis, COMDAT
; _this$ = ecx

; 170  : #ifdef ENABLE_PERF_CHECK
; 171  : 
; 172  : 	if( !m_bCheckNow )	return;
; 173  : 	if( m_dwStartTime == 0 || m_iLoopCount == 0 )
; 174  : 		return;
; 175  : 
; 176  : 	DWORD dwCurTime = PERFCHECKTIME();
; 177  : 	if( dwCurTime <= m_dwStartTime )	return;
; 178  : 
; 179  : 	DWORD dwGap = dwCurTime - m_dwStartTime;
; 180  : 	if( TICK_GAP_TIME > dwGap )
; 181  : 		return;
; 182  : 
; 183  : 	if( m_bLogging )
; 184  : 	{
; 185  : 		LOG.PrintTimeAndLog( 0, "---------------------" );
; 186  : 
; 187  : 		float fFrame = (float)m_iLoopCount * 10000.0f / (float)dwGap;
; 188  : 		LOG.PrintLog( 0, "Frame : %.1f", fFrame );
; 189  : 
; 190  : 		int iPointCount = m_CheckPointMap.size();
; 191  : 		CheckPointMap::iterator iter = m_CheckPointMap.begin();
; 192  : 		for( int i=0 ; i<iPointCount ; i++, ++iter )
; 193  : 		{
; 194  : 			PointValue &rkValue = iter->second;
; 195  : 			float fEvenTime = (float)rkValue.dwSum / (float)m_iLoopCount;
; 196  : 
; 197  : 			LOG.PrintLog( 0, "%2d : Waste %d, Even : %.2f", iter->first, rkValue.dwSum, fEvenTime );
; 198  : 		}
; 199  : 	}
; 200  : 
; 201  : 	m_dwStartTime = 0;
; 202  : 
; 203  : 	m_dwPreCheckTime = 0;
; 204  : 	m_iLoopCount  = 0;
; 205  : 
; 206  : 	// 평균값 누적
; 207  : 	CheckPointMap::iterator iter = m_CheckPointMap.begin();
; 208  : 	for( ; iter!=m_CheckPointMap.end(); ++iter )
; 209  : 	{
; 210  : 		PointValue &rkValue = iter->second;
; 211  : 
; 212  : 		rkValue.dwEven = ( rkValue.dwEven * m_iEvenCount + rkValue.dwSum ) / ( m_iEvenCount + 1 );
; 213  : 		rkValue.dwSum  = 0;	// 초기화
; 214  : 	}
; 215  : 
; 216  : 	m_iEvenCount++;
; 217  : 
; 218  : #endif
; 219  : }

  00000	c3		 ret	 0
?Analysis@ioPerformanceChecker@@QAEXXZ ENDP		; ioPerformanceChecker::Analysis
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Node>::deallocate
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Color
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 607  : 		return ((char&)(*_Pnode)._Color);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 18	 add	 eax, 24			; 00000018H

; 608  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Isnil
; Function compile flags: /Ogsp
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 612  : 		return ((char&)(*_Pnode)._Isnil);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 19	 add	 eax, 25			; 00000019H

; 613  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Left
; Function compile flags: /Ogsp
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Parent
; Function compile flags: /Ogsp
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 628  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Right
; Function compile flags: /Ogsp
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 633  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Right
_TEXT	ENDS
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())
; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 331  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >::operator==
_TEXT	ENDS
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >::operator!=, COMDAT
; _this$ = ecx

; 334  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 335  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 336  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Rmost
; Function compile flags: /Ogsp
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1784 : 		return (this->_Right(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1785 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Root
; Function compile flags: /Ogsp
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1790 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Rrotate
; Function compile flags: /Ogsp
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	56		 push	 esi

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

  00009	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000c	89 32		 mov	 DWORD PTR [edx], esi

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

  0000e	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00011	80 7e 19 00	 cmp	 BYTE PTR [esi+25], 0
  00015	75 03		 jne	 SHORT $LN5@Rrotate

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Rrotate:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 05		 jne	 SHORT $LN4@Rrotate

; 1802 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

  0002c	eb 0f		 jmp	 SHORT $LN1@Rrotate
$LN4@Rrotate:
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00034	75 05		 jne	 SHORT $LN2@Rrotate

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00036	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1805 : 		else

  00039	eb 02		 jmp	 SHORT $LN1@Rrotate
$LN2@Rrotate:

; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  0003b	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@Rrotate:

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  0003d	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00040	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Myval
; Function compile flags: /Ogsp
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 637  : 		return ((reference)(*_Pnode)._Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 638  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Max
; Function compile flags: /Ogsp
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Max
$LL2@Max:

; 643  : 			_Pnode = _Right(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Max:

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	80 79 19 00	 cmp	 BYTE PTR [ecx+25], 0
  00011	74 f5		 je	 SHORT $LL2@Max

; 644  : 		return (_Pnode);
; 645  : 		}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Max@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Min
; Function compile flags: /Ogsp
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Min
$LL2@Min:

; 650  : 			_Pnode = _Left(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Min:

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	80 79 19 00	 cmp	 BYTE PTR [ecx+25], 0
  00010	74 f6		 je	 SHORT $LL2@Min

; 651  : 		return (_Pnode);
; 652  : 		}

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?_Min@?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Min
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@QAE@U?$less@H@1@@Z ; std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0>::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@QAE@U?$less@H@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@QAE@U?$less@H@1@@Z PROC ; std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0>::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0>, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 41   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@QAE@U?$less@H@1@@Z ENDP ; std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0>::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0>
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >,std::_Iterator_base0>::_Mynode
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 123  : 		}

  00002	c3		 ret	 0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	53		 push	 ebx
  00005	32 db		 xor	 bl, bl
  00007	38 59 19	 cmp	 BYTE PTR [ecx+25], bl
  0000a	75 2d		 jne	 SHORT $LN3@operator

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

  0000c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000f	38 5a 19	 cmp	 BYTE PTR [edx+25], bl
  00012	75 0d		 jne	 SHORT $LN34@operator

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

$LL18@operator:
  00014	8b ca		 mov	 ecx, edx
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	38 5a 19	 cmp	 BYTE PTR [edx+25], bl
  0001b	74 f7		 je	 SHORT $LL18@operator
  0001d	89 08		 mov	 DWORD PTR [eax], ecx
  0001f	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  00020	c3		 ret	 0
$LN34@operator:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00021	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00024	eb 0c		 jmp	 SHORT $LN38@operator
$LL2@operator:
  00026	8b 08		 mov	 ecx, DWORD PTR [eax]
  00028	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  0002b	75 0a		 jne	 SHORT $LN1@operator

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
$LN38@operator:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00032	38 5a 19	 cmp	 BYTE PTR [edx+25], bl
  00035	74 ef		 je	 SHORT $LL2@operator
$LN1@operator:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

  00037	89 10		 mov	 DWORD PTR [eax], edx
$LN3@operator:
  00039	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  0003a	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
PUBLIC	??$addressof@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@YAPAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,ioPerformanceChecker::PointValue> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@YAPAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@YAPAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@0@AAU10@@Z PROC ; std::addressof<std::pair<int const ,ioPerformanceChecker::PointValue> >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@YAPAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<int const ,ioPerformanceChecker::PointValue> >
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Node><std::pair<int const ,ioPerformanceChecker::PointValue> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Node><std::pair<int const ,ioPerformanceChecker::PointValue> >, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Node><std::pair<int const ,ioPerformanceChecker::PointValue> >
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Node>
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T506554 = -12						; size = 12
$T506559 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 49 92 24
	09		 cmp	 ecx, 153391689		; 09249249H
  00015	77 0e		 ja	 SHORT $LN1@Allocate
  00017	6b c9 1c	 imul	 ecx, 28			; 0000001cH
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T506559[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T506559[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T506554[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T506554[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T506554[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Node>
_TEXT	ENDS
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@YAXPAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@0@@Z ; std::_Destroy<std::pair<int const ,ioPerformanceChecker::PointValue> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@YAXPAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@YAXPAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@0@@Z PROC ; std::_Destroy<std::pair<int const ,ioPerformanceChecker::PointValue> >, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@YAXPAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@0@@Z ENDP ; std::_Destroy<std::pair<int const ,ioPerformanceChecker::PointValue> >
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1exception@std@@UAE@XZ
  00012	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00016	74 07		 je	 SHORT $LN1@scalar
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	59		 pop	 ecx
$LN1@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT

; 94   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 95   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 96   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::~_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::~_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >, COMDAT
; _this$ = ecx

; 555  : 		this->_Alnod.deallocate(this->_Myhead, 1);

  00000	ff 71 04	 push	 DWORD PTR [ecx+4]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx

; 556  : 		}

  00009	c3		 ret	 0
??1?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::~_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Lmost
; Function compile flags: /Ogsp
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1759 : 		return (this->_Left(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1760 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >, COMDAT
; _this$ = ecx

; 482  : 		{	// construct traits from _Parg and allocators from _Al

  00000	8b c1		 mov	 eax, ecx

; 483  : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Node>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Node>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Lrotate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00009	56		 push	 esi

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

  0000f	8b 30		 mov	 esi, DWORD PTR [eax]
  00011	80 7e 19 00	 cmp	 BYTE PTR [esi+25], 0
  00015	75 03		 jne	 SHORT $LN5@Lrotate

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Lrotate:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 05		 jne	 SHORT $LN4@Lrotate

; 1772 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

  0002c	eb 0e		 jmp	 SHORT $LN1@Lrotate
$LN4@Lrotate:
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00033	75 04		 jne	 SHORT $LN2@Lrotate

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  00035	89 01		 mov	 DWORD PTR [ecx], eax

; 1775 : 		else

  00037	eb 03		 jmp	 SHORT $LN1@Lrotate
$LN2@Lrotate:

; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00039	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@Lrotate:

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0003c	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  0003e	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))
; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 257  : 			_SCL_SECURE_OUT_OF_RANGE;
; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >,std::_Iterator_base0>::operator++

; 266  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 267  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 44   : 		this->_Adopt(_Plist);
; 45   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@QAEXPAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@2@@Z ; std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >::destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@QAEXPAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@QAEXPAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@2@@Z PROC ; std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@QAEXPAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@2@@Z ENDP ; std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >::destroy
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 101  : 	{	// exchange values stored at _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 102  : 	_Ty _Tmp = _Move(_Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8a 08		 mov	 cl, BYTE PTR [eax]
  00008	56		 push	 esi

; 103  : 	_Left = _Move(_Right);

  00009	8b 75 0c	 mov	 esi, DWORD PTR __Right$[ebp]
  0000c	8a 16		 mov	 dl, BYTE PTR [esi]
  0000e	88 10		 mov	 BYTE PTR [eax], dl

; 104  : 	_Right = _Move(_Tmp);

  00010	88 0e		 mov	 BYTE PTR [esi], cl
  00012	5e		 pop	 esi

; 105  : 	}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z
_TEXT	SEGMENT
$T506760 = -16						; size = 12
$T506737 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >, COMDAT
; _this$ = ecx

; 542  : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 543  : 		this->_Mysize = 0;

  00009	83 66 08 00	 and	 DWORD PTR [esi+8], 0

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

  0000d	6a 1c		 push	 28			; 0000001cH
  0000f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00014	59		 pop	 ecx
  00015	85 c0		 test	 eax, eax
  00017	74 26		 je	 SHORT $LN15@Tree_val
  00019	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 545  : 
; 546  : 		this->_Left(this->_Myhead) = this->_Myhead;

  0001c	89 00		 mov	 DWORD PTR [eax], eax

; 547  : 		this->_Parent(this->_Myhead) = this->_Myhead;

  0001e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00021	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 548  : 		this->_Right(this->_Myhead) = this->_Myhead;

  00024	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00027	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 549  : 		this->_Color(this->_Myhead) = this->_Black;

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	c6 40 18 01	 mov	 BYTE PTR [eax+24], 1

; 550  : 		this->_Isnil(this->_Myhead) = true;

  00031	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00034	c6 40 19 01	 mov	 BYTE PTR [eax+25], 1

; 551  : 		}

  00038	8b c6		 mov	 eax, esi
  0003a	5e		 pop	 esi
  0003b	c9		 leave
  0003c	c2 08 00	 ret	 8

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

$LN15@Tree_val:
  0003f	83 65 fc 00	 and	 DWORD PTR $T506737[ebp], 0
  00043	8d 45 fc	 lea	 eax, DWORD PTR $T506737[ebp]
  00046	50		 push	 eax
  00047	8d 4d f0	 lea	 ecx, DWORD PTR $T506760[ebp]
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00050	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00055	8d 45 f0	 lea	 eax, DWORD PTR $T506760[ebp]
  00058	50		 push	 eax
  00059	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T506760[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00060	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN37@Tree_val:
$LN36@Tree_val:
  00065	cc		 int	 3
??0?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 270  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 271  : 		_Myiter _Tmp = *this;

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 06		 mov	 DWORD PTR [esi], eax

; 272  : 		++*this;

  0000b	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >,std::_Iterator_base0>::operator++

; 273  : 		return (_Tmp);

  00010	8b c6		 mov	 eax, esi
  00012	5e		 pop	 esi

; 274  : 		}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 214  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@0@PAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,std::pair<int const ,ioPerformanceChecker::PointValue> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@0@PAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@0@PAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,std::pair<int const ,ioPerformanceChecker::PointValue> >, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@std@@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@0@PAU?$pair@$$CBHUPointValue@ioPerformanceChecker@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,std::pair<int const ,ioPerformanceChecker::PointValue> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z
_TEXT	SEGMENT
$T506817 = -4						; size = 4
$T506812 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >, COMDAT
; _this$ = ecx

; 698  : 		{	// construct empty tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	51		 push	 ecx
  00006	89 65 fc	 mov	 DWORD PTR $T506812[ebp], esp
  00009	89 65 fc	 mov	 DWORD PTR $T506817[ebp], esp
  0000c	ff 75 08	 push	 DWORD PTR __Parg$[ebp]
  0000f	8b f1		 mov	 esi, ecx
  00011	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >

; 699  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	c9		 leave
  0001a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >, COMDAT
; _this$ = ecx

; 378  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 379  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> > >
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Erase
; Function compile flags: /Ogsp
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1610 : 		{	// free entire subtree, recursively

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1611 : 		for (_Nodeptr _Pnode = _Rootnode;

  00006	8b 7d 08	 mov	 edi, DWORD PTR __Rootnode$[ebp]

; 1612 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

  00009	80 7f 19 00	 cmp	 BYTE PTR [edi+25], 0
  0000d	8b d9		 mov	 ebx, ecx
  0000f	8b f7		 mov	 esi, edi
  00011	75 1b		 jne	 SHORT $LN1@Erase
$LL3@Erase:

; 1613 : 			{	// free subtrees, then node
; 1614 : 			_Erase(this->_Right(_Pnode));

  00013	ff 76 08	 push	 DWORD PTR [esi+8]
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Erase

; 1615 : 			_Pnode = this->_Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 1616 : 			_Dest_val(this->_Alval,
; 1617 : 				_STD addressof(this->_Myval(_Rootnode)));
; 1618 : 
; 1619 : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	80 7e 19 00	 cmp	 BYTE PTR [esi+25], 0
  00029	59		 pop	 ecx
  0002a	8b fe		 mov	 edi, esi
  0002c	74 e5		 je	 SHORT $LL3@Erase
$LN1@Erase:
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx

; 1620 : 			}
; 1621 : 		}

  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 807  : 		return (iterator(_Lmost(), this));

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 808  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 817  : 		return (iterator(this->_Myhead, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 818  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::end
_TEXT	ENDS
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::erase
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::erase, COMDAT
; _this$ = ecx

; 1195 : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))
; 1198 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1199 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1200 : 		++_Where;	// save successor iterator for return
; 1201 : 		_Orphan_ptr(*this, _Erasednode);
; 1202 : 
; 1203 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1204 : 		if (this->_Isnil(_Where._Mynode()))

  00005	8b 5d 0c	 mov	 ebx, DWORD PTR __Where$[ebp]
  00008	80 7b 19 00	 cmp	 BYTE PTR [ebx+25], 0
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00011	74 0b		 je	 SHORT $LN40@erase

; 1205 : 			_Xout_of_range("invalid map/set<T> iterator");

  00013	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN329@erase:
$LN40@erase:

; 1206 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1207 : 		++_Where;	// save successor iterator for return

  0001e	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00021	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >,std::_Iterator_base0>::operator++

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1211 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1212 : 		_Nodeptr _Pnode = _Erasednode;
; 1213 : 
; 1214 : 		if (this->_Isnil(this->_Left(_Pnode)))

  00026	8b 13		 mov	 edx, DWORD PTR [ebx]
  00028	80 7a 19 00	 cmp	 BYTE PTR [edx+25], 0
  0002c	74 05		 je	 SHORT $LN39@erase

; 1215 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

  0002e	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 1216 : 		else if (this->_Isnil(this->_Right(_Pnode)))

  00031	eb 17		 jmp	 SHORT $LN321@erase
$LN39@erase:
  00033	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00036	80 78 19 00	 cmp	 BYTE PTR [eax+25], 0
  0003a	74 04		 je	 SHORT $LN37@erase

; 1217 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

  0003c	8b fa		 mov	 edi, edx

; 1218 : 		else

  0003e	eb 0a		 jmp	 SHORT $LN321@erase
$LN37@erase:

; 1219 : 			{	// two subtrees, must lift successor node to replace erased
; 1220 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

  00040	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 1221 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

  00043	8b 78 08	 mov	 edi, DWORD PTR [eax+8]

; 1222 : 			}
; 1223 : 
; 1224 : 		if (_Pnode == _Erasednode)

  00046	3b c3		 cmp	 eax, ebx
  00048	75 76		 jne	 SHORT $LN35@erase
$LN321@erase:

; 1225 : 			{	// at most one subtree, relink it
; 1226 : 			_Fixnodeparent = this->_Parent(_Erasednode);
; 1227 : 			if (!this->_Isnil(_Fixnode))

  0004a	80 7f 19 00	 cmp	 BYTE PTR [edi+25], 0
  0004e	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  00051	75 03		 jne	 SHORT $LN34@erase

; 1228 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

  00053	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN34@erase:

; 1229 : 
; 1230 : 			if (_Root() == _Erasednode)

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0005c	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0005f	75 05		 jne	 SHORT $LN33@erase

; 1231 : 				_Root() = _Fixnode;	// link down from root

  00061	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 1232 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

  00064	eb 0b		 jmp	 SHORT $LN30@erase
$LN33@erase:
  00066	39 1e		 cmp	 DWORD PTR [esi], ebx
  00068	75 04		 jne	 SHORT $LN31@erase

; 1233 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  0006a	89 3e		 mov	 DWORD PTR [esi], edi

; 1234 : 			else

  0006c	eb 03		 jmp	 SHORT $LN30@erase
$LN31@erase:

; 1235 : 				this->_Right(_Fixnodeparent) =
; 1236 : 					_Fixnode;	// link down to right

  0006e	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$LN30@erase:

; 1237 : 
; 1238 : 			if (_Lmost() == _Erasednode)

  00071	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00074	39 19		 cmp	 DWORD PTR [ecx], ebx
  00076	75 1c		 jne	 SHORT $LN29@erase

; 1239 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1240 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1241 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

  00078	80 7f 19 00	 cmp	 BYTE PTR [edi+25], 0
  0007c	74 04		 je	 SHORT $LN43@erase
  0007e	8b d6		 mov	 edx, esi
  00080	eb 10		 jmp	 SHORT $LN97@erase
$LN43@erase:
  00082	8b 07		 mov	 eax, DWORD PTR [edi]
  00084	8b d7		 mov	 edx, edi
  00086	eb 04		 jmp	 SHORT $LN323@erase
$LL98@erase:
  00088	8b d0		 mov	 edx, eax
  0008a	8b 02		 mov	 eax, DWORD PTR [edx]
$LN323@erase:
  0008c	80 78 19 00	 cmp	 BYTE PTR [eax+25], 0
  00090	74 f6		 je	 SHORT $LL98@erase
$LN97@erase:
  00092	89 11		 mov	 DWORD PTR [ecx], edx
$LN29@erase:

; 1242 : 
; 1243 : 			if (_Rmost() == _Erasednode)

  00094	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00097	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0009a	39 59 08	 cmp	 DWORD PTR [ecx+8], ebx
  0009d	75 7b		 jne	 SHORT $LN185@erase

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  0009f	80 7f 19 00	 cmp	 BYTE PTR [edi+25], 0
  000a3	74 04		 je	 SHORT $LN45@erase
  000a5	8b d6		 mov	 edx, esi
  000a7	eb 12		 jmp	 SHORT $LN117@erase
$LN45@erase:
  000a9	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000ac	8b d7		 mov	 edx, edi
  000ae	eb 05		 jmp	 SHORT $LN324@erase
$LL118@erase:
  000b0	8b d0		 mov	 edx, eax
  000b2	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
$LN324@erase:
  000b5	80 78 19 00	 cmp	 BYTE PTR [eax+25], 0
  000b9	74 f5		 je	 SHORT $LL118@erase
$LN117@erase:
  000bb	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 1247 : 			}
; 1248 : 		else

  000be	eb 5a		 jmp	 SHORT $LN185@erase
$LN35@erase:

; 1249 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1250 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1251 : 				_Pnode;	// link left up

  000c0	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1252 : 			this->_Left(_Pnode) =
; 1253 : 				this->_Left(_Erasednode);	// link successor down

  000c3	8b 13		 mov	 edx, DWORD PTR [ebx]
  000c5	89 10		 mov	 DWORD PTR [eax], edx

; 1254 : 
; 1255 : 			if (_Pnode == this->_Right(_Erasednode))

  000c7	3b 43 08	 cmp	 eax, DWORD PTR [ebx+8]
  000ca	75 04		 jne	 SHORT $LN26@erase

; 1256 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  000cc	8b f0		 mov	 esi, eax

; 1257 : 			else

  000ce	eb 1a		 jmp	 SHORT $LN25@erase
$LN26@erase:

; 1258 : 				{	// successor further down, link in place of erased
; 1259 : 				_Fixnodeparent =
; 1260 : 					this->_Parent(_Pnode);	// parent is successor's
; 1261 : 				if (!this->_Isnil(_Fixnode))

  000d0	80 7f 19 00	 cmp	 BYTE PTR [edi+25], 0
  000d4	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000d7	75 03		 jne	 SHORT $LN24@erase

; 1262 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  000d9	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN24@erase:

; 1263 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  000dc	89 3e		 mov	 DWORD PTR [esi], edi

; 1264 : 				this->_Right(_Pnode) =
; 1265 : 					this->_Right(_Erasednode);	// link next down

  000de	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  000e1	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1266 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1267 : 					_Pnode;	// right up

  000e4	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000e7	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN25@erase:

; 1268 : 				}
; 1269 : 
; 1270 : 			if (_Root() == _Erasednode)

  000ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000f0	39 59 04	 cmp	 DWORD PTR [ecx+4], ebx
  000f3	75 05		 jne	 SHORT $LN23@erase

; 1271 : 				_Root() = _Pnode;	// link down from root

  000f5	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1272 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

  000f8	eb 0e		 jmp	 SHORT $LN20@erase
$LN23@erase:
  000fa	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000fd	39 19		 cmp	 DWORD PTR [ecx], ebx
  000ff	75 04		 jne	 SHORT $LN21@erase

; 1273 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1274 : 					_Pnode;	// link down to left

  00101	89 01		 mov	 DWORD PTR [ecx], eax

; 1275 : 			else

  00103	eb 03		 jmp	 SHORT $LN20@erase
$LN21@erase:

; 1276 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1277 : 					_Pnode;	// link down to right

  00105	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN20@erase:

; 1278 : 
; 1279 : 			this->_Parent(_Pnode) =
; 1280 : 				this->_Parent(_Erasednode);	// link successor up

  00108	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0010b	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1281 : 			_STD swap(this->_Color(_Pnode),
; 1282 : 				this->_Color(_Erasednode));	// recolor it

  0010e	8a 53 18	 mov	 dl, BYTE PTR [ebx+24]
  00111	8a 48 18	 mov	 cl, BYTE PTR [eax+24]
  00114	88 50 18	 mov	 BYTE PTR [eax+24], dl
  00117	88 4b 18	 mov	 BYTE PTR [ebx+24], cl
$LN185@erase:

; 1283 : 			}
; 1284 : 
; 1285 : 		if (this->_Color(_Erasednode) == this->_Black)

  0011a	80 7b 18 01	 cmp	 BYTE PTR [ebx+24], 1
  0011e	0f 85 03 01 00
	00		 jne	 $LN19@erase

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00124	e9 b2 00 00 00	 jmp	 $LN326@erase
$LL18@erase:
  00129	80 7f 18 01	 cmp	 BYTE PTR [edi+24], 1
  0012d	0f 85 f0 00 00
	00		 jne	 $LN16@erase

; 1290 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

  00133	8b 06		 mov	 eax, DWORD PTR [esi]
  00135	3b f8		 cmp	 edi, eax
  00137	75 6c		 jne	 SHORT $LN15@erase

; 1291 : 					{	// fixup left subtree
; 1292 : 					_Pnode = this->_Right(_Fixnodeparent);

  00139	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 1293 : 					if (this->_Color(_Pnode) == this->_Red)

  0013c	80 78 18 00	 cmp	 BYTE PTR [eax+24], 0
  00140	75 11		 jne	 SHORT $LN14@erase

; 1294 : 						{	// rotate red up from right subtree
; 1295 : 						this->_Color(_Pnode) = this->_Black;

  00142	c6 40 18 01	 mov	 BYTE PTR [eax+24], 1

; 1296 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1297 : 						_Lrotate(_Fixnodeparent);

  00146	56		 push	 esi
  00147	c6 46 18 00	 mov	 BYTE PTR [esi+24], 0
  0014b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Lrotate

; 1298 : 						_Pnode = this->_Right(_Fixnodeparent);

  00150	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN14@erase:

; 1299 : 						}
; 1300 : 
; 1301 : 					if (this->_Isnil(_Pnode))

  00153	80 78 19 00	 cmp	 BYTE PTR [eax+25], 0

; 1302 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1303 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

  00157	75 7d		 jne	 SHORT $LN327@erase

; 1304 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

  00159	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015b	80 79 18 01	 cmp	 BYTE PTR [ecx+24], 1
  0015f	75 09		 jne	 SHORT $LN11@erase
  00161	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00164	80 79 18 01	 cmp	 BYTE PTR [ecx+24], 1
  00168	74 68		 je	 SHORT $LN328@erase
$LN11@erase:

; 1305 : 						{	// redden right subtree with black children
; 1306 : 						this->_Color(_Pnode) = this->_Red;
; 1307 : 						_Fixnode = _Fixnodeparent;
; 1308 : 						}
; 1309 : 					else
; 1310 : 						{	// must rearrange right subtree
; 1311 : 						if (this->_Color(this->_Right(_Pnode))
; 1312 : 							== this->_Black)

  0016a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0016d	80 79 18 01	 cmp	 BYTE PTR [ecx+24], 1
  00171	75 16		 jne	 SHORT $LN9@erase

; 1313 : 							{	// rotate red up from left sub-subtree
; 1314 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

  00173	8b 08		 mov	 ecx, DWORD PTR [eax]
  00175	c6 41 18 01	 mov	 BYTE PTR [ecx+24], 1

; 1315 : 							this->_Color(_Pnode) = this->_Red;
; 1316 : 							_Rrotate(_Pnode);

  00179	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017c	50		 push	 eax
  0017d	c6 40 18 00	 mov	 BYTE PTR [eax+24], 0
  00181	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Rrotate

; 1317 : 							_Pnode = this->_Right(_Fixnodeparent);

  00186	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN9@erase:

; 1318 : 							}
; 1319 : 
; 1320 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  00189	8a 4e 18	 mov	 cl, BYTE PTR [esi+24]
  0018c	88 48 18	 mov	 BYTE PTR [eax+24], cl

; 1321 : 						this->_Color(_Fixnodeparent) = this->_Black;
; 1322 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;
; 1323 : 						_Lrotate(_Fixnodeparent);

  0018f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00192	c6 46 18 01	 mov	 BYTE PTR [esi+24], 1
  00196	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00199	56		 push	 esi
  0019a	c6 40 18 01	 mov	 BYTE PTR [eax+24], 1
  0019e	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Lrotate

; 1324 : 						break;	// tree now recolored/rebalanced

  001a3	eb 7e		 jmp	 SHORT $LN16@erase
$LN15@erase:

; 1325 : 						}
; 1326 : 					}
; 1327 : 				else
; 1328 : 					{	// fixup right subtree
; 1329 : 					_Pnode = this->_Left(_Fixnodeparent);
; 1330 : 					if (this->_Color(_Pnode) == this->_Red)

  001a5	80 78 18 00	 cmp	 BYTE PTR [eax+24], 0
  001a9	75 10		 jne	 SHORT $LN7@erase

; 1331 : 						{	// rotate red up from left subtree
; 1332 : 						this->_Color(_Pnode) = this->_Black;

  001ab	c6 40 18 01	 mov	 BYTE PTR [eax+24], 1

; 1333 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1334 : 						_Rrotate(_Fixnodeparent);

  001af	56		 push	 esi
  001b0	c6 46 18 00	 mov	 BYTE PTR [esi+24], 0
  001b4	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Rrotate

; 1335 : 						_Pnode = this->_Left(_Fixnodeparent);

  001b9	8b 06		 mov	 eax, DWORD PTR [esi]
$LN7@erase:

; 1336 : 						}
; 1337 : 					if (this->_Isnil(_Pnode))

  001bb	80 78 19 00	 cmp	 BYTE PTR [eax+25], 0

; 1338 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1339 : 					else if (this->_Color(this->_Right(_Pnode)) ==

  001bf	75 15		 jne	 SHORT $LN327@erase

; 1340 : 						this->_Black
; 1341 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

  001c1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001c4	80 79 18 01	 cmp	 BYTE PTR [ecx+24], 1
  001c8	75 22		 jne	 SHORT $LN4@erase
  001ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  001cc	80 79 18 01	 cmp	 BYTE PTR [ecx+24], 1
  001d0	75 1a		 jne	 SHORT $LN4@erase
$LN328@erase:

; 1342 : 						{	// redden left subtree with black children
; 1343 : 						this->_Color(_Pnode) = this->_Red;

  001d2	c6 40 18 00	 mov	 BYTE PTR [eax+24], 0
$LN327@erase:

; 1344 : 						_Fixnode = _Fixnodeparent;

  001d6	8b fe		 mov	 edi, esi
  001d8	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
$LN326@erase:

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  001db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001de	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001e1	3b 78 04	 cmp	 edi, DWORD PTR [eax+4]
  001e4	0f 85 3f ff ff
	ff		 jne	 $LL18@erase
  001ea	eb 37		 jmp	 SHORT $LN16@erase
$LN4@erase:

; 1345 : 						}
; 1346 : 					else
; 1347 : 						{	// must rearrange left subtree
; 1348 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

  001ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ee	80 79 18 01	 cmp	 BYTE PTR [ecx+24], 1
  001f2	75 16		 jne	 SHORT $LN2@erase

; 1349 : 							{	// rotate red up from right sub-subtree
; 1350 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

  001f4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001f7	c6 41 18 01	 mov	 BYTE PTR [ecx+24], 1

; 1351 : 							this->_Color(_Pnode) = this->_Red;
; 1352 : 							_Lrotate(_Pnode);

  001fb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001fe	50		 push	 eax
  001ff	c6 40 18 00	 mov	 BYTE PTR [eax+24], 0
  00203	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Lrotate

; 1353 : 							_Pnode = this->_Left(_Fixnodeparent);

  00208	8b 06		 mov	 eax, DWORD PTR [esi]
$LN2@erase:

; 1354 : 							}
; 1355 : 
; 1356 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  0020a	8a 4e 18	 mov	 cl, BYTE PTR [esi+24]
  0020d	88 48 18	 mov	 BYTE PTR [eax+24], cl

; 1357 : 						this->_Color(_Fixnodeparent) = this->_Black;
; 1358 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;
; 1359 : 						_Rrotate(_Fixnodeparent);

  00210	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00213	c6 46 18 01	 mov	 BYTE PTR [esi+24], 1
  00217	8b 00		 mov	 eax, DWORD PTR [eax]
  00219	56		 push	 esi
  0021a	c6 40 18 01	 mov	 BYTE PTR [eax+24], 1
  0021e	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Rrotate
$LN16@erase:

; 1360 : 						break;	// tree now recolored/rebalanced
; 1361 : 						}
; 1362 : 					}
; 1363 : 
; 1364 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

  00223	c6 47 18 01	 mov	 BYTE PTR [edi+24], 1
$LN19@erase:

; 1365 : 			}
; 1366 : 
; 1367 : 		_Dest_val(this->_Alval,
; 1368 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node
; 1369 : 
; 1370 : 		this->_Alnod.deallocate(_Erasednode, 1);

  00227	53		 push	 ebx
  00228	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0022d	59		 pop	 ecx

; 1371 : 
; 1372 : 		if (0 < this->_Mysize)

  0022e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00231	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00234	5f		 pop	 edi
  00235	5e		 pop	 esi
  00236	5b		 pop	 ebx
  00237	85 c0		 test	 eax, eax
  00239	74 04		 je	 SHORT $LN1@erase

; 1373 : 			--this->_Mysize;

  0023b	48		 dec	 eax
  0023c	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@erase:

; 1374 : 
; 1375 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

  0023f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00242	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00245	89 08		 mov	 DWORD PTR [eax], ecx

; 1376 : 		}

  00247	c9		 leave
  00248	c2 08 00	 ret	 8
$LN322@erase:
?erase@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::erase
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::clear, COMDAT
; _this$ = ecx

; 1410 : 		{	// erase all

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 1411 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1412 : 		this->_Orphan_ptr(*this, 0);
; 1413 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1414 : 
; 1415 : 		_Erase(_Root());

  00004	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00007	ff 70 04	 push	 DWORD PTR [eax+4]
  0000a	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Erase

; 1416 : 		_Root() = this->_Myhead;

  0000f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1417 : 		_Lmost() = this->_Myhead;

  00015	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax

; 1418 : 		_Rmost() = this->_Myhead;

  0001a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0001d	89 76 08	 mov	 DWORD PTR [esi+8], esi

; 1419 : 		this->_Mysize = 0;

  00020	83 67 08 00	 and	 DWORD PTR [edi+8], 0
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi

; 1420 : 		}

  00026	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::clear
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T507461 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::erase, COMDAT
; _this$ = ecx

; 1379 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1380 : 		if (_First == begin() && _Last == end())

  00007	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  0000d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0000f	75 13		 jne	 SHORT $LN65@erase@2
  00011	39 45 10	 cmp	 DWORD PTR __Last$[ebp], eax
  00014	75 0e		 jne	 SHORT $LN65@erase@2

; 1381 : 			{	// erase all
; 1382 : 			clear();

  00016	8b ce		 mov	 ecx, esi
  00018	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::clear

; 1383 : 			return (begin());

  0001d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00020	8b 08		 mov	 ecx, DWORD PTR [eax]
  00022	eb 25		 jmp	 SHORT $LN1@erase@2
$LN65@erase@2:

; 1384 : 			}
; 1385 : 		else
; 1386 : 			{	// partial erase, one at a time
; 1387 : 			while (_First != _Last)

  00024	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00027	74 20		 je	 SHORT $LN1@erase@2
  00029	57		 push	 edi
$LL2@erase@2:

; 1388 : 				erase(_First++);

  0002a	8b f9		 mov	 edi, ecx
  0002c	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0002f	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >,std::_Iterator_base0>::operator++
  00034	57		 push	 edi
  00035	8d 45 fc	 lea	 eax, DWORD PTR $T507461[ebp]
  00038	50		 push	 eax
  00039	8b ce		 mov	 ecx, esi
  0003b	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::erase
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00043	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00046	75 e2		 jne	 SHORT $LL2@erase@2
  00048	5f		 pop	 edi
$LN1@erase@2:

; 1389 : 			return (iterator(_First._Ptr, this));

  00049	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0004c	89 08		 mov	 DWORD PTR [eax], ecx
  0004e	5e		 pop	 esi

; 1390 : 			}
; 1391 : 		}

  0004f	c9		 leave
  00050	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Tidy
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T507652 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1865 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1866 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 10		 mov	 edx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T507652[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::erase

; 1867 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::~_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T507837 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::~_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >, COMDAT
; _this$ = ecx

; 790  : 		{	// destroy tree

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 791  : 		_Tidy();

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	8d 45 ec	 lea	 eax, DWORD PTR $T507837[ebp]
  0001f	50		 push	 eax
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::erase

; 792  : 		}

  00027	ff 76 04	 push	 DWORD PTR [esi+4]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	e8 00 00 00 00	 call	 __EH_epilog3
  00035	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::~_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >
__ehhandler$??1?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::~_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >
PUBLIC	??1?$map@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@@std@@QAE@XZ ; std::map<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> > >::~map<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> > >
; Function compile flags: /Ogsp
;	COMDAT ??1?$map@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@@std@@QAE@XZ PROC ; std::map<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> > >::~map<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> > >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::~_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >
??1?$map@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@@std@@QAE@XZ ENDP ; std::map<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> > >::~map<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> > >
_TEXT	ENDS
PUBLIC	??1ioPerformanceChecker@@QAE@XZ			; ioPerformanceChecker::~ioPerformanceChecker
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioperformancechecker.cpp
;	COMDAT ??1ioPerformanceChecker@@QAE@XZ
_TEXT	SEGMENT
??1ioPerformanceChecker@@QAE@XZ PROC			; ioPerformanceChecker::~ioPerformanceChecker, COMDAT
; _this$ = ecx

; 51   : }

  00000	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::~_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >
??1ioPerformanceChecker@@QAE@XZ ENDP			; ioPerformanceChecker::~ioPerformanceChecker
_TEXT	ENDS
PUBLIC	??0?$map@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@@std@@QAE@XZ ; std::map<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> > >::map<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$map@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
$T507913 = -8						; size = 4
$T507915 = -8						; size = 4
$T507902 = -1						; size = 1
??0?$map@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@@std@@QAE@XZ PROC ; std::map<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> > >::map<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> > >, COMDAT
; _this$ = ecx

; 106  : 		{	// construct empty map from defaults

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	51		 push	 ecx
  00007	89 65 f8	 mov	 DWORD PTR $T507915[ebp], esp
  0000a	8d 45 ff	 lea	 eax, DWORD PTR $T507902[ebp]
  0000d	89 65 f8	 mov	 DWORD PTR $T507913[ebp], esp
  00010	50		 push	 eax
  00011	8b f1		 mov	 esi, ecx
  00013	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >

; 107  : 		}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c9		 leave
  0001c	c3		 ret	 0
??0?$map@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@@std@@QAE@XZ ENDP ; std::map<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> > >::map<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> > >
_TEXT	ENDS
PUBLIC	??_GioPerformanceChecker@@QAEPAXI@Z		; ioPerformanceChecker::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_GioPerformanceChecker@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioPerformanceChecker@@QAEPAXI@Z PROC		; ioPerformanceChecker::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  00009	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::~_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >
  0000e	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00012	74 07		 je	 SHORT $LN1@scalar@2
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001a	59		 pop	 ecx
$LN1@scalar@2:
  0001b	8b c6		 mov	 eax, esi
  0001d	5e		 pop	 esi
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??_GioPerformanceChecker@@QAEPAXI@Z ENDP		; ioPerformanceChecker::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0ioPerformanceChecker@@QAE@XZ			; ioPerformanceChecker::ioPerformanceChecker
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioperformancechecker.cpp
;	COMDAT ??0ioPerformanceChecker@@QAE@XZ
_TEXT	SEGMENT
$T507948 = -8						; size = 4
$T507960 = -8						; size = 4
$T507956 = -1						; size = 1
??0ioPerformanceChecker@@QAE@XZ PROC			; ioPerformanceChecker::ioPerformanceChecker, COMDAT
; _this$ = ecx

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  0000b	51		 push	 ecx
  0000c	89 65 f8	 mov	 DWORD PTR $T507960[ebp], esp
  0000f	8d 45 ff	 lea	 eax, DWORD PTR $T507956[ebp]
  00012	89 65 f8	 mov	 DWORD PTR $T507948[ebp], esp
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::_Tree_val<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >

; 34   : 	m_dwStartTime   = 0;

  0001b	33 c0		 xor	 eax, eax
  0001d	89 06		 mov	 DWORD PTR [esi], eax

; 35   : 
; 36   : 	m_dwPreCheckTime = 0;

  0001f	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 37   : 	m_iLoopCount = 0;

  00022	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 38   : 
; 39   : 	m_dwWaitTime = 0;

  00025	89 46 0c	 mov	 DWORD PTR [esi+12], eax

; 40   : 	m_bCheckNow  = false;

  00028	88 46 10	 mov	 BYTE PTR [esi+16], al

; 41   : 
; 42   : 	m_iEvenCount = 0;

  0002b	89 46 14	 mov	 DWORD PTR [esi+20], eax

; 43   : 	m_dwEvenErrorSendTime = 0;

  0002e	89 46 18	 mov	 DWORD PTR [esi+24], eax

; 44   : 
; 45   : 	m_bLogging = false;

  00031	66 89 46 2c	 mov	 WORD PTR [esi+44], ax

; 46   : 	m_bSendLog = false;
; 47   : }

  00035	8b c6		 mov	 eax, esi
  00037	5e		 pop	 esi
  00038	c9		 leave
  00039	c3		 ret	 0
??0ioPerformanceChecker@@QAE@XZ ENDP			; ioPerformanceChecker::ioPerformanceChecker
_TEXT	ENDS
PUBLIC	?GetInstance@ioPerformanceChecker@@SAAAV1@XZ	; ioPerformanceChecker::GetInstance
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetInstance@ioPerformanceChecker@@SAAAV1@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetInstance@ioPerformanceChecker@@SAAAV1@XZ$0
__ehfuncinfo$?GetInstance@ioPerformanceChecker@@SAAAV1@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetInstance@ioPerformanceChecker@@SAAAV1@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?GetInstance@ioPerformanceChecker@@SAAAV1@XZ
_TEXT	SEGMENT
$T507969 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?GetInstance@ioPerformanceChecker@@SAAAV1@XZ PROC	; ioPerformanceChecker::GetInstance, COMDAT

; 18   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?GetInstance@ioPerformanceChecker@@SAAAV1@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 19   : 	if( !s_pInstance )

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_pInstance
  00011	85 c0		 test	 eax, eax
  00013	75 23		 jne	 SHORT $LN1@GetInstanc

; 20   : 	{
; 21   : 		s_pInstance = new ioPerformanceChecker;

  00015	6a 30		 push	 48			; 00000030H
  00017	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001c	59		 pop	 ecx
  0001d	8b c8		 mov	 ecx, eax
  0001f	89 4d f0	 mov	 DWORD PTR $T507969[ebp], ecx
  00022	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00026	85 c9		 test	 ecx, ecx
  00028	74 07		 je	 SHORT $LN4@GetInstanc
  0002a	e8 00 00 00 00	 call	 ??0ioPerformanceChecker@@QAE@XZ ; ioPerformanceChecker::ioPerformanceChecker
  0002f	eb 02		 jmp	 SHORT $LN5@GetInstanc
$LN4@GetInstanc:
  00031	33 c0		 xor	 eax, eax
$LN5@GetInstanc:
  00033	a3 00 00 00 00	 mov	 DWORD PTR _s_pInstance, eax
$LN1@GetInstanc:

; 22   : 	}
; 23   : 
; 24   : 	return *s_pInstance;
; 25   : }

  00038	e8 00 00 00 00	 call	 __EH_epilog3
  0003d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetInstance@ioPerformanceChecker@@SAAAV1@XZ$0:
  00000	ff 75 f0	 push	 DWORD PTR $T507969[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__ehhandler$?GetInstance@ioPerformanceChecker@@SAAAV1@XZ:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00011	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetInstance@ioPerformanceChecker@@SAAAV1@XZ
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetInstance@ioPerformanceChecker@@SAAAV1@XZ ENDP	; ioPerformanceChecker::GetInstance
PUBLIC	?ReleaseInstance@ioPerformanceChecker@@SAXXZ	; ioPerformanceChecker::ReleaseInstance
; Function compile flags: /Ogsp
;	COMDAT ?ReleaseInstance@ioPerformanceChecker@@SAXXZ
_TEXT	SEGMENT
?ReleaseInstance@ioPerformanceChecker@@SAXXZ PROC	; ioPerformanceChecker::ReleaseInstance, COMDAT

; 29   : 	SAFEDELETE( s_pInstance );

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_pInstance
  00005	85 c0		 test	 eax, eax
  00007	74 1a		 je	 SHORT $LN1@ReleaseIns
  00009	56		 push	 esi
  0000a	8d 48 1c	 lea	 ecx, DWORD PTR [eax+28]
  0000d	8b f0		 mov	 esi, eax
  0000f	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@HUPointValue@ioPerformanceChecker@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointValue@ioPerformanceChecker@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >::~_Tree<std::_Tmap_traits<int,ioPerformanceChecker::PointValue,std::less<int>,std::allocator<std::pair<int const ,ioPerformanceChecker::PointValue> >,0> >
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001a	83 25 00 00 00
	00 00		 and	 DWORD PTR _s_pInstance, 0
  00021	59		 pop	 ecx
  00022	5e		 pop	 esi
$LN1@ReleaseIns:

; 30   : }

  00023	c3		 ret	 0
?ReleaseInstance@ioPerformanceChecker@@SAXXZ ENDP	; ioPerformanceChecker::ReleaseInstance
_TEXT	ENDS
END
