; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioPetEatInfoManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?ms_Singleton@?$Singleton@VioPetEatInfoManager@@@@1PAVioPetEatInfoManager@@A ; Singleton<ioPetEatInfoManager>::ms_Singleton
;	COMDAT ?ms_Singleton@?$Singleton@VioPetEatInfoManager@@@@1PAVioPetEatInfoManager@@A
_BSS	SEGMENT
?ms_Singleton@?$Singleton@VioPetEatInfoManager@@@@1PAVioPetEatInfoManager@@A DD 01H DUP (?) ; Singleton<ioPetEatInfoManager>::ms_Singleton
_BSS	ENDS
PUBLIC	??1ioINILoader_e@@QAE@XZ			; ioINILoader_e::~ioINILoader_e
EXTRN	__imp_??1ioINILoader@@QAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1ioINILoader_e@@QAE@XZ
_TEXT	SEGMENT
??1ioINILoader_e@@QAE@XZ PROC				; ioINILoader_e::~ioINILoader_e, COMDAT
; _this$ = ecx
  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
??1ioINILoader_e@@QAE@XZ ENDP				; ioINILoader_e::~ioINILoader_e
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1exception@std@@UAE@XZ
  00012	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00016	74 07		 je	 SHORT $LN1@scalar
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	59		 pop	 ecx
$LN1@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0?$Singleton@VioPetEatInfoManager@@@@QAE@XZ	; Singleton<ioPetEatInfoManager>::Singleton<ioPetEatInfoManager>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
;	COMDAT ??0?$Singleton@VioPetEatInfoManager@@@@QAE@XZ
_TEXT	SEGMENT
??0?$Singleton@VioPetEatInfoManager@@@@QAE@XZ PROC	; Singleton<ioPetEatInfoManager>::Singleton<ioPetEatInfoManager>, COMDAT
; _this$ = ecx

; 27   : 	Singleton()

  00000	8b c1		 mov	 eax, ecx

; 28   : 	{
; 29   : 		assert( !ms_Singleton );
; 30   : 		int offset = (int)(T*)1 - (int)(Singleton <T>*)(T*)1;
; 31   : 		ms_Singleton = (T*)((int)this + offset);

  00002	8d 48 fc	 lea	 ecx, DWORD PTR [eax-4]
  00005	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioPetEatInfoManager@@@@1PAVioPetEatInfoManager@@A, ecx ; Singleton<ioPetEatInfoManager>::ms_Singleton

; 32   : 	}

  0000b	c3		 ret	 0
??0?$Singleton@VioPetEatInfoManager@@@@QAE@XZ ENDP	; Singleton<ioPetEatInfoManager>::Singleton<ioPetEatInfoManager>
_TEXT	ENDS
PUBLIC	??1?$Singleton@VioPetEatInfoManager@@@@QAE@XZ	; Singleton<ioPetEatInfoManager>::~Singleton<ioPetEatInfoManager>
; Function compile flags: /Ogsp
;	COMDAT ??1?$Singleton@VioPetEatInfoManager@@@@QAE@XZ
_TEXT	SEGMENT
??1?$Singleton@VioPetEatInfoManager@@@@QAE@XZ PROC	; Singleton<ioPetEatInfoManager>::~Singleton<ioPetEatInfoManager>, COMDAT
; _this$ = ecx

; 36   : 		assert( ms_Singleton );
; 37   : 		ms_Singleton = 0;

  00000	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioPetEatInfoManager@@@@1PAVioPetEatInfoManager@@A, 0 ; Singleton<ioPetEatInfoManager>::ms_Singleton

; 38   : 	}

  00007	c3		 ret	 0
??1?$Singleton@VioPetEatInfoManager@@@@QAE@XZ ENDP	; Singleton<ioPetEatInfoManager>::~Singleton<ioPetEatInfoManager>
_TEXT	ENDS
PUBLIC	?GetSingleton@?$Singleton@VioPetEatInfoManager@@@@SAAAVioPetEatInfoManager@@XZ ; Singleton<ioPetEatInfoManager>::GetSingleton
; Function compile flags: /Ogsp
;	COMDAT ?GetSingleton@?$Singleton@VioPetEatInfoManager@@@@SAAAVioPetEatInfoManager@@XZ
_TEXT	SEGMENT
?GetSingleton@?$Singleton@VioPetEatInfoManager@@@@SAAAVioPetEatInfoManager@@XZ PROC ; Singleton<ioPetEatInfoManager>::GetSingleton, COMDAT

; 42   : 		assert( ms_Singleton );
; 43   : 		return (*ms_Singleton);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioPetEatInfoManager@@@@1PAVioPetEatInfoManager@@A ; Singleton<ioPetEatInfoManager>::ms_Singleton

; 44   : 	}

  00005	c3		 ret	 0
?GetSingleton@?$Singleton@VioPetEatInfoManager@@@@SAAAVioPetEatInfoManager@@XZ ENDP ; Singleton<ioPetEatInfoManager>::GetSingleton
_TEXT	ENDS
PUBLIC	?size@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QBEIXZ ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QBEIXZ PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 14		 push	 20			; 00000014H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 880  : 		}

  0000b	c3		 ret	 0
?size@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEAAURankMaterialEatInfo@ioPetEatInfoManager@@I@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEAAURankMaterialEatInfo@ioPetEatInfoManager@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEAAURankMaterialEatInfo@ioPetEatInfoManager@@I@Z PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pos$[ebp]
  00006	6b c0 14	 imul	 eax, 20			; 00000014H
  00009	03 01		 add	 eax, DWORD PTR [ecx]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEAAURankMaterialEatInfo@ioPetEatInfoManager@@I@Z ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::operator[]
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	return (_Where);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 58   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 62   : 	}

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z ; std::vector<int,std::allocator<int> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z PROC ; std::vector<int,std::allocator<int> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z ENDP ; std::vector<int,std::allocator<int> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Orphan_range
_TEXT	ENDS
PUBLIC	?capacity@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QBEIXZ ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::capacity
; Function compile flags: /Ogsp
;	COMDAT ?capacity@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QBEIXZ PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 14		 push	 20			; 00000014H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 778  : 		}

  0000b	c3		 ret	 0
?capacity@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::capacity
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IBE_NPBURankMaterialEatInfo@ioPetEatInfoManager@@@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Inside
; Function compile flags: /Ogsp
;	COMDAT ?_Inside@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IBE_NPBURankMaterialEatInfo@ioPetEatInfoManager@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IBE_NPBURankMaterialEatInfo@ioPetEatInfoManager@@@Z PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside@2
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside@2
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside@2
$LN3@Inside@2:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside@2:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IBE_NPBURankMaterialEatInfo@ioPetEatInfoManager@@@Z ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Inside
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IBEXXZ ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IBEXXZ PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
  0000b	cc		 int	 3
?_Xlen@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IBEXXZ ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Xlen
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IBEXPAURankMaterialEatInfo@ioPetEatInfoManager@@0@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IBEXPAURankMaterialEatInfo@ioPetEatInfoManager@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IBEXPAURankMaterialEatInfo@ioPetEatInfoManager@@0@Z PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IBEXPAURankMaterialEatInfo@ioPetEatInfoManager@@0@Z ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE@XZ ; std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::~_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::~_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::~_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >
_TEXT	ENDS
PUBLIC	??0?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAE@XZ ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::allocator<ioPetEatInfoManager::RankMaterialEatInfo>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAE@XZ PROC ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::allocator<ioPetEatInfoManager::RankMaterialEatInfo>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAE@XZ ENDP ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::allocator<ioPetEatInfoManager::RankMaterialEatInfo>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@I@Z ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@I@Z PROC ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@I@Z ENDP ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::deallocate
_TEXT	ENDS
PUBLIC	??0?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAE@ABV01@@Z ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::allocator<ioPetEatInfoManager::RankMaterialEatInfo>
; Function compile flags: /Ogsp
;	COMDAT ??0?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAE@ABV01@@Z PROC ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::allocator<ioPetEatInfoManager::RankMaterialEatInfo>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::allocator<ioPetEatInfoManager::RankMaterialEatInfo>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QBEIXZ ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QBEIXZ PROC ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QBEIXZ ENDP ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::max_size
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >::_Compat
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >::_Compat
_TEXT	ENDS
PUBLIC	??$addressof@$$CBH@std@@YAPBHABH@Z		; std::addressof<int const >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@$$CBH@std@@YAPBHABH@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBH@std@@YAPBHABH@Z PROC			; std::addressof<int const >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@$$CBH@std@@YAPBHABH@Z ENDP			; std::addressof<int const >
_TEXT	ENDS
PUBLIC	??$addressof@$$CBURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAPBURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z ; std::addressof<ioPetEatInfoManager::RankMaterialEatInfo const >
; Function compile flags: /Ogsp
;	COMDAT ??$addressof@$$CBURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAPBURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAPBURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z PROC ; std::addressof<ioPetEatInfoManager::RankMaterialEatInfo const >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@$$CBURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAPBURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z ENDP ; std::addressof<ioPetEatInfoManager::RankMaterialEatInfo const >
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@IPAU12@@Z ; std::_Allocate<ioPetEatInfoManager::RankMaterialEatInfo>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@IPAU12@@Z
_TEXT	SEGMENT
$T507452 = -12						; size = 12
$T507457 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@IPAU12@@Z PROC ; std::_Allocate<ioPetEatInfoManager::RankMaterialEatInfo>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 cc cc cc
	0c		 cmp	 ecx, 214748364		; 0cccccccH
  00015	77 0e		 ja	 SHORT $LN1@Allocate
  00017	6b c9 14	 imul	 ecx, 20			; 00000014H
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T507457[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T507457[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T507452[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T507452[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T507452[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@IPAU12@@Z ENDP ; std::_Allocate<ioPetEatInfoManager::RankMaterialEatInfo>
_TEXT	ENDS
PUBLIC	??$forward@ABH@std@@YAABHABH@Z			; std::forward<int const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABH@std@@YAABHABH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABH@std@@YAABHABH@Z PROC			; std::forward<int const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABH@std@@YAABHABH@Z ENDP			; std::forward<int const &>
_TEXT	ENDS
PUBLIC	??$forward@AAURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAAAURankMaterialEatInfo@ioPetEatInfoManager@@AAU12@@Z ; std::forward<ioPetEatInfoManager::RankMaterialEatInfo &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@AAURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAAAURankMaterialEatInfo@ioPetEatInfoManager@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAAAURankMaterialEatInfo@ioPetEatInfoManager@@AAU12@@Z PROC ; std::forward<ioPetEatInfoManager::RankMaterialEatInfo &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAAAURankMaterialEatInfo@ioPetEatInfoManager@@AAU12@@Z ENDP ; std::forward<ioPetEatInfoManager::RankMaterialEatInfo &>
_TEXT	ENDS
PUBLIC	??$forward@ABURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAABURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z ; std::forward<ioPetEatInfoManager::RankMaterialEatInfo const &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@ABURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAABURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAABURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z PROC ; std::forward<ioPetEatInfoManager::RankMaterialEatInfo const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAABURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z ENDP ; std::forward<ioPetEatInfoManager::RankMaterialEatInfo const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@URankMaterialEatInfo@ioPetEatInfoManager@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@0@Z ; std::_Ptr_cat<ioPetEatInfoManager::RankMaterialEatInfo,ioPetEatInfoManager::RankMaterialEatInfo>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@URankMaterialEatInfo@ioPetEatInfoManager@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@URankMaterialEatInfo@ioPetEatInfoManager@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@0@Z PROC ; std::_Ptr_cat<ioPetEatInfoManager::RankMaterialEatInfo,ioPetEatInfoManager::RankMaterialEatInfo>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@URankMaterialEatInfo@ioPetEatInfoManager@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@0@Z ENDP ; std::_Ptr_cat<ioPetEatInfoManager::RankMaterialEatInfo,ioPetEatInfoManager::RankMaterialEatInfo>
_TEXT	ENDS
PUBLIC	??$_Construct@HABH@std@@YAXPAHABH@Z		; std::_Construct<int,int const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Construct@HABH@std@@YAXPAHABH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@HABH@std@@YAXPAHABH@Z PROC		; std::_Construct<int,int const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@Construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@Construct:

; 49   : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Construct@HABH@std@@YAXPAHABH@Z ENDP		; std::_Construct<int,int const &>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@@Z ; std::_Val_type<ioPetEatInfoManager::RankMaterialEatInfo *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@@Z PROC ; std::_Val_type<ioPetEatInfoManager::RankMaterialEatInfo *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@@Z ENDP ; std::_Val_type<ioPetEatInfoManager::RankMaterialEatInfo *>
_TEXT	ENDS
PUBLIC	??$move@AAURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YA$$QAURankMaterialEatInfo@ioPetEatInfoManager@@AAU12@@Z ; std::move<ioPetEatInfoManager::RankMaterialEatInfo &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YA$$QAURankMaterialEatInfo@ioPetEatInfoManager@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YA$$QAURankMaterialEatInfo@ioPetEatInfoManager@@AAU12@@Z PROC ; std::move<ioPetEatInfoManager::RankMaterialEatInfo &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAURankMaterialEatInfo@ioPetEatInfoManager@@@std@@YA$$QAURankMaterialEatInfo@ioPetEatInfoManager@@AAU12@@Z ENDP ; std::move<ioPetEatInfoManager::RankMaterialEatInfo &>
_TEXT	ENDS
PUBLIC	??$_Copy_impl@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<int *,int *>
EXTRN	__imp__memmove:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Copy_impl@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_impl@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Copy_impl<int *,int *>, COMDAT

; 2152 : 	{	// copy [_First, _Last) to [_Dest, ...), pointers to scalars

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2153 : 	ptrdiff_t _Count = _Last - _First;

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	57		 push	 edi

; 2154 : 	_CSTD memmove(&*_Dest, &*_First,
; 2155 : 		_Count * sizeof (*_First));

  0000b	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0000e	c1 fe 02	 sar	 esi, 2
  00011	c1 e6 02	 shl	 esi, 2
  00014	56		 push	 esi
  00015	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00018	57		 push	 edi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2156 : 	return (_Dest + _Count);

  00022	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 2157 : 	}

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Copy_impl@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_impl<int *,int *>
_TEXT	ENDS
PUBLIC	??$forward@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@YA$$QAURankMaterialEatInfo@ioPetEatInfoManager@@AAU12@@Z ; std::forward<ioPetEatInfoManager::RankMaterialEatInfo>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@YA$$QAURankMaterialEatInfo@ioPetEatInfoManager@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@YA$$QAURankMaterialEatInfo@ioPetEatInfoManager@@AAU12@@Z PROC ; std::forward<ioPetEatInfoManager::RankMaterialEatInfo>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@YA$$QAURankMaterialEatInfo@ioPetEatInfoManager@@AAU12@@Z ENDP ; std::forward<ioPetEatInfoManager::RankMaterialEatInfo>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@PAH@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@0@AAPAH@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >,int *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@PAH@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@0@AAPAH@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@PAH@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@0@AAPAH@Z PROC ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >,int *>, COMDAT

; 485  : 	{	// return pointer category from arbitrary arguments

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 486  : 	_Nonscalar_ptr_iterator_tag _Cat;
; 487  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 488  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@PAH@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@0@AAPAH@Z ENDP ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >,int *>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@HH@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<int,int>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_copy@HH@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@HH@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<int,int>, COMDAT

; 399  : 	{	// copy [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 400  : 	_DEBUG_RANGE(_First, _Last);
; 401  : 	_DEBUG_POINTER(_Dest);
; 402  : 	size_t _Count = (size_t)(_Last - _First);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2

; 403  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 404  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 405  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninit_copy@HH@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<int,int>
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEABHXZ ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEABHXZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEABHXZ PROC ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator*, COMDAT
; _this$ = ecx

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 85   : 		}

  00002	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEABHXZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator++, COMDAT
; _this$ = ecx

; 93   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 111  : 		return (*this);
; 112  : 		}

  00005	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator++
_TEXT	ENDS
PUBLIC	??$_Destroy@H@std@@YAXPAH@Z			; std::_Destroy<int>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@H@std@@YAXPAH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@H@std@@YAXPAH@Z PROC			; std::_Destroy<int>, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@H@std@@YAXPAH@Z ENDP			; std::_Destroy<int>
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
PUBLIC	?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC	; std::vector<int,std::allocator<int> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP	; std::vector<int,std::allocator<int> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ; std::vector<int,std::allocator<int> >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z PROC	; std::vector<int,std::allocator<int> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00008	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ENDP	; std::vector<int,std::allocator<int> >::operator[]
_TEXT	ENDS
PUBLIC	??0?$allocator@H@std@@QAE@XZ			; std::allocator<int>::allocator<int>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@H@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@H@std@@QAE@XZ PROC			; std::allocator<int>::allocator<int>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@H@std@@QAE@XZ ENDP			; std::allocator<int>::allocator<int>
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ ; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >
_TEXT	ENDS
PUBLIC	??0?$allocator@H@std@@QAE@ABV01@@Z		; std::allocator<int>::allocator<int>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@H@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@H@std@@QAE@ABV01@@Z PROC			; std::allocator<int>::allocator<int>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@H@std@@QAE@ABV01@@Z ENDP			; std::allocator<int>::allocator<int>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@H@std@@QAEXPAHI@Z	; std::allocator<int>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@H@std@@QAEXPAHI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@H@std@@QAEXPAHI@Z PROC		; std::allocator<int>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@H@std@@QAEXPAHI@Z ENDP		; std::allocator<int>::deallocate
_TEXT	ENDS
PUBLIC	?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC ; std::vector<int,std::allocator<int> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 778  : 		}

  00008	c3		 ret	 0
?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP ; std::vector<int,std::allocator<int> >::capacity
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@@Z ; std::vector<int,std::allocator<int> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@@Z PROC ; std::vector<int,std::allocator<int> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@@Z ENDP ; std::vector<int,std::allocator<int> >::_Make_iter
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ ; std::vector<int,std::allocator<int> >::_Xlen
; Function compile flags: /Ogsp
;	COMDAT ?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ PROC	; std::vector<int,std::allocator<int> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@2:
$LN3@Xlen@2:
  0000b	cc		 int	 3
?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ ENDP	; std::vector<int,std::allocator<int> >::_Xlen
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@H@std@@QBEIXZ		; std::allocator<int>::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@H@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@H@std@@QBEIXZ PROC		; std::allocator<int>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@H@std@@QBEIXZ ENDP		; std::allocator<int>::max_size
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Compat
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Compat
_TEXT	ENDS
PUBLIC	??$_Allocate@H@std@@YAPAHIPAH@Z			; std::_Allocate<int>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Allocate@H@std@@YAPAHIPAH@Z
_TEXT	SEGMENT
$T507577 = -12						; size = 12
$T507581 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@H@std@@YAPAHIPAH@Z PROC			; std::_Allocate<int>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3e		 je	 SHORT $LN5@Allocate@2

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate@2
  00017	8b c1		 mov	 eax, ecx
  00019	c1 e0 02	 shl	 eax, 2
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	59		 pop	 ecx
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 26		 jne	 SHORT $LN5@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	83 65 08 00	 and	 DWORD PTR $T507581[ebp], 0
  0002b	8d 45 08	 lea	 eax, DWORD PTR $T507581[ebp]
  0002e	50		 push	 eax
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T507577[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003d	8d 45 f4	 lea	 eax, DWORD PTR $T507577[ebp]
  00040	50		 push	 eax
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T507577[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:

; 40   : 	}

  0004d	c9		 leave
  0004e	c3		 ret	 0
$LN9@Allocate@2:
??$_Allocate@H@std@@YAPAHIPAH@Z ENDP			; std::_Allocate<int>
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$forward@AAH@std@@YAAAHAAH@Z			; std::forward<int &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAH@std@@YAAAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAH@std@@YAAAHAAH@Z PROC			; std::forward<int &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAH@std@@YAAAHAAH@Z ENDP			; std::forward<int &>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAH@std@@YAPAHPAH@Z		; std::_Val_type<int *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAH@std@@YAPAHPAH@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAH@std@@YAPAHPAH@Z PROC			; std::_Val_type<int *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAH@std@@YAPAHPAH@Z ENDP			; std::_Val_type<int *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z ; std::_Ptr_cat<int,int>
; Function compile flags: /Ogsp
;	COMDAT ??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z PROC ; std::_Ptr_cat<int,int>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z ENDP ; std::_Ptr_cat<int,int>
_TEXT	ENDS
PUBLIC	??$_Move@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<int *,int *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Move@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<int *,int *>, COMDAT

; 2522 : 	{	// move [_First, _Last) to [_Dest, ...), pointers to scalars

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2523 : 	ptrdiff_t _Count = _Last - _First;

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	57		 push	 edi

; 2524 : 	_CSTD memmove(&*_Dest, &*_First,
; 2525 : 		_Count * sizeof (*_First));

  0000b	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0000e	c1 fe 02	 sar	 esi, 2
  00011	c1 e6 02	 shl	 esi, 2
  00014	56		 push	 esi
  00015	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00018	57		 push	 edi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2526 : 	return (_Dest + _Count);

  00022	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 2527 : 	}

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Move@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<int *,int *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 105  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@HHH@std@@YAPAHPAH00AAV?$allocator@H@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<int,int,int>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@HHH@std@@YAPAHPAH00AAV?$allocator@H@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@HHH@std@@YAPAHPAH00AAV?$allocator@H@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<int,int,int>, COMDAT

; 456  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 457  : 	_DEBUG_RANGE(_First, _Last);
; 458  : 	_DEBUG_POINTER(_Dest);
; 459  : 	size_t _Count = (size_t)(_Last - _First);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2

; 460  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 461  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 462  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninit_move@HHH@std@@YAPAHPAH00AAV?$allocator@H@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<int,int,int>
_TEXT	ENDS
PUBLIC	?GetSingleton@ioPetEatInfoManager@@SAAAV1@XZ	; ioPetEatInfoManager::GetSingleton
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iopeteatinfomanager.cpp
;	COMDAT ?GetSingleton@ioPetEatInfoManager@@SAAAV1@XZ
_TEXT	SEGMENT
?GetSingleton@ioPetEatInfoManager@@SAAAV1@XZ PROC	; ioPetEatInfoManager::GetSingleton, COMDAT

; 20   : 	return Singleton< ioPetEatInfoManager >::GetSingleton();

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioPetEatInfoManager@@@@1PAVioPetEatInfoManager@@A ; Singleton<ioPetEatInfoManager>::ms_Singleton

; 21   : }

  00005	c3		 ret	 0
?GetSingleton@ioPetEatInfoManager@@SAAAV1@XZ ENDP	; ioPetEatInfoManager::GetSingleton
_TEXT	ENDS
PUBLIC	?GetNeedMaterialCnt@ioPetEatInfoManager@@QAEHHH@Z ; ioPetEatInfoManager::GetNeedMaterialCnt
; Function compile flags: /Ogsp
;	COMDAT ?GetNeedMaterialCnt@ioPetEatInfoManager@@QAEHHH@Z
_TEXT	SEGMENT
_nRankType$ = 8						; size = 4
_nCurLevel$ = 12					; size = 4
?GetNeedMaterialCnt@ioPetEatInfoManager@@QAEHHH@Z PROC	; ioPetEatInfoManager::GetNeedMaterialCnt, COMDAT
; _this$ = ecx

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 82   : 	if ( nRankType <= PRT_NONE || nRankType >= PRT_MAX )

  00005	8b 7d 08	 mov	 edi, DWORD PTR _nRankType$[ebp]
  00008	8d 47 ff	 lea	 eax, DWORD PTR [edi-1]
  0000b	83 f8 04	 cmp	 eax, 4
  0000e	77 23		 ja	 SHORT $LN7@GetNeedMat

; 84   : 
; 85   : 	int nMaxInfo = (int)m_RankMaterialEatInfo.size();

  00010	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00013	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00016	6a 14		 push	 20			; 00000014H
  00018	99		 cdq
  00019	5e		 pop	 esi
  0001a	f7 fe		 idiv	 esi

; 86   : 	for ( int i=0; i<nMaxInfo; ++i )

  0001c	33 d2		 xor	 edx, edx
  0001e	85 c0		 test	 eax, eax
  00020	7e 11		 jle	 SHORT $LN7@GetNeedMat

; 84   : 
; 85   : 	int nMaxInfo = (int)m_RankMaterialEatInfo.size();

  00022	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00025	8b f1		 mov	 esi, ecx
$LL6@GetNeedMat:

; 87   : 	{
; 88   : 		if ( m_RankMaterialEatInfo[i].m_nRankType == nRankType )

  00027	39 3e		 cmp	 DWORD PTR [esi], edi
  00029	74 10		 je	 SHORT $LN24@GetNeedMat

; 86   : 	for ( int i=0; i<nMaxInfo; ++i )

  0002b	42		 inc	 edx
  0002c	83 c6 14	 add	 esi, 20			; 00000014H
  0002f	3b d0		 cmp	 edx, eax
  00031	7c f4		 jl	 SHORT $LL6@GetNeedMat
$LN7@GetNeedMat:

; 83   : 		return 0;

  00033	33 c0		 xor	 eax, eax
$LN9@GetNeedMat:
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi

; 94   : 		}
; 95   : 	}
; 96   : 	return 0;
; 97   : }

  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
$LN24@GetNeedMat:

; 89   : 		{
; 90   : 			if ( nCurLevel < 0 || nCurLevel >= (int)m_RankMaterialEatInfo[i].m_MaterialInfoList.size() )

  0003b	8b 75 0c	 mov	 esi, DWORD PTR _nCurLevel$[ebp]
  0003e	85 f6		 test	 esi, esi
  00040	78 f1		 js	 SHORT $LN7@GetNeedMat
  00042	6b d2 14	 imul	 edx, 20			; 00000014H
  00045	8d 44 0a 04	 lea	 eax, DWORD PTR [edx+ecx+4]
  00049	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004c	2b 08		 sub	 ecx, DWORD PTR [eax]
  0004e	c1 f9 02	 sar	 ecx, 2
  00051	3b f1		 cmp	 esi, ecx
  00053	7d de		 jge	 SHORT $LN7@GetNeedMat

; 91   : 				return 0;
; 92   : 
; 93   : 			return m_RankMaterialEatInfo[i].m_MaterialInfoList[nCurLevel];

  00055	8b 00		 mov	 eax, DWORD PTR [eax]
  00057	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]
  0005a	eb d9		 jmp	 SHORT $LN9@GetNeedMat
?GetNeedMaterialCnt@ioPetEatInfoManager@@QAEHHH@Z ENDP	; ioPetEatInfoManager::GetNeedMaterialCnt
_TEXT	ENDS
PUBLIC	?max_size@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QBEIXZ ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?max_size@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QBEIXZ PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@1@@Z ; std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@1@@Z PROC ; std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@1@@Z ENDP ; std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEPAURankMaterialEatInfo@ioPetEatInfoManager@@I@Z ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEPAURankMaterialEatInfo@ioPetEatInfoManager@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEPAURankMaterialEatInfo@ioPetEatInfoManager@@I@Z PROC ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@IPAU12@@Z ; std::_Allocate<ioPetEatInfoManager::RankMaterialEatInfo>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEPAURankMaterialEatInfo@ioPetEatInfoManager@@I@Z ENDP ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::allocate
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IBEII@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Grow_to
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IBEII@Z PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	6a 14		 push	 20			; 00000014H
  0000a	99		 cdq
  0000b	59		 pop	 ecx
  0000c	f7 f9		 idiv	 ecx

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0000e	ba cc cc cc 0c	 mov	 edx, 214748364		; 0cccccccH
  00013	8b c8		 mov	 ecx, eax
  00015	d1 e9		 shr	 ecx, 1
  00017	2b d1		 sub	 edx, ecx
  00019	3b d0		 cmp	 edx, eax
  0001b	73 04		 jae	 SHORT $LN4@Grow_to
  0001d	33 c0		 xor	 eax, eax
  0001f	eb 02		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00021	03 c1		 add	 eax, ecx
$LN5@Grow_to:

; 1279 : 		if (_Capacity < _Count)

  00023	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00026	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?_Grow_to@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IBEII@Z ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Grow_to
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QAE@PAURankMaterialEatInfo@ioPetEatInfoManager@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >::_Vector_const_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QAE@PAURankMaterialEatInfo@ioPetEatInfoManager@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QAE@PAURankMaterialEatInfo@ioPetEatInfoManager@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >::_Vector_const_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QAE@PAURankMaterialEatInfo@ioPetEatInfoManager@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >::_Vector_const_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >::operator==
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$SetTitle_e@$0N@@ioINILoader@@QAEXAAY0N@$$CBD@Z ; ioINILoader::SetTitle_e<13>
EXTRN	__imp_?SetTitle@ioINILoader@@QAEXPBD@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$SetTitle_e@$0N@@ioINILoader@@QAEXAAY0N@$$CBD@Z
_TEXT	SEGMENT
__t$ = -24						; size = 13
__$ArrayPad$ = -4					; size = 4
_t$ = 8							; size = 4
??$SetTitle_e@$0N@@ioINILoader@@QAEXAAY0N@$$CBD@Z PROC	; ioINILoader::SetTitle_e<13>, COMDAT
; _this$ = ecx

; 188  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]

; 189  : 		_ENCSTR(t, _t);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 4d 01 00
	00		 je	 $LN96@SetTitle_e
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e8	 mov	 BYTE PTR __t$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 36 01 00
	00		 je	 $LN95@SetTitle_e
  00031	b1 ec		 mov	 cl, -20			; ffffffecH
  00033	32 d1		 xor	 dl, cl
  00035	88 55 e9	 mov	 BYTE PTR __t$[ebp+1], dl
  00038	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003b	84 d2		 test	 dl, dl
  0003d	0f 84 1e 01 00
	00		 je	 $LN94@SetTitle_e
  00043	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00046	88 55 ea	 mov	 BYTE PTR __t$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 07 01 00
	00		 je	 $LN93@SetTitle_e
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 eb	 mov	 BYTE PTR __t$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 f0 00 00
	00		 je	 $LN92@SetTitle_e
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 ec	 mov	 BYTE PTR __t$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 da 00 00
	00		 je	 $LN91@SetTitle_e
  00076	32 d1		 xor	 dl, cl
  00078	88 55 ed	 mov	 BYTE PTR __t$[ebp+5], dl
  0007b	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007e	84 d2		 test	 dl, dl
  00080	0f 84 c4 00 00
	00		 je	 $LN90@SetTitle_e
  00086	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00089	88 55 ee	 mov	 BYTE PTR __t$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 ad 00 00
	00		 je	 $LN89@SetTitle_e
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 ef	 mov	 BYTE PTR __t$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 96 00 00
	00		 je	 $LN88@SetTitle_e
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 f0	 mov	 BYTE PTR __t$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 80 00 00
	00		 je	 $LN87@SetTitle_e
  000b9	32 d1		 xor	 dl, cl
  000bb	88 55 f1	 mov	 BYTE PTR __t$[ebp+9], dl
  000be	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c1	84 d2		 test	 dl, dl
  000c3	74 6e		 je	 SHORT $LN86@SetTitle_e
  000c5	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000c8	88 55 f2	 mov	 BYTE PTR __t$[ebp+10], dl
  000cb	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000ce	84 d2		 test	 dl, dl
  000d0	74 5b		 je	 SHORT $LN85@SetTitle_e
  000d2	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  000d9	88 55 f3	 mov	 BYTE PTR __t$[ebp+11], dl
  000dc	0f 84 8f 00 00
	00		 je	 $LN1@SetTitle_e
  000e2	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000e5	84 d2		 test	 dl, dl
  000e7	74 3f		 je	 SHORT $LN83@SetTitle_e
  000e9	32 d1		 xor	 dl, cl
  000eb	88 55 f5	 mov	 BYTE PTR __t$[ebp+13], dl
  000ee	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000f1	84 d2		 test	 dl, dl
  000f3	74 2d		 je	 SHORT $LN82@SetTitle_e
  000f5	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000f8	88 55 f6	 mov	 BYTE PTR __t$[ebp+14], dl
  000fb	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  000fe	84 d2		 test	 dl, dl
  00100	74 1a		 je	 SHORT $LN81@SetTitle_e
  00102	8a 40 10	 mov	 al, BYTE PTR [eax+16]
  00105	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00108	88 55 f7	 mov	 BYTE PTR __t$[ebp+15], dl
  0010b	84 c0		 test	 al, al
  0010d	74 07		 je	 SHORT $LN80@SetTitle_e
  0010f	34 ed		 xor	 al, -19			; ffffffedH
  00111	88 45 f8	 mov	 BYTE PTR __t$[ebp+16], al
  00114	eb 5b		 jmp	 SHORT $LN1@SetTitle_e
$LN80@SetTitle_e:
  00116	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+16], -19 ; ffffffedH
  0011a	eb 55		 jmp	 SHORT $LN1@SetTitle_e
$LN81@SetTitle_e:
  0011c	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+15], -22 ; ffffffeaH
  00120	eb 4f		 jmp	 SHORT $LN1@SetTitle_e
$LN82@SetTitle_e:
  00122	c6 45 f6 eb	 mov	 BYTE PTR __t$[ebp+14], -21 ; ffffffebH
  00126	eb 49		 jmp	 SHORT $LN1@SetTitle_e
$LN83@SetTitle_e:
  00128	88 4d f5	 mov	 BYTE PTR __t$[ebp+13], cl
  0012b	eb 44		 jmp	 SHORT $LN1@SetTitle_e
$LN85@SetTitle_e:
  0012d	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+11], -22 ; ffffffeaH
  00131	eb 3e		 jmp	 SHORT $LN1@SetTitle_e
$LN86@SetTitle_e:
  00133	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+10], -21 ; ffffffebH
  00137	eb 38		 jmp	 SHORT $LN1@SetTitle_e
$LN87@SetTitle_e:
  00139	88 4d f1	 mov	 BYTE PTR __t$[ebp+9], cl
  0013c	eb 33		 jmp	 SHORT $LN1@SetTitle_e
$LN88@SetTitle_e:
  0013e	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  00142	eb 2d		 jmp	 SHORT $LN1@SetTitle_e
$LN89@SetTitle_e:
  00144	c6 45 ef ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  00148	eb 27		 jmp	 SHORT $LN1@SetTitle_e
$LN90@SetTitle_e:
  0014a	c6 45 ee eb	 mov	 BYTE PTR __t$[ebp+6], -21 ; ffffffebH
  0014e	eb 21		 jmp	 SHORT $LN1@SetTitle_e
$LN91@SetTitle_e:
  00150	88 4d ed	 mov	 BYTE PTR __t$[ebp+5], cl
  00153	eb 1c		 jmp	 SHORT $LN1@SetTitle_e
$LN92@SetTitle_e:
  00155	c6 45 ec ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  00159	eb 16		 jmp	 SHORT $LN1@SetTitle_e
$LN93@SetTitle_e:
  0015b	c6 45 eb ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  0015f	eb 10		 jmp	 SHORT $LN1@SetTitle_e
$LN94@SetTitle_e:
  00161	c6 45 ea eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  00165	eb 0a		 jmp	 SHORT $LN1@SetTitle_e
$LN95@SetTitle_e:
  00167	c6 45 e9 ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  0016b	eb 04		 jmp	 SHORT $LN1@SetTitle_e
$LN96@SetTitle_e:
  0016d	c6 45 e8 ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@SetTitle_e:
  00171	6a 03		 push	 3
  00173	8d 45 e8	 lea	 eax, DWORD PTR __t$[ebp]
  00176	c6 45 f4 00	 mov	 BYTE PTR __t$[ebp+12], 0
  0017a	5a		 pop	 edx
$LL104@SetTitle_e:
  0017b	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00181	83 c0 04	 add	 eax, 4
  00184	4a		 dec	 edx
  00185	75 f4		 jne	 SHORT $LL104@SetTitle_e

; 190  : 		SetTitle(_t);

  00187	8d 45 e8	 lea	 eax, DWORD PTR __t$[ebp]
  0018a	50		 push	 eax
  0018b	8b ce		 mov	 ecx, esi
  0018d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 191  : 	}

  00193	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00196	33 cd		 xor	 ecx, ebp
  00198	5e		 pop	 esi
  00199	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0019e	c9		 leave
  0019f	c2 04 00	 ret	 4
??$SetTitle_e@$0N@@ioINILoader@@QAEXAAY0N@$$CBD@Z ENDP	; ioINILoader::SetTitle_e<13>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$0BC@@ioINILoader@@QAEHAAY0BC@$$CBDH@Z ; ioINILoader::LoadInt_e<18>
EXTRN	__imp_?LoadInt@ioINILoader@@QAEHPBDH@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$0BC@@ioINILoader@@QAEHAAY0BC@$$CBDH@Z
_TEXT	SEGMENT
__k$ = -28						; size = 18
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$0BC@@ioINILoader@@QAEHAAY0BC@$$CBDH@Z PROC ; ioINILoader::LoadInt_e<18>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 be 01 00
	00		 je	 $LN96@LoadInt_e
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e4	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 a7 01 00
	00		 je	 $LN95@LoadInt_e
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 e5	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 90 01 00
	00		 je	 $LN94@LoadInt_e
  00042	b1 eb		 mov	 cl, -21			; ffffffebH
  00044	32 d1		 xor	 dl, cl
  00046	88 55 e6	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 78 01 00
	00		 je	 $LN93@LoadInt_e
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 e7	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 61 01 00
	00		 je	 $LN92@LoadInt_e
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 e8	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 4a 01 00
	00		 je	 $LN91@LoadInt_e
  00076	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00079	88 55 e9	 mov	 BYTE PTR __k$[ebp+5], dl
  0007c	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007f	84 d2		 test	 dl, dl
  00081	0f 84 34 01 00
	00		 je	 $LN90@LoadInt_e
  00087	32 d1		 xor	 dl, cl
  00089	88 55 ea	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 1e 01 00
	00		 je	 $LN89@LoadInt_e
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 eb	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 07 01 00
	00		 je	 $LN88@LoadInt_e
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 ec	 mov	 BYTE PTR __k$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 f0 00 00
	00		 je	 $LN87@LoadInt_e
  000b9	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000bc	88 55 ed	 mov	 BYTE PTR __k$[ebp+9], dl
  000bf	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c2	84 d2		 test	 dl, dl
  000c4	0f 84 da 00 00
	00		 je	 $LN86@LoadInt_e
  000ca	32 d1		 xor	 dl, cl
  000cc	88 55 ee	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	0f 84 c4 00 00
	00		 je	 $LN85@LoadInt_e
  000da	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000dd	88 55 ef	 mov	 BYTE PTR __k$[ebp+11], dl
  000e0	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e3	84 d2		 test	 dl, dl
  000e5	0f 84 ad 00 00
	00		 je	 $LN84@LoadInt_e
  000eb	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ee	88 55 f0	 mov	 BYTE PTR __k$[ebp+12], dl
  000f1	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f4	84 d2		 test	 dl, dl
  000f6	0f 84 96 00 00
	00		 je	 $LN83@LoadInt_e
  000fc	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000ff	88 55 f1	 mov	 BYTE PTR __k$[ebp+13], dl
  00102	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  00105	84 d2		 test	 dl, dl
  00107	0f 84 80 00 00
	00		 je	 $LN82@LoadInt_e
  0010d	32 d1		 xor	 dl, cl
  0010f	88 55 f2	 mov	 BYTE PTR __k$[ebp+14], dl
  00112	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00115	84 d2		 test	 dl, dl
  00117	74 6e		 je	 SHORT $LN81@LoadInt_e
  00119	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0011c	88 55 f3	 mov	 BYTE PTR __k$[ebp+15], dl
  0011f	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00122	84 d2		 test	 dl, dl
  00124	74 5b		 je	 SHORT $LN80@LoadInt_e
  00126	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00129	80 78 11 00	 cmp	 BYTE PTR [eax+17], 0
  0012d	88 55 f4	 mov	 BYTE PTR __k$[ebp+16], dl
  00130	0f 84 ac 00 00
	00		 je	 $LN1@LoadInt_e
  00136	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  00139	84 d2		 test	 dl, dl
  0013b	74 3f		 je	 SHORT $LN78@LoadInt_e
  0013d	32 d1		 xor	 dl, cl
  0013f	88 55 f6	 mov	 BYTE PTR __k$[ebp+18], dl
  00142	8a 50 13	 mov	 dl, BYTE PTR [eax+19]
  00145	84 d2		 test	 dl, dl
  00147	74 2d		 je	 SHORT $LN77@LoadInt_e
  00149	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0014c	88 55 f7	 mov	 BYTE PTR __k$[ebp+19], dl
  0014f	8a 50 14	 mov	 dl, BYTE PTR [eax+20]
  00152	84 d2		 test	 dl, dl
  00154	74 1a		 je	 SHORT $LN76@LoadInt_e
  00156	8a 40 15	 mov	 al, BYTE PTR [eax+21]
  00159	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0015c	88 55 f8	 mov	 BYTE PTR __k$[ebp+20], dl
  0015f	84 c0		 test	 al, al
  00161	74 07		 je	 SHORT $LN75@LoadInt_e
  00163	34 ec		 xor	 al, -20			; ffffffecH
  00165	88 45 f9	 mov	 BYTE PTR __k$[ebp+21], al
  00168	eb 78		 jmp	 SHORT $LN1@LoadInt_e
$LN75@LoadInt_e:
  0016a	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+21], -20 ; ffffffecH
  0016e	eb 72		 jmp	 SHORT $LN1@LoadInt_e
$LN76@LoadInt_e:
  00170	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+20], -19 ; ffffffedH
  00174	eb 6c		 jmp	 SHORT $LN1@LoadInt_e
$LN77@LoadInt_e:
  00176	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+19], -22 ; ffffffeaH
  0017a	eb 66		 jmp	 SHORT $LN1@LoadInt_e
$LN78@LoadInt_e:
  0017c	88 4d f6	 mov	 BYTE PTR __k$[ebp+18], cl
  0017f	eb 61		 jmp	 SHORT $LN1@LoadInt_e
$LN80@LoadInt_e:
  00181	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  00185	eb 5b		 jmp	 SHORT $LN1@LoadInt_e
$LN81@LoadInt_e:
  00187	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  0018b	eb 55		 jmp	 SHORT $LN1@LoadInt_e
$LN82@LoadInt_e:
  0018d	88 4d f2	 mov	 BYTE PTR __k$[ebp+14], cl
  00190	eb 50		 jmp	 SHORT $LN1@LoadInt_e
$LN83@LoadInt_e:
  00192	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  00196	eb 4a		 jmp	 SHORT $LN1@LoadInt_e
$LN84@LoadInt_e:
  00198	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  0019c	eb 44		 jmp	 SHORT $LN1@LoadInt_e
$LN85@LoadInt_e:
  0019e	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  001a2	eb 3e		 jmp	 SHORT $LN1@LoadInt_e
$LN86@LoadInt_e:
  001a4	88 4d ee	 mov	 BYTE PTR __k$[ebp+10], cl
  001a7	eb 39		 jmp	 SHORT $LN1@LoadInt_e
$LN87@LoadInt_e:
  001a9	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  001ad	eb 33		 jmp	 SHORT $LN1@LoadInt_e
$LN88@LoadInt_e:
  001af	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  001b3	eb 2d		 jmp	 SHORT $LN1@LoadInt_e
$LN89@LoadInt_e:
  001b5	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  001b9	eb 27		 jmp	 SHORT $LN1@LoadInt_e
$LN90@LoadInt_e:
  001bb	88 4d ea	 mov	 BYTE PTR __k$[ebp+6], cl
  001be	eb 22		 jmp	 SHORT $LN1@LoadInt_e
$LN91@LoadInt_e:
  001c0	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  001c4	eb 1c		 jmp	 SHORT $LN1@LoadInt_e
$LN92@LoadInt_e:
  001c6	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  001ca	eb 16		 jmp	 SHORT $LN1@LoadInt_e
$LN93@LoadInt_e:
  001cc	c6 45 e7 ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  001d0	eb 10		 jmp	 SHORT $LN1@LoadInt_e
$LN94@LoadInt_e:
  001d2	c6 45 e6 eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  001d6	eb 0a		 jmp	 SHORT $LN1@LoadInt_e
$LN95@LoadInt_e:
  001d8	c6 45 e5 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  001dc	eb 04		 jmp	 SHORT $LN1@LoadInt_e
$LN96@LoadInt_e:
  001de	c6 45 e4 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e:
  001e2	6a 04		 push	 4
  001e4	8d 45 e4	 lea	 eax, DWORD PTR __k$[ebp]
  001e7	c6 45 f5 00	 mov	 BYTE PTR __k$[ebp+17], 0
  001eb	5a		 pop	 edx
$LL104@LoadInt_e:
  001ec	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001f2	83 c0 04	 add	 eax, 4
  001f5	4a		 dec	 edx
  001f6	75 f4		 jne	 SHORT $LL104@LoadInt_e

; 120  : 		return LoadInt(_k, i);

  001f8	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  001fb	80 75 f4 ed	 xor	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  001ff	8d 45 e4	 lea	 eax, DWORD PTR __k$[ebp]
  00202	50		 push	 eax
  00203	8b ce		 mov	 ecx, esi
  00205	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  0020b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0020e	33 cd		 xor	 ecx, ebp
  00210	5e		 pop	 esi
  00211	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00216	c9		 leave
  00217	c2 08 00	 ret	 8
??$LoadInt_e@$0BC@@ioINILoader@@QAEHAAY0BC@$$CBDH@Z ENDP ; ioINILoader::LoadInt_e<18>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@H@std@@QAEXPAHABH@Z	; std::allocator<int>::construct
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@H@std@@QAEXPAHABH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@H@std@@QAEXPAHABH@Z PROC		; std::allocator<int>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN5@construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN5@construct:

; 198  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?construct@?$allocator@H@std@@QAEXPAHABH@Z ENDP		; std::allocator<int>::construct
_TEXT	ENDS
PUBLIC	??$encodeString@$0BM@@ioINILoader_e@@AAEPADAAY0BM@$$CBDPAD@Z ; ioINILoader_e::encodeString<28>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$encodeString@$0BM@@ioINILoader_e@@AAEPADAAY0BM@$$CBDPAD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_e$ = 12						; size = 4
??$encodeString@$0BM@@ioINILoader_e@@AAEPADAAY0BM@$$CBDPAD@Z PROC ; ioINILoader_e::encodeString<28>, COMDAT
; _this$ = ecx

; 215  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 216  : 		__ENCSTR(s, e);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _s$[ebp]
  00006	8a 11		 mov	 dl, BYTE PTR [ecx]
  00008	8b 45 0c	 mov	 eax, DWORD PTR _e$[ebp]
  0000b	53		 push	 ebx
  0000c	84 d2		 test	 dl, dl
  0000e	0f 84 6a 04 00
	00		 je	 $LN96@encodeStri
  00014	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00017	88 10		 mov	 BYTE PTR [eax], dl
  00019	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  0001c	84 d2		 test	 dl, dl
  0001e	0f 84 54 04 00
	00		 je	 $LN95@encodeStri
  00024	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00027	88 50 01	 mov	 BYTE PTR [eax+1], dl
  0002a	8a 51 02	 mov	 dl, BYTE PTR [ecx+2]
  0002d	84 d2		 test	 dl, dl
  0002f	0f 84 3d 04 00
	00		 je	 $LN94@encodeStri
  00035	b3 eb		 mov	 bl, -21			; ffffffebH
  00037	32 d3		 xor	 dl, bl
  00039	88 50 02	 mov	 BYTE PTR [eax+2], dl
  0003c	8a 51 03	 mov	 dl, BYTE PTR [ecx+3]
  0003f	84 d2		 test	 dl, dl
  00041	0f 84 25 04 00
	00		 je	 $LN93@encodeStri
  00047	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0004a	88 50 03	 mov	 BYTE PTR [eax+3], dl
  0004d	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  00050	84 d2		 test	 dl, dl
  00052	0f 84 0e 04 00
	00		 je	 $LN92@encodeStri
  00058	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0005b	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0005e	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  00061	84 d2		 test	 dl, dl
  00063	0f 84 f7 03 00
	00		 je	 $LN91@encodeStri
  00069	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0006c	88 50 05	 mov	 BYTE PTR [eax+5], dl
  0006f	8a 51 06	 mov	 dl, BYTE PTR [ecx+6]
  00072	84 d2		 test	 dl, dl
  00074	0f 84 e1 03 00
	00		 je	 $LN90@encodeStri
  0007a	32 d3		 xor	 dl, bl
  0007c	88 50 06	 mov	 BYTE PTR [eax+6], dl
  0007f	8a 51 07	 mov	 dl, BYTE PTR [ecx+7]
  00082	84 d2		 test	 dl, dl
  00084	0f 84 cb 03 00
	00		 je	 $LN89@encodeStri
  0008a	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0008d	88 50 07	 mov	 BYTE PTR [eax+7], dl
  00090	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  00093	84 d2		 test	 dl, dl
  00095	0f 84 b4 03 00
	00		 je	 $LN88@encodeStri
  0009b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0009e	88 50 08	 mov	 BYTE PTR [eax+8], dl
  000a1	8a 51 09	 mov	 dl, BYTE PTR [ecx+9]
  000a4	84 d2		 test	 dl, dl
  000a6	0f 84 9d 03 00
	00		 je	 $LN87@encodeStri
  000ac	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000af	88 50 09	 mov	 BYTE PTR [eax+9], dl
  000b2	8a 51 0a	 mov	 dl, BYTE PTR [ecx+10]
  000b5	84 d2		 test	 dl, dl
  000b7	0f 84 87 03 00
	00		 je	 $LN86@encodeStri
  000bd	32 d3		 xor	 dl, bl
  000bf	88 50 0a	 mov	 BYTE PTR [eax+10], dl
  000c2	8a 51 0b	 mov	 dl, BYTE PTR [ecx+11]
  000c5	84 d2		 test	 dl, dl
  000c7	0f 84 71 03 00
	00		 je	 $LN85@encodeStri
  000cd	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d0	88 50 0b	 mov	 BYTE PTR [eax+11], dl
  000d3	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
  000d6	84 d2		 test	 dl, dl
  000d8	0f 84 5a 03 00
	00		 je	 $LN84@encodeStri
  000de	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e1	88 50 0c	 mov	 BYTE PTR [eax+12], dl
  000e4	8a 51 0d	 mov	 dl, BYTE PTR [ecx+13]
  000e7	84 d2		 test	 dl, dl
  000e9	0f 84 43 03 00
	00		 je	 $LN83@encodeStri
  000ef	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000f2	88 50 0d	 mov	 BYTE PTR [eax+13], dl
  000f5	8a 51 0e	 mov	 dl, BYTE PTR [ecx+14]
  000f8	84 d2		 test	 dl, dl
  000fa	0f 84 2d 03 00
	00		 je	 $LN82@encodeStri
  00100	32 d3		 xor	 dl, bl
  00102	88 50 0e	 mov	 BYTE PTR [eax+14], dl
  00105	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  00108	84 d2		 test	 dl, dl
  0010a	0f 84 17 03 00
	00		 je	 $LN81@encodeStri
  00110	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00113	88 50 0f	 mov	 BYTE PTR [eax+15], dl
  00116	8a 51 10	 mov	 dl, BYTE PTR [ecx+16]
  00119	84 d2		 test	 dl, dl
  0011b	0f 84 00 03 00
	00		 je	 $LN80@encodeStri
  00121	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00124	88 50 10	 mov	 BYTE PTR [eax+16], dl
  00127	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  0012a	84 d2		 test	 dl, dl
  0012c	0f 84 e9 02 00
	00		 je	 $LN79@encodeStri
  00132	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00135	88 50 11	 mov	 BYTE PTR [eax+17], dl
  00138	8a 51 12	 mov	 dl, BYTE PTR [ecx+18]
  0013b	84 d2		 test	 dl, dl
  0013d	0f 84 d3 02 00
	00		 je	 $LN78@encodeStri
  00143	32 d3		 xor	 dl, bl
  00145	88 50 12	 mov	 BYTE PTR [eax+18], dl
  00148	8a 51 13	 mov	 dl, BYTE PTR [ecx+19]
  0014b	84 d2		 test	 dl, dl
  0014d	0f 84 bd 02 00
	00		 je	 $LN77@encodeStri
  00153	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00156	88 50 13	 mov	 BYTE PTR [eax+19], dl
  00159	8a 51 14	 mov	 dl, BYTE PTR [ecx+20]
  0015c	84 d2		 test	 dl, dl
  0015e	0f 84 a6 02 00
	00		 je	 $LN76@encodeStri
  00164	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00167	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0016a	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0016d	84 d2		 test	 dl, dl
  0016f	0f 84 8f 02 00
	00		 je	 $LN75@encodeStri
  00175	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00178	88 50 15	 mov	 BYTE PTR [eax+21], dl
  0017b	8a 51 16	 mov	 dl, BYTE PTR [ecx+22]
  0017e	84 d2		 test	 dl, dl
  00180	0f 84 79 02 00
	00		 je	 $LN74@encodeStri
  00186	32 d3		 xor	 dl, bl
  00188	88 50 16	 mov	 BYTE PTR [eax+22], dl
  0018b	8a 51 17	 mov	 dl, BYTE PTR [ecx+23]
  0018e	84 d2		 test	 dl, dl
  00190	0f 84 60 02 00
	00		 je	 $LN73@encodeStri
  00196	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00199	88 50 17	 mov	 BYTE PTR [eax+23], dl
  0019c	8a 51 18	 mov	 dl, BYTE PTR [ecx+24]
  0019f	84 d2		 test	 dl, dl
  001a1	0f 84 46 02 00
	00		 je	 $LN72@encodeStri
  001a7	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001aa	88 50 18	 mov	 BYTE PTR [eax+24], dl
  001ad	8a 51 19	 mov	 dl, BYTE PTR [ecx+25]
  001b0	84 d2		 test	 dl, dl
  001b2	0f 84 2c 02 00
	00		 je	 $LN71@encodeStri
  001b8	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001bb	88 50 19	 mov	 BYTE PTR [eax+25], dl
  001be	8a 51 1a	 mov	 dl, BYTE PTR [ecx+26]
  001c1	84 d2		 test	 dl, dl
  001c3	0f 84 13 02 00
	00		 je	 $LN70@encodeStri
  001c9	32 d3		 xor	 dl, bl
  001cb	88 50 1a	 mov	 BYTE PTR [eax+26], dl
  001ce	8a 51 1b	 mov	 dl, BYTE PTR [ecx+27]
  001d1	84 d2		 test	 dl, dl
  001d3	0f 84 fa 01 00
	00		 je	 $LN69@encodeStri
  001d9	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001dc	88 50 1b	 mov	 BYTE PTR [eax+27], dl
  001df	8a 51 1c	 mov	 dl, BYTE PTR [ecx+28]
  001e2	84 d2		 test	 dl, dl
  001e4	0f 84 e0 01 00
	00		 je	 $LN68@encodeStri
  001ea	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001ed	88 50 1c	 mov	 BYTE PTR [eax+28], dl
  001f0	8a 51 1d	 mov	 dl, BYTE PTR [ecx+29]
  001f3	84 d2		 test	 dl, dl
  001f5	0f 84 c6 01 00
	00		 je	 $LN67@encodeStri
  001fb	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001fe	88 50 1d	 mov	 BYTE PTR [eax+29], dl
  00201	8a 51 1e	 mov	 dl, BYTE PTR [ecx+30]
  00204	84 d2		 test	 dl, dl
  00206	0f 84 ad 01 00
	00		 je	 $LN66@encodeStri
  0020c	32 d3		 xor	 dl, bl
  0020e	88 50 1e	 mov	 BYTE PTR [eax+30], dl
  00211	8a 51 1f	 mov	 dl, BYTE PTR [ecx+31]
  00214	84 d2		 test	 dl, dl
  00216	0f 84 94 01 00
	00		 je	 $LN65@encodeStri
  0021c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0021f	88 50 1f	 mov	 BYTE PTR [eax+31], dl
  00222	8a 51 20	 mov	 dl, BYTE PTR [ecx+32]
  00225	84 d2		 test	 dl, dl
  00227	0f 84 7a 01 00
	00		 je	 $LN64@encodeStri
  0022d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00230	88 50 20	 mov	 BYTE PTR [eax+32], dl
  00233	8a 51 21	 mov	 dl, BYTE PTR [ecx+33]
  00236	84 d2		 test	 dl, dl
  00238	0f 84 60 01 00
	00		 je	 $LN63@encodeStri
  0023e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00241	88 50 21	 mov	 BYTE PTR [eax+33], dl
  00244	8a 51 22	 mov	 dl, BYTE PTR [ecx+34]
  00247	84 d2		 test	 dl, dl
  00249	0f 84 47 01 00
	00		 je	 $LN62@encodeStri
  0024f	32 d3		 xor	 dl, bl
  00251	88 50 22	 mov	 BYTE PTR [eax+34], dl
  00254	8a 51 23	 mov	 dl, BYTE PTR [ecx+35]
  00257	84 d2		 test	 dl, dl
  00259	0f 84 2e 01 00
	00		 je	 $LN61@encodeStri
  0025f	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00262	88 50 23	 mov	 BYTE PTR [eax+35], dl
  00265	8a 51 24	 mov	 dl, BYTE PTR [ecx+36]
  00268	84 d2		 test	 dl, dl
  0026a	0f 84 14 01 00
	00		 je	 $LN60@encodeStri
  00270	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00273	88 50 24	 mov	 BYTE PTR [eax+36], dl
  00276	8a 51 25	 mov	 dl, BYTE PTR [ecx+37]
  00279	84 d2		 test	 dl, dl
  0027b	0f 84 fa 00 00
	00		 je	 $LN59@encodeStri
  00281	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00284	88 50 25	 mov	 BYTE PTR [eax+37], dl
  00287	8a 51 26	 mov	 dl, BYTE PTR [ecx+38]
  0028a	84 d2		 test	 dl, dl
  0028c	0f 84 e1 00 00
	00		 je	 $LN58@encodeStri
  00292	32 d3		 xor	 dl, bl
  00294	88 50 26	 mov	 BYTE PTR [eax+38], dl
  00297	8a 51 27	 mov	 dl, BYTE PTR [ecx+39]
  0029a	84 d2		 test	 dl, dl
  0029c	0f 84 c8 00 00
	00		 je	 $LN57@encodeStri
  002a2	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002a5	88 50 27	 mov	 BYTE PTR [eax+39], dl
  002a8	8a 51 28	 mov	 dl, BYTE PTR [ecx+40]
  002ab	84 d2		 test	 dl, dl
  002ad	0f 84 ae 00 00
	00		 je	 $LN56@encodeStri
  002b3	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002b6	88 50 28	 mov	 BYTE PTR [eax+40], dl
  002b9	8a 51 29	 mov	 dl, BYTE PTR [ecx+41]
  002bc	84 d2		 test	 dl, dl
  002be	0f 84 94 00 00
	00		 je	 $LN55@encodeStri
  002c4	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002c7	88 50 29	 mov	 BYTE PTR [eax+41], dl
  002ca	8a 51 2a	 mov	 dl, BYTE PTR [ecx+42]
  002cd	84 d2		 test	 dl, dl
  002cf	74 7f		 je	 SHORT $LN54@encodeStri
  002d1	32 d3		 xor	 dl, bl
  002d3	88 50 2a	 mov	 BYTE PTR [eax+42], dl
  002d6	8a 51 2b	 mov	 dl, BYTE PTR [ecx+43]
  002d9	84 d2		 test	 dl, dl
  002db	74 6a		 je	 SHORT $LN53@encodeStri
  002dd	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002e0	88 50 2b	 mov	 BYTE PTR [eax+43], dl
  002e3	8a 51 2c	 mov	 dl, BYTE PTR [ecx+44]
  002e6	84 d2		 test	 dl, dl
  002e8	74 54		 je	 SHORT $LN52@encodeStri
  002ea	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002ed	88 50 2c	 mov	 BYTE PTR [eax+44], dl
  002f0	8a 51 2d	 mov	 dl, BYTE PTR [ecx+45]
  002f3	84 d2		 test	 dl, dl
  002f5	74 3e		 je	 SHORT $LN51@encodeStri
  002f7	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002fa	88 50 2d	 mov	 BYTE PTR [eax+45], dl
  002fd	8a 51 2e	 mov	 dl, BYTE PTR [ecx+46]
  00300	84 d2		 test	 dl, dl
  00302	74 29		 je	 SHORT $LN50@encodeStri
  00304	32 d3		 xor	 dl, bl
  00306	88 50 2e	 mov	 BYTE PTR [eax+46], dl
  00309	8a 51 2f	 mov	 dl, BYTE PTR [ecx+47]
  0030c	84 d2		 test	 dl, dl
  0030e	74 14		 je	 SHORT $LN49@encodeStri
  00310	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00313	88 50 2f	 mov	 BYTE PTR [eax+47], dl
  00316	8a 49 30	 mov	 cl, BYTE PTR [ecx+48]
  00319	80 f1 ed	 xor	 cl, -19			; ffffffedH
  0031c	88 48 30	 mov	 BYTE PTR [eax+48], cl
  0031f	e9 5d 01 00 00	 jmp	 $LN1@encodeStri
$LN49@encodeStri:
  00324	c6 40 2f ea	 mov	 BYTE PTR [eax+47], -22	; ffffffeaH
  00328	e9 54 01 00 00	 jmp	 $LN1@encodeStri
$LN50@encodeStri:
  0032d	88 58 2e	 mov	 BYTE PTR [eax+46], bl
  00330	e9 4c 01 00 00	 jmp	 $LN1@encodeStri
$LN51@encodeStri:
  00335	c6 40 2d ec	 mov	 BYTE PTR [eax+45], -20	; ffffffecH
  00339	e9 43 01 00 00	 jmp	 $LN1@encodeStri
$LN52@encodeStri:
  0033e	c6 40 2c ed	 mov	 BYTE PTR [eax+44], -19	; ffffffedH
  00342	e9 3a 01 00 00	 jmp	 $LN1@encodeStri
$LN53@encodeStri:
  00347	c6 40 2b ea	 mov	 BYTE PTR [eax+43], -22	; ffffffeaH
  0034b	e9 31 01 00 00	 jmp	 $LN1@encodeStri
$LN54@encodeStri:
  00350	88 58 2a	 mov	 BYTE PTR [eax+42], bl
  00353	e9 29 01 00 00	 jmp	 $LN1@encodeStri
$LN55@encodeStri:
  00358	c6 40 29 ec	 mov	 BYTE PTR [eax+41], -20	; ffffffecH
  0035c	e9 20 01 00 00	 jmp	 $LN1@encodeStri
$LN56@encodeStri:
  00361	c6 40 28 ed	 mov	 BYTE PTR [eax+40], -19	; ffffffedH
  00365	e9 17 01 00 00	 jmp	 $LN1@encodeStri
$LN57@encodeStri:
  0036a	c6 40 27 ea	 mov	 BYTE PTR [eax+39], -22	; ffffffeaH
  0036e	e9 0e 01 00 00	 jmp	 $LN1@encodeStri
$LN58@encodeStri:
  00373	88 58 26	 mov	 BYTE PTR [eax+38], bl
  00376	e9 06 01 00 00	 jmp	 $LN1@encodeStri
$LN59@encodeStri:
  0037b	c6 40 25 ec	 mov	 BYTE PTR [eax+37], -20	; ffffffecH
  0037f	e9 fd 00 00 00	 jmp	 $LN1@encodeStri
$LN60@encodeStri:
  00384	c6 40 24 ed	 mov	 BYTE PTR [eax+36], -19	; ffffffedH
  00388	e9 f4 00 00 00	 jmp	 $LN1@encodeStri
$LN61@encodeStri:
  0038d	c6 40 23 ea	 mov	 BYTE PTR [eax+35], -22	; ffffffeaH
  00391	e9 eb 00 00 00	 jmp	 $LN1@encodeStri
$LN62@encodeStri:
  00396	88 58 22	 mov	 BYTE PTR [eax+34], bl
  00399	e9 e3 00 00 00	 jmp	 $LN1@encodeStri
$LN63@encodeStri:
  0039e	c6 40 21 ec	 mov	 BYTE PTR [eax+33], -20	; ffffffecH
  003a2	e9 da 00 00 00	 jmp	 $LN1@encodeStri
$LN64@encodeStri:
  003a7	c6 40 20 ed	 mov	 BYTE PTR [eax+32], -19	; ffffffedH
  003ab	e9 d1 00 00 00	 jmp	 $LN1@encodeStri
$LN65@encodeStri:
  003b0	c6 40 1f ea	 mov	 BYTE PTR [eax+31], -22	; ffffffeaH
  003b4	e9 c8 00 00 00	 jmp	 $LN1@encodeStri
$LN66@encodeStri:
  003b9	88 58 1e	 mov	 BYTE PTR [eax+30], bl
  003bc	e9 c0 00 00 00	 jmp	 $LN1@encodeStri
$LN67@encodeStri:
  003c1	c6 40 1d ec	 mov	 BYTE PTR [eax+29], -20	; ffffffecH
  003c5	e9 b7 00 00 00	 jmp	 $LN1@encodeStri
$LN68@encodeStri:
  003ca	c6 40 1c ed	 mov	 BYTE PTR [eax+28], -19	; ffffffedH
  003ce	e9 ae 00 00 00	 jmp	 $LN1@encodeStri
$LN69@encodeStri:
  003d3	c6 40 1b ea	 mov	 BYTE PTR [eax+27], -22	; ffffffeaH
  003d7	e9 a5 00 00 00	 jmp	 $LN1@encodeStri
$LN70@encodeStri:
  003dc	88 58 1a	 mov	 BYTE PTR [eax+26], bl
  003df	e9 9d 00 00 00	 jmp	 $LN1@encodeStri
$LN71@encodeStri:
  003e4	c6 40 19 ec	 mov	 BYTE PTR [eax+25], -20	; ffffffecH
  003e8	e9 94 00 00 00	 jmp	 $LN1@encodeStri
$LN72@encodeStri:
  003ed	c6 40 18 ed	 mov	 BYTE PTR [eax+24], -19	; ffffffedH
  003f1	e9 8b 00 00 00	 jmp	 $LN1@encodeStri
$LN73@encodeStri:
  003f6	c6 40 17 ea	 mov	 BYTE PTR [eax+23], -22	; ffffffeaH
  003fa	e9 82 00 00 00	 jmp	 $LN1@encodeStri
$LN74@encodeStri:
  003ff	88 58 16	 mov	 BYTE PTR [eax+22], bl
  00402	eb 7d		 jmp	 SHORT $LN1@encodeStri
$LN75@encodeStri:
  00404	c6 40 15 ec	 mov	 BYTE PTR [eax+21], -20	; ffffffecH
  00408	eb 77		 jmp	 SHORT $LN1@encodeStri
$LN76@encodeStri:
  0040a	c6 40 14 ed	 mov	 BYTE PTR [eax+20], -19	; ffffffedH
  0040e	eb 71		 jmp	 SHORT $LN1@encodeStri
$LN77@encodeStri:
  00410	c6 40 13 ea	 mov	 BYTE PTR [eax+19], -22	; ffffffeaH
  00414	eb 6b		 jmp	 SHORT $LN1@encodeStri
$LN78@encodeStri:
  00416	88 58 12	 mov	 BYTE PTR [eax+18], bl
  00419	eb 66		 jmp	 SHORT $LN1@encodeStri
$LN79@encodeStri:
  0041b	c6 40 11 ec	 mov	 BYTE PTR [eax+17], -20	; ffffffecH
  0041f	eb 60		 jmp	 SHORT $LN1@encodeStri
$LN80@encodeStri:
  00421	c6 40 10 ed	 mov	 BYTE PTR [eax+16], -19	; ffffffedH
  00425	eb 5a		 jmp	 SHORT $LN1@encodeStri
$LN81@encodeStri:
  00427	c6 40 0f ea	 mov	 BYTE PTR [eax+15], -22	; ffffffeaH
  0042b	eb 54		 jmp	 SHORT $LN1@encodeStri
$LN82@encodeStri:
  0042d	88 58 0e	 mov	 BYTE PTR [eax+14], bl
  00430	eb 4f		 jmp	 SHORT $LN1@encodeStri
$LN83@encodeStri:
  00432	c6 40 0d ec	 mov	 BYTE PTR [eax+13], -20	; ffffffecH
  00436	eb 49		 jmp	 SHORT $LN1@encodeStri
$LN84@encodeStri:
  00438	c6 40 0c ed	 mov	 BYTE PTR [eax+12], -19	; ffffffedH
  0043c	eb 43		 jmp	 SHORT $LN1@encodeStri
$LN85@encodeStri:
  0043e	c6 40 0b ea	 mov	 BYTE PTR [eax+11], -22	; ffffffeaH
  00442	eb 3d		 jmp	 SHORT $LN1@encodeStri
$LN86@encodeStri:
  00444	88 58 0a	 mov	 BYTE PTR [eax+10], bl
  00447	eb 38		 jmp	 SHORT $LN1@encodeStri
$LN87@encodeStri:
  00449	c6 40 09 ec	 mov	 BYTE PTR [eax+9], -20	; ffffffecH
  0044d	eb 32		 jmp	 SHORT $LN1@encodeStri
$LN88@encodeStri:
  0044f	c6 40 08 ed	 mov	 BYTE PTR [eax+8], -19	; ffffffedH
  00453	eb 2c		 jmp	 SHORT $LN1@encodeStri
$LN89@encodeStri:
  00455	c6 40 07 ea	 mov	 BYTE PTR [eax+7], -22	; ffffffeaH
  00459	eb 26		 jmp	 SHORT $LN1@encodeStri
$LN90@encodeStri:
  0045b	88 58 06	 mov	 BYTE PTR [eax+6], bl
  0045e	eb 21		 jmp	 SHORT $LN1@encodeStri
$LN91@encodeStri:
  00460	c6 40 05 ec	 mov	 BYTE PTR [eax+5], -20	; ffffffecH
  00464	eb 1b		 jmp	 SHORT $LN1@encodeStri
$LN92@encodeStri:
  00466	c6 40 04 ed	 mov	 BYTE PTR [eax+4], -19	; ffffffedH
  0046a	eb 15		 jmp	 SHORT $LN1@encodeStri
$LN93@encodeStri:
  0046c	c6 40 03 ea	 mov	 BYTE PTR [eax+3], -22	; ffffffeaH
  00470	eb 0f		 jmp	 SHORT $LN1@encodeStri
$LN94@encodeStri:
  00472	c6 40 02 eb	 mov	 BYTE PTR [eax+2], -21	; ffffffebH
  00476	eb 09		 jmp	 SHORT $LN1@encodeStri
$LN95@encodeStri:
  00478	c6 40 01 ec	 mov	 BYTE PTR [eax+1], -20	; ffffffecH
  0047c	eb 03		 jmp	 SHORT $LN1@encodeStri
$LN96@encodeStri:
  0047e	c6 00 ed	 mov	 BYTE PTR [eax], -19	; ffffffedH
$LN1@encodeStri:
  00481	6a 06		 push	 6
  00483	5a		 pop	 edx
  00484	8b c8		 mov	 ecx, eax
  00486	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0
  0048a	5b		 pop	 ebx
$LL104@encodeStri:
  0048b	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  00491	83 c1 04	 add	 ecx, 4
  00494	4a		 dec	 edx
  00495	75 f4		 jne	 SHORT $LL104@encodeStri
  00497	56		 push	 esi
  00498	6a 18		 push	 24			; 00000018H
  0049a	5e		 pop	 esi
$LL101@encodeStri:
  0049b	8b ce		 mov	 ecx, esi
  0049d	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  004a3	79 05		 jns	 SHORT $LN111@encodeStri
  004a5	49		 dec	 ecx
  004a6	83 c9 fc	 or	 ecx, -4			; fffffffcH
  004a9	41		 inc	 ecx
$LN111@encodeStri:
  004aa	b2 ed		 mov	 dl, -19			; ffffffedH
  004ac	2a d1		 sub	 dl, cl
  004ae	30 14 06	 xor	 BYTE PTR [esi+eax], dl
  004b1	46		 inc	 esi
  004b2	83 fe 1b	 cmp	 esi, 27			; 0000001bH
  004b5	7c e4		 jl	 SHORT $LL101@encodeStri
  004b7	5e		 pop	 esi

; 217  : 		return e;
; 218  : 	}

  004b8	5d		 pop	 ebp
  004b9	c2 08 00	 ret	 8
??$encodeString@$0BM@@ioINILoader_e@@AAEPADAAY0BM@$$CBDPAD@Z ENDP ; ioINILoader_e::encodeString<28>
_TEXT	ENDS
PUBLIC	??$construct@AAH@?$allocator@H@std@@QAEXPAHAAH@Z ; std::allocator<int>::construct<int &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAH@?$allocator@H@std@@QAEXPAHAAH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAH@?$allocator@H@std@@QAEXPAHAAH@Z PROC	; std::allocator<int>::construct<int &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@construct@2
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@construct@2:

; 209  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
??$construct@AAH@?$allocator@H@std@@QAEXPAHAAH@Z ENDP	; std::allocator<int>::construct<int &>
_TEXT	ENDS
PUBLIC	??$_Copy_impl@PAHPAH@std@@YAPAHPAH00@Z		; std::_Copy_impl<int *,int *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Copy_impl@PAHPAH@std@@YAPAHPAH00@Z
_TEXT	SEGMENT
__Cat$507790 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_impl@PAHPAH@std@@YAPAHPAH00@Z PROC		; std::_Copy_impl<int *,int *>, COMDAT

; 2163 : 	{	// copy [_First, _Last) to [_Dest, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2164 : 	return (_Copy_impl(_First, _Last,
; 2165 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$507790[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_impl@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<int *,int *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2166 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Copy_impl@PAHPAH@std@@YAPAHPAH00@Z ENDP		; std::_Copy_impl<int *,int *>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z ; std::_Uninitialized_copy<int *,int *,std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z
_TEXT	SEGMENT
__Cat$507797 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z PROC ; std::_Uninitialized_copy<int *,int *,std::allocator<int> >, COMDAT

; 412  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 413  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 414  : 		_Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$507797[ebp]
  00007	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000a	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00010	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00013	e8 00 00 00 00	 call	 ??$_Uninit_copy@HH@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<int,int>
  00018	83 c4 14	 add	 esp, 20			; 00000014H

; 415  : 	}

  0001b	c9		 leave
  0001c	c3		 ret	 0
??$_Uninitialized_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z ENDP ; std::_Uninitialized_copy<int *,int *,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@H@std@@QAEXPAH@Z		; std::allocator<int>::destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@H@std@@QAEXPAH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@H@std@@QAEXPAH@Z PROC		; std::allocator<int>::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@H@std@@QAEXPAH@Z ENDP		; std::allocator<int>::destroy
_TEXT	ENDS
PUBLIC	?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::begin
_TEXT	ENDS
PUBLIC	?begin@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::begin, COMDAT
; _this$ = ecx

; 786  : 		{	// return iterator for beginning of nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 787  : 		return (const_iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 788  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::end, COMDAT
; _this$ = ecx

; 796  : 		{	// return iterator for end of nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 797  : 		return (const_iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 798  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::end
_TEXT	ENDS
PUBLIC	?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::end
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@V?$allocator@H@1@@Z ; std::_Vector_val<int,std::allocator<int> >::_Vector_val<int,std::allocator<int> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@V?$allocator@H@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@V?$allocator@H@1@@Z PROC ; std::_Vector_val<int,std::allocator<int> >::_Vector_val<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@V?$allocator@H@1@@Z ENDP ; std::_Vector_val<int,std::allocator<int> >::_Vector_val<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC ; std::vector<int,std::allocator<int> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP ; std::vector<int,std::allocator<int> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z ; std::vector<int,std::allocator<int> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z PROC ; std::vector<int,std::allocator<int> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  00008	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  0000d	c1 f8 02	 sar	 eax, 2
  00010	8b c8		 mov	 ecx, eax
  00012	d1 e9		 shr	 ecx, 1
  00014	2b d1		 sub	 edx, ecx
  00016	3b d0		 cmp	 edx, eax
  00018	73 04		 jae	 SHORT $LN4@Grow_to@2
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 02		 jmp	 SHORT $LN5@Grow_to@2
$LN4@Grow_to@2:
  0001e	03 c1		 add	 eax, ecx
$LN5@Grow_to@2:

; 1279 : 		if (_Capacity < _Count)

  00020	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00023	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z ENDP ; std::vector<int,std::allocator<int> >::_Grow_to
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@H@std@@QAEPAHI@Z		; std::allocator<int>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@H@std@@QAEPAHI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@H@std@@QAEPAHI@Z PROC		; std::allocator<int>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@H@std@@YAPAHIPAH@Z ; std::_Allocate<int>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@H@std@@QAEPAHI@Z ENDP		; std::allocator<int>::allocate
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator==
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator==
_TEXT	ENDS
PUBLIC	??$_Move@PAHPAH@std@@YAPAHPAH00@Z		; std::_Move<int *,int *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAHPAH@std@@YAPAHPAH00@Z
_TEXT	SEGMENT
__Cat$507916 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAHPAH@std@@YAPAHPAH00@Z PROC			; std::_Move<int *,int *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$507916[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<int *,int *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAHPAH@std@@YAPAHPAH00@Z ENDP			; std::_Move<int *,int *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z ; std::_Uninitialized_move<int *,int *,std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z PROC ; std::_Uninitialized_move<int *,int *,std::allocator<int> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2
  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 472  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z ENDP ; std::_Uninitialized_move<int *,int *,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??0?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE@XZ ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE@XZ PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QAE@PAURankMaterialEatInfo@ioPetEatInfoManager@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >::_Vector_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QAE@PAURankMaterialEatInfo@ioPetEatInfoManager@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QAE@PAURankMaterialEatInfo@ioPetEatInfoManager@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >::_Vector_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QAE@PAURankMaterialEatInfo@ioPetEatInfoManager@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >::_Vector_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> > >::operator!=
_TEXT	ENDS
PUBLIC	??$?0$0BM@@ioINILoader_e@@QAE@AAY0BM@$$CBD_N@Z	; ioINILoader_e::ioINILoader_e<28>
EXTRN	__imp_??0ioINILoader@@QAE@PBD_N@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$?0$0BM@@ioINILoader_e@@QAE@AAY0BM@$$CBD_N@Z
_TEXT	SEGMENT
_fn$ = 8						; size = 4
_b$ = 12						; size = 1
??$?0$0BM@@ioINILoader_e@@QAE@AAY0BM@$$CBD_N@Z PROC	; ioINILoader_e::ioINILoader_e<28>, COMDAT
; _this$ = ecx

; 224  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	8b 4d 08	 mov	 ecx, DWORD PTR _fn$[ebp]
  0000b	8a 11		 mov	 dl, BYTE PTR [ecx]
  0000d	8d 87 50 03 00
	00		 lea	 eax, DWORD PTR [edi+848]
  00013	84 d2		 test	 dl, dl
  00015	0f 84 6a 04 00
	00		 je	 $LN99@ioINILoade
  0001b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0001e	88 10		 mov	 BYTE PTR [eax], dl
  00020	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  00023	84 d2		 test	 dl, dl
  00025	0f 84 54 04 00
	00		 je	 $LN98@ioINILoade
  0002b	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0002e	88 50 01	 mov	 BYTE PTR [eax+1], dl
  00031	8a 51 02	 mov	 dl, BYTE PTR [ecx+2]
  00034	84 d2		 test	 dl, dl
  00036	0f 84 3d 04 00
	00		 je	 $LN97@ioINILoade
  0003c	b3 eb		 mov	 bl, -21			; ffffffebH
  0003e	32 d3		 xor	 dl, bl
  00040	88 50 02	 mov	 BYTE PTR [eax+2], dl
  00043	8a 51 03	 mov	 dl, BYTE PTR [ecx+3]
  00046	84 d2		 test	 dl, dl
  00048	0f 84 25 04 00
	00		 je	 $LN96@ioINILoade
  0004e	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00051	88 50 03	 mov	 BYTE PTR [eax+3], dl
  00054	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  00057	84 d2		 test	 dl, dl
  00059	0f 84 0e 04 00
	00		 je	 $LN95@ioINILoade
  0005f	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00062	88 50 04	 mov	 BYTE PTR [eax+4], dl
  00065	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  00068	84 d2		 test	 dl, dl
  0006a	0f 84 f7 03 00
	00		 je	 $LN94@ioINILoade
  00070	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00073	88 50 05	 mov	 BYTE PTR [eax+5], dl
  00076	8a 51 06	 mov	 dl, BYTE PTR [ecx+6]
  00079	84 d2		 test	 dl, dl
  0007b	0f 84 e1 03 00
	00		 je	 $LN93@ioINILoade
  00081	32 d3		 xor	 dl, bl
  00083	88 50 06	 mov	 BYTE PTR [eax+6], dl
  00086	8a 51 07	 mov	 dl, BYTE PTR [ecx+7]
  00089	84 d2		 test	 dl, dl
  0008b	0f 84 cb 03 00
	00		 je	 $LN92@ioINILoade
  00091	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00094	88 50 07	 mov	 BYTE PTR [eax+7], dl
  00097	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  0009a	84 d2		 test	 dl, dl
  0009c	0f 84 b4 03 00
	00		 je	 $LN91@ioINILoade
  000a2	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a5	88 50 08	 mov	 BYTE PTR [eax+8], dl
  000a8	8a 51 09	 mov	 dl, BYTE PTR [ecx+9]
  000ab	84 d2		 test	 dl, dl
  000ad	0f 84 9d 03 00
	00		 je	 $LN90@ioINILoade
  000b3	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b6	88 50 09	 mov	 BYTE PTR [eax+9], dl
  000b9	8a 51 0a	 mov	 dl, BYTE PTR [ecx+10]
  000bc	84 d2		 test	 dl, dl
  000be	0f 84 87 03 00
	00		 je	 $LN89@ioINILoade
  000c4	32 d3		 xor	 dl, bl
  000c6	88 50 0a	 mov	 BYTE PTR [eax+10], dl
  000c9	8a 51 0b	 mov	 dl, BYTE PTR [ecx+11]
  000cc	84 d2		 test	 dl, dl
  000ce	0f 84 71 03 00
	00		 je	 $LN88@ioINILoade
  000d4	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d7	88 50 0b	 mov	 BYTE PTR [eax+11], dl
  000da	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
  000dd	84 d2		 test	 dl, dl
  000df	0f 84 5a 03 00
	00		 je	 $LN87@ioINILoade
  000e5	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e8	88 50 0c	 mov	 BYTE PTR [eax+12], dl
  000eb	8a 51 0d	 mov	 dl, BYTE PTR [ecx+13]
  000ee	84 d2		 test	 dl, dl
  000f0	0f 84 43 03 00
	00		 je	 $LN86@ioINILoade
  000f6	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000f9	88 50 0d	 mov	 BYTE PTR [eax+13], dl
  000fc	8a 51 0e	 mov	 dl, BYTE PTR [ecx+14]
  000ff	84 d2		 test	 dl, dl
  00101	0f 84 2d 03 00
	00		 je	 $LN85@ioINILoade
  00107	32 d3		 xor	 dl, bl
  00109	88 50 0e	 mov	 BYTE PTR [eax+14], dl
  0010c	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  0010f	84 d2		 test	 dl, dl
  00111	0f 84 17 03 00
	00		 je	 $LN84@ioINILoade
  00117	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0011a	88 50 0f	 mov	 BYTE PTR [eax+15], dl
  0011d	8a 51 10	 mov	 dl, BYTE PTR [ecx+16]
  00120	84 d2		 test	 dl, dl
  00122	0f 84 00 03 00
	00		 je	 $LN83@ioINILoade
  00128	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0012b	88 50 10	 mov	 BYTE PTR [eax+16], dl
  0012e	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  00131	84 d2		 test	 dl, dl
  00133	0f 84 e9 02 00
	00		 je	 $LN82@ioINILoade
  00139	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0013c	88 50 11	 mov	 BYTE PTR [eax+17], dl
  0013f	8a 51 12	 mov	 dl, BYTE PTR [ecx+18]
  00142	84 d2		 test	 dl, dl
  00144	0f 84 d3 02 00
	00		 je	 $LN81@ioINILoade
  0014a	32 d3		 xor	 dl, bl
  0014c	88 50 12	 mov	 BYTE PTR [eax+18], dl
  0014f	8a 51 13	 mov	 dl, BYTE PTR [ecx+19]
  00152	84 d2		 test	 dl, dl
  00154	0f 84 bd 02 00
	00		 je	 $LN80@ioINILoade
  0015a	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0015d	88 50 13	 mov	 BYTE PTR [eax+19], dl
  00160	8a 51 14	 mov	 dl, BYTE PTR [ecx+20]
  00163	84 d2		 test	 dl, dl
  00165	0f 84 a6 02 00
	00		 je	 $LN79@ioINILoade
  0016b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0016e	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00171	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00174	84 d2		 test	 dl, dl
  00176	0f 84 8f 02 00
	00		 je	 $LN78@ioINILoade
  0017c	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0017f	88 50 15	 mov	 BYTE PTR [eax+21], dl
  00182	8a 51 16	 mov	 dl, BYTE PTR [ecx+22]
  00185	84 d2		 test	 dl, dl
  00187	0f 84 79 02 00
	00		 je	 $LN77@ioINILoade
  0018d	32 d3		 xor	 dl, bl
  0018f	88 50 16	 mov	 BYTE PTR [eax+22], dl
  00192	8a 51 17	 mov	 dl, BYTE PTR [ecx+23]
  00195	84 d2		 test	 dl, dl
  00197	0f 84 60 02 00
	00		 je	 $LN76@ioINILoade
  0019d	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001a0	88 50 17	 mov	 BYTE PTR [eax+23], dl
  001a3	8a 51 18	 mov	 dl, BYTE PTR [ecx+24]
  001a6	84 d2		 test	 dl, dl
  001a8	0f 84 46 02 00
	00		 je	 $LN75@ioINILoade
  001ae	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001b1	88 50 18	 mov	 BYTE PTR [eax+24], dl
  001b4	8a 51 19	 mov	 dl, BYTE PTR [ecx+25]
  001b7	84 d2		 test	 dl, dl
  001b9	0f 84 2c 02 00
	00		 je	 $LN74@ioINILoade
  001bf	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001c2	88 50 19	 mov	 BYTE PTR [eax+25], dl
  001c5	8a 51 1a	 mov	 dl, BYTE PTR [ecx+26]
  001c8	84 d2		 test	 dl, dl
  001ca	0f 84 13 02 00
	00		 je	 $LN73@ioINILoade
  001d0	32 d3		 xor	 dl, bl
  001d2	88 50 1a	 mov	 BYTE PTR [eax+26], dl
  001d5	8a 51 1b	 mov	 dl, BYTE PTR [ecx+27]
  001d8	84 d2		 test	 dl, dl
  001da	0f 84 fa 01 00
	00		 je	 $LN72@ioINILoade
  001e0	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001e3	88 50 1b	 mov	 BYTE PTR [eax+27], dl
  001e6	8a 51 1c	 mov	 dl, BYTE PTR [ecx+28]
  001e9	84 d2		 test	 dl, dl
  001eb	0f 84 e0 01 00
	00		 je	 $LN71@ioINILoade
  001f1	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001f4	88 50 1c	 mov	 BYTE PTR [eax+28], dl
  001f7	8a 51 1d	 mov	 dl, BYTE PTR [ecx+29]
  001fa	84 d2		 test	 dl, dl
  001fc	0f 84 c6 01 00
	00		 je	 $LN70@ioINILoade
  00202	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00205	88 50 1d	 mov	 BYTE PTR [eax+29], dl
  00208	8a 51 1e	 mov	 dl, BYTE PTR [ecx+30]
  0020b	84 d2		 test	 dl, dl
  0020d	0f 84 ad 01 00
	00		 je	 $LN69@ioINILoade
  00213	32 d3		 xor	 dl, bl
  00215	88 50 1e	 mov	 BYTE PTR [eax+30], dl
  00218	8a 51 1f	 mov	 dl, BYTE PTR [ecx+31]
  0021b	84 d2		 test	 dl, dl
  0021d	0f 84 94 01 00
	00		 je	 $LN68@ioINILoade
  00223	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00226	88 50 1f	 mov	 BYTE PTR [eax+31], dl
  00229	8a 51 20	 mov	 dl, BYTE PTR [ecx+32]
  0022c	84 d2		 test	 dl, dl
  0022e	0f 84 7a 01 00
	00		 je	 $LN67@ioINILoade
  00234	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00237	88 50 20	 mov	 BYTE PTR [eax+32], dl
  0023a	8a 51 21	 mov	 dl, BYTE PTR [ecx+33]
  0023d	84 d2		 test	 dl, dl
  0023f	0f 84 60 01 00
	00		 je	 $LN66@ioINILoade
  00245	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00248	88 50 21	 mov	 BYTE PTR [eax+33], dl
  0024b	8a 51 22	 mov	 dl, BYTE PTR [ecx+34]
  0024e	84 d2		 test	 dl, dl
  00250	0f 84 47 01 00
	00		 je	 $LN65@ioINILoade
  00256	32 d3		 xor	 dl, bl
  00258	88 50 22	 mov	 BYTE PTR [eax+34], dl
  0025b	8a 51 23	 mov	 dl, BYTE PTR [ecx+35]
  0025e	84 d2		 test	 dl, dl
  00260	0f 84 2e 01 00
	00		 je	 $LN64@ioINILoade
  00266	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00269	88 50 23	 mov	 BYTE PTR [eax+35], dl
  0026c	8a 51 24	 mov	 dl, BYTE PTR [ecx+36]
  0026f	84 d2		 test	 dl, dl
  00271	0f 84 14 01 00
	00		 je	 $LN63@ioINILoade
  00277	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0027a	88 50 24	 mov	 BYTE PTR [eax+36], dl
  0027d	8a 51 25	 mov	 dl, BYTE PTR [ecx+37]
  00280	84 d2		 test	 dl, dl
  00282	0f 84 fa 00 00
	00		 je	 $LN62@ioINILoade
  00288	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0028b	88 50 25	 mov	 BYTE PTR [eax+37], dl
  0028e	8a 51 26	 mov	 dl, BYTE PTR [ecx+38]
  00291	84 d2		 test	 dl, dl
  00293	0f 84 e1 00 00
	00		 je	 $LN61@ioINILoade
  00299	32 d3		 xor	 dl, bl
  0029b	88 50 26	 mov	 BYTE PTR [eax+38], dl
  0029e	8a 51 27	 mov	 dl, BYTE PTR [ecx+39]
  002a1	84 d2		 test	 dl, dl
  002a3	0f 84 c8 00 00
	00		 je	 $LN60@ioINILoade
  002a9	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002ac	88 50 27	 mov	 BYTE PTR [eax+39], dl
  002af	8a 51 28	 mov	 dl, BYTE PTR [ecx+40]
  002b2	84 d2		 test	 dl, dl
  002b4	0f 84 ae 00 00
	00		 je	 $LN59@ioINILoade
  002ba	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002bd	88 50 28	 mov	 BYTE PTR [eax+40], dl
  002c0	8a 51 29	 mov	 dl, BYTE PTR [ecx+41]
  002c3	84 d2		 test	 dl, dl
  002c5	0f 84 94 00 00
	00		 je	 $LN58@ioINILoade
  002cb	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002ce	88 50 29	 mov	 BYTE PTR [eax+41], dl
  002d1	8a 51 2a	 mov	 dl, BYTE PTR [ecx+42]
  002d4	84 d2		 test	 dl, dl
  002d6	74 7f		 je	 SHORT $LN57@ioINILoade
  002d8	32 d3		 xor	 dl, bl
  002da	88 50 2a	 mov	 BYTE PTR [eax+42], dl
  002dd	8a 51 2b	 mov	 dl, BYTE PTR [ecx+43]
  002e0	84 d2		 test	 dl, dl
  002e2	74 6a		 je	 SHORT $LN56@ioINILoade
  002e4	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002e7	88 50 2b	 mov	 BYTE PTR [eax+43], dl
  002ea	8a 51 2c	 mov	 dl, BYTE PTR [ecx+44]
  002ed	84 d2		 test	 dl, dl
  002ef	74 54		 je	 SHORT $LN55@ioINILoade
  002f1	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002f4	88 50 2c	 mov	 BYTE PTR [eax+44], dl
  002f7	8a 51 2d	 mov	 dl, BYTE PTR [ecx+45]
  002fa	84 d2		 test	 dl, dl
  002fc	74 3e		 je	 SHORT $LN54@ioINILoade
  002fe	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00301	88 50 2d	 mov	 BYTE PTR [eax+45], dl
  00304	8a 51 2e	 mov	 dl, BYTE PTR [ecx+46]
  00307	84 d2		 test	 dl, dl
  00309	74 29		 je	 SHORT $LN53@ioINILoade
  0030b	32 d3		 xor	 dl, bl
  0030d	88 50 2e	 mov	 BYTE PTR [eax+46], dl
  00310	8a 51 2f	 mov	 dl, BYTE PTR [ecx+47]
  00313	84 d2		 test	 dl, dl
  00315	74 14		 je	 SHORT $LN52@ioINILoade
  00317	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0031a	88 50 2f	 mov	 BYTE PTR [eax+47], dl
  0031d	8a 49 30	 mov	 cl, BYTE PTR [ecx+48]
  00320	80 f1 ed	 xor	 cl, -19			; ffffffedH
  00323	88 48 30	 mov	 BYTE PTR [eax+48], cl
  00326	e9 5d 01 00 00	 jmp	 $LN4@ioINILoade
$LN52@ioINILoade:
  0032b	c6 40 2f ea	 mov	 BYTE PTR [eax+47], -22	; ffffffeaH
  0032f	e9 54 01 00 00	 jmp	 $LN4@ioINILoade
$LN53@ioINILoade:
  00334	88 58 2e	 mov	 BYTE PTR [eax+46], bl
  00337	e9 4c 01 00 00	 jmp	 $LN4@ioINILoade
$LN54@ioINILoade:
  0033c	c6 40 2d ec	 mov	 BYTE PTR [eax+45], -20	; ffffffecH
  00340	e9 43 01 00 00	 jmp	 $LN4@ioINILoade
$LN55@ioINILoade:
  00345	c6 40 2c ed	 mov	 BYTE PTR [eax+44], -19	; ffffffedH
  00349	e9 3a 01 00 00	 jmp	 $LN4@ioINILoade
$LN56@ioINILoade:
  0034e	c6 40 2b ea	 mov	 BYTE PTR [eax+43], -22	; ffffffeaH
  00352	e9 31 01 00 00	 jmp	 $LN4@ioINILoade
$LN57@ioINILoade:
  00357	88 58 2a	 mov	 BYTE PTR [eax+42], bl
  0035a	e9 29 01 00 00	 jmp	 $LN4@ioINILoade
$LN58@ioINILoade:
  0035f	c6 40 29 ec	 mov	 BYTE PTR [eax+41], -20	; ffffffecH
  00363	e9 20 01 00 00	 jmp	 $LN4@ioINILoade
$LN59@ioINILoade:
  00368	c6 40 28 ed	 mov	 BYTE PTR [eax+40], -19	; ffffffedH
  0036c	e9 17 01 00 00	 jmp	 $LN4@ioINILoade
$LN60@ioINILoade:
  00371	c6 40 27 ea	 mov	 BYTE PTR [eax+39], -22	; ffffffeaH
  00375	e9 0e 01 00 00	 jmp	 $LN4@ioINILoade
$LN61@ioINILoade:
  0037a	88 58 26	 mov	 BYTE PTR [eax+38], bl
  0037d	e9 06 01 00 00	 jmp	 $LN4@ioINILoade
$LN62@ioINILoade:
  00382	c6 40 25 ec	 mov	 BYTE PTR [eax+37], -20	; ffffffecH
  00386	e9 fd 00 00 00	 jmp	 $LN4@ioINILoade
$LN63@ioINILoade:
  0038b	c6 40 24 ed	 mov	 BYTE PTR [eax+36], -19	; ffffffedH
  0038f	e9 f4 00 00 00	 jmp	 $LN4@ioINILoade
$LN64@ioINILoade:
  00394	c6 40 23 ea	 mov	 BYTE PTR [eax+35], -22	; ffffffeaH
  00398	e9 eb 00 00 00	 jmp	 $LN4@ioINILoade
$LN65@ioINILoade:
  0039d	88 58 22	 mov	 BYTE PTR [eax+34], bl
  003a0	e9 e3 00 00 00	 jmp	 $LN4@ioINILoade
$LN66@ioINILoade:
  003a5	c6 40 21 ec	 mov	 BYTE PTR [eax+33], -20	; ffffffecH
  003a9	e9 da 00 00 00	 jmp	 $LN4@ioINILoade
$LN67@ioINILoade:
  003ae	c6 40 20 ed	 mov	 BYTE PTR [eax+32], -19	; ffffffedH
  003b2	e9 d1 00 00 00	 jmp	 $LN4@ioINILoade
$LN68@ioINILoade:
  003b7	c6 40 1f ea	 mov	 BYTE PTR [eax+31], -22	; ffffffeaH
  003bb	e9 c8 00 00 00	 jmp	 $LN4@ioINILoade
$LN69@ioINILoade:
  003c0	88 58 1e	 mov	 BYTE PTR [eax+30], bl
  003c3	e9 c0 00 00 00	 jmp	 $LN4@ioINILoade
$LN70@ioINILoade:
  003c8	c6 40 1d ec	 mov	 BYTE PTR [eax+29], -20	; ffffffecH
  003cc	e9 b7 00 00 00	 jmp	 $LN4@ioINILoade
$LN71@ioINILoade:
  003d1	c6 40 1c ed	 mov	 BYTE PTR [eax+28], -19	; ffffffedH
  003d5	e9 ae 00 00 00	 jmp	 $LN4@ioINILoade
$LN72@ioINILoade:
  003da	c6 40 1b ea	 mov	 BYTE PTR [eax+27], -22	; ffffffeaH
  003de	e9 a5 00 00 00	 jmp	 $LN4@ioINILoade
$LN73@ioINILoade:
  003e3	88 58 1a	 mov	 BYTE PTR [eax+26], bl
  003e6	e9 9d 00 00 00	 jmp	 $LN4@ioINILoade
$LN74@ioINILoade:
  003eb	c6 40 19 ec	 mov	 BYTE PTR [eax+25], -20	; ffffffecH
  003ef	e9 94 00 00 00	 jmp	 $LN4@ioINILoade
$LN75@ioINILoade:
  003f4	c6 40 18 ed	 mov	 BYTE PTR [eax+24], -19	; ffffffedH
  003f8	e9 8b 00 00 00	 jmp	 $LN4@ioINILoade
$LN76@ioINILoade:
  003fd	c6 40 17 ea	 mov	 BYTE PTR [eax+23], -22	; ffffffeaH
  00401	e9 82 00 00 00	 jmp	 $LN4@ioINILoade
$LN77@ioINILoade:
  00406	88 58 16	 mov	 BYTE PTR [eax+22], bl
  00409	eb 7d		 jmp	 SHORT $LN4@ioINILoade
$LN78@ioINILoade:
  0040b	c6 40 15 ec	 mov	 BYTE PTR [eax+21], -20	; ffffffecH
  0040f	eb 77		 jmp	 SHORT $LN4@ioINILoade
$LN79@ioINILoade:
  00411	c6 40 14 ed	 mov	 BYTE PTR [eax+20], -19	; ffffffedH
  00415	eb 71		 jmp	 SHORT $LN4@ioINILoade
$LN80@ioINILoade:
  00417	c6 40 13 ea	 mov	 BYTE PTR [eax+19], -22	; ffffffeaH
  0041b	eb 6b		 jmp	 SHORT $LN4@ioINILoade
$LN81@ioINILoade:
  0041d	88 58 12	 mov	 BYTE PTR [eax+18], bl
  00420	eb 66		 jmp	 SHORT $LN4@ioINILoade
$LN82@ioINILoade:
  00422	c6 40 11 ec	 mov	 BYTE PTR [eax+17], -20	; ffffffecH
  00426	eb 60		 jmp	 SHORT $LN4@ioINILoade
$LN83@ioINILoade:
  00428	c6 40 10 ed	 mov	 BYTE PTR [eax+16], -19	; ffffffedH
  0042c	eb 5a		 jmp	 SHORT $LN4@ioINILoade
$LN84@ioINILoade:
  0042e	c6 40 0f ea	 mov	 BYTE PTR [eax+15], -22	; ffffffeaH
  00432	eb 54		 jmp	 SHORT $LN4@ioINILoade
$LN85@ioINILoade:
  00434	88 58 0e	 mov	 BYTE PTR [eax+14], bl
  00437	eb 4f		 jmp	 SHORT $LN4@ioINILoade
$LN86@ioINILoade:
  00439	c6 40 0d ec	 mov	 BYTE PTR [eax+13], -20	; ffffffecH
  0043d	eb 49		 jmp	 SHORT $LN4@ioINILoade
$LN87@ioINILoade:
  0043f	c6 40 0c ed	 mov	 BYTE PTR [eax+12], -19	; ffffffedH
  00443	eb 43		 jmp	 SHORT $LN4@ioINILoade
$LN88@ioINILoade:
  00445	c6 40 0b ea	 mov	 BYTE PTR [eax+11], -22	; ffffffeaH
  00449	eb 3d		 jmp	 SHORT $LN4@ioINILoade
$LN89@ioINILoade:
  0044b	88 58 0a	 mov	 BYTE PTR [eax+10], bl
  0044e	eb 38		 jmp	 SHORT $LN4@ioINILoade
$LN90@ioINILoade:
  00450	c6 40 09 ec	 mov	 BYTE PTR [eax+9], -20	; ffffffecH
  00454	eb 32		 jmp	 SHORT $LN4@ioINILoade
$LN91@ioINILoade:
  00456	c6 40 08 ed	 mov	 BYTE PTR [eax+8], -19	; ffffffedH
  0045a	eb 2c		 jmp	 SHORT $LN4@ioINILoade
$LN92@ioINILoade:
  0045c	c6 40 07 ea	 mov	 BYTE PTR [eax+7], -22	; ffffffeaH
  00460	eb 26		 jmp	 SHORT $LN4@ioINILoade
$LN93@ioINILoade:
  00462	88 58 06	 mov	 BYTE PTR [eax+6], bl
  00465	eb 21		 jmp	 SHORT $LN4@ioINILoade
$LN94@ioINILoade:
  00467	c6 40 05 ec	 mov	 BYTE PTR [eax+5], -20	; ffffffecH
  0046b	eb 1b		 jmp	 SHORT $LN4@ioINILoade
$LN95@ioINILoade:
  0046d	c6 40 04 ed	 mov	 BYTE PTR [eax+4], -19	; ffffffedH
  00471	eb 15		 jmp	 SHORT $LN4@ioINILoade
$LN96@ioINILoade:
  00473	c6 40 03 ea	 mov	 BYTE PTR [eax+3], -22	; ffffffeaH
  00477	eb 0f		 jmp	 SHORT $LN4@ioINILoade
$LN97@ioINILoade:
  00479	c6 40 02 eb	 mov	 BYTE PTR [eax+2], -21	; ffffffebH
  0047d	eb 09		 jmp	 SHORT $LN4@ioINILoade
$LN98@ioINILoade:
  0047f	c6 40 01 ec	 mov	 BYTE PTR [eax+1], -20	; ffffffecH
  00483	eb 03		 jmp	 SHORT $LN4@ioINILoade
$LN99@ioINILoade:
  00485	c6 00 ed	 mov	 BYTE PTR [eax], -19	; ffffffedH
$LN4@ioINILoade:
  00488	6a 06		 push	 6
  0048a	8b c8		 mov	 ecx, eax
  0048c	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0
  00490	5a		 pop	 edx
$LL107@ioINILoade:
  00491	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  00497	83 c1 04	 add	 ecx, 4
  0049a	4a		 dec	 edx
  0049b	75 f4		 jne	 SHORT $LL107@ioINILoade
  0049d	6a 18		 push	 24			; 00000018H
  0049f	5e		 pop	 esi
$LL104@ioINILoade:
  004a0	8b ce		 mov	 ecx, esi
  004a2	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  004a8	79 05		 jns	 SHORT $LN114@ioINILoade
  004aa	49		 dec	 ecx
  004ab	83 c9 fc	 or	 ecx, -4			; fffffffcH
  004ae	41		 inc	 ecx
$LN114@ioINILoade:
  004af	b2 ed		 mov	 dl, -19			; ffffffedH
  004b1	2a d1		 sub	 dl, cl
  004b3	30 14 06	 xor	 BYTE PTR [esi+eax], dl
  004b6	46		 inc	 esi
  004b7	83 fe 1b	 cmp	 esi, 27			; 0000001bH
  004ba	7c e4		 jl	 SHORT $LL104@ioINILoade
  004bc	ff 75 0c	 push	 DWORD PTR _b$[ebp]
  004bf	8b cf		 mov	 ecx, edi
  004c1	50		 push	 eax
  004c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@PBD_N@Z

; 225  : 	}

  004c8	8b c7		 mov	 eax, edi
  004ca	5f		 pop	 edi
  004cb	5e		 pop	 esi
  004cc	5b		 pop	 ebx
  004cd	5d		 pop	 ebp
  004ce	c2 08 00	 ret	 8
??$?0$0BM@@ioINILoader_e@@QAE@AAY0BM@$$CBD_N@Z ENDP	; ioINILoader_e::ioINILoader_e<28>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@H@std@@HAAH@std@@YAXAAV?$allocator@H@0@PAHAAH@Z ; std::_Cons_val<std::allocator<int>,int,int &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@H@std@@HAAH@std@@YAXAAV?$allocator@H@0@PAHAAH@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@H@std@@HAAH@std@@YAXAAV?$allocator@H@0@PAHAAH@Z PROC ; std::_Cons_val<std::allocator<int>,int,int &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN7@Cons_val
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@Cons_val:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@H@std@@HAAH@std@@YAXAAV?$allocator@H@0@PAHAAH@Z ENDP ; std::_Cons_val<std::allocator<int>,int,int &>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@H@std@@HABH@std@@YAXAAV?$allocator@H@0@PAHABH@Z ; std::_Cons_val<std::allocator<int>,int,int const &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@H@std@@HABH@std@@YAXAAV?$allocator@H@0@PAHABH@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@H@std@@HABH@std@@YAXAAV?$allocator@H@0@PAHABH@Z PROC ; std::_Cons_val<std::allocator<int>,int,int const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN9@Cons_val@2
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN9@Cons_val@2:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@H@std@@HABH@std@@YAXAAV?$allocator@H@0@PAHABH@Z ENDP ; std::_Cons_val<std::allocator<int>,int,int const &>
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z ; std::vector<int,std::allocator<int> >::_Buy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z PROC	; std::vector<int,std::allocator<int> >::_Buy, COMDAT
; _this$ = ecx

; 1250 : 		{	// allocate array with _Capacity elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1251 : 		this->_Myfirst = 0;

  00004	33 c0		 xor	 eax, eax
  00006	57		 push	 edi

; 1252 : 		this->_Mylast = 0;
; 1253 : 		this->_Myend = 0;
; 1254 : 
; 1255 : 		if (_Capacity == 0)

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Capacity$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 06		 mov	 DWORD PTR [esi], eax
  0000e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00011	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00014	3b f8		 cmp	 edi, eax
  00016	75 04		 jne	 SHORT $LN4@Buy

; 1256 : 			return (false);

  00018	32 c0		 xor	 al, al
  0001a	eb 29		 jmp	 SHORT $LN5@Buy
$LN4@Buy:

; 1257 : 		else if (max_size() < _Capacity)

  0001c	81 ff ff ff ff
	3f		 cmp	 edi, 1073741823		; 3fffffffH
  00022	76 0b		 jbe	 SHORT $LN2@Buy

; 1258 : 			_Xlen();	// result too long

  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN19@Buy:
$LN2@Buy:

; 1259 : 		else
; 1260 : 			{	// nonempty array, allocate storage
; 1261 : 			this->_Myfirst = this->_Alval.allocate(_Capacity);

  0002f	50		 push	 eax
  00030	57		 push	 edi
  00031	e8 00 00 00 00	 call	 ??$_Allocate@H@std@@YAPAHIPAH@Z ; std::_Allocate<int>
  00036	89 06		 mov	 DWORD PTR [esi], eax

; 1262 : 			this->_Mylast = this->_Myfirst;

  00038	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1263 : 			this->_Myend = this->_Myfirst + _Capacity;

  0003b	8d 04 b8	 lea	 eax, DWORD PTR [eax+edi*4]
  0003e	59		 pop	 ecx
  0003f	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00042	59		 pop	 ecx

; 1264 : 			}
; 1265 : 		return (true);

  00043	b0 01		 mov	 al, 1
$LN5@Buy:
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi

; 1266 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN18@Buy:
?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z ENDP	; std::vector<int,std::allocator<int> >::_Buy
_TEXT	ENDS
PUBLIC	??$_Ucopy@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Ucopy<int *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Ucopy@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$508216 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Ucopy@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z PROC ; std::vector<int,std::allocator<int> >::_Ucopy<int *>, COMDAT
; _this$ = ecx

; 1315 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1316 : 		{	// copy initializing [_First, _Last), using allocator
; 1317 : 		return (_Uninitialized_copy(_First, _Last,
; 1318 : 			_Ptr, this->_Alval));

  00003	ff 75 10	 push	 DWORD PTR __Cat$508216[ebp]
  00006	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00009	51		 push	 ecx
  0000a	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00010	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00013	e8 00 00 00 00	 call	 ??$_Uninit_copy@HH@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<int,int>
  00018	83 c4 14	 add	 esp, 20			; 00000014H

; 1319 : 		}

  0001b	5d		 pop	 ebp
  0001c	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ENDP ; std::vector<int,std::allocator<int> >::_Ucopy<int *>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@H@std@@H@std@@YAXAAV?$allocator@H@0@PAH@Z ; std::_Dest_val<std::allocator<int>,int>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@H@std@@H@std@@YAXAAV?$allocator@H@0@PAH@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@H@std@@H@std@@YAXAAV?$allocator@H@0@PAH@Z PROC ; std::_Dest_val<std::allocator<int>,int>, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@H@std@@H@std@@YAXAAV?$allocator@H@0@PAH@Z ENDP ; std::_Dest_val<std::allocator<int>,int>
_TEXT	ENDS
PUBLIC	??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Destroy
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator!=
_TEXT	ENDS
PUBLIC	??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Umove<int *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z PROC ; std::vector<int,std::allocator<int> >::_Umove<int *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z ; std::_Uninitialized_move<int *,int *,std::allocator<int> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ENDP ; std::vector<int,std::allocator<int> >::_Umove<int *>
_TEXT	ENDS
PUBLIC	?begin@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@XZ ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@XZ PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@XZ ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@XZ ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@XZ PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@XZ ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::end
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@@Z PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@@Z ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Make_iter
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@PAHV?$allocator@H@2@@std@@YAPAHV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@0@0PAHAAV?$allocator@H@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >,int *,std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@PAHV?$allocator@H@2@@std@@YAPAHV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@0@0PAHAAV?$allocator@H@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@PAHV?$allocator@H@2@@std@@YAPAHV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@0@0PAHAAV?$allocator@H@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >,int *,std::allocator<int> >, COMDAT

; 369  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;
; 373  : 
; 374  : 	_TRY_BEGIN
; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	eb 17		 jmp	 SHORT $LN48@Uninit_cop
$LL14@Uninit_cop:

; 376  : 		_Cons_val(_Al, _Dest, *_First);

  00008	83 7d 10 00	 cmp	 DWORD PTR __Dest$[ebp], 0
  0000c	74 07		 je	 SHORT $LN32@Uninit_cop
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00013	89 0a		 mov	 DWORD PTR [edx], ecx
$LN32@Uninit_cop:

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;
; 373  : 
; 374  : 	_TRY_BEGIN
; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

  00015	83 45 10 04	 add	 DWORD PTR __Dest$[ebp], 4
  00019	83 c0 04	 add	 eax, 4
  0001c	89 45 08	 mov	 DWORD PTR __First$[ebp], eax
$LN48@Uninit_cop:
  0001f	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00022	75 e4		 jne	 SHORT $LL14@Uninit_cop

; 377  : 	_CATCH_ALL
; 378  : 	for (; _Next != _Dest; ++_Next)
; 379  : 		_Dest_val(_Al, _Next);
; 380  : 	_RERAISE;
; 381  : 	_CATCH_END
; 382  : 	return (_Dest);

  00024	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 383  : 	}

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@PAHV?$allocator@H@2@@std@@YAPAHV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@0@0PAHAAV?$allocator@H@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >,int *,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$508515 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z PROC ; std::vector<int,std::allocator<int> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __First_arg$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	8b f1		 mov	 esi, ecx
  0000d	89 07		 mov	 DWORD PTR [edi], eax

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 45 10	 cmp	 eax, DWORD PTR __Last_arg$[ebp]
  00012	74 16		 je	 SHORT $LN1@erase

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	ff 75 10	 push	 DWORD PTR __Cat$508515[ebp]
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  0001f	e8 00 00 00 00	 call	 ??$_Move@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<int *,int *>
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

  00027	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN1@erase:

; 1212 : 			}
; 1213 : 		return (_First);

  0002a	8b c7		 mov	 eax, edi
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi

; 1214 : 		}

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z ENDP ; std::vector<int,std::allocator<int> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ PROC	; std::vector<int,std::allocator<int> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN12@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN12@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ENDP	; std::vector<int,std::allocator<int> >::_Tidy
_TEXT	ENDS
PUBLIC	?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z ; std::vector<int,std::allocator<int> >::reserve
; Function compile flags: /Ogsp
;	COMDAT ?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z PROC ; std::vector<int,std::allocator<int> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 747  : 		if (max_size() < _Count)

  00003	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	76 0b		 jbe	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN43@reserve:
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  0001a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0001d	2b 06		 sub	 eax, DWORD PTR [esi]
  0001f	c1 f8 02	 sar	 eax, 2
  00022	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00025	73 52		 jae	 SHORT $LN3@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00027	53		 push	 ebx
  00028	57		 push	 edi
  00029	6a 00		 push	 0
  0002b	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate@H@std@@YAPAHIPAH@Z ; std::_Allocate<int>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00033	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00035	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00038	52		 push	 edx
  00039	8b d8		 mov	 ebx, eax
  0003b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003e	53		 push	 ebx
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z ; std::_Uninitialized_move<int *,int *,std::allocator<int> >

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00046	8b 06		 mov	 eax, DWORD PTR [esi]
  00048	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0004b	2b f8		 sub	 edi, eax
  0004d	83 c4 18	 add	 esp, 24			; 00000018H
  00050	c1 ff 02	 sar	 edi, 2

; 761  : 			if (this->_Myfirst != 0)

  00053	85 c0		 test	 eax, eax
  00055	74 07		 je	 SHORT $LN39@reserve

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);
; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0005d	59		 pop	 ecx
$LN39@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  0005e	8b ce		 mov	 ecx, esi
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00066	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00069	8d 04 83	 lea	 eax, DWORD PTR [ebx+eax*4]
  0006c	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 770  : 			this->_Mylast = _Ptr + _Size;

  0006f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00072	5f		 pop	 edi

; 771  : 			this->_Myfirst = _Ptr;

  00073	89 1e		 mov	 DWORD PTR [esi], ebx
  00075	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00078	5b		 pop	 ebx
$LN3@reserve:
  00079	5e		 pop	 esi

; 772  : 			}
; 773  : 		}

  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
$LN42@reserve:
?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z ENDP ; std::vector<int,std::allocator<int> >::reserve
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@PAHV?$allocator@H@2@@std@@YAPAHV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@0@0PAHAAV?$allocator@H@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >,int *,std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@PAHV?$allocator@H@2@@std@@YAPAHV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@0@0PAHAAV?$allocator@H@0@@Z
_TEXT	SEGMENT
__Cat$508670 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@PAHV?$allocator@H@2@@std@@YAPAHV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@0@0PAHAAV?$allocator@H@0@@Z PROC ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >,int *,std::allocator<int> >, COMDAT

; 412  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 413  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 414  : 		_Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$508670[ebp]
  00007	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000a	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00010	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00013	e8 00 00 00 00	 call	 ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@PAHV?$allocator@H@2@@std@@YAPAHV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@0@0PAHAAV?$allocator@H@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >,int *,std::allocator<int> >
  00018	83 c4 14	 add	 esp, 20			; 00000014H

; 415  : 	}

  0001b	c9		 leave
  0001c	c3		 ret	 0
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@PAHV?$allocator@H@2@@std@@YAPAHV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@0@0PAHAAV?$allocator@H@0@@Z ENDP ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >,int *,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ ; std::vector<int,std::allocator<int> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T508685 = -4						; size = 4
?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ PROC	; std::vector<int,std::allocator<int> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T508685[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ ENDP	; std::vector<int,std::allocator<int> >::clear
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ; std::vector<int,std::allocator<int> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z PROC ; std::vector<int,std::allocator<int> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx

; 1292 : 		if (max_size() - _Count < _Size)

  0000d	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  00012	2b 55 08	 sub	 edx, DWORD PTR __Count$[ebp]
  00015	c1 f8 02	 sar	 eax, 2
  00018	3b d0		 cmp	 edx, eax
  0001a	73 0b		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve:
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  00027	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0002a	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0002d	2b d1		 sub	 edx, ecx
  0002f	c1 fa 02	 sar	 edx, 2
  00032	3b c2		 cmp	 eax, edx
  00034	76 10		 jbe	 SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  00036	50		 push	 eax
  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z ; std::vector<int,std::allocator<int> >::_Grow_to
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z ; std::vector<int,std::allocator<int> >::reserve
$LN1@Reserve:
  00046	5e		 pop	 esi

; 1298 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN20@Reserve:
?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ENDP ; std::vector<int,std::allocator<int> >::_Reserve
_TEXT	ENDS
PUBLIC	??1RankMaterialEatInfo@ioPetEatInfoManager@@QAE@XZ ; ioPetEatInfoManager::RankMaterialEatInfo::~RankMaterialEatInfo
; Function compile flags: /Ogsp
;	COMDAT ??1RankMaterialEatInfo@ioPetEatInfoManager@@QAE@XZ
_TEXT	SEGMENT
??1RankMaterialEatInfo@ioPetEatInfoManager@@QAE@XZ PROC	; ioPetEatInfoManager::RankMaterialEatInfo::~RankMaterialEatInfo, COMDAT
; _this$ = ecx
  00000	83 c1 04	 add	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
??1RankMaterialEatInfo@ioPetEatInfoManager@@QAE@XZ ENDP	; ioPetEatInfoManager::RankMaterialEatInfo::~RankMaterialEatInfo
_TEXT	ENDS
PUBLIC	?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z ; std::vector<int,std::allocator<int> >::push_back
; Function compile flags: /Ogsp
;	COMDAT ?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z PROC ; std::vector<int,std::allocator<int> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f8		 cmp	 edi, eax
  0000f	73 27		 jae	 SHORT $LN4@push_back
  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	3b cf		 cmp	 ecx, edi
  00015	77 21		 ja	 SHORT $LN4@push_back

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	2b f9		 sub	 edi, ecx
  00019	c1 ff 02	 sar	 edi, 2

; 980  : 			if (this->_Mylast == this->_Myend)

  0001c	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0001f	75 09		 jne	 SHORT $LN3@push_back

; 981  : 				_Reserve(1);

  00021	6a 01		 push	 1
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ; std::vector<int,std::allocator<int> >::_Reserve
$LN3@push_back:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	85 c0		 test	 eax, eax
  0002f	74 20		 je	 SHORT $LN39@push_back
  00031	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00033	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00036	eb 17		 jmp	 SHORT $LN46@push_back
$LN4@push_back:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00038	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0003b	75 09		 jne	 SHORT $LN1@push_back

; 991  : 				_Reserve(1);

  0003d	6a 01		 push	 1
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ; std::vector<int,std::allocator<int> >::_Reserve
$LN1@push_back:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00046	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00049	85 c0		 test	 eax, eax
  0004b	74 04		 je	 SHORT $LN39@push_back
  0004d	8b 0f		 mov	 ecx, DWORD PTR [edi]
$LN46@push_back:
  0004f	89 08		 mov	 DWORD PTR [eax], ecx
$LN39@push_back:

; 996  : 			++this->_Mylast;

  00051	83 46 04 04	 add	 DWORD PTR [esi+4], 4
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z ENDP ; std::vector<int,std::allocator<int> >::push_back
_TEXT	ENDS
PUBLIC	??4?$vector@HV?$allocator@H@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<int,std::allocator<int> >::operator=
; Function compile flags: /Ogsp
;	COMDAT ??4?$vector@HV?$allocator@H@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Cat$509140 = 8					; size = 1
__Cat$509079 = 8					; size = 1
__Cat$509057 = 8					; size = 1
__Cat$509001 = 8					; size = 1
$T508984 = 8						; size = 4
__Right$ = 8						; size = 4
??4?$vector@HV?$allocator@H@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::vector<int,std::allocator<int> >::operator=, COMDAT
; _this$ = ecx

; 709  : 		{	// assign _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 710  : 		if (this != &_Right)

  00005	8b 7d 08	 mov	 edi, DWORD PTR __Right$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	3b f7		 cmp	 esi, edi
  0000c	0f 84 c7 00 00
	00		 je	 $LN1@operator

; 711  : 			{	// worth doing
; 712  : 			this->_Orphan_all();

  00012	53		 push	 ebx
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 713  : 
; 714  : 			if (_Right.size() == 0)

  00019	8b 5f 04	 mov	 ebx, DWORD PTR [edi+4]

; 715  : 				clear();	// new sequence empty, erase existing sequence

  0001c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001f	8b cb		 mov	 ecx, ebx
  00021	2b 0f		 sub	 ecx, DWORD PTR [edi]
  00023	c1 f9 02	 sar	 ecx, 2
  00026	85 c9		 test	 ecx, ecx
  00028	75 14		 jne	 SHORT $LN8@operator
  0002a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0002c	50		 push	 eax
  0002d	51		 push	 ecx
  0002e	8d 45 08	 lea	 eax, DWORD PTR $T508984[ebp]
  00031	50		 push	 eax
  00032	8b ce		 mov	 ecx, esi
  00034	e8 00 00 00 00	 call	 ?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase

; 716  : 			else if (_Right.size() <= size())

  00039	e9 9a 00 00 00	 jmp	 $LN84@operator
$LN8@operator:
  0003e	8b 16		 mov	 edx, DWORD PTR [esi]
  00040	2b c2		 sub	 eax, edx
  00042	c1 f8 02	 sar	 eax, 2
  00045	3b c8		 cmp	 ecx, eax
  00047	77 1e		 ja	 SHORT $LN6@operator

; 717  : 				{	// enough elements, copy new and destroy old
; 718  : 				pointer _Ptr = _STD _Copy_impl(_Right._Myfirst, _Right._Mylast,
; 719  : 					this->_Myfirst);	// copy new

  00049	ff 75 08	 push	 DWORD PTR __Cat$509001[ebp]
  0004c	52		 push	 edx
  0004d	53		 push	 ebx
  0004e	ff 37		 push	 DWORD PTR [edi]
  00050	e8 00 00 00 00	 call	 ??$_Copy_impl@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<int *,int *>

; 720  : 				_Destroy(_Ptr, this->_Mylast);	// destroy old
; 721  : 				this->_Mylast = this->_Myfirst + _Right.size();

  00055	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00058	2b 07		 sub	 eax, DWORD PTR [edi]
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	83 c4 10	 add	 esp, 16			; 00000010H
  0005f	c1 f8 02	 sar	 eax, 2
  00062	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]

; 722  : 				}
; 723  : 			else if (_Right.size() <= capacity())

  00065	eb 6e		 jmp	 SHORT $LN85@operator
$LN6@operator:
  00067	8b 5e 08	 mov	 ebx, DWORD PTR [esi+8]
  0006a	2b da		 sub	 ebx, edx
  0006c	c1 fb 02	 sar	 ebx, 2
  0006f	3b cb		 cmp	 ecx, ebx
  00071	77 2a		 ja	 SHORT $LN4@operator

; 724  : 				{	// enough room, copy and construct new
; 725  : 				pointer _Ptr = _Right._Myfirst + size();
; 726  : 				_STD _Copy_impl(_Right._Myfirst, _Ptr, this->_Myfirst);

  00073	ff 75 08	 push	 DWORD PTR __Cat$509057[ebp]
  00076	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00078	52		 push	 edx
  00079	8d 1c 81	 lea	 ebx, DWORD PTR [ecx+eax*4]
  0007c	53		 push	 ebx
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ??$_Copy_impl@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<int *,int *>

; 727  : 				this->_Mylast = _Ucopy(_Ptr, _Right._Mylast, this->_Mylast);

  00083	ff 75 08	 push	 DWORD PTR __Cat$509079[ebp]
  00086	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00089	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  0008c	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0008f	51		 push	 ecx
  00090	50		 push	 eax
  00091	57		 push	 edi
  00092	53		 push	 ebx
  00093	e8 00 00 00 00	 call	 ??$_Uninit_copy@HH@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<int,int>
  00098	83 c4 24	 add	 esp, 36			; 00000024H

; 728  : 				}
; 729  : 			else

  0009b	eb 38		 jmp	 SHORT $LN85@operator
$LN4@operator:

; 730  : 				{	// not enough room, allocate new array and construct new
; 731  : 				if (this->_Myfirst != 0)

  0009d	85 d2		 test	 edx, edx
  0009f	74 07		 je	 SHORT $LN74@operator

; 732  : 					{	// discard old array
; 733  : 					_Destroy(this->_Myfirst, this->_Mylast);
; 734  : 					this->_Alval.deallocate(this->_Myfirst,
; 735  : 						this->_Myend - this->_Myfirst);

  000a1	52		 push	 edx
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000a7	59		 pop	 ecx
$LN74@operator:

; 736  : 					}
; 737  : 				if (_Buy(_Right.size()))

  000a8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000ab	2b 07		 sub	 eax, DWORD PTR [edi]
  000ad	8b ce		 mov	 ecx, esi
  000af	c1 f8 02	 sar	 eax, 2
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z ; std::vector<int,std::allocator<int> >::_Buy
  000b8	84 c0		 test	 al, al
  000ba	74 1c		 je	 SHORT $LN84@operator

; 738  : 					this->_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 739  : 						this->_Myfirst);

  000bc	ff 75 08	 push	 DWORD PTR __Cat$509140[ebp]
  000bf	8b 06		 mov	 eax, DWORD PTR [esi]
  000c1	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000c4	8b 3f		 mov	 edi, DWORD PTR [edi]
  000c6	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  000c9	52		 push	 edx
  000ca	50		 push	 eax
  000cb	51		 push	 ecx
  000cc	57		 push	 edi
  000cd	e8 00 00 00 00	 call	 ??$_Uninit_copy@HH@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<int,int>
  000d2	83 c4 14	 add	 esp, 20			; 00000014H
$LN85@operator:
  000d5	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN84@operator:
  000d8	5b		 pop	 ebx
$LN1@operator:
  000d9	5f		 pop	 edi

; 740  : 				}
; 741  : 			}
; 742  : 		return (*this);

  000da	8b c6		 mov	 eax, esi
  000dc	5e		 pop	 esi

; 743  : 		}

  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
??4?$vector@HV?$allocator@H@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::vector<int,std::allocator<int> >::operator=
_TEXT	ENDS
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@@?$vector@HV?$allocator@H@std@@@std@@IAEPAHV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@1@0PAH@Z ; std::vector<int,std::allocator<int> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > > >
; Function compile flags: /Ogsp
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@@?$vector@HV?$allocator@H@std@@@std@@IAEPAHV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@1@0PAH@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$509159 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@@?$vector@HV?$allocator@H@std@@@std@@IAEPAHV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@1@0PAH@Z PROC ; std::vector<int,std::allocator<int> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > > >, COMDAT
; _this$ = ecx

; 1315 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1316 : 		{	// copy initializing [_First, _Last), using allocator
; 1317 : 		return (_Uninitialized_copy(_First, _Last,
; 1318 : 			_Ptr, this->_Alval));

  00003	ff 75 10	 push	 DWORD PTR __Cat$509159[ebp]
  00006	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00009	51		 push	 ecx
  0000a	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00010	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00013	e8 00 00 00 00	 call	 ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@PAHV?$allocator@H@2@@std@@YAPAHV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@0@0PAHAAV?$allocator@H@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >,int *,std::allocator<int> >
  00018	83 c4 14	 add	 esp, 20			; 00000014H

; 1319 : 		}

  0001b	5d		 pop	 ebp
  0001c	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@@?$vector@HV?$allocator@H@std@@@std@@IAEPAHV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@1@0PAH@Z ENDP ; std::vector<int,std::allocator<int> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > > >
_TEXT	ENDS
PUBLIC	??_GRankMaterialEatInfo@ioPetEatInfoManager@@QAEPAXI@Z ; ioPetEatInfoManager::RankMaterialEatInfo::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_GRankMaterialEatInfo@ioPetEatInfoManager@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GRankMaterialEatInfo@ioPetEatInfoManager@@QAEPAXI@Z PROC ; ioPetEatInfoManager::RankMaterialEatInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00009	e8 00 00 00 00	 call	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
  0000e	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00012	74 07		 je	 SHORT $LN1@scalar@2
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001a	59		 pop	 ecx
$LN1@scalar@2:
  0001b	8b c6		 mov	 eax, esi
  0001d	5e		 pop	 esi
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??_GRankMaterialEatInfo@ioPetEatInfoManager@@QAEPAXI@Z ENDP ; ioPetEatInfoManager::RankMaterialEatInfo::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0RankMaterialEatInfo@ioPetEatInfoManager@@QAE@XZ ; ioPetEatInfoManager::RankMaterialEatInfo::RankMaterialEatInfo
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iopeteatinfomanager.h
;	COMDAT ??0RankMaterialEatInfo@ioPetEatInfoManager@@QAE@XZ
_TEXT	SEGMENT
$T509269 = -4						; size = 4
??0RankMaterialEatInfo@ioPetEatInfoManager@@QAE@XZ PROC	; ioPetEatInfoManager::RankMaterialEatInfo::RankMaterialEatInfo, COMDAT
; _this$ = ecx

; 11   : 		RankMaterialEatInfo()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	33 c0		 xor	 eax, eax
  00007	8b f1		 mov	 esi, ecx
  00009	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax
  0000e	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00011	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 12   : 		{
; 13   : 			m_nRankType = 0;

  00014	89 06		 mov	 DWORD PTR [esi], eax

; 14   : 			m_MaterialInfoList.clear();

  00016	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00019	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001b	50		 push	 eax
  0001c	52		 push	 edx
  0001d	8d 45 fc	 lea	 eax, DWORD PTR $T509269[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase

; 15   : 		}

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	c9		 leave
  0002a	c3		 ret	 0
??0RankMaterialEatInfo@ioPetEatInfoManager@@QAE@XZ ENDP	; ioPetEatInfoManager::RankMaterialEatInfo::RankMaterialEatInfo
_TEXT	ENDS
PUBLIC	??4RankMaterialEatInfo@ioPetEatInfoManager@@QAEAAU01@ABU01@@Z ; ioPetEatInfoManager::RankMaterialEatInfo::operator=
; Function compile flags: /Ogsp
;	COMDAT ??4RankMaterialEatInfo@ioPetEatInfoManager@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4RankMaterialEatInfo@ioPetEatInfoManager@@QAEAAU01@ABU01@@Z PROC ; ioPetEatInfoManager::RankMaterialEatInfo::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000b	83 c0 04	 add	 eax, 4
  0000e	89 0e		 mov	 DWORD PTR [esi], ecx
  00010	50		 push	 eax
  00011	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00014	e8 00 00 00 00	 call	 ??4?$vector@HV?$allocator@H@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<int,std::allocator<int> >::operator=
  00019	8b c6		 mov	 eax, esi
  0001b	5e		 pop	 esi
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??4RankMaterialEatInfo@ioPetEatInfoManager@@QAEAAU01@ABU01@@Z ENDP ; ioPetEatInfoManager::RankMaterialEatInfo::operator=
_TEXT	ENDS
PUBLIC	??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3_catch:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__catchsym$??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z$0
__unwindtable$??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z$2
__ehfuncinfo$??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Cat$509369 = 8					; size = 1
__Right$ = 8						; size = 4
??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z PROC ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 535  : 		{	// construct by copying _Right

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi

; 536  : 		if (_Buy(_Right.size()))

  00011	8b 7d 08	 mov	 edi, DWORD PTR __Right$[ebp]
  00014	33 db		 xor	 ebx, ebx
  00016	89 1e		 mov	 DWORD PTR [esi], ebx
  00018	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  0001b	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  0001e	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00021	2b 07		 sub	 eax, DWORD PTR [edi]
  00023	c1 f8 02	 sar	 eax, 2
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z ; std::vector<int,std::allocator<int> >::_Buy
  0002c	84 c0		 test	 al, al
  0002e	74 1f		 je	 SHORT $LN7@vector

; 537  : 			_TRY_BEGIN
; 538  : 			this->_Mylast = _Ucopy(_Right.begin(), _Right.end(),
; 539  : 				this->_Myfirst);

  00030	ff 75 08	 push	 DWORD PTR __Cat$509369[ebp]
  00033	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	8b 3f		 mov	 edi, DWORD PTR [edi]
  0003a	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  0003d	52		 push	 edx
  0003e	51		 push	 ecx
  0003f	50		 push	 eax
  00040	57		 push	 edi
  00041	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+12], ebx
  00044	e8 00 00 00 00	 call	 ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@PAHV?$allocator@H@2@@std@@YAPAHV?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@0@0PAHAAV?$allocator@H@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >,int *,std::allocator<int> >
  00049	83 c4 14	 add	 esp, 20			; 00000014H
  0004c	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN7@vector:

; 543  : 			_CATCH_END
; 544  : 		}

  0004f	8b c6		 mov	 eax, esi
  00051	e8 00 00 00 00	 call	 __EH_epilog3
  00056	c2 04 00	 ret	 4
__catch$??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z$0:

; 540  : 			_CATCH_ALL
; 541  : 			_Tidy();

  00059	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy

; 542  : 			_RERAISE;

  00061	33 db		 xor	 ebx, ebx
  00063	53		 push	 ebx
  00064	53		 push	 ebx
  00065	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN38@vector:
$LN37@vector:
  0006a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
PUBLIC	??$_Destroy@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@@Z ; std::_Destroy<ioPetEatInfoManager::RankMaterialEatInfo>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@@Z PROC ; std::_Destroy<ioPetEatInfoManager::RankMaterialEatInfo>, COMDAT

; 62   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	_Ptr->~_Ty();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	83 c1 04	 add	 ecx, 4

; 64   : 	}

  00009	5d		 pop	 ebp

; 63   : 	_Ptr->~_Ty();

  0000a	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
??$_Destroy@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@@Z ENDP ; std::_Destroy<ioPetEatInfoManager::RankMaterialEatInfo>
_TEXT	ENDS
PUBLIC	??$_Move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioPetEatInfoManager::RankMaterialEatInfo *,ioPetEatInfoManager::RankMaterialEatInfo *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<ioPetEatInfoManager::RankMaterialEatInfo *,ioPetEatInfoManager::RankMaterialEatInfo *>, COMDAT

; 2512 : 	{	// move [_First, _Last) to [_Dest, ...), arbitrary iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
$LN13@Move:
  0000b	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  0000e	74 18		 je	 SHORT $LN1@Move

; 2514 : 		*_Dest = _STD move(*_First);

  00010	8b 06		 mov	 eax, DWORD PTR [esi]
  00012	89 07		 mov	 DWORD PTR [edi], eax
  00014	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00017	50		 push	 eax
  00018	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0001b	e8 00 00 00 00	 call	 ??4?$vector@HV?$allocator@H@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<int,std::allocator<int> >::operator=
  00020	83 c7 14	 add	 edi, 20			; 00000014H
  00023	83 c6 14	 add	 esi, 20			; 00000014H
  00026	eb e3		 jmp	 SHORT $LN13@Move
$LN1@Move:

; 2515 : 	return (_Dest);

  00028	8b c7		 mov	 eax, edi
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi

; 2516 : 	}

  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
??$_Move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<ioPetEatInfoManager::RankMaterialEatInfo *,ioPetEatInfoManager::RankMaterialEatInfo *>
_TEXT	ENDS
PUBLIC	??0RankMaterialEatInfo@ioPetEatInfoManager@@QAE@ABU01@@Z ; ioPetEatInfoManager::RankMaterialEatInfo::RankMaterialEatInfo
; Function compile flags: /Ogsp
;	COMDAT ??0RankMaterialEatInfo@ioPetEatInfoManager@@QAE@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0RankMaterialEatInfo@ioPetEatInfoManager@@QAE@ABU01@@Z PROC ; ioPetEatInfoManager::RankMaterialEatInfo::RankMaterialEatInfo, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000b	83 c0 04	 add	 eax, 4
  0000e	89 0e		 mov	 DWORD PTR [esi], ecx
  00010	50		 push	 eax
  00011	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00014	e8 00 00 00 00	 call	 ??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
  00019	8b c6		 mov	 eax, esi
  0001b	5e		 pop	 esi
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??0RankMaterialEatInfo@ioPetEatInfoManager@@QAE@ABU01@@Z ENDP ; ioPetEatInfoManager::RankMaterialEatInfo::RankMaterialEatInfo
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@@Z ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@@Z PROC ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 213  : 		_Destroy(_Ptr);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	83 c1 04	 add	 ecx, 4
  00009	e8 00 00 00 00	 call	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy

; 214  : 		}

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?destroy@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@@Z ENDP ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@$$QAU34@@Z ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::construct
EXTRN	__EH_prolog3:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@$$QAU34@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@$$QAU34@@Z$0
__ehfuncinfo$?construct@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@$$QAU34@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@$$QAU34@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@$$QAU34@@Z
_TEXT	SEGMENT
$T509476 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@$$QAU34@@Z PROC ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?construct@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@$$QAU34@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000f	89 45 f0	 mov	 DWORD PTR $T509476[ebp], eax
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 c0		 test	 eax, eax
  00018	74 13		 je	 SHORT $LN3@construct@3
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0001d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001f	83 c1 04	 add	 ecx, 4
  00022	51		 push	 ecx
  00023	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00026	89 10		 mov	 DWORD PTR [eax], edx
  00028	e8 00 00 00 00	 call	 ??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
$LN3@construct@3:

; 203  : 		}

  0002d	e8 00 00 00 00	 call	 __EH_epilog3
  00032	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@$$QAU34@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T509476[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$?construct@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@$$QAU34@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?construct@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@$$QAU34@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@$$QAU34@@Z ENDP ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::construct
PUBLIC	??$_Move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00@Z ; std::_Move<ioPetEatInfoManager::RankMaterialEatInfo *,ioPetEatInfoManager::RankMaterialEatInfo *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00@Z
_TEXT	SEGMENT
__Cat$509503 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00@Z PROC ; std::_Move<ioPetEatInfoManager::RankMaterialEatInfo *,ioPetEatInfoManager::RankMaterialEatInfo *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$509503[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioPetEatInfoManager::RankMaterialEatInfo *,ioPetEatInfoManager::RankMaterialEatInfo *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00@Z ENDP ; std::_Move<ioPetEatInfoManager::RankMaterialEatInfo *,ioPetEatInfoManager::RankMaterialEatInfo *>
_TEXT	ENDS
PUBLIC	??$construct@AAURankMaterialEatInfo@ioPetEatInfoManager@@@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@AAU23@@Z ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::construct<ioPetEatInfoManager::RankMaterialEatInfo &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$construct@AAURankMaterialEatInfo@ioPetEatInfoManager@@@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@AAU23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAURankMaterialEatInfo@ioPetEatInfoManager@@@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@AAU23@@Z$0
__ehfuncinfo$??$construct@AAURankMaterialEatInfo@ioPetEatInfoManager@@@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@AAU23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAURankMaterialEatInfo@ioPetEatInfoManager@@@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@AAU23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??$construct@AAURankMaterialEatInfo@ioPetEatInfoManager@@@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@AAU23@@Z
_TEXT	SEGMENT
$T509507 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAURankMaterialEatInfo@ioPetEatInfoManager@@@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@AAU23@@Z PROC ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::construct<ioPetEatInfoManager::RankMaterialEatInfo &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$construct@AAURankMaterialEatInfo@ioPetEatInfoManager@@@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@AAU23@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000f	89 45 f0	 mov	 DWORD PTR $T509507[ebp], eax
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 c0		 test	 eax, eax
  00018	74 13		 je	 SHORT $LN3@construct@4
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0001d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001f	83 c1 04	 add	 ecx, 4
  00022	51		 push	 ecx
  00023	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00026	89 10		 mov	 DWORD PTR [eax], edx
  00028	e8 00 00 00 00	 call	 ??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
$LN3@construct@4:

; 209  : 		}

  0002d	e8 00 00 00 00	 call	 __EH_epilog3
  00032	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAURankMaterialEatInfo@ioPetEatInfoManager@@@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@AAU23@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T509507[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$??$construct@AAURankMaterialEatInfo@ioPetEatInfoManager@@@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@AAU23@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@AAURankMaterialEatInfo@ioPetEatInfoManager@@@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@AAU23@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@AAURankMaterialEatInfo@ioPetEatInfoManager@@@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@AAU23@@Z ENDP ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::construct<ioPetEatInfoManager::RankMaterialEatInfo &>
PUBLIC	??$_Construct@URankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z ; std::_Construct<ioPetEatInfoManager::RankMaterialEatInfo,ioPetEatInfoManager::RankMaterialEatInfo const &>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Construct@URankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@URankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z$0
__ehfuncinfo$??$_Construct@URankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@URankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??$_Construct@URankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z
_TEXT	SEGMENT
$T509530 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$ = 8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@URankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z PROC ; std::_Construct<ioPetEatInfoManager::RankMaterialEatInfo,ioPetEatInfoManager::RankMaterialEatInfo const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Construct@URankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 47   : 	void _FARQ *_Vptr = _Ptr;

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000f	89 45 08	 mov	 DWORD PTR __Vptr$[ebp], eax

; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00012	89 45 f0	 mov	 DWORD PTR $T509530[ebp], eax
  00015	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00019	85 c0		 test	 eax, eax
  0001b	74 13		 je	 SHORT $LN3@Construct@2
  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  00020	8b 11		 mov	 edx, DWORD PTR [ecx]
  00022	83 c1 04	 add	 ecx, 4
  00025	51		 push	 ecx
  00026	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00029	89 10		 mov	 DWORD PTR [eax], edx
  0002b	e8 00 00 00 00	 call	 ??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
$LN3@Construct@2:

; 49   : 	}

  00030	e8 00 00 00 00	 call	 __EH_epilog3
  00035	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@URankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Vptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T509530[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$??$_Construct@URankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Construct@URankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Construct@URankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z ENDP ; std::_Construct<ioPetEatInfoManager::RankMaterialEatInfo,ioPetEatInfoManager::RankMaterialEatInfo const &>
PUBLIC	??$_Dest_val@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAXAAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@@Z ; std::_Dest_val<std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>,ioPetEatInfoManager::RankMaterialEatInfo>
; Function compile flags: /Ogsp
;	COMDAT ??$_Dest_val@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAXAAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAXAAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@@Z PROC ; std::_Dest_val<std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>,ioPetEatInfoManager::RankMaterialEatInfo>, COMDAT

; 286  : 	{	// destroy using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  00006	83 c1 04	 add	 ecx, 4

; 288  : 	}

  00009	5d		 pop	 ebp

; 287  : 	_Alval.destroy(_Pdest);

  0000a	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
??$_Dest_val@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAXAAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@@Z ENDP ; std::_Dest_val<std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>,ioPetEatInfoManager::RankMaterialEatInfo>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@URankMaterialEatInfo@ioPetEatInfoManager@@U34@@std@@YAXAAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@$$QAU23@@Z ; std::_Cons_val<std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>,ioPetEatInfoManager::RankMaterialEatInfo,ioPetEatInfoManager::RankMaterialEatInfo>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@URankMaterialEatInfo@ioPetEatInfoManager@@U34@@std@@YAXAAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@$$QAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@URankMaterialEatInfo@ioPetEatInfoManager@@U34@@std@@YAXAAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@$$QAU23@@Z PROC ; std::_Cons_val<std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>,ioPetEatInfoManager::RankMaterialEatInfo,ioPetEatInfoManager::RankMaterialEatInfo>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  0000c	e8 00 00 00 00	 call	 ?construct@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@$$QAU34@@Z ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::construct

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@URankMaterialEatInfo@ioPetEatInfoManager@@U34@@std@@YAXAAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@$$QAU23@@Z ENDP ; std::_Cons_val<std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>,ioPetEatInfoManager::RankMaterialEatInfo,ioPetEatInfoManager::RankMaterialEatInfo>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@URankMaterialEatInfo@ioPetEatInfoManager@@AAU34@@std@@YAXAAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@AAU23@@Z ; std::_Cons_val<std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>,ioPetEatInfoManager::RankMaterialEatInfo,ioPetEatInfoManager::RankMaterialEatInfo &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@URankMaterialEatInfo@ioPetEatInfoManager@@AAU34@@std@@YAXAAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@AAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@URankMaterialEatInfo@ioPetEatInfoManager@@AAU34@@std@@YAXAAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@AAU23@@Z PROC ; std::_Cons_val<std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>,ioPetEatInfoManager::RankMaterialEatInfo,ioPetEatInfoManager::RankMaterialEatInfo &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  0000c	e8 00 00 00 00	 call	 ??$construct@AAURankMaterialEatInfo@ioPetEatInfoManager@@@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@AAU23@@Z ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::construct<ioPetEatInfoManager::RankMaterialEatInfo &>

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@URankMaterialEatInfo@ioPetEatInfoManager@@AAU34@@std@@YAXAAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@AAU23@@Z ENDP ; std::_Cons_val<std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>,ioPetEatInfoManager::RankMaterialEatInfo,ioPetEatInfoManager::RankMaterialEatInfo &>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU34@@Z ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU34@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU34@@Z PROC ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  00006	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00009	e8 00 00 00 00	 call	 ??$_Construct@URankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z ; std::_Construct<ioPetEatInfoManager::RankMaterialEatInfo,ioPetEatInfoManager::RankMaterialEatInfo const &>
  0000e	59		 pop	 ecx
  0000f	59		 pop	 ecx

; 198  : 		}

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
?construct@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU34@@Z ENDP ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::construct
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@0AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy_range@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@0AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@0AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >, COMDAT

; 95   : 	{	// destroy [_First, _Last), arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 96   : 	for (; _First != _Last; ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0b		 jmp	 SHORT $LN24@Destroy_ra
$LL3@Destroy_ra:

; 97   : 		_Dest_val(_Al, _First);

  00009	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0000c	e8 00 00 00 00	 call	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
  00011	83 c6 14	 add	 esi, 20			; 00000014H
$LN24@Destroy_ra:

; 96   : 	for (; _First != _Last; ++_First)

  00014	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00017	75 f0		 jne	 SHORT $LL3@Destroy_ra
  00019	5e		 pop	 esi

; 98   : 	}

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Destroy_range@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@0AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@U12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioPetEatInfoManager::RankMaterialEatInfo *,ioPetEatInfoManager::RankMaterialEatInfo *,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>,ioPetEatInfoManager::RankMaterialEatInfo>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@U12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@U12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@U12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@U12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@U12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$3
__ehfuncinfo$??$_Uninit_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@U12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@U12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@U12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@U12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@U12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<ioPetEatInfoManager::RankMaterialEatInfo *,ioPetEatInfoManager::RankMaterialEatInfo *,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>,ioPetEatInfoManager::RankMaterialEatInfo>, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Uninit_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@U12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;

  0000c	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 428  : 
; 429  : 	_TRY_BEGIN

  0000f	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00013	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00016	89 45 ec	 mov	 DWORD PTR __Next$[ebp], eax
$LL6@Uninit_mov:

; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  00019	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  0001c	74 33		 je	 SHORT $LN4@Uninit_mov

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

  0001e	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00021	56		 push	 esi
  00022	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00025	e8 00 00 00 00	 call	 ?construct@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@$$QAU34@@Z ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::construct
  0002a	83 45 10 14	 add	 DWORD PTR __Dest$[ebp], 20 ; 00000014H
  0002e	83 c6 14	 add	 esi, 20			; 00000014H
  00031	eb e6		 jmp	 SHORT $LL6@Uninit_mov
__catch$??$_Uninit_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@U12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)

  00033	8b 75 ec	 mov	 esi, DWORD PTR __Next$[ebp]
  00036	eb 0b		 jmp	 SHORT $LN40@Uninit_mov
$LL3@Uninit_mov:

; 434  : 		_Dest_val(_Al, _Next);

  00038	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003b	e8 00 00 00 00	 call	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
  00040	83 c6 14	 add	 esi, 20			; 00000014H
$LN40@Uninit_mov:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)

  00043	3b 75 10	 cmp	 esi, DWORD PTR __Dest$[ebp]
  00046	75 f0		 jne	 SHORT $LL3@Uninit_mov

; 435  : 	_RERAISE;

  00048	6a 00		 push	 0
  0004a	6a 00		 push	 0
  0004c	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN41@Uninit_mov:
$LN4@Uninit_mov:

; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

  00051	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 438  : 	}

  00054	e8 00 00 00 00	 call	 __EH_epilog3
  00059	c3		 ret	 0
$LN39@Uninit_mov:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@U12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@U12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@U12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<ioPetEatInfoManager::RankMaterialEatInfo *,ioPetEatInfoManager::RankMaterialEatInfo *,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>,ioPetEatInfoManager::RankMaterialEatInfo>
PUBLIC	??$_Cons_val@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@URankMaterialEatInfo@ioPetEatInfoManager@@ABU34@@std@@YAXAAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@ABU23@@Z ; std::_Cons_val<std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>,ioPetEatInfoManager::RankMaterialEatInfo,ioPetEatInfoManager::RankMaterialEatInfo const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@URankMaterialEatInfo@ioPetEatInfoManager@@ABU34@@std@@YAXAAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@ABU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@URankMaterialEatInfo@ioPetEatInfoManager@@ABU34@@std@@YAXAAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@ABU23@@Z PROC ; std::_Cons_val<std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>,ioPetEatInfoManager::RankMaterialEatInfo,ioPetEatInfoManager::RankMaterialEatInfo const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  00006	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  00009	e8 00 00 00 00	 call	 ??$_Construct@URankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z ; std::_Construct<ioPetEatInfoManager::RankMaterialEatInfo,ioPetEatInfoManager::RankMaterialEatInfo const &>
  0000e	59		 pop	 ecx
  0000f	59		 pop	 ecx

; 281  : 	}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??$_Cons_val@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@URankMaterialEatInfo@ioPetEatInfoManager@@ABU34@@std@@YAXAAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@PAURankMaterialEatInfo@ioPetEatInfoManager@@ABU23@@Z ENDP ; std::_Cons_val<std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>,ioPetEatInfoManager::RankMaterialEatInfo,ioPetEatInfoManager::RankMaterialEatInfo const &>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@0AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@@Z ; std::_Destroy_range<std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy_range@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@0AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@0AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >, COMDAT

; 87   : 	{	// destroy [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0b		 jmp	 SHORT $LN28@Destroy_ra@2
$LL7@Destroy_ra@2:
  00009	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0000c	e8 00 00 00 00	 call	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
  00011	83 c6 14	 add	 esi, 20			; 00000014H
$LN28@Destroy_ra@2:
  00014	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00017	75 f0		 jne	 SHORT $LL7@Destroy_ra@2
  00019	5e		 pop	 esi

; 89   : 	}

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Destroy_range@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@0AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@@Z ; std::_Uninitialized_move<ioPetEatInfoManager::RankMaterialEatInfo *,ioPetEatInfoManager::RankMaterialEatInfo *,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@@Z
_TEXT	SEGMENT
__Cat$509902 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@@Z PROC ; std::_Uninitialized_move<ioPetEatInfoManager::RankMaterialEatInfo *,ioPetEatInfoManager::RankMaterialEatInfo *,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$509902[ebp]
  00007	6a 00		 push	 0
  00009	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000c	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00012	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00015	e8 00 00 00 00	 call	 ??$_Uninit_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@U12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioPetEatInfoManager::RankMaterialEatInfo *,ioPetEatInfoManager::RankMaterialEatInfo *,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>,ioPetEatInfoManager::RankMaterialEatInfo>
  0001a	83 c4 18	 add	 esp, 24			; 00000018H

; 472  : 	}

  0001d	c9		 leave
  0001e	c3		 ret	 0
??$_Uninitialized_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@@Z ENDP ; std::_Uninitialized_move<ioPetEatInfoManager::RankMaterialEatInfo *,ioPetEatInfoManager::RankMaterialEatInfo *,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@0@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@0@Z PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Destroy, COMDAT
; _this$ = ecx

; 1269 : 		{	// destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0b		 jmp	 SHORT $LN30@Destroy
$LL9@Destroy:
  00009	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0000c	e8 00 00 00 00	 call	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
  00011	83 c6 14	 add	 esi, 20			; 00000014H
$LN30@Destroy:
  00014	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00017	75 f0		 jne	 SHORT $LL9@Destroy
  00019	5e		 pop	 esi

; 1271 : 		}

  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
?_Destroy@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@0@Z ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEXXZ ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Tidy
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEXXZ PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 28		 je	 SHORT $LN31@Tidy@2

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	53		 push	 ebx
  00009	57		 push	 edi
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);

  00010	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
  00015	eb 0b		 jmp	 SHORT $LN35@Tidy@2
$LL12@Tidy@2:
  00017	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0001a	e8 00 00 00 00	 call	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
  0001f	83 c7 14	 add	 edi, 20			; 00000014H
$LN35@Tidy@2:
  00022	3b fb		 cmp	 edi, ebx
  00024	75 f1		 jne	 SHORT $LL12@Tidy@2

; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  00026	ff 36		 push	 DWORD PTR [esi]
  00028	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002d	59		 pop	 ecx
  0002e	5f		 pop	 edi
  0002f	5b		 pop	 ebx
$LN31@Tidy@2:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00030	33 c0		 xor	 eax, eax
  00032	89 06		 mov	 DWORD PTR [esi], eax

; 1310 : 		this->_Mylast = 0;

  00034	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1311 : 		this->_Myend = 0;

  00037	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0003a	5e		 pop	 esi

; 1312 : 		}

  0003b	c3		 ret	 0
?_Tidy@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEXXZ ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Tidy
_TEXT	ENDS
PUBLIC	??$_Umove@PAURankMaterialEatInfo@ioPetEatInfoManager@@@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU23@00@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Umove<ioPetEatInfoManager::RankMaterialEatInfo *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Umove@PAURankMaterialEatInfo@ioPetEatInfoManager@@@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU23@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAURankMaterialEatInfo@ioPetEatInfoManager@@@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU23@00@Z PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Umove<ioPetEatInfoManager::RankMaterialEatInfo *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@@Z ; std::_Uninitialized_move<ioPetEatInfoManager::RankMaterialEatInfo *,ioPetEatInfoManager::RankMaterialEatInfo *,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAURankMaterialEatInfo@ioPetEatInfoManager@@@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU23@00@Z ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Umove<ioPetEatInfoManager::RankMaterialEatInfo *>
_TEXT	ENDS
PUBLIC	??1?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE@XZ ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::~vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE@XZ PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::~vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEXXZ ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Tidy
??1?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::~vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >
_TEXT	ENDS
PUBLIC	?reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXI@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::reserve
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXI@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXI@Z$3
__ehfuncinfo$?reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Ptr$505668 = -24					; size = 4
$T510345 = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXI@Z PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	6a 0c		 push	 12			; 0000000cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXI@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx

; 747  : 		if (max_size() < _Count)

  0000e	81 7d 08 cc cc
	cc 0c		 cmp	 DWORD PTR __Count$[ebp], 214748364 ; 0cccccccH
  00015	76 0b		 jbe	 SHORT $LN5@reserve@2

; 748  : 			_Xlen();	// result too long

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN66@reserve@2:
$LN5@reserve@2:

; 749  : 		else if (capacity() < _Count)

  00022	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00025	2b 06		 sub	 eax, DWORD PTR [esi]
  00027	6a 14		 push	 20			; 00000014H
  00029	99		 cdq
  0002a	59		 pop	 ecx
  0002b	f7 f9		 idiv	 ecx
  0002d	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00030	0f 83 83 00 00
	00		 jae	 $LN3@reserve@2

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00036	6a 00		 push	 0
  00038	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  0003b	e8 00 00 00 00	 call	 ??$_Allocate@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@IPAU12@@Z ; std::_Allocate<ioPetEatInfoManager::RankMaterialEatInfo>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00040	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00042	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00046	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00049	52		 push	 edx
  0004a	89 45 e8	 mov	 DWORD PTR __Ptr$505668[ebp], eax
  0004d	ff 75 e8	 push	 DWORD PTR __Ptr$505668[ebp]
  00050	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00053	50		 push	 eax
  00054	51		 push	 ecx
  00055	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00AAV?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@0@@Z ; std::_Uninitialized_move<ioPetEatInfoManager::RankMaterialEatInfo *,ioPetEatInfoManager::RankMaterialEatInfo *,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >

; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  0005a	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  0005d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005f	83 c4 18	 add	 esp, 24			; 00000018H
  00062	8b c3		 mov	 eax, ebx
  00064	2b c1		 sub	 eax, ecx
  00066	6a 14		 push	 20			; 00000014H
  00068	99		 cdq
  00069	5f		 pop	 edi
  0006a	f7 ff		 idiv	 edi
  0006c	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  00070	8b f8		 mov	 edi, eax
  00072	85 c9		 test	 ecx, ecx
  00074	74 23		 je	 SHORT $LN58@reserve@2

; 761  : 			if (this->_Myfirst != 0)
; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);

  00076	89 4d ec	 mov	 DWORD PTR $T510345[ebp], ecx
  00079	3b cb		 cmp	 ecx, ebx
  0007b	74 14		 je	 SHORT $LN37@reserve@2
$LN39@reserve@2:
  0007d	8b 4d ec	 mov	 ecx, DWORD PTR $T510345[ebp]
  00080	83 c1 04	 add	 ecx, 4
  00083	e8 00 00 00 00	 call	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
  00088	83 45 ec 14	 add	 DWORD PTR $T510345[ebp], 20 ; 00000014H
  0008c	39 5d ec	 cmp	 DWORD PTR $T510345[ebp], ebx
  0008f	75 ec		 jne	 SHORT $LN39@reserve@2
$LN37@reserve@2:

; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00091	ff 36		 push	 DWORD PTR [esi]
  00093	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00098	59		 pop	 ecx
$LN58@reserve@2:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  00099	8b ce		 mov	 ecx, esi
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;
; 770  : 			this->_Mylast = _Ptr + _Size;

  000a1	6b ff 14	 imul	 edi, 20			; 00000014H
  000a4	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  000a7	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$505668[ebp]
  000aa	6b c0 14	 imul	 eax, 20			; 00000014H
  000ad	03 c1		 add	 eax, ecx
  000af	03 f9		 add	 edi, ecx
  000b1	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000b4	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 771  : 			this->_Myfirst = _Ptr;

  000b7	89 0e		 mov	 DWORD PTR [esi], ecx
$LN3@reserve@2:

; 772  : 			}
; 773  : 		}

  000b9	e8 00 00 00 00	 call	 __EH_epilog3
  000be	c2 04 00	 ret	 4
__catch$?reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXI@Z$0:

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

  000c1	ff 75 e8	 push	 DWORD PTR __Ptr$505668[ebp]
  000c4	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000c9	59		 pop	 ecx

; 757  : 			_RERAISE;

  000ca	6a 00		 push	 0
  000cc	6a 00		 push	 0
  000ce	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN67@reserve@2:
$LN65@reserve@2:
  000d3	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXI@Z ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::reserve
PUBLIC	?erase@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@0@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T510598 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$510498 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@0@Z PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00004	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __First_arg$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 4d 10	 cmp	 ecx, DWORD PTR __Last_arg$[ebp]
  00012	74 3a		 je	 SHORT $LN1@erase@2

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00017	53		 push	 ebx
  00018	57		 push	 edi
  00019	ff 75 10	 push	 DWORD PTR __Cat$510498[ebp]
  0001c	51		 push	 ecx
  0001d	50		 push	 eax
  0001e	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  00021	e8 00 00 00 00	 call	 ??$_Move@PAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@@std@@YAPAURankMaterialEatInfo@ioPetEatInfoManager@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioPetEatInfoManager::RankMaterialEatInfo *,ioPetEatInfoManager::RankMaterialEatInfo *>

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);

  00026	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  00029	8b d8		 mov	 ebx, eax
  0002b	83 c4 10	 add	 esp, 16			; 00000010H
  0002e	89 5d fc	 mov	 DWORD PTR $T510598[ebp], ebx
  00031	3b df		 cmp	 ebx, edi
  00033	74 14		 je	 SHORT $LN36@erase@2
$LL59@erase@2:
  00035	8b 4d fc	 mov	 ecx, DWORD PTR $T510598[ebp]
  00038	83 c1 04	 add	 ecx, 4
  0003b	e8 00 00 00 00	 call	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
  00040	83 45 fc 14	 add	 DWORD PTR $T510598[ebp], 20 ; 00000014H
  00044	39 7d fc	 cmp	 DWORD PTR $T510598[ebp], edi
  00047	75 ec		 jne	 SHORT $LL59@erase@2
$LN36@erase@2:

; 1211 : 			this->_Mylast = _Ptr;

  00049	5f		 pop	 edi
  0004a	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  0004d	5b		 pop	 ebx
$LN1@erase@2:

; 1212 : 			}
; 1213 : 		return (_First);

  0004e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00051	5e		 pop	 esi

; 1214 : 		}

  00052	c9		 leave
  00053	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@0@Z ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::erase
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEXI@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEXI@Z PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx
  0000d	57		 push	 edi
  0000e	99		 cdq
  0000f	6a 14		 push	 20			; 00000014H
  00011	5f		 pop	 edi
  00012	f7 ff		 idiv	 edi
  00014	8b f8		 mov	 edi, eax

; 1292 : 		if (max_size() - _Count < _Size)

  00016	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH
  0001b	2b 45 08	 sub	 eax, DWORD PTR __Count$[ebp]
  0001e	3b c7		 cmp	 eax, edi
  00020	73 0b		 jae	 SHORT $LN4@Reserve@2

; 1293 : 			_Xlen();

  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve@2:
$LN4@Reserve@2:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  0002d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00030	2b c1		 sub	 eax, ecx
  00032	6a 14		 push	 20			; 00000014H
  00034	99		 cdq
  00035	59		 pop	 ecx
  00036	f7 f9		 idiv	 ecx
  00038	03 7d 08	 add	 edi, DWORD PTR __Count$[ebp]
  0003b	3b f8		 cmp	 edi, eax
  0003d	76 10		 jbe	 SHORT $LN1@Reserve@2

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  0003f	57		 push	 edi
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IBEII@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Grow_to
  00047	50		 push	 eax
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXI@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::reserve
$LN1@Reserve@2:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1298 : 		}

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
$LN20@Reserve@2:
?_Reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEXI@Z ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Reserve
_TEXT	ENDS
PUBLIC	?push_back@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXABURankMaterialEatInfo@ioPetEatInfoManager@@@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::push_back
; Function compile flags: /Ogsp
;	COMDAT ?push_back@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXABURankMaterialEatInfo@ioPetEatInfoManager@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXABURankMaterialEatInfo@ioPetEatInfoManager@@@Z PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f9		 cmp	 edi, ecx
  0000f	73 33		 jae	 SHORT $LN4@push_back@2
  00011	8b 16		 mov	 edx, DWORD PTR [esi]
  00013	3b d7		 cmp	 edx, edi
  00015	77 2d		 ja	 SHORT $LN4@push_back@2

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	8b c7		 mov	 eax, edi
  00019	2b c2		 sub	 eax, edx
  0001b	6a 14		 push	 20			; 00000014H
  0001d	99		 cdq
  0001e	5f		 pop	 edi
  0001f	f7 ff		 idiv	 edi
  00021	8b f8		 mov	 edi, eax

; 980  : 			if (this->_Mylast == this->_Myend)

  00023	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00026	75 09		 jne	 SHORT $LN3@push_back@2

; 981  : 				_Reserve(1);

  00028	6a 01		 push	 1
  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?_Reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEXI@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Reserve
$LN3@push_back@2:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  00031	6b ff 14	 imul	 edi, 20			; 00000014H
  00034	03 3e		 add	 edi, DWORD PTR [esi]
  00036	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00039	57		 push	 edi
  0003a	ff 76 04	 push	 DWORD PTR [esi+4]
  0003d	e8 00 00 00 00	 call	 ??$construct@AAURankMaterialEatInfo@ioPetEatInfoManager@@@?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@QAEXPAURankMaterialEatInfo@ioPetEatInfoManager@@AAU23@@Z ; std::allocator<ioPetEatInfoManager::RankMaterialEatInfo>::construct<ioPetEatInfoManager::RankMaterialEatInfo &>

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00042	eb 19		 jmp	 SHORT $LN30@push_back@2
$LN4@push_back@2:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00044	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00047	75 09		 jne	 SHORT $LN1@push_back@2

; 991  : 				_Reserve(1);

  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?_Reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEXI@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Reserve
$LN1@push_back@2:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00052	57		 push	 edi
  00053	ff 76 04	 push	 DWORD PTR [esi+4]
  00056	e8 00 00 00 00	 call	 ??$_Construct@URankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@std@@YAXPAURankMaterialEatInfo@ioPetEatInfoManager@@ABU12@@Z ; std::_Construct<ioPetEatInfoManager::RankMaterialEatInfo,ioPetEatInfoManager::RankMaterialEatInfo const &>
  0005b	59		 pop	 ecx
  0005c	59		 pop	 ecx
$LN30@push_back@2:

; 996  : 			++this->_Mylast;

  0005d	83 46 04 14	 add	 DWORD PTR [esi+4], 20	; 00000014H
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?push_back@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXABURankMaterialEatInfo@ioPetEatInfoManager@@@Z ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::push_back
_TEXT	ENDS
PUBLIC	?clear@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXXZ ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T510740 = -4						; size = 4
?clear@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXXZ PROC ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T510740[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@0@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXXZ ENDP ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::clear
_TEXT	ENDS
PUBLIC	?ClearData@ioPetEatInfoManager@@QAEXXZ		; ioPetEatInfoManager::ClearData
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iopeteatinfomanager.cpp
;	COMDAT ?ClearData@ioPetEatInfoManager@@QAEXXZ
_TEXT	SEGMENT
$T510942 = -4						; size = 4
$T510862 = -4						; size = 4
?ClearData@ioPetEatInfoManager@@QAEXXZ PROC		; ioPetEatInfoManager::ClearData, COMDAT
; _this$ = ecx

; 26   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 27   : 	int nRankInfoSize = (int)m_RankMaterialEatInfo.size();

  00005	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b 06		 sub	 eax, DWORD PTR [esi]
  0000d	6a 14		 push	 20			; 00000014H
  0000f	99		 cdq
  00010	59		 pop	 ecx
  00011	f7 f9		 idiv	 ecx

; 28   : 	if ( nRankInfoSize > 0 )

  00013	85 c0		 test	 eax, eax
  00015	7e 24		 jle	 SHORT $LN1@ClearData

; 29   : 	{
; 30   : 		for (int i=0; i<nRankInfoSize; ++i)

  00017	53		 push	 ebx
  00018	57		 push	 edi
  00019	33 ff		 xor	 edi, edi
  0001b	8b d8		 mov	 ebx, eax
$LL3@ClearData:

; 31   : 			m_RankMaterialEatInfo[i].m_MaterialInfoList.clear();

  0001d	8b 06		 mov	 eax, DWORD PTR [esi]
  0001f	8d 4c 07 04	 lea	 ecx, DWORD PTR [edi+eax+4]
  00023	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	50		 push	 eax
  00029	52		 push	 edx
  0002a	8d 45 fc	 lea	 eax, DWORD PTR $T510862[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase
  00033	83 c7 14	 add	 edi, 20			; 00000014H
  00036	4b		 dec	 ebx
  00037	75 e4		 jne	 SHORT $LL3@ClearData
  00039	5f		 pop	 edi
  0003a	5b		 pop	 ebx
$LN1@ClearData:

; 32   : 	}
; 33   : 	m_RankMaterialEatInfo.clear();

  0003b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00040	50		 push	 eax
  00041	51		 push	 ecx
  00042	8d 45 fc	 lea	 eax, DWORD PTR $T510942[ebp]
  00045	50		 push	 eax
  00046	8b ce		 mov	 ecx, esi
  00048	e8 00 00 00 00	 call	 ?erase@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@0@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::erase
  0004d	5e		 pop	 esi

; 34   : }

  0004e	c9		 leave
  0004f	c3		 ret	 0
?ClearData@ioPetEatInfoManager@@QAEXXZ ENDP		; ioPetEatInfoManager::ClearData
_TEXT	ENDS
PUBLIC	_rkLoader$GSCopy$
PUBLIC	?LoadPetEatInfo@ioPetEatInfoManager@@IAEXAAVioINILoader@@@Z ; ioPetEatInfoManager::LoadPetEatInfo
EXTRN	__imp__wsprintfA:PROC
EXTRN	__EH_epilog3_GS:PROC
EXTRN	__EH_prolog3_GS:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$?LoadPetEatInfo@ioPetEatInfoManager@@IAEXAAVioINILoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPetEatInfo@ioPetEatInfoManager@@IAEXAAVioINILoader@@@Z$0
__ehfuncinfo$?LoadPetEatInfo@ioPetEatInfoManager@@IAEXAAVioINILoader@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadPetEatInfo@ioPetEatInfoManager@@IAEXAAVioINILoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iopeteatinfomanager.cpp
xdata$x	ENDS
;	COMDAT ?LoadPetEatInfo@ioPetEatInfoManager@@IAEXAAVioINILoader@@@Z
_TEXT	SEGMENT
_sRankMaterialEatInfo$505123 = -380			; size = 20
tv3632 = -360						; size = 4
tv3532 = -356						; size = 4
_nMaterialCnt$505587 = -352				; size = 4
tv1011 = -348						; size = 4
$T511277 = -344						; size = 4
_nLvInfo$505430 = -344					; size = 4
_rkLoader$GSCopy$ = -340				; size = 4
tv4192 = -336						; size = 4
_nMaxInfo$ = -336					; size = 4
_szBuf$ = -332						; size = 260
___encStr$505438 = -72					; size = 22
__k$511119 = -44					; size = 18
___encStr$505281 = -44					; size = 21
___encStr$505127 = -40					; size = 16
__t$510985 = -36					; size = 13
__$EHRec$ = -12						; size = 12
_rkLoader$ = 8						; size = 4
?LoadPetEatInfo@ioPetEatInfoManager@@IAEXAAVioINILoader@@@Z PROC ; ioPetEatInfoManager::LoadPetEatInfo, COMDAT
; _this$ = ecx

; 48   : {

  00000	68 70 01 00 00	 push	 368			; 00000170H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?LoadPetEatInfo@ioPetEatInfoManager@@IAEXAAVioINILoader@@@Z
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000f	8b 75 08	 mov	 esi, DWORD PTR _rkLoader$[ebp]

; 49   : 	char szBuf[MAX_PATH];
; 50   : 
; 51   : 	rkLoader.SetTitle_e( "pet_eat_info" );

  00012	33 db		 xor	 ebx, ebx
  00014	6a 03		 push	 3
  00016	8b f9		 mov	 edi, ecx

; 72   : 		}
; 73   : 
; 74   : 		m_RankMaterialEatInfo.push_back( sRankMaterialEatInfo );

  00018	89 b5 ac fe ff
	ff		 mov	 DWORD PTR _rkLoader$GSCopy$[ebp], esi
  0001e	c7 45 dc 9d 89
	9f b5		 mov	 DWORD PTR __t$510985[ebp], -1247835747 ; b59f899dH
  00025	c7 45 e0 88 8d
	9f b5		 mov	 DWORD PTR __t$510985[ebp+4], -1247834744 ; b59f8d88H
  0002c	c7 45 e4 84 82
	8d 85		 mov	 DWORD PTR __t$510985[ebp+8], -2054323580 ; 858d8284H
  00033	8d 45 dc	 lea	 eax, DWORD PTR __t$510985[ebp]
  00036	88 5d e8	 mov	 BYTE PTR __t$510985[ebp+12], bl
  00039	59		 pop	 ecx
$LL410@LoadPetEat:

; 49   : 	char szBuf[MAX_PATH];
; 50   : 
; 51   : 	rkLoader.SetTitle_e( "pet_eat_info" );

  0003a	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00040	83 c0 04	 add	 eax, 4
  00043	49		 dec	 ecx
  00044	75 f4		 jne	 SHORT $LL410@LoadPetEat
  00046	8d 45 dc	 lea	 eax, DWORD PTR __t$510985[ebp]
  00049	50		 push	 eax
  0004a	8b ce		 mov	 ecx, esi
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z
  00052	6a 04		 push	 4

; 52   : 
; 53   : 	int nMaxInfo = rkLoader.LoadInt_e( "max_rank_info_cnt", 0 );

  00054	c7 45 d4 80 8d
	93 b5		 mov	 DWORD PTR __k$511119[ebp], -1248621184 ; b5938d80H
  0005b	c7 45 d8 9f 8d
	85 81		 mov	 DWORD PTR __k$511119[ebp+4], -2121953889 ; 81858d9fH
  00062	c7 45 dc b2 85
	85 8c		 mov	 DWORD PTR __k$511119[ebp+8], -1937406542 ; 8c8585b2H
  00069	c7 45 e0 82 b3
	88 84		 mov	 DWORD PTR __k$511119[ebp+12], -2071415934 ; 8488b382H
  00070	8d 45 d4	 lea	 eax, DWORD PTR __k$511119[ebp]
  00073	66 c7 45 e4 99
	00		 mov	 WORD PTR __k$511119[ebp+16], 153 ; 00000099H
  00079	59		 pop	 ecx
$LL516@LoadPetEat:
  0007a	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00080	83 c0 04	 add	 eax, 4
  00083	49		 dec	 ecx
  00084	75 f4		 jne	 SHORT $LL516@LoadPetEat
  00086	80 75 e4 ed	 xor	 BYTE PTR __k$511119[ebp+16], -19 ; ffffffedH
  0008a	53		 push	 ebx
  0008b	8d 45 d4	 lea	 eax, DWORD PTR __k$511119[ebp]
  0008e	8b ce		 mov	 ecx, esi
  00090	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z
  00096	50		 push	 eax
  00097	ff d6		 call	 esi

; 54   : 	m_RankMaterialEatInfo.clear();

  00099	83 c7 04	 add	 edi, 4
  0009c	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0009e	89 85 b0 fe ff
	ff		 mov	 DWORD PTR _nMaxInfo$[ebp], eax
  000a4	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a7	50		 push	 eax
  000a8	51		 push	 ecx
  000a9	8d 85 a8 fe ff
	ff		 lea	 eax, DWORD PTR $T511277[ebp]
  000af	50		 push	 eax
  000b0	8b cf		 mov	 ecx, edi
  000b2	89 bd 9c fe ff
	ff		 mov	 DWORD PTR tv3532[ebp], edi
  000b8	e8 00 00 00 00	 call	 ?erase@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@@2@0@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::erase

; 55   : 	m_RankMaterialEatInfo.reserve( nMaxInfo );

  000bd	ff b5 b0 fe ff
	ff		 push	 DWORD PTR _nMaxInfo$[ebp]
  000c3	8b cf		 mov	 ecx, edi
  000c5	e8 00 00 00 00	 call	 ?reserve@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXI@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::reserve

; 56   : 
; 57   : 	for ( int i=0; i<nMaxInfo; ++i )

  000ca	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR _nMaxInfo$[ebp]
  000d0	3b c3		 cmp	 eax, ebx
  000d2	0f 8e d8 01 00
	00		 jle	 $LN301@LoadPetEat

; 52   : 
; 53   : 	int nMaxInfo = rkLoader.LoadInt_e( "max_rank_info_cnt", 0 );

  000d8	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__wsprintfA
  000de	c7 85 b0 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv4192[ebp], 1
  000e8	89 85 a4 fe ff
	ff		 mov	 DWORD PTR tv1011[ebp], eax
$LL303@LoadPetEat:

; 58   : 	{
; 59   : 		RankMaterialEatInfo sRankMaterialEatInfo;

  000ee	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR _sRankMaterialEatInfo$505123[ebp]
  000f4	e8 00 00 00 00	 call	 ??0RankMaterialEatInfo@ioPetEatInfoManager@@QAE@XZ ; ioPetEatInfoManager::RankMaterialEatInfo::RankMaterialEatInfo
  000f9	6a 03		 push	 3
  000fb	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx

; 60   : 
; 61   : 		wsprintf_e( szBuf, "eat_info%d_rank", i+1 );

  000fe	c7 45 d8 88 8d
	9f b5		 mov	 DWORD PTR ___encStr$505127[ebp], -1247834744 ; b59f8d88H
  00105	c7 45 dc 84 82
	8d 85		 mov	 DWORD PTR ___encStr$505127[ebp+4], -2054323580 ; 858d8284H
  0010c	c7 45 e0 c8 88
	b4 98		 mov	 DWORD PTR ___encStr$505127[ebp+8], -1732998968 ; 98b488c8H
  00113	8d 45 d8	 lea	 eax, DWORD PTR ___encStr$505127[ebp]
  00116	c7 45 e4 8c 82
	80 00		 mov	 DWORD PTR ___encStr$505127[ebp+12], 8422028 ; 0080828cH
  0011d	59		 pop	 ecx
$LL542@LoadPetEat:
  0011e	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00124	83 c0 04	 add	 eax, 4
  00127	49		 dec	 ecx
  00128	75 f4		 jne	 SHORT $LL542@LoadPetEat
  0012a	6a 0c		 push	 12			; 0000000cH
  0012c	58		 pop	 eax
$LL539@LoadPetEat:
  0012d	8b c8		 mov	 ecx, eax
  0012f	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00135	79 05		 jns	 SHORT $LN593@LoadPetEat
  00137	49		 dec	 ecx
  00138	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0013b	41		 inc	 ecx
$LN593@LoadPetEat:
  0013c	b2 ed		 mov	 dl, -19			; ffffffedH
  0013e	2a d1		 sub	 dl, cl
  00140	30 54 05 d8	 xor	 BYTE PTR ___encStr$505127[ebp+eax], dl
  00144	40		 inc	 eax
  00145	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  00148	7c e3		 jl	 SHORT $LL539@LoadPetEat
  0014a	ff b5 b0 fe ff
	ff		 push	 DWORD PTR tv4192[ebp]
  00150	8d 45 d8	 lea	 eax, DWORD PTR ___encStr$505127[ebp]
  00153	50		 push	 eax
  00154	8d 85 b4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0015a	50		 push	 eax
  0015b	ff d7		 call	 edi

; 62   : 		sRankMaterialEatInfo.m_nRankType = (PetRankType)rkLoader.LoadInt( szBuf, PRT_NONE );

  0015d	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  00163	83 c4 0c	 add	 esp, 12			; 0000000cH
  00166	53		 push	 ebx
  00167	8d 85 b4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0016d	50		 push	 eax
  0016e	ff d6		 call	 esi
  00170	6a 05		 push	 5
  00172	89 85 84 fe ff
	ff		 mov	 DWORD PTR _sRankMaterialEatInfo$505123[ebp], eax

; 63   : 		
; 64   : 		wsprintf_e( szBuf, "eat_info%d_max_level", i+1 );

  00178	c7 45 d4 88 8d
	9f b5		 mov	 DWORD PTR ___encStr$505281[ebp], -1247834744 ; b59f8d88H
  0017f	c7 45 d8 84 82
	8d 85		 mov	 DWORD PTR ___encStr$505281[ebp+4], -2054323580 ; 858d8284H
  00186	c7 45 dc c8 88
	b4 87		 mov	 DWORD PTR ___encStr$505281[ebp+8], -2018211640 ; 87b488c8H
  0018d	c7 45 e0 8c 94
	b4 86		 mov	 DWORD PTR ___encStr$505281[ebp+12], -2034985844 ; 86b4948cH
  00194	c7 45 e4 88 9a
	8e 86		 mov	 DWORD PTR ___encStr$505281[ebp+16], -2037474680 ; 868e9a88H
  0019b	8d 45 d4	 lea	 eax, DWORD PTR ___encStr$505281[ebp]
  0019e	88 5d e8	 mov	 BYTE PTR ___encStr$505281[ebp+20], bl
  001a1	59		 pop	 ecx
$LL550@LoadPetEat:
  001a2	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001a8	83 c0 04	 add	 eax, 4
  001ab	49		 dec	 ecx
  001ac	75 f4		 jne	 SHORT $LL550@LoadPetEat
  001ae	ff b5 b0 fe ff
	ff		 push	 DWORD PTR tv4192[ebp]
  001b4	8d 45 d4	 lea	 eax, DWORD PTR ___encStr$505281[ebp]
  001b7	50		 push	 eax
  001b8	8d 85 b4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  001be	50		 push	 eax
  001bf	ff d7		 call	 edi

; 65   : 		int nLvInfo = rkLoader.LoadInt( szBuf, 0 );

  001c1	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  001c7	83 c4 0c	 add	 esp, 12			; 0000000cH
  001ca	53		 push	 ebx
  001cb	8d 85 b4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  001d1	50		 push	 eax
  001d2	ff d6		 call	 esi

; 66   : 		for ( int j=0; j<nLvInfo; ++j )

  001d4	33 c9		 xor	 ecx, ecx
  001d6	89 85 a8 fe ff
	ff		 mov	 DWORD PTR _nLvInfo$505430[ebp], eax
  001dc	3b c3		 cmp	 eax, ebx
  001de	0f 8e 99 00 00
	00		 jle	 $LN100@LoadPetEat
$LL102@LoadPetEat:

; 63   : 		
; 64   : 		wsprintf_e( szBuf, "eat_info%d_max_level", i+1 );

  001e4	6a 05		 push	 5

; 67   : 		{
; 68   : 			wsprintf_e( szBuf, "eat_info%d_material%d", i+1, j+1 );

  001e6	c7 45 b8 88 8d
	9f b5		 mov	 DWORD PTR ___encStr$505438[ebp], -1247834744 ; b59f8d88H
  001ed	c7 45 bc 84 82
	8d 85		 mov	 DWORD PTR ___encStr$505438[ebp+4], -2054323580 ; 858d8284H
  001f4	c7 45 c0 c8 88
	b4 87		 mov	 DWORD PTR ___encStr$505438[ebp+8], -2018211640 ; 87b488c8H
  001fb	c7 45 c4 8c 98
	8e 98		 mov	 DWORD PTR ___encStr$505438[ebp+12], -1735485300 ; 988e988cH
  00202	c7 45 c8 84 8d
	87 cf		 mov	 DWORD PTR ___encStr$505438[ebp+16], -813199996 ; cf878d84H
  00209	8d 45 b8	 lea	 eax, DWORD PTR ___encStr$505438[ebp]
  0020c	66 c7 45 cc 89
	00		 mov	 WORD PTR ___encStr$505438[ebp+20], 137 ; 00000089H
  00212	5a		 pop	 edx
$LL558@LoadPetEat:
  00213	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00219	83 c0 04	 add	 eax, 4
  0021c	4a		 dec	 edx
  0021d	75 f4		 jne	 SHORT $LL558@LoadPetEat
  0021f	80 75 cc ed	 xor	 BYTE PTR ___encStr$505438[ebp+20], -19 ; ffffffedH
  00223	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00226	50		 push	 eax
  00227	ff b5 b0 fe ff
	ff		 push	 DWORD PTR tv4192[ebp]
  0022d	89 85 98 fe ff
	ff		 mov	 DWORD PTR tv3632[ebp], eax
  00233	8d 45 b8	 lea	 eax, DWORD PTR ___encStr$505438[ebp]
  00236	50		 push	 eax
  00237	8d 85 b4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0023d	50		 push	 eax
  0023e	ff d7		 call	 edi

; 69   : 			int nMaterialCnt = rkLoader.LoadInt( szBuf, 0 );

  00240	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  00246	83 c4 10	 add	 esp, 16			; 00000010H
  00249	53		 push	 ebx
  0024a	8d 85 b4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00250	50		 push	 eax
  00251	ff d6		 call	 esi
  00253	89 85 a0 fe ff
	ff		 mov	 DWORD PTR _nMaterialCnt$505587[ebp], eax

; 70   : 			
; 71   : 			sRankMaterialEatInfo.m_MaterialInfoList.push_back( nMaterialCnt );

  00259	8d 85 a0 fe ff
	ff		 lea	 eax, DWORD PTR _nMaterialCnt$505587[ebp]
  0025f	50		 push	 eax
  00260	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR _sRankMaterialEatInfo$505123[ebp+4]
  00266	e8 00 00 00 00	 call	 ?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z ; std::vector<int,std::allocator<int> >::push_back
  0026b	8b 8d 98 fe ff
	ff		 mov	 ecx, DWORD PTR tv3632[ebp]
  00271	3b 8d a8 fe ff
	ff		 cmp	 ecx, DWORD PTR _nLvInfo$505430[ebp]
  00277	0f 8c 67 ff ff
	ff		 jl	 $LL102@LoadPetEat
$LN100@LoadPetEat:

; 72   : 		}
; 73   : 
; 74   : 		m_RankMaterialEatInfo.push_back( sRankMaterialEatInfo );

  0027d	8b 8d 9c fe ff
	ff		 mov	 ecx, DWORD PTR tv3532[ebp]
  00283	8d 85 84 fe ff
	ff		 lea	 eax, DWORD PTR _sRankMaterialEatInfo$505123[ebp]
  00289	50		 push	 eax
  0028a	e8 00 00 00 00	 call	 ?push_back@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAEXABURankMaterialEatInfo@ioPetEatInfoManager@@@Z ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::push_back

; 75   : 	}

  0028f	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00293	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR _sRankMaterialEatInfo$505123[ebp+4]
  00299	e8 00 00 00 00	 call	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
  0029e	ff 85 b0 fe ff
	ff		 inc	 DWORD PTR tv4192[ebp]
  002a4	ff 8d a4 fe ff
	ff		 dec	 DWORD PTR tv1011[ebp]
  002aa	0f 85 3e fe ff
	ff		 jne	 $LL303@LoadPetEat
$LN301@LoadPetEat:

; 76   : }

  002b0	e8 00 00 00 00	 call	 __EH_epilog3_GS
  002b5	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadPetEatInfo@ioPetEatInfoManager@@IAEXAAVioINILoader@@@Z$0:
  00000	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR _sRankMaterialEatInfo$505123[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1RankMaterialEatInfo@ioPetEatInfoManager@@QAE@XZ
__ehhandler$?LoadPetEatInfo@ioPetEatInfoManager@@IAEXAAVioINILoader@@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 80 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-384]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadPetEatInfo@ioPetEatInfoManager@@IAEXAAVioINILoader@@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadPetEatInfo@ioPetEatInfoManager@@IAEXAAVioINILoader@@@Z ENDP ; ioPetEatInfoManager::LoadPetEatInfo
PUBLIC	??_7ioPetEatInfoManager@@6B@			; ioPetEatInfoManager::`vftable'
PUBLIC	??0ioPetEatInfoManager@@QAE@XZ			; ioPetEatInfoManager::ioPetEatInfoManager
PUBLIC	??_R4ioPetEatInfoManager@@6B@			; ioPetEatInfoManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioPetEatInfoManager@@@8			; ioPetEatInfoManager `RTTI Type Descriptor'
PUBLIC	??_R3ioPetEatInfoManager@@8			; ioPetEatInfoManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioPetEatInfoManager@@8			; ioPetEatInfoManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioPetEatInfoManager@@8		; ioPetEatInfoManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@?$Singleton@VioPetEatInfoManager@@@@8 ; Singleton<ioPetEatInfoManager>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AV?$Singleton@VioPetEatInfoManager@@@@@8	; Singleton<ioPetEatInfoManager> `RTTI Type Descriptor'
PUBLIC	??_R3?$Singleton@VioPetEatInfoManager@@@@8	; Singleton<ioPetEatInfoManager>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$Singleton@VioPetEatInfoManager@@@@8	; Singleton<ioPetEatInfoManager>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$Singleton@VioPetEatInfoManager@@@@8 ; Singleton<ioPetEatInfoManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_EioPetEatInfoManager@@UAEPAXI@Z:PROC		; ioPetEatInfoManager::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$Singleton@VioPetEatInfoManager@@@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
rdata$r	SEGMENT
??_R1A@?0A@EA@?$Singleton@VioPetEatInfoManager@@@@8 DD FLAT:??_R0?AV?$Singleton@VioPetEatInfoManager@@@@@8 ; Singleton<ioPetEatInfoManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioPetEatInfoManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$Singleton@VioPetEatInfoManager@@@@8
rdata$r	SEGMENT
??_R2?$Singleton@VioPetEatInfoManager@@@@8 DD FLAT:??_R1A@?0A@EA@?$Singleton@VioPetEatInfoManager@@@@8 ; Singleton<ioPetEatInfoManager>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$Singleton@VioPetEatInfoManager@@@@8
rdata$r	SEGMENT
??_R3?$Singleton@VioPetEatInfoManager@@@@8 DD 00H	; Singleton<ioPetEatInfoManager>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$Singleton@VioPetEatInfoManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$Singleton@VioPetEatInfoManager@@@@@8
_DATA	SEGMENT
??_R0?AV?$Singleton@VioPetEatInfoManager@@@@@8 DD FLAT:??_7type_info@@6B@ ; Singleton<ioPetEatInfoManager> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$Singleton@VioPetEatInfoManager@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@?$Singleton@VioPetEatInfoManager@@@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$Singleton@VioPetEatInfoManager@@@@8 DD FLAT:??_R0?AV?$Singleton@VioPetEatInfoManager@@@@@8 ; Singleton<ioPetEatInfoManager>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioPetEatInfoManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioPetEatInfoManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioPetEatInfoManager@@8 DD FLAT:??_R0?AVioPetEatInfoManager@@@8 ; ioPetEatInfoManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioPetEatInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R2ioPetEatInfoManager@@8
rdata$r	SEGMENT
??_R2ioPetEatInfoManager@@8 DD FLAT:??_R1A@?0A@EA@ioPetEatInfoManager@@8 ; ioPetEatInfoManager::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@?$Singleton@VioPetEatInfoManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R3ioPetEatInfoManager@@8
rdata$r	SEGMENT
??_R3ioPetEatInfoManager@@8 DD 00H			; ioPetEatInfoManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioPetEatInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioPetEatInfoManager@@@8
_DATA	SEGMENT
??_R0?AVioPetEatInfoManager@@@8 DD FLAT:??_7type_info@@6B@ ; ioPetEatInfoManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioPetEatInfoManager@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioPetEatInfoManager@@6B@
rdata$r	SEGMENT
??_R4ioPetEatInfoManager@@6B@ DD 00H			; ioPetEatInfoManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioPetEatInfoManager@@@8
	DD	FLAT:??_R3ioPetEatInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_7ioPetEatInfoManager@@6B@
CONST	SEGMENT
??_7ioPetEatInfoManager@@6B@ DD FLAT:??_R4ioPetEatInfoManager@@6B@ ; ioPetEatInfoManager::`vftable'
	DD	FLAT:??_EioPetEatInfoManager@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ioPetEatInfoManager@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioPetEatInfoManager@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ioPetEatInfoManager@@QAE@XZ$1
__ehfuncinfo$??0ioPetEatInfoManager@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0ioPetEatInfoManager@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iopeteatinfomanager.cpp
xdata$x	ENDS
;	COMDAT ??0ioPetEatInfoManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ioPetEatInfoManager@@QAE@XZ PROC			; ioPetEatInfoManager::ioPetEatInfoManager, COMDAT
; _this$ = ecx

; 9    : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioPetEatInfoManager@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	8b c6		 mov	 eax, esi
  00013	a3 00 00 00 00	 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioPetEatInfoManager@@@@1PAVioPetEatInfoManager@@A, eax ; Singleton<ioPetEatInfoManager>::ms_Singleton
  00018	33 c0		 xor	 eax, eax
  0001a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioPetEatInfoManager@@6B@
  00020	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00023	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00026	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00029	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  0002c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 10   : 	ClearData();

  00030	e8 00 00 00 00	 call	 ?ClearData@ioPetEatInfoManager@@QAEXXZ ; ioPetEatInfoManager::ClearData

; 11   : }

  00035	8b c6		 mov	 eax, esi
  00037	e8 00 00 00 00	 call	 __EH_epilog3
  0003c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioPetEatInfoManager@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioPetEatInfoManager@@@@QAE@XZ ; Singleton<ioPetEatInfoManager>::~Singleton<ioPetEatInfoManager>
__unwindfunclet$??0ioPetEatInfoManager@@QAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 04	 add	 ecx, 4
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE@XZ ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::~vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >
__ehhandler$??0ioPetEatInfoManager@@QAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioPetEatInfoManager@@QAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioPetEatInfoManager@@QAE@XZ ENDP			; ioPetEatInfoManager::ioPetEatInfoManager
PUBLIC	??1ioPetEatInfoManager@@UAE@XZ			; ioPetEatInfoManager::~ioPetEatInfoManager
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
xdata$x	SEGMENT
__unwindtable$??1ioPetEatInfoManager@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioPetEatInfoManager@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ioPetEatInfoManager@@UAE@XZ$1
__ehfuncinfo$??1ioPetEatInfoManager@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1ioPetEatInfoManager@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iopeteatinfomanager.cpp
xdata$x	ENDS
;	COMDAT ??1ioPetEatInfoManager@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioPetEatInfoManager@@UAE@XZ PROC			; ioPetEatInfoManager::~ioPetEatInfoManager, COMDAT
; _this$ = ecx

; 14   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioPetEatInfoManager@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioPetEatInfoManager@@6B@
  00017	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 15   : 	ClearData();

  0001e	e8 00 00 00 00	 call	 ?ClearData@ioPetEatInfoManager@@QAEXXZ ; ioPetEatInfoManager::ClearData

; 16   : }

  00023	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00026	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0002a	e8 00 00 00 00	 call	 ?_Tidy@?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@IAEXXZ ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::_Tidy
  0002f	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioPetEatInfoManager@@@@1PAVioPetEatInfoManager@@A, 0 ; Singleton<ioPetEatInfoManager>::ms_Singleton
  00036	e8 00 00 00 00	 call	 __EH_epilog3
  0003b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioPetEatInfoManager@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioPetEatInfoManager@@@@QAE@XZ ; Singleton<ioPetEatInfoManager>::~Singleton<ioPetEatInfoManager>
__unwindfunclet$??1ioPetEatInfoManager@@UAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 04	 add	 ecx, 4
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@URankMaterialEatInfo@ioPetEatInfoManager@@V?$allocator@URankMaterialEatInfo@ioPetEatInfoManager@@@std@@@std@@QAE@XZ ; std::vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >::~vector<ioPetEatInfoManager::RankMaterialEatInfo,std::allocator<ioPetEatInfoManager::RankMaterialEatInfo> >
__ehhandler$??1ioPetEatInfoManager@@UAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioPetEatInfoManager@@UAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioPetEatInfoManager@@UAE@XZ ENDP			; ioPetEatInfoManager::~ioPetEatInfoManager
PUBLIC	?LoadProperty@ioPetEatInfoManager@@QAEXXZ	; ioPetEatInfoManager::LoadProperty
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadProperty@ioPetEatInfoManager@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadProperty@ioPetEatInfoManager@@QAEXXZ$0
__ehfuncinfo$?LoadProperty@ioPetEatInfoManager@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadProperty@ioPetEatInfoManager@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?LoadProperty@ioPetEatInfoManager@@QAEXXZ
_TEXT	SEGMENT
_rkLoader$ = -928					; size = 912
__$EHRec$ = -12						; size = 12
?LoadProperty@ioPetEatInfoManager@@QAEXXZ PROC		; ioPetEatInfoManager::LoadProperty, COMDAT
; _this$ = ecx

; 38   : {	

  00000	68 94 03 00 00	 push	 916			; 00000394H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?LoadProperty@ioPetEatInfoManager@@QAEXXZ
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS

; 39   : 	ioINILoader_e rkLoader( "config/sp2_pet_eat_info.ini" );

  0000f	6a 06		 push	 6
  00011	8b f1		 mov	 esi, ecx
  00013	c7 45 b0 8e 83
	85 8c		 mov	 DWORD PTR _rkLoader$[ebp+848], -1937407090 ; 8c85838eH
  0001a	c7 45 b4 84 8b
	c4 99		 mov	 DWORD PTR _rkLoader$[ebp+852], -1715172476 ; 99c48b84H
  00021	c7 45 b8 9d de
	b4 9a		 mov	 DWORD PTR _rkLoader$[ebp+856], -1699422563 ; 9ab4de9dH
  00028	c7 45 bc 88 98
	b4 8f		 mov	 DWORD PTR _rkLoader$[ebp+860], -1883989880 ; 8fb49888H
  0002f	c7 45 c0 8c 98
	b4 83		 mov	 DWORD PTR _rkLoader$[ebp+864], -2085316468 ; 83b4988cH
  00036	c7 45 c4 83 8a
	84 c4		 mov	 DWORD PTR _rkLoader$[ebp+868], -997946749 ; c4848a83H
  0003d	8d 45 b0	 lea	 eax, DWORD PTR _rkLoader$[ebp+848]
  00040	c7 45 c8 84 82
	82 00		 mov	 DWORD PTR _rkLoader$[ebp+872], 8553092 ; 00828284H
  00047	59		 pop	 ecx
$LL110@LoadProper:
  00048	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0004e	83 c0 04	 add	 eax, 4
  00051	49		 dec	 ecx
  00052	75 f4		 jne	 SHORT $LL110@LoadProper
  00054	6a 18		 push	 24			; 00000018H
  00056	58		 pop	 eax
$LL107@LoadProper:
  00057	8b c8		 mov	 ecx, eax
  00059	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0005f	79 05		 jns	 SHORT $LN121@LoadProper
  00061	49		 dec	 ecx
  00062	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00065	41		 inc	 ecx
$LN121@LoadProper:
  00066	b2 ed		 mov	 dl, -19			; ffffffedH
  00068	2a d1		 sub	 dl, cl
  0006a	30 54 05 b0	 xor	 BYTE PTR _rkLoader$[ebp+eax+848], dl
  0006e	40		 inc	 eax
  0006f	83 f8 1b	 cmp	 eax, 27			; 0000001bH
  00072	7c e3		 jl	 SHORT $LL107@LoadProper
  00074	6a 01		 push	 1
  00076	8d 45 b0	 lea	 eax, DWORD PTR _rkLoader$[ebp+848]
  00079	50		 push	 eax
  0007a	8d 8d 60 fc ff
	ff		 lea	 ecx, DWORD PTR _rkLoader$[ebp]
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@PBD_N@Z
  00086	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 40   : 
; 41   : 	LoadPetEatInfo( rkLoader );

  0008a	8d 85 60 fc ff
	ff		 lea	 eax, DWORD PTR _rkLoader$[ebp]
  00090	50		 push	 eax
  00091	8b ce		 mov	 ecx, esi
  00093	e8 00 00 00 00	 call	 ?LoadPetEatInfo@ioPetEatInfoManager@@IAEXAAVioINILoader@@@Z ; ioPetEatInfoManager::LoadPetEatInfo

; 42   : }

  00098	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0009c	8d 8d 60 fc ff
	ff		 lea	 ecx, DWORD PTR _rkLoader$[ebp]
  000a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
  000a8	e8 00 00 00 00	 call	 __EH_epilog3_GS
  000ad	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadProperty@ioPetEatInfoManager@@QAEXXZ$0:
  00000	8d 8d 60 fc ff
	ff		 lea	 ecx, DWORD PTR _rkLoader$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1ioINILoader_e@@QAE@XZ
__ehhandler$?LoadProperty@ioPetEatInfoManager@@QAEXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 5c fc ff
	ff		 mov	 ecx, DWORD PTR [edx-932]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadProperty@ioPetEatInfoManager@@QAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadProperty@ioPetEatInfoManager@@QAEXXZ ENDP		; ioPetEatInfoManager::LoadProperty
; Function compile flags: /Ogsp
;	COMDAT ??_GioPetEatInfoManager@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioPetEatInfoManager@@UAEPAXI@Z PROC			; ioPetEatInfoManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioPetEatInfoManager@@UAE@XZ ; ioPetEatInfoManager::~ioPetEatInfoManager
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@3
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@3:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioPetEatInfoManager@@UAEPAXI@Z ENDP			; ioPetEatInfoManager::`scalar deleting destructor'
_TEXT	ENDS
END
