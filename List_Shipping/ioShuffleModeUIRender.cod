; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioShuffleModeUIRender.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?return1@@YAIXZ					; return1
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
;	COMDAT ?return1@@YAIXZ
_TEXT	SEGMENT
?return1@@YAIXZ PROC					; return1, COMDAT

; 17   : 	__forceinline unsigned int return1() { __asm mov eax, 1 };

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?return1@@YAIXZ ENDP					; return1
_TEXT	ENDS
PUBLIC	?return40@@YAIXZ				; return40
; Function compile flags: /Ogsp
;	COMDAT ?return40@@YAIXZ
_TEXT	SEGMENT
?return40@@YAIXZ PROC					; return40, COMDAT

; 22   : 	__forceinline unsigned int return40() { __asm mov eax, 40 };

  00000	b8 28 00 00 00	 mov	 eax, 40			; 00000028H
  00005	c3		 ret	 0
?return40@@YAIXZ ENDP					; return40
_TEXT	ENDS
PUBLIC	?IsOwnerChar@ioBaseChar@@QBE_NXZ		; ioBaseChar::IsOwnerChar
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iobasechar.h
;	COMDAT ?IsOwnerChar@ioBaseChar@@QBE_NXZ
_TEXT	SEGMENT
?IsOwnerChar@ioBaseChar@@QBE_NXZ PROC			; ioBaseChar::IsOwnerChar, COMDAT
; _this$ = ecx

; 1467 : 	inline bool IsOwnerChar() const { return m_bOwnerChar; }

  00000	8a 81 84 13 00
	00		 mov	 al, BYTE PTR [ecx+4996]
  00006	c3		 ret	 0
?IsOwnerChar@ioBaseChar@@QBE_NXZ ENDP			; ioBaseChar::IsOwnerChar
_TEXT	ENDS
PUBLIC	?GetState@ioBaseChar@@QBE?AW4CharState@@XZ	; ioBaseChar::GetState
; Function compile flags: /Ogsp
;	COMDAT ?GetState@ioBaseChar@@QBE?AW4CharState@@XZ
_TEXT	SEGMENT
?GetState@ioBaseChar@@QBE?AW4CharState@@XZ PROC		; ioBaseChar::GetState, COMDAT
; _this$ = ecx

; 2156 : 	inline CharState GetState() const { return m_CharState; }	

  00000	8a 81 10 03 00
	00		 mov	 al, BYTE PTR [ecx+784]
  00006	c3		 ret	 0
?GetState@ioBaseChar@@QBE?AW4CharState@@XZ ENDP		; ioBaseChar::GetState
_TEXT	ENDS
PUBLIC	??1ioShuffleCharStateUI@@QAE@XZ			; ioShuffleCharStateUI::~ioShuffleCharStateUI
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioshufflemodeuirender.cpp
;	COMDAT ??1ioShuffleCharStateUI@@QAE@XZ
_TEXT	SEGMENT
??1ioShuffleCharStateUI@@QAE@XZ PROC			; ioShuffleCharStateUI::~ioShuffleCharStateUI, COMDAT
; _this$ = ecx

; 18   : {	

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 19   : 	SAFEDELETE( m_pStarBg );

  00003	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00006	85 c9		 test	 ecx, ecx
  00008	74 0b		 je	 SHORT $LN2@ioShuffleC
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 50 40	 call	 DWORD PTR [eax+64]
  00011	83 66 10 00	 and	 DWORD PTR [esi+16], 0
$LN2@ioShuffleC:

; 20   : 	SAFEDELETE( m_pStarNum );

  00015	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00018	85 c9		 test	 ecx, ecx
  0001a	74 0b		 je	 SHORT $LN1@ioShuffleC
  0001c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001e	6a 01		 push	 1
  00020	ff 50 40	 call	 DWORD PTR [eax+64]
  00023	83 66 14 00	 and	 DWORD PTR [esi+20], 0
$LN1@ioShuffleC:
  00027	5e		 pop	 esi

; 21   : }

  00028	c3		 ret	 0
??1ioShuffleCharStateUI@@QAE@XZ ENDP			; ioShuffleCharStateUI::~ioShuffleCharStateUI
_TEXT	ENDS
PUBLIC	??_C@_0M@DCIJFGJG@ui_star_num?$AA@		; `string'
PUBLIC	??_C@_0L@BDNHOBHO@ui_star_bg?$AA@		; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_06DBHEJNGA@common?$AA@			; `string'
PUBLIC	??_C@_0BE@MFJKGHM@config?1sp2_char?4ini?$AA@	; `string'
PUBLIC	?Load@ioShuffleCharStateUI@@QAEXXZ		; ioShuffleCharStateUI::Load
EXTRN	__imp_??1ioINILoader@@QAE@XZ:PROC
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
EXTRN	__imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z:PROC
EXTRN	__imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ:PROC
EXTRN	__imp_??0ioHashString@@QAE@PBD@Z:PROC
EXTRN	__imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z:PROC
EXTRN	__imp_?SetTitle@ioINILoader@@QAEXPBD@Z:PROC
EXTRN	__imp_??0ioINILoader@@QAE@PBD_N@Z:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3_GS:PROC
EXTRN	__EH_prolog3_GS:PROC
;	COMDAT ??_C@_0M@DCIJFGJG@ui_star_num?$AA@
CONST	SEGMENT
??_C@_0M@DCIJFGJG@ui_star_num?$AA@ DB 'ui_star_num', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BDNHOBHO@ui_star_bg?$AA@
CONST	SEGMENT
??_C@_0L@BDNHOBHO@ui_star_bg?$AA@ DB 'ui_star_bg', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06DBHEJNGA@common?$AA@
CONST	SEGMENT
??_C@_06DBHEJNGA@common?$AA@ DB 'common', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MFJKGHM@config?1sp2_char?4ini?$AA@
CONST	SEGMENT
??_C@_0BE@MFJKGHM@config?1sp2_char?4ini?$AA@ DB 'config/sp2_char.ini', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Load@ioShuffleCharStateUI@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@ioShuffleCharStateUI@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Load@ioShuffleCharStateUI@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?Load@ioShuffleCharStateUI@@QAEXXZ$2
__ehfuncinfo$?Load@ioShuffleCharStateUI@@QAEXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Load@ioShuffleCharStateUI@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?Load@ioShuffleCharStateUI@@QAEXXZ
_TEXT	SEGMENT
_szStarNum$ = -1092					; size = 16
_szStarBg$ = -1076					; size = 16
_kLoader$ = -1060					; size = 784
_szBuf$ = -276						; size = 260
__$EHRec$ = -12						; size = 12
?Load@ioShuffleCharStateUI@@QAEXXZ PROC			; ioShuffleCharStateUI::Load, COMDAT
; _this$ = ecx

; 24   : {

  00000	68 38 04 00 00	 push	 1080			; 00000438H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?Load@ioShuffleCharStateUI@@QAEXXZ
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000f	8b f1		 mov	 esi, ecx

; 25   : 	SAFEDELETE( m_pStarBg );

  00011	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00014	33 ff		 xor	 edi, edi
  00016	3b cf		 cmp	 ecx, edi
  00018	74 0a		 je	 SHORT $LN2@Load
  0001a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001c	6a 01		 push	 1
  0001e	ff 50 40	 call	 DWORD PTR [eax+64]
  00021	89 7e 10	 mov	 DWORD PTR [esi+16], edi
$LN2@Load:

; 26   : 	SAFEDELETE( m_pStarNum );

  00024	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00027	3b cf		 cmp	 ecx, edi
  00029	74 0a		 je	 SHORT $LN1@Load
  0002b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002d	6a 01		 push	 1
  0002f	ff 50 40	 call	 DWORD PTR [eax+64]
  00032	89 7e 14	 mov	 DWORD PTR [esi+20], edi
$LN1@Load:

; 27   : 	
; 28   : 	//UI이기 때문에 _e를 사용 X
; 29   : 	ioINILoader kLoader( "config/sp2_char.ini" );

  00035	6a 01		 push	 1
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MFJKGHM@config?1sp2_char?4ini?$AA@
  0003c	8d 8d dc fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@PBD_N@Z

; 30   : 	kLoader.SetTitle( "common" );

  00048	68 00 00 00 00	 push	 OFFSET ??_C@_06DBHEJNGA@common?$AA@
  0004d	8d 8d dc fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00053	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 31   : 
; 32   : 	char szBuf[MAX_PATH];
; 33   : 	kLoader.LoadString( "ui_star_bg", "", szBuf, MAX_PATH );

  0005c	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z
  00062	68 04 01 00 00	 push	 260			; 00000104H
  00067	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0006d	50		 push	 eax
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BDNHOBHO@ui_star_bg?$AA@
  00078	8d 8d dc fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  0007e	ff d7		 call	 edi

; 34   : 	ioHashString szStarBg = szBuf;

  00080	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00086	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0008c	50		 push	 eax
  0008d	8d 8d cc fb ff
	ff		 lea	 ecx, DWORD PTR _szStarBg$[ebp]
  00093	ff d3		 call	 ebx

; 35   : 
; 36   : 	kLoader.LoadString( "ui_star_num", "", szBuf, MAX_PATH );

  00095	68 04 01 00 00	 push	 260			; 00000104H
  0009a	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  000a0	50		 push	 eax
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DCIJFGJG@ui_star_num?$AA@
  000ab	8d 8d dc fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  000b1	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000b5	ff d7		 call	 edi

; 37   : 	ioHashString szStarNum = szBuf;

  000b7	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  000bd	50		 push	 eax
  000be	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR _szStarNum$[ebp]
  000c4	ff d3		 call	 ebx

; 38   : 
; 39   : 	m_pStarBg  = g_UIImageSetMgr.CreateImageByFullName( szStarBg );

  000c6	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ
  000cc	8d 85 cc fb ff
	ff		 lea	 eax, DWORD PTR _szStarBg$[ebp]
  000d2	6a 00		 push	 0
  000d4	50		 push	 eax
  000d5	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000d9	ff d7		 call	 edi
  000db	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z
  000e1	8b c8		 mov	 ecx, eax
  000e3	ff d3		 call	 ebx
  000e5	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 40   : 	m_pStarNum = g_UIImageSetMgr.CreateImageByFullName( szStarNum );

  000e8	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR _szStarNum$[ebp]
  000ee	6a 00		 push	 0
  000f0	50		 push	 eax
  000f1	ff d7		 call	 edi
  000f3	8b c8		 mov	 ecx, eax
  000f5	ff d3		 call	 ebx
  000f7	89 46 14	 mov	 DWORD PTR [esi+20], eax

; 41   : }

  000fa	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00100	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR _szStarNum$[ebp]
  00106	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0010a	ff d6		 call	 esi
  0010c	8d 8d cc fb ff
	ff		 lea	 ecx, DWORD PTR _szStarBg$[ebp]
  00112	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00116	ff d6		 call	 esi
  00118	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0011c	8d 8d dc fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00122	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
  00128	e8 00 00 00 00	 call	 __EH_epilog3_GS
  0012d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@ioShuffleCharStateUI@@QAEXXZ$0:
  00000	8d 8d dc fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
__unwindfunclet$?Load@ioShuffleCharStateUI@@QAEXXZ$1:
  0000c	8d 8d cc fb ff
	ff		 lea	 ecx, DWORD PTR _szStarBg$[ebp]
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?Load@ioShuffleCharStateUI@@QAEXXZ$2:
  00018	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR _szStarNum$[ebp]
  0001e	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?Load@ioShuffleCharStateUI@@QAEXXZ:
  00024	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00028	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002b	8b 8a b8 fb ff
	ff		 mov	 ecx, DWORD PTR [edx-1096]
  00031	33 c8		 xor	 ecx, eax
  00033	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00038	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0003b	33 c8		 xor	 ecx, eax
  0003d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00042	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@ioShuffleCharStateUI@@QAEXXZ
  00047	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@ioShuffleCharStateUI@@QAEXXZ ENDP			; ioShuffleCharStateUI::Load
PUBLIC	__real@c1000000
PUBLIC	__real@4f800000
PUBLIC	?RenderShuffleModeUI@ioShuffleCharStateUI@@QAEXPAVioBaseChar@@@Z ; ioShuffleCharStateUI::RenderShuffleModeUI
EXTRN	__imp_?RenderNum@ioUIRenderImage@@QAEXMMHMMW4UIRenderType@@W4TextureFilterOption@@0W4RenerNumerFormatting@1@@Z:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@c1000000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
CONST	SEGMENT
__real@c1000000 DD 0c1000000r			; -8
CONST	ENDS
;	COMDAT __real@4f800000
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioshufflemodeuirender.cpp
CONST	ENDS
;	COMDAT ?RenderShuffleModeUI@ioShuffleCharStateUI@@QAEXPAVioBaseChar@@@Z
_TEXT	SEGMENT
tv187 = -4						; size = 4
_pOwner$ = 8						; size = 4
?RenderShuffleModeUI@ioShuffleCharStateUI@@QAEXPAVioBaseChar@@@Z PROC ; ioShuffleCharStateUI::RenderShuffleModeUI, COMDAT
; _this$ = ecx

; 107  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 108  : 	if( !m_bShuffleUIRender )

  00008	33 db		 xor	 ebx, ebx
  0000a	38 1e		 cmp	 BYTE PTR [esi], bl
  0000c	0f 84 8e 00 00
	00		 je	 $LN1@RenderShuf

; 109  : 		return;
; 110  : 	
; 111  : 	if( m_pStarBg )

  00012	39 5e 10	 cmp	 DWORD PTR [esi+16], ebx
  00015	74 28		 je	 SHORT $LN2@RenderShuf

; 112  : 		m_pStarBg->Render( m_iXPos, m_iYPos );

  00017	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0001a	66 0f 6e 46 1c	 movd	 xmm0, DWORD PTR [esi+28]
  0001f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00021	53		 push	 ebx
  00022	53		 push	 ebx
  00023	53		 push	 ebx
  00024	53		 push	 ebx
  00025	51		 push	 ecx
  00026	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00029	51		 push	 ecx
  0002a	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00030	66 0f 6e 46 18	 movd	 xmm0, DWORD PTR [esi+24]
  00035	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00038	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003d	ff 10		 call	 DWORD PTR [eax]
$LN2@RenderShuf:

; 113  : 
; 114  : 	if( m_pStarNum )

  0003f	39 5e 14	 cmp	 DWORD PTR [esi+20], ebx
  00042	74 5c		 je	 SHORT $LN1@RenderShuf

; 115  : 	{
; 116  : 		m_pStarNum->RenderNum( m_iXPos + m_iStarXOffset, m_iYPos, m_iStarCount, -8.0f, FLOAT1, UI_RENDER_NORMAL, TFO_BILINEAR, UI_RENDER_NORMAL, ioUIRenderImage::RNF_REVERSE );		

  00044	b8 01 00 00 00	 mov	 eax, 1
  00049	6a 01		 push	 1
  0004b	53		 push	 ebx
  0004c	6a 01		 push	 1
  0004e	89 45 fc	 mov	 DWORD PTR tv187[ebp], eax
  00051	db 45 fc	 fild	 DWORD PTR tv187[ebp]
  00054	53		 push	 ebx
  00055	85 c0		 test	 eax, eax
  00057	79 06		 jns	 SHORT $LN8@RenderShuf
  00059	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN8@RenderShuf:
  0005f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c1000000
  00067	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  0006a	03 46 18	 add	 eax, DWORD PTR [esi+24]
  0006d	51		 push	 ecx
  0006e	51		 push	 ecx
  0006f	d9 5c 24 04	 fstp	 DWORD PTR [esp+4]
  00073	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00078	ff 76 24	 push	 DWORD PTR [esi+36]
  0007b	66 0f 6e 46 1c	 movd	 xmm0, DWORD PTR [esi+28]
  00080	51		 push	 ecx
  00081	51		 push	 ecx
  00082	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00085	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00088	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0008e	0f 57 c0	 xorps	 xmm0, xmm0
  00091	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00095	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?RenderNum@ioUIRenderImage@@QAEXMMHMMW4UIRenderType@@W4TextureFilterOption@@0W4RenerNumerFormatting@1@@Z
$LN1@RenderShuf:
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx

; 117  : 	}	
; 118  : }

  000a2	c9		 leave
  000a3	c2 04 00	 ret	 4
?RenderShuffleModeUI@ioShuffleCharStateUI@@QAEXPAVioBaseChar@@@Z ENDP ; ioShuffleCharStateUI::RenderShuffleModeUI
_TEXT	ENDS
PUBLIC	?DecryptValueToPool@?$CEncrypt@W4DieState@@@@QAEXPAW4DieState@@@Z ; CEncrypt<enum DieState>::DecryptValueToPool
EXTRN	?DecryptByte@ccddaabb@@QBEXPBDPADH@Z:PROC	; ccddaabb::DecryptByte
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
;	COMDAT ?DecryptValueToPool@?$CEncrypt@W4DieState@@@@QAEXPAW4DieState@@@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
?DecryptValueToPool@?$CEncrypt@W4DieState@@@@QAEXPAW4DieState@@@Z PROC ; CEncrypt<enum DieState>::DecryptValueToPool, COMDAT
; _this$ = ecx

; 2557 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2558 : 		m_RC5.DecryptByte( m_MemPool, m_TempMem, sizeof(DieState) );

  00004	8d 71 28	 lea	 esi, DWORD PTR [ecx+40]
  00007	6a 04		 push	 4
  00009	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  0000c	56		 push	 esi
  0000d	50		 push	 eax
  0000e	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00011	e8 00 00 00 00	 call	 ?DecryptByte@ccddaabb@@QBEXPBDPADH@Z ; ccddaabb::DecryptByte

; 2559 : 		*value = *((DieState*)m_TempMem);

  00016	8b 06		 mov	 eax, DWORD PTR [esi]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _value$[ebp]
  0001b	89 01		 mov	 DWORD PTR [ecx], eax
  0001d	5e		 pop	 esi

; 2560 : 	}

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?DecryptValueToPool@?$CEncrypt@W4DieState@@@@QAEXPAW4DieState@@@Z ENDP ; CEncrypt<enum DieState>::DecryptValueToPool
_TEXT	ENDS
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.h
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 165  :     D3DXVECTOR3() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	?IsNoneUIMode@ioSP2GUIManager@@QBE_NXZ		; ioSP2GUIManager::IsNoneUIMode
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\iosp2guimanager.h
;	COMDAT ?IsNoneUIMode@ioSP2GUIManager@@QBE_NXZ
_TEXT	SEGMENT
?IsNoneUIMode@ioSP2GUIManager@@QBE_NXZ PROC		; ioSP2GUIManager::IsNoneUIMode, COMDAT
; _this$ = ecx

; 237  : 	inline bool IsNoneUIMode() const { return m_bNoneUIMode; }

  00000	8a 81 e1 04 00
	00		 mov	 al, BYTE PTR [ecx+1249]
  00006	c3		 ret	 0
?IsNoneUIMode@ioSP2GUIManager@@QBE_NXZ ENDP		; ioSP2GUIManager::IsNoneUIMode
_TEXT	ENDS
PUBLIC	??0ioShuffleCharStateUI@@QAE@XZ			; ioShuffleCharStateUI::ioShuffleCharStateUI
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioshufflemodeuirender.cpp
;	COMDAT ??0ioShuffleCharStateUI@@QAE@XZ
_TEXT	SEGMENT
??0ioShuffleCharStateUI@@QAE@XZ PROC			; ioShuffleCharStateUI::ioShuffleCharStateUI, COMDAT
; _this$ = ecx

; 7    : {

  00000	8b c1		 mov	 eax, ecx

; 8    : 	m_bShuffleUIRender = false;

  00002	33 c9		 xor	 ecx, ecx
  00004	88 08		 mov	 BYTE PTR [eax], cl

; 9    : 
; 10   : 	m_pStarBg  = NULL;

  00006	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 11   : 	m_pStarNum = NULL;

  00009	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 12   : 
; 13   : 	m_iStarCount   = 0;

  0000c	89 48 24	 mov	 DWORD PTR [eax+36], ecx

; 14   : 	m_iStarXOffset = 0;

  0000f	89 48 20	 mov	 DWORD PTR [eax+32], ecx

; 15   : }

  00012	c3		 ret	 0
??0ioShuffleCharStateUI@@QAE@XZ ENDP			; ioShuffleCharStateUI::ioShuffleCharStateUI
_TEXT	ENDS
PUBLIC	??B?$CEncrypt@W4DieState@@@@QAE?AW4DieState@@XZ	; CEncrypt<enum DieState>::operator enum DieState
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
;	COMDAT ??B?$CEncrypt@W4DieState@@@@QAE?AW4DieState@@XZ
_TEXT	SEGMENT
_value$ = -4						; size = 4
??B?$CEncrypt@W4DieState@@@@QAE?AW4DieState@@XZ PROC	; CEncrypt<enum DieState>::operator enum DieState, COMDAT
; _this$ = ecx

; 134  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 135  : 		type value;
; 136  : 		DecryptValueToPool(&value);

  00004	8d 45 fc	 lea	 eax, DWORD PTR _value$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@W4DieState@@@@QAEXPAW4DieState@@@Z ; CEncrypt<enum DieState>::DecryptValueToPool

; 137  : 
; 138  : #ifdef _NOTUSE
; 139  : 		Debug();
; 140  : #endif
; 141  : 		return value;

  0000d	8b 45 fc	 mov	 eax, DWORD PTR _value$[ebp]

; 142  : 	}

  00010	c9		 leave
  00011	c3		 ret	 0
??B?$CEncrypt@W4DieState@@@@QAE?AW4DieState@@XZ ENDP	; CEncrypt<enum DieState>::operator enum DieState
_TEXT	ENDS
PUBLIC	?GetDieState@ioBaseChar@@QAE?AW4DieState@@XZ	; ioBaseChar::GetDieState
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iobasechar.h
;	COMDAT ?GetDieState@ioBaseChar@@QAE?AW4DieState@@XZ
_TEXT	SEGMENT
_value$524171 = -4					; size = 4
?GetDieState@ioBaseChar@@QAE?AW4DieState@@XZ PROC	; ioBaseChar::GetDieState, COMDAT
; _this$ = ecx

; 2162 : 	inline DieState GetDieState(){ return (DieState)m_DieState; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8d 45 fc	 lea	 eax, DWORD PTR _value$524171[ebp]
  00007	50		 push	 eax
  00008	81 c1 48 10 00
	00		 add	 ecx, 4168		; 00001048H
  0000e	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@W4DieState@@@@QAEXPAW4DieState@@@Z ; CEncrypt<enum DieState>::DecryptValueToPool
  00013	8b 45 fc	 mov	 eax, DWORD PTR _value$524171[ebp]
  00016	c9		 leave
  00017	c3		 ret	 0
?GetDieState@ioBaseChar@@QAE?AW4DieState@@XZ ENDP	; ioBaseChar::GetDieState
_TEXT	ENDS
PUBLIC	__real@4020000000000000
PUBLIC	__real@4034000000000000
PUBLIC	__real@403e000000000000
PUBLIC	__$ArrayPad$
PUBLIC	?UpdateShuffleModeUI@ioShuffleCharStateUI@@QAEX_NPAVioBaseChar@@1@Z ; ioShuffleCharStateUI::UpdateShuffleModeUI
EXTRN	__imp_?GetOffsetX@ioUIRenderImage@@QBEHXZ:PROC
EXTRN	__imp_?GetWidth@ioUIRenderElement@@QBEHXZ:PROC
EXTRN	__imp_?GetHeight@ioUIRenderElement@@QBEHXZ:PROC
EXTRN	__imp_?GetOffsetY@ioUIRenderImage@@QBEHXZ:PROC
EXTRN	?IsVisibleID@ioBaseGUISupport@@QAE_NXZ:PROC	; ioBaseGUISupport::IsVisibleID
EXTRN	?Convert3DTo2D@Setting@@SA?AUD3DXVECTOR3@@ABU2@@Z:PROC ; Setting::Convert3DTo2D
EXTRN	?GetMidPositionByRate@ioGameEntity@@QBE?AUD3DXVECTOR3@@M@Z:PROC ; ioGameEntity::GetMidPositionByRate
EXTRN	?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ:PROC	; ioSP2GUIManager::GetSingleton
EXTRN	?IsVisibleChar@ioBaseChar@@QAE_NXZ:PROC		; ioBaseChar::IsVisibleChar
EXTRN	?IsCanInvisible@ioBaseChar@@QAE_NXZ:PROC	; ioBaseChar::IsCanInvisible
EXTRN	___security_cookie:DWORD
;	COMDAT __real@4020000000000000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
CONST	SEGMENT
__real@4020000000000000 DQ 04020000000000000r	; 8
CONST	ENDS
;	COMDAT __real@4034000000000000
CONST	SEGMENT
__real@4034000000000000 DQ 04034000000000000r	; 20
CONST	ENDS
;	COMDAT __real@403e000000000000
CONST	SEGMENT
__real@403e000000000000 DQ 0403e000000000000r	; 30
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioshufflemodeuirender.cpp
CONST	ENDS
;	COMDAT ?UpdateShuffleModeUI@ioShuffleCharStateUI@@QAEX_NPAVioBaseChar@@1@Z
_TEXT	SEGMENT
tv309 = -36						; size = 8
tv336 = -32						; size = 4
tv325 = -32						; size = 4
_value$524188 = -32					; size = 4
_vPos$ = -28						; size = 12
_v2DPos$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_bSystemVisible$ = 8					; size = 1
_pOwner$ = 12						; size = 4
_pCameraTarget$ = 16					; size = 4
?UpdateShuffleModeUI@ioShuffleCharStateUI@@QAEX_NPAVioBaseChar@@1@Z PROC ; ioShuffleCharStateUI::UpdateShuffleModeUI, COMDAT
; _this$ = ecx

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 10	 mov	 ebx, DWORD PTR _pCameraTarget$[ebp]
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b 7d 0c	 mov	 edi, DWORD PTR _pOwner$[ebp]
  00019	8b f1		 mov	 esi, ecx

; 45   : 	if( !pOwner )

  0001b	85 ff		 test	 edi, edi
  0001d	74 42		 je	 SHORT $LN14@UpdateShuf

; 46   : 		return;
; 47   : 
; 48   : 	if( !bSystemVisible || ( !pOwner->IsCanInvisible() && !pOwner->IsVisibleChar() ) )

  0001f	80 7d 08 00	 cmp	 BYTE PTR _bSystemVisible$[ebp], 0
  00023	74 39		 je	 SHORT $LN11@UpdateShuf
  00025	8b cf		 mov	 ecx, edi
  00027	e8 00 00 00 00	 call	 ?IsCanInvisible@ioBaseChar@@QAE_NXZ ; ioBaseChar::IsCanInvisible
  0002c	84 c0		 test	 al, al
  0002e	75 0b		 jne	 SHORT $LN12@UpdateShuf
  00030	8b cf		 mov	 ecx, edi
  00032	e8 00 00 00 00	 call	 ?IsVisibleChar@ioBaseChar@@QAE_NXZ ; ioBaseChar::IsVisibleChar
  00037	84 c0		 test	 al, al
  00039	74 23		 je	 SHORT $LN11@UpdateShuf
$LN12@UpdateShuf:

; 51   : 		return;
; 52   : 	}
; 53   : 	else
; 54   : 	{
; 55   : 		switch( pOwner->GetState() )

  0003b	0f b6 87 10 03
	00 00		 movzx	 eax, BYTE PTR [edi+784]
  00042	83 e8 0e	 sub	 eax, 14			; 0000000eH
  00045	74 2b		 je	 SHORT $LN6@UpdateShuf
  00047	83 e8 08	 sub	 eax, 8
  0004a	74 12		 je	 SHORT $LN11@UpdateShuf
  0004c	48		 dec	 eax
  0004d	48		 dec	 eax
  0004e	74 0e		 je	 SHORT $LN11@UpdateShuf
  00050	48		 dec	 eax
  00051	48		 dec	 eax
  00052	74 0a		 je	 SHORT $LN11@UpdateShuf
  00054	83 e8 0a	 sub	 eax, 10			; 0000000aH
  00057	74 05		 je	 SHORT $LN11@UpdateShuf
  00059	83 e8 06	 sub	 eax, 6
  0005c	75 29		 jne	 SHORT $LN5@UpdateShuf
$LN11@UpdateShuf:

; 49   : 	{		
; 50   : 		m_bShuffleUIRender = false;

  0005e	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN14@UpdateShuf:

; 104  : }

  00061	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	33 cd		 xor	 ecx, ebp
  00068	5b		 pop	 ebx
  00069	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006e	c9		 leave
  0006f	c2 0c 00	 ret	 12			; 0000000cH
$LN6@UpdateShuf:

; 56   : 		{
; 57   : 		case CS_ESCAPE_PRISONER:
; 58   : 		case CS_READY:
; 59   : 		case CS_LOADING:
; 60   : 		case CS_OBSERVER:
; 61   : 		case CS_VIEW:
; 62   : 			{
; 63   : 				m_bShuffleUIRender = false;
; 64   : 				return;
; 65   : 			}
; 66   : 			break;
; 67   : 		case CS_DIE:
; 68   : 			if( pCameraTarget->GetDieState() == DS_FADE_OUT )

  00072	8d 45 e0	 lea	 eax, DWORD PTR _value$524188[ebp]
  00075	50		 push	 eax
  00076	8d 8b 48 10 00
	00		 lea	 ecx, DWORD PTR [ebx+4168]
  0007c	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@W4DieState@@@@QAEXPAW4DieState@@@Z ; CEncrypt<enum DieState>::DecryptValueToPool
  00081	83 7d e0 05	 cmp	 DWORD PTR _value$524188[ebp], 5

; 69   : 			{
; 70   : 				m_bShuffleUIRender = false;
; 71   : 				return;

  00085	74 d7		 je	 SHORT $LN11@UpdateShuf
$LN5@UpdateShuf:

; 72   : 			}
; 73   : 			break;
; 74   : 		}
; 75   : 	}
; 76   : 
; 77   : 	if( g_GUIMgr.IsNoneUIMode() )

  00087	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  0008c	80 b8 e1 04 00
	00 00		 cmp	 BYTE PTR [eax+1249], 0

; 78   : 	{
; 79   : 		m_bShuffleUIRender = false;
; 80   : 		return;

  00093	75 c9		 jne	 SHORT $LN11@UpdateShuf

; 81   : 	}
; 82   : 
; 83   : 	D3DXVECTOR3 vPos = pOwner->GetMidPositionByRate( FLOAT1 );

  00095	b8 01 00 00 00	 mov	 eax, 1
  0009a	89 45 e0	 mov	 DWORD PTR tv336[ebp], eax
  0009d	db 45 e0	 fild	 DWORD PTR tv336[ebp]
  000a0	85 c0		 test	 eax, eax
  000a2	79 06		 jns	 SHORT $LN31@UpdateShuf
  000a4	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN31@UpdateShuf:
  000aa	51		 push	 ecx
  000ab	8d 45 e4	 lea	 eax, DWORD PTR _vPos$[ebp]
  000ae	d9 1c 24	 fstp	 DWORD PTR [esp]
  000b1	50		 push	 eax
  000b2	8b cf		 mov	 ecx, edi
  000b4	e8 00 00 00 00	 call	 ?GetMidPositionByRate@ioGameEntity@@QBE?AUD3DXVECTOR3@@M@Z ; ioGameEntity::GetMidPositionByRate

; 84   : 	vPos.y += 30.0f;

  000b9	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _vPos$[ebp+4]

; 85   : 
; 86   : 	D3DXVECTOR3 v2DPos = Setting::Convert3DTo2D( vPos );

  000be	8d 45 e4	 lea	 eax, DWORD PTR _vPos$[ebp]
  000c1	50		 push	 eax
  000c2	0f 5a c0	 cvtps2pd xmm0, xmm0
  000c5	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@403e000000000000
  000cd	8d 45 f0	 lea	 eax, DWORD PTR _v2DPos$[ebp]
  000d0	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  000d4	50		 push	 eax
  000d5	f3 0f 11 45 e8	 movss	 DWORD PTR _vPos$[ebp+4], xmm0
  000da	e8 00 00 00 00	 call	 ?Convert3DTo2D@Setting@@SA?AUD3DXVECTOR3@@ABU2@@Z ; Setting::Convert3DTo2D
  000df	59		 pop	 ecx
  000e0	59		 pop	 ecx

; 87   : 	
; 88   : 	if( pOwner->IsVisibleID() )

  000e1	8d 8f cc 01 00
	00		 lea	 ecx, DWORD PTR [edi+460]
  000e7	e8 00 00 00 00	 call	 ?IsVisibleID@ioBaseGUISupport@@QAE_NXZ ; ioBaseGUISupport::IsVisibleID
  000ec	84 c0		 test	 al, al
  000ee	74 19		 je	 SHORT $LN30@UpdateShuf

; 89   : 		v2DPos.y -= 20.0f;

  000f0	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _v2DPos$[ebp+4]
  000f5	0f 5a c0	 cvtps2pd xmm0, xmm0
  000f8	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4034000000000000
  00100	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00104	f3 0f 11 45 f4	 movss	 DWORD PTR _v2DPos$[ebp+4], xmm0
$LN30@UpdateShuf:

; 90   : 
; 91   : 	if( pOwner->IsOwnerChar() )

  00109	80 bf 84 13 00
	00 00		 cmp	 BYTE PTR [edi+4996], 0
  00110	74 1d		 je	 SHORT $LN2@UpdateShuf

; 92   : 		v2DPos.y -= FLOAT40;

  00112	b8 28 00 00 00	 mov	 eax, 40			; 00000028H
  00117	d9 45 f4	 fld	 DWORD PTR _v2DPos$[ebp+4]
  0011a	89 45 e0	 mov	 DWORD PTR tv325[ebp], eax
  0011d	db 45 e0	 fild	 DWORD PTR tv325[ebp]
  00120	85 c0		 test	 eax, eax
  00122	79 06		 jns	 SHORT $LN32@UpdateShuf
  00124	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN32@UpdateShuf:
  0012a	de e9		 fsubp	 ST(1), ST(0)
  0012c	d9 5d f4	 fstp	 DWORD PTR _v2DPos$[ebp+4]
$LN2@UpdateShuf:

; 93   : 
; 94   : 	if( m_pStarBg )

  0012f	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00132	85 c9		 test	 ecx, ecx
  00134	74 7a		 je	 SHORT $LN1@UpdateShuf

; 95   : 	{
; 96   : 		v2DPos.y -= m_pStarBg->GetHeight()/2 + m_pStarBg->GetOffsetY()/2;

  00136	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _v2DPos$[ebp+4]
  0013b	0f 5a c0	 cvtps2pd xmm0, xmm0
  0013e	f2 0f 11 45 dc	 movsd	 QWORD PTR tv309[ebp], xmm0
  00143	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetOffsetY@ioUIRenderImage@@QBEHXZ
  00149	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0014c	99		 cdq
  0014d	2b c2		 sub	 eax, edx
  0014f	8b f8		 mov	 edi, eax
  00151	d1 ff		 sar	 edi, 1
  00153	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetHeight@ioUIRenderElement@@QBEHXZ

; 97   : 
; 98   : 		m_iStarXOffset = m_pStarBg->GetWidth()/2 - m_pStarBg->GetOffsetX() - 8.0f;

  00159	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0015c	99		 cdq
  0015d	2b c2		 sub	 eax, edx
  0015f	d1 f8		 sar	 eax, 1
  00161	0f 57 c0	 xorps	 xmm0, xmm0
  00164	03 c7		 add	 eax, edi
  00166	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0016a	0f 5a c8	 cvtps2pd xmm1, xmm0
  0016d	f2 0f 10 45 dc	 movsd	 xmm0, QWORD PTR tv309[ebp]
  00172	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00176	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0017a	f3 0f 11 45 f4	 movss	 DWORD PTR _v2DPos$[ebp+4], xmm0
  0017f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetWidth@ioUIRenderElement@@QBEHXZ
  00185	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00188	99		 cdq
  00189	2b c2		 sub	 eax, edx
  0018b	8b f8		 mov	 edi, eax
  0018d	d1 ff		 sar	 edi, 1
  0018f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetOffsetX@ioUIRenderImage@@QBEHXZ
  00195	2b f8		 sub	 edi, eax
  00197	0f 57 c0	 xorps	 xmm0, xmm0
  0019a	f3 0f 2a c7	 cvtsi2ss xmm0, edi
  0019e	0f 5a c0	 cvtps2pd xmm0, xmm0
  001a1	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4020000000000000
  001a9	f2 0f 2c c0	 cvttsd2si eax, xmm0
  001ad	89 46 20	 mov	 DWORD PTR [esi+32], eax
$LN1@UpdateShuf:

; 99   : 	}
; 100  : 
; 101  : 	m_iXPos = (int)v2DPos.x;

  001b0	f3 0f 2c 45 f0	 cvttss2si eax, DWORD PTR _v2DPos$[ebp]
  001b5	89 46 18	 mov	 DWORD PTR [esi+24], eax

; 102  : 	m_iYPos = (int)v2DPos.y;

  001b8	f3 0f 2c 45 f4	 cvttss2si eax, DWORD PTR _v2DPos$[ebp+4]
  001bd	89 46 1c	 mov	 DWORD PTR [esi+28], eax

; 103  : 	m_bShuffleUIRender = true;

  001c0	c6 06 01	 mov	 BYTE PTR [esi], 1
  001c3	e9 99 fe ff ff	 jmp	 $LN14@UpdateShuf
?UpdateShuffleModeUI@ioShuffleCharStateUI@@QAEX_NPAVioBaseChar@@1@Z ENDP ; ioShuffleCharStateUI::UpdateShuffleModeUI
_TEXT	ENDS
END
