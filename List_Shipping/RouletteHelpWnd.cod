; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\GUI\RouletteHelpWnd.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_7RouletteHelpWnd@@6B@			; RouletteHelpWnd::`vftable'
PUBLIC	??0RouletteHelpWnd@@QAE@XZ			; RouletteHelpWnd::RouletteHelpWnd
PUBLIC	??_R4RouletteHelpWnd@@6B@			; RouletteHelpWnd::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRouletteHelpWnd@@@8			; RouletteHelpWnd `RTTI Type Descriptor'
PUBLIC	??_R3RouletteHelpWnd@@8				; RouletteHelpWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RouletteHelpWnd@@8				; RouletteHelpWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RouletteHelpWnd@@8		; RouletteHelpWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioWnd@@8				; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioWnd@@@8				; ioWnd `RTTI Type Descriptor'
PUBLIC	??_R3ioWnd@@8					; ioWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioWnd@@8					; ioWnd::`RTTI Base Class Array'
PUBLIC	?AddRenderImage@RouletteHelpWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z ; RouletteHelpWnd::AddRenderImage
PUBLIC	?OnRender@RouletteHelpWnd@@MAEXXZ		; RouletteHelpWnd::OnRender
PUBLIC	?iwm_command@RouletteHelpWnd@@UAEXPAVioWnd@@HK@Z ; RouletteHelpWnd::iwm_command
PUBLIC	?iwm_show@RouletteHelpWnd@@UAEXXZ		; RouletteHelpWnd::iwm_show
PUBLIC	?iwm_hide@RouletteHelpWnd@@UAEXXZ		; RouletteHelpWnd::iwm_hide
EXTRN	__imp_??0ioWnd@@QAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z:PROC ; ioWnd::AddRenderFrame
EXTRN	?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z:PROC ; ioWnd::AddTooltipHelp
EXTRN	?ParseExtraInfo@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC ; ioWnd::ParseExtraInfo
EXTRN	?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC ; ioWnd::AddNamedRenderImage
EXTRN	?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z:PROC ; ioWnd::RemoveNamedRenderImage
EXTRN	?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z:PROC ; ioWnd::GetNamedRenderImage
EXTRN	?SetWindowAlpha@ioWnd@@UAEXH@Z:PROC		; ioWnd::SetWindowAlpha
EXTRN	?SetActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetActive
EXTRN	?SetInActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetInActive
EXTRN	?ClearElementImageList@ioWnd@@UAEXXZ:PROC	; ioWnd::ClearElementImageList
EXTRN	?SetSize@ioWnd@@UAEXHH@Z:PROC			; ioWnd::SetSize
EXTRN	?SetPositionToDefault@ioWnd@@UAEXHH_N0@Z:PROC	; ioWnd::SetPositionToDefault
EXTRN	?IsNeedProcess@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsNeedProcess
EXTRN	?IsCanMouseReaction@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsCanMouseReaction
EXTRN	?AddChild@ioWnd@@UAEXPAV1@@Z:PROC		; ioWnd::AddChild
EXTRN	?DeleteChild@ioWnd@@UAEXK@Z:PROC		; ioWnd::DeleteChild
EXTRN	?DeleteAllChild@ioWnd@@UAEXXZ:PROC		; ioWnd::DeleteAllChild
EXTRN	?OnRenderShowAndHide@ioWnd@@MAE_NXZ:PROC	; ioWnd::OnRenderShowAndHide
EXTRN	?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z:PROC ; ioWnd::OnRenderShowAndHideByDefault
EXTRN	?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByTop
EXTRN	?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByDown
EXTRN	?OnRenderAfterChild@ioWnd@@MAEXXZ:PROC		; ioWnd::OnRenderAfterChild
EXTRN	?OnProcess@ioWnd@@MAEXM@Z:PROC			; ioWnd::OnProcess
EXTRN	?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z:PROC	; ioWnd::OnMouseProcess
EXTRN	?CheckFrameReSize@ioWnd@@MAEXHHHH@Z:PROC	; ioWnd::CheckFrameReSize
EXTRN	?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z:PROC ; ioWnd::RenderImageList
EXTRN	?iwm_create@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_create
EXTRN	?iwm_destroy@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_destroy
EXTRN	?iwm_lbuttondown@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_lbuttondown
EXTRN	?iwm_lbuttonup@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_lbuttonup
EXTRN	?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z:PROC ; ioWnd::iwm_lbuttonDBLCLK
EXTRN	?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_rbuttondown
EXTRN	?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_rbuttonup
EXTRN	?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mouseover
EXTRN	?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mousemove
EXTRN	?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mouseleave
EXTRN	?iwm_vscroll@ioWnd@@UAEXKH@Z:PROC		; ioWnd::iwm_vscroll
EXTRN	?iwm_wheel@ioWnd@@UAEXH@Z:PROC			; ioWnd::iwm_wheel
EXTRN	?iwm_esc@ioWnd@@UAE_NXZ:PROC			; ioWnd::iwm_esc
EXTRN	?iwm_spacebar@ioWnd@@UAE_NXZ:PROC		; ioWnd::iwm_spacebar
EXTRN	?iwm_gototop@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_gototop
EXTRN	?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragenter
EXTRN	?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragover
EXTRN	?iwm_dragleave@ioWnd@@UAEXXZ:PROC		; ioWnd::iwm_dragleave
EXTRN	?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z:PROC ; ioWnd::iwm_dropitem
EXTRN	?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z:PROC ; ioWnd::iwm_dropdone
EXTRN	?IsEXType@ioWnd@@UBE_NXZ:PROC			; ioWnd::IsEXType
EXTRN	?GetWndType@ioWnd@@UBEKXZ:PROC			; ioWnd::GetWndType
EXTRN	?RenderWnd@ioWnd@@UAEXXZ:PROC			; ioWnd::RenderWnd
EXTRN	?SetIDEX@ioWnd@@UAEXAAK_N@Z:PROC		; ioWnd::SetIDEX
EXTRN	?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC	; ioWnd::ParseXML
EXTRN	?GetHeaderFileName@ioWnd@@UAEPBDXZ:PROC		; ioWnd::GetHeaderFileName
EXTRN	?GetTemplateName@ioWnd@@UAEPBDXZ:PROC		; ioWnd::GetTemplateName
EXTRN	?GetDefClassName@ioWnd@@UBEPBDXZ:PROC		; ioWnd::GetDefClassName
EXTRN	?_Clone@ioWnd@@UAEPAV1@XZ:PROC			; ioWnd::_Clone
EXTRN	?Copy@ioWnd@@UAEXPAV1@@Z:PROC			; ioWnd::Copy
EXTRN	?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z:PROC	; ioWnd::Save
EXTRN	?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC ; ioWnd::SetSaveData
EXTRN	?SetPosX@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosX
EXTRN	?SetPosY@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosY
EXTRN	?SetWidth@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetWidth
EXTRN	?SetHeight@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetHeight
EXTRN	?GetNumFixedRenderFrame@ioWnd@@UBEHXZ:PROC	; ioWnd::GetNumFixedRenderFrame
EXTRN	?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z:PROC	; ioWnd::GetFixedRenderFrameType
EXTRN	?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioWnd::GetRenderFrame
EXTRN	?GetNumFixedRenderImage@ioWnd@@UBEHXZ:PROC	; ioWnd::GetNumFixedRenderImage
EXTRN	?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z:PROC	; ioWnd::GetFixedRenderImageType
EXTRN	?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioWnd::GetRenderImage
EXTRN	?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z:PROC ; ioWnd::AddEffect
EXTRN	?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z:PROC ; ioWnd::GetEffect
EXTRN	??_ERouletteHelpWnd@@UAEPAXI@Z:PROC		; RouletteHelpWnd::`vector deleting destructor'
;	COMDAT ??_R2ioWnd@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\roulettehelpwnd.cpp
rdata$r	SEGMENT
??_R2ioWnd@@8 DD FLAT:??_R1A@?0A@EA@ioWnd@@8		; ioWnd::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioWnd@@8
rdata$r	SEGMENT
??_R3ioWnd@@8 DD 00H					; ioWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioWnd@@@8
_DATA	SEGMENT
??_R0?AVioWnd@@@8 DD FLAT:??_7type_info@@6B@		; ioWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioWnd@@8 DD FLAT:??_R0?AVioWnd@@@8	; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RouletteHelpWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RouletteHelpWnd@@8 DD FLAT:??_R0?AVRouletteHelpWnd@@@8 ; RouletteHelpWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RouletteHelpWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2RouletteHelpWnd@@8
rdata$r	SEGMENT
??_R2RouletteHelpWnd@@8 DD FLAT:??_R1A@?0A@EA@RouletteHelpWnd@@8 ; RouletteHelpWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3RouletteHelpWnd@@8
rdata$r	SEGMENT
??_R3RouletteHelpWnd@@8 DD 00H				; RouletteHelpWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2RouletteHelpWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRouletteHelpWnd@@@8
_DATA	SEGMENT
??_R0?AVRouletteHelpWnd@@@8 DD FLAT:??_7type_info@@6B@	; RouletteHelpWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRouletteHelpWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RouletteHelpWnd@@6B@
rdata$r	SEGMENT
??_R4RouletteHelpWnd@@6B@ DD 00H			; RouletteHelpWnd::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRouletteHelpWnd@@@8
	DD	FLAT:??_R3RouletteHelpWnd@@8
rdata$r	ENDS
;	COMDAT ??_7RouletteHelpWnd@@6B@
CONST	SEGMENT
??_7RouletteHelpWnd@@6B@ DD FLAT:??_R4RouletteHelpWnd@@6B@ ; RouletteHelpWnd::`vftable'
	DD	FLAT:?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
	DD	FLAT:?AddRenderImage@RouletteHelpWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z
	DD	FLAT:?ParseExtraInfo@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z
	DD	FLAT:?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z
	DD	FLAT:?SetWindowAlpha@ioWnd@@UAEXH@Z
	DD	FLAT:?SetActive@ioWnd@@UAEXXZ
	DD	FLAT:?SetInActive@ioWnd@@UAEXXZ
	DD	FLAT:?ClearElementImageList@ioWnd@@UAEXXZ
	DD	FLAT:?SetSize@ioWnd@@UAEXHH@Z
	DD	FLAT:?SetPositionToDefault@ioWnd@@UAEXHH_N0@Z
	DD	FLAT:?IsNeedProcess@ioWnd@@UBE_NXZ
	DD	FLAT:?IsCanMouseReaction@ioWnd@@UBE_NXZ
	DD	FLAT:?AddChild@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?DeleteChild@ioWnd@@UAEXK@Z
	DD	FLAT:?DeleteAllChild@ioWnd@@UAEXXZ
	DD	FLAT:?OnRenderShowAndHide@ioWnd@@MAE_NXZ
	DD	FLAT:?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRender@RouletteHelpWnd@@MAEXXZ
	DD	FLAT:?OnRenderAfterChild@ioWnd@@MAEXXZ
	DD	FLAT:?OnProcess@ioWnd@@MAEXM@Z
	DD	FLAT:?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z
	DD	FLAT:?CheckFrameReSize@ioWnd@@MAEXHHHH@Z
	DD	FLAT:?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z
	DD	FLAT:?iwm_create@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_destroy@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_lbuttondown@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonup@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_command@RouletteHelpWnd@@UAEXPAVioWnd@@HK@Z
	DD	FLAT:?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_vscroll@ioWnd@@UAEXKH@Z
	DD	FLAT:?iwm_wheel@ioWnd@@UAEXH@Z
	DD	FLAT:?iwm_show@RouletteHelpWnd@@UAEXXZ
	DD	FLAT:?iwm_hide@RouletteHelpWnd@@UAEXXZ
	DD	FLAT:?iwm_esc@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_spacebar@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_gototop@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragleave@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z
	DD	FLAT:?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z
	DD	FLAT:?IsEXType@ioWnd@@UBE_NXZ
	DD	FLAT:?GetWndType@ioWnd@@UBEKXZ
	DD	FLAT:?RenderWnd@ioWnd@@UAEXXZ
	DD	FLAT:?SetIDEX@ioWnd@@UAEXAAK_N@Z
	DD	FLAT:?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?GetHeaderFileName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetTemplateName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetDefClassName@ioWnd@@UBEPBDXZ
	DD	FLAT:?_Clone@ioWnd@@UAEPAV1@XZ
	DD	FLAT:?Copy@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z
	DD	FLAT:?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?SetPosX@ioWnd@@UAEXH@Z
	DD	FLAT:?SetPosY@ioWnd@@UAEXH@Z
	DD	FLAT:?SetWidth@ioWnd@@UAEXH@Z
	DD	FLAT:?SetHeight@ioWnd@@UAEXH@Z
	DD	FLAT:?GetNumFixedRenderFrame@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?GetNumFixedRenderImage@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z
	DD	FLAT:?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z
	DD	FLAT:??_ERouletteHelpWnd@@UAEPAXI@Z
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0RouletteHelpWnd@@QAE@XZ
_TEXT	SEGMENT
??0RouletteHelpWnd@@QAE@XZ PROC				; RouletteHelpWnd::RouletteHelpWnd, COMDAT
; _this$ = ecx

; 8    : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioWnd@@QAE@XZ

; 9    : 	m_pIcon = NULL;

  00009	83 a6 60 01 00
	00 00		 and	 DWORD PTR [esi+352], 0

; 10   : 	m_pIconBack = NULL;

  00010	83 a6 64 01 00
	00 00		 and	 DWORD PTR [esi+356], 0
  00017	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7RouletteHelpWnd@@6B@

; 11   : }

  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	c3		 ret	 0
??0RouletteHelpWnd@@QAE@XZ ENDP				; RouletteHelpWnd::RouletteHelpWnd
_TEXT	ENDS
PUBLIC	??1RouletteHelpWnd@@UAE@XZ			; RouletteHelpWnd::~RouletteHelpWnd
EXTRN	__imp_??1ioWnd@@UAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1RouletteHelpWnd@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1RouletteHelpWnd@@UAE@XZ$0
__ehfuncinfo$??1RouletteHelpWnd@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1RouletteHelpWnd@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1RouletteHelpWnd@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1RouletteHelpWnd@@UAE@XZ PROC				; RouletteHelpWnd::~RouletteHelpWnd, COMDAT
; _this$ = ecx

; 14   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1RouletteHelpWnd@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00011	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7RouletteHelpWnd@@6B@

; 15   : 	SAFEDELETE( m_pIcon );

  00017	8b 8f 60 01 00
	00		 mov	 ecx, DWORD PTR [edi+352]
  0001d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00021	85 c9		 test	 ecx, ecx
  00023	74 0e		 je	 SHORT $LN2@RouletteHe
  00025	8b 01		 mov	 eax, DWORD PTR [ecx]
  00027	6a 01		 push	 1
  00029	ff 50 40	 call	 DWORD PTR [eax+64]
  0002c	83 a7 60 01 00
	00 00		 and	 DWORD PTR [edi+352], 0
$LN2@RouletteHe:

; 16   : 	SAFEDELETE( m_pIconBack );

  00033	8b 8f 64 01 00
	00		 mov	 ecx, DWORD PTR [edi+356]
  00039	85 c9		 test	 ecx, ecx
  0003b	74 0e		 je	 SHORT $LN1@RouletteHe
  0003d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0003f	6a 01		 push	 1
  00041	ff 50 40	 call	 DWORD PTR [eax+64]
  00044	83 a7 64 01 00
	00 00		 and	 DWORD PTR [edi+356], 0
$LN1@RouletteHe:

; 17   : }

  0004b	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0004f	8b cf		 mov	 ecx, edi
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioWnd@@UAE@XZ
  00057	e8 00 00 00 00	 call	 __EH_epilog3
  0005c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1RouletteHelpWnd@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioWnd@@UAE@XZ
__ehhandler$??1RouletteHelpWnd@@UAE@XZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1RouletteHelpWnd@@UAE@XZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1RouletteHelpWnd@@UAE@XZ ENDP				; RouletteHelpWnd::~RouletteHelpWnd
; Function compile flags: /Ogsp
;	COMDAT ?iwm_show@RouletteHelpWnd@@UAEXXZ
_TEXT	SEGMENT
?iwm_show@RouletteHelpWnd@@UAEXXZ PROC			; RouletteHelpWnd::iwm_show, COMDAT
; _this$ = ecx

; 37   : }

  00000	c3		 ret	 0
?iwm_show@RouletteHelpWnd@@UAEXXZ ENDP			; RouletteHelpWnd::iwm_show
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?iwm_hide@RouletteHelpWnd@@UAEXXZ
_TEXT	SEGMENT
?iwm_hide@RouletteHelpWnd@@UAEXXZ PROC			; RouletteHelpWnd::iwm_hide, COMDAT
; _this$ = ecx

; 41   : }

  00000	c3		 ret	 0
?iwm_hide@RouletteHelpWnd@@UAEXXZ ENDP			; RouletteHelpWnd::iwm_hide
_TEXT	ENDS
EXTRN	__imp_?HideWnd@ioWnd@@QAEXXZ:PROC
EXTRN	__imp_?GetID@ioWnd@@QBEKXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?iwm_command@RouletteHelpWnd@@UAEXPAVioWnd@@HK@Z
_TEXT	SEGMENT
_pWnd$ = 8						; size = 4
_cmd$ = 12						; size = 4
_param$ = 16						; size = 4
?iwm_command@RouletteHelpWnd@@UAEXPAVioWnd@@HK@Z PROC	; RouletteHelpWnd::iwm_command, COMDAT
; _this$ = ecx

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 45   : 	DWORD dwID = pWnd->GetID();

  00006	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetID@ioWnd@@QBEKXZ

; 46   : 	switch( dwID )

  0000f	48		 dec	 eax
  00010	83 f8 01	 cmp	 eax, 1
  00013	77 0e		 ja	 SHORT $LN1@iwm_comman

; 47   : 	{
; 48   : 	case ID_EXIT:
; 49   : 	case ID_CLOSE:
; 50   : 		if( cmd == IOBN_BTNUP )

  00015	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  00019	75 08		 jne	 SHORT $LN1@iwm_comman

; 51   : 		{
; 52   : 			HideWnd();

  0001b	8b ce		 mov	 ecx, esi
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HideWnd@ioWnd@@QAEXXZ
$LN1@iwm_comman:
  00023	5e		 pop	 esi

; 53   : 		}
; 54   : 		break;
; 55   : 	}
; 56   : }

  00024	5d		 pop	 ebp
  00025	c2 0c 00	 ret	 12			; 0000000cH
?iwm_command@RouletteHelpWnd@@UAEXPAVioWnd@@HK@Z ENDP	; RouletteHelpWnd::iwm_command
_TEXT	ENDS
PUBLIC	??_7RouletteCenterHelpWnd@@6B@			; RouletteCenterHelpWnd::`vftable'
PUBLIC	??0RouletteCenterHelpWnd@@QAE@XZ		; RouletteCenterHelpWnd::RouletteCenterHelpWnd
PUBLIC	??_R4RouletteCenterHelpWnd@@6B@			; RouletteCenterHelpWnd::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRouletteCenterHelpWnd@@@8		; RouletteCenterHelpWnd `RTTI Type Descriptor'
PUBLIC	??_R3RouletteCenterHelpWnd@@8			; RouletteCenterHelpWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RouletteCenterHelpWnd@@8			; RouletteCenterHelpWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RouletteCenterHelpWnd@@8		; RouletteCenterHelpWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?AddRenderImage@RouletteCenterHelpWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z ; RouletteCenterHelpWnd::AddRenderImage
PUBLIC	?SetPositionToDefault@RouletteCenterHelpWnd@@MAEXHH_N0@Z ; RouletteCenterHelpWnd::SetPositionToDefault
PUBLIC	?OnRender@RouletteCenterHelpWnd@@MAEXXZ		; RouletteCenterHelpWnd::OnRender
PUBLIC	?OnProcess@RouletteCenterHelpWnd@@MAEXM@Z	; RouletteCenterHelpWnd::OnProcess
PUBLIC	?iwm_show@RouletteCenterHelpWnd@@UAEXXZ		; RouletteCenterHelpWnd::iwm_show
PUBLIC	?iwm_hide@RouletteCenterHelpWnd@@UAEXXZ		; RouletteCenterHelpWnd::iwm_hide
EXTRN	?iwm_command@ioWnd@@UAEXPAV1@HK@Z:PROC		; ioWnd::iwm_command
EXTRN	??_ERouletteCenterHelpWnd@@UAEPAXI@Z:PROC	; RouletteCenterHelpWnd::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@RouletteCenterHelpWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RouletteCenterHelpWnd@@8 DD FLAT:??_R0?AVRouletteCenterHelpWnd@@@8 ; RouletteCenterHelpWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RouletteCenterHelpWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2RouletteCenterHelpWnd@@8
rdata$r	SEGMENT
??_R2RouletteCenterHelpWnd@@8 DD FLAT:??_R1A@?0A@EA@RouletteCenterHelpWnd@@8 ; RouletteCenterHelpWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3RouletteCenterHelpWnd@@8
rdata$r	SEGMENT
??_R3RouletteCenterHelpWnd@@8 DD 00H			; RouletteCenterHelpWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2RouletteCenterHelpWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRouletteCenterHelpWnd@@@8
_DATA	SEGMENT
??_R0?AVRouletteCenterHelpWnd@@@8 DD FLAT:??_7type_info@@6B@ ; RouletteCenterHelpWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRouletteCenterHelpWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RouletteCenterHelpWnd@@6B@
rdata$r	SEGMENT
??_R4RouletteCenterHelpWnd@@6B@ DD 00H			; RouletteCenterHelpWnd::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRouletteCenterHelpWnd@@@8
	DD	FLAT:??_R3RouletteCenterHelpWnd@@8
rdata$r	ENDS
;	COMDAT ??_7RouletteCenterHelpWnd@@6B@
CONST	SEGMENT
??_7RouletteCenterHelpWnd@@6B@ DD FLAT:??_R4RouletteCenterHelpWnd@@6B@ ; RouletteCenterHelpWnd::`vftable'
	DD	FLAT:?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
	DD	FLAT:?AddRenderImage@RouletteCenterHelpWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z
	DD	FLAT:?ParseExtraInfo@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z
	DD	FLAT:?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z
	DD	FLAT:?SetWindowAlpha@ioWnd@@UAEXH@Z
	DD	FLAT:?SetActive@ioWnd@@UAEXXZ
	DD	FLAT:?SetInActive@ioWnd@@UAEXXZ
	DD	FLAT:?ClearElementImageList@ioWnd@@UAEXXZ
	DD	FLAT:?SetSize@ioWnd@@UAEXHH@Z
	DD	FLAT:?SetPositionToDefault@RouletteCenterHelpWnd@@MAEXHH_N0@Z
	DD	FLAT:?IsNeedProcess@ioWnd@@UBE_NXZ
	DD	FLAT:?IsCanMouseReaction@ioWnd@@UBE_NXZ
	DD	FLAT:?AddChild@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?DeleteChild@ioWnd@@UAEXK@Z
	DD	FLAT:?DeleteAllChild@ioWnd@@UAEXXZ
	DD	FLAT:?OnRenderShowAndHide@ioWnd@@MAE_NXZ
	DD	FLAT:?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRender@RouletteCenterHelpWnd@@MAEXXZ
	DD	FLAT:?OnRenderAfterChild@ioWnd@@MAEXXZ
	DD	FLAT:?OnProcess@RouletteCenterHelpWnd@@MAEXM@Z
	DD	FLAT:?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z
	DD	FLAT:?CheckFrameReSize@ioWnd@@MAEXHHHH@Z
	DD	FLAT:?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z
	DD	FLAT:?iwm_create@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_destroy@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_lbuttondown@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonup@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_command@ioWnd@@UAEXPAV1@HK@Z
	DD	FLAT:?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_vscroll@ioWnd@@UAEXKH@Z
	DD	FLAT:?iwm_wheel@ioWnd@@UAEXH@Z
	DD	FLAT:?iwm_show@RouletteCenterHelpWnd@@UAEXXZ
	DD	FLAT:?iwm_hide@RouletteCenterHelpWnd@@UAEXXZ
	DD	FLAT:?iwm_esc@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_spacebar@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_gototop@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragleave@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z
	DD	FLAT:?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z
	DD	FLAT:?IsEXType@ioWnd@@UBE_NXZ
	DD	FLAT:?GetWndType@ioWnd@@UBEKXZ
	DD	FLAT:?RenderWnd@ioWnd@@UAEXXZ
	DD	FLAT:?SetIDEX@ioWnd@@UAEXAAK_N@Z
	DD	FLAT:?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?GetHeaderFileName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetTemplateName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetDefClassName@ioWnd@@UBEPBDXZ
	DD	FLAT:?_Clone@ioWnd@@UAEPAV1@XZ
	DD	FLAT:?Copy@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z
	DD	FLAT:?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?SetPosX@ioWnd@@UAEXH@Z
	DD	FLAT:?SetPosY@ioWnd@@UAEXH@Z
	DD	FLAT:?SetWidth@ioWnd@@UAEXH@Z
	DD	FLAT:?SetHeight@ioWnd@@UAEXH@Z
	DD	FLAT:?GetNumFixedRenderFrame@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?GetNumFixedRenderImage@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z
	DD	FLAT:?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z
	DD	FLAT:??_ERouletteCenterHelpWnd@@UAEPAXI@Z
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0RouletteCenterHelpWnd@@QAE@XZ
_TEXT	SEGMENT
??0RouletteCenterHelpWnd@@QAE@XZ PROC			; RouletteCenterHelpWnd::RouletteCenterHelpWnd, COMDAT
; _this$ = ecx

; 124  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioWnd@@QAE@XZ

; 125  : 	m_iAlphaRate = 0;

  00009	33 c0		 xor	 eax, eax
  0000b	89 86 64 01 00
	00		 mov	 DWORD PTR [esi+356], eax

; 126  : 	m_State = US_NONE;

  00011	89 86 60 01 00
	00		 mov	 DWORD PTR [esi+352], eax

; 127  : 
; 128  : 	m_pTextBack = NULL;

  00017	89 86 68 01 00
	00		 mov	 DWORD PTR [esi+360], eax
  0001d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7RouletteCenterHelpWnd@@6B@

; 129  : }

  00023	8b c6		 mov	 eax, esi
  00025	5e		 pop	 esi
  00026	c3		 ret	 0
??0RouletteCenterHelpWnd@@QAE@XZ ENDP			; RouletteCenterHelpWnd::RouletteCenterHelpWnd
_TEXT	ENDS
PUBLIC	??1RouletteCenterHelpWnd@@UAE@XZ		; RouletteCenterHelpWnd::~RouletteCenterHelpWnd
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1RouletteCenterHelpWnd@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1RouletteCenterHelpWnd@@UAE@XZ$0
__ehfuncinfo$??1RouletteCenterHelpWnd@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1RouletteCenterHelpWnd@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1RouletteCenterHelpWnd@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1RouletteCenterHelpWnd@@UAE@XZ PROC			; RouletteCenterHelpWnd::~RouletteCenterHelpWnd, COMDAT
; _this$ = ecx

; 132  : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1RouletteCenterHelpWnd@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7RouletteCenterHelpWnd@@6B@

; 133  : 	m_iAlphaRate = 0;
; 134  : 	m_State = US_NONE;
; 135  : 
; 136  : 	SAFEDELETE( m_pTextBack );

  00017	8b 8e 68 01 00
	00		 mov	 ecx, DWORD PTR [esi+360]
  0001d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00021	83 a6 64 01 00
	00 00		 and	 DWORD PTR [esi+356], 0
  00028	83 a6 60 01 00
	00 00		 and	 DWORD PTR [esi+352], 0
  0002f	85 c9		 test	 ecx, ecx
  00031	74 0e		 je	 SHORT $LN1@RouletteCe
  00033	8b 01		 mov	 eax, DWORD PTR [ecx]
  00035	6a 01		 push	 1
  00037	ff 50 40	 call	 DWORD PTR [eax+64]
  0003a	83 a6 68 01 00
	00 00		 and	 DWORD PTR [esi+360], 0
$LN1@RouletteCe:

; 137  : }

  00041	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00045	8b ce		 mov	 ecx, esi
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioWnd@@UAE@XZ
  0004d	e8 00 00 00 00	 call	 __EH_epilog3
  00052	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1RouletteCenterHelpWnd@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioWnd@@UAE@XZ
__ehhandler$??1RouletteCenterHelpWnd@@UAE@XZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1RouletteCenterHelpWnd@@UAE@XZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1RouletteCenterHelpWnd@@UAE@XZ ENDP			; RouletteCenterHelpWnd::~RouletteCenterHelpWnd
PUBLIC	__real@3fc999999999999a
EXTRN	__imp_?SetWndPos@ioWnd@@QAEXHH@Z:PROC
EXTRN	?Width@Setting@@SAHXZ:PROC			; Setting::Width
EXTRN	?Height@Setting@@SAHXZ:PROC			; Setting::Height
EXTRN	__fltused:DWORD
;	COMDAT __real@3fc999999999999a
CONST	SEGMENT
__real@3fc999999999999a DQ 03fc999999999999ar	; 0.2
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?SetPositionToDefault@RouletteCenterHelpWnd@@MAEXHH_N0@Z
_TEXT	SEGMENT
_iParentWidth$ = 8					; size = 4
_iParentHeight$ = 12					; size = 4
_bChildMove$ = 16					; size = 1
_bCreate$ = 20						; size = 1
?SetPositionToDefault@RouletteCenterHelpWnd@@MAEXHH_N0@Z PROC ; RouletteCenterHelpWnd::SetPositionToDefault, COMDAT
; _this$ = ecx

; 151  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 152  : 	SetWndPos( Setting::Width() / 2, (Setting::Height() * 0.2 ) );

  00003	e8 00 00 00 00	 call	 ?Height@Setting@@SAHXZ	; Setting::Height
  00008	0f 57 c0	 xorps	 xmm0, xmm0
  0000b	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0000f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00017	f2 0f 2c c0	 cvttsd2si eax, xmm0
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?Width@Setting@@SAHXZ	; Setting::Width
  00021	99		 cdq
  00022	2b c2		 sub	 eax, edx
  00024	d1 f8		 sar	 eax, 1
  00026	50		 push	 eax
  00027	8b ce		 mov	 ecx, esi
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetWndPos@ioWnd@@QAEXHH@Z
  0002f	5e		 pop	 esi

; 153  : }

  00030	c2 10 00	 ret	 16			; 00000010H
?SetPositionToDefault@RouletteCenterHelpWnd@@MAEXHH_N0@Z ENDP ; RouletteCenterHelpWnd::SetPositionToDefault
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?iwm_show@RouletteCenterHelpWnd@@UAEXXZ
_TEXT	SEGMENT
?iwm_show@RouletteCenterHelpWnd@@UAEXXZ PROC		; RouletteCenterHelpWnd::iwm_show, COMDAT
; _this$ = ecx

; 156  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 157  : 	SetPositionToDefault( Setting::Width(), Setting::Height(), true );

  00004	8b 37		 mov	 esi, DWORD PTR [edi]
  00006	6a 00		 push	 0
  00008	6a 01		 push	 1
  0000a	e8 00 00 00 00	 call	 ?Height@Setting@@SAHXZ	; Setting::Height
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?Width@Setting@@SAHXZ	; Setting::Width
  00015	50		 push	 eax
  00016	8b cf		 mov	 ecx, edi
  00018	ff 56 30	 call	 DWORD PTR [esi+48]
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi

; 158  : }

  0001d	c3		 ret	 0
?iwm_show@RouletteCenterHelpWnd@@UAEXXZ ENDP		; RouletteCenterHelpWnd::iwm_show
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?iwm_hide@RouletteCenterHelpWnd@@UAEXXZ
_TEXT	SEGMENT
?iwm_hide@RouletteCenterHelpWnd@@UAEXXZ PROC		; RouletteCenterHelpWnd::iwm_hide, COMDAT
; _this$ = ecx

; 162  : 	m_iAlphaRate = 0;

  00000	83 a1 64 01 00
	00 00		 and	 DWORD PTR [ecx+356], 0

; 163  : 	m_State = US_NONE;

  00007	83 a1 60 01 00
	00 00		 and	 DWORD PTR [ecx+352], 0

; 164  : }

  0000e	c3		 ret	 0
?iwm_hide@RouletteCenterHelpWnd@@UAEXXZ ENDP		; RouletteCenterHelpWnd::iwm_hide
_TEXT	ENDS
PUBLIC	__real@3f333333
PUBLIC	??_C@_0CA@DFPEINFO@RouletteCenterHelpWnd?3?3OnRender?$AA@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
EXTRN	__imp_?PrintTextAlpha@ioFontManager@@QAAXMMMEPBDZZ:PROC
EXTRN	__imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z:PROC
EXTRN	__imp_?GetSingleton@ioStringManager@@SAAAV1@XZ:PROC
EXTRN	__imp_?SetTextColor@ioFontManager@@QAEXK@Z:PROC
EXTRN	__imp_?SetBkColor@ioFontManager@@QAEXHHH@Z:PROC
EXTRN	__imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z:PROC
EXTRN	__imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z:PROC
EXTRN	__imp_?GetSingleton@ioFontManager@@SAAAV1@XZ:PROC
EXTRN	__imp_?GetWidth@ioUIRenderElement@@QBEHXZ:PROC
EXTRN	__imp_?GetDerivedPosY@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?GetDerivedPosX@ioWnd@@QBEHXZ:PROC
;	COMDAT __real@3f333333
CONST	SEGMENT
__real@3f333333 DD 03f333333r			; 0.7
CONST	ENDS
;	COMDAT ??_C@_0CA@DFPEINFO@RouletteCenterHelpWnd?3?3OnRender?$AA@
CONST	SEGMENT
??_C@_0CA@DFPEINFO@RouletteCenterHelpWnd?3?3OnRender?$AA@ DB 'RouletteCen'
	DB	'terHelpWnd::OnRender', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?OnRender@RouletteCenterHelpWnd@@MAEXXZ
_TEXT	SEGMENT
_iXPos$ = -8						; size = 4
_iYPos$ = -4						; size = 4
?OnRender@RouletteCenterHelpWnd@@MAEXXZ PROC		; RouletteCenterHelpWnd::OnRender, COMDAT
; _this$ = ecx

; 192  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	53		 push	 ebx
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx

; 193  : 	int iXPos = GetDerivedPosX();

  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosX@ioWnd@@QBEHXZ

; 194  : 	int iYPos = GetDerivedPosY();

  00010	8b cf		 mov	 ecx, edi
  00012	89 45 f8	 mov	 DWORD PTR _iXPos$[ebp], eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosY@ioWnd@@QBEHXZ

; 195  : 
; 196  : 	if( m_pTextBack )

  0001b	8b 8f 68 01 00
	00		 mov	 ecx, DWORD PTR [edi+360]
  00021	33 db		 xor	 ebx, ebx
  00023	89 45 fc	 mov	 DWORD PTR _iYPos$[ebp], eax
  00026	3b cb		 cmp	 ecx, ebx
  00028	74 4f		 je	 SHORT $LN1@OnRender

; 197  : 	{
; 198  : 		int iXOffset = m_pTextBack->GetWidth()/2;

  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetWidth@ioUIRenderElement@@QBEHXZ

; 199  : 		m_pTextBack->SetAlpha( m_iAlphaRate );

  00030	8b 8f 68 01 00
	00		 mov	 ecx, DWORD PTR [edi+360]
  00036	99		 cdq
  00037	2b c2		 sub	 eax, edx
  00039	0f b6 97 64 01
	00 00		 movzx	 edx, BYTE PTR [edi+356]
  00040	8b f0		 mov	 esi, eax
  00042	8b 01		 mov	 eax, DWORD PTR [ecx]
  00044	52		 push	 edx
  00045	d1 fe		 sar	 esi, 1
  00047	ff 50 30	 call	 DWORD PTR [eax+48]

; 200  : 		m_pTextBack->Render( iXPos - iXOffset, iYPos );

  0004a	8b 8f 68 01 00
	00		 mov	 ecx, DWORD PTR [edi+360]
  00050	66 0f 6e 45 fc	 movd	 xmm0, DWORD PTR _iYPos$[ebp]
  00055	8b 55 f8	 mov	 edx, DWORD PTR _iXPos$[ebp]
  00058	8b 01		 mov	 eax, DWORD PTR [ecx]
  0005a	53		 push	 ebx
  0005b	53		 push	 ebx
  0005c	53		 push	 ebx
  0005d	53		 push	 ebx
  0005e	51		 push	 ecx
  0005f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00062	51		 push	 ecx
  00063	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00069	2b d6		 sub	 edx, esi
  0006b	0f 57 c0	 xorps	 xmm0, xmm0
  0006e	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00072	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00077	ff 10		 call	 DWORD PTR [eax]
$LN1@OnRender:

; 201  : 	}
; 202  : 	g_FontMgr.SetAlignType( TAT_CENTER );

  00079	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?GetSingleton@ioFontManager@@SAAAV1@XZ
  0007f	6a 01		 push	 1
  00081	ff d6		 call	 esi
  00083	8b c8		 mov	 ecx, eax
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 203  : 	g_FontMgr.SetTextStyle( TS_OUTLINE_2X );

  0008b	6a 03		 push	 3
  0008d	ff d6		 call	 esi
  0008f	8b c8		 mov	 ecx, eax
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z

; 204  : 	g_FontMgr.SetBkColor( 0, 0, 0 );

  00097	53		 push	 ebx
  00098	53		 push	 ebx
  00099	53		 push	 ebx
  0009a	ff d6		 call	 esi
  0009c	8b c8		 mov	 ecx, eax
  0009e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetBkColor@ioFontManager@@QAEXHHH@Z

; 205  : 	g_FontMgr.SetTextColor( TCT_DEFAULT_WHITE );

  000a4	6a ff		 push	 -1
  000a6	ff d6		 call	 esi
  000a8	8b c8		 mov	 ecx, eax
  000aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 206  : 	g_FontMgr.PrintTextAlpha( iXPos, iYPos+2, FONT_SIZE_14, m_iAlphaRate, STR(1) );

  000b0	53		 push	 ebx
  000b1	6a 01		 push	 1
  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  000b8	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@DFPEINFO@RouletteCenterHelpWnd?3?3OnRender?$AA@
  000bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioStringManager@@SAAAV1@XZ
  000c3	8b c8		 mov	 ecx, eax
  000c5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  000cb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  000d3	50		 push	 eax
  000d4	0f b6 87 64 01
	00 00		 movzx	 eax, BYTE PTR [edi+356]
  000db	50		 push	 eax
  000dc	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  000df	83 ec 0c	 sub	 esp, 12			; 0000000cH
  000e2	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000e8	0f 57 c0	 xorps	 xmm0, xmm0
  000eb	83 c0 02	 add	 eax, 2
  000ee	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000f2	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000f8	66 0f 6e 45 f8	 movd	 xmm0, DWORD PTR _iXPos$[ebp]
  000fd	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00100	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00105	ff d6		 call	 esi
  00107	50		 push	 eax
  00108	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTextAlpha@ioFontManager@@QAAXMMMEPBDZZ
  0010e	83 c4 18	 add	 esp, 24			; 00000018H
  00111	5f		 pop	 edi
  00112	5e		 pop	 esi
  00113	5b		 pop	 ebx

; 207  : }

  00114	c9		 leave
  00115	c3		 ret	 0
?OnRender@RouletteCenterHelpWnd@@MAEXXZ ENDP		; RouletteCenterHelpWnd::OnRender
_TEXT	ENDS
PUBLIC	?SetInfo@RouletteCenterHelpWnd@@QAEXXZ		; RouletteCenterHelpWnd::SetInfo
EXTRN	__imp_?ShowWnd@ioWnd@@QAEXXZ:PROC
EXTRN	__imp_?IsShow@ioWnd@@QBE_NXZ:PROC
EXTRN	?GetEtcCoinMoney@ioMyInfo@@QAEHK@Z:PROC		; ioMyInfo::GetEtcCoinMoney
EXTRN	?GetSingleton@ioMyInfo@@SAAAV1@XZ:PROC		; ioMyInfo::GetSingleton
; Function compile flags: /Ogsp
;	COMDAT ?SetInfo@RouletteCenterHelpWnd@@QAEXXZ
_TEXT	SEGMENT
?SetInfo@RouletteCenterHelpWnd@@QAEXXZ PROC		; RouletteCenterHelpWnd::SetInfo, COMDAT
; _this$ = ecx

; 210  : {

  00000	56		 push	 esi

; 211  : 	if( g_MyInfo.GetEtcCoinMoney( ioEtcItem::EIT_ETC_ROULETTE_COIN ) <= 0 )

  00001	68 96 4a 0f 00	 push	 1002134			; 000f4a96H
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  0000d	8b c8		 mov	 ecx, eax
  0000f	e8 00 00 00 00	 call	 ?GetEtcCoinMoney@ioMyInfo@@QAEHK@Z ; ioMyInfo::GetEtcCoinMoney
  00014	85 c0		 test	 eax, eax
  00016	7e 59		 jle	 SHORT $LN2@SetInfo

; 212  : 		return;
; 213  : 
; 214  : 	if( m_State == US_START || m_State == US_STAY )

  00018	8b 8e 60 01 00
	00		 mov	 ecx, DWORD PTR [esi+352]
  0001e	33 d2		 xor	 edx, edx
  00020	42		 inc	 edx
  00021	3b ca		 cmp	 ecx, edx
  00023	74 4c		 je	 SHORT $LN2@SetInfo
  00025	83 f9 02	 cmp	 ecx, 2
  00028	74 47		 je	 SHORT $LN2@SetInfo

; 215  : 		return;
; 216  : 
; 217  : 	m_State = US_START;

  0002a	89 96 60 01 00
	00		 mov	 DWORD PTR [esi+352], edx

; 218  : 	SetWndPos( Setting::Width() / 2, (Setting::Height() * 0.2 ) );

  00030	e8 00 00 00 00	 call	 ?Height@Setting@@SAHXZ	; Setting::Height
  00035	0f 57 c0	 xorps	 xmm0, xmm0
  00038	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0003c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00044	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?Width@Setting@@SAHXZ	; Setting::Width
  0004e	99		 cdq
  0004f	2b c2		 sub	 eax, edx
  00051	d1 f8		 sar	 eax, 1
  00053	50		 push	 eax
  00054	8b ce		 mov	 ecx, esi
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetWndPos@ioWnd@@QAEXHH@Z

; 219  : 
; 220  : 	if( !IsShow() )

  0005c	8b ce		 mov	 ecx, esi
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsShow@ioWnd@@QBE_NXZ
  00064	84 c0		 test	 al, al
  00066	75 09		 jne	 SHORT $LN2@SetInfo

; 221  : 		ShowWnd();

  00068	8b ce		 mov	 ecx, esi
  0006a	5e		 pop	 esi
  0006b	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_?ShowWnd@ioWnd@@QAEXXZ
$LN2@SetInfo:
  00071	5e		 pop	 esi

; 222  : }

  00072	c3		 ret	 0
?SetInfo@RouletteCenterHelpWnd@@QAEXXZ ENDP		; RouletteCenterHelpWnd::SetInfo
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
PUBLIC	?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ	; ioMyInfo::GetPublicID
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomyinfo.h
;	COMDAT ?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ
_TEXT	SEGMENT
?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ PROC	; ioMyInfo::GetPublicID, COMDAT
; _this$ = ecx

; 517  : 	const ioHashString& GetPublicID() const { return m_user_data.m_public_id; }    

  00000	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  00003	c3		 ret	 0
?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ ENDP	; ioMyInfo::GetPublicID
_TEXT	ENDS
PUBLIC	?GetState@ioRouletteManager@@QAEHXZ		; ioRouletteManager::GetState
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioroulettemanager.h
;	COMDAT ?GetState@ioRouletteManager@@QAEHXZ
_TEXT	SEGMENT
?GetState@ioRouletteManager@@QAEHXZ PROC		; ioRouletteManager::GetState, COMDAT
; _this$ = ecx

; 214  : 	int GetState() { return (int)m_RouletteState; }

  00000	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  00003	c3		 ret	 0
?GetState@ioRouletteManager@@QAEHXZ ENDP		; ioRouletteManager::GetState
_TEXT	ENDS
PUBLIC	?size@?$vector@UResultGroup@ioRouletteManager@@V?$allocator@UResultGroup@ioRouletteManager@@@std@@@std@@QBEIXZ ; std::vector<ioRouletteManager::ResultGroup,std::allocator<ioRouletteManager::ResultGroup> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@UResultGroup@ioRouletteManager@@V?$allocator@UResultGroup@ioRouletteManager@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UResultGroup@ioRouletteManager@@V?$allocator@UResultGroup@ioRouletteManager@@@std@@@std@@QBEIXZ PROC ; std::vector<ioRouletteManager::ResultGroup,std::allocator<ioRouletteManager::ResultGroup> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 70		 push	 112			; 00000070H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 880  : 		}

  0000b	c3		 ret	 0
?size@?$vector@UResultGroup@ioRouletteManager@@V?$allocator@UResultGroup@ioRouletteManager@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioRouletteManager::ResultGroup,std::allocator<ioRouletteManager::ResultGroup> >::size
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GRouletteHelpWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GRouletteHelpWnd@@UAEPAXI@Z PROC			; RouletteHelpWnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1RouletteHelpWnd@@UAE@XZ ; RouletteHelpWnd::~RouletteHelpWnd
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GRouletteHelpWnd@@UAEPAXI@Z ENDP			; RouletteHelpWnd::`scalar deleting destructor'
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GRouletteCenterHelpWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GRouletteCenterHelpWnd@@UAEPAXI@Z PROC		; RouletteCenterHelpWnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1RouletteCenterHelpWnd@@UAE@XZ ; RouletteCenterHelpWnd::~RouletteCenterHelpWnd
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@2
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@2:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GRouletteCenterHelpWnd@@UAEPAXI@Z ENDP		; RouletteCenterHelpWnd::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__real@406fe00000000000
PUBLIC	__real@c06fe00000000000
PUBLIC	__real@4072c00000000000
PUBLIC	__real@408f400000000000
EXTRN	?CheckCharRange@ioRouletteManager@@QAE_NABVioHashString@@@Z:PROC ; ioRouletteManager::CheckCharRange
EXTRN	?GetSingleton@ioRouletteManager@@SAAAV1@XZ:PROC	; ioRouletteManager::GetSingleton
;	COMDAT __real@406fe00000000000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioroulettemanager.h
CONST	SEGMENT
__real@406fe00000000000 DQ 0406fe00000000000r	; 255
CONST	ENDS
;	COMDAT __real@c06fe00000000000
CONST	SEGMENT
__real@c06fe00000000000 DQ 0c06fe00000000000r	; -255
CONST	ENDS
;	COMDAT __real@4072c00000000000
CONST	SEGMENT
__real@4072c00000000000 DQ 04072c00000000000r	; 300
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\roulettehelpwnd.cpp
CONST	ENDS
;	COMDAT ?OnProcess@RouletteCenterHelpWnd@@MAEXM@Z
_TEXT	SEGMENT
_fTimePerSec$ = 8					; size = 4
?OnProcess@RouletteCenterHelpWnd@@MAEXM@Z PROC		; RouletteCenterHelpWnd::OnProcess, COMDAT
; _this$ = ecx

; 167  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 168  : 	float fRate = static_cast<float>( ( fTimePerSec * 1000 ) / 300 );

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fTimePerSec$[ebp]
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx

; 169  : 
; 170  : 	switch( m_State )

  0000b	8b 86 60 01 00
	00		 mov	 eax, DWORD PTR [esi+352]
  00011	48		 dec	 eax
  00012	0f 5a c0	 cvtps2pd xmm0, xmm0
  00015	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@408f400000000000
  0001d	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4072c00000000000
  00025	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00029	74 6e		 je	 SHORT $LN7@OnProcess
  0002b	48		 dec	 eax
  0002c	74 3b		 je	 SHORT $LN5@OnProcess
  0002e	48		 dec	 eax
  0002f	0f 85 9e 00 00
	00		 jne	 $LN6@OnProcess

; 182  : 	case US_END:
; 183  : 		m_iAlphaRate -= static_cast<int>( MAX_ALPHA_RATE * fRate );

  00035	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00039	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c06fe00000000000
  00041	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00045	01 86 64 01 00
	00		 add	 DWORD PTR [esi+356], eax
  0004b	8b 86 64 01 00
	00		 mov	 eax, DWORD PTR [esi+356]

; 184  : 		m_iAlphaRate = max( m_iAlphaRate, 0 );

  00051	85 c0		 test	 eax, eax
  00053	7f 02		 jg	 SHORT $LN15@OnProcess
  00055	33 c0		 xor	 eax, eax
$LN15@OnProcess:
  00057	89 86 64 01 00
	00		 mov	 DWORD PTR [esi+356], eax

; 185  : 		if( m_iAlphaRate <= 0 )

  0005d	85 c0		 test	 eax, eax
  0005f	7f 72		 jg	 SHORT $LN6@OnProcess

; 186  : 			HideWnd();

  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HideWnd@ioWnd@@QAEXXZ

; 187  : 		break;

  00067	eb 6a		 jmp	 SHORT $LN6@OnProcess
$LN5@OnProcess:

; 177  : 		break;
; 178  : 	case US_STAY:
; 179  : 		if( !g_RouletteMgr.CheckCharRange( g_MyInfo.GetPublicID() ) || g_RouletteMgr.GetState() != ioRouletteManager::RS_READY )

  00069	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  0006e	83 c0 1c	 add	 eax, 28			; 0000001cH
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?GetSingleton@ioRouletteManager@@SAAAV1@XZ ; ioRouletteManager::GetSingleton
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ?CheckCharRange@ioRouletteManager@@QAE_NABVioHashString@@@Z ; ioRouletteManager::CheckCharRange
  0007e	84 c0		 test	 al, al
  00080	74 0b		 je	 SHORT $LN3@OnProcess
  00082	e8 00 00 00 00	 call	 ?GetSingleton@ioRouletteManager@@SAAAV1@XZ ; ioRouletteManager::GetSingleton
  00087	83 78 28 00	 cmp	 DWORD PTR [eax+40], 0
  0008b	74 46		 je	 SHORT $LN6@OnProcess
$LN3@OnProcess:

; 180  : 			m_State = US_END;

  0008d	c7 86 60 01 00
	00 03 00 00 00	 mov	 DWORD PTR [esi+352], 3

; 181  : 		break;

  00097	eb 3a		 jmp	 SHORT $LN6@OnProcess
$LN7@OnProcess:

; 171  : 	{
; 172  : 	case US_START:
; 173  : 		m_iAlphaRate += static_cast<int>( MAX_ALPHA_RATE * fRate );

  00099	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0009d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  000a5	f2 0f 2c c0	 cvttsd2si eax, xmm0
  000a9	01 86 64 01 00
	00		 add	 DWORD PTR [esi+356], eax
  000af	8b 8e 64 01 00
	00		 mov	 ecx, DWORD PTR [esi+356]

; 174  : 		m_iAlphaRate = min( m_iAlphaRate, MAX_ALPHA_RATE );

  000b5	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  000ba	3b c8		 cmp	 ecx, eax
  000bc	0f 4d c8	 cmovge	 ecx, eax
  000bf	89 8e 64 01 00
	00		 mov	 DWORD PTR [esi+356], ecx

; 175  : 		if( m_iAlphaRate >= MAX_ALPHA_RATE )

  000c5	3b c8		 cmp	 ecx, eax
  000c7	7c 0a		 jl	 SHORT $LN6@OnProcess

; 176  : 			m_State = US_STAY;

  000c9	c7 86 60 01 00
	00 02 00 00 00	 mov	 DWORD PTR [esi+352], 2
$LN6@OnProcess:
  000d3	5e		 pop	 esi

; 188  : 	}
; 189  : }

  000d4	5d		 pop	 ebp
  000d5	c2 04 00	 ret	 4
?OnProcess@RouletteCenterHelpWnd@@MAEXM@Z ENDP		; RouletteCenterHelpWnd::OnProcess
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$?8$04@@YA_NABVioHashString@@AAY04$$CBD@Z	; operator==<5>
EXTRN	__imp_?c_str@ioHashString@@QBEPBDXZ:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iohashstring.h
;	COMDAT ??$?8$04@@YA_NABVioHashString@@AAY04$$CBD@Z
_TEXT	SEGMENT
__t$ = -16						; size = 5
__$ArrayPad$ = -4					; size = 4
_lhs$ = 8						; size = 4
_t$ = 12						; size = 4
??$?8$04@@YA_NABVioHashString@@AAY04$$CBD@Z PROC	; operator==<5>, COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]

; 147  : 	_ENCSTR(t, _t); return ( strcmp( lhs.c_str(), _t ) == 0 );

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _lhs$[ebp]
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 92 00 00
	00		 je	 $LN96@operator
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 f0	 mov	 BYTE PTR __t$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	74 7f		 je	 SHORT $LN95@operator
  0002d	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00030	88 55 f1	 mov	 BYTE PTR __t$[ebp+1], dl
  00033	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  00036	84 d2		 test	 dl, dl
  00038	74 6c		 je	 SHORT $LN94@operator
  0003a	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0003d	88 55 f2	 mov	 BYTE PTR __t$[ebp+2], dl
  00040	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  00043	84 d2		 test	 dl, dl
  00045	74 59		 je	 SHORT $LN93@operator
  00047	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0004a	80 78 04 00	 cmp	 BYTE PTR [eax+4], 0
  0004e	88 55 f3	 mov	 BYTE PTR __t$[ebp+3], dl
  00051	74 63		 je	 SHORT $LN1@operator
  00053	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00056	84 d2		 test	 dl, dl
  00058	74 40		 je	 SHORT $LN91@operator
  0005a	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0005d	88 55 f5	 mov	 BYTE PTR __t$[ebp+5], dl
  00060	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00063	84 d2		 test	 dl, dl
  00065	74 2d		 je	 SHORT $LN90@operator
  00067	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0006a	88 55 f6	 mov	 BYTE PTR __t$[ebp+6], dl
  0006d	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00070	84 d2		 test	 dl, dl
  00072	74 1a		 je	 SHORT $LN89@operator
  00074	8a 40 08	 mov	 al, BYTE PTR [eax+8]
  00077	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0007a	88 55 f7	 mov	 BYTE PTR __t$[ebp+7], dl
  0007d	84 c0		 test	 al, al
  0007f	74 07		 je	 SHORT $LN88@operator
  00081	34 ed		 xor	 al, -19			; ffffffedH
  00083	88 45 f8	 mov	 BYTE PTR __t$[ebp+8], al
  00086	eb 2e		 jmp	 SHORT $LN1@operator
$LN88@operator:
  00088	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  0008c	eb 28		 jmp	 SHORT $LN1@operator
$LN89@operator:
  0008e	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  00092	eb 22		 jmp	 SHORT $LN1@operator
$LN90@operator:
  00094	c6 45 f6 eb	 mov	 BYTE PTR __t$[ebp+6], -21 ; ffffffebH
  00098	eb 1c		 jmp	 SHORT $LN1@operator
$LN91@operator:
  0009a	c6 45 f5 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  0009e	eb 16		 jmp	 SHORT $LN1@operator
$LN93@operator:
  000a0	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  000a4	eb 10		 jmp	 SHORT $LN1@operator
$LN94@operator:
  000a6	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  000aa	eb 0a		 jmp	 SHORT $LN1@operator
$LN95@operator:
  000ac	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  000b0	eb 04		 jmp	 SHORT $LN1@operator
$LN96@operator:
  000b2	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@operator:
  000b6	81 75 f0 ed ec
	eb ea		 xor	 DWORD PTR __t$[ebp], -353637139 ; eaebecedH
  000bd	56		 push	 esi
  000be	c6 45 f4 00	 mov	 BYTE PTR __t$[ebp+4], 0
  000c2	8d 75 f0	 lea	 esi, DWORD PTR __t$[ebp]
  000c5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL111@operator:
  000cb	8a 08		 mov	 cl, BYTE PTR [eax]
  000cd	3a 0e		 cmp	 cl, BYTE PTR [esi]
  000cf	75 1a		 jne	 SHORT $LN112@operator
  000d1	84 c9		 test	 cl, cl
  000d3	74 12		 je	 SHORT $LN113@operator
  000d5	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  000d8	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  000db	75 0e		 jne	 SHORT $LN112@operator
  000dd	83 c0 02	 add	 eax, 2
  000e0	83 c6 02	 add	 esi, 2
  000e3	84 c9		 test	 cl, cl
  000e5	75 e4		 jne	 SHORT $LL111@operator
$LN113@operator:
  000e7	33 c0		 xor	 eax, eax
  000e9	eb 05		 jmp	 SHORT $LN114@operator
$LN112@operator:
  000eb	1b c0		 sbb	 eax, eax
  000ed	83 d8 ff	 sbb	 eax, -1
$LN114@operator:
  000f0	33 c9		 xor	 ecx, ecx
  000f2	85 c0		 test	 eax, eax
  000f4	0f 94 c0	 sete	 al

; 148  : }

  000f7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000fa	33 cd		 xor	 ecx, ebp
  000fc	5e		 pop	 esi
  000fd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00102	c9		 leave
  00103	c3		 ret	 0
??$?8$04@@YA_NABVioHashString@@AAY04$$CBD@Z ENDP	; operator==<5>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$?8$09@@YA_NABVioHashString@@AAY09$$CBD@Z	; operator==<10>
; Function compile flags: /Ogsp
;	COMDAT ??$?8$09@@YA_NABVioHashString@@AAY09$$CBD@Z
_TEXT	SEGMENT
__t$ = -20						; size = 10
__$ArrayPad$ = -4					; size = 4
_lhs$ = 8						; size = 4
_t$ = 12						; size = 4
??$?8$09@@YA_NABVioHashString@@AAY09$$CBD@Z PROC	; operator==<10>, COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]

; 147  : 	_ENCSTR(t, _t); return ( strcmp( lhs.c_str(), _t ) == 0 );

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _lhs$[ebp]
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 0d 01 00
	00		 je	 $LN96@operator@2
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 ec	 mov	 BYTE PTR __t$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 f6 00 00
	00		 je	 $LN95@operator@2
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 ed	 mov	 BYTE PTR __t$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 df 00 00
	00		 je	 $LN94@operator@2
  00042	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00045	88 55 ee	 mov	 BYTE PTR __t$[ebp+2], dl
  00048	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004b	84 d2		 test	 dl, dl
  0004d	0f 84 c8 00 00
	00		 je	 $LN93@operator@2
  00053	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00056	88 55 ef	 mov	 BYTE PTR __t$[ebp+3], dl
  00059	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005c	84 d2		 test	 dl, dl
  0005e	0f 84 b1 00 00
	00		 je	 $LN92@operator@2
  00064	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00067	88 55 f0	 mov	 BYTE PTR __t$[ebp+4], dl
  0006a	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006d	84 d2		 test	 dl, dl
  0006f	0f 84 9a 00 00
	00		 je	 $LN91@operator@2
  00075	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00078	88 55 f1	 mov	 BYTE PTR __t$[ebp+5], dl
  0007b	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007e	84 d2		 test	 dl, dl
  00080	0f 84 83 00 00
	00		 je	 $LN90@operator@2
  00086	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00089	88 55 f2	 mov	 BYTE PTR __t$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	74 70		 je	 SHORT $LN89@operator@2
  00093	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00096	88 55 f3	 mov	 BYTE PTR __t$[ebp+7], dl
  00099	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  0009c	84 d2		 test	 dl, dl
  0009e	74 5d		 je	 SHORT $LN88@operator@2
  000a0	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a3	80 78 09 00	 cmp	 BYTE PTR [eax+9], 0
  000a7	88 55 f4	 mov	 BYTE PTR __t$[ebp+8], dl
  000aa	0f 84 81 00 00
	00		 je	 $LN1@operator@2
  000b0	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000b3	84 d2		 test	 dl, dl
  000b5	74 40		 je	 SHORT $LN86@operator@2
  000b7	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000ba	88 55 f6	 mov	 BYTE PTR __t$[ebp+10], dl
  000bd	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000c0	84 d2		 test	 dl, dl
  000c2	74 2d		 je	 SHORT $LN85@operator@2
  000c4	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000c7	88 55 f7	 mov	 BYTE PTR __t$[ebp+11], dl
  000ca	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000cd	84 d2		 test	 dl, dl
  000cf	74 1a		 je	 SHORT $LN84@operator@2
  000d1	8a 40 0d	 mov	 al, BYTE PTR [eax+13]
  000d4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000d7	88 55 f8	 mov	 BYTE PTR __t$[ebp+12], dl
  000da	84 c0		 test	 al, al
  000dc	74 07		 je	 SHORT $LN83@operator@2
  000de	34 ec		 xor	 al, -20			; ffffffecH
  000e0	88 45 f9	 mov	 BYTE PTR __t$[ebp+13], al
  000e3	eb 4c		 jmp	 SHORT $LN1@operator@2
$LN83@operator@2:
  000e5	c6 45 f9 ec	 mov	 BYTE PTR __t$[ebp+13], -20 ; ffffffecH
  000e9	eb 46		 jmp	 SHORT $LN1@operator@2
$LN84@operator@2:
  000eb	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+12], -19 ; ffffffedH
  000ef	eb 40		 jmp	 SHORT $LN1@operator@2
$LN85@operator@2:
  000f1	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+11], -22 ; ffffffeaH
  000f5	eb 3a		 jmp	 SHORT $LN1@operator@2
$LN86@operator@2:
  000f7	c6 45 f6 eb	 mov	 BYTE PTR __t$[ebp+10], -21 ; ffffffebH
  000fb	eb 34		 jmp	 SHORT $LN1@operator@2
$LN88@operator@2:
  000fd	c6 45 f4 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  00101	eb 2e		 jmp	 SHORT $LN1@operator@2
$LN89@operator@2:
  00103	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  00107	eb 28		 jmp	 SHORT $LN1@operator@2
$LN90@operator@2:
  00109	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+6], -21 ; ffffffebH
  0010d	eb 22		 jmp	 SHORT $LN1@operator@2
$LN91@operator@2:
  0010f	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  00113	eb 1c		 jmp	 SHORT $LN1@operator@2
$LN92@operator@2:
  00115	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  00119	eb 16		 jmp	 SHORT $LN1@operator@2
$LN93@operator@2:
  0011b	c6 45 ef ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  0011f	eb 10		 jmp	 SHORT $LN1@operator@2
$LN94@operator@2:
  00121	c6 45 ee eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  00125	eb 0a		 jmp	 SHORT $LN1@operator@2
$LN95@operator@2:
  00127	c6 45 ed ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  0012b	eb 04		 jmp	 SHORT $LN1@operator@2
$LN96@operator@2:
  0012d	c6 45 ec ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@operator@2:
  00131	6a 02		 push	 2
  00133	8d 45 ec	 lea	 eax, DWORD PTR __t$[ebp]
  00136	c6 45 f5 00	 mov	 BYTE PTR __t$[ebp+9], 0
  0013a	5a		 pop	 edx
$LL104@operator@2:
  0013b	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00141	83 c0 04	 add	 eax, 4
  00144	4a		 dec	 edx
  00145	75 f4		 jne	 SHORT $LL104@operator@2
  00147	80 75 f4 ed	 xor	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  0014b	56		 push	 esi
  0014c	8d 75 ec	 lea	 esi, DWORD PTR __t$[ebp]
  0014f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL111@operator@2:
  00155	8a 08		 mov	 cl, BYTE PTR [eax]
  00157	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00159	75 1a		 jne	 SHORT $LN112@operator@2
  0015b	84 c9		 test	 cl, cl
  0015d	74 12		 je	 SHORT $LN113@operator@2
  0015f	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00162	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  00165	75 0e		 jne	 SHORT $LN112@operator@2
  00167	83 c0 02	 add	 eax, 2
  0016a	83 c6 02	 add	 esi, 2
  0016d	84 c9		 test	 cl, cl
  0016f	75 e4		 jne	 SHORT $LL111@operator@2
$LN113@operator@2:
  00171	33 c0		 xor	 eax, eax
  00173	eb 05		 jmp	 SHORT $LN114@operator@2
$LN112@operator@2:
  00175	1b c0		 sbb	 eax, eax
  00177	83 d8 ff	 sbb	 eax, -1
$LN114@operator@2:
  0017a	33 c9		 xor	 ecx, ecx
  0017c	85 c0		 test	 eax, eax
  0017e	0f 94 c0	 sete	 al

; 148  : }

  00181	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00184	33 cd		 xor	 ecx, ebp
  00186	5e		 pop	 esi
  00187	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0018c	c9		 leave
  0018d	c3		 ret	 0
??$?8$09@@YA_NABVioHashString@@AAY09$$CBD@Z ENDP	; operator==<10>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$?8$08@@YA_NABVioHashString@@AAY08$$CBD@Z	; operator==<9>
; Function compile flags: /Ogsp
;	COMDAT ??$?8$08@@YA_NABVioHashString@@AAY08$$CBD@Z
_TEXT	SEGMENT
__t$ = -20						; size = 9
__$ArrayPad$ = -4					; size = 4
_lhs$ = 8						; size = 4
_t$ = 12						; size = 4
??$?8$08@@YA_NABVioHashString@@AAY08$$CBD@Z PROC	; operator==<9>, COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]

; 147  : 	_ENCSTR(t, _t); return ( strcmp( lhs.c_str(), _t ) == 0 );

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _lhs$[ebp]
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 ee 00 00
	00		 je	 $LN96@operator@3
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 ec	 mov	 BYTE PTR __t$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 d7 00 00
	00		 je	 $LN95@operator@3
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 ed	 mov	 BYTE PTR __t$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 c0 00 00
	00		 je	 $LN94@operator@3
  00042	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00045	88 55 ee	 mov	 BYTE PTR __t$[ebp+2], dl
  00048	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004b	84 d2		 test	 dl, dl
  0004d	0f 84 a9 00 00
	00		 je	 $LN93@operator@3
  00053	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00056	88 55 ef	 mov	 BYTE PTR __t$[ebp+3], dl
  00059	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005c	84 d2		 test	 dl, dl
  0005e	0f 84 92 00 00
	00		 je	 $LN92@operator@3
  00064	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00067	88 55 f0	 mov	 BYTE PTR __t$[ebp+4], dl
  0006a	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006d	84 d2		 test	 dl, dl
  0006f	74 7f		 je	 SHORT $LN91@operator@3
  00071	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00074	88 55 f1	 mov	 BYTE PTR __t$[ebp+5], dl
  00077	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007a	84 d2		 test	 dl, dl
  0007c	74 6c		 je	 SHORT $LN90@operator@3
  0007e	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00081	88 55 f2	 mov	 BYTE PTR __t$[ebp+6], dl
  00084	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00087	84 d2		 test	 dl, dl
  00089	74 59		 je	 SHORT $LN89@operator@3
  0008b	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0008e	80 78 08 00	 cmp	 BYTE PTR [eax+8], 0
  00092	88 55 f3	 mov	 BYTE PTR __t$[ebp+7], dl
  00095	74 7b		 je	 SHORT $LN1@operator@3
  00097	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  0009a	84 d2		 test	 dl, dl
  0009c	74 40		 je	 SHORT $LN87@operator@3
  0009e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000a1	88 55 f5	 mov	 BYTE PTR __t$[ebp+9], dl
  000a4	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000a7	84 d2		 test	 dl, dl
  000a9	74 2d		 je	 SHORT $LN86@operator@3
  000ab	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000ae	88 55 f6	 mov	 BYTE PTR __t$[ebp+10], dl
  000b1	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000b4	84 d2		 test	 dl, dl
  000b6	74 1a		 je	 SHORT $LN85@operator@3
  000b8	8a 40 0c	 mov	 al, BYTE PTR [eax+12]
  000bb	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000be	88 55 f7	 mov	 BYTE PTR __t$[ebp+11], dl
  000c1	84 c0		 test	 al, al
  000c3	74 07		 je	 SHORT $LN84@operator@3
  000c5	34 ed		 xor	 al, -19			; ffffffedH
  000c7	88 45 f8	 mov	 BYTE PTR __t$[ebp+12], al
  000ca	eb 46		 jmp	 SHORT $LN1@operator@3
$LN84@operator@3:
  000cc	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+12], -19 ; ffffffedH
  000d0	eb 40		 jmp	 SHORT $LN1@operator@3
$LN85@operator@3:
  000d2	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+11], -22 ; ffffffeaH
  000d6	eb 3a		 jmp	 SHORT $LN1@operator@3
$LN86@operator@3:
  000d8	c6 45 f6 eb	 mov	 BYTE PTR __t$[ebp+10], -21 ; ffffffebH
  000dc	eb 34		 jmp	 SHORT $LN1@operator@3
$LN87@operator@3:
  000de	c6 45 f5 ec	 mov	 BYTE PTR __t$[ebp+9], -20 ; ffffffecH
  000e2	eb 2e		 jmp	 SHORT $LN1@operator@3
$LN89@operator@3:
  000e4	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  000e8	eb 28		 jmp	 SHORT $LN1@operator@3
$LN90@operator@3:
  000ea	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+6], -21 ; ffffffebH
  000ee	eb 22		 jmp	 SHORT $LN1@operator@3
$LN91@operator@3:
  000f0	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  000f4	eb 1c		 jmp	 SHORT $LN1@operator@3
$LN92@operator@3:
  000f6	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  000fa	eb 16		 jmp	 SHORT $LN1@operator@3
$LN93@operator@3:
  000fc	c6 45 ef ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  00100	eb 10		 jmp	 SHORT $LN1@operator@3
$LN94@operator@3:
  00102	c6 45 ee eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  00106	eb 0a		 jmp	 SHORT $LN1@operator@3
$LN95@operator@3:
  00108	c6 45 ed ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  0010c	eb 04		 jmp	 SHORT $LN1@operator@3
$LN96@operator@3:
  0010e	c6 45 ec ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@operator@3:
  00112	6a 02		 push	 2
  00114	8d 45 ec	 lea	 eax, DWORD PTR __t$[ebp]
  00117	c6 45 f4 00	 mov	 BYTE PTR __t$[ebp+8], 0
  0011b	5a		 pop	 edx
$LL104@operator@3:
  0011c	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00122	83 c0 04	 add	 eax, 4
  00125	4a		 dec	 edx
  00126	75 f4		 jne	 SHORT $LL104@operator@3
  00128	56		 push	 esi
  00129	8d 75 ec	 lea	 esi, DWORD PTR __t$[ebp]
  0012c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL111@operator@3:
  00132	8a 08		 mov	 cl, BYTE PTR [eax]
  00134	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00136	75 1a		 jne	 SHORT $LN112@operator@3
  00138	84 c9		 test	 cl, cl
  0013a	74 12		 je	 SHORT $LN113@operator@3
  0013c	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  0013f	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  00142	75 0e		 jne	 SHORT $LN112@operator@3
  00144	83 c0 02	 add	 eax, 2
  00147	83 c6 02	 add	 esi, 2
  0014a	84 c9		 test	 cl, cl
  0014c	75 e4		 jne	 SHORT $LL111@operator@3
$LN113@operator@3:
  0014e	33 c0		 xor	 eax, eax
  00150	eb 05		 jmp	 SHORT $LN114@operator@3
$LN112@operator@3:
  00152	1b c0		 sbb	 eax, eax
  00154	83 d8 ff	 sbb	 eax, -1
$LN114@operator@3:
  00157	33 c9		 xor	 ecx, ecx
  00159	85 c0		 test	 eax, eax
  0015b	0f 94 c0	 sete	 al

; 148  : }

  0015e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00161	33 cd		 xor	 ecx, ebp
  00163	5e		 pop	 esi
  00164	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00169	c9		 leave
  0016a	c3		 ret	 0
??$?8$08@@YA_NABVioHashString@@AAY08$$CBD@Z ENDP	; operator==<9>
_TEXT	ENDS
PUBLIC	?GetResultGroupMaxArray@ioRouletteManager@@QAEHXZ ; ioRouletteManager::GetResultGroupMaxArray
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioroulettemanager.h
;	COMDAT ?GetResultGroupMaxArray@ioRouletteManager@@QAEHXZ
_TEXT	SEGMENT
?GetResultGroupMaxArray@ioRouletteManager@@QAEHXZ PROC	; ioRouletteManager::GetResultGroupMaxArray, COMDAT
; _this$ = ecx

; 208  : 	int GetResultGroupMaxArray() { return static_cast<int>( m_vResultGroupList.size() ); }

  00000	8b 41 34	 mov	 eax, DWORD PTR [ecx+52]
  00003	2b 41 30	 sub	 eax, DWORD PTR [ecx+48]
  00006	6a 70		 push	 112			; 00000070H
  00008	99		 cdq
  00009	59		 pop	 ecx
  0000a	f7 f9		 idiv	 ecx
  0000c	c3		 ret	 0
?GetResultGroupMaxArray@ioRouletteManager@@QAEHXZ ENDP	; ioRouletteManager::GetResultGroupMaxArray
_TEXT	ENDS
PUBLIC	_pImage$GSCopy$
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
EXTRN	__imp_?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\roulettehelpwnd.cpp
;	COMDAT ?AddRenderImage@RouletteHelpWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z
_TEXT	SEGMENT
_pImage$GSCopy$ = -28					; size = 4
_this$GSCopy$ = -24					; size = 4
__t$506317 = -20					; size = 10
__t$506192 = -16					; size = 5
__$ArrayPad$ = -4					; size = 4
_szType$ = 8						; size = 4
_pImage$ = 12						; size = 4
?AddRenderImage@RouletteHelpWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z PROC ; RouletteHelpWnd::AddRenderImage, COMDAT
; _this$ = ecx

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _pImage$[ebp]
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR _szType$[ebp]
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	89 4d e8	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx

; 21   : 	if( szType == "icon" )

  0001c	bf ed ec eb ea	 mov	 edi, -353637139		; eaebecedH
  00021	c7 45 f0 84 8f
	84 84		 mov	 DWORD PTR __t$506192[ebp], -2071687292 ; 84848f84H
  00028	31 7d f0	 xor	 DWORD PTR __t$506192[ebp], edi
  0002b	8b cb		 mov	 ecx, ebx

; 32   : 		ioWnd::AddRenderImage( szType, pImage );

  0002d	89 45 e4	 mov	 DWORD PTR _pImage$GSCopy$[ebp], eax
  00030	c6 45 f4 00	 mov	 BYTE PTR __t$506192[ebp+4], 0
  00034	8d 75 f0	 lea	 esi, DWORD PTR __t$506192[ebp]
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL234@AddRenderI:

; 21   : 	if( szType == "icon" )

  0003d	8a 08		 mov	 cl, BYTE PTR [eax]
  0003f	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00041	75 1a		 jne	 SHORT $LN235@AddRenderI
  00043	84 c9		 test	 cl, cl
  00045	74 12		 je	 SHORT $LN236@AddRenderI
  00047	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  0004a	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  0004d	75 0e		 jne	 SHORT $LN235@AddRenderI
  0004f	83 c0 02	 add	 eax, 2
  00052	83 c6 02	 add	 esi, 2
  00055	84 c9		 test	 cl, cl
  00057	75 e4		 jne	 SHORT $LL234@AddRenderI
$LN236@AddRenderI:
  00059	33 c0		 xor	 eax, eax
  0005b	eb 05		 jmp	 SHORT $LN237@AddRenderI
$LN235@AddRenderI:
  0005d	1b c0		 sbb	 eax, eax
  0005f	83 d8 ff	 sbb	 eax, -1
$LN237@AddRenderI:
  00062	85 c0		 test	 eax, eax
  00064	75 29		 jne	 SHORT $LN233@AddRenderI

; 22   : 	{
; 23   : 		SAFEDELETE( m_pIcon );

  00066	8b 75 e8	 mov	 esi, DWORD PTR _this$GSCopy$[ebp]
  00069	8b 8e 60 01 00
	00		 mov	 ecx, DWORD PTR [esi+352]
  0006f	85 c9		 test	 ecx, ecx
  00071	74 0e		 je	 SHORT $LN5@AddRenderI
  00073	8b 01		 mov	 eax, DWORD PTR [ecx]
  00075	6a 01		 push	 1
  00077	ff 50 40	 call	 DWORD PTR [eax+64]
  0007a	83 a6 60 01 00
	00 00		 and	 DWORD PTR [esi+352], 0
$LN5@AddRenderI:

; 24   : 		m_pIcon= pImage;

  00081	8b 45 e4	 mov	 eax, DWORD PTR _pImage$GSCopy$[ebp]
  00084	89 86 60 01 00
	00		 mov	 DWORD PTR [esi+352], eax
  0008a	e9 8d 00 00 00	 jmp	 $LN1@AddRenderI
$LN233@AddRenderI:

; 25   : 	}
; 26   : 	else if( szType == "icon_back" )

  0008f	6a 02		 push	 2
  00091	c7 45 ec 84 8f
	84 84		 mov	 DWORD PTR __t$506317[ebp], -2071687292 ; 84848f84H
  00098	c7 45 f0 b2 8e
	8a 89		 mov	 DWORD PTR __t$506317[ebp+4], -1987408206 ; 898a8eb2H
  0009f	8d 45 ec	 lea	 eax, DWORD PTR __t$506317[ebp]
  000a2	66 c7 45 f4 86
	00		 mov	 WORD PTR __t$506317[ebp+8], 134 ; 00000086H
  000a8	59		 pop	 ecx
$LL222@AddRenderI:
  000a9	31 38		 xor	 DWORD PTR [eax], edi
  000ab	83 c0 04	 add	 eax, 4
  000ae	49		 dec	 ecx
  000af	75 f8		 jne	 SHORT $LL222@AddRenderI
  000b1	80 75 f4 ed	 xor	 BYTE PTR __t$506317[ebp+8], -19 ; ffffffedH
  000b5	8b cb		 mov	 ecx, ebx
  000b7	8d 75 ec	 lea	 esi, DWORD PTR __t$506317[ebp]
  000ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL238@AddRenderI:
  000c0	8a 08		 mov	 cl, BYTE PTR [eax]
  000c2	3a 0e		 cmp	 cl, BYTE PTR [esi]
  000c4	75 1a		 jne	 SHORT $LN239@AddRenderI
  000c6	84 c9		 test	 cl, cl
  000c8	74 12		 je	 SHORT $LN240@AddRenderI
  000ca	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  000cd	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  000d0	75 0e		 jne	 SHORT $LN239@AddRenderI
  000d2	83 c0 02	 add	 eax, 2
  000d5	83 c6 02	 add	 esi, 2
  000d8	84 c9		 test	 cl, cl
  000da	75 e4		 jne	 SHORT $LL238@AddRenderI
$LN240@AddRenderI:
  000dc	33 c0		 xor	 eax, eax
  000de	eb 05		 jmp	 SHORT $LN241@AddRenderI
$LN239@AddRenderI:
  000e0	1b c0		 sbb	 eax, eax
  000e2	83 d8 ff	 sbb	 eax, -1
$LN241@AddRenderI:
  000e5	85 c0		 test	 eax, eax
  000e7	75 26		 jne	 SHORT $LN3@AddRenderI

; 27   : 	{
; 28   : 		SAFEDELETE( m_pIconBack );

  000e9	8b 75 e8	 mov	 esi, DWORD PTR _this$GSCopy$[ebp]
  000ec	8b 8e 64 01 00
	00		 mov	 ecx, DWORD PTR [esi+356]
  000f2	85 c9		 test	 ecx, ecx
  000f4	74 0e		 je	 SHORT $LN2@AddRenderI
  000f6	8b 01		 mov	 eax, DWORD PTR [ecx]
  000f8	6a 01		 push	 1
  000fa	ff 50 40	 call	 DWORD PTR [eax+64]
  000fd	83 a6 64 01 00
	00 00		 and	 DWORD PTR [esi+356], 0
$LN2@AddRenderI:

; 29   : 		m_pIconBack = pImage;

  00104	8b 45 e4	 mov	 eax, DWORD PTR _pImage$GSCopy$[ebp]
  00107	89 86 64 01 00
	00		 mov	 DWORD PTR [esi+356], eax

; 30   : 	}
; 31   : 	else

  0010d	eb 0d		 jmp	 SHORT $LN1@AddRenderI
$LN3@AddRenderI:

; 32   : 		ioWnd::AddRenderImage( szType, pImage );

  0010f	ff 75 e4	 push	 DWORD PTR _pImage$GSCopy$[ebp]
  00112	8b 4d e8	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00115	53		 push	 ebx
  00116	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
$LN1@AddRenderI:

; 33   : }

  0011c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0011f	5f		 pop	 edi
  00120	5e		 pop	 esi
  00121	33 cd		 xor	 ecx, ebp
  00123	5b		 pop	 ebx
  00124	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00129	c9		 leave
  0012a	c2 08 00	 ret	 8
?AddRenderImage@RouletteHelpWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z ENDP ; RouletteHelpWnd::AddRenderImage
_TEXT	ENDS
PUBLIC	__real@3f0ccccd
PUBLIC	__real@3f266666
PUBLIC	??_C@_0BK@BOBFMHEG@RouletteHelpWnd?3?3OnRender?$AA@ ; `string'
PUBLIC	__real@3f19999a
EXTRN	__imp_?PrintText@ioFontManager@@QAEXMMMPBDHH@Z:PROC
EXTRN	__imp_?PrintText@ioFontManager@@QAEXMMMPBDH@Z:PROC
EXTRN	?GetResultGroupInfoByArray@ioRouletteManager@@QAEXHAAH00@Z:PROC ; ioRouletteManager::GetResultGroupInfoByArray
EXTRN	__imp_?SetTextColor@ioFontManager@@QAEXHHH@Z:PROC
EXTRN	__imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ:PROC
EXTRN	__imp_?SetHorzFormatting@ioUIRenderImage@@QAEXW4HorzFormatting@1@@Z:PROC
EXTRN	__imp_?SetVertFormatting@ioUIRenderImage@@QAEXW4VertFormatting@1@@Z:PROC
EXTRN	__imp_?OnRender@ioWnd@@MAEXXZ:PROC
;	COMDAT __real@3f0ccccd
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
CONST	SEGMENT
__real@3f0ccccd DD 03f0ccccdr			; 0.55
CONST	ENDS
;	COMDAT __real@3f266666
CONST	SEGMENT
__real@3f266666 DD 03f266666r			; 0.65
CONST	ENDS
;	COMDAT ??_C@_0BK@BOBFMHEG@RouletteHelpWnd?3?3OnRender?$AA@
CONST	SEGMENT
??_C@_0BK@BOBFMHEG@RouletteHelpWnd?3?3OnRender?$AA@ DB 'RouletteHelpWnd::'
	DB	'OnRender', 00H				; `string'
CONST	ENDS
;	COMDAT __real@3f19999a
CONST	SEGMENT
__real@3f19999a DD 03f19999ar			; 0.6
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\roulettehelpwnd.cpp
CONST	ENDS
;	COMDAT ?OnRender@RouletteHelpWnd@@MAEXXZ
_TEXT	SEGMENT
_iSize$ = -32						; size = 4
tv573 = -28						; size = 4
_iRate$505222 = -24					; size = 4
_iMin$505221 = -20					; size = 4
tv571 = -16						; size = 4
tv553 = -16						; size = 4
_iMax$505220 = -12					; size = 4
_iXPos$ = -12						; size = 4
tv569 = -8						; size = 4
tv559 = -8						; size = 4
_i$505216 = -8						; size = 4
_iYPos$ = -4						; size = 4
?OnRender@RouletteHelpWnd@@MAEXXZ PROC			; RouletteHelpWnd::OnRender, COMDAT
; _this$ = ecx

; 59   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx

; 60   : 	ioWnd::OnRender();

  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?OnRender@ioWnd@@MAEXXZ

; 61   : 
; 62   : 	int iXPos = GetDerivedPosX();

  00011	8b ce		 mov	 ecx, esi
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosX@ioWnd@@QBEHXZ
  00019	8b d8		 mov	 ebx, eax

; 63   : 	int iYPos = GetDerivedPosY();

  0001b	8b ce		 mov	 ecx, esi
  0001d	89 5d f4	 mov	 DWORD PTR _iXPos$[ebp], ebx
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosY@ioWnd@@QBEHXZ

; 64   : 
; 65   : 	if( m_pIconBack )

  00026	8b 8e 64 01 00
	00		 mov	 ecx, DWORD PTR [esi+356]
  0002c	33 ff		 xor	 edi, edi
  0002e	89 45 fc	 mov	 DWORD PTR _iYPos$[ebp], eax
  00031	3b cf		 cmp	 ecx, edi
  00033	74 63		 je	 SHORT $LN16@OnRender@2

; 66   : 	{
; 67   : 		m_pIconBack->SetVertFormatting( ioUIRenderImage::VF_STRETCH );

  00035	6a 03		 push	 3
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetVertFormatting@ioUIRenderImage@@QAEXW4VertFormatting@1@@Z

; 68   : 		m_pIconBack->SetHorzFormatting( ioUIRenderImage::HF_STRETCH );

  0003d	8b 8e 64 01 00
	00		 mov	 ecx, DWORD PTR [esi+356]
  00043	6a 03		 push	 3
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetHorzFormatting@ioUIRenderImage@@QAEXW4HorzFormatting@1@@Z

; 69   : 		m_pIconBack->SetScale( 0.6f );

  0004b	8b 8e 64 01 00
	00		 mov	 ecx, DWORD PTR [esi+356]
  00051	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  00059	8b 01		 mov	 eax, DWORD PTR [ecx]
  0005b	51		 push	 ecx
  0005c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00061	ff 50 1c	 call	 DWORD PTR [eax+28]

; 70   : 		m_pIconBack->Render( iXPos + 39, iYPos + 70, UI_RENDER_MULTIPLY, TFO_BILINEAR );

  00064	8b 8e 64 01 00
	00		 mov	 ecx, DWORD PTR [esi+356]
  0006a	8b 55 fc	 mov	 edx, DWORD PTR _iYPos$[ebp]
  0006d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0006f	57		 push	 edi
  00070	57		 push	 edi
  00071	6a 01		 push	 1
  00073	6a 08		 push	 8
  00075	83 c2 46	 add	 edx, 70			; 00000046H
  00078	0f 57 c0	 xorps	 xmm0, xmm0
  0007b	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0007f	51		 push	 ecx
  00080	51		 push	 ecx
  00081	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00087	8d 53 27	 lea	 edx, DWORD PTR [ebx+39]
  0008a	0f 57 c0	 xorps	 xmm0, xmm0
  0008d	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00091	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00096	ff 10		 call	 DWORD PTR [eax]
$LN16@OnRender@2:

; 71   : 	}
; 72   : 
; 73   : 	if( m_pIcon )

  00098	8b 8e 60 01 00
	00		 mov	 ecx, DWORD PTR [esi+352]
  0009e	3b cf		 cmp	 ecx, edi
  000a0	74 62		 je	 SHORT $LN6@OnRender@2

; 74   : 	{
; 75   : 		m_pIcon->SetVertFormatting( ioUIRenderImage::VF_STRETCH );

  000a2	6a 03		 push	 3
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetVertFormatting@ioUIRenderImage@@QAEXW4VertFormatting@1@@Z

; 76   : 		m_pIcon->SetHorzFormatting( ioUIRenderImage::HF_STRETCH );

  000aa	8b 8e 60 01 00
	00		 mov	 ecx, DWORD PTR [esi+352]
  000b0	6a 03		 push	 3
  000b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetHorzFormatting@ioUIRenderImage@@QAEXW4HorzFormatting@1@@Z

; 77   : 		m_pIcon->SetScale( 0.6f );

  000b8	8b 8e 60 01 00
	00		 mov	 ecx, DWORD PTR [esi+352]
  000be	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  000c6	8b 01		 mov	 eax, DWORD PTR [ecx]
  000c8	51		 push	 ecx
  000c9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ce	ff 50 1c	 call	 DWORD PTR [eax+28]

; 78   : 		m_pIcon->Render( iXPos + 39, iYPos + 70, UI_RENDER_NORMAL, TFO_BILINEAR );

  000d1	8b 8e 60 01 00
	00		 mov	 ecx, DWORD PTR [esi+352]
  000d7	8b 55 fc	 mov	 edx, DWORD PTR _iYPos$[ebp]
  000da	8b 01		 mov	 eax, DWORD PTR [ecx]
  000dc	57		 push	 edi
  000dd	57		 push	 edi
  000de	6a 01		 push	 1
  000e0	57		 push	 edi
  000e1	83 c2 46	 add	 edx, 70			; 00000046H
  000e4	0f 57 c0	 xorps	 xmm0, xmm0
  000e7	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000eb	51		 push	 ecx
  000ec	51		 push	 ecx
  000ed	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000f3	8d 53 27	 lea	 edx, DWORD PTR [ebx+39]
  000f6	0f 57 c0	 xorps	 xmm0, xmm0
  000f9	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00102	ff 10		 call	 DWORD PTR [eax]
$LN6@OnRender@2:

; 79   : 	}
; 80   : 
; 81   : 	g_FontMgr.SetAlignType( TAT_LEFT );

  00104	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?GetSingleton@ioFontManager@@SAAAV1@XZ
  0010a	57		 push	 edi
  0010b	ff d6		 call	 esi
  0010d	8b c8		 mov	 ecx, eax
  0010f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 82   : 	g_FontMgr.SetTextStyle( TS_NORMAL );

  00115	57		 push	 edi
  00116	ff d6		 call	 esi
  00118	8b c8		 mov	 ecx, eax
  0011a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z

; 83   : 	g_FontMgr.SetBkColor( 0, 0, 0 );

  00120	57		 push	 edi
  00121	57		 push	 edi
  00122	57		 push	 edi
  00123	ff d6		 call	 esi
  00125	8b c8		 mov	 ecx, eax
  00127	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetBkColor@ioFontManager@@QAEXHHH@Z

; 84   : 	g_FontMgr.SetTextColor( TCT_DEFAULT_DARKGRAY );

  0012d	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  00132	ff d6		 call	 esi
  00134	8b c8		 mov	 ecx, eax
  00136	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 85   : 	g_FontMgr.PrintText( iXPos + 65, iYPos + 55, FONT_SIZE_13, STR(1) );

  0013c	57		 push	 edi
  0013d	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetSingleton@ioStringManager@@SAAAV1@XZ
  00143	6a 01		 push	 1
  00145	83 c3 41	 add	 ebx, 65			; 00000041H
  00148	0f 57 c0	 xorps	 xmm0, xmm0
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00150	f3 0f 2a c3	 cvtsi2ss xmm0, ebx
  00154	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@BOBFMHEG@RouletteHelpWnd?3?3OnRender?$AA@
  00159	f3 0f 11 45 f0	 movss	 DWORD PTR tv553[ebp], xmm0
  0015e	ff d7		 call	 edi
  00160	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  00166	8b c8		 mov	 ecx, eax
  00168	ff d3		 call	 ebx
  0016a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  00172	50		 push	 eax
  00173	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  00176	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00179	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0017f	83 c0 37	 add	 eax, 55			; 00000037H
  00182	0f 57 c0	 xorps	 xmm0, xmm0
  00185	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00189	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0018f	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR tv553[ebp]
  00194	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00199	ff d6		 call	 esi
  0019b	50		 push	 eax
  0019c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  001a2	83 c4 14	 add	 esp, 20			; 00000014H

; 86   : 
; 87   : 	g_FontMgr.SetTextColor( TCT_DEFAULT_GRAY );

  001a5	68 6e 6e 6e ff	 push	 -9539986		; ff6e6e6eH
  001aa	ff d6		 call	 esi
  001ac	8b c8		 mov	 ecx, eax
  001ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 88   : 	g_FontMgr.PrintText( iXPos + 65, iYPos + 75, FONT_SIZE_11, STR(2) );

  001b4	6a 00		 push	 0
  001b6	6a 02		 push	 2
  001b8	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  001bd	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@BOBFMHEG@RouletteHelpWnd?3?3OnRender?$AA@
  001c2	ff d7		 call	 edi
  001c4	8b c8		 mov	 ecx, eax
  001c6	ff d3		 call	 ebx
  001c8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f0ccccd
  001d0	50		 push	 eax
  001d1	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  001d4	83 ec 0c	 sub	 esp, 12			; 0000000cH
  001d7	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  001dd	83 c0 4b	 add	 eax, 75			; 0000004bH
  001e0	0f 57 c0	 xorps	 xmm0, xmm0
  001e3	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  001e7	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  001ed	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR tv553[ebp]
  001f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f7	ff d6		 call	 esi
  001f9	50		 push	 eax
  001fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  00200	83 c4 14	 add	 esp, 20			; 00000014H

; 89   : 
; 90   : 	g_FontMgr.SetTextColor( 184, 37, 37 );

  00203	6a 25		 push	 37			; 00000025H
  00205	6a 25		 push	 37			; 00000025H
  00207	68 b8 00 00 00	 push	 184			; 000000b8H
  0020c	ff d6		 call	 esi
  0020e	8b c8		 mov	 ecx, eax
  00210	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXHHH@Z

; 91   : 	g_FontMgr.PrintText( iXPos + 18, iYPos + 101, FONT_SIZE_13, STR(3) );

  00216	8b 45 f4	 mov	 eax, DWORD PTR _iXPos$[ebp]
  00219	83 c0 12	 add	 eax, 18			; 00000012H
  0021c	6a 00		 push	 0
  0021e	6a 03		 push	 3
  00220	0f 57 c0	 xorps	 xmm0, xmm0
  00223	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00228	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0022c	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@BOBFMHEG@RouletteHelpWnd?3?3OnRender?$AA@
  00231	f3 0f 11 45 f8	 movss	 DWORD PTR tv559[ebp], xmm0
  00236	ff d7		 call	 edi
  00238	8b c8		 mov	 ecx, eax
  0023a	ff d3		 call	 ebx
  0023c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  00244	50		 push	 eax
  00245	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  00248	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0024b	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00251	83 c0 65	 add	 eax, 101		; 00000065H
  00254	0f 57 c0	 xorps	 xmm0, xmm0
  00257	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0025b	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00261	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv559[ebp]
  00266	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026b	ff d6		 call	 esi
  0026d	50		 push	 eax
  0026e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  00274	83 c4 14	 add	 esp, 20			; 00000014H

; 92   : 	g_FontMgr.PrintText( iXPos + 18, iYPos + 121, FONT_SIZE_13, STR(4) );

  00277	6a 00		 push	 0
  00279	6a 04		 push	 4
  0027b	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00280	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@BOBFMHEG@RouletteHelpWnd?3?3OnRender?$AA@
  00285	ff d7		 call	 edi
  00287	8b c8		 mov	 ecx, eax
  00289	ff d3		 call	 ebx
  0028b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  00293	50		 push	 eax
  00294	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  00297	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0029a	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  002a0	83 c0 79	 add	 eax, 121		; 00000079H
  002a3	0f 57 c0	 xorps	 xmm0, xmm0
  002a6	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  002aa	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  002b0	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv559[ebp]
  002b5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ba	ff d6		 call	 esi
  002bc	50		 push	 eax
  002bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  002c3	83 c4 14	 add	 esp, 20			; 00000014H

; 93   : 
; 94   : 	g_FontMgr.SetTextColor( TCT_DEFAULT_DARKGRAY );

  002c6	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  002cb	ff d6		 call	 esi
  002cd	8b c8		 mov	 ecx, eax
  002cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 95   : 	g_FontMgr.PrintText( iXPos + 18, iYPos + 151, FONT_SIZE_13, STR(5) );

  002d5	6a 00		 push	 0
  002d7	6a 05		 push	 5
  002d9	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  002de	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@BOBFMHEG@RouletteHelpWnd?3?3OnRender?$AA@
  002e3	ff d7		 call	 edi
  002e5	8b c8		 mov	 ecx, eax
  002e7	ff d3		 call	 ebx
  002e9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  002f1	50		 push	 eax
  002f2	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  002f5	83 ec 0c	 sub	 esp, 12			; 0000000cH
  002f8	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  002fe	05 97 00 00 00	 add	 eax, 151		; 00000097H
  00303	0f 57 c0	 xorps	 xmm0, xmm0
  00306	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0030a	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00310	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv559[ebp]
  00315	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0031a	ff d6		 call	 esi
  0031c	50		 push	 eax
  0031d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  00323	83 c4 14	 add	 esp, 20			; 00000014H

; 96   : 	g_FontMgr.PrintText( iXPos + 18, iYPos + 171, FONT_SIZE_13, STR(6) );

  00326	6a 00		 push	 0
  00328	6a 06		 push	 6
  0032a	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0032f	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@BOBFMHEG@RouletteHelpWnd?3?3OnRender?$AA@
  00334	ff d7		 call	 edi
  00336	8b c8		 mov	 ecx, eax
  00338	ff d3		 call	 ebx
  0033a	50		 push	 eax
  0033b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  00343	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  00346	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00349	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0034f	05 ab 00 00 00	 add	 eax, 171		; 000000abH
  00354	0f 57 c0	 xorps	 xmm0, xmm0
  00357	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0035b	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00361	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv559[ebp]
  00366	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0036b	ff d6		 call	 esi
  0036d	50		 push	 eax
  0036e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  00374	83 c4 14	 add	 esp, 20			; 00000014H

; 97   : 	g_FontMgr.PrintText( iXPos + 18, iYPos + 191, FONT_SIZE_13, STR(7) );

  00377	6a 00		 push	 0
  00379	6a 07		 push	 7
  0037b	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00380	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@BOBFMHEG@RouletteHelpWnd?3?3OnRender?$AA@
  00385	ff d7		 call	 edi
  00387	8b c8		 mov	 ecx, eax
  00389	ff d3		 call	 ebx
  0038b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  00393	50		 push	 eax
  00394	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  00397	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0039a	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  003a0	05 bf 00 00 00	 add	 eax, 191		; 000000bfH
  003a5	0f 57 c0	 xorps	 xmm0, xmm0
  003a8	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  003ac	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  003b2	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv559[ebp]
  003b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003bc	ff d6		 call	 esi
  003be	50		 push	 eax
  003bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  003c5	83 c4 14	 add	 esp, 20			; 00000014H

; 98   : 
; 99   : 	g_FontMgr.SetTextColor( TCT_DEFAULT_GRAY );

  003c8	68 6e 6e 6e ff	 push	 -9539986		; ff6e6e6eH
  003cd	ff d6		 call	 esi
  003cf	8b c8		 mov	 ecx, eax
  003d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 100  : 	g_FontMgr.PrintText( iXPos + 25, iYPos + 228, FONT_SIZE_13, STR(8) );

  003d7	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  003da	05 e4 00 00 00	 add	 eax, 228		; 000000e4H
  003df	0f 57 c0	 xorps	 xmm0, xmm0
  003e2	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  003e6	8b 45 f4	 mov	 eax, DWORD PTR _iXPos$[ebp]
  003e9	6a 00		 push	 0
  003eb	6a 08		 push	 8
  003ed	f3 0f 11 45 f8	 movss	 DWORD PTR tv569[ebp], xmm0
  003f2	83 c0 19	 add	 eax, 25			; 00000019H
  003f5	0f 57 c0	 xorps	 xmm0, xmm0
  003f8	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  003fd	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00401	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@BOBFMHEG@RouletteHelpWnd?3?3OnRender?$AA@
  00406	f3 0f 11 45 f0	 movss	 DWORD PTR tv571[ebp], xmm0
  0040b	ff d7		 call	 edi
  0040d	8b c8		 mov	 ecx, eax
  0040f	ff d3		 call	 ebx
  00411	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  00419	50		 push	 eax
  0041a	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0041d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00423	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv569[ebp]
  00428	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0042e	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR tv571[ebp]
  00433	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00438	ff d6		 call	 esi
  0043a	50		 push	 eax
  0043b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  00441	83 c4 14	 add	 esp, 20			; 00000014H

; 101  : 	g_FontMgr.SetAlignType( TAT_RIGHT );

  00444	6a 02		 push	 2
  00446	ff d6		 call	 esi
  00448	8b c8		 mov	 ecx, eax
  0044a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 102  : 	g_FontMgr.PrintText( iXPos + 301, iYPos + 228, FONT_SIZE_13, STR(9) );

  00450	8b 45 f4	 mov	 eax, DWORD PTR _iXPos$[ebp]
  00453	6a 00		 push	 0
  00455	05 2d 01 00 00	 add	 eax, 301		; 0000012dH
  0045a	0f 57 c0	 xorps	 xmm0, xmm0
  0045d	6a 09		 push	 9
  0045f	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00463	f3 0f 11 45 e4	 movss	 DWORD PTR tv573[ebp], xmm0
  00468	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0046d	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@BOBFMHEG@RouletteHelpWnd?3?3OnRender?$AA@
  00472	ff d7		 call	 edi
  00474	8b c8		 mov	 ecx, eax
  00476	ff d3		 call	 ebx
  00478	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  00480	50		 push	 eax
  00481	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00484	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0048a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv569[ebp]
  0048f	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00495	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR tv573[ebp]
  0049a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0049f	ff d6		 call	 esi
  004a1	50		 push	 eax
  004a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  004a8	83 c4 14	 add	 esp, 20			; 00000014H

; 103  : 
; 104  : 	int iSize = g_RouletteMgr.GetResultGroupMaxArray();

  004ab	e8 00 00 00 00	 call	 ?GetSingleton@ioRouletteManager@@SAAAV1@XZ ; ioRouletteManager::GetSingleton
  004b0	8b c8		 mov	 ecx, eax
  004b2	8b 41 34	 mov	 eax, DWORD PTR [ecx+52]
  004b5	2b 41 30	 sub	 eax, DWORD PTR [ecx+48]
  004b8	6a 70		 push	 112			; 00000070H
  004ba	99		 cdq
  004bb	59		 pop	 ecx
  004bc	f7 f9		 idiv	 ecx

; 105  : 	for( int i=0; i<iSize; ++i )

  004be	83 65 f8 00	 and	 DWORD PTR _i$505216[ebp], 0
  004c2	89 45 e0	 mov	 DWORD PTR _iSize$[ebp], eax
  004c5	85 c0		 test	 eax, eax
  004c7	0f 8e 69 01 00
	00		 jle	 $LN3@OnRender@2
$LL17@OnRender@2:

; 106  : 	{
; 107  : 		int iMax = 0, iMin = 0, iRate = 0;

  004cd	33 c0		 xor	 eax, eax
  004cf	89 45 f4	 mov	 DWORD PTR _iMax$505220[ebp], eax
  004d2	89 45 ec	 mov	 DWORD PTR _iMin$505221[ebp], eax
  004d5	89 45 e8	 mov	 DWORD PTR _iRate$505222[ebp], eax

; 108  : 		g_RouletteMgr.GetResultGroupInfoByArray( i, iMax, iMin, iRate );

  004d8	8d 45 e8	 lea	 eax, DWORD PTR _iRate$505222[ebp]
  004db	50		 push	 eax
  004dc	8d 45 ec	 lea	 eax, DWORD PTR _iMin$505221[ebp]
  004df	50		 push	 eax
  004e0	8d 45 f4	 lea	 eax, DWORD PTR _iMax$505220[ebp]
  004e3	50		 push	 eax
  004e4	ff 75 f8	 push	 DWORD PTR _i$505216[ebp]
  004e7	e8 00 00 00 00	 call	 ?GetSingleton@ioRouletteManager@@SAAAV1@XZ ; ioRouletteManager::GetSingleton
  004ec	8b c8		 mov	 ecx, eax
  004ee	e8 00 00 00 00	 call	 ?GetResultGroupInfoByArray@ioRouletteManager@@QAEXHAAH00@Z ; ioRouletteManager::GetResultGroupInfoByArray

; 109  : 		
; 110  : 		g_FontMgr.SetTextColor( TCT_DEFAULT_DARKGRAY );

  004f3	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  004f8	ff d6		 call	 esi
  004fa	8b c8		 mov	 ecx, eax
  004fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 111  : 		g_FontMgr.SetAlignType( TAT_LEFT );

  00502	6a 00		 push	 0
  00504	ff d6		 call	 esi
  00506	8b c8		 mov	 ecx, eax
  00508	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 112  : 		if( i==0 )
; 113  : 			g_FontMgr.PrintText( iXPos + 25, iYPos + 254 + i * 24, FONT_SIZE_13, STR(10), iMax );

  0050e	ff 75 f4	 push	 DWORD PTR _iMax$505220[ebp]
  00511	33 c0		 xor	 eax, eax
  00513	39 45 f8	 cmp	 DWORD PTR _i$505216[ebp], eax
  00516	75 50		 jne	 SHORT $LN2@OnRender@2
  00518	50		 push	 eax
  00519	6a 0a		 push	 10			; 0000000aH
  0051b	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00520	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@BOBFMHEG@RouletteHelpWnd?3?3OnRender?$AA@
  00525	ff d7		 call	 edi
  00527	8b c8		 mov	 ecx, eax
  00529	ff d3		 call	 ebx
  0052b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  00533	50		 push	 eax
  00534	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  00537	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0053a	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00540	05 fe 00 00 00	 add	 eax, 254		; 000000feH
  00545	0f 57 c0	 xorps	 xmm0, xmm0
  00548	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0054c	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00552	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR tv571[ebp]
  00557	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0055c	ff d6		 call	 esi
  0055e	8b c8		 mov	 ecx, eax
  00560	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAEXMMMPBDH@Z

; 114  : 		else

  00566	eb 59		 jmp	 SHORT $LN1@OnRender@2
$LN2@OnRender@2:

; 115  : 			g_FontMgr.PrintText( iXPos + 25, iYPos + 254 + i * 24, FONT_SIZE_13, STR(11), iMin, iMax );

  00568	ff 75 ec	 push	 DWORD PTR _iMin$505221[ebp]
  0056b	50		 push	 eax
  0056c	6a 0b		 push	 11			; 0000000bH
  0056e	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00573	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@BOBFMHEG@RouletteHelpWnd?3?3OnRender?$AA@
  00578	ff d7		 call	 edi
  0057a	8b c8		 mov	 ecx, eax
  0057c	ff d3		 call	 ebx
  0057e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  00586	8b 4d fc	 mov	 ecx, DWORD PTR _iYPos$[ebp]
  00589	50		 push	 eax
  0058a	8b 45 f8	 mov	 eax, DWORD PTR _i$505216[ebp]
  0058d	6b c0 18	 imul	 eax, 24			; 00000018H
  00590	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00593	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00599	8d 84 08 fe 00
	00 00		 lea	 eax, DWORD PTR [eax+ecx+254]
  005a0	0f 57 c0	 xorps	 xmm0, xmm0
  005a3	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  005a7	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  005ad	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR tv571[ebp]
  005b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b7	ff d6		 call	 esi
  005b9	8b c8		 mov	 ecx, eax
  005bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAEXMMMPBDHH@Z
$LN1@OnRender@2:

; 116  : 
; 117  : 		g_FontMgr.SetAlignType( TAT_RIGHT );

  005c1	6a 02		 push	 2
  005c3	ff d6		 call	 esi
  005c5	8b c8		 mov	 ecx, eax
  005c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 118  : 		g_FontMgr.PrintText( iXPos + 301, iYPos + 254 + i * 24, FONT_SIZE_13, STR(12), iRate );

  005cd	ff 75 e8	 push	 DWORD PTR _iRate$505222[ebp]
  005d0	6a 00		 push	 0
  005d2	6a 0c		 push	 12			; 0000000cH
  005d4	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  005d9	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@BOBFMHEG@RouletteHelpWnd?3?3OnRender?$AA@
  005de	ff d7		 call	 edi
  005e0	8b c8		 mov	 ecx, eax
  005e2	ff d3		 call	 ebx
  005e4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  005ec	8b 4d fc	 mov	 ecx, DWORD PTR _iYPos$[ebp]
  005ef	50		 push	 eax
  005f0	8b 45 f8	 mov	 eax, DWORD PTR _i$505216[ebp]
  005f3	6b c0 18	 imul	 eax, 24			; 00000018H
  005f6	83 ec 0c	 sub	 esp, 12			; 0000000cH
  005f9	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  005ff	8d 84 08 fe 00
	00 00		 lea	 eax, DWORD PTR [eax+ecx+254]
  00606	0f 57 c0	 xorps	 xmm0, xmm0
  00609	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0060d	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00613	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR tv573[ebp]
  00618	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0061d	ff d6		 call	 esi
  0061f	8b c8		 mov	 ecx, eax
  00621	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAEXMMMPBDH@Z
  00627	ff 45 f8	 inc	 DWORD PTR _i$505216[ebp]
  0062a	8b 45 f8	 mov	 eax, DWORD PTR _i$505216[ebp]
  0062d	3b 45 e0	 cmp	 eax, DWORD PTR _iSize$[ebp]
  00630	0f 8c 97 fe ff
	ff		 jl	 $LL17@OnRender@2
$LN3@OnRender@2:
  00636	5f		 pop	 edi
  00637	5e		 pop	 esi
  00638	5b		 pop	 ebx

; 119  : 	}
; 120  : }

  00639	c9		 leave
  0063a	c3		 ret	 0
?OnRender@RouletteHelpWnd@@MAEXXZ ENDP			; RouletteHelpWnd::OnRender
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
; Function compile flags: /Ogsp
;	COMDAT ?AddRenderImage@RouletteCenterHelpWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z
_TEXT	SEGMENT
_this$GSCopy$ = -24					; size = 4
__t$506490 = -20					; size = 9
__$ArrayPad$ = -4					; size = 4
_szType$ = 8						; size = 4
_pImage$ = 12						; size = 4
?AddRenderImage@RouletteCenterHelpWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z PROC ; RouletteCenterHelpWnd::AddRenderImage, COMDAT
; _this$ = ecx

; 140  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 0c	 mov	 ebx, DWORD PTR _pImage$[ebp]
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b 7d 08	 mov	 edi, DWORD PTR _szType$[ebp]

; 141  : 	if( szType == "TextBack" )

  00019	6a 02		 push	 2
  0001b	89 4d e8	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  0001e	c7 45 ec b9 89
	93 9e		 mov	 DWORD PTR __t$506490[ebp], -1634498119 ; 9e9389b9H
  00025	c7 45 f0 af 8d
	88 81		 mov	 DWORD PTR __t$506490[ebp+4], -2121757265 ; 81888dafH
  0002c	8d 45 ec	 lea	 eax, DWORD PTR __t$506490[ebp]
  0002f	c6 45 f4 00	 mov	 BYTE PTR __t$506490[ebp+8], 0
  00033	59		 pop	 ecx
$LL111@AddRenderI@2:
  00034	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0003a	83 c0 04	 add	 eax, 4
  0003d	49		 dec	 ecx
  0003e	75 f4		 jne	 SHORT $LL111@AddRenderI@2
  00040	8b cf		 mov	 ecx, edi
  00042	8d 75 ec	 lea	 esi, DWORD PTR __t$506490[ebp]
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL118@AddRenderI@2:
  0004b	8a 08		 mov	 cl, BYTE PTR [eax]
  0004d	3a 0e		 cmp	 cl, BYTE PTR [esi]
  0004f	75 1a		 jne	 SHORT $LN119@AddRenderI@2
  00051	84 c9		 test	 cl, cl
  00053	74 12		 je	 SHORT $LN120@AddRenderI@2
  00055	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00058	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  0005b	75 0e		 jne	 SHORT $LN119@AddRenderI@2
  0005d	83 c0 02	 add	 eax, 2
  00060	83 c6 02	 add	 esi, 2
  00063	84 c9		 test	 cl, cl
  00065	75 e4		 jne	 SHORT $LL118@AddRenderI@2
$LN120@AddRenderI@2:
  00067	33 c0		 xor	 eax, eax
  00069	eb 05		 jmp	 SHORT $LN121@AddRenderI@2
$LN119@AddRenderI@2:
  0006b	1b c0		 sbb	 eax, eax
  0006d	83 d8 ff	 sbb	 eax, -1
$LN121@AddRenderI@2:
  00070	85 c0		 test	 eax, eax
  00072	75 23		 jne	 SHORT $LN3@AddRenderI@2

; 142  : 	{
; 143  : 		SAFEDELETE( m_pTextBack );

  00074	8b 75 e8	 mov	 esi, DWORD PTR _this$GSCopy$[ebp]
  00077	8b 8e 68 01 00
	00		 mov	 ecx, DWORD PTR [esi+360]
  0007d	85 c9		 test	 ecx, ecx
  0007f	74 0e		 je	 SHORT $LN2@AddRenderI@2
  00081	8b 01		 mov	 eax, DWORD PTR [ecx]
  00083	6a 01		 push	 1
  00085	ff 50 40	 call	 DWORD PTR [eax+64]
  00088	83 a6 68 01 00
	00 00		 and	 DWORD PTR [esi+360], 0
$LN2@AddRenderI@2:

; 144  : 		m_pTextBack = pImage;

  0008f	89 9e 68 01 00
	00		 mov	 DWORD PTR [esi+360], ebx

; 145  : 	}
; 146  : 	else

  00095	eb 0b		 jmp	 SHORT $LN1@AddRenderI@2
$LN3@AddRenderI@2:

; 147  : 		ioWnd::AddRenderImage( szType, pImage );

  00097	8b 4d e8	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  0009a	53		 push	 ebx
  0009b	57		 push	 edi
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
$LN1@AddRenderI@2:

; 148  : }

  000a2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a5	5f		 pop	 edi
  000a6	5e		 pop	 esi
  000a7	33 cd		 xor	 ecx, ebp
  000a9	5b		 pop	 ebx
  000aa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000af	c9		 leave
  000b0	c2 08 00	 ret	 8
?AddRenderImage@RouletteCenterHelpWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z ENDP ; RouletteCenterHelpWnd::AddRenderImage
_TEXT	ENDS
END
