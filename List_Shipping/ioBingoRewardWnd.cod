; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\GUI\ioBingoRewardWnd.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?GetHiddenIconName@ioBingo@@QAEABVioHashString@@XZ ; ioBingo::GetHiddenIconName
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iobingo.h
;	COMDAT ?GetHiddenIconName@ioBingo@@QAEABVioHashString@@XZ
_TEXT	SEGMENT
?GetHiddenIconName@ioBingo@@QAEABVioHashString@@XZ PROC	; ioBingo::GetHiddenIconName, COMDAT
; _this$ = ecx

; 225  : 	const ioHashString &GetHiddenIconName() { return m_HiddenIconName; }

  00000	8d 81 08 01 00
	00		 lea	 eax, DWORD PTR [ecx+264]
  00006	c3		 ret	 0
?GetHiddenIconName@ioBingo@@QAEABVioHashString@@XZ ENDP	; ioBingo::GetHiddenIconName
_TEXT	ENDS
PUBLIC	?GetRewardCount@ioBingo@@QAEHXZ			; ioBingo::GetRewardCount
; Function compile flags: /Ogsp
;	COMDAT ?GetRewardCount@ioBingo@@QAEHXZ
_TEXT	SEGMENT
?GetRewardCount@ioBingo@@QAEHXZ PROC			; ioBingo::GetRewardCount, COMDAT
; _this$ = ecx

; 244  : 	int GetRewardCount() { return m_iRewardCount; }

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00003	c3		 ret	 0
?GetRewardCount@ioBingo@@QAEHXZ ENDP			; ioBingo::GetRewardCount
_TEXT	ENDS
PUBLIC	?GetAllBingoRewardListCount@ioBingo@@QAEHXZ	; ioBingo::GetAllBingoRewardListCount
; Function compile flags: /Ogsp
;	COMDAT ?GetAllBingoRewardListCount@ioBingo@@QAEHXZ
_TEXT	SEGMENT
?GetAllBingoRewardListCount@ioBingo@@QAEHXZ PROC	; ioBingo::GetAllBingoRewardListCount, COMDAT
; _this$ = ecx

; 245  : 	int GetAllBingoRewardListCount() { return m_iAllBingoRewardCount; }

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00003	c3		 ret	 0
?GetAllBingoRewardListCount@ioBingo@@QAEHXZ ENDP	; ioBingo::GetAllBingoRewardListCount
_TEXT	ENDS
PUBLIC	??_7ioBingoIconButton@@6B@			; ioBingoIconButton::`vftable'
PUBLIC	??0ioBingoIconButton@@QAE@XZ			; ioBingoIconButton::ioBingoIconButton
PUBLIC	??_R4ioBingoIconButton@@6B@			; ioBingoIconButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioBingoIconButton@@@8			; ioBingoIconButton `RTTI Type Descriptor'
PUBLIC	??_R3ioBingoIconButton@@8			; ioBingoIconButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioBingoIconButton@@8			; ioBingoIconButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioBingoIconButton@@8		; ioBingoIconButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioButton@@8			; ioButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioButton@@@8				; ioButton `RTTI Type Descriptor'
PUBLIC	??_R3ioButton@@8				; ioButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioButton@@8				; ioButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioWnd@@8				; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioWnd@@@8				; ioWnd `RTTI Type Descriptor'
PUBLIC	??_R3ioWnd@@8					; ioWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioWnd@@8					; ioWnd::`RTTI Base Class Array'
PUBLIC	?AddRenderImage@ioBingoIconButton@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z ; ioBingoIconButton::AddRenderImage
PUBLIC	?OnRender@ioBingoIconButton@@MAEXXZ		; ioBingoIconButton::OnRender
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
EXTRN	__imp_??1ioButton@@UAE@XZ:PROC
EXTRN	__imp_?Clear@ioHashString@@QAEXXZ:PROC
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
EXTRN	__imp_??0ioButton@@QAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?AddRenderFrame@ioButton@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z:PROC ; ioButton::AddRenderFrame
EXTRN	?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z:PROC ; ioWnd::AddTooltipHelp
EXTRN	?ParseExtraInfo@ioButton@@UAEXAAVioXMLElement@@@Z:PROC ; ioButton::ParseExtraInfo
EXTRN	?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC ; ioWnd::AddNamedRenderImage
EXTRN	?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z:PROC ; ioWnd::RemoveNamedRenderImage
EXTRN	?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z:PROC ; ioWnd::GetNamedRenderImage
EXTRN	?SetWindowAlpha@ioButton@@UAEXH@Z:PROC		; ioButton::SetWindowAlpha
EXTRN	?SetActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetActive
EXTRN	?SetInActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetInActive
EXTRN	?ClearElementImageList@ioWnd@@UAEXXZ:PROC	; ioWnd::ClearElementImageList
EXTRN	?SetSize@ioWnd@@UAEXHH@Z:PROC			; ioWnd::SetSize
EXTRN	?SetPositionToDefault@ioWnd@@UAEXHH_N0@Z:PROC	; ioWnd::SetPositionToDefault
EXTRN	?IsNeedProcess@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsNeedProcess
EXTRN	?IsCanMouseReaction@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsCanMouseReaction
EXTRN	?AddChild@ioWnd@@UAEXPAV1@@Z:PROC		; ioWnd::AddChild
EXTRN	?DeleteChild@ioWnd@@UAEXK@Z:PROC		; ioWnd::DeleteChild
EXTRN	?DeleteAllChild@ioWnd@@UAEXXZ:PROC		; ioWnd::DeleteAllChild
EXTRN	?OnRenderShowAndHide@ioWnd@@MAE_NXZ:PROC	; ioWnd::OnRenderShowAndHide
EXTRN	?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z:PROC ; ioWnd::OnRenderShowAndHideByDefault
EXTRN	?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByTop
EXTRN	?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByDown
EXTRN	?OnRenderAfterChild@ioWnd@@MAEXXZ:PROC		; ioWnd::OnRenderAfterChild
EXTRN	?OnProcess@ioWnd@@MAEXM@Z:PROC			; ioWnd::OnProcess
EXTRN	?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z:PROC	; ioWnd::OnMouseProcess
EXTRN	?CheckFrameReSize@ioButton@@MAEXHHHH@Z:PROC	; ioButton::CheckFrameReSize
EXTRN	?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z:PROC ; ioWnd::RenderImageList
EXTRN	?iwm_create@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_create
EXTRN	?iwm_destroy@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_destroy
EXTRN	?iwm_lbuttondown@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_lbuttondown
EXTRN	?iwm_lbuttonup@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_lbuttonup
EXTRN	?iwm_lbuttonDBLCLK@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_lbuttonDBLCLK
EXTRN	?iwm_rbuttondown@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_rbuttondown
EXTRN	?iwm_rbuttonup@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_rbuttonup
EXTRN	?iwm_command@ioWnd@@UAEXPAV1@HK@Z:PROC		; ioWnd::iwm_command
EXTRN	?iwm_mouseover@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_mouseover
EXTRN	?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mousemove
EXTRN	?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mouseleave
EXTRN	?iwm_vscroll@ioWnd@@UAEXKH@Z:PROC		; ioWnd::iwm_vscroll
EXTRN	?iwm_wheel@ioWnd@@UAEXH@Z:PROC			; ioWnd::iwm_wheel
EXTRN	?iwm_show@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_show
EXTRN	?iwm_hide@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_hide
EXTRN	?iwm_esc@ioWnd@@UAE_NXZ:PROC			; ioWnd::iwm_esc
EXTRN	?iwm_spacebar@ioWnd@@UAE_NXZ:PROC		; ioWnd::iwm_spacebar
EXTRN	?iwm_gototop@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_gototop
EXTRN	?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragenter
EXTRN	?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragover
EXTRN	?iwm_dragleave@ioWnd@@UAEXXZ:PROC		; ioWnd::iwm_dragleave
EXTRN	?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z:PROC ; ioWnd::iwm_dropitem
EXTRN	?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z:PROC ; ioWnd::iwm_dropdone
EXTRN	?IsEXType@ioWnd@@UBE_NXZ:PROC			; ioWnd::IsEXType
EXTRN	?GetWndType@ioButton@@UBEKXZ:PROC		; ioButton::GetWndType
EXTRN	?RenderWnd@ioWnd@@UAEXXZ:PROC			; ioWnd::RenderWnd
EXTRN	?SetIDEX@ioWnd@@UAEXAAK_N@Z:PROC		; ioWnd::SetIDEX
EXTRN	?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC	; ioWnd::ParseXML
EXTRN	?GetHeaderFileName@ioButton@@UAEPBDXZ:PROC	; ioButton::GetHeaderFileName
EXTRN	?GetTemplateName@ioButton@@UAEPBDXZ:PROC	; ioButton::GetTemplateName
EXTRN	?GetDefClassName@ioButton@@UBEPBDXZ:PROC	; ioButton::GetDefClassName
EXTRN	?_Clone@ioButton@@UAEPAVioWnd@@XZ:PROC		; ioButton::_Clone
EXTRN	?Copy@ioButton@@UAEXPAVioWnd@@@Z:PROC		; ioButton::Copy
EXTRN	?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z:PROC	; ioWnd::Save
EXTRN	?SetSaveData@ioButton@@UAEXAAVioXMLElement@@@Z:PROC ; ioButton::SetSaveData
EXTRN	?SetPosX@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosX
EXTRN	?SetPosY@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosY
EXTRN	?SetWidth@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetWidth
EXTRN	?SetHeight@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetHeight
EXTRN	?GetNumFixedRenderFrame@ioButton@@UBEHXZ:PROC	; ioButton::GetNumFixedRenderFrame
EXTRN	?GetFixedRenderFrameType@ioButton@@UAEPBDH@Z:PROC ; ioButton::GetFixedRenderFrameType
EXTRN	?GetRenderFrame@ioButton@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioButton::GetRenderFrame
EXTRN	?GetNumFixedRenderImage@ioButton@@UBEHXZ:PROC	; ioButton::GetNumFixedRenderImage
EXTRN	?GetFixedRenderImageType@ioButton@@UAEPBDH@Z:PROC ; ioButton::GetFixedRenderImageType
EXTRN	?GetRenderImage@ioButton@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioButton::GetRenderImage
EXTRN	?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z:PROC ; ioWnd::AddEffect
EXTRN	?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z:PROC ; ioWnd::GetEffect
EXTRN	??_EioBingoIconButton@@UAEPAXI@Z:PROC		; ioBingoIconButton::`vector deleting destructor'
EXTRN	?OnDrawNormal@ioButton@@MAEXHH@Z:PROC		; ioButton::OnDrawNormal
EXTRN	?OnDrawOvered@ioButton@@MAEXHH@Z:PROC		; ioButton::OnDrawOvered
EXTRN	?OnDrawOveredAdd@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawOveredAdd
EXTRN	?OnDrawPushed@ioButton@@MAEXHH@Z:PROC		; ioButton::OnDrawPushed
EXTRN	?OnDrawDisabled@ioButton@@MAEXHH@Z:PROC		; ioButton::OnDrawDisabled
EXTRN	?OnDrawExDisabledNormal@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawExDisabledNormal
EXTRN	?OnDrawExDisabledOvered@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawExDisabledOvered
EXTRN	?OnDrawExDisabledPushed@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawExDisabledPushed
EXTRN	?OnDrawBack@ioButton@@MAEXHH@Z:PROC		; ioButton::OnDrawBack
EXTRN	?OnDrawNormalList@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawNormalList
EXTRN	?OnDrawDisableList@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawDisableList
;	COMDAT ??_R2ioWnd@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\iobingorewardwnd.cpp
rdata$r	SEGMENT
??_R2ioWnd@@8 DD FLAT:??_R1A@?0A@EA@ioWnd@@8		; ioWnd::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioWnd@@8
rdata$r	SEGMENT
??_R3ioWnd@@8 DD 00H					; ioWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioWnd@@@8
_DATA	SEGMENT
??_R0?AVioWnd@@@8 DD FLAT:??_7type_info@@6B@		; ioWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioWnd@@8 DD FLAT:??_R0?AVioWnd@@@8	; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2ioButton@@8
rdata$r	SEGMENT
??_R2ioButton@@8 DD FLAT:??_R1A@?0A@EA@ioButton@@8	; ioButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3ioButton@@8
rdata$r	SEGMENT
??_R3ioButton@@8 DD 00H					; ioButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioButton@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioButton@@@8
_DATA	SEGMENT
??_R0?AVioButton@@@8 DD FLAT:??_7type_info@@6B@		; ioButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioButton@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioButton@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioButton@@8 DD FLAT:??_R0?AVioButton@@@8	; ioButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioButton@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioBingoIconButton@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioBingoIconButton@@8 DD FLAT:??_R0?AVioBingoIconButton@@@8 ; ioBingoIconButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioBingoIconButton@@8
rdata$r	ENDS
;	COMDAT ??_R2ioBingoIconButton@@8
rdata$r	SEGMENT
??_R2ioBingoIconButton@@8 DD FLAT:??_R1A@?0A@EA@ioBingoIconButton@@8 ; ioBingoIconButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioButton@@8
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3ioBingoIconButton@@8
rdata$r	SEGMENT
??_R3ioBingoIconButton@@8 DD 00H			; ioBingoIconButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ioBingoIconButton@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioBingoIconButton@@@8
_DATA	SEGMENT
??_R0?AVioBingoIconButton@@@8 DD FLAT:??_7type_info@@6B@ ; ioBingoIconButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioBingoIconButton@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioBingoIconButton@@6B@
rdata$r	SEGMENT
??_R4ioBingoIconButton@@6B@ DD 00H			; ioBingoIconButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioBingoIconButton@@@8
	DD	FLAT:??_R3ioBingoIconButton@@8
rdata$r	ENDS
;	COMDAT ??_7ioBingoIconButton@@6B@
CONST	SEGMENT
??_7ioBingoIconButton@@6B@ DD FLAT:??_R4ioBingoIconButton@@6B@ ; ioBingoIconButton::`vftable'
	DD	FLAT:?AddRenderFrame@ioButton@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
	DD	FLAT:?AddRenderImage@ioBingoIconButton@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z
	DD	FLAT:?ParseExtraInfo@ioButton@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z
	DD	FLAT:?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z
	DD	FLAT:?SetWindowAlpha@ioButton@@UAEXH@Z
	DD	FLAT:?SetActive@ioWnd@@UAEXXZ
	DD	FLAT:?SetInActive@ioWnd@@UAEXXZ
	DD	FLAT:?ClearElementImageList@ioWnd@@UAEXXZ
	DD	FLAT:?SetSize@ioWnd@@UAEXHH@Z
	DD	FLAT:?SetPositionToDefault@ioWnd@@UAEXHH_N0@Z
	DD	FLAT:?IsNeedProcess@ioWnd@@UBE_NXZ
	DD	FLAT:?IsCanMouseReaction@ioWnd@@UBE_NXZ
	DD	FLAT:?AddChild@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?DeleteChild@ioWnd@@UAEXK@Z
	DD	FLAT:?DeleteAllChild@ioWnd@@UAEXXZ
	DD	FLAT:?OnRenderShowAndHide@ioWnd@@MAE_NXZ
	DD	FLAT:?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRender@ioBingoIconButton@@MAEXXZ
	DD	FLAT:?OnRenderAfterChild@ioWnd@@MAEXXZ
	DD	FLAT:?OnProcess@ioWnd@@MAEXM@Z
	DD	FLAT:?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z
	DD	FLAT:?CheckFrameReSize@ioButton@@MAEXHHHH@Z
	DD	FLAT:?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z
	DD	FLAT:?iwm_create@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_destroy@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_lbuttondown@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonup@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonDBLCLK@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttondown@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttonup@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_command@ioWnd@@UAEXPAV1@HK@Z
	DD	FLAT:?iwm_mouseover@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_vscroll@ioWnd@@UAEXKH@Z
	DD	FLAT:?iwm_wheel@ioWnd@@UAEXH@Z
	DD	FLAT:?iwm_show@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_hide@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_esc@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_spacebar@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_gototop@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragleave@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z
	DD	FLAT:?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z
	DD	FLAT:?IsEXType@ioWnd@@UBE_NXZ
	DD	FLAT:?GetWndType@ioButton@@UBEKXZ
	DD	FLAT:?RenderWnd@ioWnd@@UAEXXZ
	DD	FLAT:?SetIDEX@ioWnd@@UAEXAAK_N@Z
	DD	FLAT:?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?GetHeaderFileName@ioButton@@UAEPBDXZ
	DD	FLAT:?GetTemplateName@ioButton@@UAEPBDXZ
	DD	FLAT:?GetDefClassName@ioButton@@UBEPBDXZ
	DD	FLAT:?_Clone@ioButton@@UAEPAVioWnd@@XZ
	DD	FLAT:?Copy@ioButton@@UAEXPAVioWnd@@@Z
	DD	FLAT:?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z
	DD	FLAT:?SetSaveData@ioButton@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?SetPosX@ioWnd@@UAEXH@Z
	DD	FLAT:?SetPosY@ioWnd@@UAEXH@Z
	DD	FLAT:?SetWidth@ioWnd@@UAEXH@Z
	DD	FLAT:?SetHeight@ioWnd@@UAEXH@Z
	DD	FLAT:?GetNumFixedRenderFrame@ioButton@@UBEHXZ
	DD	FLAT:?GetFixedRenderFrameType@ioButton@@UAEPBDH@Z
	DD	FLAT:?GetRenderFrame@ioButton@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?GetNumFixedRenderImage@ioButton@@UBEHXZ
	DD	FLAT:?GetFixedRenderImageType@ioButton@@UAEPBDH@Z
	DD	FLAT:?GetRenderImage@ioButton@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z
	DD	FLAT:?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z
	DD	FLAT:??_EioBingoIconButton@@UAEPAXI@Z
	DD	FLAT:?OnDrawNormal@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawOvered@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawOveredAdd@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawPushed@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawDisabled@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawExDisabledNormal@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawExDisabledOvered@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawExDisabledPushed@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawBack@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawNormalList@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawDisableList@ioButton@@MAEXHH@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ioBingoIconButton@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioBingoIconButton@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ioBingoIconButton@@QAE@XZ$1
__ehfuncinfo$??0ioBingoIconButton@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0ioBingoIconButton@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0ioBingoIconButton@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ioBingoIconButton@@QAE@XZ PROC			; ioBingoIconButton::ioBingoIconButton, COMDAT
; _this$ = ecx

; 30   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioBingoIconButton@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioButton@@QAE@XZ
  00017	33 db		 xor	 ebx, ebx
  00019	8d 8e 0c 02 00
	00		 lea	 ecx, DWORD PTR [esi+524]
  0001f	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00022	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioBingoIconButton@@6B@
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ

; 31   : 	m_Index			= 0;
; 32   : 	m_pIcon			= NULL;
; 33   : 	m_pIconBack	= NULL;
; 34   : 	m_pIconEmpty	= NULL;
; 35   : 
; 36   : 	m_szName.Clear();

  0002e	8d 8e 0c 02 00
	00		 lea	 ecx, DWORD PTR [esi+524]
  00034	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00038	89 9e fc 01 00
	00		 mov	 DWORD PTR [esi+508], ebx
  0003e	89 9e 00 02 00
	00		 mov	 DWORD PTR [esi+512], ebx
  00044	89 9e 04 02 00
	00		 mov	 DWORD PTR [esi+516], ebx
  0004a	89 9e 08 02 00
	00		 mov	 DWORD PTR [esi+520], ebx
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Clear@ioHashString@@QAEXXZ

; 37   : }

  00056	8b c6		 mov	 eax, esi
  00058	e8 00 00 00 00	 call	 __EH_epilog3
  0005d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioBingoIconButton@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioButton@@UAE@XZ
__unwindfunclet$??0ioBingoIconButton@@QAE@XZ$1:
  00009	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	81 c1 0c 02 00
	00		 add	 ecx, 524		; 0000020cH
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??0ioBingoIconButton@@QAE@XZ:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioBingoIconButton@@QAE@XZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioBingoIconButton@@QAE@XZ ENDP			; ioBingoIconButton::ioBingoIconButton
PUBLIC	??1ioBingoIconButton@@UAE@XZ			; ioBingoIconButton::~ioBingoIconButton
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ioBingoIconButton@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioBingoIconButton@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ioBingoIconButton@@UAE@XZ$1
__ehfuncinfo$??1ioBingoIconButton@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1ioBingoIconButton@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1ioBingoIconButton@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioBingoIconButton@@UAE@XZ PROC			; ioBingoIconButton::~ioBingoIconButton, COMDAT
; _this$ = ecx

; 40   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioBingoIconButton@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioBingoIconButton@@6B@

; 41   : 	SAFEDELETE( m_pIcon );

  00017	8b 8e 00 02 00
	00		 mov	 ecx, DWORD PTR [esi+512]
  0001d	33 db		 xor	 ebx, ebx
  0001f	43		 inc	 ebx
  00020	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00023	85 c9		 test	 ecx, ecx
  00025	74 0d		 je	 SHORT $LN3@ioBingoIco
  00027	8b 01		 mov	 eax, DWORD PTR [ecx]
  00029	53		 push	 ebx
  0002a	ff 50 40	 call	 DWORD PTR [eax+64]
  0002d	83 a6 00 02 00
	00 00		 and	 DWORD PTR [esi+512], 0
$LN3@ioBingoIco:

; 42   : 	SAFEDELETE( m_pIconBack );

  00034	8b 8e 04 02 00
	00		 mov	 ecx, DWORD PTR [esi+516]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 0d		 je	 SHORT $LN2@ioBingoIco
  0003e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00040	53		 push	 ebx
  00041	ff 50 40	 call	 DWORD PTR [eax+64]
  00044	83 a6 04 02 00
	00 00		 and	 DWORD PTR [esi+516], 0
$LN2@ioBingoIco:

; 43   : 	SAFEDELETE( m_pIconEmpty );

  0004b	8b 8e 08 02 00
	00		 mov	 ecx, DWORD PTR [esi+520]
  00051	85 c9		 test	 ecx, ecx
  00053	74 0d		 je	 SHORT $LN1@ioBingoIco
  00055	8b 01		 mov	 eax, DWORD PTR [ecx]
  00057	53		 push	 ebx
  00058	ff 50 40	 call	 DWORD PTR [eax+64]
  0005b	83 a6 08 02 00
	00 00		 and	 DWORD PTR [esi+520], 0
$LN1@ioBingoIco:

; 44   : }

  00062	8d 8e 0c 02 00
	00		 lea	 ecx, DWORD PTR [esi+524]
  00068	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00072	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00076	8b ce		 mov	 ecx, esi
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioButton@@UAE@XZ
  0007e	e8 00 00 00 00	 call	 __EH_epilog3
  00083	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioBingoIconButton@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioButton@@UAE@XZ
__unwindfunclet$??1ioBingoIconButton@@UAE@XZ$1:
  00009	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	81 c1 0c 02 00
	00		 add	 ecx, 524		; 0000020cH
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??1ioBingoIconButton@@UAE@XZ:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioBingoIconButton@@UAE@XZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioBingoIconButton@@UAE@XZ ENDP			; ioBingoIconButton::~ioBingoIconButton
PUBLIC	??1RewardInfo@ioBingo@@QAE@XZ			; ioBingo::RewardInfo::~RewardInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1RewardInfo@ioBingo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1RewardInfo@ioBingo@@QAE@XZ$0
__ehfuncinfo$??1RewardInfo@ioBingo@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1RewardInfo@ioBingo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1RewardInfo@ioBingo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1RewardInfo@ioBingo@@QAE@XZ PROC			; ioBingo::RewardInfo::~RewardInfo, COMDAT
; _this$ = ecx
  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1RewardInfo@ioBingo@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00011	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00017	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001b	8d 4f 14	 lea	 ecx, DWORD PTR [edi+20]
  0001e	ff d6		 call	 esi
  00020	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00024	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00027	ff d6		 call	 esi
  00029	e8 00 00 00 00	 call	 __EH_epilog3
  0002e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1RewardInfo@ioBingo@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??1RewardInfo@ioBingo@@QAE@XZ:
  0000c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00010	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00013	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00016	33 c8		 xor	 ecx, eax
  00018	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1RewardInfo@ioBingo@@QAE@XZ
  00022	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1RewardInfo@ioBingo@@QAE@XZ ENDP			; ioBingo::RewardInfo::~RewardInfo
PUBLIC	?OnIconRender@ioBingoIconButton@@QAEXHH@Z	; ioBingoIconButton::OnIconRender
EXTRN	__imp_?IsEmpty@ioHashString@@QBE_NXZ:PROC
EXTRN	__imp_?GetWidth@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?GetHeight@ioWnd@@QBEHXZ:PROC
EXTRN	__fltused:DWORD
; Function compile flags: /Ogsp
;	COMDAT ?OnIconRender@ioBingoIconButton@@QAEXHH@Z
_TEXT	SEGMENT
_iXPos$ = 8						; size = 4
_iYPos$ = 12						; size = 4
?OnIconRender@ioBingoIconButton@@QAEXHH@Z PROC		; ioBingoIconButton::OnIconRender, COMDAT
; _this$ = ecx

; 109  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f1		 mov	 esi, ecx

; 110  : 	if( m_pIconBack )

  00008	33 ff		 xor	 edi, edi
  0000a	39 be 04 02 00
	00		 cmp	 DWORD PTR [esi+516], edi
  00010	74 4e		 je	 SHORT $LN5@OnIconRend

; 111  : 		m_pIconBack->Render( iXPos + GetWidth()/2, iYPos + GetHeight()/2, UI_RENDER_MULTIPLY, TFO_BILINEAR );

  00012	8b 86 04 02 00
	00		 mov	 eax, DWORD PTR [esi+516]
  00018	8b 18		 mov	 ebx, DWORD PTR [eax]
  0001a	57		 push	 edi
  0001b	57		 push	 edi
  0001c	6a 01		 push	 1
  0001e	6a 08		 push	 8
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetHeight@ioWnd@@QBEHXZ
  00026	99		 cdq
  00027	2b c2		 sub	 eax, edx
  00029	d1 f8		 sar	 eax, 1
  0002b	03 45 0c	 add	 eax, DWORD PTR _iYPos$[ebp]
  0002e	51		 push	 ecx
  0002f	0f 57 c0	 xorps	 xmm0, xmm0
  00032	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00036	8b ce		 mov	 ecx, esi
  00038	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetWidth@ioWnd@@QBEHXZ
  00043	99		 cdq
  00044	2b c2		 sub	 eax, edx
  00046	d1 f8		 sar	 eax, 1
  00048	03 45 08	 add	 eax, DWORD PTR _iXPos$[ebp]
  0004b	51		 push	 ecx
  0004c	8b 8e 04 02 00
	00		 mov	 ecx, DWORD PTR [esi+516]
  00052	0f 57 c0	 xorps	 xmm0, xmm0
  00055	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00059	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005e	ff 13		 call	 DWORD PTR [ebx]
$LN5@OnIconRend:

; 112  : 
; 113  : 	if(  m_szName.IsEmpty() )

  00060	8d 8e 0c 02 00
	00		 lea	 ecx, DWORD PTR [esi+524]
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@ioHashString@@QBE_NXZ
  0006c	84 c0		 test	 al, al
  0006e	74 47		 je	 SHORT $LN4@OnIconRend

; 114  : 	{
; 115  : 		if( m_pIconEmpty )

  00070	39 be 08 02 00
	00		 cmp	 DWORD PTR [esi+520], edi
  00076	0f 84 92 00 00
	00		 je	 $LN1@OnIconRend

; 116  : 			m_pIconEmpty->Render( iXPos + GetWidth()/2, iYPos + GetHeight()/2, UI_RENDER_MULTIPLY );

  0007c	8b 86 08 02 00
	00		 mov	 eax, DWORD PTR [esi+520]
  00082	8b 18		 mov	 ebx, DWORD PTR [eax]
  00084	57		 push	 edi
  00085	57		 push	 edi
  00086	57		 push	 edi
  00087	6a 08		 push	 8
  00089	8b ce		 mov	 ecx, esi
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetHeight@ioWnd@@QBEHXZ
  00091	99		 cdq
  00092	2b c2		 sub	 eax, edx
  00094	d1 f8		 sar	 eax, 1
  00096	03 45 0c	 add	 eax, DWORD PTR _iYPos$[ebp]
  00099	51		 push	 ecx
  0009a	0f 57 c0	 xorps	 xmm0, xmm0
  0009d	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000a1	8b ce		 mov	 ecx, esi
  000a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetWidth@ioWnd@@QBEHXZ
  000ae	51		 push	 ecx
  000af	8b 8e 08 02 00
	00		 mov	 ecx, DWORD PTR [esi+520]

; 117  : 	}
; 118  : 	else 

  000b5	eb 41		 jmp	 SHORT $LN8@OnIconRend
$LN4@OnIconRend:

; 119  : 	{
; 120  : 		if( m_pIcon )

  000b7	39 be 00 02 00
	00		 cmp	 DWORD PTR [esi+512], edi
  000bd	74 4f		 je	 SHORT $LN1@OnIconRend

; 121  : 			m_pIcon->Render( iXPos + GetWidth()/2, iYPos + GetHeight()/2, UI_RENDER_NORMAL,  TFO_BILINEAR );

  000bf	8b 86 00 02 00
	00		 mov	 eax, DWORD PTR [esi+512]
  000c5	8b 18		 mov	 ebx, DWORD PTR [eax]
  000c7	57		 push	 edi
  000c8	57		 push	 edi
  000c9	6a 01		 push	 1
  000cb	57		 push	 edi
  000cc	8b ce		 mov	 ecx, esi
  000ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetHeight@ioWnd@@QBEHXZ
  000d4	99		 cdq
  000d5	2b c2		 sub	 eax, edx
  000d7	d1 f8		 sar	 eax, 1
  000d9	03 45 0c	 add	 eax, DWORD PTR _iYPos$[ebp]
  000dc	51		 push	 ecx
  000dd	0f 57 c0	 xorps	 xmm0, xmm0
  000e0	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000e4	8b ce		 mov	 ecx, esi
  000e6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetWidth@ioWnd@@QBEHXZ
  000f1	51		 push	 ecx
  000f2	8b 8e 00 02 00
	00		 mov	 ecx, DWORD PTR [esi+512]
$LN8@OnIconRend:
  000f8	99		 cdq
  000f9	2b c2		 sub	 eax, edx
  000fb	d1 f8		 sar	 eax, 1
  000fd	03 45 08	 add	 eax, DWORD PTR _iXPos$[ebp]
  00100	0f 57 c0	 xorps	 xmm0, xmm0
  00103	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00107	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010c	ff 13		 call	 DWORD PTR [ebx]
$LN1@OnIconRend:
  0010e	5f		 pop	 edi
  0010f	5e		 pop	 esi
  00110	5b		 pop	 ebx

; 122  : 	}
; 123  : }

  00111	5d		 pop	 ebp
  00112	c2 08 00	 ret	 8
?OnIconRender@ioBingoIconButton@@QAEXHH@Z ENDP		; ioBingoIconButton::OnIconRender
_TEXT	ENDS
PUBLIC	__real@3f266666
PUBLIC	??_C@_0BL@BEKLCMJF@ioBingoRewardWnd?3?3OnRender?$AA@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?OnRender@ioBingoRewardWnd@@MAEXXZ		; ioBingoRewardWnd::OnRender
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ:PROC
EXTRN	__imp_?c_str@ioHashString@@QBEPBDXZ:PROC
EXTRN	__imp_?SetTextColor@ioFontManager@@QAEXK@Z:PROC
EXTRN	__imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z:PROC
EXTRN	__imp_?SetBkColor@ioFontManager@@QAEXHHH@Z:PROC
EXTRN	__imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z:PROC
EXTRN	__imp_?GetSingleton@ioFontManager@@SAAAV1@XZ:PROC
EXTRN	?PrintFullText@ioComplexStringPrinter@@QAEXMMW4TextAlignType@@E@Z:PROC ; ioComplexStringPrinter::PrintFullText
EXTRN	?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ:PROC ; ioComplexStringPrinter::AddTextPiece
EXTRN	__imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z:PROC
EXTRN	__imp_?GetSingleton@ioStringManager@@SAAAV1@XZ:PROC
EXTRN	?SetTextColor@ioComplexStringPrinter@@QAEXK@Z:PROC ; ioComplexStringPrinter::SetTextColor
EXTRN	?SetBkColor@ioComplexStringPrinter@@QAEXHHH@Z:PROC ; ioComplexStringPrinter::SetBkColor
EXTRN	?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z:PROC ; ioComplexStringPrinter::SetTextStyle
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??0ioComplexStringPrinter@@QAE@XZ:PROC		; ioComplexStringPrinter::ioComplexStringPrinter
EXTRN	??1ioComplexStringPrinter@@QAE@XZ:PROC		; ioComplexStringPrinter::~ioComplexStringPrinter
EXTRN	__imp_?GetDerivedPosY@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?GetDerivedPosX@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?OnRender@ioWnd@@MAEXXZ:PROC
;	COMDAT __real@3f266666
CONST	SEGMENT
__real@3f266666 DD 03f266666r			; 0.65
CONST	ENDS
;	COMDAT ??_C@_0BL@BEKLCMJF@ioBingoRewardWnd?3?3OnRender?$AA@
CONST	SEGMENT
??_C@_0BL@BEKLCMJF@ioBingoRewardWnd?3?3OnRender?$AA@ DB 'ioBingoRewardWnd'
	DB	'::OnRender', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnRender@ioBingoRewardWnd@@MAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnRender@ioBingoRewardWnd@@MAEXXZ$0
__ehfuncinfo$?OnRender@ioBingoRewardWnd@@MAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnRender@ioBingoRewardWnd@@MAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?OnRender@ioBingoRewardWnd@@MAEXXZ
_TEXT	SEGMENT
_kPrinter$ = -92					; size = 64
_this$ = -28						; size = 4
tv326 = -24						; size = 4
_iXPos$ = -24						; size = 4
_iYPos$ = -20						; size = 4
tv292 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?OnRender@ioBingoRewardWnd@@MAEXXZ PROC			; ioBingoRewardWnd::OnRender, COMDAT
; _this$ = ecx

; 220  : {

  00000	6a 50		 push	 80			; 00000050H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?OnRender@ioBingoRewardWnd@@MAEXXZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 e4	 mov	 DWORD PTR _this$[ebp], esi

; 221  : 	ioMovingWnd::OnRender();

  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?OnRender@ioWnd@@MAEXXZ

; 222  : 
; 223  : 	int iXPos = GetDerivedPosX();

  00017	8b ce		 mov	 ecx, esi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosX@ioWnd@@QBEHXZ

; 224  : 	int iYPos = GetDerivedPosY();

  0001f	8b ce		 mov	 ecx, esi
  00021	89 45 e8	 mov	 DWORD PTR _iXPos$[ebp], eax
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosY@ioWnd@@QBEHXZ

; 225  : 
; 226  : 	enum
; 227  : 	{
; 228  : 		DESC_X		= 238,
; 229  : 		DESC_Y		= 440,
; 230  : 
; 231  : 		LINE_GAP	= 20,
; 232  : 
; 233  : 		PAGE_X		= 238,
; 234  : 		PAGE_Y		= 395,
; 235  : 
; 236  : 		MAX_TEXT    = 2,
; 237  : 	};
; 238  : 
; 239  : 	ioComplexStringPrinter kPrinter[MAX_TEXT];

  0002a	68 00 00 00 00	 push	 OFFSET ??1ioComplexStringPrinter@@QAE@XZ ; ioComplexStringPrinter::~ioComplexStringPrinter
  0002f	68 00 00 00 00	 push	 OFFSET ??0ioComplexStringPrinter@@QAE@XZ ; ioComplexStringPrinter::ioComplexStringPrinter
  00034	6a 02		 push	 2
  00036	89 45 ec	 mov	 DWORD PTR _iYPos$[ebp], eax
  00039	6a 20		 push	 32			; 00000020H
  0003b	8d 45 a4	 lea	 eax, DWORD PTR _kPrinter$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ??_L@YGXPAXIHP6EX0@Z1@Z
  00044	33 f6		 xor	 esi, esi

; 240  : 	kPrinter[0].SetTextStyle( TS_NORMAL);

  00046	56		 push	 esi
  00047	8d 4d a4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  0004a	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
  0004d	e8 00 00 00 00	 call	 ?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z ; ioComplexStringPrinter::SetTextStyle

; 241  : 	kPrinter[0].SetBkColor( 0, 0, 0 );	

  00052	56		 push	 esi
  00053	56		 push	 esi
  00054	56		 push	 esi
  00055	8d 4d a4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  00058	e8 00 00 00 00	 call	 ?SetBkColor@ioComplexStringPrinter@@QAEXHHH@Z ; ioComplexStringPrinter::SetBkColor

; 242  : 	kPrinter[0].SetTextColor( TCT_DEFAULT_DARKGRAY ); 

  0005d	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  00062	8d 4d a4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  00065	e8 00 00 00 00	 call	 ?SetTextColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetTextColor

; 243  : 	kPrinter[0].AddTextPiece( FONT_SIZE_13, STR(1) );

  0006a	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetSingleton@ioStringManager@@SAAAV1@XZ
  00070	56		 push	 esi
  00071	6a 01		 push	 1
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@BEKLCMJF@ioBingoRewardWnd?3?3OnRender?$AA@
  0007d	ff d7		 call	 edi
  0007f	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  00085	8b c8		 mov	 ecx, eax
  00087	ff d3		 call	 ebx
  00089	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  00091	50		 push	 eax
  00092	51		 push	 ecx
  00093	8d 45 a4	 lea	 eax, DWORD PTR _kPrinter$[ebp]
  00096	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009b	50		 push	 eax
  0009c	e8 00 00 00 00	 call	 ?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ ; ioComplexStringPrinter::AddTextPiece
  000a1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 244  : 
; 245  : 	kPrinter[0].SetTextStyle( TS_NORMAL);

  000a4	56		 push	 esi
  000a5	8d 4d a4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  000a8	e8 00 00 00 00	 call	 ?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z ; ioComplexStringPrinter::SetTextStyle

; 246  : 	kPrinter[0].SetBkColor( 0, 0, 0 );	

  000ad	56		 push	 esi
  000ae	56		 push	 esi
  000af	56		 push	 esi
  000b0	8d 4d a4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  000b3	e8 00 00 00 00	 call	 ?SetBkColor@ioComplexStringPrinter@@QAEXHHH@Z ; ioComplexStringPrinter::SetBkColor

; 247  : 	kPrinter[0].SetTextColor( TCT_DEFAULT_RED ); 

  000b8	68 00 16 b9 ff	 push	 -4647424		; ffb91600H
  000bd	8d 4d a4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  000c0	e8 00 00 00 00	 call	 ?SetTextColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetTextColor

; 248  : 	kPrinter[0].AddTextPiece( FONT_SIZE_13, STR(2) );

  000c5	56		 push	 esi
  000c6	6a 02		 push	 2
  000c8	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@BEKLCMJF@ioBingoRewardWnd?3?3OnRender?$AA@
  000d2	ff d7		 call	 edi
  000d4	8b c8		 mov	 ecx, eax
  000d6	ff d3		 call	 ebx
  000d8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  000e0	50		 push	 eax
  000e1	51		 push	 ecx
  000e2	8d 45 a4	 lea	 eax, DWORD PTR _kPrinter$[ebp]
  000e5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ea	50		 push	 eax
  000eb	e8 00 00 00 00	 call	 ?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ ; ioComplexStringPrinter::AddTextPiece
  000f0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 249  : 
; 250  : 	kPrinter[0].SetTextStyle( TS_NORMAL);

  000f3	56		 push	 esi
  000f4	8d 4d a4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  000f7	e8 00 00 00 00	 call	 ?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z ; ioComplexStringPrinter::SetTextStyle

; 251  : 	kPrinter[0].SetBkColor( 0, 0, 0 );	

  000fc	56		 push	 esi
  000fd	56		 push	 esi
  000fe	56		 push	 esi
  000ff	8d 4d a4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  00102	e8 00 00 00 00	 call	 ?SetBkColor@ioComplexStringPrinter@@QAEXHHH@Z ; ioComplexStringPrinter::SetBkColor

; 252  : 	kPrinter[0].SetTextColor( TCT_DEFAULT_DARKGRAY ); 

  00107	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  0010c	8d 4d a4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  0010f	e8 00 00 00 00	 call	 ?SetTextColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetTextColor

; 253  : 	kPrinter[0].AddTextPiece( FONT_SIZE_13, STR(3) );

  00114	56		 push	 esi
  00115	6a 03		 push	 3
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0011c	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@BEKLCMJF@ioBingoRewardWnd?3?3OnRender?$AA@
  00121	ff d7		 call	 edi
  00123	8b c8		 mov	 ecx, eax
  00125	ff d3		 call	 ebx
  00127	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  0012f	50		 push	 eax
  00130	51		 push	 ecx
  00131	8d 45 a4	 lea	 eax, DWORD PTR _kPrinter$[ebp]
  00134	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00139	50		 push	 eax
  0013a	e8 00 00 00 00	 call	 ?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ ; ioComplexStringPrinter::AddTextPiece
  0013f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 254  : 
; 255  : 	kPrinter[1].SetTextStyle( TS_NORMAL);

  00142	56		 push	 esi
  00143	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp+32]
  00146	e8 00 00 00 00	 call	 ?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z ; ioComplexStringPrinter::SetTextStyle

; 256  : 	kPrinter[1].SetBkColor( 0, 0, 0 );	

  0014b	56		 push	 esi
  0014c	56		 push	 esi
  0014d	56		 push	 esi
  0014e	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp+32]
  00151	e8 00 00 00 00	 call	 ?SetBkColor@ioComplexStringPrinter@@QAEXHHH@Z ; ioComplexStringPrinter::SetBkColor

; 257  : 	kPrinter[1].SetTextColor( TCT_DEFAULT_DARKGRAY ); 

  00156	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  0015b	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp+32]
  0015e	e8 00 00 00 00	 call	 ?SetTextColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetTextColor

; 258  : 	kPrinter[1].AddTextPiece( FONT_SIZE_13, STR(4) );

  00163	56		 push	 esi
  00164	6a 04		 push	 4
  00166	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0016b	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@BEKLCMJF@ioBingoRewardWnd?3?3OnRender?$AA@
  00170	ff d7		 call	 edi
  00172	8b c8		 mov	 ecx, eax
  00174	ff d3		 call	 ebx
  00176	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  0017e	50		 push	 eax
  0017f	51		 push	 ecx
  00180	8d 45 c4	 lea	 eax, DWORD PTR _kPrinter$[ebp+32]
  00183	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00188	50		 push	 eax
  00189	e8 00 00 00 00	 call	 ?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ ; ioComplexStringPrinter::AddTextPiece
  0018e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 259  : 
; 260  : 	kPrinter[1].SetTextStyle( TS_NORMAL);

  00191	56		 push	 esi
  00192	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp+32]
  00195	e8 00 00 00 00	 call	 ?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z ; ioComplexStringPrinter::SetTextStyle

; 261  : 	kPrinter[1].SetBkColor( 0, 0, 0 );	

  0019a	56		 push	 esi
  0019b	56		 push	 esi
  0019c	56		 push	 esi
  0019d	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp+32]
  001a0	e8 00 00 00 00	 call	 ?SetBkColor@ioComplexStringPrinter@@QAEXHHH@Z ; ioComplexStringPrinter::SetBkColor

; 262  : 	kPrinter[1].SetTextColor( TCT_DEFAULT_RED ); 

  001a5	68 00 16 b9 ff	 push	 -4647424		; ffb91600H
  001aa	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp+32]
  001ad	e8 00 00 00 00	 call	 ?SetTextColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetTextColor

; 263  : 	kPrinter[1].AddTextPiece( FONT_SIZE_13, STR(5) );

  001b2	56		 push	 esi
  001b3	6a 05		 push	 5
  001b5	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  001ba	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@BEKLCMJF@ioBingoRewardWnd?3?3OnRender?$AA@
  001bf	ff d7		 call	 edi
  001c1	8b c8		 mov	 ecx, eax
  001c3	ff d3		 call	 ebx
  001c5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  001cd	50		 push	 eax
  001ce	51		 push	 ecx
  001cf	8d 45 c4	 lea	 eax, DWORD PTR _kPrinter$[ebp+32]
  001d2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d7	50		 push	 eax
  001d8	e8 00 00 00 00	 call	 ?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ ; ioComplexStringPrinter::AddTextPiece
  001dd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 264  : 
; 265  : 	kPrinter[1].SetTextStyle( TS_NORMAL);

  001e0	56		 push	 esi
  001e1	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp+32]
  001e4	e8 00 00 00 00	 call	 ?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z ; ioComplexStringPrinter::SetTextStyle

; 266  : 	kPrinter[1].SetBkColor( 0, 0, 0 );	

  001e9	56		 push	 esi
  001ea	56		 push	 esi
  001eb	56		 push	 esi
  001ec	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp+32]
  001ef	e8 00 00 00 00	 call	 ?SetBkColor@ioComplexStringPrinter@@QAEXHHH@Z ; ioComplexStringPrinter::SetBkColor

; 267  : 	kPrinter[1].SetTextColor( TCT_DEFAULT_DARKGRAY ); 

  001f4	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  001f9	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp+32]
  001fc	e8 00 00 00 00	 call	 ?SetTextColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetTextColor

; 268  : 	kPrinter[1].AddTextPiece( FONT_SIZE_13, STR(6));

  00201	56		 push	 esi
  00202	6a 06		 push	 6
  00204	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00209	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@BEKLCMJF@ioBingoRewardWnd?3?3OnRender?$AA@
  0020e	ff d7		 call	 edi
  00210	8b c8		 mov	 ecx, eax
  00212	ff d3		 call	 ebx
  00214	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  0021c	50		 push	 eax
  0021d	51		 push	 ecx
  0021e	8d 45 c4	 lea	 eax, DWORD PTR _kPrinter$[ebp+32]
  00221	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00226	50		 push	 eax
  00227	e8 00 00 00 00	 call	 ?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ ; ioComplexStringPrinter::AddTextPiece
  0022c	8b 45 e8	 mov	 eax, DWORD PTR _iXPos$[ebp]
  0022f	8b 7d ec	 mov	 edi, DWORD PTR _iYPos$[ebp]
  00232	05 ee 00 00 00	 add	 eax, 238		; 000000eeH

; 280  : }

  00237	0f 57 c0	 xorps	 xmm0, xmm0
  0023a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0023d	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00241	f3 0f 11 45 e8	 movss	 DWORD PTR tv326[ebp], xmm0
  00246	8d 5d a4	 lea	 ebx, DWORD PTR _kPrinter$[ebp]
  00249	81 c7 b8 01 00
	00		 add	 edi, 440		; 000001b8H
  0024f	c7 45 f0 02 00
	00 00		 mov	 DWORD PTR tv292[ebp], 2
$LN3@OnRender:

; 269  : 
; 270  : 
; 271  : 	for (int i = 0; i < MAX_TEXT ; i++)
; 272  : 	{	
; 273  : 		kPrinter[i].PrintFullText( iXPos + DESC_X, iYPos + DESC_Y + ( i*LINE_GAP), TAT_CENTER );

  00256	68 ff 00 00 00	 push	 255			; 000000ffH
  0025b	6a 01		 push	 1
  0025d	51		 push	 ecx
  0025e	51		 push	 ecx
  0025f	0f 57 c0	 xorps	 xmm0, xmm0
  00262	f3 0f 2a c7	 cvtsi2ss xmm0, edi
  00266	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0026c	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR tv326[ebp]
  00271	8b cb		 mov	 ecx, ebx
  00273	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00278	e8 00 00 00 00	 call	 ?PrintFullText@ioComplexStringPrinter@@QAEXMMW4TextAlignType@@E@Z ; ioComplexStringPrinter::PrintFullText
  0027d	83 c7 14	 add	 edi, 20			; 00000014H
  00280	83 c3 20	 add	 ebx, 32			; 00000020H
  00283	ff 4d f0	 dec	 DWORD PTR tv292[ebp]
  00286	75 ce		 jne	 SHORT $LN3@OnRender

; 274  : 	}
; 275  : 	g_FontMgr.SetTextStyle( TS_NORMAL );

  00288	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetSingleton@ioFontManager@@SAAAV1@XZ
  0028e	56		 push	 esi
  0028f	ff d7		 call	 edi
  00291	8b c8		 mov	 ecx, eax
  00293	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z

; 276  : 	g_FontMgr.SetBkColor( 0, 0, 0 );

  00299	56		 push	 esi
  0029a	56		 push	 esi
  0029b	56		 push	 esi
  0029c	ff d7		 call	 edi
  0029e	8b c8		 mov	 ecx, eax
  002a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetBkColor@ioFontManager@@QAEXHHH@Z

; 277  : 	g_FontMgr.SetAlignType( TAT_CENTER );

  002a6	6a 01		 push	 1
  002a8	ff d7		 call	 edi
  002aa	8b c8		 mov	 ecx, eax
  002ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 278  : 	g_FontMgr.SetTextColor( TCT_DEFAULT_DARKGRAY );

  002b2	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  002b7	ff d7		 call	 edi
  002b9	8b c8		 mov	 ecx, eax
  002bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 279  : 	g_FontMgr.PrintText( iXPos+PAGE_X, iYPos+PAGE_Y, FONT_SIZE_13, m_szPageText.c_str() );

  002c1	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  002c4	81 c1 98 01 00
	00		 add	 ecx, 408		; 00000198H
  002ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  002d0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  002d8	50		 push	 eax
  002d9	8b 45 ec	 mov	 eax, DWORD PTR _iYPos$[ebp]
  002dc	83 ec 0c	 sub	 esp, 12			; 0000000cH
  002df	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  002e5	05 8b 01 00 00	 add	 eax, 395		; 0000018bH
  002ea	0f 57 c0	 xorps	 xmm0, xmm0
  002ed	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  002f1	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  002f7	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR tv326[ebp]
  002fc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00301	ff d7		 call	 edi
  00303	50		 push	 eax
  00304	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ

; 280  : }

  0030a	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0030e	83 c4 14	 add	 esp, 20			; 00000014H
  00311	68 00 00 00 00	 push	 OFFSET ??1ioComplexStringPrinter@@QAE@XZ ; ioComplexStringPrinter::~ioComplexStringPrinter
  00316	6a 02		 push	 2
  00318	6a 20		 push	 32			; 00000020H
  0031a	8d 45 a4	 lea	 eax, DWORD PTR _kPrinter$[ebp]
  0031d	50		 push	 eax
  0031e	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00323	e8 00 00 00 00	 call	 __EH_epilog3
  00328	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnRender@ioBingoRewardWnd@@MAEXXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ??1ioComplexStringPrinter@@QAE@XZ ; ioComplexStringPrinter::~ioComplexStringPrinter
  00005	6a 02		 push	 2
  00007	6a 20		 push	 32			; 00000020H
  00009	8d 45 a4	 lea	 eax, DWORD PTR _kPrinter$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00012	c3		 ret	 0
__ehhandler$?OnRender@ioBingoRewardWnd@@MAEXXZ:
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnRender@ioBingoRewardWnd@@MAEXXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnRender@ioBingoRewardWnd@@MAEXXZ ENDP			; ioBingoRewardWnd::OnRender
PUBLIC	??1?$_Vector_val@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@QAE@XZ ; std::_Vector_val<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::~_Vector_val<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$_Vector_val@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::~_Vector_val<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::~_Vector_val<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVioUIRenderImage@@@std@@QAE@XZ	; std::allocator<ioUIRenderImage *>::allocator<ioUIRenderImage *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAVioUIRenderImage@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAVioUIRenderImage@@@std@@QAE@XZ PROC	; std::allocator<ioUIRenderImage *>::allocator<ioUIRenderImage *>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@PAVioUIRenderImage@@@std@@QAE@XZ ENDP	; std::allocator<ioUIRenderImage *>::allocator<ioUIRenderImage *>
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVioUIRenderImage@@@std@@QAE@ABV01@@Z ; std::allocator<ioUIRenderImage *>::allocator<ioUIRenderImage *>
; Function compile flags: /Ogsp
;	COMDAT ??0?$allocator@PAVioUIRenderImage@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAVioUIRenderImage@@@std@@QAE@ABV01@@Z PROC ; std::allocator<ioUIRenderImage *>::allocator<ioUIRenderImage *>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@PAVioUIRenderImage@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<ioUIRenderImage *>::allocator<ioUIRenderImage *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVioUIRenderImage@@@std@@QAEXPAPAVioUIRenderImage@@I@Z ; std::allocator<ioUIRenderImage *>::deallocate
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@PAVioUIRenderImage@@@std@@QAEXPAPAVioUIRenderImage@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVioUIRenderImage@@@std@@QAEXPAPAVioUIRenderImage@@I@Z PROC ; std::allocator<ioUIRenderImage *>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVioUIRenderImage@@@std@@QAEXPAPAVioUIRenderImage@@I@Z ENDP ; std::allocator<ioUIRenderImage *>::deallocate
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAVioUIRenderImage@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioUIRenderImage@@0@Z ; std::_Ptr_cat<ioUIRenderImage *,ioUIRenderImage *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAVioUIRenderImage@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioUIRenderImage@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVioUIRenderImage@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioUIRenderImage@@0@Z PROC ; std::_Ptr_cat<ioUIRenderImage *,ioUIRenderImage *>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@PAVioUIRenderImage@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioUIRenderImage@@0@Z ENDP ; std::_Ptr_cat<ioUIRenderImage *,ioUIRenderImage *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVioUIRenderImage@@@std@@@std@@YAXPAPAVioUIRenderImage@@0AAV?$allocator@PAVioUIRenderImage@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ioUIRenderImage *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVioUIRenderImage@@@std@@@std@@YAXPAPAVioUIRenderImage@@0AAV?$allocator@PAVioUIRenderImage@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAVioUIRenderImage@@@std@@@std@@YAXPAPAVioUIRenderImage@@0AAV?$allocator@PAVioUIRenderImage@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ioUIRenderImage *> >, COMDAT

; 105  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAVioUIRenderImage@@@std@@@std@@YAXPAPAVioUIRenderImage@@0AAV?$allocator@PAVioUIRenderImage@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioUIRenderImage *> >
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
PUBLIC	?GetBingo@ioMyInfo@@QAEPAVioBingo@@XZ		; ioMyInfo::GetBingo
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomyinfo.h
;	COMDAT ?GetBingo@ioMyInfo@@QAEPAVioBingo@@XZ
_TEXT	SEGMENT
?GetBingo@ioMyInfo@@QAEPAVioBingo@@XZ PROC		; ioMyInfo::GetBingo, COMDAT
; _this$ = ecx

; 643  : 	ioBingo* GetBingo() { return m_pBingo; }

  00000	8b 81 94 0b 00
	00		 mov	 eax, DWORD PTR [ecx+2964]
  00006	c3		 ret	 0
?GetBingo@ioMyInfo@@QAEPAVioBingo@@XZ ENDP		; ioMyInfo::GetBingo
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GioBingoIconButton@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioBingoIconButton@@UAEPAXI@Z PROC			; ioBingoIconButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioBingoIconButton@@UAE@XZ ; ioBingoIconButton::~ioBingoIconButton
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioBingoIconButton@@UAEPAXI@Z ENDP			; ioBingoIconButton::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_03BBKEAIF@?$DP?$DP?$DP?$AA@		; `string'
PUBLIC	?SetBingoInfo@ioBingoIconButton@@QAEXH@Z	; ioBingoIconButton::SetBingoInfo
EXTRN	?GetRewardName@ioBingo@@QAEABVioHashString@@H@Z:PROC ; ioBingo::GetRewardName
EXTRN	__imp_??4ioHashString@@QAEAAV0@PBD@Z:PROC
EXTRN	?GetRewardInfo@ioBingo@@QAE?AURewardInfo@1@H@Z:PROC ; ioBingo::GetRewardInfo
EXTRN	__imp_??4ioHashString@@QAEAAV0@ABV0@@Z:PROC
EXTRN	?GetAllBingoRewardName@ioBingo@@QAEABVioHashString@@H@Z:PROC ; ioBingo::GetAllBingoRewardName
EXTRN	__imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z:PROC
EXTRN	__imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ:PROC
EXTRN	?GetAllBingoRewardInfo@ioBingo@@QAEABURewardInfo@1@H@Z:PROC ; ioBingo::GetAllBingoRewardInfo
EXTRN	?GetSingleton@ioMyInfo@@SAAAV1@XZ:PROC		; ioMyInfo::GetSingleton
;	COMDAT ??_C@_03BBKEAIF@?$DP?$DP?$DP?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iobingo.h
CONST	SEGMENT
??_C@_03BBKEAIF@?$DP?$DP?$DP?$AA@ DB '???', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetBingoInfo@ioBingoIconButton@@QAEXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetBingoInfo@ioBingoIconButton@@QAEXH@Z$0
__ehfuncinfo$?SetBingoInfo@ioBingoIconButton@@QAEXH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetBingoInfo@ioBingoIconButton@@QAEXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\iobingorewardwnd.cpp
xdata$x	ENDS
;	COMDAT ?SetBingoInfo@ioBingoIconButton@@QAEXH@Z
_TEXT	SEGMENT
_Info$507606 = -68					; size = 56
__$EHRec$ = -12						; size = 12
_Index$ = 8						; size = 4
?SetBingoInfo@ioBingoIconButton@@QAEXH@Z PROC		; ioBingoIconButton::SetBingoInfo, COMDAT
; _this$ = ecx

; 65   : {

  00000	6a 38		 push	 56			; 00000038H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?SetBingoInfo@ioBingoIconButton@@QAEXH@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 66   : 	ioBingo* pBingo = g_MyInfo.GetBingo(); 

  0000e	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00013	8b b8 94 0b 00
	00		 mov	 edi, DWORD PTR [eax+2964]

; 67   : 	if( !pBingo )

  00019	33 db		 xor	 ebx, ebx
  0001b	3b fb		 cmp	 edi, ebx
  0001d	0f 84 f5 00 00
	00		 je	 $LN3@SetBingoIn

; 68   : 		return;
; 69   : 
; 70   : 	m_Index = Index + 1;

  00023	8b 45 08	 mov	 eax, DWORD PTR _Index$[ebp]

; 71   : 	SAFEDELETE( m_pIcon );

  00026	8b 8e 00 02 00
	00		 mov	 ecx, DWORD PTR [esi+512]
  0002c	40		 inc	 eax
  0002d	89 86 fc 01 00
	00		 mov	 DWORD PTR [esi+508], eax
  00033	3b cb		 cmp	 ecx, ebx
  00035	74 0d		 je	 SHORT $LN5@SetBingoIn
  00037	8b 01		 mov	 eax, DWORD PTR [ecx]
  00039	6a 01		 push	 1
  0003b	ff 50 40	 call	 DWORD PTR [eax+64]
  0003e	89 9e 00 02 00
	00		 mov	 DWORD PTR [esi+512], ebx
$LN5@SetBingoIn:

; 72   : 	if( m_Index <= pBingo->GetAllBingoRewardListCount() )

  00044	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00047	8b 86 fc 01 00
	00		 mov	 eax, DWORD PTR [esi+508]
  0004d	3b c1		 cmp	 eax, ecx
  0004f	7f 40		 jg	 SHORT $LN4@SetBingoIn

; 73   : 	{
; 74   : 		const ioBingo::RewardInfo& rkInfo = pBingo->GetAllBingoRewardInfo( m_Index );

  00051	50		 push	 eax
  00052	8b cf		 mov	 ecx, edi
  00054	e8 00 00 00 00	 call	 ?GetAllBingoRewardInfo@ioBingo@@QAEABURewardInfo@1@H@Z ; ioBingo::GetAllBingoRewardInfo

; 75   : 		m_pIcon = g_UIImageSetMgr.CreateImageByFullName( rkInfo.m_IconName );

  00059	83 c0 14	 add	 eax, 20			; 00000014H
  0005c	53		 push	 ebx
  0005d	50		 push	 eax
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ
  00064	8b c8		 mov	 ecx, eax
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z

; 76   : 		
; 77   : 		m_szName = pBingo->GetAllBingoRewardName( m_Index );

  0006c	ff b6 fc 01 00
	00		 push	 DWORD PTR [esi+508]
  00072	8b cf		 mov	 ecx, edi
  00074	89 86 00 02 00
	00		 mov	 DWORD PTR [esi+512], eax
  0007a	e8 00 00 00 00	 call	 ?GetAllBingoRewardName@ioBingo@@QAEABVioHashString@@H@Z ; ioBingo::GetAllBingoRewardName
  0007f	50		 push	 eax
  00080	8d 8e 0c 02 00
	00		 lea	 ecx, DWORD PTR [esi+524]
  00086	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z

; 78   : 	}
; 79   : 	else

  0008c	e9 87 00 00 00	 jmp	 $LN3@SetBingoIn
$LN4@SetBingoIn:

; 80   : 	{
; 81   : 		ioBingo::RewardInfo Info = pBingo->GetRewardInfo( m_Index - pBingo->GetAllBingoRewardListCount());

  00091	2b c1		 sub	 eax, ecx
  00093	50		 push	 eax
  00094	8d 45 bc	 lea	 eax, DWORD PTR _Info$507606[ebp]
  00097	50		 push	 eax
  00098	8b cf		 mov	 ecx, edi
  0009a	e8 00 00 00 00	 call	 ?GetRewardInfo@ioBingo@@QAE?AURewardInfo@1@H@Z ; ioBingo::GetRewardInfo
  0009f	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx

; 82   : 		if( Info.m_bHidden )
; 83   : 		{
; 84   : 			m_pIcon = g_UIImageSetMgr.CreateImageByFullName( pBingo->GetHiddenIconName() );

  000a2	53		 push	 ebx
  000a3	38 5d e0	 cmp	 BYTE PTR _Info$507606[ebp+36], bl
  000a6	74 2e		 je	 SHORT $LN2@SetBingoIn
  000a8	81 c7 08 01 00
	00		 add	 edi, 264		; 00000108H
  000ae	57		 push	 edi
  000af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ
  000b5	8b c8		 mov	 ecx, eax
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z

; 85   : 			m_szName = "???";

  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_03BBKEAIF@?$DP?$DP?$DP?$AA@
  000c2	8d 8e 0c 02 00
	00		 lea	 ecx, DWORD PTR [esi+524]
  000c8	89 86 00 02 00
	00		 mov	 DWORD PTR [esi+512], eax
  000ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z

; 86   : 		}
; 87   : 		else

  000d4	eb 36		 jmp	 SHORT $LN1@SetBingoIn
$LN2@SetBingoIn:

; 88   : 		{
; 89   : 			m_pIcon = g_UIImageSetMgr.CreateImageByFullName( Info.m_IconName );

  000d6	8d 45 d0	 lea	 eax, DWORD PTR _Info$507606[ebp+20]
  000d9	50		 push	 eax
  000da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ
  000e0	8b c8		 mov	 ecx, eax
  000e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z

; 90   : 			m_szName = pBingo->GetRewardName( m_Index - pBingo->GetAllBingoRewardListCount() );

  000e8	8b 8e fc 01 00
	00		 mov	 ecx, DWORD PTR [esi+508]
  000ee	89 86 00 02 00
	00		 mov	 DWORD PTR [esi+512], eax
  000f4	2b 4f 10	 sub	 ecx, DWORD PTR [edi+16]
  000f7	51		 push	 ecx
  000f8	8b cf		 mov	 ecx, edi
  000fa	e8 00 00 00 00	 call	 ?GetRewardName@ioBingo@@QAEABVioHashString@@H@Z ; ioBingo::GetRewardName
  000ff	50		 push	 eax
  00100	8d 8e 0c 02 00
	00		 lea	 ecx, DWORD PTR [esi+524]
  00106	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
$LN1@SetBingoIn:

; 91   : 		}
; 92   : 	}

  0010c	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00110	8d 4d bc	 lea	 ecx, DWORD PTR _Info$507606[ebp]
  00113	e8 00 00 00 00	 call	 ??1RewardInfo@ioBingo@@QAE@XZ
$LN3@SetBingoIn:

; 93   : }

  00118	e8 00 00 00 00	 call	 __EH_epilog3
  0011d	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetBingoInfo@ioBingoIconButton@@QAEXH@Z$0:
  00000	8d 4d bc	 lea	 ecx, DWORD PTR _Info$507606[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1RewardInfo@ioBingo@@QAE@XZ
__ehhandler$?SetBingoInfo@ioBingoIconButton@@QAEXH@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetBingoInfo@ioBingoIconButton@@QAEXH@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetBingoInfo@ioBingoIconButton@@QAEXH@Z ENDP		; ioBingoIconButton::SetBingoInfo
PUBLIC	__real@42d00000
EXTRN	__imp_?PrintTextWidthCut@ioFontManager@@QAAXMMMMPBDZZ:PROC
EXTRN	__imp_?OnRender@ioButton@@MAEXXZ:PROC
;	COMDAT __real@42d00000
CONST	SEGMENT
__real@42d00000 DD 042d00000r			; 104
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?OnRender@ioBingoIconButton@@MAEXXZ
_TEXT	SEGMENT
?OnRender@ioBingoIconButton@@MAEXXZ PROC		; ioBingoIconButton::OnRender, COMDAT
; _this$ = ecx

; 96   : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f1		 mov	 esi, ecx

; 97   : 	ioButton::OnRender();

  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?OnRender@ioButton@@MAEXXZ

; 98   : 
; 99   : 	int iXPos = GetDerivedPosX();

  0000b	8b ce		 mov	 ecx, esi
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosX@ioWnd@@QBEHXZ

; 100  : 	int iYPos = GetDerivedPosY();

  00013	8b ce		 mov	 ecx, esi
  00015	8b f8		 mov	 edi, eax
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosY@ioWnd@@QBEHXZ

; 101  : 
; 102  : 	enum { X_TEXT_OFFSET = 32, Y_TEXT_OFFSET = 79, };
; 103  : 	g_FontMgr.PrintTextWidthCut( iXPos+X_TEXT_OFFSET, iYPos+Y_TEXT_OFFSET, FONT_SIZE_13, 104.0f, m_szName.c_str() );

  0001d	8d 8e 0c 02 00
	00		 lea	 ecx, DWORD PTR [esi+524]
  00023	8b d8		 mov	 ebx, eax
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  0002b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42d00000
  00033	50		 push	 eax
  00034	83 ec 10	 sub	 esp, 16			; 00000010H
  00037	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0003d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  00045	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0004b	0f 57 c0	 xorps	 xmm0, xmm0
  0004e	8d 43 4f	 lea	 eax, DWORD PTR [ebx+79]
  00051	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00055	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0005b	8d 47 20	 lea	 eax, DWORD PTR [edi+32]
  0005e	0f 57 c0	 xorps	 xmm0, xmm0
  00061	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00065	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFontManager@@SAAAV1@XZ
  00070	50		 push	 eax
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTextWidthCut@ioFontManager@@QAAXMMMMPBDZZ
  00077	83 c4 18	 add	 esp, 24			; 00000018H

; 104  : 
; 105  : 	OnIconRender( iXPos, iYPos );

  0007a	53		 push	 ebx
  0007b	57		 push	 edi
  0007c	8b ce		 mov	 ecx, esi
  0007e	e8 00 00 00 00	 call	 ?OnIconRender@ioBingoIconButton@@QAEXHH@Z ; ioBingoIconButton::OnIconRender
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx

; 106  : }

  00086	c3		 ret	 0
?OnRender@ioBingoIconButton@@MAEXXZ ENDP		; ioBingoIconButton::OnRender
_TEXT	ENDS
PUBLIC	?UpdateIconBingoBtn@ioBingoRewardWnd@@IAEXHH@Z	; ioBingoRewardWnd::UpdateIconBingoBtn
EXTRN	__imp_?FindChildWnd@ioWnd@@QAEPAV1@K@Z:PROC
EXTRN	___RTDynamicCast:PROC
; Function compile flags: /Ogsp
;	COMDAT ?UpdateIconBingoBtn@ioBingoRewardWnd@@IAEXHH@Z
_TEXT	SEGMENT
_iPos$ = 8						; size = 4
_index$ = 12						; size = 4
?UpdateIconBingoBtn@ioBingoRewardWnd@@IAEXHH@Z PROC	; ioBingoRewardWnd::UpdateIconBingoBtn, COMDAT
; _this$ = ecx

; 194  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b f9		 mov	 edi, ecx

; 195  : 	ioBingo* pBingo = g_MyInfo.GetBingo();

  00006	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton

; 196  : 	if( !pBingo )

  0000b	83 b8 94 0b 00
	00 00		 cmp	 DWORD PTR [eax+2964], 0
  00012	74 34		 je	 SHORT $LN1@UpdateIcon

; 197  : 		return;
; 198  : 
; 199  : 	ioBingoIconButton* pBtn = dynamic_cast<ioBingoIconButton*>( FindChildWnd( ID_ICON_BTN1 + iPos ) );

  00014	8b 45 08	 mov	 eax, DWORD PTR _iPos$[ebp]
  00017	6a 00		 push	 0
  00019	68 00 00 00 00	 push	 OFFSET ??_R0?AVioBingoIconButton@@@8
  0001e	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWnd@@@8
  00023	6a 00		 push	 0
  00025	83 c0 64	 add	 eax, 100		; 00000064H
  00028	50		 push	 eax
  00029	8b cf		 mov	 ecx, edi
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindChildWnd@ioWnd@@QAEPAV1@K@Z
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ___RTDynamicCast
  00037	83 c4 14	 add	 esp, 20			; 00000014H

; 200  : 	if( pBtn )

  0003a	85 c0		 test	 eax, eax
  0003c	74 0a		 je	 SHORT $LN1@UpdateIcon

; 201  : 	{
; 202  : 		pBtn->SetBingoInfo( index );

  0003e	ff 75 0c	 push	 DWORD PTR _index$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	e8 00 00 00 00	 call	 ?SetBingoInfo@ioBingoIconButton@@QAEXH@Z ; ioBingoIconButton::SetBingoInfo
$LN1@UpdateIcon:
  00048	5f		 pop	 edi

; 203  : 	}
; 204  : }

  00049	5d		 pop	 ebp
  0004a	c2 08 00	 ret	 8
?UpdateIconBingoBtn@ioBingoRewardWnd@@IAEXHH@Z ENDP	; ioBingoRewardWnd::UpdateIconBingoBtn
_TEXT	ENDS
PUBLIC	?UpdateIconAllBingoBtn@ioBingoRewardWnd@@IAEXHH@Z ; ioBingoRewardWnd::UpdateIconAllBingoBtn
; Function compile flags: /Ogsp
;	COMDAT ?UpdateIconAllBingoBtn@ioBingoRewardWnd@@IAEXHH@Z
_TEXT	SEGMENT
_iPos$ = 8						; size = 4
_index$ = 12						; size = 4
?UpdateIconAllBingoBtn@ioBingoRewardWnd@@IAEXHH@Z PROC	; ioBingoRewardWnd::UpdateIconAllBingoBtn, COMDAT
; _this$ = ecx

; 207  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b f9		 mov	 edi, ecx

; 208  : 	ioBingo* pBingo = g_MyInfo.GetBingo();

  00006	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton

; 209  : 	if( !pBingo )

  0000b	83 b8 94 0b 00
	00 00		 cmp	 DWORD PTR [eax+2964], 0
  00012	74 34		 je	 SHORT $LN1@UpdateIcon@2

; 210  : 		return;
; 211  : 
; 212  : 	ioBingoIconButton* pBtn = dynamic_cast<ioBingoIconButton*>( FindChildWnd( ID_ICON_BTN1 + iPos ) );

  00014	8b 45 08	 mov	 eax, DWORD PTR _iPos$[ebp]
  00017	6a 00		 push	 0
  00019	68 00 00 00 00	 push	 OFFSET ??_R0?AVioBingoIconButton@@@8
  0001e	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWnd@@@8
  00023	6a 00		 push	 0
  00025	83 c0 64	 add	 eax, 100		; 00000064H
  00028	50		 push	 eax
  00029	8b cf		 mov	 ecx, edi
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindChildWnd@ioWnd@@QAEPAV1@K@Z
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ___RTDynamicCast
  00037	83 c4 14	 add	 esp, 20			; 00000014H

; 213  : 	if( pBtn )

  0003a	85 c0		 test	 eax, eax
  0003c	74 0a		 je	 SHORT $LN1@UpdateIcon@2

; 214  : 	{
; 215  : 		pBtn->SetBingoInfo( index );

  0003e	ff 75 0c	 push	 DWORD PTR _index$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	e8 00 00 00 00	 call	 ?SetBingoInfo@ioBingoIconButton@@QAEXH@Z ; ioBingoIconButton::SetBingoInfo
$LN1@UpdateIcon@2:
  00048	5f		 pop	 edi

; 216  : 	}	
; 217  : }

  00049	5d		 pop	 ebp
  0004a	c2 08 00	 ret	 8
?UpdateIconAllBingoBtn@ioBingoRewardWnd@@IAEXHH@Z ENDP	; ioBingoRewardWnd::UpdateIconAllBingoBtn
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@QAE@V?$allocator@PAVioUIRenderImage@@@1@@Z ; std::_Vector_val<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::_Vector_val<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@QAE@V?$allocator@PAVioUIRenderImage@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@QAE@V?$allocator@PAVioUIRenderImage@@@1@@Z PROC ; std::_Vector_val<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::_Vector_val<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@QAE@V?$allocator@PAVioUIRenderImage@@@1@@Z ENDP ; std::_Vector_val<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::_Vector_val<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$?8$08@@YA_NABVioHashString@@AAY08$$CBD@Z	; operator==<9>
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iohashstring.h
;	COMDAT ??$?8$08@@YA_NABVioHashString@@AAY08$$CBD@Z
_TEXT	SEGMENT
__t$ = -20						; size = 9
__$ArrayPad$ = -4					; size = 4
_lhs$ = 8						; size = 4
_t$ = 12						; size = 4
??$?8$08@@YA_NABVioHashString@@AAY08$$CBD@Z PROC	; operator==<9>, COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]

; 147  : 	_ENCSTR(t, _t); return ( strcmp( lhs.c_str(), _t ) == 0 );

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _lhs$[ebp]
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 ee 00 00
	00		 je	 $LN96@operator
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 ec	 mov	 BYTE PTR __t$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 d7 00 00
	00		 je	 $LN95@operator
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 ed	 mov	 BYTE PTR __t$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 c0 00 00
	00		 je	 $LN94@operator
  00042	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00045	88 55 ee	 mov	 BYTE PTR __t$[ebp+2], dl
  00048	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004b	84 d2		 test	 dl, dl
  0004d	0f 84 a9 00 00
	00		 je	 $LN93@operator
  00053	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00056	88 55 ef	 mov	 BYTE PTR __t$[ebp+3], dl
  00059	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005c	84 d2		 test	 dl, dl
  0005e	0f 84 92 00 00
	00		 je	 $LN92@operator
  00064	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00067	88 55 f0	 mov	 BYTE PTR __t$[ebp+4], dl
  0006a	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006d	84 d2		 test	 dl, dl
  0006f	74 7f		 je	 SHORT $LN91@operator
  00071	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00074	88 55 f1	 mov	 BYTE PTR __t$[ebp+5], dl
  00077	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007a	84 d2		 test	 dl, dl
  0007c	74 6c		 je	 SHORT $LN90@operator
  0007e	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00081	88 55 f2	 mov	 BYTE PTR __t$[ebp+6], dl
  00084	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00087	84 d2		 test	 dl, dl
  00089	74 59		 je	 SHORT $LN89@operator
  0008b	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0008e	80 78 08 00	 cmp	 BYTE PTR [eax+8], 0
  00092	88 55 f3	 mov	 BYTE PTR __t$[ebp+7], dl
  00095	74 7b		 je	 SHORT $LN1@operator
  00097	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  0009a	84 d2		 test	 dl, dl
  0009c	74 40		 je	 SHORT $LN87@operator
  0009e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000a1	88 55 f5	 mov	 BYTE PTR __t$[ebp+9], dl
  000a4	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000a7	84 d2		 test	 dl, dl
  000a9	74 2d		 je	 SHORT $LN86@operator
  000ab	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000ae	88 55 f6	 mov	 BYTE PTR __t$[ebp+10], dl
  000b1	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000b4	84 d2		 test	 dl, dl
  000b6	74 1a		 je	 SHORT $LN85@operator
  000b8	8a 40 0c	 mov	 al, BYTE PTR [eax+12]
  000bb	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000be	88 55 f7	 mov	 BYTE PTR __t$[ebp+11], dl
  000c1	84 c0		 test	 al, al
  000c3	74 07		 je	 SHORT $LN84@operator
  000c5	34 ed		 xor	 al, -19			; ffffffedH
  000c7	88 45 f8	 mov	 BYTE PTR __t$[ebp+12], al
  000ca	eb 46		 jmp	 SHORT $LN1@operator
$LN84@operator:
  000cc	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+12], -19 ; ffffffedH
  000d0	eb 40		 jmp	 SHORT $LN1@operator
$LN85@operator:
  000d2	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+11], -22 ; ffffffeaH
  000d6	eb 3a		 jmp	 SHORT $LN1@operator
$LN86@operator:
  000d8	c6 45 f6 eb	 mov	 BYTE PTR __t$[ebp+10], -21 ; ffffffebH
  000dc	eb 34		 jmp	 SHORT $LN1@operator
$LN87@operator:
  000de	c6 45 f5 ec	 mov	 BYTE PTR __t$[ebp+9], -20 ; ffffffecH
  000e2	eb 2e		 jmp	 SHORT $LN1@operator
$LN89@operator:
  000e4	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  000e8	eb 28		 jmp	 SHORT $LN1@operator
$LN90@operator:
  000ea	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+6], -21 ; ffffffebH
  000ee	eb 22		 jmp	 SHORT $LN1@operator
$LN91@operator:
  000f0	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  000f4	eb 1c		 jmp	 SHORT $LN1@operator
$LN92@operator:
  000f6	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  000fa	eb 16		 jmp	 SHORT $LN1@operator
$LN93@operator:
  000fc	c6 45 ef ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  00100	eb 10		 jmp	 SHORT $LN1@operator
$LN94@operator:
  00102	c6 45 ee eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  00106	eb 0a		 jmp	 SHORT $LN1@operator
$LN95@operator:
  00108	c6 45 ed ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  0010c	eb 04		 jmp	 SHORT $LN1@operator
$LN96@operator:
  0010e	c6 45 ec ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@operator:
  00112	6a 02		 push	 2
  00114	8d 45 ec	 lea	 eax, DWORD PTR __t$[ebp]
  00117	c6 45 f4 00	 mov	 BYTE PTR __t$[ebp+8], 0
  0011b	5a		 pop	 edx
$LL104@operator:
  0011c	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00122	83 c0 04	 add	 eax, 4
  00125	4a		 dec	 edx
  00126	75 f4		 jne	 SHORT $LL104@operator
  00128	56		 push	 esi
  00129	8d 75 ec	 lea	 esi, DWORD PTR __t$[ebp]
  0012c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL111@operator:
  00132	8a 08		 mov	 cl, BYTE PTR [eax]
  00134	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00136	75 1a		 jne	 SHORT $LN112@operator
  00138	84 c9		 test	 cl, cl
  0013a	74 12		 je	 SHORT $LN113@operator
  0013c	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  0013f	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  00142	75 0e		 jne	 SHORT $LN112@operator
  00144	83 c0 02	 add	 eax, 2
  00147	83 c6 02	 add	 esi, 2
  0014a	84 c9		 test	 cl, cl
  0014c	75 e4		 jne	 SHORT $LL111@operator
$LN113@operator:
  0014e	33 c0		 xor	 eax, eax
  00150	eb 05		 jmp	 SHORT $LN114@operator
$LN112@operator:
  00152	1b c0		 sbb	 eax, eax
  00154	83 d8 ff	 sbb	 eax, -1
$LN114@operator:
  00157	33 c9		 xor	 ecx, ecx
  00159	85 c0		 test	 eax, eax
  0015b	0f 94 c0	 sete	 al

; 148  : }

  0015e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00161	33 cd		 xor	 ecx, ebp
  00163	5e		 pop	 esi
  00164	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00169	c9		 leave
  0016a	c3		 ret	 0
??$?8$08@@YA_NABVioHashString@@AAY08$$CBD@Z ENDP	; operator==<9>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$?8$09@@YA_NABVioHashString@@AAY09$$CBD@Z	; operator==<10>
; Function compile flags: /Ogsp
;	COMDAT ??$?8$09@@YA_NABVioHashString@@AAY09$$CBD@Z
_TEXT	SEGMENT
__t$ = -20						; size = 10
__$ArrayPad$ = -4					; size = 4
_lhs$ = 8						; size = 4
_t$ = 12						; size = 4
??$?8$09@@YA_NABVioHashString@@AAY09$$CBD@Z PROC	; operator==<10>, COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]

; 147  : 	_ENCSTR(t, _t); return ( strcmp( lhs.c_str(), _t ) == 0 );

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _lhs$[ebp]
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 0d 01 00
	00		 je	 $LN96@operator@2
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 ec	 mov	 BYTE PTR __t$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 f6 00 00
	00		 je	 $LN95@operator@2
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 ed	 mov	 BYTE PTR __t$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 df 00 00
	00		 je	 $LN94@operator@2
  00042	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00045	88 55 ee	 mov	 BYTE PTR __t$[ebp+2], dl
  00048	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004b	84 d2		 test	 dl, dl
  0004d	0f 84 c8 00 00
	00		 je	 $LN93@operator@2
  00053	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00056	88 55 ef	 mov	 BYTE PTR __t$[ebp+3], dl
  00059	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005c	84 d2		 test	 dl, dl
  0005e	0f 84 b1 00 00
	00		 je	 $LN92@operator@2
  00064	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00067	88 55 f0	 mov	 BYTE PTR __t$[ebp+4], dl
  0006a	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006d	84 d2		 test	 dl, dl
  0006f	0f 84 9a 00 00
	00		 je	 $LN91@operator@2
  00075	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00078	88 55 f1	 mov	 BYTE PTR __t$[ebp+5], dl
  0007b	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007e	84 d2		 test	 dl, dl
  00080	0f 84 83 00 00
	00		 je	 $LN90@operator@2
  00086	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00089	88 55 f2	 mov	 BYTE PTR __t$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	74 70		 je	 SHORT $LN89@operator@2
  00093	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00096	88 55 f3	 mov	 BYTE PTR __t$[ebp+7], dl
  00099	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  0009c	84 d2		 test	 dl, dl
  0009e	74 5d		 je	 SHORT $LN88@operator@2
  000a0	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a3	80 78 09 00	 cmp	 BYTE PTR [eax+9], 0
  000a7	88 55 f4	 mov	 BYTE PTR __t$[ebp+8], dl
  000aa	0f 84 81 00 00
	00		 je	 $LN1@operator@2
  000b0	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000b3	84 d2		 test	 dl, dl
  000b5	74 40		 je	 SHORT $LN86@operator@2
  000b7	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000ba	88 55 f6	 mov	 BYTE PTR __t$[ebp+10], dl
  000bd	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000c0	84 d2		 test	 dl, dl
  000c2	74 2d		 je	 SHORT $LN85@operator@2
  000c4	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000c7	88 55 f7	 mov	 BYTE PTR __t$[ebp+11], dl
  000ca	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000cd	84 d2		 test	 dl, dl
  000cf	74 1a		 je	 SHORT $LN84@operator@2
  000d1	8a 40 0d	 mov	 al, BYTE PTR [eax+13]
  000d4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000d7	88 55 f8	 mov	 BYTE PTR __t$[ebp+12], dl
  000da	84 c0		 test	 al, al
  000dc	74 07		 je	 SHORT $LN83@operator@2
  000de	34 ec		 xor	 al, -20			; ffffffecH
  000e0	88 45 f9	 mov	 BYTE PTR __t$[ebp+13], al
  000e3	eb 4c		 jmp	 SHORT $LN1@operator@2
$LN83@operator@2:
  000e5	c6 45 f9 ec	 mov	 BYTE PTR __t$[ebp+13], -20 ; ffffffecH
  000e9	eb 46		 jmp	 SHORT $LN1@operator@2
$LN84@operator@2:
  000eb	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+12], -19 ; ffffffedH
  000ef	eb 40		 jmp	 SHORT $LN1@operator@2
$LN85@operator@2:
  000f1	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+11], -22 ; ffffffeaH
  000f5	eb 3a		 jmp	 SHORT $LN1@operator@2
$LN86@operator@2:
  000f7	c6 45 f6 eb	 mov	 BYTE PTR __t$[ebp+10], -21 ; ffffffebH
  000fb	eb 34		 jmp	 SHORT $LN1@operator@2
$LN88@operator@2:
  000fd	c6 45 f4 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  00101	eb 2e		 jmp	 SHORT $LN1@operator@2
$LN89@operator@2:
  00103	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  00107	eb 28		 jmp	 SHORT $LN1@operator@2
$LN90@operator@2:
  00109	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+6], -21 ; ffffffebH
  0010d	eb 22		 jmp	 SHORT $LN1@operator@2
$LN91@operator@2:
  0010f	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  00113	eb 1c		 jmp	 SHORT $LN1@operator@2
$LN92@operator@2:
  00115	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  00119	eb 16		 jmp	 SHORT $LN1@operator@2
$LN93@operator@2:
  0011b	c6 45 ef ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  0011f	eb 10		 jmp	 SHORT $LN1@operator@2
$LN94@operator@2:
  00121	c6 45 ee eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  00125	eb 0a		 jmp	 SHORT $LN1@operator@2
$LN95@operator@2:
  00127	c6 45 ed ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  0012b	eb 04		 jmp	 SHORT $LN1@operator@2
$LN96@operator@2:
  0012d	c6 45 ec ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@operator@2:
  00131	6a 02		 push	 2
  00133	8d 45 ec	 lea	 eax, DWORD PTR __t$[ebp]
  00136	c6 45 f5 00	 mov	 BYTE PTR __t$[ebp+9], 0
  0013a	5a		 pop	 edx
$LL104@operator@2:
  0013b	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00141	83 c0 04	 add	 eax, 4
  00144	4a		 dec	 edx
  00145	75 f4		 jne	 SHORT $LL104@operator@2
  00147	80 75 f4 ed	 xor	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  0014b	56		 push	 esi
  0014c	8d 75 ec	 lea	 esi, DWORD PTR __t$[ebp]
  0014f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL111@operator@2:
  00155	8a 08		 mov	 cl, BYTE PTR [eax]
  00157	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00159	75 1a		 jne	 SHORT $LN112@operator@2
  0015b	84 c9		 test	 cl, cl
  0015d	74 12		 je	 SHORT $LN113@operator@2
  0015f	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00162	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  00165	75 0e		 jne	 SHORT $LN112@operator@2
  00167	83 c0 02	 add	 eax, 2
  0016a	83 c6 02	 add	 esi, 2
  0016d	84 c9		 test	 cl, cl
  0016f	75 e4		 jne	 SHORT $LL111@operator@2
$LN113@operator@2:
  00171	33 c0		 xor	 eax, eax
  00173	eb 05		 jmp	 SHORT $LN114@operator@2
$LN112@operator@2:
  00175	1b c0		 sbb	 eax, eax
  00177	83 d8 ff	 sbb	 eax, -1
$LN114@operator@2:
  0017a	33 c9		 xor	 ecx, ecx
  0017c	85 c0		 test	 eax, eax
  0017e	0f 94 c0	 sete	 al

; 148  : }

  00181	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00184	33 cd		 xor	 ecx, ebp
  00186	5e		 pop	 esi
  00187	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0018c	c9		 leave
  0018d	c3		 ret	 0
??$?8$09@@YA_NABVioHashString@@AAY09$$CBD@Z ENDP	; operator==<10>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVioUIRenderImage@@@std@@@std@@YAXPAPAVioUIRenderImage@@0AAV?$allocator@PAVioUIRenderImage@@@0@@Z ; std::_Destroy_range<std::allocator<ioUIRenderImage *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVioUIRenderImage@@@std@@@std@@YAXPAPAVioUIRenderImage@@0AAV?$allocator@PAVioUIRenderImage@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVioUIRenderImage@@@std@@@std@@YAXPAPAVioUIRenderImage@@0AAV?$allocator@PAVioUIRenderImage@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ioUIRenderImage *> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAVioUIRenderImage@@@std@@@std@@YAXPAPAVioUIRenderImage@@0AAV?$allocator@PAVioUIRenderImage@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioUIRenderImage *> >
_TEXT	ENDS
PUBLIC	_szType$GSCopy$
PUBLIC	_pImage$GSCopy$
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
EXTRN	__imp_?AddRenderImage@ioButton@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\iobingorewardwnd.cpp
;	COMDAT ?AddRenderImage@ioBingoIconButton@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z
_TEXT	SEGMENT
_szType$GSCopy$ = -32					; size = 4
_pImage$GSCopy$ = -28					; size = 4
_this$GSCopy$ = -24					; size = 4
__t$509102 = -20					; size = 10
__t$508964 = -20					; size = 9
__$ArrayPad$ = -4					; size = 4
_szType$ = 8						; size = 4
_pImage$ = 12						; size = 4
?AddRenderImage@ioBingoIconButton@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z PROC ; ioBingoIconButton::AddRenderImage, COMDAT
; _this$ = ecx

; 47   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _pImage$[ebp]
  00013	8b 55 08	 mov	 edx, DWORD PTR _szType$[ebp]
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi

; 48   : 	if( szType == "IconBack" )

  00019	6a 02		 push	 2
  0001b	5b		 pop	 ebx
  0001c	89 4d e8	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx

; 52   : 	}
; 53   : 	else if( szType == "IconEmpty" )

  0001f	89 45 e4	 mov	 DWORD PTR _pImage$GSCopy$[ebp], eax
  00022	89 55 e0	 mov	 DWORD PTR _szType$GSCopy$[ebp], edx
  00025	c7 45 ec a4 8f
	84 84		 mov	 DWORD PTR __t$508964[ebp], -2071687260 ; 84848fa4H
  0002c	c7 45 f0 af 8d
	88 81		 mov	 DWORD PTR __t$508964[ebp+4], -2121757265 ; 81888dafH
  00033	8d 45 ec	 lea	 eax, DWORD PTR __t$508964[ebp]
  00036	c6 45 f4 00	 mov	 BYTE PTR __t$508964[ebp+8], 0
  0003a	8b cb		 mov	 ecx, ebx
  0003c	bf ed ec eb ea	 mov	 edi, -353637139		; eaebecedH
$LL116@AddRenderI:

; 48   : 	if( szType == "IconBack" )

  00041	31 38		 xor	 DWORD PTR [eax], edi
  00043	83 c0 04	 add	 eax, 4
  00046	49		 dec	 ecx
  00047	75 f8		 jne	 SHORT $LL116@AddRenderI
  00049	8b ca		 mov	 ecx, edx
  0004b	8d 75 ec	 lea	 esi, DWORD PTR __t$508964[ebp]
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL234@AddRenderI:
  00054	8a 08		 mov	 cl, BYTE PTR [eax]
  00056	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00058	75 18		 jne	 SHORT $LN235@AddRenderI
  0005a	84 c9		 test	 cl, cl
  0005c	74 10		 je	 SHORT $LN236@AddRenderI
  0005e	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00061	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  00064	75 0c		 jne	 SHORT $LN235@AddRenderI
  00066	03 c3		 add	 eax, ebx
  00068	03 f3		 add	 esi, ebx
  0006a	84 c9		 test	 cl, cl
  0006c	75 e6		 jne	 SHORT $LL234@AddRenderI
$LN236@AddRenderI:
  0006e	33 c0		 xor	 eax, eax
  00070	eb 05		 jmp	 SHORT $LN237@AddRenderI
$LN235@AddRenderI:
  00072	1b c0		 sbb	 eax, eax
  00074	83 d8 ff	 sbb	 eax, -1
$LN237@AddRenderI:
  00077	85 c0		 test	 eax, eax
  00079	75 29		 jne	 SHORT $LN233@AddRenderI

; 49   : 	{
; 50   : 		SAFEDELETE( m_pIconBack );

  0007b	8b 75 e8	 mov	 esi, DWORD PTR _this$GSCopy$[ebp]
  0007e	8b 8e 04 02 00
	00		 mov	 ecx, DWORD PTR [esi+516]
  00084	85 c9		 test	 ecx, ecx
  00086	74 0e		 je	 SHORT $LN5@AddRenderI
  00088	8b 01		 mov	 eax, DWORD PTR [ecx]
  0008a	6a 01		 push	 1
  0008c	ff 50 40	 call	 DWORD PTR [eax+64]
  0008f	83 a6 04 02 00
	00 00		 and	 DWORD PTR [esi+516], 0
$LN5@AddRenderI:

; 51   : 		m_pIconBack = pImage;

  00096	8b 45 e4	 mov	 eax, DWORD PTR _pImage$GSCopy$[ebp]
  00099	89 86 04 02 00
	00		 mov	 DWORD PTR [esi+516], eax
  0009f	e9 8d 00 00 00	 jmp	 $LN1@AddRenderI
$LN233@AddRenderI:

; 52   : 	}
; 53   : 	else if( szType == "IconEmpty" )

  000a4	c7 45 ec a4 8f
	84 84		 mov	 DWORD PTR __t$509102[ebp], -2071687260 ; 84848fa4H
  000ab	c7 45 f0 a8 81
	9b 9e		 mov	 DWORD PTR __t$509102[ebp+4], -1633975896 ; 9e9b81a8H
  000b2	8d 45 ec	 lea	 eax, DWORD PTR __t$509102[ebp]
  000b5	66 c7 45 f4 94
	00		 mov	 WORD PTR __t$509102[ebp+8], 148 ; 00000094H
  000bb	8b cb		 mov	 ecx, ebx
$LL222@AddRenderI:
  000bd	31 38		 xor	 DWORD PTR [eax], edi
  000bf	83 c0 04	 add	 eax, 4
  000c2	49		 dec	 ecx
  000c3	75 f8		 jne	 SHORT $LL222@AddRenderI
  000c5	8b 4d e0	 mov	 ecx, DWORD PTR _szType$GSCopy$[ebp]
  000c8	80 75 f4 ed	 xor	 BYTE PTR __t$509102[ebp+8], -19 ; ffffffedH
  000cc	8d 75 ec	 lea	 esi, DWORD PTR __t$509102[ebp]
  000cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL238@AddRenderI:
  000d5	8a 08		 mov	 cl, BYTE PTR [eax]
  000d7	3a 0e		 cmp	 cl, BYTE PTR [esi]
  000d9	75 18		 jne	 SHORT $LN239@AddRenderI
  000db	84 c9		 test	 cl, cl
  000dd	74 10		 je	 SHORT $LN240@AddRenderI
  000df	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  000e2	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  000e5	75 0c		 jne	 SHORT $LN239@AddRenderI
  000e7	03 c3		 add	 eax, ebx
  000e9	03 f3		 add	 esi, ebx
  000eb	84 c9		 test	 cl, cl
  000ed	75 e6		 jne	 SHORT $LL238@AddRenderI
$LN240@AddRenderI:
  000ef	33 c0		 xor	 eax, eax
  000f1	eb 05		 jmp	 SHORT $LN241@AddRenderI
$LN239@AddRenderI:
  000f3	1b c0		 sbb	 eax, eax
  000f5	83 d8 ff	 sbb	 eax, -1
$LN241@AddRenderI:
  000f8	85 c0		 test	 eax, eax
  000fa	75 26		 jne	 SHORT $LN3@AddRenderI

; 54   : 	{
; 55   : 		SAFEDELETE( m_pIconEmpty );

  000fc	8b 75 e8	 mov	 esi, DWORD PTR _this$GSCopy$[ebp]
  000ff	8b 8e 08 02 00
	00		 mov	 ecx, DWORD PTR [esi+520]
  00105	85 c9		 test	 ecx, ecx
  00107	74 0e		 je	 SHORT $LN2@AddRenderI
  00109	8b 01		 mov	 eax, DWORD PTR [ecx]
  0010b	6a 01		 push	 1
  0010d	ff 50 40	 call	 DWORD PTR [eax+64]
  00110	83 a6 08 02 00
	00 00		 and	 DWORD PTR [esi+520], 0
$LN2@AddRenderI:

; 56   : 		m_pIconEmpty = pImage;

  00117	8b 45 e4	 mov	 eax, DWORD PTR _pImage$GSCopy$[ebp]
  0011a	89 86 08 02 00
	00		 mov	 DWORD PTR [esi+520], eax

; 57   : 	}
; 58   : 	else

  00120	eb 0f		 jmp	 SHORT $LN1@AddRenderI
$LN3@AddRenderI:

; 59   : 	{
; 60   : 		ioButton::AddRenderImage( szType, pImage );	

  00122	ff 75 e4	 push	 DWORD PTR _pImage$GSCopy$[ebp]
  00125	8b 4d e8	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00128	ff 75 e0	 push	 DWORD PTR _szType$GSCopy$[ebp]
  0012b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddRenderImage@ioButton@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
$LN1@AddRenderI:

; 61   : 	}
; 62   : }

  00131	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	33 cd		 xor	 ecx, ebp
  00138	5b		 pop	 ebx
  00139	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013e	c9		 leave
  0013f	c2 08 00	 ret	 8
?AddRenderImage@ioBingoIconButton@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z ENDP ; ioBingoIconButton::AddRenderImage
_TEXT	ENDS
PUBLIC	?UpdateIconBtn@ioBingoRewardWnd@@IAEXXZ		; ioBingoRewardWnd::UpdateIconBtn
; Function compile flags: /Ogsp
;	COMDAT ?UpdateIconBtn@ioBingoRewardWnd@@IAEXXZ
_TEXT	SEGMENT
_pBingo$ = -4						; size = 4
?UpdateIconBtn@ioBingoRewardWnd@@IAEXXZ PROC		; ioBingoRewardWnd::UpdateIconBtn, COMDAT
; _this$ = ecx

; 173  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	8b d9		 mov	 ebx, ecx

; 174  : 	ioBingo* pBingo = g_MyInfo.GetBingo(); 

  00007	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  0000c	8b 80 94 0b 00
	00		 mov	 eax, DWORD PTR [eax+2964]
  00012	89 45 fc	 mov	 DWORD PTR _pBingo$[ebp], eax

; 175  : 	if( !pBingo )

  00015	85 c0		 test	 eax, eax
  00017	74 32		 je	 SHORT $LN3@UpdateIcon@3

; 176  : 		return;
; 177  : 
; 178  : 	int iStartArray = m_iCurPage * ICON_BTN_MAX;

  00019	56		 push	 esi
  0001a	8b b3 94 01 00
	00		 mov	 esi, DWORD PTR [ebx+404]
  00020	57		 push	 edi
  00021	6b f6 0c	 imul	 esi, 12			; 0000000cH

; 179  : 	for( int i = 0; i < ICON_BTN_MAX; ++i )

  00024	33 ff		 xor	 edi, edi
  00026	eb 03		 jmp	 SHORT $LN5@UpdateIcon@3
$LL15@UpdateIcon@3:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _pBingo$[ebp]
$LN5@UpdateIcon@3:

; 180  : 	{		
; 181  : 		int iCurArray = iStartArray + i;
; 182  : 		if( i < pBingo->GetAllBingoRewardListCount() )

  0002b	3b 78 10	 cmp	 edi, DWORD PTR [eax+16]

; 183  : 		{
; 184  : 			UpdateIconAllBingoBtn( i, iCurArray );

  0002e	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  00031	50		 push	 eax
  00032	8b cb		 mov	 ecx, ebx
  00034	57		 push	 edi
  00035	7d 07		 jge	 SHORT $LN2@UpdateIcon@3
  00037	e8 00 00 00 00	 call	 ?UpdateIconAllBingoBtn@ioBingoRewardWnd@@IAEXHH@Z ; ioBingoRewardWnd::UpdateIconAllBingoBtn

; 185  : 		}
; 186  : 		else

  0003c	eb 05		 jmp	 SHORT $LN4@UpdateIcon@3
$LN2@UpdateIcon@3:

; 187  : 		{
; 188  : 			UpdateIconBingoBtn( i, iCurArray );

  0003e	e8 00 00 00 00	 call	 ?UpdateIconBingoBtn@ioBingoRewardWnd@@IAEXHH@Z ; ioBingoRewardWnd::UpdateIconBingoBtn
$LN4@UpdateIcon@3:

; 179  : 	for( int i = 0; i < ICON_BTN_MAX; ++i )

  00043	47		 inc	 edi
  00044	83 ff 0c	 cmp	 edi, 12			; 0000000cH
  00047	7c df		 jl	 SHORT $LL15@UpdateIcon@3
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
$LN3@UpdateIcon@3:
  0004b	5b		 pop	 ebx

; 189  : 		}		
; 190  : 	}
; 191  : }

  0004c	c9		 leave
  0004d	c3		 ret	 0
?UpdateIconBtn@ioBingoRewardWnd@@IAEXXZ ENDP		; ioBingoRewardWnd::UpdateIconBtn
_TEXT	ENDS
PUBLIC	??0?$vector@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@QAE@XZ ; std::vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@QAE@XZ PROC ; std::vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@IAEXPAPAVioUIRenderImage@@0@Z ; std::vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@IAEXPAPAVioUIRenderImage@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@IAEXPAPAVioUIRenderImage@@0@Z PROC ; std::vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@IAEXPAPAVioUIRenderImage@@0@Z ENDP ; std::vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::_Destroy
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?UpdatePage@ioBingoRewardWnd@@IAEXH@Z		; ioBingoRewardWnd::UpdatePage
EXTRN	__imp_?SetChildInActive@ioWnd@@QAEXK@Z:PROC
EXTRN	__imp_?SetChildActive@ioWnd@@QAEXK@Z:PROC
EXTRN	__imp__wsprintfA:PROC
EXTRN	_memset:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\iobingorewardwnd.cpp
;	COMDAT ?UpdatePage@ioBingoRewardWnd@@IAEXH@Z
_TEXT	SEGMENT
_szBuf$ = -276						; size = 260
___encStr$507654 = -16					; size = 6
__$ArrayPad$ = -4					; size = 4
_iPage$ = 8						; size = 4
?UpdatePage@ioBingoRewardWnd@@IAEXH@Z PROC		; ioBingoRewardWnd::UpdatePage, COMDAT
; _this$ = ecx

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	57		 push	 edi

; 154  : 	m_iCurPage = iPage;

  00015	8b 7d 08	 mov	 edi, DWORD PTR _iPage$[ebp]

; 155  : 
; 156  : 	char szBuf[MAX_PATH] = "";

  00018	68 03 01 00 00	 push	 259			; 00000103H
  0001d	8d 85 ed fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp+1]
  00023	8b f1		 mov	 esi, ecx
  00025	6a 00		 push	 0
  00027	50		 push	 eax
  00028	89 be 94 01 00
	00		 mov	 DWORD PTR [esi+404], edi
  0002e	c6 85 ec fe ff
	ff 00		 mov	 BYTE PTR _szBuf$[ebp], 0
  00035	e8 00 00 00 00	 call	 _memset

; 157  : 	wsprintf_e( szBuf, "%d/%d", m_iCurPage+1, m_iMaxPage+1 );

  0003a	8b 86 90 01 00
	00		 mov	 eax, DWORD PTR [esi+400]
  00040	c7 45 f0 c8 88
	c4 cf		 mov	 DWORD PTR ___encStr$507654[ebp], -809203512 ; cfc488c8H
  00047	81 75 f0 ed ec
	eb ea		 xor	 DWORD PTR ___encStr$507654[ebp], -353637139 ; eaebecedH
  0004e	40		 inc	 eax
  0004f	50		 push	 eax
  00050	47		 inc	 edi
  00051	57		 push	 edi
  00052	8d 45 f0	 lea	 eax, DWORD PTR ___encStr$507654[ebp]
  00055	50		 push	 eax
  00056	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0005c	50		 push	 eax
  0005d	66 c7 45 f4 64
	00		 mov	 WORD PTR ___encStr$507654[ebp+4], 100 ; 00000064H
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  00069	83 c4 1c	 add	 esp, 28			; 0000001cH

; 158  : 	m_szPageText = szBuf;

  0006c	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00072	50		 push	 eax
  00073	8d 8e 98 01 00
	00		 lea	 ecx, DWORD PTR [esi+408]
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z

; 159  : 
; 160  : 	SetChildActive( ID_PRE_BTN );

  0007f	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?SetChildActive@ioWnd@@QAEXK@Z
  00085	6a 01		 push	 1
  00087	8b ce		 mov	 ecx, esi
  00089	ff d7		 call	 edi

; 161  : 	SetChildActive( ID_NEXT_BTN );

  0008b	6a 02		 push	 2
  0008d	8b ce		 mov	 ecx, esi
  0008f	ff d7		 call	 edi

; 162  : 
; 163  : 	if( m_iCurPage == 0 )

  00091	83 be 94 01 00
	00 00		 cmp	 DWORD PTR [esi+404], 0
  00098	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?SetChildInActive@ioWnd@@QAEXK@Z
  0009e	75 06		 jne	 SHORT $LN2@UpdatePage

; 164  : 		SetChildInActive( ID_PRE_BTN );

  000a0	6a 01		 push	 1
  000a2	8b ce		 mov	 ecx, esi
  000a4	ff d7		 call	 edi
$LN2@UpdatePage:

; 165  : 
; 166  : 	if( m_iCurPage == m_iMaxPage )

  000a6	8b 86 94 01 00
	00		 mov	 eax, DWORD PTR [esi+404]
  000ac	3b 86 90 01 00
	00		 cmp	 eax, DWORD PTR [esi+400]
  000b2	75 06		 jne	 SHORT $LN1@UpdatePage

; 167  : 		SetChildInActive( ID_NEXT_BTN );

  000b4	6a 02		 push	 2
  000b6	8b ce		 mov	 ecx, esi
  000b8	ff d7		 call	 edi
$LN1@UpdatePage:

; 168  : 
; 169  : 	UpdateIconBtn();

  000ba	8b ce		 mov	 ecx, esi
  000bc	e8 00 00 00 00	 call	 ?UpdateIconBtn@ioBingoRewardWnd@@IAEXXZ ; ioBingoRewardWnd::UpdateIconBtn

; 170  : }

  000c1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	5f		 pop	 edi
  000c5	33 cd		 xor	 ecx, ebp
  000c7	5e		 pop	 esi
  000c8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cd	c9		 leave
  000ce	c2 04 00	 ret	 4
?UpdatePage@ioBingoRewardWnd@@IAEXH@Z ENDP		; ioBingoRewardWnd::UpdatePage
_TEXT	ENDS
PUBLIC	?iwm_command@ioBingoRewardWnd@@UAEXPAVioWnd@@HK@Z ; ioBingoRewardWnd::iwm_command
EXTRN	__imp_?HasWndStyle@ioWnd@@QBE_NK@Z:PROC
EXTRN	__imp_?HideWnd@ioWnd@@QAEXXZ:PROC
EXTRN	__imp_?GetID@ioWnd@@QBEKXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?iwm_command@ioBingoRewardWnd@@UAEXPAVioWnd@@HK@Z
_TEXT	SEGMENT
_pWnd$ = 8						; size = 4
_cmd$ = 12						; size = 4
_param$ = 16						; size = 4
?iwm_command@ioBingoRewardWnd@@UAEXPAVioWnd@@HK@Z PROC	; ioBingoRewardWnd::iwm_command, COMDAT
; _this$ = ecx

; 283  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 284  : 	DWORD dwID = pWnd->GetID();

  00006	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetID@ioWnd@@QBEKXZ

; 285  : 
; 286  : 	switch( dwID )

  0000f	48		 dec	 eax
  00010	74 34		 je	 SHORT $LN6@iwm_comman
  00012	48		 dec	 eax
  00013	74 13		 je	 SHORT $LN4@iwm_comman
  00015	48		 dec	 eax
  00016	75 52		 jne	 SHORT $LN5@iwm_comman

; 302  : 	case ID_X:
; 303  : 		if( cmd == IOBN_BTNUP )

  00018	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  0001c	75 4c		 jne	 SHORT $LN5@iwm_comman

; 304  : 		{
; 305  : 			HideWnd();

  0001e	8b ce		 mov	 ecx, esi
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HideWnd@ioWnd@@QAEXXZ

; 306  : 		}
; 307  : 		break;

  00026	eb 42		 jmp	 SHORT $LN5@iwm_comman
$LN4@iwm_comman:

; 293  : 		}
; 294  : 		break;
; 295  : 	case ID_NEXT_BTN:
; 296  : 		if( cmd == IOBN_BTNUP && !pWnd->HasWndStyle( IWS_INACTIVE ) )

  00028	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  0002c	75 3c		 jne	 SHORT $LN5@iwm_comman
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  00031	6a 02		 push	 2
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HasWndStyle@ioWnd@@QBE_NK@Z
  00039	84 c0		 test	 al, al
  0003b	75 2d		 jne	 SHORT $LN5@iwm_comman

; 297  : 		{
; 298  : 			int iNewPage = m_iCurPage + 1;

  0003d	8b 86 94 01 00
	00		 mov	 eax, DWORD PTR [esi+404]
  00043	40		 inc	 eax

; 299  : 			UpdatePage( iNewPage );
; 300  : 		}
; 301  : 		break;

  00044	eb 1c		 jmp	 SHORT $LN11@iwm_comman
$LN6@iwm_comman:

; 287  : 	{
; 288  : 	case ID_PRE_BTN:
; 289  : 		if( cmd == IOBN_BTNUP && !pWnd->HasWndStyle( IWS_INACTIVE ) )

  00046	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  0004a	75 1e		 jne	 SHORT $LN5@iwm_comman
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  0004f	6a 02		 push	 2
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HasWndStyle@ioWnd@@QBE_NK@Z
  00057	84 c0		 test	 al, al
  00059	75 0f		 jne	 SHORT $LN5@iwm_comman

; 290  : 		{
; 291  : 			int iNewPage = m_iCurPage - 1;

  0005b	8b 86 94 01 00
	00		 mov	 eax, DWORD PTR [esi+404]
  00061	48		 dec	 eax
$LN11@iwm_comman:

; 292  : 			UpdatePage( iNewPage );

  00062	50		 push	 eax
  00063	8b ce		 mov	 ecx, esi
  00065	e8 00 00 00 00	 call	 ?UpdatePage@ioBingoRewardWnd@@IAEXH@Z ; ioBingoRewardWnd::UpdatePage
$LN5@iwm_comman:
  0006a	5e		 pop	 esi

; 308  : 	}
; 309  : }

  0006b	5d		 pop	 ebp
  0006c	c2 0c 00	 ret	 12			; 0000000cH
?iwm_command@ioBingoRewardWnd@@UAEXPAVioWnd@@HK@Z ENDP	; ioBingoRewardWnd::iwm_command
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@IAEXXZ ; std::vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::_Tidy
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@IAEXXZ PROC ; std::vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN12@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN12@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@IAEXXZ ENDP ; std::vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::_Tidy
_TEXT	ENDS
PUBLIC	?iwm_show@ioBingoRewardWnd@@UAEXXZ		; ioBingoRewardWnd::iwm_show
EXTRN	__imp_?GoToTop@ioWnd@@QAEXXZ:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\iobingorewardwnd.cpp
;	COMDAT ?iwm_show@ioBingoRewardWnd@@UAEXXZ
_TEXT	SEGMENT
?iwm_show@ioBingoRewardWnd@@UAEXXZ PROC			; ioBingoRewardWnd::iwm_show, COMDAT
; _this$ = ecx

; 139  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 140  : 	m_iMaxPage = 0;

  00003	83 a6 90 01 00
	00 00		 and	 DWORD PTR [esi+400], 0

; 141  : 
; 142  : 	ioBingo* pBingo = g_MyInfo.GetBingo();

  0000a	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  0000f	8b 88 94 0b 00
	00		 mov	 ecx, DWORD PTR [eax+2964]

; 143  : 	if( pBingo )

  00015	85 c9		 test	 ecx, ecx
  00017	74 12		 je	 SHORT $LN1@iwm_show

; 144  : 	{
; 145  : 		m_iMaxPage = pBingo->GetAllBingoRewardListCount() + pBingo->GetRewardCount();

  00019	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0001c	03 41 0c	 add	 eax, DWORD PTR [ecx+12]

; 146  : 		m_iMaxPage = m_iMaxPage / ICON_BTN_MAX;

  0001f	6a 0c		 push	 12			; 0000000cH
  00021	99		 cdq
  00022	59		 pop	 ecx
  00023	f7 f9		 idiv	 ecx
  00025	89 86 90 01 00
	00		 mov	 DWORD PTR [esi+400], eax
$LN1@iwm_show:

; 147  : 	}
; 148  : 	UpdatePage( 0 );

  0002b	6a 00		 push	 0
  0002d	8b ce		 mov	 ecx, esi
  0002f	e8 00 00 00 00	 call	 ?UpdatePage@ioBingoRewardWnd@@IAEXH@Z ; ioBingoRewardWnd::UpdatePage

; 149  : 	GoToTop();

  00034	8b ce		 mov	 ecx, esi
  00036	5e		 pop	 esi
  00037	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_?GoToTop@ioWnd@@QAEXXZ
?iwm_show@ioBingoRewardWnd@@UAEXXZ ENDP			; ioBingoRewardWnd::iwm_show
_TEXT	ENDS
PUBLIC	??1?$vector@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@QAE@XZ ; std::vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::~vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$vector@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@QAE@XZ PROC ; std::vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::~vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@IAEXXZ ; std::vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::_Tidy
??1?$vector@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::~vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >
_TEXT	ENDS
PUBLIC	??_7ioBingoRewardWnd@@6B@			; ioBingoRewardWnd::`vftable'
PUBLIC	??0ioBingoRewardWnd@@QAE@XZ			; ioBingoRewardWnd::ioBingoRewardWnd
PUBLIC	??_R4ioBingoRewardWnd@@6B@			; ioBingoRewardWnd::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioBingoRewardWnd@@@8			; ioBingoRewardWnd `RTTI Type Descriptor'
PUBLIC	??_R3ioBingoRewardWnd@@8			; ioBingoRewardWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioBingoRewardWnd@@8			; ioBingoRewardWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioBingoRewardWnd@@8		; ioBingoRewardWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioMovingWnd@@8			; ioMovingWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioMovingWnd@@@8				; ioMovingWnd `RTTI Type Descriptor'
PUBLIC	??_R3ioMovingWnd@@8				; ioMovingWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioMovingWnd@@8				; ioMovingWnd::`RTTI Base Class Array'
EXTRN	__imp_??1ioMovingWnd@@UAE@XZ:PROC
EXTRN	__imp_??0ioMovingWnd@@QAE@XZ:PROC
EXTRN	?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z:PROC ; ioWnd::AddRenderFrame
EXTRN	?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC ; ioWnd::AddRenderImage
EXTRN	?ParseExtraInfo@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC ; ioWnd::ParseExtraInfo
EXTRN	?SetWindowAlpha@ioWnd@@UAEXH@Z:PROC		; ioWnd::SetWindowAlpha
EXTRN	?SetPositionToDefault@ioMovingWnd@@UAEXHH_N0@Z:PROC ; ioMovingWnd::SetPositionToDefault
EXTRN	?OnMouseProcess@ioMovingWnd@@MAEXABVioMouse@@@Z:PROC ; ioMovingWnd::OnMouseProcess
EXTRN	?CheckFrameReSize@ioWnd@@MAEXHHHH@Z:PROC	; ioWnd::CheckFrameReSize
EXTRN	?iwm_lbuttondown@ioMovingWnd@@UAEXABVioMouse@@@Z:PROC ; ioMovingWnd::iwm_lbuttondown
EXTRN	?iwm_lbuttonup@ioMovingWnd@@UAEXABVioMouse@@@Z:PROC ; ioMovingWnd::iwm_lbuttonup
EXTRN	?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z:PROC ; ioWnd::iwm_lbuttonDBLCLK
EXTRN	?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_rbuttondown
EXTRN	?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_rbuttonup
EXTRN	?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mouseover
EXTRN	?GetWndType@ioWnd@@UBEKXZ:PROC			; ioWnd::GetWndType
EXTRN	?GetHeaderFileName@ioWnd@@UAEPBDXZ:PROC		; ioWnd::GetHeaderFileName
EXTRN	?GetTemplateName@ioWnd@@UAEPBDXZ:PROC		; ioWnd::GetTemplateName
EXTRN	?GetDefClassName@ioWnd@@UBEPBDXZ:PROC		; ioWnd::GetDefClassName
EXTRN	?_Clone@ioWnd@@UAEPAV1@XZ:PROC			; ioWnd::_Clone
EXTRN	?Copy@ioWnd@@UAEXPAV1@@Z:PROC			; ioWnd::Copy
EXTRN	?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC ; ioWnd::SetSaveData
EXTRN	?GetNumFixedRenderFrame@ioWnd@@UBEHXZ:PROC	; ioWnd::GetNumFixedRenderFrame
EXTRN	?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z:PROC	; ioWnd::GetFixedRenderFrameType
EXTRN	?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioWnd::GetRenderFrame
EXTRN	?GetNumFixedRenderImage@ioWnd@@UBEHXZ:PROC	; ioWnd::GetNumFixedRenderImage
EXTRN	?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z:PROC	; ioWnd::GetFixedRenderImageType
EXTRN	?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioWnd::GetRenderImage
EXTRN	??_EioBingoRewardWnd@@UAEPAXI@Z:PROC		; ioBingoRewardWnd::`vector deleting destructor'
;	COMDAT ??_R2ioMovingWnd@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
rdata$r	SEGMENT
??_R2ioMovingWnd@@8 DD FLAT:??_R1A@?0A@EA@ioMovingWnd@@8 ; ioMovingWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3ioMovingWnd@@8
rdata$r	SEGMENT
??_R3ioMovingWnd@@8 DD 00H				; ioMovingWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioMovingWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioMovingWnd@@@8
_DATA	SEGMENT
??_R0?AVioMovingWnd@@@8 DD FLAT:??_7type_info@@6B@	; ioMovingWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioMovingWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioMovingWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioMovingWnd@@8 DD FLAT:??_R0?AVioMovingWnd@@@8 ; ioMovingWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioMovingWnd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioBingoRewardWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioBingoRewardWnd@@8 DD FLAT:??_R0?AVioBingoRewardWnd@@@8 ; ioBingoRewardWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioBingoRewardWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2ioBingoRewardWnd@@8
rdata$r	SEGMENT
??_R2ioBingoRewardWnd@@8 DD FLAT:??_R1A@?0A@EA@ioBingoRewardWnd@@8 ; ioBingoRewardWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioMovingWnd@@8
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3ioBingoRewardWnd@@8
rdata$r	SEGMENT
??_R3ioBingoRewardWnd@@8 DD 00H				; ioBingoRewardWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ioBingoRewardWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioBingoRewardWnd@@@8
_DATA	SEGMENT
??_R0?AVioBingoRewardWnd@@@8 DD FLAT:??_7type_info@@6B@	; ioBingoRewardWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioBingoRewardWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioBingoRewardWnd@@6B@
rdata$r	SEGMENT
??_R4ioBingoRewardWnd@@6B@ DD 00H			; ioBingoRewardWnd::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioBingoRewardWnd@@@8
	DD	FLAT:??_R3ioBingoRewardWnd@@8
rdata$r	ENDS
;	COMDAT ??_7ioBingoRewardWnd@@6B@
CONST	SEGMENT
??_7ioBingoRewardWnd@@6B@ DD FLAT:??_R4ioBingoRewardWnd@@6B@ ; ioBingoRewardWnd::`vftable'
	DD	FLAT:?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
	DD	FLAT:?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z
	DD	FLAT:?ParseExtraInfo@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z
	DD	FLAT:?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z
	DD	FLAT:?SetWindowAlpha@ioWnd@@UAEXH@Z
	DD	FLAT:?SetActive@ioWnd@@UAEXXZ
	DD	FLAT:?SetInActive@ioWnd@@UAEXXZ
	DD	FLAT:?ClearElementImageList@ioWnd@@UAEXXZ
	DD	FLAT:?SetSize@ioWnd@@UAEXHH@Z
	DD	FLAT:?SetPositionToDefault@ioMovingWnd@@UAEXHH_N0@Z
	DD	FLAT:?IsNeedProcess@ioWnd@@UBE_NXZ
	DD	FLAT:?IsCanMouseReaction@ioWnd@@UBE_NXZ
	DD	FLAT:?AddChild@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?DeleteChild@ioWnd@@UAEXK@Z
	DD	FLAT:?DeleteAllChild@ioWnd@@UAEXXZ
	DD	FLAT:?OnRenderShowAndHide@ioWnd@@MAE_NXZ
	DD	FLAT:?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRender@ioBingoRewardWnd@@MAEXXZ
	DD	FLAT:?OnRenderAfterChild@ioWnd@@MAEXXZ
	DD	FLAT:?OnProcess@ioWnd@@MAEXM@Z
	DD	FLAT:?OnMouseProcess@ioMovingWnd@@MAEXABVioMouse@@@Z
	DD	FLAT:?CheckFrameReSize@ioWnd@@MAEXHHHH@Z
	DD	FLAT:?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z
	DD	FLAT:?iwm_create@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_destroy@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_lbuttondown@ioMovingWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonup@ioMovingWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_command@ioBingoRewardWnd@@UAEXPAVioWnd@@HK@Z
	DD	FLAT:?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_vscroll@ioWnd@@UAEXKH@Z
	DD	FLAT:?iwm_wheel@ioWnd@@UAEXH@Z
	DD	FLAT:?iwm_show@ioBingoRewardWnd@@UAEXXZ
	DD	FLAT:?iwm_hide@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_esc@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_spacebar@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_gototop@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragleave@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z
	DD	FLAT:?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z
	DD	FLAT:?IsEXType@ioWnd@@UBE_NXZ
	DD	FLAT:?GetWndType@ioWnd@@UBEKXZ
	DD	FLAT:?RenderWnd@ioWnd@@UAEXXZ
	DD	FLAT:?SetIDEX@ioWnd@@UAEXAAK_N@Z
	DD	FLAT:?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?GetHeaderFileName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetTemplateName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetDefClassName@ioWnd@@UBEPBDXZ
	DD	FLAT:?_Clone@ioWnd@@UAEPAV1@XZ
	DD	FLAT:?Copy@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z
	DD	FLAT:?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?SetPosX@ioWnd@@UAEXH@Z
	DD	FLAT:?SetPosY@ioWnd@@UAEXH@Z
	DD	FLAT:?SetWidth@ioWnd@@UAEXH@Z
	DD	FLAT:?SetHeight@ioWnd@@UAEXH@Z
	DD	FLAT:?GetNumFixedRenderFrame@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?GetNumFixedRenderImage@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z
	DD	FLAT:?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z
	DD	FLAT:??_EioBingoRewardWnd@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ioBingoRewardWnd@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioBingoRewardWnd@@QAE@XZ$0
__ehfuncinfo$??0ioBingoRewardWnd@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ioBingoRewardWnd@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\iobingorewardwnd.cpp
xdata$x	ENDS
;	COMDAT ??0ioBingoRewardWnd@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ioBingoRewardWnd@@QAE@XZ PROC			; ioBingoRewardWnd::ioBingoRewardWnd, COMDAT
; _this$ = ecx

; 129  : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioBingoRewardWnd@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioMovingWnd@@QAE@XZ
  00017	33 ff		 xor	 edi, edi
  00019	8d 8e 98 01 00
	00		 lea	 ecx, DWORD PTR [esi+408]
  0001f	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  00022	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioBingoRewardWnd@@6B@
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ
  0002e	89 be a8 01 00
	00		 mov	 DWORD PTR [esi+424], edi
  00034	89 be ac 01 00
	00		 mov	 DWORD PTR [esi+428], edi
  0003a	89 be b0 01 00
	00		 mov	 DWORD PTR [esi+432], edi

; 130  : 	m_iMaxPage = 0;

  00040	89 be 90 01 00
	00		 mov	 DWORD PTR [esi+400], edi

; 131  : 	m_iCurPage = 0;

  00046	89 be 94 01 00
	00		 mov	 DWORD PTR [esi+404], edi

; 132  : }

  0004c	8b c6		 mov	 eax, esi
  0004e	e8 00 00 00 00	 call	 __EH_epilog3
  00053	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioBingoRewardWnd@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioMovingWnd@@UAE@XZ
__ehhandler$??0ioBingoRewardWnd@@QAE@XZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioBingoRewardWnd@@QAE@XZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioBingoRewardWnd@@QAE@XZ ENDP			; ioBingoRewardWnd::ioBingoRewardWnd
PUBLIC	??1ioBingoRewardWnd@@UAE@XZ			; ioBingoRewardWnd::~ioBingoRewardWnd
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??1ioBingoRewardWnd@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioBingoRewardWnd@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ioBingoRewardWnd@@UAE@XZ$1
__ehfuncinfo$??1ioBingoRewardWnd@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1ioBingoRewardWnd@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\iobingorewardwnd.cpp
xdata$x	ENDS
;	COMDAT ??1ioBingoRewardWnd@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioBingoRewardWnd@@UAE@XZ PROC			; ioBingoRewardWnd::~ioBingoRewardWnd, COMDAT
; _this$ = ecx

; 135  : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioBingoRewardWnd@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioBingoRewardWnd@@6B@

; 136  : }

  00017	8d 8e a8 01 00
	00		 lea	 ecx, DWORD PTR [esi+424]
  0001d	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00024	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAVioUIRenderImage@@V?$allocator@PAVioUIRenderImage@@@std@@@std@@IAEXXZ ; std::vector<ioUIRenderImage *,std::allocator<ioUIRenderImage *> >::_Tidy
  00029	8d 8e 98 01 00
	00		 lea	 ecx, DWORD PTR [esi+408]
  0002f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00039	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0003d	8b ce		 mov	 ecx, esi
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioMovingWnd@@UAE@XZ
  00045	e8 00 00 00 00	 call	 __EH_epilog3
  0004a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioBingoRewardWnd@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioMovingWnd@@UAE@XZ
__unwindfunclet$??1ioBingoRewardWnd@@UAE@XZ$1:
  00009	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	81 c1 98 01 00
	00		 add	 ecx, 408		; 00000198H
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??1ioBingoRewardWnd@@UAE@XZ:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioBingoRewardWnd@@UAE@XZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioBingoRewardWnd@@UAE@XZ ENDP			; ioBingoRewardWnd::~ioBingoRewardWnd
; Function compile flags: /Ogsp
;	COMDAT ??_GioBingoRewardWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioBingoRewardWnd@@UAEPAXI@Z PROC			; ioBingoRewardWnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioBingoRewardWnd@@UAE@XZ ; ioBingoRewardWnd::~ioBingoRewardWnd
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@2
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@2:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioBingoRewardWnd@@UAEPAXI@Z ENDP			; ioBingoRewardWnd::`scalar deleting destructor'
_TEXT	ENDS
END
