; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\StateClass\ioBlockInterplaySpecialState.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
;	COMDAT ?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB DD 01H ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
CONST	ENDS
PUBLIC	?LoadProperty@ioSpecialStateBase@@UAEXAAVioINILoader@@@Z ; ioSpecialStateBase::LoadProperty
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iospecialstatebase.h
;	COMDAT ?LoadProperty@ioSpecialStateBase@@UAEXAAVioINILoader@@@Z
_TEXT	SEGMENT
_rkLoader$ = 8						; size = 4
?LoadProperty@ioSpecialStateBase@@UAEXAAVioINILoader@@@Z PROC ; ioSpecialStateBase::LoadProperty, COMDAT
; _this$ = ecx

; 18   : 	virtual void LoadProperty( ioINILoader &rkLoader ){}

  00000	c2 04 00	 ret	 4
?LoadProperty@ioSpecialStateBase@@UAEXAAVioINILoader@@@Z ENDP ; ioSpecialStateBase::LoadProperty
_TEXT	ENDS
PUBLIC	??0TilePos@@QAE@HHH@Z				; TilePos::TilePos
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\blockdefine.h
;	COMDAT ??0TilePos@@QAE@HHH@Z
_TEXT	SEGMENT
_nX$ = 8						; size = 4
_nY$ = 12						; size = 4
_nZ$ = 16						; size = 4
??0TilePos@@QAE@HHH@Z PROC				; TilePos::TilePos, COMDAT
; _this$ = ecx

; 96   : 	TilePos( int nX, int nY, int nZ )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 97   : 	{
; 98   : 		x		= nX;

  00005	8b 4d 08	 mov	 ecx, DWORD PTR _nX$[ebp]

; 99   : 		y		= nY;
; 100  : 		z		= nZ;
; 101  : 		event	= 0;

  00008	83 60 0c 00	 and	 DWORD PTR [eax+12], 0
  0000c	89 08		 mov	 DWORD PTR [eax], ecx
  0000e	8b 4d 0c	 mov	 ecx, DWORD PTR _nY$[ebp]
  00011	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00014	8b 4d 10	 mov	 ecx, DWORD PTR _nZ$[ebp]
  00017	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 102  : 	}

  0001a	5d		 pop	 ebp
  0001b	c2 0c 00	 ret	 12			; 0000000cH
??0TilePos@@QAE@HHH@Z ENDP				; TilePos::TilePos
_TEXT	ENDS
PUBLIC	?GetCharName@ioBaseChar@@QBEABVioHashString@@XZ	; ioBaseChar::GetCharName
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iobasechar.h
;	COMDAT ?GetCharName@ioBaseChar@@QBEABVioHashString@@XZ
_TEXT	SEGMENT
?GetCharName@ioBaseChar@@QBEABVioHashString@@XZ PROC	; ioBaseChar::GetCharName, COMDAT
; _this$ = ecx

; 2594 : 	inline const ioHashString& GetCharName() const { return m_Name; }

  00000	8d 81 d4 02 00
	00		 lea	 eax, DWORD PTR [ecx+724]
  00006	c3		 ret	 0
?GetCharName@ioBaseChar@@QBEABVioHashString@@XZ ENDP	; ioBaseChar::GetCharName
_TEXT	ENDS
PUBLIC	?GetCreator@ioBaseChar@@QAEPAVioPlayStage@@XZ	; ioBaseChar::GetCreator
; Function compile flags: /Ogsp
;	COMDAT ?GetCreator@ioBaseChar@@QAEPAVioPlayStage@@XZ
_TEXT	SEGMENT
?GetCreator@ioBaseChar@@QAEPAVioPlayStage@@XZ PROC	; ioBaseChar::GetCreator, COMDAT
; _this$ = ecx

; 4013 : 	inline ioPlayStage* GetCreator() { return m_pCreator; }

  00000	8b 81 44 03 00
	00		 mov	 eax, DWORD PTR [ecx+836]
  00006	c3		 ret	 0
?GetCreator@ioBaseChar@@QAEPAVioPlayStage@@XZ ENDP	; ioBaseChar::GetCreator
_TEXT	ENDS
PUBLIC	?SetInterPlayChar@ioBlock@@QAEXABVioHashString@@@Z ; ioBlock::SetInterPlayChar
EXTRN	__imp_??4ioHashString@@QAEAAV0@ABV0@@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblock.h
;	COMDAT ?SetInterPlayChar@ioBlock@@QAEXABVioHashString@@@Z
_TEXT	SEGMENT
_CharName$ = 8						; size = 4
?SetInterPlayChar@ioBlock@@QAEXABVioHashString@@@Z PROC	; ioBlock::SetInterPlayChar, COMDAT
; _this$ = ecx

; 186  : 	void SetInterPlayChar( const ioHashString& CharName){ m_InterPlayCharName = CharName; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 c1 dc 02 00
	00		 add	 ecx, 732		; 000002dcH
  00009	5d		 pop	 ebp
  0000a	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
?SetInterPlayChar@ioBlock@@QAEXABVioHashString@@@Z ENDP	; ioBlock::SetInterPlayChar
_TEXT	ENDS
PUBLIC	??_7ioBlockInterplaySpecialState@@6BioBlockEventListener@@@ ; ioBlockInterplaySpecialState::`vftable'
PUBLIC	??_7ioBlockInterplaySpecialState@@6BioSpecialStateBase@@@ ; ioBlockInterplaySpecialState::`vftable'
PUBLIC	??1ioBlockInterplaySpecialState@@UAE@XZ		; ioBlockInterplaySpecialState::~ioBlockInterplaySpecialState
PUBLIC	??_R4ioBlockInterplaySpecialState@@6BioSpecialStateBase@@@ ; ioBlockInterplaySpecialState::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioBlockInterplaySpecialState@@@8	; ioBlockInterplaySpecialState `RTTI Type Descriptor'
PUBLIC	??_R3ioBlockInterplaySpecialState@@8		; ioBlockInterplaySpecialState::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioBlockInterplaySpecialState@@8		; ioBlockInterplaySpecialState::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioBlockInterplaySpecialState@@8	; ioBlockInterplaySpecialState::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioSpecialStateBase@@8		; ioSpecialStateBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioSpecialStateBase@@@8			; ioSpecialStateBase `RTTI Type Descriptor'
PUBLIC	??_R3ioSpecialStateBase@@8			; ioSpecialStateBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioSpecialStateBase@@8			; ioSpecialStateBase::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@ioBlockEventListener@@8		; ioBlockEventListener::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AVioBlockEventListener@@@8		; ioBlockEventListener `RTTI Type Descriptor'
PUBLIC	??_R3ioBlockEventListener@@8			; ioBlockEventListener::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioBlockEventListener@@8			; ioBlockEventListener::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioBlockEventListener@@8		; ioBlockEventListener::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?Initialize@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@W4CharState@@@Z ; ioBlockInterplaySpecialState::Initialize
PUBLIC	?Finalize@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@W4CharState@@1@Z ; ioBlockInterplaySpecialState::Finalize
PUBLIC	?LoadProperty@ioBlockInterplaySpecialState@@UAEXAAVioINILoader@@@Z ; ioBlockInterplaySpecialState::LoadProperty
PUBLIC	?GetStateName@ioBlockInterplaySpecialState@@UAEPBDXZ ; ioBlockInterplaySpecialState::GetStateName
PUBLIC	?GetState@ioBlockInterplaySpecialState@@UAE?BW4CharState@@XZ ; ioBlockInterplaySpecialState::GetState
PUBLIC	?GetAttackSpeedRate@ioSpecialStateBase@@UAEMPAVioBaseChar@@M@Z ; ioSpecialStateBase::GetAttackSpeedRate
PUBLIC	?CheckSpecialState@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@@Z ; ioBlockInterplaySpecialState::CheckSpecialState
PUBLIC	?ProcessState@ioSpecialStateBase@@UAEXPAVioBaseChar@@@Z ; ioSpecialStateBase::ProcessState
PUBLIC	?ProcessMoveSpeed@ioSpecialStateBase@@UAEXPAVioBaseChar@@@Z ; ioSpecialStateBase::ProcessMoveSpeed
PUBLIC	?ProcessMove@ioBlockInterplaySpecialState@@UAE_NPAVioBaseChar@@MKK@Z ; ioBlockInterplaySpecialState::ProcessMove
PUBLIC	?IsCanNoWound@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z ; ioSpecialStateBase::IsCanNoWound
PUBLIC	?IsCollisionAvailableWeapon@ioSpecialStateBase@@UAE_NPAVioBaseChar@@PAVioWeapon@@@Z ; ioSpecialStateBase::IsCollisionAvailableWeapon
PUBLIC	?IsEntityCollisionSkipState@ioSpecialStateBase@@UBE_NQBVioBaseChar@@PAVioGameEntity@@@Z ; ioSpecialStateBase::IsEntityCollisionSkipState
PUBLIC	?IsCharCollisionSkipState@ioBlockInterplaySpecialState@@UBE_NQBVioBaseChar@@KKK_N1W4TeamType@@2@Z ; ioBlockInterplaySpecialState::IsCharCollisionSkipState
PUBLIC	?IsSendControlInfoToUser@ioBlockInterplaySpecialState@@UAE_NPAVioBaseChar@@@Z ; ioBlockInterplaySpecialState::IsSendControlInfoToUser
PUBLIC	?IsIgnoreAttackOverDelay@ioSpecialStateBase@@UAE_NXZ ; ioSpecialStateBase::IsIgnoreAttackOverDelay
PUBLIC	?IsLandingEnable@ioSpecialStateBase@@UAE_NXZ	; ioSpecialStateBase::IsLandingEnable
PUBLIC	?IsFallStateCheck@ioBlockInterplaySpecialState@@UAE_NXZ ; ioBlockInterplaySpecialState::IsFallStateCheck
PUBLIC	?IsEnableBlowWounded@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z ; ioSpecialStateBase::IsEnableBlowWounded
PUBLIC	?IsNoDropState@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z ; ioSpecialStateBase::IsNoDropState
PUBLIC	?IsCanChangeJumppingState@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z ; ioSpecialStateBase::IsCanChangeJumppingState
PUBLIC	?IsEnableDashState@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z ; ioSpecialStateBase::IsEnableDashState
PUBLIC	?IsStateEnd@ioBlockInterplaySpecialState@@UAE_NPAVioBaseChar@@@Z ; ioBlockInterplaySpecialState::IsStateEnd
PUBLIC	?IsProcessFlyMove@ioSpecialStateBase@@UAE_NXZ	; ioSpecialStateBase::IsProcessFlyMove
PUBLIC	?IsFloatingState@ioSpecialStateBase@@UBE_NQBVioBaseChar@@@Z ; ioSpecialStateBase::IsFloatingState
PUBLIC	?IsInitializeSync@ioBlockInterplaySpecialState@@UAE_NXZ ; ioBlockInterplaySpecialState::IsInitializeSync
PUBLIC	?IsJoinSync@ioBlockInterplaySpecialState@@UAE_NXZ ; ioBlockInterplaySpecialState::IsJoinSync
PUBLIC	?FillJoinSync@ioBlockInterplaySpecialState@@UAEXAAVSP2Packet@@PAVioBaseChar@@@Z ; ioBlockInterplaySpecialState::FillJoinSync
PUBLIC	?ApplyJoinSync@ioBlockInterplaySpecialState@@UAEXAAVSP2Packet@@PAVioBaseChar@@@Z ; ioBlockInterplaySpecialState::ApplyJoinSync
PUBLIC	?ApplyStateSync@ioBlockInterplaySpecialState@@UAEXAAVSP2Packet@@PAVioBaseChar@@@Z ; ioBlockInterplaySpecialState::ApplyStateSync
PUBLIC	?CheckFallStateChange@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@MM_NM@Z ; ioBlockInterplaySpecialState::CheckFallStateChange
PUBLIC	??_R4ioBlockInterplaySpecialState@@6BioBlockEventListener@@@ ; ioBlockInterplaySpecialState::`RTTI Complete Object Locator'
PUBLIC	?ReciveEvent@ioBlockEventListener@@UAEXW4EventType@1@PAVioBlockEventParameter@@@Z ; ioBlockEventListener::ReciveEvent
PUBLIC	??_EioBlockInterplaySpecialState@@W7AEPAXI@Z	; [thunk]:ioBlockInterplaySpecialState::`vector deleting destructor'
EXTRN	??1ioSpecialStateBase@@UAE@XZ:PROC		; ioSpecialStateBase::~ioSpecialStateBase
EXTRN	??1ioBlockEventListener@@UAE@XZ:PROC		; ioBlockEventListener::~ioBlockEventListener
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ProcessKeyInput@ioSpecialStateBase@@UAEXPAVioBaseChar@@@Z:PROC ; ioSpecialStateBase::ProcessKeyInput
EXTRN	?GetGravity@ioSpecialStateBase@@UAEXPAVioBaseChar@@AAM@Z:PROC ; ioSpecialStateBase::GetGravity
EXTRN	??_EioBlockInterplaySpecialState@@UAEPAXI@Z:PROC ; ioBlockInterplaySpecialState::`vector deleting destructor'
;	COMDAT ??_R4ioBlockInterplaySpecialState@@6BioBlockEventListener@@@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stateclass\ioblockinterplayspecialstate.cpp
rdata$r	SEGMENT
??_R4ioBlockInterplaySpecialState@@6BioBlockEventListener@@@ DD 00H ; ioBlockInterplaySpecialState::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVioBlockInterplaySpecialState@@@8
	DD	FLAT:??_R3ioBlockInterplaySpecialState@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioBlockEventListener@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioBlockEventListener@@8 DD FLAT:??_R0?AVioBlockEventListener@@@8 ; ioBlockEventListener::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioBlockEventListener@@8
rdata$r	ENDS
;	COMDAT ??_R2ioBlockEventListener@@8
rdata$r	SEGMENT
??_R2ioBlockEventListener@@8 DD FLAT:??_R1A@?0A@EA@ioBlockEventListener@@8 ; ioBlockEventListener::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioBlockEventListener@@8
rdata$r	SEGMENT
??_R3ioBlockEventListener@@8 DD 00H			; ioBlockEventListener::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioBlockEventListener@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioBlockEventListener@@@8
_DATA	SEGMENT
??_R0?AVioBlockEventListener@@@8 DD FLAT:??_7type_info@@6B@ ; ioBlockEventListener `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioBlockEventListener@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@ioBlockEventListener@@8
rdata$r	SEGMENT
??_R17?0A@EA@ioBlockEventListener@@8 DD FLAT:??_R0?AVioBlockEventListener@@@8 ; ioBlockEventListener::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioBlockEventListener@@8
rdata$r	ENDS
;	COMDAT ??_R2ioSpecialStateBase@@8
rdata$r	SEGMENT
??_R2ioSpecialStateBase@@8 DD FLAT:??_R1A@?0A@EA@ioSpecialStateBase@@8 ; ioSpecialStateBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioSpecialStateBase@@8
rdata$r	SEGMENT
??_R3ioSpecialStateBase@@8 DD 00H			; ioSpecialStateBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioSpecialStateBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioSpecialStateBase@@@8
_DATA	SEGMENT
??_R0?AVioSpecialStateBase@@@8 DD FLAT:??_7type_info@@6B@ ; ioSpecialStateBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioSpecialStateBase@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioSpecialStateBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioSpecialStateBase@@8 DD FLAT:??_R0?AVioSpecialStateBase@@@8 ; ioSpecialStateBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioSpecialStateBase@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioBlockInterplaySpecialState@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioBlockInterplaySpecialState@@8 DD FLAT:??_R0?AVioBlockInterplaySpecialState@@@8 ; ioBlockInterplaySpecialState::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioBlockInterplaySpecialState@@8
rdata$r	ENDS
;	COMDAT ??_R2ioBlockInterplaySpecialState@@8
rdata$r	SEGMENT
??_R2ioBlockInterplaySpecialState@@8 DD FLAT:??_R1A@?0A@EA@ioBlockInterplaySpecialState@@8 ; ioBlockInterplaySpecialState::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioSpecialStateBase@@8
	DD	FLAT:??_R17?0A@EA@ioBlockEventListener@@8
rdata$r	ENDS
;	COMDAT ??_R3ioBlockInterplaySpecialState@@8
rdata$r	SEGMENT
??_R3ioBlockInterplaySpecialState@@8 DD 00H		; ioBlockInterplaySpecialState::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2ioBlockInterplaySpecialState@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioBlockInterplaySpecialState@@@8
_DATA	SEGMENT
??_R0?AVioBlockInterplaySpecialState@@@8 DD FLAT:??_7type_info@@6B@ ; ioBlockInterplaySpecialState `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioBlockInterplaySpecialState@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioBlockInterplaySpecialState@@6BioSpecialStateBase@@@
rdata$r	SEGMENT
??_R4ioBlockInterplaySpecialState@@6BioSpecialStateBase@@@ DD 00H ; ioBlockInterplaySpecialState::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioBlockInterplaySpecialState@@@8
	DD	FLAT:??_R3ioBlockInterplaySpecialState@@8
rdata$r	ENDS
;	COMDAT ??_7ioBlockInterplaySpecialState@@6BioBlockEventListener@@@
CONST	SEGMENT
??_7ioBlockInterplaySpecialState@@6BioBlockEventListener@@@ DD FLAT:??_R4ioBlockInterplaySpecialState@@6BioBlockEventListener@@@ ; ioBlockInterplaySpecialState::`vftable'
	DD	FLAT:?ReciveEvent@ioBlockEventListener@@UAEXW4EventType@1@PAVioBlockEventParameter@@@Z
	DD	FLAT:??_EioBlockInterplaySpecialState@@W7AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7ioBlockInterplaySpecialState@@6BioSpecialStateBase@@@
CONST	SEGMENT
??_7ioBlockInterplaySpecialState@@6BioSpecialStateBase@@@ DD FLAT:??_R4ioBlockInterplaySpecialState@@6BioSpecialStateBase@@@ ; ioBlockInterplaySpecialState::`vftable'
	DD	FLAT:?Initialize@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@W4CharState@@@Z
	DD	FLAT:?Finalize@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@W4CharState@@1@Z
	DD	FLAT:?LoadProperty@ioBlockInterplaySpecialState@@UAEXAAVioINILoader@@@Z
	DD	FLAT:?GetStateName@ioBlockInterplaySpecialState@@UAEPBDXZ
	DD	FLAT:?GetState@ioBlockInterplaySpecialState@@UAE?BW4CharState@@XZ
	DD	FLAT:?GetAttackSpeedRate@ioSpecialStateBase@@UAEMPAVioBaseChar@@M@Z
	DD	FLAT:?CheckSpecialState@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ProcessState@ioSpecialStateBase@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ProcessMoveSpeed@ioSpecialStateBase@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ProcessMove@ioBlockInterplaySpecialState@@UAE_NPAVioBaseChar@@MKK@Z
	DD	FLAT:?ProcessKeyInput@ioSpecialStateBase@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?IsCanNoWound@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsCollisionAvailableWeapon@ioSpecialStateBase@@UAE_NPAVioBaseChar@@PAVioWeapon@@@Z
	DD	FLAT:?IsEntityCollisionSkipState@ioSpecialStateBase@@UBE_NQBVioBaseChar@@PAVioGameEntity@@@Z
	DD	FLAT:?IsCharCollisionSkipState@ioBlockInterplaySpecialState@@UBE_NQBVioBaseChar@@KKK_N1W4TeamType@@2@Z
	DD	FLAT:?IsSendControlInfoToUser@ioBlockInterplaySpecialState@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsIgnoreAttackOverDelay@ioSpecialStateBase@@UAE_NXZ
	DD	FLAT:?IsLandingEnable@ioSpecialStateBase@@UAE_NXZ
	DD	FLAT:?IsFallStateCheck@ioBlockInterplaySpecialState@@UAE_NXZ
	DD	FLAT:?IsEnableBlowWounded@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsNoDropState@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?GetGravity@ioSpecialStateBase@@UAEXPAVioBaseChar@@AAM@Z
	DD	FLAT:?IsCanChangeJumppingState@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsEnableDashState@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsStateEnd@ioBlockInterplaySpecialState@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsProcessFlyMove@ioSpecialStateBase@@UAE_NXZ
	DD	FLAT:?IsFloatingState@ioSpecialStateBase@@UBE_NQBVioBaseChar@@@Z
	DD	FLAT:?IsInitializeSync@ioBlockInterplaySpecialState@@UAE_NXZ
	DD	FLAT:?IsJoinSync@ioBlockInterplaySpecialState@@UAE_NXZ
	DD	FLAT:?FillJoinSync@ioBlockInterplaySpecialState@@UAEXAAVSP2Packet@@PAVioBaseChar@@@Z
	DD	FLAT:?ApplyJoinSync@ioBlockInterplaySpecialState@@UAEXAAVSP2Packet@@PAVioBaseChar@@@Z
	DD	FLAT:?ApplyStateSync@ioBlockInterplaySpecialState@@UAEXAAVSP2Packet@@PAVioBaseChar@@@Z
	DD	FLAT:?CheckFallStateChange@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@MM_NM@Z
	DD	FLAT:??_EioBlockInterplaySpecialState@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ioBlockInterplaySpecialState@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioBlockInterplaySpecialState@@UAE@XZ$0
__ehfuncinfo$??1ioBlockInterplaySpecialState@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ioBlockInterplaySpecialState@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1ioBlockInterplaySpecialState@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioBlockInterplaySpecialState@@UAE@XZ PROC		; ioBlockInterplaySpecialState::~ioBlockInterplaySpecialState, COMDAT
; _this$ = ecx

; 15   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioBlockInterplaySpecialState@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00014	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioBlockInterplaySpecialState@@6BioSpecialStateBase@@@
  0001a	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ioBlockInterplaySpecialState@@6BioBlockEventListener@@@
  00020	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 16   : }

  00024	e8 00 00 00 00	 call	 ??1ioBlockEventListener@@UAE@XZ ; ioBlockEventListener::~ioBlockEventListener
  00029	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0002d	8b ce		 mov	 ecx, esi
  0002f	e8 00 00 00 00	 call	 ??1ioSpecialStateBase@@UAE@XZ ; ioSpecialStateBase::~ioSpecialStateBase
  00034	e8 00 00 00 00	 call	 __EH_epilog3
  00039	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioBlockInterplaySpecialState@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioSpecialStateBase@@UAE@XZ ; ioSpecialStateBase::~ioSpecialStateBase
__ehhandler$??1ioBlockInterplaySpecialState@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioBlockInterplaySpecialState@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioBlockInterplaySpecialState@@UAE@XZ ENDP		; ioBlockInterplaySpecialState::~ioBlockInterplaySpecialState
EXTRN	__fltused:DWORD
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iospecialstatebase.h
;	COMDAT ?GetAttackSpeedRate@ioSpecialStateBase@@UAEMPAVioBaseChar@@M@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_fMaxSpeed$ = 12					; size = 4
?GetAttackSpeedRate@ioSpecialStateBase@@UAEMPAVioBaseChar@@M@Z PROC ; ioSpecialStateBase::GetAttackSpeedRate, COMDAT
; _this$ = ecx

; 26   : 	virtual float GetAttackSpeedRate( ioBaseChar* pOwner, float fMaxSpeed ){ return fMaxSpeed; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	d9 45 0c	 fld	 DWORD PTR _fMaxSpeed$[ebp]
  00006	5d		 pop	 ebp
  00007	c2 08 00	 ret	 8
?GetAttackSpeedRate@ioSpecialStateBase@@UAEMPAVioBaseChar@@M@Z ENDP ; ioSpecialStateBase::GetAttackSpeedRate
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?ProcessState@ioSpecialStateBase@@UAEXPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?ProcessState@ioSpecialStateBase@@UAEXPAVioBaseChar@@@Z PROC ; ioSpecialStateBase::ProcessState, COMDAT
; _this$ = ecx

; 30   : 	virtual void ProcessState( IN ioBaseChar* pOwner ){}

  00000	c2 04 00	 ret	 4
?ProcessState@ioSpecialStateBase@@UAEXPAVioBaseChar@@@Z ENDP ; ioSpecialStateBase::ProcessState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?ProcessMoveSpeed@ioSpecialStateBase@@UAEXPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?ProcessMoveSpeed@ioSpecialStateBase@@UAEXPAVioBaseChar@@@Z PROC ; ioSpecialStateBase::ProcessMoveSpeed, COMDAT
; _this$ = ecx

; 31   : 	virtual void ProcessMoveSpeed( ioBaseChar* pOwner ){}

  00000	c2 04 00	 ret	 4
?ProcessMoveSpeed@ioSpecialStateBase@@UAEXPAVioBaseChar@@@Z ENDP ; ioSpecialStateBase::ProcessMoveSpeed
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsCanNoWound@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?IsCanNoWound@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z PROC ; ioSpecialStateBase::IsCanNoWound, COMDAT
; _this$ = ecx

; 37   : 	virtual bool IsCanNoWound( ioBaseChar* pOwner ) { return false; };

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?IsCanNoWound@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z ENDP ; ioSpecialStateBase::IsCanNoWound
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsCollisionAvailableWeapon@ioSpecialStateBase@@UAE_NPAVioBaseChar@@PAVioWeapon@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_pWeapon$ = 12						; size = 4
?IsCollisionAvailableWeapon@ioSpecialStateBase@@UAE_NPAVioBaseChar@@PAVioWeapon@@@Z PROC ; ioSpecialStateBase::IsCollisionAvailableWeapon, COMDAT
; _this$ = ecx

; 38   : 	virtual bool IsCollisionAvailableWeapon( ioBaseChar* pOwner, ioWeapon *pWeapon ) { return true; }

  00000	b0 01		 mov	 al, 1
  00002	c2 08 00	 ret	 8
?IsCollisionAvailableWeapon@ioSpecialStateBase@@UAE_NPAVioBaseChar@@PAVioWeapon@@@Z ENDP ; ioSpecialStateBase::IsCollisionAvailableWeapon
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsEntityCollisionSkipState@ioSpecialStateBase@@UBE_NQBVioBaseChar@@PAVioGameEntity@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_pColEntity$ = 12					; size = 4
?IsEntityCollisionSkipState@ioSpecialStateBase@@UBE_NQBVioBaseChar@@PAVioGameEntity@@@Z PROC ; ioSpecialStateBase::IsEntityCollisionSkipState, COMDAT
; _this$ = ecx

; 39   : 	virtual bool IsEntityCollisionSkipState( const ioBaseChar *const pOwner, ioGameEntity* pColEntity ) const { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 08 00	 ret	 8
?IsEntityCollisionSkipState@ioSpecialStateBase@@UBE_NQBVioBaseChar@@PAVioGameEntity@@@Z ENDP ; ioSpecialStateBase::IsEntityCollisionSkipState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsIgnoreAttackOverDelay@ioSpecialStateBase@@UAE_NXZ
_TEXT	SEGMENT
?IsIgnoreAttackOverDelay@ioSpecialStateBase@@UAE_NXZ PROC ; ioSpecialStateBase::IsIgnoreAttackOverDelay, COMDAT
; _this$ = ecx

; 50   : 	virtual bool IsIgnoreAttackOverDelay(){ return false; }

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?IsIgnoreAttackOverDelay@ioSpecialStateBase@@UAE_NXZ ENDP ; ioSpecialStateBase::IsIgnoreAttackOverDelay
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsLandingEnable@ioSpecialStateBase@@UAE_NXZ
_TEXT	SEGMENT
?IsLandingEnable@ioSpecialStateBase@@UAE_NXZ PROC	; ioSpecialStateBase::IsLandingEnable, COMDAT
; _this$ = ecx

; 51   : 	virtual bool IsLandingEnable(){ return true; }

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsLandingEnable@ioSpecialStateBase@@UAE_NXZ ENDP	; ioSpecialStateBase::IsLandingEnable
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsEnableBlowWounded@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?IsEnableBlowWounded@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z PROC ; ioSpecialStateBase::IsEnableBlowWounded, COMDAT
; _this$ = ecx

; 53   : 	virtual bool IsEnableBlowWounded( ioBaseChar *pOwner ){ return true; }

  00000	b0 01		 mov	 al, 1
  00002	c2 04 00	 ret	 4
?IsEnableBlowWounded@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z ENDP ; ioSpecialStateBase::IsEnableBlowWounded
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsNoDropState@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?IsNoDropState@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z PROC ; ioSpecialStateBase::IsNoDropState, COMDAT
; _this$ = ecx

; 54   : 	virtual bool IsNoDropState( ioBaseChar* pOwner ) { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?IsNoDropState@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z ENDP ; ioSpecialStateBase::IsNoDropState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsCanChangeJumppingState@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?IsCanChangeJumppingState@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z PROC ; ioSpecialStateBase::IsCanChangeJumppingState, COMDAT
; _this$ = ecx

; 56   : 	virtual bool IsCanChangeJumppingState( ioBaseChar* pOwner ) { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?IsCanChangeJumppingState@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z ENDP ; ioSpecialStateBase::IsCanChangeJumppingState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsEnableDashState@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?IsEnableDashState@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z PROC ; ioSpecialStateBase::IsEnableDashState, COMDAT
; _this$ = ecx

; 58   : 	virtual bool IsEnableDashState( ioBaseChar* pOwner ){ return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?IsEnableDashState@ioSpecialStateBase@@UAE_NPAVioBaseChar@@@Z ENDP ; ioSpecialStateBase::IsEnableDashState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsProcessFlyMove@ioSpecialStateBase@@UAE_NXZ
_TEXT	SEGMENT
?IsProcessFlyMove@ioSpecialStateBase@@UAE_NXZ PROC	; ioSpecialStateBase::IsProcessFlyMove, COMDAT
; _this$ = ecx

; 62   : 	virtual bool IsProcessFlyMove(){ return false; }	

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?IsProcessFlyMove@ioSpecialStateBase@@UAE_NXZ ENDP	; ioSpecialStateBase::IsProcessFlyMove
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsFloatingState@ioSpecialStateBase@@UBE_NQBVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?IsFloatingState@ioSpecialStateBase@@UBE_NQBVioBaseChar@@@Z PROC ; ioSpecialStateBase::IsFloatingState, COMDAT
; _this$ = ecx

; 64   : 	virtual bool IsFloatingState( const ioBaseChar * const pOwner ) const { return false; }	

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?IsFloatingState@ioSpecialStateBase@@UBE_NQBVioBaseChar@@@Z ENDP ; ioSpecialStateBase::IsFloatingState
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockeventagency.h
_TEXT	ENDS
;	COMDAT ?ReciveEvent@ioBlockEventListener@@UAEXW4EventType@1@PAVioBlockEventParameter@@@Z
_TEXT	SEGMENT
_eType$ = 8						; size = 4
_param$ = 12						; size = 4
?ReciveEvent@ioBlockEventListener@@UAEXW4EventType@1@PAVioBlockEventParameter@@@Z PROC ; ioBlockEventListener::ReciveEvent, COMDAT
; _this$ = ecx

; 20   : 	virtual void ReciveEvent( EventType eType, ioBlockEventParameter* param ){};

  00000	c2 08 00	 ret	 8
?ReciveEvent@ioBlockEventListener@@UAEXW4EventType@1@PAVioBlockEventParameter@@@Z ENDP ; ioBlockEventListener::ReciveEvent
_TEXT	ENDS
PUBLIC	??_C@_0BC@MLEPEBHP@CS_BLOCK_INTEPLAY?$AA@	; `string'
;	COMDAT ??_C@_0BC@MLEPEBHP@CS_BLOCK_INTEPLAY?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stateclass\ioblockinterplayspecialstate.h
CONST	SEGMENT
??_C@_0BC@MLEPEBHP@CS_BLOCK_INTEPLAY?$AA@ DB 'CS_BLOCK_INTEPLAY', 00H ; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?GetStateName@ioBlockInterplaySpecialState@@UAEPBDXZ
_TEXT	SEGMENT
?GetStateName@ioBlockInterplaySpecialState@@UAEPBDXZ PROC ; ioBlockInterplaySpecialState::GetStateName, COMDAT
; _this$ = ecx

; 49   : 	virtual const char* GetStateName(){ return "CS_BLOCK_INTEPLAY"; }

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@MLEPEBHP@CS_BLOCK_INTEPLAY?$AA@
  00005	c3		 ret	 0
?GetStateName@ioBlockInterplaySpecialState@@UAEPBDXZ ENDP ; ioBlockInterplaySpecialState::GetStateName
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?GetState@ioBlockInterplaySpecialState@@UAE?BW4CharState@@XZ
_TEXT	SEGMENT
?GetState@ioBlockInterplaySpecialState@@UAE?BW4CharState@@XZ PROC ; ioBlockInterplaySpecialState::GetState, COMDAT
; _this$ = ecx

; 50   : 	virtual const CharState GetState(){ return CS_BLOCK_INTEPLAY; }

  00000	b0 a1		 mov	 al, 161			; 000000a1H
  00002	c3		 ret	 0
?GetState@ioBlockInterplaySpecialState@@UAE?BW4CharState@@XZ ENDP ; ioBlockInterplaySpecialState::GetState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsSendControlInfoToUser@ioBlockInterplaySpecialState@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?IsSendControlInfoToUser@ioBlockInterplaySpecialState@@UAE_NPAVioBaseChar@@@Z PROC ; ioBlockInterplaySpecialState::IsSendControlInfoToUser, COMDAT
; _this$ = ecx

; 52   : 	virtual bool IsSendControlInfoToUser( ioBaseChar* pOwner ){ return true; }

  00000	b0 01		 mov	 al, 1
  00002	c2 04 00	 ret	 4
?IsSendControlInfoToUser@ioBlockInterplaySpecialState@@UAE_NPAVioBaseChar@@@Z ENDP ; ioBlockInterplaySpecialState::IsSendControlInfoToUser
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsFallStateCheck@ioBlockInterplaySpecialState@@UAE_NXZ
_TEXT	SEGMENT
?IsFallStateCheck@ioBlockInterplaySpecialState@@UAE_NXZ PROC ; ioBlockInterplaySpecialState::IsFallStateCheck, COMDAT
; _this$ = ecx

; 53   : 	virtual bool IsFallStateCheck(){ return false; }

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?IsFallStateCheck@ioBlockInterplaySpecialState@@UAE_NXZ ENDP ; ioBlockInterplaySpecialState::IsFallStateCheck
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsInitializeSync@ioBlockInterplaySpecialState@@UAE_NXZ
_TEXT	SEGMENT
?IsInitializeSync@ioBlockInterplaySpecialState@@UAE_NXZ PROC ; ioBlockInterplaySpecialState::IsInitializeSync, COMDAT
; _this$ = ecx

; 87   : 	virtual bool IsInitializeSync(){ return true; }

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsInitializeSync@ioBlockInterplaySpecialState@@UAE_NXZ ENDP ; ioBlockInterplaySpecialState::IsInitializeSync
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsJoinSync@ioBlockInterplaySpecialState@@UAE_NXZ
_TEXT	SEGMENT
?IsJoinSync@ioBlockInterplaySpecialState@@UAE_NXZ PROC	; ioBlockInterplaySpecialState::IsJoinSync, COMDAT
; _this$ = ecx

; 90   : 	virtual bool IsJoinSync(){ return true; }

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsJoinSync@ioBlockInterplaySpecialState@@UAE_NXZ ENDP	; ioBlockInterplaySpecialState::IsJoinSync
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stateclass\ioblockinterplayspecialstate.cpp
_TEXT	ENDS
;	COMDAT ?LoadProperty@ioBlockInterplaySpecialState@@UAEXAAVioINILoader@@@Z
_TEXT	SEGMENT
_rkLoader$ = 8						; size = 4
?LoadProperty@ioBlockInterplaySpecialState@@UAEXAAVioINILoader@@@Z PROC ; ioBlockInterplaySpecialState::LoadProperty, COMDAT
; _this$ = ecx

; 20   : 	ioSpecialStateBase::LoadProperty( rkLoader );
; 21   : }

  00000	c2 04 00	 ret	 4
?LoadProperty@ioBlockInterplaySpecialState@@UAEXAAVioINILoader@@@Z ENDP ; ioBlockInterplaySpecialState::LoadProperty
_TEXT	ENDS
EXTRN	__imp_?QUAT_IDENTITY@ioMath@@2UD3DXQUATERNION@@A:BYTE
EXTRN	__imp_?VEC3_ZERO@ioMath@@2UD3DXVECTOR3@@A:BYTE
EXTRN	?Initialize@ioSpecialStateBase@@UAEXPAVioBaseChar@@W4CharState@@@Z:PROC ; ioSpecialStateBase::Initialize
; Function compile flags: /Ogsp
;	COMDAT ?Initialize@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@W4CharState@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_eCurrState$ = 12					; size = 1
?Initialize@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@W4CharState@@@Z PROC ; ioBlockInterplaySpecialState::Initialize, COMDAT
; _this$ = ecx

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 25   : 	ioSpecialStateBase::Initialize( pOwner, eCurrState );

  00006	ff 75 0c	 push	 DWORD PTR _eCurrState$[ebp]
  00009	8b d9		 mov	 ebx, ecx
  0000b	ff 75 08	 push	 DWORD PTR _pOwner$[ebp]
  0000e	e8 00 00 00 00	 call	 ?Initialize@ioSpecialStateBase@@UAEXPAVioBaseChar@@W4CharState@@@Z ; ioSpecialStateBase::Initialize

; 26   : 
; 27   : 	m_State				= IPS_NONE;

  00013	33 c0		 xor	 eax, eax
  00015	89 43 0c	 mov	 DWORD PTR [ebx+12], eax

; 28   : 	m_pCurrInterPlay	= NULL;

  00018	89 43 48	 mov	 DWORD PTR [ebx+72], eax

; 29   : 
; 30   : 	m_nBlockUniqueIndex	= 0;

  0001b	89 43 10	 mov	 DWORD PTR [ebx+16], eax
  0001e	89 43 14	 mov	 DWORD PTR [ebx+20], eax

; 31   : 	m_nCollIndex		= 0;

  00021	89 43 18	 mov	 DWORD PTR [ebx+24], eax

; 32   : 
; 33   : 	m_eInterPlayType	= 0;

  00024	89 43 38	 mov	 DWORD PTR [ebx+56], eax

; 34   : 	m_dwPreEndTime		= 0;

  00027	89 43 3c	 mov	 DWORD PTR [ebx+60], eax

; 35   : 	m_dwActionEndTime	= 0;

  0002a	89 43 40	 mov	 DWORD PTR [ebx+64], eax

; 36   : 	m_dwEndStateEndTime	= 0;

  0002d	89 43 44	 mov	 DWORD PTR [ebx+68], eax

; 37   : 
; 38   : 	m_vPos				= ioMath::VEC3_ZERO;

  00030	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?VEC3_ZERO@ioMath@@2UD3DXVECTOR3@@A
  00036	8d 7b 1c	 lea	 edi, DWORD PTR [ebx+28]
  00039	a5		 movsd
  0003a	a5		 movsd
  0003b	a5		 movsd

; 39   : 	m_qtRot				= ioMath::QUAT_IDENTITY;

  0003c	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?QUAT_IDENTITY@ioMath@@2UD3DXQUATERNION@@A
  00042	8d 7b 28	 lea	 edi, DWORD PTR [ebx+40]
  00045	a5		 movsd
  00046	a5		 movsd
  00047	a5		 movsd
  00048	a5		 movsd
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx

; 40   : }

  0004c	5d		 pop	 ebp
  0004d	c2 08 00	 ret	 8
?Initialize@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@W4CharState@@@Z ENDP ; ioBlockInterplaySpecialState::Initialize
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
EXTRN	__imp_??0ioHashString@@QAE@PBD@Z:PROC
EXTRN	?GetBlock@ioBlockManager@@QAEPAVioBlock@@_J@Z:PROC ; ioBlockManager::GetBlock
EXTRN	?GetSingleton@ioBlockManager@@SAAAV1@XZ:PROC	; ioBlockManager::GetSingleton
EXTRN	?Finalize@ioSpecialStateBase@@UAEXPAVioBaseChar@@W4CharState@@1@Z:PROC ; ioSpecialStateBase::Finalize
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblock.h
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Finalize@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@W4CharState@@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Finalize@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@W4CharState@@1@Z$0
__ehfuncinfo$?Finalize@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@W4CharState@@1@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Finalize@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@W4CharState@@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stateclass\ioblockinterplayspecialstate.cpp
xdata$x	ENDS
;	COMDAT ?Finalize@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@W4CharState@@1@Z
_TEXT	SEGMENT
$T534979 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_pOwner$ = 8						; size = 4
_eCurrState$ = 12					; size = 1
_eNewState$ = 16					; size = 1
?Finalize@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@W4CharState@@1@Z PROC ; ioBlockInterplaySpecialState::Finalize, COMDAT
; _this$ = ecx

; 43   : {

  00000	6a 10		 push	 16			; 00000010H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?Finalize@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@W4CharState@@1@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 44   : 	ioSpecialStateBase::Finalize( pOwner, eCurrState, eNewState );

  0000e	ff 75 10	 push	 DWORD PTR _eNewState$[ebp]
  00011	ff 75 0c	 push	 DWORD PTR _eCurrState$[ebp]
  00014	ff 75 08	 push	 DWORD PTR _pOwner$[ebp]
  00017	e8 00 00 00 00	 call	 ?Finalize@ioSpecialStateBase@@UAEXPAVioBaseChar@@W4CharState@@1@Z ; ioSpecialStateBase::Finalize

; 45   : 
; 46   : 	ioBlock* pBlock = g_BlockManager.GetBlock( m_nBlockUniqueIndex );

  0001c	ff 76 14	 push	 DWORD PTR [esi+20]
  0001f	ff 76 10	 push	 DWORD PTR [esi+16]
  00022	e8 00 00 00 00	 call	 ?GetSingleton@ioBlockManager@@SAAAV1@XZ ; ioBlockManager::GetSingleton
  00027	8b c8		 mov	 ecx, eax
  00029	e8 00 00 00 00	 call	 ?GetBlock@ioBlockManager@@QAEPAVioBlock@@_J@Z ; ioBlockManager::GetBlock
  0002e	8b f0		 mov	 esi, eax

; 47   : 	if( pBlock )

  00030	85 f6		 test	 esi, esi
  00032	74 2f		 je	 SHORT $LN1@Finalize

; 48   : 		pBlock->SetInterPlayChar( "" );

  00034	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00039	8d 4d e4	 lea	 ecx, DWORD PTR $T534979[ebp]
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00042	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8d 45 e4	 lea	 eax, DWORD PTR $T534979[ebp]
  00049	50		 push	 eax
  0004a	8d 8e dc 02 00
	00		 lea	 ecx, DWORD PTR [esi+732]
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
  00056	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	8d 4d e4	 lea	 ecx, DWORD PTR $T534979[ebp]
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
$LN1@Finalize:

; 49   : }

  00063	e8 00 00 00 00	 call	 __EH_epilog3
  00068	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Finalize@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@W4CharState@@1@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR $T534979[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?Finalize@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@W4CharState@@1@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Finalize@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@W4CharState@@1@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Finalize@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@W4CharState@@1@Z ENDP ; ioBlockInterplaySpecialState::Finalize
; Function compile flags: /Ogsp
;	COMDAT ?IsCharCollisionSkipState@ioBlockInterplaySpecialState@@UBE_NQBVioBaseChar@@KKK_N1W4TeamType@@2@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_dwStartTime$ = 12					; size = 4
_dwEndTime$ = 16					; size = 4
_dwSkipType$ = 20					; size = 4
_bTeamOnly$ = 24					; size = 1
_bDefense$ = 28						; size = 1
_eOwnerTeam$ = 32					; size = 4
_eOtherTeam$ = 36					; size = 4
?IsCharCollisionSkipState@ioBlockInterplaySpecialState@@UBE_NQBVioBaseChar@@KKK_N1W4TeamType@@2@Z PROC ; ioBlockInterplaySpecialState::IsCharCollisionSkipState, COMDAT
; _this$ = ecx

; 53   : 	return true;

  00000	b0 01		 mov	 al, 1

; 54   : }

  00002	c2 20 00	 ret	 32			; 00000020H
?IsCharCollisionSkipState@ioBlockInterplaySpecialState@@UBE_NQBVioBaseChar@@KKK_N1W4TeamType@@2@Z ENDP ; ioBlockInterplaySpecialState::IsCharCollisionSkipState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?CheckFallStateChange@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@MM_NM@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_fMinFallHeightRate$ = 12				; size = 4
_fBottomHeight$ = 16					; size = 4
_bBottomMaxCheck$ = 20					; size = 1
_fMaxBottomHeight$ = 24					; size = 4
?CheckFallStateChange@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@MM_NM@Z PROC ; ioBlockInterplaySpecialState::CheckFallStateChange, COMDAT
; _this$ = ecx

; 58   : }

  00000	c2 14 00	 ret	 20			; 00000014H
?CheckFallStateChange@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@MM_NM@Z ENDP ; ioBlockInterplaySpecialState::CheckFallStateChange
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?ProcessMove@ioBlockInterplaySpecialState@@UAE_NPAVioBaseChar@@MKK@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_fTimePerSec$ = 12					; size = 4
_dwPreTime$ = 16					; size = 4
_dwCurTime$ = 20					; size = 4
?ProcessMove@ioBlockInterplaySpecialState@@UAE_NPAVioBaseChar@@MKK@Z PROC ; ioBlockInterplaySpecialState::ProcessMove, COMDAT
; _this$ = ecx

; 62   : 	return true;

  00000	b0 01		 mov	 al, 1

; 63   : }

  00002	c2 10 00	 ret	 16			; 00000010H
?ProcessMove@ioBlockInterplaySpecialState@@UAE_NPAVioBaseChar@@MKK@Z ENDP ; ioBlockInterplaySpecialState::ProcessMove
_TEXT	ENDS
PUBLIC	?CheckBlock@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::CheckBlock
; Function compile flags: /Ogsp
;	COMDAT ?CheckBlock@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_pStage$ = 12						; size = 4
?CheckBlock@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z PROC ; ioBlockInterplaySpecialState::CheckBlock, COMDAT
; _this$ = ecx

; 136  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 137  : 	ioBlock* pBlock = g_BlockManager.GetBlock( m_nBlockUniqueIndex );

  00003	ff 76 14	 push	 DWORD PTR [esi+20]
  00006	ff 76 10	 push	 DWORD PTR [esi+16]
  00009	e8 00 00 00 00	 call	 ?GetSingleton@ioBlockManager@@SAAAV1@XZ ; ioBlockManager::GetSingleton
  0000e	8b c8		 mov	 ecx, eax
  00010	e8 00 00 00 00	 call	 ?GetBlock@ioBlockManager@@QAEPAVioBlock@@_J@Z ; ioBlockManager::GetBlock

; 138  : 	if( pBlock == NULL || !pBlock->GetProperty() )

  00015	85 c0		 test	 eax, eax
  00017	74 0e		 je	 SHORT $LN1@CheckBlock
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b c8		 mov	 ecx, eax
  0001d	ff 92 e4 00 00
	00		 call	 DWORD PTR [edx+228]
  00023	85 c0		 test	 eax, eax
  00025	75 07		 jne	 SHORT $LN2@CheckBlock
$LN1@CheckBlock:

; 139  : 	{
; 140  : 		m_State = IPS_END;

  00027	c7 46 0c 04 00
	00 00		 mov	 DWORD PTR [esi+12], 4
$LN2@CheckBlock:
  0002e	5e		 pop	 esi

; 141  : 		return;
; 142  : 	}
; 143  : }

  0002f	c2 08 00	 ret	 8
?CheckBlock@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ENDP ; ioBlockInterplaySpecialState::CheckBlock
_TEXT	ENDS
EXTRN	__imp_?GetLoopSec@ioFrameTimer@@QBEKXZ:PROC
EXTRN	__imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?IsStateEnd@ioBlockInterplaySpecialState@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?IsStateEnd@ioBlockInterplaySpecialState@@UAE_NPAVioBaseChar@@@Z PROC ; ioBlockInterplaySpecialState::IsStateEnd, COMDAT
; _this$ = ecx

; 303  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 304  : 	if( m_State == IPS_END && m_dwEndStateEndTime < FRAMEGETTIME() )

  00003	83 7e 0c 04	 cmp	 DWORD PTR [esi+12], 4
  00007	75 17		 jne	 SHORT $LN1@IsStateEnd
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  0000f	8b c8		 mov	 ecx, eax
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00017	39 46 44	 cmp	 DWORD PTR [esi+68], eax
  0001a	73 04		 jae	 SHORT $LN1@IsStateEnd

; 305  : 		return true;

  0001c	b0 01		 mov	 al, 1
  0001e	eb 02		 jmp	 SHORT $LN2@IsStateEnd
$LN1@IsStateEnd:

; 306  : 
; 307  : 	return false;

  00020	32 c0		 xor	 al, al
$LN2@IsStateEnd:
  00022	5e		 pop	 esi

; 308  : }

  00023	c2 04 00	 ret	 4
?IsStateEnd@ioBlockInterplaySpecialState@@UAE_NPAVioBaseChar@@@Z ENDP ; ioBlockInterplaySpecialState::IsStateEnd
_TEXT	ENDS
EXTRN	??6SP2Packet@@QAEAAV0@ABUD3DXQUATERNION@@@Z:PROC ; SP2Packet::operator<<
EXTRN	??6SP2Packet@@QAEAAV0@ABUD3DXVECTOR3@@@Z:PROC	; SP2Packet::operator<<
EXTRN	??6SP2Packet@@QAEAAV0@H@Z:PROC			; SP2Packet::operator<<
EXTRN	??6SP2Packet@@QAEAAV0@_J@Z:PROC			; SP2Packet::operator<<
; Function compile flags: /Ogsp
;	COMDAT ?FillJoinSync@ioBlockInterplaySpecialState@@UAEXAAVSP2Packet@@PAVioBaseChar@@@Z
_TEXT	SEGMENT
_rkPacket$ = 8						; size = 4
_pOwner$ = 12						; size = 4
?FillJoinSync@ioBlockInterplaySpecialState@@UAEXAAVSP2Packet@@PAVioBaseChar@@@Z PROC ; ioBlockInterplaySpecialState::FillJoinSync, COMDAT
; _this$ = ecx

; 311  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 312  : 	if( m_State == IPS_LOOP )

  00006	83 7e 0c 02	 cmp	 DWORD PTR [esi+12], 2
  0000a	75 32		 jne	 SHORT $LN1@FillJoinSy

; 313  : 	{
; 314  : 		rkPacket << m_nBlockUniqueIndex;

  0000c	57		 push	 edi
  0000d	ff 76 14	 push	 DWORD PTR [esi+20]
  00010	8b 7d 08	 mov	 edi, DWORD PTR _rkPacket$[ebp]
  00013	ff 76 10	 push	 DWORD PTR [esi+16]
  00016	8b cf		 mov	 ecx, edi
  00018	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@_J@Z ; SP2Packet::operator<<

; 315  : 		rkPacket << m_nCollIndex;

  0001d	ff 76 18	 push	 DWORD PTR [esi+24]
  00020	8b cf		 mov	 ecx, edi
  00022	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@H@Z ; SP2Packet::operator<<

; 316  : 		rkPacket << m_vPos;

  00027	8d 46 1c	 lea	 eax, DWORD PTR [esi+28]
  0002a	50		 push	 eax
  0002b	8b cf		 mov	 ecx, edi
  0002d	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@ABUD3DXVECTOR3@@@Z ; SP2Packet::operator<<

; 317  : 		rkPacket << m_qtRot;

  00032	83 c6 28	 add	 esi, 40			; 00000028H
  00035	56		 push	 esi
  00036	8b cf		 mov	 ecx, edi
  00038	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@ABUD3DXQUATERNION@@@Z ; SP2Packet::operator<<
  0003d	5f		 pop	 edi
$LN1@FillJoinSy:
  0003e	5e		 pop	 esi

; 318  : 	}
; 319  : }

  0003f	5d		 pop	 ebp
  00040	c2 08 00	 ret	 8
?FillJoinSync@ioBlockInterplaySpecialState@@UAEXAAVSP2Packet@@PAVioBaseChar@@@Z ENDP ; ioBlockInterplaySpecialState::FillJoinSync
_TEXT	ENDS
PUBLIC	__real@3f91df46a2526c7a
PUBLIC	??$DEGtoRAD@M@@YAMM@Z				; DEGtoRAD<float>
;	COMDAT __real@3f91df46a2526c7a
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\veryoftenusedefine.h
CONST	SEGMENT
__real@3f91df46a2526c7a DQ 03f91df46a2526c7ar	; 0.0174533
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??$DEGtoRAD@M@@YAMM@Z
_TEXT	SEGMENT
tv129 = 8						; size = 4
_val$ = 8						; size = 4
??$DEGtoRAD@M@@YAMM@Z PROC				; DEGtoRAD<float>, COMDAT

; 20   : type  DEGtoRAD (type val) {return (type) (val * 0.0174532925199);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	d9 45 08	 fld	 DWORD PTR _val$[ebp]
  00006	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3f91df46a2526c7a
  0000c	d9 5d 08	 fstp	 DWORD PTR tv129[ebp]
  0000f	d9 45 08	 fld	 DWORD PTR tv129[ebp]
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??$DEGtoRAD@M@@YAMM@Z ENDP				; DEGtoRAD<float>
; Function compile flags: /Odsp
_TEXT	ENDS
;	COMDAT ??_EioBlockInterplaySpecialState@@W7AEPAXI@Z
_TEXT	SEGMENT
??_EioBlockInterplaySpecialState@@W7AEPAXI@Z PROC	; [thunk]:ioBlockInterplaySpecialState::`vector deleting destructor', COMDAT
  00000	83 e9 08	 sub	 ecx, 8
  00003	e9 00 00 00 00	 jmp	 ??_EioBlockInterplaySpecialState@@UAEPAXI@Z
??_EioBlockInterplaySpecialState@@W7AEPAXI@Z ENDP	; [thunk]:ioBlockInterplaySpecialState::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.h
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 165  :     D3DXVECTOR3() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	??0D3DXQUATERNION@@QAE@XZ			; D3DXQUATERNION::D3DXQUATERNION
; Function compile flags: /Ogsp
;	COMDAT ??0D3DXQUATERNION@@QAE@XZ
_TEXT	SEGMENT
??0D3DXQUATERNION@@QAE@XZ PROC				; D3DXQUATERNION::D3DXQUATERNION, COMDAT
; _this$ = ecx

; 429  :     D3DXQUATERNION() {}

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXQUATERNION@@QAE@XZ ENDP				; D3DXQUATERNION::D3DXQUATERNION
_TEXT	ENDS
PUBLIC	??DD3DXQUATERNION@@QBE?AU0@ABU0@@Z		; D3DXQUATERNION::operator*
EXTRN	_D3DXQuaternionMultiply@12:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.inl
;	COMDAT ??DD3DXQUATERNION@@QBE?AU0@ABU0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_q$ = 12						; size = 4
??DD3DXQUATERNION@@QBE?AU0@ABU0@@Z PROC			; D3DXQUATERNION::operator*, COMDAT
; _this$ = ecx

; 1181 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1182 :     D3DXQUATERNION qT;
; 1183 :     D3DXQuaternionMultiply(&qT, this, &q);

  00003	ff 75 0c	 push	 DWORD PTR _q$[ebp]
  00006	51		 push	 ecx
  00007	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  0000a	e8 00 00 00 00	 call	 _D3DXQuaternionMultiply@12

; 1184 :     return qT;

  0000f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1185 : }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
??DD3DXQUATERNION@@QBE?AU0@ABU0@@Z ENDP			; D3DXQUATERNION::operator*
_TEXT	ENDS
PUBLIC	?GetGroup@ioGameEntity@@QBEPAVioEntityGroup@@XZ	; ioGameEntity::GetGroup
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iogameentity.h
;	COMDAT ?GetGroup@ioGameEntity@@QBEPAVioEntityGroup@@XZ
_TEXT	SEGMENT
?GetGroup@ioGameEntity@@QBEPAVioEntityGroup@@XZ PROC	; ioGameEntity::GetGroup, COMDAT
; _this$ = ecx

; 166  : 	inline ioEntityGroup* GetGroup() const { return m_pGroup; }

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetGroup@ioGameEntity@@QBEPAVioEntityGroup@@XZ ENDP	; ioGameEntity::GetGroup
_TEXT	ENDS
PUBLIC	??0ioBlockInterplaySpecialState@@QAE@XZ		; ioBlockInterplaySpecialState::ioBlockInterplaySpecialState
EXTRN	??0ioBlockEventListener@@QAE@XZ:PROC		; ioBlockEventListener::ioBlockEventListener
EXTRN	??0ioSpecialStateBase@@QAE@XZ:PROC		; ioSpecialStateBase::ioSpecialStateBase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.h
xdata$x	SEGMENT
__unwindtable$??0ioBlockInterplaySpecialState@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioBlockInterplaySpecialState@@QAE@XZ$0
__ehfuncinfo$??0ioBlockInterplaySpecialState@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ioBlockInterplaySpecialState@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stateclass\ioblockinterplayspecialstate.cpp
xdata$x	ENDS
;	COMDAT ??0ioBlockInterplaySpecialState@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ioBlockInterplaySpecialState@@QAE@XZ PROC		; ioBlockInterplaySpecialState::ioBlockInterplaySpecialState, COMDAT
; _this$ = ecx

; 11   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioBlockInterplaySpecialState@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	e8 00 00 00 00	 call	 ??0ioSpecialStateBase@@QAE@XZ ; ioSpecialStateBase::ioSpecialStateBase
  00016	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001a	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  0001d	e8 00 00 00 00	 call	 ??0ioBlockEventListener@@QAE@XZ ; ioBlockEventListener::ioBlockEventListener
  00022	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioBlockInterplaySpecialState@@6BioSpecialStateBase@@@
  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], OFFSET ??_7ioBlockInterplaySpecialState@@6BioBlockEventListener@@@

; 12   : }

  0002f	8b c6		 mov	 eax, esi
  00031	e8 00 00 00 00	 call	 __EH_epilog3
  00036	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioBlockInterplaySpecialState@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioSpecialStateBase@@UAE@XZ ; ioSpecialStateBase::~ioSpecialStateBase
__ehhandler$??0ioBlockInterplaySpecialState@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioBlockInterplaySpecialState@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioBlockInterplaySpecialState@@QAE@XZ ENDP		; ioBlockInterplaySpecialState::ioBlockInterplaySpecialState
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GioBlockInterplaySpecialState@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioBlockInterplaySpecialState@@UAEPAXI@Z PROC	; ioBlockInterplaySpecialState::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioBlockInterplaySpecialState@@UAE@XZ ; ioBlockInterplaySpecialState::~ioBlockInterplaySpecialState
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioBlockInterplaySpecialState@@UAEPAXI@Z ENDP	; ioBlockInterplaySpecialState::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__real@41f0000000000000
PUBLIC	__real@3f800000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@42c80000
PUBLIC	?ChangeToPre@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::ChangeToPre
EXTRN	__imp_?GetAnimationFullTime@ioEntityGroup@@QAEMH@Z:PROC
EXTRN	__imp_?SetActionAni@ioEntityGroup@@QAE_NHMMMMMM_N0@Z:PROC
EXTRN	__imp_?GetAnimationIdx@ioEntityGroup@@QAEHABVioHashString@@@Z:PROC
EXTRN	__imp_?ClearAllLoopAni@ioEntityGroup@@QAEXM_N@Z:PROC
EXTRN	__imp_?ClearAllActionAni@ioEntityGroup@@QAEXM_N@Z:PROC
EXTRN	__imp_??0ioHashString@@QAE@ABV0@@Z:PROC
EXTRN	__ftol2:PROC
;	COMDAT __real@41f0000000000000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iogameentity.h
CONST	SEGMENT
__real@41f0000000000000 DQ 041f0000000000000r	; 4.29497e+009
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ChangeToPre@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChangeToPre@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z$0
__ehfuncinfo$?ChangeToPre@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ChangeToPre@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stateclass\ioblockinterplayspecialstate.cpp
xdata$x	ENDS
;	COMDAT ?ChangeToPre@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
_TEXT	SEGMENT
_szAniamtion$ = -32					; size = 16
_fAnimationRate$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
tv200 = 8						; size = 4
_iAniID$534376 = 8					; size = 4
_pOwner$ = 8						; size = 4
_pStage$ = 12						; size = 4
?ChangeToPre@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z PROC ; ioBlockInterplaySpecialState::ChangeToPre, COMDAT
; _this$ = ecx

; 146  : {

  00000	6a 14		 push	 20			; 00000014H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?ChangeToPre@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 147  : 	if( m_pCurrInterPlay == NULL )

  0000e	83 7e 48 00	 cmp	 DWORD PTR [esi+72], 0
  00012	75 0c		 jne	 SHORT $LN3@ChangeToPr

; 148  : 	{
; 149  : 		m_State = IPS_END;

  00014	c7 46 0c 04 00
	00 00		 mov	 DWORD PTR [esi+12], 4

; 150  : 		return;

  0001b	e9 26 01 00 00	 jmp	 $LN4@ChangeToPr
$LN3@ChangeToPr:

; 151  : 	}
; 152  : 
; 153  : 	m_State			= IPS_PRE;

  00020	c7 46 0c 01 00
	00 00		 mov	 DWORD PTR [esi+12], 1

; 154  : 	m_dwPreEndTime	= FRAMEGETTIME();

  00027	8d 7e 3c	 lea	 edi, DWORD PTR [esi+60]
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00030	8b c8		 mov	 ecx, eax
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00038	89 07		 mov	 DWORD PTR [edi], eax

; 155  : 
; 156  : 	ioHashString szAniamtion	= m_pCurrInterPlay->m_PreAnimation;

  0003a	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  0003d	83 c0 04	 add	 eax, 4
  00040	50		 push	 eax
  00041	8d 4d e0	 lea	 ecx, DWORD PTR _szAniamtion$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z

; 157  : 	float fAnimationRate		= m_pCurrInterPlay->m_fPreAnimationRate;

  0004a	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  0004d	f3 0f 10 40 44	 movss	 xmm0, DWORD PTR [eax+68]

; 158  : 	m_eInterPlayType			= m_pCurrInterPlay->m_eInterPlayType;

  00052	8b 00		 mov	 eax, DWORD PTR [eax]
  00054	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00058	89 46 38	 mov	 DWORD PTR [esi+56], eax

; 159  : 
; 160  : 	ioEntityGroup *pGrp = pOwner->GetGroup();

  0005b	8b 45 08	 mov	 eax, DWORD PTR _pOwner$[ebp]
  0005e	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  00061	f3 0f 11 45 f0	 movss	 DWORD PTR _fAnimationRate$[ebp], xmm0

; 161  : 	if( pGrp )

  00066	85 f6		 test	 esi, esi
  00068	0f 84 cb 00 00
	00		 je	 $LN1@ChangeToPr

; 162  : 	{
; 163  : 		pGrp->ClearAllActionAni( 100.0f );

  0006e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000
  00076	6a 00		 push	 0
  00078	51		 push	 ecx
  00079	8b ce		 mov	 ecx, esi
  0007b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ClearAllActionAni@ioEntityGroup@@QAEXM_N@Z

; 164  : 		pGrp->ClearAllLoopAni( 100.0f );

  00086	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000
  0008e	6a 00		 push	 0
  00090	51		 push	 ecx
  00091	8b ce		 mov	 ecx, esi
  00093	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ClearAllLoopAni@ioEntityGroup@@QAEXM_N@Z

; 165  : 
; 166  : 		int iAniID = pGrp->GetAnimationIdx( szAniamtion );

  0009e	8d 45 e0	 lea	 eax, DWORD PTR _szAniamtion$[ebp]
  000a1	50		 push	 eax
  000a2	8b ce		 mov	 ecx, esi
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetAnimationIdx@ioEntityGroup@@QAEHABVioHashString@@@Z
  000aa	89 45 08	 mov	 DWORD PTR _iAniID$534376[ebp], eax

; 167  : 		if( iAniID != -1 )

  000ad	83 f8 ff	 cmp	 eax, -1
  000b0	0f 84 83 00 00
	00		 je	 $LN1@ChangeToPr

; 168  : 		{
; 169  : 			pGrp->SetActionAni( iAniID, 100.0f, 100.0f, 1.0f, 1.0f / fAnimationRate, 0.0f, 0, true );

  000b6	0f 57 c0	 xorps	 xmm0, xmm0
  000b9	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  000c1	6a 01		 push	 1
  000c3	6a 01		 push	 1
  000c5	83 ec 18	 sub	 esp, 24			; 00000018H
  000c8	f3 0f 11 44 24
	14		 movss	 DWORD PTR [esp+20], xmm0
  000ce	f3 0f 11 44 24
	10		 movss	 DWORD PTR [esp+16], xmm0
  000d4	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _fAnimationRate$[ebp]
  000d9	0f 5a c0	 cvtps2pd xmm0, xmm0
  000dc	f2 0f 5e c8	 divsd	 xmm1, xmm0
  000e0	8b ce		 mov	 ecx, esi
  000e2	66 0f 5a c1	 cvtpd2ps xmm0, xmm1
  000e6	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  000ec	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000f4	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000fa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000
  00102	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00108	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010d	50		 push	 eax
  0010e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetActionAni@ioEntityGroup@@QAE_NHMMMMMM_N0@Z

; 170  : 			m_dwPreEndTime += pGrp->GetAnimationFullTime(iAniID) * fAnimationRate;

  00114	ff 75 08	 push	 DWORD PTR _iAniID$534376[ebp]
  00117	8b ce		 mov	 ecx, esi
  00119	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetAnimationFullTime@ioEntityGroup@@QAEMH@Z
  0011f	d8 4d f0	 fmul	 DWORD PTR _fAnimationRate$[ebp]
  00122	8b 07		 mov	 eax, DWORD PTR [edi]
  00124	db 07		 fild	 DWORD PTR [edi]
  00126	85 c0		 test	 eax, eax
  00128	79 06		 jns	 SHORT $LN11@ChangeToPr
  0012a	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@41f0000000000000
$LN11@ChangeToPr:
  00130	de c1		 faddp	 ST(1), ST(0)
  00132	e8 00 00 00 00	 call	 __ftol2
  00137	89 07		 mov	 DWORD PTR [edi], eax
$LN1@ChangeToPr:

; 171  : 		}
; 172  : 	}
; 173  : }

  00139	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0013d	8d 4d e0	 lea	 ecx, DWORD PTR _szAniamtion$[ebp]
  00140	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
$LN4@ChangeToPr:
  00146	e8 00 00 00 00	 call	 __EH_epilog3
  0014b	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChangeToPre@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _szAniamtion$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?ChangeToPre@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ChangeToPre@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ChangeToPre@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ENDP ; ioBlockInterplaySpecialState::ChangeToPre
PUBLIC	__real@41200000
PUBLIC	?ChangeToLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::ChangeToLoop
EXTRN	__imp_?SetLoopAni@ioEntityGroup@@QAE_NHMMMM@Z:PROC
;	COMDAT __real@41200000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iogameentity.h
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ChangeToLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChangeToLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z$0
__ehfuncinfo$?ChangeToLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ChangeToLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stateclass\ioblockinterplayspecialstate.cpp
xdata$x	ENDS
;	COMDAT ?ChangeToLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
_TEXT	SEGMENT
_szAniamtion$ = -32					; size = 16
_fAnimationRate$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pOwner$ = 8						; size = 4
_pStage$ = 12						; size = 4
?ChangeToLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z PROC ; ioBlockInterplaySpecialState::ChangeToLoop, COMDAT
; _this$ = ecx

; 199  : {

  00000	6a 14		 push	 20			; 00000014H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?ChangeToLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 200  : 	if( m_pCurrInterPlay == NULL )

  0000e	83 7e 48 00	 cmp	 DWORD PTR [esi+72], 0
  00012	75 0c		 jne	 SHORT $LN3@ChangeToLo

; 201  : 	{
; 202  : 		m_State = IPS_END;

  00014	c7 46 0c 04 00
	00 00		 mov	 DWORD PTR [esi+12], 4

; 203  : 		return;

  0001b	e9 e5 00 00 00	 jmp	 $LN4@ChangeToLo
$LN3@ChangeToLo:

; 204  : 	}
; 205  : 
; 206  : 	m_State			= IPS_LOOP;

  00020	c7 46 0c 02 00
	00 00		 mov	 DWORD PTR [esi+12], 2

; 207  : 	m_dwPreEndTime	= FRAMEGETTIME();

  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  0002d	8b c8		 mov	 ecx, eax
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00035	89 46 3c	 mov	 DWORD PTR [esi+60], eax

; 208  : 
; 209  : 	ioHashString szAniamtion	= m_pCurrInterPlay->m_LoopAnimation;

  00038	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  0003b	83 c0 24	 add	 eax, 36			; 00000024H
  0003e	50		 push	 eax
  0003f	8d 4d e0	 lea	 ecx, DWORD PTR _szAniamtion$[ebp]
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z

; 210  : 	float fAnimationRate		= m_pCurrInterPlay->m_fLoopAnimationRate;

  00048	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  0004b	f3 0f 10 40 4c	 movss	 xmm0, DWORD PTR [eax+76]

; 211  : 
; 212  : 	ioEntityGroup *pGrp = pOwner->GetGroup();

  00050	8b 45 08	 mov	 eax, DWORD PTR _pOwner$[ebp]
  00053	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  00056	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0005a	f3 0f 11 45 f0	 movss	 DWORD PTR _fAnimationRate$[ebp], xmm0

; 213  : 	if( pGrp )

  0005f	85 f6		 test	 esi, esi
  00061	0f 84 91 00 00
	00		 je	 $LN1@ChangeToLo

; 214  : 	{
; 215  : 		int iAniID = pGrp->GetAnimationIdx( szAniamtion );

  00067	8d 45 e0	 lea	 eax, DWORD PTR _szAniamtion$[ebp]
  0006a	50		 push	 eax
  0006b	8b ce		 mov	 ecx, esi
  0006d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetAnimationIdx@ioEntityGroup@@QAEHABVioHashString@@@Z
  00073	8b f8		 mov	 edi, eax

; 216  : 		if( iAniID != -1 )

  00075	83 ff ff	 cmp	 edi, -1
  00078	74 7e		 je	 SHORT $LN1@ChangeToLo

; 217  : 		{
; 218  : 			pGrp->ClearAllActionAni( 10.0f, true );

  0007a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  00082	6a 01		 push	 1
  00084	51		 push	 ecx
  00085	8b ce		 mov	 ecx, esi
  00087	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ClearAllActionAni@ioEntityGroup@@QAEXM_N@Z

; 219  : 			pGrp->ClearAllLoopAni( 10.0f, true );

  00092	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  0009a	6a 01		 push	 1
  0009c	51		 push	 ecx
  0009d	8b ce		 mov	 ecx, esi
  0009f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ClearAllLoopAni@ioEntityGroup@@QAEXM_N@Z

; 220  : 			pGrp->SetLoopAni( iAniID, 10.0f, 1.0f, 1.0f/fAnimationRate );

  000aa	0f 57 c0	 xorps	 xmm0, xmm0
  000ad	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  000b5	83 ec 10	 sub	 esp, 16			; 00000010H
  000b8	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  000be	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _fAnimationRate$[ebp]
  000c3	0f 5a c0	 cvtps2pd xmm0, xmm0
  000c6	f2 0f 5e c8	 divsd	 xmm1, xmm0
  000ca	8b ce		 mov	 ecx, esi
  000cc	66 0f 5a c1	 cvtpd2ps xmm0, xmm1
  000d0	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000d6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000de	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000e4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  000ec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f1	57		 push	 edi
  000f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetLoopAni@ioEntityGroup@@QAE_NHMMMM@Z
$LN1@ChangeToLo:

; 221  : 		}
; 222  : 	}
; 223  : }

  000f8	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000fc	8d 4d e0	 lea	 ecx, DWORD PTR _szAniamtion$[ebp]
  000ff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
$LN4@ChangeToLo:
  00105	e8 00 00 00 00	 call	 __EH_epilog3
  0010a	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChangeToLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _szAniamtion$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?ChangeToLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ChangeToLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ChangeToLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ENDP ; ioBlockInterplaySpecialState::ChangeToLoop
PUBLIC	?ChangeToAction@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::ChangeToAction
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iogameentity.h
xdata$x	SEGMENT
__unwindtable$?ChangeToAction@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChangeToAction@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z$0
__ehfuncinfo$?ChangeToAction@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ChangeToAction@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stateclass\ioblockinterplayspecialstate.cpp
xdata$x	ENDS
;	COMDAT ?ChangeToAction@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
_TEXT	SEGMENT
_szAniamtion$ = -32					; size = 16
_fAnimationRate$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
tv194 = 8						; size = 4
_pOwner$ = 8						; size = 4
_pStage$ = 12						; size = 4
?ChangeToAction@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z PROC ; ioBlockInterplaySpecialState::ChangeToAction, COMDAT
; _this$ = ecx

; 234  : {

  00000	6a 14		 push	 20			; 00000014H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?ChangeToAction@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 235  : 	if( m_pCurrInterPlay == NULL )

  0000e	33 db		 xor	 ebx, ebx
  00010	39 5e 48	 cmp	 DWORD PTR [esi+72], ebx
  00013	75 0c		 jne	 SHORT $LN3@ChangeToAc

; 236  : 	{
; 237  : 		m_State = IPS_END;

  00015	c7 46 0c 04 00
	00 00		 mov	 DWORD PTR [esi+12], 4

; 238  : 		return;

  0001c	e9 1b 01 00 00	 jmp	 $LN4@ChangeToAc
$LN3@ChangeToAc:

; 239  : 	}
; 240  : 
; 241  : 	m_State				= IPS_ACTION;

  00021	c7 46 0c 03 00
	00 00		 mov	 DWORD PTR [esi+12], 3

; 242  : 	m_dwActionEndTime	= FRAMEGETTIME();

  00028	8d 7e 40	 lea	 edi, DWORD PTR [esi+64]
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00031	8b c8		 mov	 ecx, eax
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00039	89 07		 mov	 DWORD PTR [edi], eax

; 243  : 
; 244  : 	ioHashString szAniamtion	= m_pCurrInterPlay->m_ActionAnimation;

  0003b	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  0003e	83 c0 14	 add	 eax, 20			; 00000014H
  00041	50		 push	 eax
  00042	8d 4d e0	 lea	 ecx, DWORD PTR _szAniamtion$[ebp]
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z

; 245  : 	float fAnimationRate		= m_pCurrInterPlay->m_fActionAnimationRate;

  0004b	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  0004e	f3 0f 10 40 48	 movss	 xmm0, DWORD PTR [eax+72]

; 246  : 	ioEntityGroup *pGrp = pOwner->GetGroup();

  00053	8b 45 08	 mov	 eax, DWORD PTR _pOwner$[ebp]
  00056	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  00059	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  0005c	f3 0f 11 45 f0	 movss	 DWORD PTR _fAnimationRate$[ebp], xmm0

; 247  : 	if( pGrp )

  00061	3b f3		 cmp	 esi, ebx
  00063	0f 84 c6 00 00
	00		 je	 $LN1@ChangeToAc

; 248  : 	{
; 249  : 		pGrp->ClearAllActionAni( 100.0f );

  00069	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000
  00071	53		 push	 ebx
  00072	51		 push	 ecx
  00073	8b ce		 mov	 ecx, esi
  00075	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ClearAllActionAni@ioEntityGroup@@QAEXM_N@Z

; 250  : 		pGrp->ClearAllLoopAni( 100.0f );

  00080	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000
  00088	53		 push	 ebx
  00089	51		 push	 ecx
  0008a	8b ce		 mov	 ecx, esi
  0008c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ClearAllLoopAni@ioEntityGroup@@QAEXM_N@Z

; 251  : 
; 252  : 		int iAniID = pGrp->GetAnimationIdx( szAniamtion );

  00097	8d 45 e0	 lea	 eax, DWORD PTR _szAniamtion$[ebp]
  0009a	50		 push	 eax
  0009b	8b ce		 mov	 ecx, esi
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetAnimationIdx@ioEntityGroup@@QAEHABVioHashString@@@Z
  000a3	8b d8		 mov	 ebx, eax

; 253  : 		if( iAniID != -1 )

  000a5	83 fb ff	 cmp	 ebx, -1
  000a8	0f 84 81 00 00
	00		 je	 $LN1@ChangeToAc

; 254  : 		{
; 255  : 			pGrp->SetActionAni( iAniID, 100.0f, 100.0f, 1.0f, 1.0f / fAnimationRate, 0.0f, 0, true );

  000ae	0f 57 c0	 xorps	 xmm0, xmm0
  000b1	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  000b9	6a 01		 push	 1
  000bb	6a 01		 push	 1
  000bd	83 ec 18	 sub	 esp, 24			; 00000018H
  000c0	f3 0f 11 44 24
	14		 movss	 DWORD PTR [esp+20], xmm0
  000c6	f3 0f 11 44 24
	10		 movss	 DWORD PTR [esp+16], xmm0
  000cc	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _fAnimationRate$[ebp]
  000d1	0f 5a c0	 cvtps2pd xmm0, xmm0
  000d4	f2 0f 5e c8	 divsd	 xmm1, xmm0
  000d8	8b ce		 mov	 ecx, esi
  000da	66 0f 5a c1	 cvtpd2ps xmm0, xmm1
  000de	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  000e4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000ec	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000f2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000
  000fa	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00100	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00105	53		 push	 ebx
  00106	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetActionAni@ioEntityGroup@@QAE_NHMMMMMM_N0@Z

; 256  : 			m_dwActionEndTime += pGrp->GetAnimationFullTime(iAniID) * fAnimationRate;

  0010c	53		 push	 ebx
  0010d	8b ce		 mov	 ecx, esi
  0010f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetAnimationFullTime@ioEntityGroup@@QAEMH@Z
  00115	d8 4d f0	 fmul	 DWORD PTR _fAnimationRate$[ebp]
  00118	8b 07		 mov	 eax, DWORD PTR [edi]
  0011a	db 07		 fild	 DWORD PTR [edi]
  0011c	85 c0		 test	 eax, eax
  0011e	79 06		 jns	 SHORT $LN11@ChangeToAc
  00120	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@41f0000000000000
$LN11@ChangeToAc:
  00126	de c1		 faddp	 ST(1), ST(0)
  00128	e8 00 00 00 00	 call	 __ftol2
  0012d	89 07		 mov	 DWORD PTR [edi], eax
$LN1@ChangeToAc:

; 257  : 		}
; 258  : 	}
; 259  : }

  0012f	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00133	8d 4d e0	 lea	 ecx, DWORD PTR _szAniamtion$[ebp]
  00136	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
$LN4@ChangeToAc:
  0013c	e8 00 00 00 00	 call	 __EH_epilog3
  00141	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChangeToAction@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _szAniamtion$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?ChangeToAction@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ChangeToAction@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ChangeToAction@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ENDP ; ioBlockInterplaySpecialState::ChangeToAction
PUBLIC	__$ArrayPad$
PUBLIC	?ChangeToEnd@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::ChangeToEnd
EXTRN	??1SP2Packet@@UAE@XZ:PROC			; SP2Packet::~SP2Packet
EXTRN	?SendToAllPlayingUser@P2PNetwork@@YAXAAVSP2Packet@@PAVioBaseChar@@@Z:PROC ; P2PNetwork::SendToAllPlayingUser
EXTRN	??6SP2Packet@@QAEAAV0@E@Z:PROC			; SP2Packet::operator<<
EXTRN	??6SP2Packet@@QAEAAV0@ABVioHashString@@@Z:PROC	; SP2Packet::operator<<
EXTRN	??0SP2Packet@@QAE@K@Z:PROC			; SP2Packet::SP2Packet
EXTRN	___security_cookie:DWORD
EXTRN	__chkstk:PROC
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iobasechar.h
xdata$x	SEGMENT
__unwindtable$?ChangeToEnd@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChangeToEnd@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ChangeToEnd@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z$1
__ehfuncinfo$?ChangeToEnd@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?ChangeToEnd@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stateclass\ioblockinterplayspecialstate.cpp
xdata$x	ENDS
;	COMDAT ?ChangeToEnd@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
_TEXT	SEGMENT
_szAniamtion$ = -32832					; size = 16
_fAnimationRate$ = -32816				; size = 4
tv204 = -32812						; size = 4
_iAniID$534437 = -32812					; size = 4
_kPacket$534440 = -32808				; size = 32792
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pOwner$ = 8						; size = 4
_pStage$ = 12						; size = 4
?ChangeToEnd@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z PROC ; ioBlockInterplaySpecialState::ChangeToEnd, COMDAT
; _this$ = ecx

; 270  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ChangeToEnd@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 34 80 00 00	 mov	 eax, 32820		; 00008034H
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	53		 push	 ebx
  00026	56		 push	 esi
  00027	57		 push	 edi
  00028	50		 push	 eax
  00029	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00032	8b 5d 08	 mov	 ebx, DWORD PTR _pOwner$[ebp]
  00035	8b f1		 mov	 esi, ecx

; 271  : 	m_State				= IPS_END;

  00037	c7 46 0c 04 00
	00 00		 mov	 DWORD PTR [esi+12], 4

; 272  : 	m_dwEndStateEndTime	= FRAMEGETTIME();

  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00044	8b c8		 mov	 ecx, eax
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  0004c	89 46 44	 mov	 DWORD PTR [esi+68], eax

; 273  : 	
; 274  : 	if( m_pCurrInterPlay == NULL )

  0004f	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  00052	85 c0		 test	 eax, eax
  00054	0f 84 7e 01 00
	00		 je	 $LN5@ChangeToEn

; 275  : 		return;
; 276  : 
; 277  : 	ioHashString szAniamtion	= m_pCurrInterPlay->m_EndAnimation;

  0005a	83 c0 34	 add	 eax, 52			; 00000034H
  0005d	50		 push	 eax
  0005e	8d 8d c0 7f ff
	ff		 lea	 ecx, DWORD PTR _szAniamtion$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z

; 278  : 	float fAnimationRate		= m_pCurrInterPlay->m_fEndAnimationRate;

  0006a	8b 46 48	 mov	 eax, DWORD PTR [esi+72]

; 279  : 	ioEntityGroup *pGrp = pOwner->GetGroup();

  0006d	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  00070	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00074	f3 0f 10 40 50	 movss	 xmm0, DWORD PTR [eax+80]
  00079	f3 0f 11 85 d0
	7f ff ff	 movss	 DWORD PTR _fAnimationRate$[ebp], xmm0

; 280  : 	if( pGrp )

  00081	85 ff		 test	 edi, edi
  00083	0f 84 dd 00 00
	00		 je	 $LN2@ChangeToEn

; 281  : 	{
; 282  : 		pGrp->ClearAllActionAni( 100.0f );

  00089	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000
  00091	6a 00		 push	 0
  00093	51		 push	 ecx
  00094	8b cf		 mov	 ecx, edi
  00096	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ClearAllActionAni@ioEntityGroup@@QAEXM_N@Z

; 283  : 		pGrp->ClearAllLoopAni( 100.0f );

  000a1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000
  000a9	6a 00		 push	 0
  000ab	51		 push	 ecx
  000ac	8b cf		 mov	 ecx, edi
  000ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ClearAllLoopAni@ioEntityGroup@@QAEXM_N@Z

; 284  : 
; 285  : 		int iAniID = pGrp->GetAnimationIdx( szAniamtion );

  000b9	8d 85 c0 7f ff
	ff		 lea	 eax, DWORD PTR _szAniamtion$[ebp]
  000bf	50		 push	 eax
  000c0	8b cf		 mov	 ecx, edi
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetAnimationIdx@ioEntityGroup@@QAEHABVioHashString@@@Z
  000c8	89 85 d4 7f ff
	ff		 mov	 DWORD PTR _iAniID$534437[ebp], eax

; 286  : 		if( iAniID != -1 )

  000ce	83 f8 ff	 cmp	 eax, -1
  000d1	0f 84 8f 00 00
	00		 je	 $LN2@ChangeToEn

; 287  : 		{
; 288  : 			pGrp->SetActionAni( iAniID, 100.0f, 100.0f, 1.0f, 1.0f / fAnimationRate, 0.0f, 0, true );

  000d7	0f 57 c0	 xorps	 xmm0, xmm0
  000da	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  000e2	6a 01		 push	 1
  000e4	6a 01		 push	 1
  000e6	83 ec 18	 sub	 esp, 24			; 00000018H
  000e9	f3 0f 11 44 24
	14		 movss	 DWORD PTR [esp+20], xmm0
  000ef	f3 0f 11 44 24
	10		 movss	 DWORD PTR [esp+16], xmm0
  000f5	f3 0f 10 85 d0
	7f ff ff	 movss	 xmm0, DWORD PTR _fAnimationRate$[ebp]
  000fd	0f 5a c0	 cvtps2pd xmm0, xmm0
  00100	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00104	8b cf		 mov	 ecx, edi
  00106	66 0f 5a c1	 cvtpd2ps xmm0, xmm1
  0010a	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00110	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00118	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0011e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000
  00126	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0012c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00131	50		 push	 eax
  00132	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetActionAni@ioEntityGroup@@QAE_NHMMMMMM_N0@Z

; 289  : 			m_dwEndStateEndTime += pGrp->GetAnimationFullTime(iAniID) * fAnimationRate;

  00138	ff b5 d4 7f ff
	ff		 push	 DWORD PTR _iAniID$534437[ebp]
  0013e	8b cf		 mov	 ecx, edi
  00140	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetAnimationFullTime@ioEntityGroup@@QAEMH@Z
  00146	d8 8d d0 7f ff
	ff		 fmul	 DWORD PTR _fAnimationRate$[ebp]
  0014c	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  0014f	db 46 44	 fild	 DWORD PTR [esi+68]
  00152	85 c0		 test	 eax, eax
  00154	79 06		 jns	 SHORT $LN14@ChangeToEn
  00156	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@41f0000000000000
$LN14@ChangeToEn:
  0015c	de c1		 faddp	 ST(1), ST(0)
  0015e	e8 00 00 00 00	 call	 __ftol2
  00163	89 46 44	 mov	 DWORD PTR [esi+68], eax
$LN2@ChangeToEn:

; 290  : 		}
; 291  : 	}
; 292  : 
; 293  : 	if( pOwner->IsNeedSendNetwork() )

  00166	8b 03		 mov	 eax, DWORD PTR [ebx]
  00168	8b cb		 mov	 ecx, ebx
  0016a	ff 90 04 01 00
	00		 call	 DWORD PTR [eax+260]
  00170	84 c0		 test	 al, al
  00172	74 54		 je	 SHORT $LN1@ChangeToEn

; 294  : 	{
; 295  : 		SP2Packet kPacket( CUPK_SPECIAL_STATE_SYNC );

  00174	68 62 42 00 00	 push	 16994			; 00004262H
  00179	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$534440[ebp]
  0017f	e8 00 00 00 00	 call	 ??0SP2Packet@@QAE@K@Z	; SP2Packet::SP2Packet

; 296  : 		kPacket << m_pOwner->GetCharName();

  00184	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00187	05 d4 02 00 00	 add	 eax, 724		; 000002d4H
  0018c	50		 push	 eax
  0018d	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$534440[ebp]
  00193	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00197	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@ABVioHashString@@@Z ; SP2Packet::operator<<

; 297  : 		kPacket << (byte)SS_END;

  0019c	6a 01		 push	 1
  0019e	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$534440[ebp]
  001a4	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@E@Z ; SP2Packet::operator<<

; 298  : 		P2PNetwork::SendToAllPlayingUser( kPacket );

  001a9	8d 85 d8 7f ff
	ff		 lea	 eax, DWORD PTR _kPacket$534440[ebp]
  001af	6a 00		 push	 0
  001b1	50		 push	 eax
  001b2	e8 00 00 00 00	 call	 ?SendToAllPlayingUser@P2PNetwork@@YAXAAVSP2Packet@@PAVioBaseChar@@@Z ; P2PNetwork::SendToAllPlayingUser
  001b7	59		 pop	 ecx
  001b8	59		 pop	 ecx

; 299  : 	}

  001b9	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$534440[ebp]
  001bf	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001c3	e8 00 00 00 00	 call	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
$LN1@ChangeToEn:

; 300  : }

  001c8	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  001cc	8d 8d c0 7f ff
	ff		 lea	 ecx, DWORD PTR _szAniamtion$[ebp]
  001d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
$LN5@ChangeToEn:
  001d8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001db	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001e2	59		 pop	 ecx
  001e3	5f		 pop	 edi
  001e4	5e		 pop	 esi
  001e5	5b		 pop	 ebx
  001e6	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001e9	33 cd		 xor	 ecx, ebp
  001eb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f0	c9		 leave
  001f1	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChangeToEnd@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z$0:
  00000	8d 8d c0 7f ff
	ff		 lea	 ecx, DWORD PTR _szAniamtion$[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?ChangeToEnd@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z$1:
  0000c	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$534440[ebp]
  00012	e9 00 00 00 00	 jmp	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
__ehhandler$?ChangeToEnd@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 8a bc 7f ff
	ff		 mov	 ecx, DWORD PTR [edx-32836]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002e	33 c8		 xor	 ecx, eax
  00030	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00035	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ChangeToEnd@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
  0003a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ChangeToEnd@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ENDP ; ioBlockInterplaySpecialState::ChangeToEnd
PUBLIC	_nCollIndex$GSCopy$
PUBLIC	_nUniqueIndex$GSCopy$
PUBLIC	_qtRot$GSCopy$
PUBLIC	_vPos$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?Start@ioBlockInterplaySpecialState@@QAEXPAVioBaseChar@@ABUD3DXVECTOR3@@ABUD3DXQUATERNION@@_JH@Z ; ioBlockInterplaySpecialState::Start
EXTRN	?SetTargetRot@ioBaseChar@@QAEXABUD3DXQUATERNION@@@Z:PROC ; ioBaseChar::SetTargetRot
EXTRN	_D3DXQuaternionRotationYawPitchRoll@16:PROC
EXTRN	?EndUnLimitedEmoticon@ioBaseGUISupport@@QAEXXZ:PROC ; ioBaseGUISupport::EndUnLimitedEmoticon
EXTRN	?GetInterPlayInfo@ioBlockProperty@@QBEPBUInterPlayInfo@1@H@Z:PROC ; ioBlockProperty::GetInterPlayInfo
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iobasechar.h
xdata$x	SEGMENT
__unwindtable$?Start@ioBlockInterplaySpecialState@@QAEXPAVioBaseChar@@ABUD3DXVECTOR3@@ABUD3DXQUATERNION@@_JH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Start@ioBlockInterplaySpecialState@@QAEXPAVioBaseChar@@ABUD3DXVECTOR3@@ABUD3DXQUATERNION@@_JH@Z$0
__ehfuncinfo$?Start@ioBlockInterplaySpecialState@@QAEXPAVioBaseChar@@ABUD3DXVECTOR3@@ABUD3DXQUATERNION@@_JH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Start@ioBlockInterplaySpecialState@@QAEXPAVioBaseChar@@ABUD3DXVECTOR3@@ABUD3DXQUATERNION@@_JH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stateclass\ioblockinterplayspecialstate.cpp
xdata$x	ENDS
;	COMDAT ?Start@ioBlockInterplaySpecialState@@QAEXPAVioBaseChar@@ABUD3DXVECTOR3@@ABUD3DXQUATERNION@@_JH@Z
_TEXT	SEGMENT
_qtCharRot$ = -32868					; size = 16
$T535123 = -32852					; size = 16
_nUniqueIndex$GSCopy$ = -32836				; size = 8
_vPos$GSCopy$ = -32828					; size = 4
_pInfo$ = -32824					; size = 4
_pBlock$ = -32820					; size = 4
_qtRot$GSCopy$ = -32816					; size = 4
_nCollIndex$GSCopy$ = -32812				; size = 4
_kPacket$534356 = -32808				; size = 32792
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pOwner$ = 8						; size = 4
_vPos$ = 12						; size = 4
_qtRot$ = 16						; size = 4
_nUniqueIndex$ = 20					; size = 8
_nCollIndex$ = 28					; size = 4
?Start@ioBlockInterplaySpecialState@@QAEXPAVioBaseChar@@ABUD3DXVECTOR3@@ABUD3DXQUATERNION@@_JH@Z PROC ; ioBlockInterplaySpecialState::Start, COMDAT
; _this$ = ecx

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Start@ioBlockInterplaySpecialState@@QAEXPAVioBaseChar@@ABUD3DXVECTOR3@@ABUD3DXQUATERNION@@_JH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 58 80 00 00	 mov	 eax, 32856		; 00008058H
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	53		 push	 ebx
  00026	56		 push	 esi
  00027	57		 push	 edi
  00028	50		 push	 eax
  00029	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00032	8b 45 0c	 mov	 eax, DWORD PTR _vPos$[ebp]
  00035	8b 5d 14	 mov	 ebx, DWORD PTR _nUniqueIndex$[ebp]
  00038	8b 75 08	 mov	 esi, DWORD PTR _pOwner$[ebp]

; 94   : 	ioBlock* pBlock = g_BlockManager.GetBlock( nUniqueIndex );

  0003b	89 85 c4 7f ff
	ff		 mov	 DWORD PTR _vPos$GSCopy$[ebp], eax
  00041	8b 45 10	 mov	 eax, DWORD PTR _qtRot$[ebp]
  00044	89 85 d0 7f ff
	ff		 mov	 DWORD PTR _qtRot$GSCopy$[ebp], eax
  0004a	8b 45 18	 mov	 eax, DWORD PTR _nUniqueIndex$[ebp+4]
  0004d	8b f9		 mov	 edi, ecx
  0004f	8b 4d 1c	 mov	 ecx, DWORD PTR _nCollIndex$[ebp]
  00052	50		 push	 eax
  00053	53		 push	 ebx
  00054	89 85 c0 7f ff
	ff		 mov	 DWORD PTR _nUniqueIndex$GSCopy$[ebp+4], eax
  0005a	89 8d d4 7f ff
	ff		 mov	 DWORD PTR _nCollIndex$GSCopy$[ebp], ecx
  00060	e8 00 00 00 00	 call	 ?GetSingleton@ioBlockManager@@SAAAV1@XZ ; ioBlockManager::GetSingleton
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ?GetBlock@ioBlockManager@@QAEPAVioBlock@@_J@Z ; ioBlockManager::GetBlock
  0006c	89 85 cc 7f ff
	ff		 mov	 DWORD PTR _pBlock$[ebp], eax

; 95   : 	if( pBlock == NULL || !pBlock->GetProperty() )

  00072	85 c0		 test	 eax, eax
  00074	0f 84 a8 01 00
	00		 je	 $LN3@Start
  0007a	8b 10		 mov	 edx, DWORD PTR [eax]
  0007c	8b c8		 mov	 ecx, eax
  0007e	ff 92 e4 00 00
	00		 call	 DWORD PTR [edx+228]
  00084	85 c0		 test	 eax, eax
  00086	0f 84 96 01 00
	00		 je	 $LN3@Start

; 98   : 		return;
; 99   : 	}
; 100  : 
; 101  : 	const ioBlockProperty::InterPlayInfo* pInfo = pBlock->GetProperty()->GetInterPlayInfo( nCollIndex );

  0008c	8b 8d cc 7f ff
	ff		 mov	 ecx, DWORD PTR _pBlock$[ebp]
  00092	ff b5 d4 7f ff
	ff		 push	 DWORD PTR _nCollIndex$GSCopy$[ebp]
  00098	8b 01		 mov	 eax, DWORD PTR [ecx]
  0009a	ff 90 e4 00 00
	00		 call	 DWORD PTR [eax+228]
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ?GetInterPlayInfo@ioBlockProperty@@QBEPBUInterPlayInfo@1@H@Z ; ioBlockProperty::GetInterPlayInfo
  000a7	89 85 c8 7f ff
	ff		 mov	 DWORD PTR _pInfo$[ebp], eax

; 102  : 	if( pInfo == NULL )

  000ad	85 c0		 test	 eax, eax

; 103  : 	{
; 104  : 		m_State = IPS_END;
; 105  : 		return;

  000af	0f 84 6d 01 00
	00		 je	 $LN3@Start

; 106  : 	}
; 107  : 
; 108  : 	pOwner->EndUnLimitedEmoticon();

  000b5	8d 8e cc 01 00
	00		 lea	 ecx, DWORD PTR [esi+460]
  000bb	e8 00 00 00 00	 call	 ?EndUnLimitedEmoticon@ioBaseGUISupport@@QAEXXZ ; ioBaseGUISupport::EndUnLimitedEmoticon

; 109  : 	m_nBlockUniqueIndex = nUniqueIndex;

  000c0	8b 85 c0 7f ff
	ff		 mov	 eax, DWORD PTR _nUniqueIndex$GSCopy$[ebp+4]

; 110  : 	m_nCollIndex		= nCollIndex;
; 111  : 
; 112  : 	pBlock->SetInterPlayChar( pOwner->GetCharName() );

  000c6	8b 8d cc 7f ff
	ff		 mov	 ecx, DWORD PTR _pBlock$[ebp]
  000cc	89 47 14	 mov	 DWORD PTR [edi+20], eax
  000cf	8b 85 d4 7f ff
	ff		 mov	 eax, DWORD PTR _nCollIndex$GSCopy$[ebp]
  000d5	89 47 18	 mov	 DWORD PTR [edi+24], eax
  000d8	8d 86 d4 02 00
	00		 lea	 eax, DWORD PTR [esi+724]
  000de	50		 push	 eax
  000df	81 c1 dc 02 00
	00		 add	 ecx, 732		; 000002dcH
  000e5	89 5f 10	 mov	 DWORD PTR [edi+16], ebx
  000e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z

; 113  : 
; 114  : 	D3DXQUATERNION qtCharRot;
; 115  : 	D3DXQuaternionRotationYawPitchRoll( &qtCharRot, DEGtoRAD( pInfo->m_fCharRotate ), 0.0f, 0.0f );

  000ee	0f 57 c0	 xorps	 xmm0, xmm0
  000f1	8b 85 c8 7f ff
	ff		 mov	 eax, DWORD PTR _pInfo$[ebp]
  000f7	83 ec 0c	 sub	 esp, 12			; 0000000cH
  000fa	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00100	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00106	f3 0f 10 40 64	 movss	 xmm0, DWORD PTR [eax+100]
  0010b	0f 5a c0	 cvtps2pd xmm0, xmm0
  0010e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f91df46a2526c7a
  00116	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0011a	8d 85 9c 7f ff
	ff		 lea	 eax, DWORD PTR _qtCharRot$[ebp]
  00120	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00125	50		 push	 eax
  00126	e8 00 00 00 00	 call	 _D3DXQuaternionRotationYawPitchRoll@16

; 116  : 
; 117  : 	m_pCurrInterPlay = pInfo;

  0012b	8b 85 c8 7f ff
	ff		 mov	 eax, DWORD PTR _pInfo$[ebp]

; 118  : 	pOwner->SetWorldPosition( vPos );

  00131	ff b5 c4 7f ff
	ff		 push	 DWORD PTR _vPos$GSCopy$[ebp]
  00137	89 47 48	 mov	 DWORD PTR [edi+72], eax
  0013a	8b 06		 mov	 eax, DWORD PTR [esi]
  0013c	8b ce		 mov	 ecx, esi
  0013e	ff 50 44	 call	 DWORD PTR [eax+68]

; 119  : 	pOwner->SetTargetRot( qtRot * qtCharRot );

  00141	8d 85 9c 7f ff
	ff		 lea	 eax, DWORD PTR _qtCharRot$[ebp]
  00147	50		 push	 eax
  00148	ff b5 d0 7f ff
	ff		 push	 DWORD PTR _qtRot$GSCopy$[ebp]
  0014e	8d 85 ac 7f ff
	ff		 lea	 eax, DWORD PTR $T535123[ebp]
  00154	50		 push	 eax
  00155	e8 00 00 00 00	 call	 _D3DXQuaternionMultiply@12
  0015a	8d 85 ac 7f ff
	ff		 lea	 eax, DWORD PTR $T535123[ebp]
  00160	50		 push	 eax
  00161	8b ce		 mov	 ecx, esi
  00163	e8 00 00 00 00	 call	 ?SetTargetRot@ioBaseChar@@QAEXABUD3DXQUATERNION@@@Z ; ioBaseChar::SetTargetRot

; 120  : 	ChangeToPre( pOwner, pOwner->GetCreator() );

  00168	ff b6 44 03 00
	00		 push	 DWORD PTR [esi+836]
  0016e	8b cf		 mov	 ecx, edi
  00170	56		 push	 esi
  00171	e8 00 00 00 00	 call	 ?ChangeToPre@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::ChangeToPre

; 121  : 	
; 122  : 	if( pOwner->IsNeedSendNetwork() )

  00176	8b 06		 mov	 eax, DWORD PTR [esi]
  00178	8b ce		 mov	 ecx, esi
  0017a	ff 90 04 01 00
	00		 call	 DWORD PTR [eax+260]
  00180	84 c0		 test	 al, al
  00182	0f 84 a1 00 00
	00		 je	 $LN1@Start

; 123  : 	{
; 124  : 		SP2Packet kPacket( CUPK_SPECIAL_STATE_SYNC );

  00188	68 62 42 00 00	 push	 16994			; 00004262H
  0018d	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$534356[ebp]
  00193	e8 00 00 00 00	 call	 ??0SP2Packet@@QAE@K@Z	; SP2Packet::SP2Packet

; 125  : 		kPacket << m_pOwner->GetCharName();

  00198	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0019b	05 d4 02 00 00	 add	 eax, 724		; 000002d4H
  001a0	33 f6		 xor	 esi, esi
  001a2	50		 push	 eax
  001a3	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$534356[ebp]
  001a9	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
  001ac	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@ABVioHashString@@@Z ; SP2Packet::operator<<

; 126  : 		kPacket << (byte)SS_PRE;

  001b1	56		 push	 esi
  001b2	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$534356[ebp]
  001b8	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@E@Z ; SP2Packet::operator<<

; 127  : 		kPacket	<< vPos;

  001bd	ff b5 c4 7f ff
	ff		 push	 DWORD PTR _vPos$GSCopy$[ebp]
  001c3	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$534356[ebp]
  001c9	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@ABUD3DXVECTOR3@@@Z ; SP2Packet::operator<<

; 128  : 		kPacket	<< qtRot;

  001ce	ff b5 d0 7f ff
	ff		 push	 DWORD PTR _qtRot$GSCopy$[ebp]
  001d4	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$534356[ebp]
  001da	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@ABUD3DXQUATERNION@@@Z ; SP2Packet::operator<<

; 129  : 		kPacket << nUniqueIndex;

  001df	ff b5 c0 7f ff
	ff		 push	 DWORD PTR _nUniqueIndex$GSCopy$[ebp+4]
  001e5	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$534356[ebp]
  001eb	53		 push	 ebx
  001ec	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@_J@Z ; SP2Packet::operator<<

; 130  : 		kPacket << nCollIndex;

  001f1	ff b5 d4 7f ff
	ff		 push	 DWORD PTR _nCollIndex$GSCopy$[ebp]
  001f7	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$534356[ebp]
  001fd	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@H@Z ; SP2Packet::operator<<

; 131  : 		P2PNetwork::SendToAllPlayingUser( kPacket );

  00202	8d 85 d8 7f ff
	ff		 lea	 eax, DWORD PTR _kPacket$534356[ebp]
  00208	56		 push	 esi
  00209	50		 push	 eax
  0020a	e8 00 00 00 00	 call	 ?SendToAllPlayingUser@P2PNetwork@@YAXAAVSP2Packet@@PAVioBaseChar@@@Z ; P2PNetwork::SendToAllPlayingUser

; 132  : 	}

  0020f	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00213	59		 pop	 ecx
  00214	59		 pop	 ecx
  00215	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$534356[ebp]
  0021b	e8 00 00 00 00	 call	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
  00220	eb 07		 jmp	 SHORT $LN1@Start
$LN3@Start:

; 96   : 	{
; 97   : 		m_State = IPS_END;

  00222	c7 47 0c 04 00
	00 00		 mov	 DWORD PTR [edi+12], 4
$LN1@Start:

; 133  : }

  00229	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0022c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00233	59		 pop	 ecx
  00234	5f		 pop	 edi
  00235	5e		 pop	 esi
  00236	5b		 pop	 ebx
  00237	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0023a	33 cd		 xor	 ecx, ebp
  0023c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00241	c9		 leave
  00242	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Start@ioBlockInterplaySpecialState@@QAEXPAVioBaseChar@@ABUD3DXVECTOR3@@ABUD3DXQUATERNION@@_JH@Z$0:
  00000	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$534356[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
__ehhandler$?Start@ioBlockInterplaySpecialState@@QAEXPAVioBaseChar@@ABUD3DXVECTOR3@@ABUD3DXQUATERNION@@_JH@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 98 7f ff
	ff		 mov	 ecx, DWORD PTR [edx-32872]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Start@ioBlockInterplaySpecialState@@QAEXPAVioBaseChar@@ABUD3DXVECTOR3@@ABUD3DXQUATERNION@@_JH@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Start@ioBlockInterplaySpecialState@@QAEXPAVioBaseChar@@ABUD3DXVECTOR3@@ABUD3DXQUATERNION@@_JH@Z ENDP ; ioBlockInterplaySpecialState::Start
PUBLIC	?CheckPre@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::CheckPre
; Function compile flags: /Ogsp
;	COMDAT ?CheckPre@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_pStage$ = 12						; size = 4
?CheckPre@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z PROC ; ioBlockInterplaySpecialState::CheckPre, COMDAT
; _this$ = ecx

; 176  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 177  : 	if( m_dwPreEndTime < FRAMEGETTIME() )

  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  0000c	8b c8		 mov	 ecx, eax
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00014	39 46 3c	 cmp	 DWORD PTR [esi+60], eax
  00017	73 2b		 jae	 SHORT $LN3@CheckPre

; 178  : 	{
; 179  : 		if( m_pCurrInterPlay )

  00019	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  0001c	85 c0		 test	 eax, eax
  0001e	74 24		 je	 SHORT $LN3@CheckPre

; 180  : 		{
; 181  : 			switch( m_pCurrInterPlay->m_eInterPlayType )

  00020	8b 00		 mov	 eax, DWORD PTR [eax]
  00022	48		 dec	 eax
  00023	74 12		 je	 SHORT $LN2@CheckPre
  00025	48		 dec	 eax
  00026	75 1c		 jne	 SHORT $LN3@CheckPre

; 186  : 				}
; 187  : 				break;
; 188  : 			case ioBlockProperty::IPT_LOOP:
; 189  : 				{
; 190  : 					ChangeToLoop( pOwner, pStage );

  00028	ff 75 0c	 push	 DWORD PTR _pStage$[ebp]
  0002b	8b ce		 mov	 ecx, esi
  0002d	ff 75 08	 push	 DWORD PTR _pOwner$[ebp]
  00030	e8 00 00 00 00	 call	 ?ChangeToLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::ChangeToLoop

; 191  : 				}
; 192  : 				break;

  00035	eb 0d		 jmp	 SHORT $LN3@CheckPre
$LN2@CheckPre:

; 182  : 			{
; 183  : 			case ioBlockProperty::IPT_ACTION:
; 184  : 				{
; 185  : 					ChangeToAction( pOwner, pStage );

  00037	ff 75 0c	 push	 DWORD PTR _pStage$[ebp]
  0003a	8b ce		 mov	 ecx, esi
  0003c	ff 75 08	 push	 DWORD PTR _pOwner$[ebp]
  0003f	e8 00 00 00 00	 call	 ?ChangeToAction@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::ChangeToAction
$LN3@CheckPre:
  00044	5e		 pop	 esi

; 193  : 			}
; 194  : 		}
; 195  : 	}
; 196  : }

  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?CheckPre@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ENDP ; ioBlockInterplaySpecialState::CheckPre
_TEXT	ENDS
PUBLIC	?CheckLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::CheckLoop
EXTRN	?IsDefenseKey@ioBaseChar@@QBE_NXZ:PROC		; ioBaseChar::IsDefenseKey
; Function compile flags: /Ogsp
;	COMDAT ?CheckLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_pStage$ = 12						; size = 4
?CheckLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z PROC ; ioBlockInterplaySpecialState::CheckLoop, COMDAT
; _this$ = ecx

; 226  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 227  : 	if( pOwner->IsDefenseKey() )

  00006	8b 4d 08	 mov	 ecx, DWORD PTR _pOwner$[ebp]
  00009	e8 00 00 00 00	 call	 ?IsDefenseKey@ioBaseChar@@QBE_NXZ ; ioBaseChar::IsDefenseKey
  0000e	84 c0		 test	 al, al
  00010	74 0d		 je	 SHORT $LN1@CheckLoop

; 228  : 	{
; 229  : 		ChangeToEnd( pOwner, pStage );

  00012	ff 75 0c	 push	 DWORD PTR _pStage$[ebp]
  00015	8b ce		 mov	 ecx, esi
  00017	ff 75 08	 push	 DWORD PTR _pOwner$[ebp]
  0001a	e8 00 00 00 00	 call	 ?ChangeToEnd@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::ChangeToEnd
$LN1@CheckLoop:
  0001f	5e		 pop	 esi

; 230  : 	}
; 231  : }

  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
?CheckLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ENDP ; ioBlockInterplaySpecialState::CheckLoop
_TEXT	ENDS
PUBLIC	?CheckAction@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::CheckAction
; Function compile flags: /Ogsp
;	COMDAT ?CheckAction@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_pStage$ = 12						; size = 4
?CheckAction@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z PROC ; ioBlockInterplaySpecialState::CheckAction, COMDAT
; _this$ = ecx

; 262  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 263  : 	if( m_dwActionEndTime < FRAMEGETTIME() )

  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  0000c	8b c8		 mov	 ecx, eax
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00014	39 46 40	 cmp	 DWORD PTR [esi+64], eax
  00017	73 0d		 jae	 SHORT $LN1@CheckActio

; 264  : 	{
; 265  : 		ChangeToEnd( pOwner, pStage );

  00019	ff 75 0c	 push	 DWORD PTR _pStage$[ebp]
  0001c	8b ce		 mov	 ecx, esi
  0001e	ff 75 08	 push	 DWORD PTR _pOwner$[ebp]
  00021	e8 00 00 00 00	 call	 ?ChangeToEnd@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::ChangeToEnd
$LN1@CheckActio:
  00026	5e		 pop	 esi

; 266  : 	}
; 267  : }

  00027	5d		 pop	 ebp
  00028	c2 08 00	 ret	 8
?CheckAction@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ENDP ; ioBlockInterplaySpecialState::CheckAction
_TEXT	ENDS
PUBLIC	_rkPacket$GSCopy$
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
EXTRN	??5SP2Packet@@QAEAAV0@AAUD3DXQUATERNION@@@Z:PROC ; SP2Packet::operator>>
EXTRN	??5SP2Packet@@QAEAAV0@AAUD3DXVECTOR3@@@Z:PROC	; SP2Packet::operator>>
EXTRN	??5SP2Packet@@QAEAAV0@AAH@Z:PROC		; SP2Packet::operator>>
EXTRN	??5SP2Packet@@QAEAAV0@AA_J@Z:PROC		; SP2Packet::operator>>
; Function compile flags: /Ogsp
;	COMDAT ?ApplyJoinSync@ioBlockInterplaySpecialState@@UAEXAAVSP2Packet@@PAVioBaseChar@@@Z
_TEXT	SEGMENT
_qtRot$ = -52						; size = 16
_nBlockUniqueIndex$ = -36				; size = 8
_nCollIndex$ = -28					; size = 4
_this$GSCopy$ = -24					; size = 4
_rkPacket$GSCopy$ = -20					; size = 4
_vPos$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_rkPacket$ = 8						; size = 4
_pOwner$ = 12						; size = 4
?ApplyJoinSync@ioBlockInterplaySpecialState@@UAEXAAVSP2Packet@@PAVioBaseChar@@@Z PROC ; ioBlockInterplaySpecialState::ApplyJoinSync, COMDAT
; _this$ = ecx

; 322  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 323  : 	__int64			nBlockUniqueIndex	= 0;
; 324  : 	int				nCollIndex			= 0;

  00010	83 65 e4 00	 and	 DWORD PTR _nCollIndex$[ebp], 0
  00014	53		 push	 ebx
  00015	56		 push	 esi

; 325  : 	D3DXVECTOR3		vPos				= ioMath::VEC3_ZERO;

  00016	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?VEC3_ZERO@ioMath@@2UD3DXVECTOR3@@A
  0001c	57		 push	 edi
  0001d	8b 5d 0c	 mov	 ebx, DWORD PTR _pOwner$[ebp]
  00020	66 0f 57 c0	 xorpd	 xmm0, xmm0
  00024	66 0f 13 45 dc	 movlpd	 QWORD PTR _nBlockUniqueIndex$[ebp], xmm0
  00029	8d 7d f0	 lea	 edi, DWORD PTR _vPos$[ebp]
  0002c	a5		 movsd
  0002d	a5		 movsd
  0002e	a5		 movsd

; 326  : 	D3DXQUATERNION	qtRot				= ioMath::QUAT_IDENTITY;

  0002f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?QUAT_IDENTITY@ioMath@@2UD3DXQUATERNION@@A
  00035	8d 7d cc	 lea	 edi, DWORD PTR _qtRot$[ebp]
  00038	a5		 movsd
  00039	a5		 movsd
  0003a	a5		 movsd
  0003b	89 4d e8	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  0003e	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]

; 327  : 
; 328  : 	rkPacket >> nBlockUniqueIndex;

  00041	8d 45 dc	 lea	 eax, DWORD PTR _nBlockUniqueIndex$[ebp]
  00044	50		 push	 eax
  00045	89 4d ec	 mov	 DWORD PTR _rkPacket$GSCopy$[ebp], ecx
  00048	a5		 movsd
  00049	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AA_J@Z ; SP2Packet::operator>>

; 329  : 	rkPacket >> nCollIndex;

  0004e	8b 4d ec	 mov	 ecx, DWORD PTR _rkPacket$GSCopy$[ebp]
  00051	8d 45 e4	 lea	 eax, DWORD PTR _nCollIndex$[ebp]
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>

; 330  : 	rkPacket >> vPos;

  0005a	8b 4d ec	 mov	 ecx, DWORD PTR _rkPacket$GSCopy$[ebp]
  0005d	8d 45 f0	 lea	 eax, DWORD PTR _vPos$[ebp]
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAUD3DXVECTOR3@@@Z ; SP2Packet::operator>>

; 331  : 	rkPacket >> qtRot;

  00066	8b 4d ec	 mov	 ecx, DWORD PTR _rkPacket$GSCopy$[ebp]
  00069	8d 45 cc	 lea	 eax, DWORD PTR _qtRot$[ebp]
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAUD3DXQUATERNION@@@Z ; SP2Packet::operator>>

; 332  : 
; 333  : 	Start( pOwner, vPos, qtRot, nBlockUniqueIndex, nCollIndex );

  00072	ff 75 e4	 push	 DWORD PTR _nCollIndex$[ebp]
  00075	8b 4d e8	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00078	ff 75 e0	 push	 DWORD PTR _nBlockUniqueIndex$[ebp+4]
  0007b	8d 45 cc	 lea	 eax, DWORD PTR _qtRot$[ebp]
  0007e	ff 75 dc	 push	 DWORD PTR _nBlockUniqueIndex$[ebp]
  00081	50		 push	 eax
  00082	8d 45 f0	 lea	 eax, DWORD PTR _vPos$[ebp]
  00085	50		 push	 eax
  00086	53		 push	 ebx
  00087	e8 00 00 00 00	 call	 ?Start@ioBlockInterplaySpecialState@@QAEXPAVioBaseChar@@ABUD3DXVECTOR3@@ABUD3DXQUATERNION@@_JH@Z ; ioBlockInterplaySpecialState::Start

; 334  : 	ChangeToLoop( pOwner, pOwner->GetCreator() );

  0008c	ff b3 44 03 00
	00		 push	 DWORD PTR [ebx+836]
  00092	8b 4d e8	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00095	53		 push	 ebx
  00096	e8 00 00 00 00	 call	 ?ChangeToLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::ChangeToLoop

; 335  : }

  0009b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	33 cd		 xor	 ecx, ebp
  000a2	5b		 pop	 ebx
  000a3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a8	c9		 leave
  000a9	c2 08 00	 ret	 8
?ApplyJoinSync@ioBlockInterplaySpecialState@@UAEXAAVSP2Packet@@PAVioBaseChar@@@Z ENDP ; ioBlockInterplaySpecialState::ApplyJoinSync
_TEXT	ENDS
PUBLIC	_rkPacket$GSCopy$
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
EXTRN	??5SP2Packet@@QAEAAV0@AAE@Z:PROC		; SP2Packet::operator>>
EXTRN	?ApplyStateSync@ioSpecialStateBase@@UAEXAAVSP2Packet@@PAVioBaseChar@@@Z:PROC ; ioSpecialStateBase::ApplyStateSync
; Function compile flags: /Ogsp
;	COMDAT ?ApplyStateSync@ioBlockInterplaySpecialState@@UAEXAAVSP2Packet@@PAVioBaseChar@@@Z
_TEXT	SEGMENT
_qtRot$534474 = -56					; size = 16
_nUniqueIndex$534475 = -40				; size = 8
_rkPacket$GSCopy$ = -32					; size = 4
_this$GSCopy$ = -28					; size = 4
_nCollIndex$534476 = -24				; size = 4
_eState$ = -17						; size = 1
_vPos$534473 = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
_rkPacket$ = 8						; size = 4
_pOwner$ = 12						; size = 4
?ApplyStateSync@ioBlockInterplaySpecialState@@UAEXAAVSP2Packet@@PAVioBaseChar@@@Z PROC ; ioBlockInterplaySpecialState::ApplyStateSync, COMDAT
; _this$ = ecx

; 338  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 0c	 mov	 ebx, DWORD PTR _pOwner$[ebp]
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _rkPacket$[ebp]

; 339  : 	ioSpecialStateBase::ApplyStateSync( rkPacket, pOwner );

  00018	53		 push	 ebx
  00019	56		 push	 esi

; 345  : 	{
; 346  : 	case SS_PRE:
; 347  : 		{
; 348  : 			D3DXVECTOR3 vPos		= ioMath::VEC3_ZERO;

  0001a	89 4d e4	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  0001d	89 75 e0	 mov	 DWORD PTR _rkPacket$GSCopy$[ebp], esi
  00020	e8 00 00 00 00	 call	 ?ApplyStateSync@ioSpecialStateBase@@UAEXAAVSP2Packet@@PAVioBaseChar@@@Z ; ioSpecialStateBase::ApplyStateSync
  00025	8d 45 ef	 lea	 eax, DWORD PTR _eState$[ebp]
  00028	50		 push	 eax
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAE@Z ; SP2Packet::operator>>
  00030	0f b6 45 ef	 movzx	 eax, BYTE PTR _eState$[ebp]
  00034	83 e8 00	 sub	 eax, 0
  00037	74 18		 je	 SHORT $LN2@ApplyState

; 340  : 
; 341  : 	byte eState;
; 342  : 	rkPacket >> eState;
; 343  : 
; 344  : 	switch( eState )

  00039	48		 dec	 eax
  0003a	0f 85 80 00 00
	00		 jne	 $LN3@ApplyState

; 355  : 		}
; 356  : 		break;
; 357  : 	case SS_END:
; 358  : 		{
; 359  : 			ChangeToEnd( pOwner, pOwner->GetCreator() );

  00040	ff b3 44 03 00
	00		 push	 DWORD PTR [ebx+836]
  00046	8b 4d e4	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00049	53		 push	 ebx
  0004a	e8 00 00 00 00	 call	 ?ChangeToEnd@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::ChangeToEnd

; 360  : 		}
; 361  : 		break;

  0004f	eb 6f		 jmp	 SHORT $LN3@ApplyState
$LN2@ApplyState:

; 345  : 	{
; 346  : 	case SS_PRE:
; 347  : 		{
; 348  : 			D3DXVECTOR3 vPos		= ioMath::VEC3_ZERO;

  00051	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?VEC3_ZERO@ioMath@@2UD3DXVECTOR3@@A
  00057	57		 push	 edi

; 349  : 			D3DXQUATERNION qtRot	= ioMath::QUAT_IDENTITY;
; 350  : 			__int64 nUniqueIndex	= 0;
; 351  : 			int nCollIndex			= 0;
; 352  : 
; 353  : 			rkPacket >> vPos >> qtRot >> nUniqueIndex >> nCollIndex;

  00058	8b 4d e0	 mov	 ecx, DWORD PTR _rkPacket$GSCopy$[ebp]
  0005b	8d 7d f0	 lea	 edi, DWORD PTR _vPos$534473[ebp]
  0005e	a5		 movsd
  0005f	a5		 movsd
  00060	a5		 movsd
  00061	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?QUAT_IDENTITY@ioMath@@2UD3DXQUATERNION@@A
  00067	8d 7d c8	 lea	 edi, DWORD PTR _qtRot$534474[ebp]
  0006a	a5		 movsd
  0006b	a5		 movsd
  0006c	8d 45 e8	 lea	 eax, DWORD PTR _nCollIndex$534476[ebp]
  0006f	50		 push	 eax
  00070	8d 45 d8	 lea	 eax, DWORD PTR _nUniqueIndex$534475[ebp]
  00073	50		 push	 eax
  00074	a5		 movsd
  00075	8d 45 c8	 lea	 eax, DWORD PTR _qtRot$534474[ebp]
  00078	50		 push	 eax
  00079	8d 45 f0	 lea	 eax, DWORD PTR _vPos$534473[ebp]
  0007c	a5		 movsd
  0007d	83 65 e8 00	 and	 DWORD PTR _nCollIndex$534476[ebp], 0
  00081	66 0f 57 c0	 xorpd	 xmm0, xmm0
  00085	50		 push	 eax
  00086	66 0f 13 45 d8	 movlpd	 QWORD PTR _nUniqueIndex$534475[ebp], xmm0
  0008b	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAUD3DXVECTOR3@@@Z ; SP2Packet::operator>>
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAUD3DXQUATERNION@@@Z ; SP2Packet::operator>>
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AA_J@Z ; SP2Packet::operator>>
  0009e	8b c8		 mov	 ecx, eax
  000a0	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>

; 354  : 			Start( pOwner, vPos, qtRot, nUniqueIndex, nCollIndex );

  000a5	ff 75 e8	 push	 DWORD PTR _nCollIndex$534476[ebp]
  000a8	8b 4d e4	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  000ab	ff 75 dc	 push	 DWORD PTR _nUniqueIndex$534475[ebp+4]
  000ae	8d 45 c8	 lea	 eax, DWORD PTR _qtRot$534474[ebp]
  000b1	ff 75 d8	 push	 DWORD PTR _nUniqueIndex$534475[ebp]
  000b4	50		 push	 eax
  000b5	8d 45 f0	 lea	 eax, DWORD PTR _vPos$534473[ebp]
  000b8	50		 push	 eax
  000b9	53		 push	 ebx
  000ba	e8 00 00 00 00	 call	 ?Start@ioBlockInterplaySpecialState@@QAEXPAVioBaseChar@@ABUD3DXVECTOR3@@ABUD3DXQUATERNION@@_JH@Z ; ioBlockInterplaySpecialState::Start
  000bf	5f		 pop	 edi
$LN3@ApplyState:

; 362  : 	}
; 363  : }

  000c0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c3	5e		 pop	 esi
  000c4	33 cd		 xor	 ecx, ebp
  000c6	5b		 pop	 ebx
  000c7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cc	c9		 leave
  000cd	c2 08 00	 ret	 8
?ApplyStateSync@ioBlockInterplaySpecialState@@UAEXAAVSP2Packet@@PAVioBaseChar@@@Z ENDP ; ioBlockInterplaySpecialState::ApplyStateSync
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?CheckSpecialState@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?CheckSpecialState@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@@Z PROC ; ioBlockInterplaySpecialState::CheckSpecialState, COMDAT
; _this$ = ecx

; 66   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 67   : 	CheckBlock( pOwner, pOwner->GetCreator() );

  00004	8b 75 08	 mov	 esi, DWORD PTR _pOwner$[ebp]
  00007	57		 push	 edi
  00008	ff b6 44 03 00
	00		 push	 DWORD PTR [esi+836]
  0000e	8b f9		 mov	 edi, ecx
  00010	56		 push	 esi
  00011	e8 00 00 00 00	 call	 ?CheckBlock@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::CheckBlock

; 68   : 	switch( m_State )

  00016	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00019	48		 dec	 eax
  0001a	74 26		 je	 SHORT $LN4@CheckSpeci
  0001c	48		 dec	 eax
  0001d	74 13		 je	 SHORT $LN2@CheckSpeci
  0001f	48		 dec	 eax
  00020	75 2e		 jne	 SHORT $LN5@CheckSpeci

; 73   : 		}
; 74   : 		break;
; 75   : 	case IPS_ACTION:
; 76   : 		{
; 77   : 			CheckAction( pOwner, pOwner->GetCreator() );

  00022	ff b6 44 03 00
	00		 push	 DWORD PTR [esi+836]
  00028	8b cf		 mov	 ecx, edi
  0002a	56		 push	 esi
  0002b	e8 00 00 00 00	 call	 ?CheckAction@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::CheckAction

; 78   : 		}
; 79   : 		break;

  00030	eb 1e		 jmp	 SHORT $LN5@CheckSpeci
$LN2@CheckSpeci:

; 80   : 	case IPS_LOOP:
; 81   : 		{
; 82   : 			CheckLoop( pOwner, pOwner->GetCreator() );

  00032	ff b6 44 03 00
	00		 push	 DWORD PTR [esi+836]
  00038	8b cf		 mov	 ecx, edi
  0003a	56		 push	 esi
  0003b	e8 00 00 00 00	 call	 ?CheckLoop@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::CheckLoop

; 83   : 		}
; 84   : 		break;

  00040	eb 0e		 jmp	 SHORT $LN5@CheckSpeci
$LN4@CheckSpeci:

; 69   : 	{
; 70   : 	case IPS_PRE:
; 71   : 		{
; 72   : 			CheckPre( pOwner, pOwner->GetCreator() );

  00042	ff b6 44 03 00
	00		 push	 DWORD PTR [esi+836]
  00048	8b cf		 mov	 ecx, edi
  0004a	56		 push	 esi
  0004b	e8 00 00 00 00	 call	 ?CheckPre@ioBlockInterplaySpecialState@@IAEXPAVioBaseChar@@PAVioPlayStage@@@Z ; ioBlockInterplaySpecialState::CheckPre
$LN5@CheckSpeci:
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi

; 85   : 	case IPS_END:
; 86   : 		{
; 87   : 		}
; 88   : 		break;
; 89   : 	}
; 90   : }

  00052	5d		 pop	 ebp
  00053	c2 04 00	 ret	 4
?CheckSpecialState@ioBlockInterplaySpecialState@@UAEXPAVioBaseChar@@@Z ENDP ; ioBlockInterplaySpecialState::CheckSpecialState
_TEXT	ENDS
_BSS	SEGMENT
_ZERO_TILE_POS DB 010H DUP (?)
_BSS	ENDS
END
