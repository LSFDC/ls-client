; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\Gui\RecordInitWnd.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?return1@@YAIXZ					; return1
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
;	COMDAT ?return1@@YAIXZ
_TEXT	SEGMENT
?return1@@YAIXZ PROC					; return1, COMDAT

; 17   : 	__forceinline unsigned int return1() { __asm mov eax, 1 };

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?return1@@YAIXZ ENDP					; return1
_TEXT	ENDS
PUBLIC	??_7RecordInitWnd@@6B@				; RecordInitWnd::`vftable'
PUBLIC	??0RecordInitWnd@@QAE@XZ			; RecordInitWnd::RecordInitWnd
PUBLIC	??_R4RecordInitWnd@@6B@				; RecordInitWnd::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRecordInitWnd@@@8			; RecordInitWnd `RTTI Type Descriptor'
PUBLIC	??_R3RecordInitWnd@@8				; RecordInitWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RecordInitWnd@@8				; RecordInitWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RecordInitWnd@@8			; RecordInitWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioWnd@@8				; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioWnd@@@8				; ioWnd `RTTI Type Descriptor'
PUBLIC	??_R3ioWnd@@8					; ioWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioWnd@@8					; ioWnd::`RTTI Base Class Array'
PUBLIC	?AddRenderFrame@RecordInitWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z ; RecordInitWnd::AddRenderFrame
PUBLIC	?OnRender@RecordInitWnd@@MAEXXZ			; RecordInitWnd::OnRender
PUBLIC	?iwm_command@RecordInitWnd@@UAEXPAVioWnd@@HK@Z	; RecordInitWnd::iwm_command
PUBLIC	?iwm_hide@RecordInitWnd@@UAEXXZ			; RecordInitWnd::iwm_hide
EXTRN	__imp_??1ioWnd@@UAE@XZ:PROC
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
EXTRN	__imp_??0ioWnd@@QAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC ; ioWnd::AddRenderImage
EXTRN	?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z:PROC ; ioWnd::AddTooltipHelp
EXTRN	?ParseExtraInfo@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC ; ioWnd::ParseExtraInfo
EXTRN	?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC ; ioWnd::AddNamedRenderImage
EXTRN	?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z:PROC ; ioWnd::RemoveNamedRenderImage
EXTRN	?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z:PROC ; ioWnd::GetNamedRenderImage
EXTRN	?SetWindowAlpha@ioWnd@@UAEXH@Z:PROC		; ioWnd::SetWindowAlpha
EXTRN	?SetActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetActive
EXTRN	?SetInActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetInActive
EXTRN	?ClearElementImageList@ioWnd@@UAEXXZ:PROC	; ioWnd::ClearElementImageList
EXTRN	?SetSize@ioWnd@@UAEXHH@Z:PROC			; ioWnd::SetSize
EXTRN	?SetPositionToDefault@ioWnd@@UAEXHH_N0@Z:PROC	; ioWnd::SetPositionToDefault
EXTRN	?IsNeedProcess@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsNeedProcess
EXTRN	?IsCanMouseReaction@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsCanMouseReaction
EXTRN	?AddChild@ioWnd@@UAEXPAV1@@Z:PROC		; ioWnd::AddChild
EXTRN	?DeleteChild@ioWnd@@UAEXK@Z:PROC		; ioWnd::DeleteChild
EXTRN	?DeleteAllChild@ioWnd@@UAEXXZ:PROC		; ioWnd::DeleteAllChild
EXTRN	?OnRenderShowAndHide@ioWnd@@MAE_NXZ:PROC	; ioWnd::OnRenderShowAndHide
EXTRN	?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z:PROC ; ioWnd::OnRenderShowAndHideByDefault
EXTRN	?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByTop
EXTRN	?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByDown
EXTRN	?OnRenderAfterChild@ioWnd@@MAEXXZ:PROC		; ioWnd::OnRenderAfterChild
EXTRN	?OnProcess@ioWnd@@MAEXM@Z:PROC			; ioWnd::OnProcess
EXTRN	?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z:PROC	; ioWnd::OnMouseProcess
EXTRN	?CheckFrameReSize@ioWnd@@MAEXHHHH@Z:PROC	; ioWnd::CheckFrameReSize
EXTRN	?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z:PROC ; ioWnd::RenderImageList
EXTRN	?iwm_create@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_create
EXTRN	?iwm_destroy@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_destroy
EXTRN	?iwm_lbuttondown@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_lbuttondown
EXTRN	?iwm_lbuttonup@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_lbuttonup
EXTRN	?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z:PROC ; ioWnd::iwm_lbuttonDBLCLK
EXTRN	?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_rbuttondown
EXTRN	?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_rbuttonup
EXTRN	?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mouseover
EXTRN	?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mousemove
EXTRN	?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mouseleave
EXTRN	?iwm_vscroll@ioWnd@@UAEXKH@Z:PROC		; ioWnd::iwm_vscroll
EXTRN	?iwm_wheel@ioWnd@@UAEXH@Z:PROC			; ioWnd::iwm_wheel
EXTRN	?iwm_show@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_show
EXTRN	?iwm_esc@ioWnd@@UAE_NXZ:PROC			; ioWnd::iwm_esc
EXTRN	?iwm_spacebar@ioWnd@@UAE_NXZ:PROC		; ioWnd::iwm_spacebar
EXTRN	?iwm_gototop@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_gototop
EXTRN	?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragenter
EXTRN	?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragover
EXTRN	?iwm_dragleave@ioWnd@@UAEXXZ:PROC		; ioWnd::iwm_dragleave
EXTRN	?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z:PROC ; ioWnd::iwm_dropitem
EXTRN	?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z:PROC ; ioWnd::iwm_dropdone
EXTRN	?IsEXType@ioWnd@@UBE_NXZ:PROC			; ioWnd::IsEXType
EXTRN	?GetWndType@ioWnd@@UBEKXZ:PROC			; ioWnd::GetWndType
EXTRN	?RenderWnd@ioWnd@@UAEXXZ:PROC			; ioWnd::RenderWnd
EXTRN	?SetIDEX@ioWnd@@UAEXAAK_N@Z:PROC		; ioWnd::SetIDEX
EXTRN	?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC	; ioWnd::ParseXML
EXTRN	?GetHeaderFileName@ioWnd@@UAEPBDXZ:PROC		; ioWnd::GetHeaderFileName
EXTRN	?GetTemplateName@ioWnd@@UAEPBDXZ:PROC		; ioWnd::GetTemplateName
EXTRN	?GetDefClassName@ioWnd@@UBEPBDXZ:PROC		; ioWnd::GetDefClassName
EXTRN	?_Clone@ioWnd@@UAEPAV1@XZ:PROC			; ioWnd::_Clone
EXTRN	?Copy@ioWnd@@UAEXPAV1@@Z:PROC			; ioWnd::Copy
EXTRN	?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z:PROC	; ioWnd::Save
EXTRN	?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC ; ioWnd::SetSaveData
EXTRN	?SetPosX@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosX
EXTRN	?SetPosY@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosY
EXTRN	?SetWidth@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetWidth
EXTRN	?SetHeight@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetHeight
EXTRN	?GetNumFixedRenderFrame@ioWnd@@UBEHXZ:PROC	; ioWnd::GetNumFixedRenderFrame
EXTRN	?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z:PROC	; ioWnd::GetFixedRenderFrameType
EXTRN	?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioWnd::GetRenderFrame
EXTRN	?GetNumFixedRenderImage@ioWnd@@UBEHXZ:PROC	; ioWnd::GetNumFixedRenderImage
EXTRN	?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z:PROC	; ioWnd::GetFixedRenderImageType
EXTRN	?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioWnd::GetRenderImage
EXTRN	?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z:PROC ; ioWnd::AddEffect
EXTRN	?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z:PROC ; ioWnd::GetEffect
EXTRN	??_ERecordInitWnd@@UAEPAXI@Z:PROC		; RecordInitWnd::`vector deleting destructor'
;	COMDAT ??_R2ioWnd@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\recordinitwnd.cpp
rdata$r	SEGMENT
??_R2ioWnd@@8 DD FLAT:??_R1A@?0A@EA@ioWnd@@8		; ioWnd::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioWnd@@8
rdata$r	SEGMENT
??_R3ioWnd@@8 DD 00H					; ioWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioWnd@@@8
_DATA	SEGMENT
??_R0?AVioWnd@@@8 DD FLAT:??_7type_info@@6B@		; ioWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioWnd@@8 DD FLAT:??_R0?AVioWnd@@@8	; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RecordInitWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RecordInitWnd@@8 DD FLAT:??_R0?AVRecordInitWnd@@@8 ; RecordInitWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RecordInitWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2RecordInitWnd@@8
rdata$r	SEGMENT
??_R2RecordInitWnd@@8 DD FLAT:??_R1A@?0A@EA@RecordInitWnd@@8 ; RecordInitWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3RecordInitWnd@@8
rdata$r	SEGMENT
??_R3RecordInitWnd@@8 DD 00H				; RecordInitWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2RecordInitWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRecordInitWnd@@@8
_DATA	SEGMENT
??_R0?AVRecordInitWnd@@@8 DD FLAT:??_7type_info@@6B@	; RecordInitWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRecordInitWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RecordInitWnd@@6B@
rdata$r	SEGMENT
??_R4RecordInitWnd@@6B@ DD 00H				; RecordInitWnd::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRecordInitWnd@@@8
	DD	FLAT:??_R3RecordInitWnd@@8
rdata$r	ENDS
;	COMDAT ??_7RecordInitWnd@@6B@
CONST	SEGMENT
??_7RecordInitWnd@@6B@ DD FLAT:??_R4RecordInitWnd@@6B@	; RecordInitWnd::`vftable'
	DD	FLAT:?AddRenderFrame@RecordInitWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
	DD	FLAT:?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z
	DD	FLAT:?ParseExtraInfo@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z
	DD	FLAT:?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z
	DD	FLAT:?SetWindowAlpha@ioWnd@@UAEXH@Z
	DD	FLAT:?SetActive@ioWnd@@UAEXXZ
	DD	FLAT:?SetInActive@ioWnd@@UAEXXZ
	DD	FLAT:?ClearElementImageList@ioWnd@@UAEXXZ
	DD	FLAT:?SetSize@ioWnd@@UAEXHH@Z
	DD	FLAT:?SetPositionToDefault@ioWnd@@UAEXHH_N0@Z
	DD	FLAT:?IsNeedProcess@ioWnd@@UBE_NXZ
	DD	FLAT:?IsCanMouseReaction@ioWnd@@UBE_NXZ
	DD	FLAT:?AddChild@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?DeleteChild@ioWnd@@UAEXK@Z
	DD	FLAT:?DeleteAllChild@ioWnd@@UAEXXZ
	DD	FLAT:?OnRenderShowAndHide@ioWnd@@MAE_NXZ
	DD	FLAT:?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRender@RecordInitWnd@@MAEXXZ
	DD	FLAT:?OnRenderAfterChild@ioWnd@@MAEXXZ
	DD	FLAT:?OnProcess@ioWnd@@MAEXM@Z
	DD	FLAT:?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z
	DD	FLAT:?CheckFrameReSize@ioWnd@@MAEXHHHH@Z
	DD	FLAT:?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z
	DD	FLAT:?iwm_create@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_destroy@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_lbuttondown@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonup@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_command@RecordInitWnd@@UAEXPAVioWnd@@HK@Z
	DD	FLAT:?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_vscroll@ioWnd@@UAEXKH@Z
	DD	FLAT:?iwm_wheel@ioWnd@@UAEXH@Z
	DD	FLAT:?iwm_show@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_hide@RecordInitWnd@@UAEXXZ
	DD	FLAT:?iwm_esc@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_spacebar@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_gototop@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragleave@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z
	DD	FLAT:?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z
	DD	FLAT:?IsEXType@ioWnd@@UBE_NXZ
	DD	FLAT:?GetWndType@ioWnd@@UBEKXZ
	DD	FLAT:?RenderWnd@ioWnd@@UAEXXZ
	DD	FLAT:?SetIDEX@ioWnd@@UAEXAAK_N@Z
	DD	FLAT:?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?GetHeaderFileName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetTemplateName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetDefClassName@ioWnd@@UBEPBDXZ
	DD	FLAT:?_Clone@ioWnd@@UAEPAV1@XZ
	DD	FLAT:?Copy@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z
	DD	FLAT:?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?SetPosX@ioWnd@@UAEXH@Z
	DD	FLAT:?SetPosY@ioWnd@@UAEXH@Z
	DD	FLAT:?SetWidth@ioWnd@@UAEXH@Z
	DD	FLAT:?SetHeight@ioWnd@@UAEXH@Z
	DD	FLAT:?GetNumFixedRenderFrame@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?GetNumFixedRenderImage@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z
	DD	FLAT:?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z
	DD	FLAT:??_ERecordInitWnd@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RecordInitWnd@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RecordInitWnd@@QAE@XZ$0
__ehfuncinfo$??0RecordInitWnd@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0RecordInitWnd@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0RecordInitWnd@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0RecordInitWnd@@QAE@XZ PROC				; RecordInitWnd::RecordInitWnd, COMDAT
; _this$ = ecx

; 48   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0RecordInitWnd@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioWnd@@QAE@XZ
  00017	33 ff		 xor	 edi, edi
  00019	8d 8e 6c 01 00
	00		 lea	 ecx, DWORD PTR [esi+364]
  0001f	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  00022	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7RecordInitWnd@@6B@
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ

; 49   : 	m_pManual   = NULL;

  0002e	89 be 80 01 00
	00		 mov	 DWORD PTR [esi+384], edi

; 50   : 	m_pEditFrm  = NULL;

  00034	89 be 7c 01 00
	00		 mov	 DWORD PTR [esi+380], edi

; 51   : 	m_pPreEdit  = NULL;

  0003a	89 be 64 01 00
	00		 mov	 DWORD PTR [esi+356], edi

; 52   : 	m_pInitEdit = NULL;

  00040	89 be 68 01 00
	00		 mov	 DWORD PTR [esi+360], edi

; 53   : }

  00046	8b c6		 mov	 eax, esi
  00048	e8 00 00 00 00	 call	 __EH_epilog3
  0004d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RecordInitWnd@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioWnd@@UAE@XZ
__ehhandler$??0RecordInitWnd@@QAE@XZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0RecordInitWnd@@QAE@XZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0RecordInitWnd@@QAE@XZ ENDP				; RecordInitWnd::RecordInitWnd
PUBLIC	??1RecordInitWnd@@UAE@XZ			; RecordInitWnd::~RecordInitWnd
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1RecordInitWnd@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1RecordInitWnd@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1RecordInitWnd@@UAE@XZ$1
__ehfuncinfo$??1RecordInitWnd@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1RecordInitWnd@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1RecordInitWnd@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1RecordInitWnd@@UAE@XZ PROC				; RecordInitWnd::~RecordInitWnd, COMDAT
; _this$ = ecx

; 56   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1RecordInitWnd@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00011	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7RecordInitWnd@@6B@

; 57   : 	SAFEDELETE( m_pEditFrm );

  00017	8b 8f 7c 01 00
	00		 mov	 ecx, DWORD PTR [edi+380]
  0001d	33 c0		 xor	 eax, eax
  0001f	40		 inc	 eax
  00020	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00023	85 c9		 test	 ecx, ecx
  00025	74 0d		 je	 SHORT $LN1@RecordInit
  00027	8b 11		 mov	 edx, DWORD PTR [ecx]
  00029	50		 push	 eax
  0002a	ff 52 40	 call	 DWORD PTR [edx+64]
  0002d	83 a7 7c 01 00
	00 00		 and	 DWORD PTR [edi+380], 0
$LN1@RecordInit:

; 58   : }

  00034	8d 8f 6c 01 00
	00		 lea	 ecx, DWORD PTR [edi+364]
  0003a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00044	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00048	8b cf		 mov	 ecx, edi
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioWnd@@UAE@XZ
  00050	e8 00 00 00 00	 call	 __EH_epilog3
  00055	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1RecordInitWnd@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioWnd@@UAE@XZ
__unwindfunclet$??1RecordInitWnd@@UAE@XZ$1:
  00009	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	81 c1 6c 01 00
	00		 add	 ecx, 364		; 0000016cH
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??1RecordInitWnd@@UAE@XZ:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1RecordInitWnd@@UAE@XZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1RecordInitWnd@@UAE@XZ ENDP				; RecordInitWnd::~RecordInitWnd
EXTRN	__imp_?IsShow@ioWnd@@QBE_NXZ:PROC
EXTRN	__imp_?GetParent@ioWnd@@QAEPAV1@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?iwm_hide@RecordInitWnd@@UAEXXZ
_TEXT	SEGMENT
?iwm_hide@RecordInitWnd@@UAEXXZ PROC			; RecordInitWnd::iwm_hide, COMDAT
; _this$ = ecx

; 93   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 94   : 	if( m_pPreEdit )	

  00003	8b 8e 64 01 00
	00		 mov	 ecx, DWORD PTR [esi+356]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 24		 je	 SHORT $LN1@iwm_hide

; 95   : 	{
; 96   : 		ioWnd *pParent = m_pPreEdit->GetParent();

  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetParent@ioWnd@@QAEPAV1@XZ

; 97   : 		if( pParent )

  00013	85 c0		 test	 eax, eax
  00015	74 1a		 je	 SHORT $LN1@iwm_hide

; 98   : 		{
; 99   : 			if( pParent->IsShow() )

  00017	8b c8		 mov	 ecx, eax
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsShow@ioWnd@@QBE_NXZ
  0001f	84 c0		 test	 al, al
  00021	74 0e		 je	 SHORT $LN1@iwm_hide

; 100  : 				((ioEdit*)m_pPreEdit)->SetKeyFocus();	

  00023	8b 8e 64 01 00
	00		 mov	 ecx, DWORD PTR [esi+356]
  00029	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002b	ff 90 30 01 00
	00		 call	 DWORD PTR [eax+304]
$LN1@iwm_hide:

; 101  : 		}
; 102  : 	}	
; 103  : 	m_pPreEdit = NULL;

  00031	83 a6 64 01 00
	00 00		 and	 DWORD PTR [esi+356], 0
  00038	5e		 pop	 esi

; 104  : }

  00039	c3		 ret	 0
?iwm_hide@RecordInitWnd@@UAEXXZ ENDP			; RecordInitWnd::iwm_hide
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendRecordInit@RecordInitWnd@@IAEXXZ		; RecordInitWnd::SendRecordInit
EXTRN	??1SP2Packet@@UAE@XZ:PROC			; SP2Packet::~SP2Packet
EXTRN	?MouseBusy@TCPNetwork@@YAX_N@Z:PROC		; TCPNetwork::MouseBusy
EXTRN	?SendToServer@TCPNetwork@@YAXAAVSP2Packet@@@Z:PROC ; TCPNetwork::SendToServer
EXTRN	??6SP2Packet@@QAEAAV0@H@Z:PROC			; SP2Packet::operator<<
EXTRN	??0SP2Packet@@QAE@K@Z:PROC			; SP2Packet::SP2Packet
EXTRN	___security_cookie:DWORD
EXTRN	__chkstk:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SendRecordInit@RecordInitWnd@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendRecordInit@RecordInitWnd@@IAEXXZ$0
__ehfuncinfo$?SendRecordInit@RecordInitWnd@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SendRecordInit@RecordInitWnd@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?SendRecordInit@RecordInitWnd@@IAEXXZ
_TEXT	SEGMENT
_kPacket$ = -32808					; size = 32792
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?SendRecordInit@RecordInitWnd@@IAEXXZ PROC		; RecordInitWnd::SendRecordInit, COMDAT
; _this$ = ecx

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SendRecordInit@RecordInitWnd@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 1c 80 00 00	 mov	 eax, 32796		; 0000801cH
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	56		 push	 esi
  00026	50		 push	 eax
  00027	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00030	8b f1		 mov	 esi, ecx

; 155  : 	SP2Packet kPacket( CTPK_ETCITEM_USE );

  00032	68 59 01 00 00	 push	 345			; 00000159H
  00037	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$[ebp]
  0003d	e8 00 00 00 00	 call	 ??0SP2Packet@@QAE@K@Z	; SP2Packet::SP2Packet

; 156  : 	kPacket << (int)m_dwEtcType;

  00042	ff b6 60 01 00
	00		 push	 DWORD PTR [esi+352]
  00048	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0004c	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$[ebp]
  00052	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@H@Z ; SP2Packet::operator<<

; 157  : 	TCPNetwork::SendToServer( kPacket );

  00057	8d 85 d8 7f ff
	ff		 lea	 eax, DWORD PTR _kPacket$[ebp]
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?SendToServer@TCPNetwork@@YAXAAVSP2Packet@@@Z ; TCPNetwork::SendToServer

; 158  : 	TCPNetwork::MouseBusy( true );

  00063	6a 01		 push	 1
  00065	e8 00 00 00 00	 call	 ?MouseBusy@TCPNetwork@@YAX_N@Z ; TCPNetwork::MouseBusy

; 159  : }

  0006a	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0006e	59		 pop	 ecx
  0006f	59		 pop	 ecx
  00070	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$[ebp]
  00076	e8 00 00 00 00	 call	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
  0007b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00085	59		 pop	 ecx
  00086	5e		 pop	 esi
  00087	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0008a	33 cd		 xor	 ecx, ebp
  0008c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00091	c9		 leave
  00092	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SendRecordInit@RecordInitWnd@@IAEXXZ$0:
  00000	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
__ehhandler$?SendRecordInit@RecordInitWnd@@IAEXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a dc 7f ff
	ff		 mov	 ecx, DWORD PTR [edx-32804]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SendRecordInit@RecordInitWnd@@IAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SendRecordInit@RecordInitWnd@@IAEXXZ ENDP		; RecordInitWnd::SendRecordInit
PUBLIC	??_7RecordInitResultWnd@@6B@			; RecordInitResultWnd::`vftable'
PUBLIC	??0RecordInitResultWnd@@QAE@XZ			; RecordInitResultWnd::RecordInitResultWnd
PUBLIC	??_R4RecordInitResultWnd@@6B@			; RecordInitResultWnd::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRecordInitResultWnd@@@8			; RecordInitResultWnd `RTTI Type Descriptor'
PUBLIC	??_R3RecordInitResultWnd@@8			; RecordInitResultWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RecordInitResultWnd@@8			; RecordInitResultWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RecordInitResultWnd@@8		; RecordInitResultWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?AddRenderImage@RecordInitResultWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z ; RecordInitResultWnd::AddRenderImage
PUBLIC	?OnRender@RecordInitResultWnd@@MAEXXZ		; RecordInitResultWnd::OnRender
PUBLIC	?iwm_command@RecordInitResultWnd@@UAEXPAVioWnd@@HK@Z ; RecordInitResultWnd::iwm_command
EXTRN	?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z:PROC ; ioWnd::AddRenderFrame
EXTRN	?iwm_hide@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_hide
EXTRN	??_ERecordInitResultWnd@@UAEPAXI@Z:PROC		; RecordInitResultWnd::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@RecordInitResultWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RecordInitResultWnd@@8 DD FLAT:??_R0?AVRecordInitResultWnd@@@8 ; RecordInitResultWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RecordInitResultWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2RecordInitResultWnd@@8
rdata$r	SEGMENT
??_R2RecordInitResultWnd@@8 DD FLAT:??_R1A@?0A@EA@RecordInitResultWnd@@8 ; RecordInitResultWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3RecordInitResultWnd@@8
rdata$r	SEGMENT
??_R3RecordInitResultWnd@@8 DD 00H			; RecordInitResultWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2RecordInitResultWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRecordInitResultWnd@@@8
_DATA	SEGMENT
??_R0?AVRecordInitResultWnd@@@8 DD FLAT:??_7type_info@@6B@ ; RecordInitResultWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRecordInitResultWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RecordInitResultWnd@@6B@
rdata$r	SEGMENT
??_R4RecordInitResultWnd@@6B@ DD 00H			; RecordInitResultWnd::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRecordInitResultWnd@@@8
	DD	FLAT:??_R3RecordInitResultWnd@@8
rdata$r	ENDS
;	COMDAT ??_7RecordInitResultWnd@@6B@
CONST	SEGMENT
??_7RecordInitResultWnd@@6B@ DD FLAT:??_R4RecordInitResultWnd@@6B@ ; RecordInitResultWnd::`vftable'
	DD	FLAT:?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
	DD	FLAT:?AddRenderImage@RecordInitResultWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z
	DD	FLAT:?ParseExtraInfo@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z
	DD	FLAT:?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z
	DD	FLAT:?SetWindowAlpha@ioWnd@@UAEXH@Z
	DD	FLAT:?SetActive@ioWnd@@UAEXXZ
	DD	FLAT:?SetInActive@ioWnd@@UAEXXZ
	DD	FLAT:?ClearElementImageList@ioWnd@@UAEXXZ
	DD	FLAT:?SetSize@ioWnd@@UAEXHH@Z
	DD	FLAT:?SetPositionToDefault@ioWnd@@UAEXHH_N0@Z
	DD	FLAT:?IsNeedProcess@ioWnd@@UBE_NXZ
	DD	FLAT:?IsCanMouseReaction@ioWnd@@UBE_NXZ
	DD	FLAT:?AddChild@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?DeleteChild@ioWnd@@UAEXK@Z
	DD	FLAT:?DeleteAllChild@ioWnd@@UAEXXZ
	DD	FLAT:?OnRenderShowAndHide@ioWnd@@MAE_NXZ
	DD	FLAT:?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRender@RecordInitResultWnd@@MAEXXZ
	DD	FLAT:?OnRenderAfterChild@ioWnd@@MAEXXZ
	DD	FLAT:?OnProcess@ioWnd@@MAEXM@Z
	DD	FLAT:?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z
	DD	FLAT:?CheckFrameReSize@ioWnd@@MAEXHHHH@Z
	DD	FLAT:?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z
	DD	FLAT:?iwm_create@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_destroy@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_lbuttondown@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonup@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_command@RecordInitResultWnd@@UAEXPAVioWnd@@HK@Z
	DD	FLAT:?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_vscroll@ioWnd@@UAEXKH@Z
	DD	FLAT:?iwm_wheel@ioWnd@@UAEXH@Z
	DD	FLAT:?iwm_show@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_hide@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_esc@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_spacebar@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_gototop@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragleave@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z
	DD	FLAT:?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z
	DD	FLAT:?IsEXType@ioWnd@@UBE_NXZ
	DD	FLAT:?GetWndType@ioWnd@@UBEKXZ
	DD	FLAT:?RenderWnd@ioWnd@@UAEXXZ
	DD	FLAT:?SetIDEX@ioWnd@@UAEXAAK_N@Z
	DD	FLAT:?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?GetHeaderFileName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetTemplateName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetDefClassName@ioWnd@@UBEPBDXZ
	DD	FLAT:?_Clone@ioWnd@@UAEPAV1@XZ
	DD	FLAT:?Copy@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z
	DD	FLAT:?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?SetPosX@ioWnd@@UAEXH@Z
	DD	FLAT:?SetPosY@ioWnd@@UAEXH@Z
	DD	FLAT:?SetWidth@ioWnd@@UAEXH@Z
	DD	FLAT:?SetHeight@ioWnd@@UAEXH@Z
	DD	FLAT:?GetNumFixedRenderFrame@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?GetNumFixedRenderImage@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z
	DD	FLAT:?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z
	DD	FLAT:??_ERecordInitResultWnd@@UAEPAXI@Z
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0RecordInitResultWnd@@QAE@XZ
_TEXT	SEGMENT
??0RecordInitResultWnd@@QAE@XZ PROC			; RecordInitResultWnd::RecordInitResultWnd, COMDAT
; _this$ = ecx

; 241  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioWnd@@QAE@XZ

; 242  : 	m_pIcon = NULL;

  00009	83 a6 64 01 00
	00 00		 and	 DWORD PTR [esi+356], 0

; 243  : 	m_pBackEffect = NULL;

  00010	83 a6 68 01 00
	00 00		 and	 DWORD PTR [esi+360], 0
  00017	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7RecordInitResultWnd@@6B@

; 244  : }

  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	c3		 ret	 0
??0RecordInitResultWnd@@QAE@XZ ENDP			; RecordInitResultWnd::RecordInitResultWnd
_TEXT	ENDS
PUBLIC	??1RecordInitResultWnd@@UAE@XZ			; RecordInitResultWnd::~RecordInitResultWnd
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1RecordInitResultWnd@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1RecordInitResultWnd@@UAE@XZ$0
__ehfuncinfo$??1RecordInitResultWnd@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1RecordInitResultWnd@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1RecordInitResultWnd@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1RecordInitResultWnd@@UAE@XZ PROC			; RecordInitResultWnd::~RecordInitResultWnd, COMDAT
; _this$ = ecx

; 247  : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1RecordInitResultWnd@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00011	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7RecordInitResultWnd@@6B@

; 248  : 	SAFEDELETE( m_pIcon );

  00017	8b 8f 64 01 00
	00		 mov	 ecx, DWORD PTR [edi+356]
  0001d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00021	85 c9		 test	 ecx, ecx
  00023	74 0e		 je	 SHORT $LN2@RecordInit@2
  00025	8b 01		 mov	 eax, DWORD PTR [ecx]
  00027	6a 01		 push	 1
  00029	ff 50 40	 call	 DWORD PTR [eax+64]
  0002c	83 a7 64 01 00
	00 00		 and	 DWORD PTR [edi+356], 0
$LN2@RecordInit@2:

; 249  : 	SAFEDELETE( m_pBackEffect );

  00033	8b 8f 68 01 00
	00		 mov	 ecx, DWORD PTR [edi+360]
  00039	85 c9		 test	 ecx, ecx
  0003b	74 0e		 je	 SHORT $LN1@RecordInit@2
  0003d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0003f	6a 01		 push	 1
  00041	ff 50 40	 call	 DWORD PTR [eax+64]
  00044	83 a7 68 01 00
	00 00		 and	 DWORD PTR [edi+360], 0
$LN1@RecordInit@2:

; 250  : }

  0004b	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0004f	8b cf		 mov	 ecx, edi
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioWnd@@UAE@XZ
  00057	e8 00 00 00 00	 call	 __EH_epilog3
  0005c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1RecordInitResultWnd@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioWnd@@UAE@XZ
__ehhandler$??1RecordInitResultWnd@@UAE@XZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1RecordInitResultWnd@@UAE@XZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1RecordInitResultWnd@@UAE@XZ ENDP			; RecordInitResultWnd::~RecordInitResultWnd
EXTRN	__imp_?GetID@ioWnd@@QBEKXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?iwm_command@RecordInitResultWnd@@UAEXPAVioWnd@@HK@Z
_TEXT	SEGMENT
_pWnd$ = 8						; size = 4
_cmd$ = 12						; size = 4
_param$ = 16						; size = 4
?iwm_command@RecordInitResultWnd@@UAEXPAVioWnd@@HK@Z PROC ; RecordInitResultWnd::iwm_command, COMDAT
; _this$ = ecx

; 253  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 254  : 	DWORD dwID = pWnd->GetID();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetID@ioWnd@@QBEKXZ

; 255  : 	switch( dwID )
; 256  : 	{
; 257  : 	case ID_GO:
; 258  : 		if( cmd == IOBN_BTNUP )
; 259  : 		{
; 260  : 		}
; 261  : 		break;
; 262  : 	}
; 263  : }

  0000c	5d		 pop	 ebp
  0000d	c2 0c 00	 ret	 12			; 0000000cH
?iwm_command@RecordInitResultWnd@@UAEXPAVioWnd@@HK@Z ENDP ; RecordInitResultWnd::iwm_command
_TEXT	ENDS
PUBLIC	__real@3f59999a
PUBLIC	??_C@_0BO@ELBLCKBL@RecordInitResultWnd?3?3OnRender?$AA@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
EXTRN	__imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z:PROC
EXTRN	__imp_?GetSingleton@ioStringManager@@SAAAV1@XZ:PROC
EXTRN	__imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ:PROC
EXTRN	__imp_?SetTextColor@ioFontManager@@QAEXK@Z:PROC
EXTRN	__imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z:PROC
EXTRN	__imp_?SetBkColor@ioFontManager@@QAEXHHH@Z:PROC
EXTRN	__imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z:PROC
EXTRN	__imp_?GetSingleton@ioFontManager@@SAAAV1@XZ:PROC
EXTRN	__imp_?GetDerivedPosY@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?GetDerivedPosX@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?OnRender@ioWnd@@MAEXXZ:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@3f59999a
CONST	SEGMENT
__real@3f59999a DD 03f59999ar			; 0.85
CONST	ENDS
;	COMDAT ??_C@_0BO@ELBLCKBL@RecordInitResultWnd?3?3OnRender?$AA@
CONST	SEGMENT
??_C@_0BO@ELBLCKBL@RecordInitResultWnd?3?3OnRender?$AA@ DB 'RecordInitRes'
	DB	'ultWnd::OnRender', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?OnRender@RecordInitResultWnd@@MAEXXZ
_TEXT	SEGMENT
tv89 = -12						; size = 4
_iXPos$ = -8						; size = 4
_iYPos$ = -4						; size = 4
?OnRender@RecordInitResultWnd@@MAEXXZ PROC		; RecordInitResultWnd::OnRender, COMDAT
; _this$ = ecx

; 298  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b d9		 mov	 ebx, ecx

; 299  : 	ioWnd::OnRender();

  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?OnRender@ioWnd@@MAEXXZ

; 300  : 
; 301  : 	int iXPos = GetDerivedPosX();

  00011	8b cb		 mov	 ecx, ebx
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosX@ioWnd@@QBEHXZ
  00019	8b f0		 mov	 esi, eax

; 302  : 	int iYPos = GetDerivedPosY();

  0001b	8b cb		 mov	 ecx, ebx
  0001d	89 75 f8	 mov	 DWORD PTR _iXPos$[ebp], esi
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosY@ioWnd@@QBEHXZ

; 303  : 
; 304  : 	enum
; 305  : 	{
; 306  : 		ICON_X		= 129,
; 307  : 		ICON_Y		= 105,
; 308  : 
; 309  : 		TITLE_X		= 129,
; 310  : 		TITLE_Y		= 152,
; 311  : 
; 312  : 		LIST_X		= 27,
; 313  : 		RIGHT_X		= 227,
; 314  : 		LIST_Y		= 206,
; 315  : 		LIST_GAP	= 21,
; 316  : 
; 317  : 		FINAL_DESC_X	= 129,
; 318  : 		FINAL_DESC_Y	= 421,
; 319  : 	};
; 320  : 
; 321  : 	if( m_pBackEffect )

  00026	33 ff		 xor	 edi, edi
  00028	8b d0		 mov	 edx, eax
  0002a	89 55 fc	 mov	 DWORD PTR _iYPos$[ebp], edx
  0002d	39 bb 68 01 00
	00		 cmp	 DWORD PTR [ebx+360], edi
  00033	74 3a		 je	 SHORT $LN7@OnRender

; 322  : 		m_pBackEffect->Render( iXPos+ICON_X, iYPos+ICON_Y, UI_RENDER_MULTIPLY );

  00035	8b 83 68 01 00
	00		 mov	 eax, DWORD PTR [ebx+360]
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	57		 push	 edi
  0003e	57		 push	 edi
  0003f	57		 push	 edi
  00040	6a 08		 push	 8
  00042	51		 push	 ecx
  00043	83 c2 69	 add	 edx, 105		; 00000069H
  00046	0f 57 c0	 xorps	 xmm0, xmm0
  00049	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0004d	51		 push	 ecx
  0004e	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00054	8d 96 81 00 00
	00		 lea	 edx, DWORD PTR [esi+129]
  0005a	0f 57 c0	 xorps	 xmm0, xmm0
  0005d	8b c8		 mov	 ecx, eax
  0005f	8b 00		 mov	 eax, DWORD PTR [eax]
  00061	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00065	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006a	ff 10		 call	 DWORD PTR [eax]
  0006c	8b 55 fc	 mov	 edx, DWORD PTR _iYPos$[ebp]
$LN7@OnRender:

; 323  : 
; 324  : 	if( m_pIcon )

  0006f	39 bb 64 01 00
	00		 cmp	 DWORD PTR [ebx+356], edi
  00075	74 32		 je	 SHORT $LN6@OnRender

; 325  : 		m_pIcon->Render( iXPos+ICON_X, iYPos+ICON_Y );

  00077	8b 8b 64 01 00
	00		 mov	 ecx, DWORD PTR [ebx+356]
  0007d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0007f	57		 push	 edi
  00080	57		 push	 edi
  00081	57		 push	 edi
  00082	57		 push	 edi
  00083	0f 57 c0	 xorps	 xmm0, xmm0
  00086	51		 push	 ecx
  00087	83 c2 69	 add	 edx, 105		; 00000069H
  0008a	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0008e	51		 push	 ecx
  0008f	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00095	81 c6 81 00 00
	00		 add	 esi, 129		; 00000081H
  0009b	0f 57 c0	 xorps	 xmm0, xmm0
  0009e	f3 0f 2a c6	 cvtsi2ss xmm0, esi
  000a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a7	ff 10		 call	 DWORD PTR [eax]
$LN6@OnRender:

; 326  : 
; 327  : 	// Title
; 328  : 	g_FontMgr.SetTextStyle( TS_NORMAL );

  000a9	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?GetSingleton@ioFontManager@@SAAAV1@XZ
  000af	57		 push	 edi
  000b0	ff d6		 call	 esi
  000b2	8b c8		 mov	 ecx, eax
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z

; 329  : 	g_FontMgr.SetBkColor( 0, 0, 0 );

  000ba	57		 push	 edi
  000bb	57		 push	 edi
  000bc	57		 push	 edi
  000bd	ff d6		 call	 esi
  000bf	8b c8		 mov	 ecx, eax
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetBkColor@ioFontManager@@QAEXHHH@Z

; 330  : 	g_FontMgr.SetAlignType( TAT_CENTER );

  000c7	6a 01		 push	 1
  000c9	ff d6		 call	 esi
  000cb	8b c8		 mov	 ecx, eax
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 331  : 	g_FontMgr.SetTextColor( TCT_DEFAULT_DARKGRAY );

  000d3	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  000d8	ff d6		 call	 esi
  000da	8b c8		 mov	 ecx, eax
  000dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 332  : 	if( m_dwEtcType == ioEtcItem::EIT_ETC_BATTLE_RECORD_INIT )

  000e2	8b 83 60 01 00
	00		 mov	 eax, DWORD PTR [ebx+352]
  000e8	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  000ee	3d f2 c6 2d 00	 cmp	 eax, 3000050		; 002dc6f2H
  000f3	75 05		 jne	 SHORT $LN5@OnRender

; 333  : 		g_FontMgr.PrintText( iXPos+TITLE_X, iYPos+TITLE_Y, FONT_SIZE_17, STR(1) );

  000f5	57		 push	 edi
  000f6	6a 01		 push	 1
  000f8	eb 16		 jmp	 SHORT $LN10@OnRender
$LN5@OnRender:

; 334  : 	else if( m_dwEtcType == ioEtcItem::EIT_ETC_LADDER_RECORD_INIT )

  000fa	3d f3 c6 2d 00	 cmp	 eax, 3000051		; 002dc6f3H
  000ff	75 05		 jne	 SHORT $LN3@OnRender

; 335  : 		g_FontMgr.PrintText( iXPos+TITLE_X, iYPos+TITLE_Y, FONT_SIZE_17, STR(2) );

  00101	57		 push	 edi
  00102	6a 02		 push	 2
  00104	eb 0a		 jmp	 SHORT $LN10@OnRender
$LN3@OnRender:

; 336  : 	else if( m_dwEtcType == ioEtcItem::EIT_ETC_HERO_RECORD_INIT )

  00106	3d f4 c6 2d 00	 cmp	 eax, 3000052		; 002dc6f4H
  0010b	75 5e		 jne	 SHORT $LN1@OnRender

; 337  : 		g_FontMgr.PrintText( iXPos+TITLE_X, iYPos+TITLE_Y, FONT_SIZE_17, STR(3) );

  0010d	57		 push	 edi
  0010e	6a 03		 push	 3
$LN10@OnRender:
  00110	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00115	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@ELBLCKBL@RecordInitResultWnd?3?3OnRender?$AA@
  0011a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioStringManager@@SAAAV1@XZ
  00120	8b c8		 mov	 ecx, eax
  00122	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  00128	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f59999a
  00130	50		 push	 eax
  00131	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  00134	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00137	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0013d	05 98 00 00 00	 add	 eax, 152		; 00000098H
  00142	0f 57 c0	 xorps	 xmm0, xmm0
  00145	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00149	8b 45 f8	 mov	 eax, DWORD PTR _iXPos$[ebp]
  0014c	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00152	05 81 00 00 00	 add	 eax, 129		; 00000081H
  00157	0f 57 c0	 xorps	 xmm0, xmm0
  0015a	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0015e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00163	ff d6		 call	 esi
  00165	50		 push	 eax
  00166	ff d3		 call	 ebx
  00168	83 c4 14	 add	 esp, 20			; 00000014H
$LN1@OnRender:

; 338  : 
; 339  : 	// Last
; 340  : 	g_FontMgr.SetTextStyle( TS_NORMAL );

  0016b	57		 push	 edi
  0016c	ff d6		 call	 esi
  0016e	8b c8		 mov	 ecx, eax
  00170	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z

; 341  : 	g_FontMgr.SetBkColor( 0, 0, 0 );

  00176	57		 push	 edi
  00177	57		 push	 edi
  00178	57		 push	 edi
  00179	ff d6		 call	 esi
  0017b	8b c8		 mov	 ecx, eax
  0017d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetBkColor@ioFontManager@@QAEXHHH@Z

; 342  : 	g_FontMgr.SetAlignType( TAT_CENTER );

  00183	6a 01		 push	 1
  00185	ff d6		 call	 esi
  00187	8b c8		 mov	 ecx, eax
  00189	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 343  : 	g_FontMgr.SetTextColor( TCT_DEFAULT_GREEN );

  0018f	68 22 72 11 ff	 push	 -15633886		; ff117222H
  00194	ff d6		 call	 esi
  00196	8b c8		 mov	 ecx, eax
  00198	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 344  : 	g_FontMgr.PrintText( iXPos+FINAL_DESC_X, iYPos+FINAL_DESC_Y, FONT_SIZE_17, STR(4) );

  0019e	57		 push	 edi
  0019f	6a 04		 push	 4
  001a1	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  001a6	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@ELBLCKBL@RecordInitResultWnd?3?3OnRender?$AA@
  001ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioStringManager@@SAAAV1@XZ
  001b1	8b c8		 mov	 ecx, eax
  001b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  001b9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f59999a
  001c1	50		 push	 eax
  001c2	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  001c5	83 ec 0c	 sub	 esp, 12			; 0000000cH
  001c8	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  001ce	05 a5 01 00 00	 add	 eax, 421		; 000001a5H
  001d3	0f 57 c0	 xorps	 xmm0, xmm0
  001d6	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  001da	8b 45 f8	 mov	 eax, DWORD PTR _iXPos$[ebp]
  001dd	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  001e3	05 81 00 00 00	 add	 eax, 129		; 00000081H
  001e8	0f 57 c0	 xorps	 xmm0, xmm0
  001eb	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  001ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f4	ff d6		 call	 esi
  001f6	50		 push	 eax
  001f7	ff d3		 call	 ebx
  001f9	83 c4 14	 add	 esp, 20			; 00000014H
  001fc	5f		 pop	 edi
  001fd	5e		 pop	 esi
  001fe	5b		 pop	 ebx

; 345  : }

  001ff	c9		 leave
  00200	c3		 ret	 0
?OnRender@RecordInitResultWnd@@MAEXXZ ENDP		; RecordInitResultWnd::OnRender
_TEXT	ENDS
PUBLIC	?GetSingleton@?$Singleton@VioEtcItemManager@@@@SAAAVioEtcItemManager@@XZ ; Singleton<ioEtcItemManager>::GetSingleton
EXTRN	?ms_Singleton@?$Singleton@VioEtcItemManager@@@@1PAVioEtcItemManager@@A:DWORD ; Singleton<ioEtcItemManager>::ms_Singleton
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
;	COMDAT ?GetSingleton@?$Singleton@VioEtcItemManager@@@@SAAAVioEtcItemManager@@XZ
_TEXT	SEGMENT
?GetSingleton@?$Singleton@VioEtcItemManager@@@@SAAAVioEtcItemManager@@XZ PROC ; Singleton<ioEtcItemManager>::GetSingleton, COMDAT

; 42   : 		assert( ms_Singleton );
; 43   : 		return (*ms_Singleton);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioEtcItemManager@@@@1PAVioEtcItemManager@@A ; Singleton<ioEtcItemManager>::ms_Singleton

; 44   : 	}

  00005	c3		 ret	 0
?GetSingleton@?$Singleton@VioEtcItemManager@@@@SAAAVioEtcItemManager@@XZ ENDP ; Singleton<ioEtcItemManager>::GetSingleton
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
PUBLIC	?GetInventorySubManual@ioEtcItem@@QBEHXZ	; ioEtcItem::GetInventorySubManual
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioetcitem.h
;	COMDAT ?GetInventorySubManual@ioEtcItem@@QBEHXZ
_TEXT	SEGMENT
?GetInventorySubManual@ioEtcItem@@QBEHXZ PROC		; ioEtcItem::GetInventorySubManual, COMDAT
; _this$ = ecx

; 435  : 	inline int     GetInventorySubManual() const { return m_iInventorySubManual; }

  00000	8b 41 4c	 mov	 eax, DWORD PTR [ecx+76]
  00003	c3		 ret	 0
?GetInventorySubManual@ioEtcItem@@QBEHXZ ENDP		; ioEtcItem::GetInventorySubManual
_TEXT	ENDS
PUBLIC	?GetName@ioEtcItem@@QBEABVioHashString@@XZ	; ioEtcItem::GetName
; Function compile flags: /Ogsp
;	COMDAT ?GetName@ioEtcItem@@QBEABVioHashString@@XZ
_TEXT	SEGMENT
?GetName@ioEtcItem@@QBEABVioHashString@@XZ PROC		; ioEtcItem::GetName, COMDAT
; _this$ = ecx

; 465  : 	inline const ioHashString& GetName() const { return m_Name; }

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetName@ioEtcItem@@QBEABVioHashString@@XZ ENDP		; ioEtcItem::GetName
_TEXT	ENDS
PUBLIC	?GetIconName@ioEtcItem@@QBEABVioHashString@@XZ	; ioEtcItem::GetIconName
; Function compile flags: /Ogsp
;	COMDAT ?GetIconName@ioEtcItem@@QBEABVioHashString@@XZ
_TEXT	SEGMENT
?GetIconName@ioEtcItem@@QBEABVioHashString@@XZ PROC	; ioEtcItem::GetIconName, COMDAT
; _this$ = ecx

; 467  : 	inline const ioHashString& GetIconName() const { return m_IconName; }

  00000	8d 81 60 01 00
	00		 lea	 eax, DWORD PTR [ecx+352]
  00006	c3		 ret	 0
?GetIconName@ioEtcItem@@QBEABVioHashString@@XZ ENDP	; ioEtcItem::GetIconName
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GRecordInitWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GRecordInitWnd@@UAEPAXI@Z PROC			; RecordInitWnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1RecordInitWnd@@UAE@XZ ; RecordInitWnd::~RecordInitWnd
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GRecordInitWnd@@UAEPAXI@Z ENDP			; RecordInitWnd::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_R0?AVioEdit@@@8				; ioEdit `RTTI Type Descriptor'
PUBLIC	__real@4f800000
PUBLIC	??_R0?AVInventoryIconBtn@@@8			; InventoryIconBtn `RTTI Type Descriptor'
PUBLIC	?ShowRecordInitWnd@RecordInitWnd@@QAEXK@Z	; RecordInitWnd::ShowRecordInitWnd
EXTRN	__imp_?SetString@ioInputBox@@QAEXPBD@Z:PROC
EXTRN	__imp_?GetSingleton@ioInputBox@@SAAAV1@XZ:PROC
EXTRN	__imp_?ClearString@ioEdit@@QAEXXZ:PROC
EXTRN	__imp_??4ioHashString@@QAEAAV0@ABV0@@Z:PROC
EXTRN	?SetIcon@InventoryIconBtn@@QAE_NPAVioUIRenderImage@@MMHW4NumberType@1@@Z:PROC ; InventoryIconBtn::SetIcon
EXTRN	__imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z:PROC
EXTRN	__imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ:PROC
EXTRN	__imp_?FindChildWnd@ioWnd@@QAEPAV1@K@Z:PROC
EXTRN	?FindEtcItem@ioEtcItemManager@@QAEPAVioEtcItem@@K@Z:PROC ; ioEtcItemManager::FindEtcItem
EXTRN	__imp_?Clear@ioHashString@@QAEXXZ:PROC
EXTRN	__imp_?ShowWnd@ioWnd@@QAEXXZ:PROC
EXTRN	?GetSingletonPtr@ioEtcInvenSubManualMgr@@SAPAV1@XZ:PROC ; ioEtcInvenSubManualMgr::GetSingletonPtr
EXTRN	___RTDynamicCast:PROC
;	COMDAT ??_R0?AVioEdit@@@8
_DATA	SEGMENT
??_R0?AVioEdit@@@8 DD FLAT:??_7type_info@@6B@		; ioEdit `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioEdit@@', 00H
_DATA	ENDS
;	COMDAT __real@4f800000
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
CONST	ENDS
;	COMDAT ??_R0?AVInventoryIconBtn@@@8
_DATA	SEGMENT
??_R0?AVInventoryIconBtn@@@8 DD FLAT:??_7type_info@@6B@	; InventoryIconBtn `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVInventoryIconBtn@@', 00H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\recordinitwnd.cpp
_DATA	ENDS
;	COMDAT ?ShowRecordInitWnd@RecordInitWnd@@QAEXK@Z
_TEXT	SEGMENT
tv246 = -4						; size = 4
tv244 = -4						; size = 4
_pIconBtn$508485 = 8					; size = 4
_dwEtcType$ = 8						; size = 4
?ShowRecordInitWnd@RecordInitWnd@@QAEXK@Z PROC		; RecordInitWnd::ShowRecordInitWnd, COMDAT
; _this$ = ecx

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 62   : 	m_dwEtcType = dwEtcType;

  00004	8b 45 08	 mov	 eax, DWORD PTR _dwEtcType$[ebp]
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	57		 push	 edi
  0000c	89 86 60 01 00
	00		 mov	 DWORD PTR [esi+352], eax

; 63   : 
; 64   : 	m_pManual = ioEtcInvenSubManualMgr::GetSingletonPtr();

  00012	e8 00 00 00 00	 call	 ?GetSingletonPtr@ioEtcInvenSubManualMgr@@SAPAV1@XZ ; ioEtcInvenSubManualMgr::GetSingletonPtr

; 65   : 
; 66   : 	ShowWnd();

  00017	8b ce		 mov	 ecx, esi
  00019	89 86 80 01 00
	00		 mov	 DWORD PTR [esi+384], eax
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ShowWnd@ioWnd@@QAEXXZ

; 67   : 	
; 68   : 	m_szTitle.Clear();

  00025	8d 8e 6c 01 00
	00		 lea	 ecx, DWORD PTR [esi+364]
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Clear@ioHashString@@QAEXXZ

; 69   : 	ioEtcItem *pItem = g_EtcItemMgr.FindEtcItem( m_dwEtcType );

  00031	ff b6 60 01 00
	00		 push	 DWORD PTR [esi+352]
  00037	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_Singleton@?$Singleton@VioEtcItemManager@@@@1PAVioEtcItemManager@@A ; Singleton<ioEtcItemManager>::ms_Singleton
  0003d	e8 00 00 00 00	 call	 ?FindEtcItem@ioEtcItemManager@@QAEPAVioEtcItem@@K@Z ; ioEtcItemManager::FindEtcItem
  00042	8b d8		 mov	 ebx, eax

; 70   : 	if( pItem )

  00044	33 ff		 xor	 edi, edi
  00046	3b df		 cmp	 ebx, edi
  00048	0f 84 8e 00 00
	00		 je	 $LN3@ShowRecord

; 71   : 	{
; 72   : 		InventoryIconBtn *pIconBtn = dynamic_cast<InventoryIconBtn*>(FindChildWnd(ID_ICON));

  0004e	57		 push	 edi
  0004f	68 00 00 00 00	 push	 OFFSET ??_R0?AVInventoryIconBtn@@@8
  00054	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWnd@@@8
  00059	57		 push	 edi
  0005a	6a 01		 push	 1
  0005c	8b ce		 mov	 ecx, esi
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindChildWnd@ioWnd@@QAEPAV1@K@Z
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ___RTDynamicCast
  0006a	83 c4 14	 add	 esp, 20			; 00000014H
  0006d	89 45 08	 mov	 DWORD PTR _pIconBtn$508485[ebp], eax

; 73   : 		if( pIconBtn )

  00070	3b c7		 cmp	 eax, edi
  00072	74 58		 je	 SHORT $LN2@ShowRecord

; 74   : 		{
; 75   : 			ioUIRenderImage *pImg = g_UIImageSetMgr.CreateImageByFullName( pItem->GetIconName() );

  00074	8d 83 60 01 00
	00		 lea	 eax, DWORD PTR [ebx+352]
  0007a	57		 push	 edi
  0007b	50		 push	 eax
  0007c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ
  00082	8b c8		 mov	 ecx, eax
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z
  0008a	8b c8		 mov	 ecx, eax

; 76   : 			pIconBtn->SetIcon( pImg, FLOAT1, FLOAT1 );

  0008c	b8 01 00 00 00	 mov	 eax, 1
  00091	8b d0		 mov	 edx, eax
  00093	b8 01 00 00 00	 mov	 eax, 1
  00098	57		 push	 edi
  00099	89 55 fc	 mov	 DWORD PTR tv246[ebp], edx
  0009c	db 45 fc	 fild	 DWORD PTR tv246[ebp]
  0009f	57		 push	 edi
  000a0	85 d2		 test	 edx, edx
  000a2	79 06		 jns	 SHORT $LN16@ShowRecord
  000a4	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN16@ShowRecord:
  000aa	51		 push	 ecx
  000ab	51		 push	 ecx
  000ac	89 45 fc	 mov	 DWORD PTR tv244[ebp], eax
  000af	d9 5c 24 04	 fstp	 DWORD PTR [esp+4]
  000b3	db 45 fc	 fild	 DWORD PTR tv244[ebp]
  000b6	85 c0		 test	 eax, eax
  000b8	79 06		 jns	 SHORT $LN17@ShowRecord
  000ba	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN17@ShowRecord:
  000c0	d9 1c 24	 fstp	 DWORD PTR [esp]
  000c3	51		 push	 ecx
  000c4	8b 4d 08	 mov	 ecx, DWORD PTR _pIconBtn$508485[ebp]
  000c7	e8 00 00 00 00	 call	 ?SetIcon@InventoryIconBtn@@QAE_NPAVioUIRenderImage@@MMHW4NumberType@1@@Z ; InventoryIconBtn::SetIcon
$LN2@ShowRecord:

; 77   : 		}
; 78   : 		m_szTitle = pItem->GetName();

  000cc	83 c3 04	 add	 ebx, 4
  000cf	53		 push	 ebx
  000d0	8d 8e 6c 01 00
	00		 lea	 ecx, DWORD PTR [esi+364]
  000d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
$LN3@ShowRecord:

; 79   : 	}
; 80   : 
; 81   : 	ioEdit *pEdit = dynamic_cast<ioEdit*>( FindChildWnd( ID_INIT_EDIT ) );

  000dc	57		 push	 edi
  000dd	68 00 00 00 00	 push	 OFFSET ??_R0?AVioEdit@@@8
  000e2	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWnd@@@8
  000e7	57		 push	 edi
  000e8	6a 02		 push	 2
  000ea	8b ce		 mov	 ecx, esi
  000ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindChildWnd@ioWnd@@QAEPAV1@K@Z
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 ___RTDynamicCast
  000f8	8b d8		 mov	 ebx, eax
  000fa	83 c4 14	 add	 esp, 20			; 00000014H

; 82   : 	if( pEdit && pEdit->IsShow() )

  000fd	3b df		 cmp	 ebx, edi
  000ff	74 41		 je	 SHORT $LN1@ShowRecord
  00101	8b cb		 mov	 ecx, ebx
  00103	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsShow@ioWnd@@QBE_NXZ
  00109	84 c0		 test	 al, al
  0010b	74 35		 je	 SHORT $LN1@ShowRecord

; 83   : 	{		
; 84   : 		pEdit->ClearString();

  0010d	8b cb		 mov	 ecx, ebx
  0010f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ClearString@ioEdit@@QAEXXZ

; 85   : 		pEdit->SetKeyFocus();

  00115	8b 03		 mov	 eax, DWORD PTR [ebx]
  00117	8b cb		 mov	 ecx, ebx
  00119	ff 90 30 01 00
	00		 call	 DWORD PTR [eax+304]

; 86   : 		g_InputBox.SetString( "" );

  0011f	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00124	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioInputBox@@SAAAV1@XZ
  0012a	8b c8		 mov	 ecx, eax
  0012c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetString@ioInputBox@@QAEXPBD@Z

; 87   : 		pEdit->KillKeyFocus();

  00132	8b 03		 mov	 eax, DWORD PTR [ebx]
  00134	8b cb		 mov	 ecx, ebx
  00136	ff 90 34 01 00
	00		 call	 DWORD PTR [eax+308]

; 88   : 		m_pInitEdit = pEdit;		

  0013c	89 9e 68 01 00
	00		 mov	 DWORD PTR [esi+360], ebx
$LN1@ShowRecord:
  00142	5f		 pop	 edi
  00143	5e		 pop	 esi
  00144	5b		 pop	 ebx

; 89   : 	}
; 90   : }

  00145	c9		 leave
  00146	c2 04 00	 ret	 4
?ShowRecordInitWnd@RecordInitWnd@@QAEXK@Z ENDP		; RecordInitWnd::ShowRecordInitWnd
_TEXT	ENDS
PUBLIC	??_C@_0BL@JPHPHIOF@RecordInitWnd?3?3iwm_command?$AA@ ; `string'
EXTRN	__imp_?m_pKeyFocusEdit@ioEdit@@2PAV1@A:DWORD
EXTRN	?SetMsgBox@ioSP2GUIManager@@QAAXHPAVioWnd@@PBDZZ:PROC ; ioSP2GUIManager::SetMsgBox
EXTRN	?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ:PROC	; ioSP2GUIManager::GetSingleton
EXTRN	__imp_?GetText@ioEdit@@QBEPBDXZ:PROC
;	COMDAT ??_C@_0BL@JPHPHIOF@RecordInitWnd?3?3iwm_command?$AA@
CONST	SEGMENT
??_C@_0BL@JPHPHIOF@RecordInitWnd?3?3iwm_command?$AA@ DB 'RecordInitWnd::i'
	DB	'wm_command', 00H				; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?iwm_command@RecordInitWnd@@UAEXPAVioWnd@@HK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pWnd$ = 8						; size = 4
tv186 = 12						; size = 4
_cmd$ = 12						; size = 4
_pEdit$508552 = 16					; size = 4
_param$ = 16						; size = 4
?iwm_command@RecordInitWnd@@UAEXPAVioWnd@@HK@Z PROC	; RecordInitWnd::iwm_command, COMDAT
; _this$ = ecx

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 121  : 	DWORD dwID = pWnd->GetID();

  00007	8b 7d 08	 mov	 edi, DWORD PTR _pWnd$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	8b cf		 mov	 ecx, edi
  0000e	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetID@ioWnd@@QBEKXZ

; 122  : 	switch( dwID )

  00017	48		 dec	 eax
  00018	48		 dec	 eax
  00019	0f 84 ba 00 00
	00		 je	 $LN5@iwm_comman
  0001f	48		 dec	 eax
  00020	0f 85 f6 00 00
	00		 jne	 $LN3@iwm_comman

; 123  : 	{
; 124  : 	case ID_INIT_BTN:
; 125  : 		if( cmd == IOBN_BTNUP )

  00026	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  0002a	0f 85 ec 00 00
	00		 jne	 $LN3@iwm_comman

; 126  : 		{
; 127  : 			ioEdit *pEdit = dynamic_cast<ioEdit*>(m_pInitEdit);

  00030	33 ff		 xor	 edi, edi
  00032	57		 push	 edi
  00033	68 00 00 00 00	 push	 OFFSET ??_R0?AVioEdit@@@8
  00038	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWnd@@@8
  0003d	57		 push	 edi
  0003e	ff b6 68 01 00
	00		 push	 DWORD PTR [esi+360]
  00044	e8 00 00 00 00	 call	 ___RTDynamicCast

; 128  : 			if( strcmp( pEdit->GetText(), STR(1) ) != 0 )

  00049	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?GetSingleton@ioStringManager@@SAAAV1@XZ
  0004f	83 c4 14	 add	 esp, 20			; 00000014H
  00052	57		 push	 edi
  00053	6a 01		 push	 1
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0005a	bb 00 00 00 00	 mov	 ebx, OFFSET ??_C@_0BL@JPHPHIOF@RecordInitWnd?3?3iwm_command?$AA@
  0005f	53		 push	 ebx
  00060	89 45 10	 mov	 DWORD PTR _pEdit$508552[ebp], eax
  00063	ff d6		 call	 esi
  00065	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  0006b	8b c8		 mov	 ecx, eax
  0006d	ff d7		 call	 edi
  0006f	8b 4d 10	 mov	 ecx, DWORD PTR _pEdit$508552[ebp]
  00072	89 45 0c	 mov	 DWORD PTR tv186[ebp], eax
  00075	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetText@ioEdit@@QBEPBDXZ
$LL13@iwm_comman:
  0007b	8a 08		 mov	 cl, BYTE PTR [eax]
  0007d	8b 55 0c	 mov	 edx, DWORD PTR tv186[ebp]
  00080	3a 0a		 cmp	 cl, BYTE PTR [edx]
  00082	75 1d		 jne	 SHORT $LN14@iwm_comman
  00084	84 c9		 test	 cl, cl
  00086	74 15		 je	 SHORT $LN15@iwm_comman
  00088	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  0008b	3a 4a 01	 cmp	 cl, BYTE PTR [edx+1]
  0008e	75 11		 jne	 SHORT $LN14@iwm_comman
  00090	83 c2 02	 add	 edx, 2
  00093	83 c0 02	 add	 eax, 2
  00096	89 55 0c	 mov	 DWORD PTR tv186[ebp], edx
  00099	84 c9		 test	 cl, cl
  0009b	75 de		 jne	 SHORT $LL13@iwm_comman
$LN15@iwm_comman:
  0009d	33 c0		 xor	 eax, eax
  0009f	eb 05		 jmp	 SHORT $LN16@iwm_comman
$LN14@iwm_comman:
  000a1	1b c0		 sbb	 eax, eax
  000a3	83 d8 ff	 sbb	 eax, -1
$LN16@iwm_comman:
  000a6	85 c0		 test	 eax, eax
  000a8	74 25		 je	 SHORT $LN6@iwm_comman

; 129  : 			{
; 130  : 				g_GUIMgr.SetMsgBox( MB_OK, NULL, STR(2) );			

  000aa	6a 00		 push	 0
  000ac	6a 02		 push	 2
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  000b3	53		 push	 ebx
  000b4	ff d6		 call	 esi
  000b6	8b c8		 mov	 ecx, eax
  000b8	ff d7		 call	 edi
  000ba	50		 push	 eax
  000bb	6a 00		 push	 0
  000bd	6a 00		 push	 0
  000bf	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ?SetMsgBox@ioSP2GUIManager@@QAAXHPAVioWnd@@PBDZZ ; ioSP2GUIManager::SetMsgBox
  000ca	83 c4 10	 add	 esp, 16			; 00000010H

; 131  : 				return;

  000cd	eb 4d		 jmp	 SHORT $LN3@iwm_comman
$LN6@iwm_comman:

; 132  : 			}
; 133  : 
; 134  : 			SendRecordInit();

  000cf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	e8 00 00 00 00	 call	 ?SendRecordInit@RecordInitWnd@@IAEXXZ ; RecordInitWnd::SendRecordInit

; 135  : 		}
; 136  : 		break;

  000d7	eb 43		 jmp	 SHORT $LN3@iwm_comman
$LN5@iwm_comman:

; 137  : 	case ID_INIT_EDIT:
; 138  : 		if( cmd == IOED_INPUT )

  000d9	83 7d 0c 22	 cmp	 DWORD PTR _cmd$[ebp], 34 ; 00000022H
  000dd	75 3d		 jne	 SHORT $LN3@iwm_comman

; 139  : 		{
; 140  : 			if( param == 0 || param == 1 )

  000df	33 c9		 xor	 ecx, ecx
  000e1	39 4d 10	 cmp	 DWORD PTR _param$[ebp], ecx
  000e4	74 06		 je	 SHORT $LN2@iwm_comman
  000e6	83 7d 10 01	 cmp	 DWORD PTR _param$[ebp], 1
  000ea	75 30		 jne	 SHORT $LN3@iwm_comman
$LN2@iwm_comman:

; 141  : 			{
; 142  : 				if( ioEdit::m_pKeyFocusEdit != pWnd )

  000ec	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?m_pKeyFocusEdit@ioEdit@@2PAV1@A
  000f1	39 38		 cmp	 DWORD PTR [eax], edi
  000f3	74 08		 je	 SHORT $LN1@iwm_comman

; 143  : 					m_pPreEdit = ioEdit::m_pKeyFocusEdit;

  000f5	8b 00		 mov	 eax, DWORD PTR [eax]
  000f7	89 86 64 01 00
	00		 mov	 DWORD PTR [esi+356], eax
$LN1@iwm_comman:

; 144  : 
; 145  : 				ioEdit *pEdit = dynamic_cast<ioEdit*>(pWnd);

  000fd	51		 push	 ecx
  000fe	68 00 00 00 00	 push	 OFFSET ??_R0?AVioEdit@@@8
  00103	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWnd@@@8
  00108	51		 push	 ecx
  00109	57		 push	 edi
  0010a	e8 00 00 00 00	 call	 ___RTDynamicCast

; 146  : 				pEdit->SetKeyFocus();

  0010f	8b 10		 mov	 edx, DWORD PTR [eax]
  00111	83 c4 14	 add	 esp, 20			; 00000014H
  00114	8b c8		 mov	 ecx, eax
  00116	ff 92 30 01 00
	00		 call	 DWORD PTR [edx+304]
$LN3@iwm_comman:
  0011c	5f		 pop	 edi
  0011d	5e		 pop	 esi
  0011e	5b		 pop	 ebx

; 147  : 			}
; 148  : 		}
; 149  : 		break;
; 150  : 	}
; 151  : }

  0011f	c9		 leave
  00120	c2 0c 00	 ret	 12			; 0000000cH
?iwm_command@RecordInitWnd@@UAEXPAVioWnd@@HK@Z ENDP	; RecordInitWnd::iwm_command
_TEXT	ENDS
PUBLIC	__real@434c0000
PUBLIC	?PrintManual@RecordInitWnd@@IAEXHHM@Z		; RecordInitWnd::PrintManual
EXTRN	??1ioComplexStringPrinter@@QAE@XZ:PROC		; ioComplexStringPrinter::~ioComplexStringPrinter
EXTRN	?ClearList@ioComplexStringPrinter@@QAEXXZ:PROC	; ioComplexStringPrinter::ClearList
EXTRN	?PrintFullTextWidthCut@ioComplexStringPrinter@@QAEXMMW4TextAlignType@@ME@Z:PROC ; ioComplexStringPrinter::PrintFullTextWidthCut
EXTRN	??0ioComplexStringPrinter@@QAE@XZ:PROC		; ioComplexStringPrinter::ioComplexStringPrinter
;	COMDAT __real@434c0000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioetcitem.h
CONST	SEGMENT
__real@434c0000 DD 0434c0000r			; 204
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PrintManual@RecordInitWnd@@IAEXHHM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PrintManual@RecordInitWnd@@IAEXHHM@Z$0
__ehfuncinfo$?PrintManual@RecordInitWnd@@IAEXHHM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PrintManual@RecordInitWnd@@IAEXHHM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\recordinitwnd.cpp
xdata$x	ENDS
;	COMDAT ?PrintManual@RecordInitWnd@@IAEXHHM@Z
_TEXT	SEGMENT
_kPrinter$ = -48					; size = 32
_iMaxLine$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
tv196 = 8						; size = 4
_a_iXPos$ = 8						; size = 4
_a_iYPos$ = 12						; size = 4
_fScale$ = 16						; size = 4
?PrintManual@RecordInitWnd@@IAEXHHM@Z PROC		; RecordInitWnd::PrintManual, COMDAT
; _this$ = ecx

; 219  : {

  00000	6a 24		 push	 36			; 00000024H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?PrintManual@RecordInitWnd@@IAEXHHM@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 220  : 	if( !m_pManual )

  0000e	83 be 80 01 00
	00 00		 cmp	 DWORD PTR [esi+384], 0
  00015	0f 84 c9 00 00
	00		 je	 $LN6@PrintManua

; 221  : 		return;
; 222  : 
; 223  : 
; 224  : 	ioEtcItem *pItem = g_EtcItemMgr.FindEtcItem( m_dwEtcType );

  0001b	ff b6 60 01 00
	00		 push	 DWORD PTR [esi+352]
  00021	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_Singleton@?$Singleton@VioEtcItemManager@@@@1PAVioEtcItemManager@@A ; Singleton<ioEtcItemManager>::ms_Singleton
  00027	e8 00 00 00 00	 call	 ?FindEtcItem@ioEtcItemManager@@QAEPAVioEtcItem@@K@Z ; ioEtcItemManager::FindEtcItem

; 225  : 	if( !pItem ) return;

  0002c	85 c0		 test	 eax, eax
  0002e	0f 84 b0 00 00
	00		 je	 $LN6@PrintManua

; 226  : 
; 227  : 	int iSubManual = pItem->GetInventorySubManual() - 1;

  00034	8b 78 4c	 mov	 edi, DWORD PTR [eax+76]

; 228  : 	ioComplexStringPrinter kPrinter;

  00037	8d 4d d0	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  0003a	4f		 dec	 edi
  0003b	e8 00 00 00 00	 call	 ??0ioComplexStringPrinter@@QAE@XZ ; ioComplexStringPrinter::ioComplexStringPrinter

; 229  : 	int iMaxLine = m_pManual->GetMaxLine( iSubManual );

  00040	8b 8e 80 01 00
	00		 mov	 ecx, DWORD PTR [esi+384]
  00046	8b 01		 mov	 eax, DWORD PTR [ecx]
  00048	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0004c	57		 push	 edi
  0004d	ff 50 08	 call	 DWORD PTR [eax+8]

; 230  : 	for(int iLine = 1; iLine < iMaxLine; iLine++)

  00050	33 db		 xor	 ebx, ebx
  00052	43		 inc	 ebx
  00053	89 45 f0	 mov	 DWORD PTR _iMaxLine$[ebp], eax
  00056	3b c3		 cmp	 eax, ebx
  00058	7e 7e		 jle	 SHORT $LN1@PrintManua
  0005a	66 0f 6e 45 08	 movd	 xmm0, DWORD PTR _a_iXPos$[ebp]
  0005f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00062	f3 0f 11 45 08	 movss	 DWORD PTR tv196[ebp], xmm0
$LL3@PrintManua:

; 231  : 	{
; 232  : 		m_pManual->SetPrinter( iSubManual, iLine, fScale, kPrinter);

  00067	8b 8e 80 01 00
	00		 mov	 ecx, DWORD PTR [esi+384]
  0006d	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fScale$[ebp]
  00072	8b 01		 mov	 eax, DWORD PTR [ecx]
  00074	8d 55 d0	 lea	 edx, DWORD PTR _kPrinter$[ebp]
  00077	52		 push	 edx
  00078	51		 push	 ecx
  00079	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007e	53		 push	 ebx
  0007f	57		 push	 edi
  00080	ff 50 10	 call	 DWORD PTR [eax+16]

; 233  : 		a_iYPos += m_pManual->GetSpaceLine( iSubManual, iLine);

  00083	8b 8e 80 01 00
	00		 mov	 ecx, DWORD PTR [esi+384]
  00089	8b 01		 mov	 eax, DWORD PTR [ecx]
  0008b	53		 push	 ebx
  0008c	57		 push	 edi
  0008d	ff 50 0c	 call	 DWORD PTR [eax+12]

; 234  : 		kPrinter.PrintFullTextWidthCut( a_iXPos, a_iYPos, TAT_LEFT, DESC_WIDTH );

  00090	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@434c0000
  00098	01 45 0c	 add	 DWORD PTR _a_iYPos$[ebp], eax
  0009b	68 ff 00 00 00	 push	 255			; 000000ffH
  000a0	51		 push	 ecx
  000a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a6	66 0f 6e 45 0c	 movd	 xmm0, DWORD PTR _a_iYPos$[ebp]
  000ab	6a 00		 push	 0
  000ad	51		 push	 ecx
  000ae	51		 push	 ecx
  000af	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000b2	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000b8	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR tv196[ebp]
  000bd	8d 4d d0	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  000c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c5	e8 00 00 00 00	 call	 ?PrintFullTextWidthCut@ioComplexStringPrinter@@QAEXMMW4TextAlignType@@ME@Z ; ioComplexStringPrinter::PrintFullTextWidthCut

; 235  : 		kPrinter.ClearList();

  000ca	8d 4d d0	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  000cd	e8 00 00 00 00	 call	 ?ClearList@ioComplexStringPrinter@@QAEXXZ ; ioComplexStringPrinter::ClearList
  000d2	43		 inc	 ebx
  000d3	3b 5d f0	 cmp	 ebx, DWORD PTR _iMaxLine$[ebp]
  000d6	7c 8f		 jl	 SHORT $LL3@PrintManua
$LN1@PrintManua:

; 236  : 	}
; 237  : }

  000d8	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000dc	8d 4d d0	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  000df	e8 00 00 00 00	 call	 ??1ioComplexStringPrinter@@QAE@XZ ; ioComplexStringPrinter::~ioComplexStringPrinter
$LN6@PrintManua:
  000e4	e8 00 00 00 00	 call	 __EH_epilog3
  000e9	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PrintManual@RecordInitWnd@@IAEXHHM@Z$0:
  00000	8d 4d d0	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioComplexStringPrinter@@QAE@XZ ; ioComplexStringPrinter::~ioComplexStringPrinter
__ehhandler$?PrintManual@RecordInitWnd@@IAEXHHM@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a cc	 mov	 ecx, DWORD PTR [edx-52]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PrintManual@RecordInitWnd@@IAEXHHM@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PrintManual@RecordInitWnd@@IAEXHHM@Z ENDP		; RecordInitWnd::PrintManual
; Function compile flags: /Ogsp
;	COMDAT ??_GRecordInitResultWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GRecordInitResultWnd@@UAEPAXI@Z PROC			; RecordInitResultWnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1RecordInitResultWnd@@UAE@XZ ; RecordInitResultWnd::~RecordInitResultWnd
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@2
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@2:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GRecordInitResultWnd@@UAEPAXI@Z ENDP			; RecordInitResultWnd::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?SetInfoAndShow@RecordInitResultWnd@@QAEXK@Z	; RecordInitResultWnd::SetInfoAndShow
EXTRN	__imp_?SetChildInActive@ioWnd@@QAEXK@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ?SetInfoAndShow@RecordInitResultWnd@@QAEXK@Z
_TEXT	SEGMENT
_dwEtcType$ = 8						; size = 4
?SetInfoAndShow@RecordInitResultWnd@@QAEXK@Z PROC	; RecordInitResultWnd::SetInfoAndShow, COMDAT
; _this$ = ecx

; 266  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 267  : 	m_dwEtcType = dwEtcType;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwEtcType$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 268  : 
; 269  : 	SAFEDELETE(m_pIcon);

  00009	8b 8e 64 01 00
	00		 mov	 ecx, DWORD PTR [esi+356]
  0000f	89 86 60 01 00
	00		 mov	 DWORD PTR [esi+352], eax
  00015	85 c9		 test	 ecx, ecx
  00017	74 0e		 je	 SHORT $LN2@SetInfoAnd
  00019	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001b	6a 01		 push	 1
  0001d	ff 50 40	 call	 DWORD PTR [eax+64]
  00020	83 a6 64 01 00
	00 00		 and	 DWORD PTR [esi+356], 0
$LN2@SetInfoAnd:

; 270  : 	ioEtcItem *pItem = g_EtcItemMgr.FindEtcItem( m_dwEtcType );

  00027	ff b6 60 01 00
	00		 push	 DWORD PTR [esi+352]
  0002d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_Singleton@?$Singleton@VioEtcItemManager@@@@1PAVioEtcItemManager@@A ; Singleton<ioEtcItemManager>::ms_Singleton
  00033	e8 00 00 00 00	 call	 ?FindEtcItem@ioEtcItemManager@@QAEPAVioEtcItem@@K@Z ; ioEtcItemManager::FindEtcItem

; 271  : 	if( pItem )

  00038	85 c0		 test	 eax, eax
  0003a	74 1c		 je	 SHORT $LN1@SetInfoAnd

; 272  : 	{
; 273  : 		m_pIcon = g_UIImageSetMgr.CreateImageByFullName( pItem->GetIconName() );

  0003c	05 60 01 00 00	 add	 eax, 352		; 00000160H
  00041	6a 00		 push	 0
  00043	50		 push	 eax
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ
  0004a	8b c8		 mov	 ecx, eax
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z
  00052	89 86 64 01 00
	00		 mov	 DWORD PTR [esi+356], eax
$LN1@SetInfoAnd:

; 274  : 	}
; 275  : 
; 276  : 	ShowWnd();

  00058	8b ce		 mov	 ecx, esi
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ShowWnd@ioWnd@@QAEXXZ

; 277  : 	SetChildInActive( ID_GO );

  00060	6a 01		 push	 1
  00062	8b ce		 mov	 ecx, esi
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetChildInActive@ioWnd@@QAEXK@Z
  0006a	5e		 pop	 esi

; 278  : }

  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
?SetInfoAndShow@RecordInitResultWnd@@QAEXK@Z ENDP	; RecordInitResultWnd::SetInfoAndShow
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$?8$07@@YA_NABVioHashString@@AAY07$$CBD@Z	; operator==<8>
EXTRN	__imp_?c_str@ioHashString@@QBEPBDXZ:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iohashstring.h
;	COMDAT ??$?8$07@@YA_NABVioHashString@@AAY07$$CBD@Z
_TEXT	SEGMENT
__t$ = -16						; size = 8
__$ArrayPad$ = -4					; size = 4
_lhs$ = 8						; size = 4
_t$ = 12						; size = 4
??$?8$07@@YA_NABVioHashString@@AAY07$$CBD@Z PROC	; operator==<8>, COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]

; 147  : 	_ENCSTR(t, _t); return ( strcmp( lhs.c_str(), _t ) == 0 );

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	8b 7d 08	 mov	 edi, DWORD PTR _lhs$[ebp]
  0001a	84 d2		 test	 dl, dl
  0001c	0f 84 d7 00 00
	00		 je	 $LN96@operator
  00022	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00025	88 55 f0	 mov	 BYTE PTR __t$[ebp], dl
  00028	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0002b	84 d2		 test	 dl, dl
  0002d	0f 84 c0 00 00
	00		 je	 $LN95@operator
  00033	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00036	88 55 f1	 mov	 BYTE PTR __t$[ebp+1], dl
  00039	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003c	84 d2		 test	 dl, dl
  0003e	0f 84 a9 00 00
	00		 je	 $LN94@operator
  00044	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00047	88 55 f2	 mov	 BYTE PTR __t$[ebp+2], dl
  0004a	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004d	84 d2		 test	 dl, dl
  0004f	0f 84 92 00 00
	00		 je	 $LN93@operator
  00055	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00058	88 55 f3	 mov	 BYTE PTR __t$[ebp+3], dl
  0005b	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005e	84 d2		 test	 dl, dl
  00060	74 7f		 je	 SHORT $LN92@operator
  00062	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00065	88 55 f4	 mov	 BYTE PTR __t$[ebp+4], dl
  00068	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006b	84 d2		 test	 dl, dl
  0006d	74 6c		 je	 SHORT $LN91@operator
  0006f	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00072	88 55 f5	 mov	 BYTE PTR __t$[ebp+5], dl
  00075	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00078	84 d2		 test	 dl, dl
  0007a	74 59		 je	 SHORT $LN90@operator
  0007c	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0007f	80 78 07 00	 cmp	 BYTE PTR [eax+7], 0
  00083	88 55 f6	 mov	 BYTE PTR __t$[ebp+6], dl
  00086	74 75		 je	 SHORT $LN1@operator
  00088	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  0008b	84 d2		 test	 dl, dl
  0008d	74 40		 je	 SHORT $LN88@operator
  0008f	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00092	88 55 f8	 mov	 BYTE PTR __t$[ebp+8], dl
  00095	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  00098	84 d2		 test	 dl, dl
  0009a	74 2d		 je	 SHORT $LN87@operator
  0009c	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0009f	88 55 f9	 mov	 BYTE PTR __t$[ebp+9], dl
  000a2	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000a5	84 d2		 test	 dl, dl
  000a7	74 1a		 je	 SHORT $LN86@operator
  000a9	8a 40 0b	 mov	 al, BYTE PTR [eax+11]
  000ac	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000af	88 55 fa	 mov	 BYTE PTR __t$[ebp+10], dl
  000b2	84 c0		 test	 al, al
  000b4	74 07		 je	 SHORT $LN85@operator
  000b6	34 ea		 xor	 al, -22			; ffffffeaH
  000b8	88 45 fb	 mov	 BYTE PTR __t$[ebp+11], al
  000bb	eb 40		 jmp	 SHORT $LN1@operator
$LN85@operator:
  000bd	c6 45 fb ea	 mov	 BYTE PTR __t$[ebp+11], -22 ; ffffffeaH
  000c1	eb 3a		 jmp	 SHORT $LN1@operator
$LN86@operator:
  000c3	c6 45 fa eb	 mov	 BYTE PTR __t$[ebp+10], -21 ; ffffffebH
  000c7	eb 34		 jmp	 SHORT $LN1@operator
$LN87@operator:
  000c9	c6 45 f9 ec	 mov	 BYTE PTR __t$[ebp+9], -20 ; ffffffecH
  000cd	eb 2e		 jmp	 SHORT $LN1@operator
$LN88@operator:
  000cf	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  000d3	eb 28		 jmp	 SHORT $LN1@operator
$LN90@operator:
  000d5	c6 45 f6 eb	 mov	 BYTE PTR __t$[ebp+6], -21 ; ffffffebH
  000d9	eb 22		 jmp	 SHORT $LN1@operator
$LN91@operator:
  000db	c6 45 f5 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  000df	eb 1c		 jmp	 SHORT $LN1@operator
$LN92@operator:
  000e1	c6 45 f4 ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  000e5	eb 16		 jmp	 SHORT $LN1@operator
$LN93@operator:
  000e7	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  000eb	eb 10		 jmp	 SHORT $LN1@operator
$LN94@operator:
  000ed	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  000f1	eb 0a		 jmp	 SHORT $LN1@operator
$LN95@operator:
  000f3	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  000f7	eb 04		 jmp	 SHORT $LN1@operator
$LN96@operator:
  000f9	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@operator:
  000fd	81 75 f0 ed ec
	eb ea		 xor	 DWORD PTR __t$[ebp], -353637139 ; eaebecedH
  00104	6a 04		 push	 4
  00106	c6 45 f7 00	 mov	 BYTE PTR __t$[ebp+7], 0
  0010a	58		 pop	 eax
$LL101@operator:
  0010b	8b c8		 mov	 ecx, eax
  0010d	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00113	79 05		 jns	 SHORT $LN115@operator
  00115	49		 dec	 ecx
  00116	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00119	41		 inc	 ecx
$LN115@operator:
  0011a	b2 ed		 mov	 dl, -19			; ffffffedH
  0011c	2a d1		 sub	 dl, cl
  0011e	30 54 05 f0	 xor	 BYTE PTR __t$[ebp+eax], dl
  00122	40		 inc	 eax
  00123	83 f8 07	 cmp	 eax, 7
  00126	7c e3		 jl	 SHORT $LL101@operator
  00128	8b cf		 mov	 ecx, edi
  0012a	8d 75 f0	 lea	 esi, DWORD PTR __t$[ebp]
  0012d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL111@operator:
  00133	8a 08		 mov	 cl, BYTE PTR [eax]
  00135	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00137	75 1a		 jne	 SHORT $LN112@operator
  00139	84 c9		 test	 cl, cl
  0013b	74 12		 je	 SHORT $LN113@operator
  0013d	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00140	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  00143	75 0e		 jne	 SHORT $LN112@operator
  00145	83 c0 02	 add	 eax, 2
  00148	83 c6 02	 add	 esi, 2
  0014b	84 c9		 test	 cl, cl
  0014d	75 e4		 jne	 SHORT $LL111@operator
$LN113@operator:
  0014f	33 c0		 xor	 eax, eax
  00151	eb 05		 jmp	 SHORT $LN114@operator
$LN112@operator:
  00153	1b c0		 sbb	 eax, eax
  00155	83 d8 ff	 sbb	 eax, -1
$LN114@operator:
  00158	33 c9		 xor	 ecx, ecx
  0015a	85 c0		 test	 eax, eax
  0015c	0f 94 c0	 sete	 al

; 148  : }

  0015f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00162	5f		 pop	 edi
  00163	33 cd		 xor	 ecx, ebp
  00165	5e		 pop	 esi
  00166	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0016b	c9		 leave
  0016c	c3		 ret	 0
??$?8$07@@YA_NABVioHashString@@AAY07$$CBD@Z ENDP	; operator==<8>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$?8$0M@@@YA_NABVioHashString@@AAY0M@$$CBD@Z	; operator==<12>
; Function compile flags: /Ogsp
;	COMDAT ??$?8$0M@@@YA_NABVioHashString@@AAY0M@$$CBD@Z
_TEXT	SEGMENT
__t$ = -20						; size = 12
__$ArrayPad$ = -4					; size = 4
_lhs$ = 8						; size = 4
_t$ = 12						; size = 4
??$?8$0M@@@YA_NABVioHashString@@AAY0M@$$CBD@Z PROC	; operator==<12>, COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]

; 147  : 	_ENCSTR(t, _t); return ( strcmp( lhs.c_str(), _t ) == 0 );

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	8b 7d 08	 mov	 edi, DWORD PTR _lhs$[ebp]
  0001a	84 d2		 test	 dl, dl
  0001c	0f 84 32 01 00
	00		 je	 $LN96@operator@2
  00022	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00025	88 55 ec	 mov	 BYTE PTR __t$[ebp], dl
  00028	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0002b	84 d2		 test	 dl, dl
  0002d	0f 84 1b 01 00
	00		 je	 $LN95@operator@2
  00033	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00036	88 55 ed	 mov	 BYTE PTR __t$[ebp+1], dl
  00039	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003c	84 d2		 test	 dl, dl
  0003e	0f 84 04 01 00
	00		 je	 $LN94@operator@2
  00044	b1 eb		 mov	 cl, -21			; ffffffebH
  00046	32 d1		 xor	 dl, cl
  00048	88 55 ee	 mov	 BYTE PTR __t$[ebp+2], dl
  0004b	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004e	84 d2		 test	 dl, dl
  00050	0f 84 ec 00 00
	00		 je	 $LN93@operator@2
  00056	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00059	88 55 ef	 mov	 BYTE PTR __t$[ebp+3], dl
  0005c	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005f	84 d2		 test	 dl, dl
  00061	0f 84 d5 00 00
	00		 je	 $LN92@operator@2
  00067	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0006a	88 55 f0	 mov	 BYTE PTR __t$[ebp+4], dl
  0006d	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00070	84 d2		 test	 dl, dl
  00072	0f 84 be 00 00
	00		 je	 $LN91@operator@2
  00078	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0007b	88 55 f1	 mov	 BYTE PTR __t$[ebp+5], dl
  0007e	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00081	84 d2		 test	 dl, dl
  00083	0f 84 a8 00 00
	00		 je	 $LN90@operator@2
  00089	32 d1		 xor	 dl, cl
  0008b	88 55 f2	 mov	 BYTE PTR __t$[ebp+6], dl
  0008e	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00091	84 d2		 test	 dl, dl
  00093	0f 84 92 00 00
	00		 je	 $LN89@operator@2
  00099	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009c	88 55 f3	 mov	 BYTE PTR __t$[ebp+7], dl
  0009f	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a2	84 d2		 test	 dl, dl
  000a4	74 7f		 je	 SHORT $LN88@operator@2
  000a6	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a9	88 55 f4	 mov	 BYTE PTR __t$[ebp+8], dl
  000ac	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000af	84 d2		 test	 dl, dl
  000b1	74 6c		 je	 SHORT $LN87@operator@2
  000b3	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b6	88 55 f5	 mov	 BYTE PTR __t$[ebp+9], dl
  000b9	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000bc	84 d2		 test	 dl, dl
  000be	74 5a		 je	 SHORT $LN86@operator@2
  000c0	32 d1		 xor	 dl, cl
  000c2	80 78 0b 00	 cmp	 BYTE PTR [eax+11], 0
  000c6	88 55 f6	 mov	 BYTE PTR __t$[ebp+10], dl
  000c9	0f 84 89 00 00
	00		 je	 $LN1@operator@2
  000cf	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000d2	84 d2		 test	 dl, dl
  000d4	74 3e		 je	 SHORT $LN84@operator@2
  000d6	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000d9	88 55 f8	 mov	 BYTE PTR __t$[ebp+12], dl
  000dc	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000df	84 d2		 test	 dl, dl
  000e1	74 2b		 je	 SHORT $LN83@operator@2
  000e3	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000e6	88 55 f9	 mov	 BYTE PTR __t$[ebp+13], dl
  000e9	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000ec	84 d2		 test	 dl, dl
  000ee	74 19		 je	 SHORT $LN82@operator@2
  000f0	8a 40 0f	 mov	 al, BYTE PTR [eax+15]
  000f3	32 d1		 xor	 dl, cl
  000f5	88 55 fa	 mov	 BYTE PTR __t$[ebp+14], dl
  000f8	84 c0		 test	 al, al
  000fa	74 07		 je	 SHORT $LN81@operator@2
  000fc	34 ea		 xor	 al, -22			; ffffffeaH
  000fe	88 45 fb	 mov	 BYTE PTR __t$[ebp+15], al
  00101	eb 55		 jmp	 SHORT $LN1@operator@2
$LN81@operator@2:
  00103	c6 45 fb ea	 mov	 BYTE PTR __t$[ebp+15], -22 ; ffffffeaH
  00107	eb 4f		 jmp	 SHORT $LN1@operator@2
$LN82@operator@2:
  00109	88 4d fa	 mov	 BYTE PTR __t$[ebp+14], cl
  0010c	eb 4a		 jmp	 SHORT $LN1@operator@2
$LN83@operator@2:
  0010e	c6 45 f9 ec	 mov	 BYTE PTR __t$[ebp+13], -20 ; ffffffecH
  00112	eb 44		 jmp	 SHORT $LN1@operator@2
$LN84@operator@2:
  00114	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+12], -19 ; ffffffedH
  00118	eb 3e		 jmp	 SHORT $LN1@operator@2
$LN86@operator@2:
  0011a	88 4d f6	 mov	 BYTE PTR __t$[ebp+10], cl
  0011d	eb 39		 jmp	 SHORT $LN1@operator@2
$LN87@operator@2:
  0011f	c6 45 f5 ec	 mov	 BYTE PTR __t$[ebp+9], -20 ; ffffffecH
  00123	eb 33		 jmp	 SHORT $LN1@operator@2
$LN88@operator@2:
  00125	c6 45 f4 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  00129	eb 2d		 jmp	 SHORT $LN1@operator@2
$LN89@operator@2:
  0012b	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  0012f	eb 27		 jmp	 SHORT $LN1@operator@2
$LN90@operator@2:
  00131	88 4d f2	 mov	 BYTE PTR __t$[ebp+6], cl
  00134	eb 22		 jmp	 SHORT $LN1@operator@2
$LN91@operator@2:
  00136	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  0013a	eb 1c		 jmp	 SHORT $LN1@operator@2
$LN92@operator@2:
  0013c	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  00140	eb 16		 jmp	 SHORT $LN1@operator@2
$LN93@operator@2:
  00142	c6 45 ef ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  00146	eb 10		 jmp	 SHORT $LN1@operator@2
$LN94@operator@2:
  00148	c6 45 ee eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  0014c	eb 0a		 jmp	 SHORT $LN1@operator@2
$LN95@operator@2:
  0014e	c6 45 ed ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  00152	eb 04		 jmp	 SHORT $LN1@operator@2
$LN96@operator@2:
  00154	c6 45 ec ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@operator@2:
  00158	6a 02		 push	 2
  0015a	8d 45 ec	 lea	 eax, DWORD PTR __t$[ebp]
  0015d	c6 45 f7 00	 mov	 BYTE PTR __t$[ebp+11], 0
  00161	5a		 pop	 edx
$LL104@operator@2:
  00162	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00168	83 c0 04	 add	 eax, 4
  0016b	4a		 dec	 edx
  0016c	75 f4		 jne	 SHORT $LL104@operator@2
  0016e	6a 08		 push	 8
  00170	58		 pop	 eax
$LL101@operator@2:
  00171	8b c8		 mov	 ecx, eax
  00173	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00179	79 05		 jns	 SHORT $LN115@operator@2
  0017b	49		 dec	 ecx
  0017c	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0017f	41		 inc	 ecx
$LN115@operator@2:
  00180	b2 ed		 mov	 dl, -19			; ffffffedH
  00182	2a d1		 sub	 dl, cl
  00184	30 54 05 ec	 xor	 BYTE PTR __t$[ebp+eax], dl
  00188	40		 inc	 eax
  00189	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  0018c	7c e3		 jl	 SHORT $LL101@operator@2
  0018e	8b cf		 mov	 ecx, edi
  00190	8d 75 ec	 lea	 esi, DWORD PTR __t$[ebp]
  00193	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL111@operator@2:
  00199	8a 08		 mov	 cl, BYTE PTR [eax]
  0019b	3a 0e		 cmp	 cl, BYTE PTR [esi]
  0019d	75 1a		 jne	 SHORT $LN112@operator@2
  0019f	84 c9		 test	 cl, cl
  001a1	74 12		 je	 SHORT $LN113@operator@2
  001a3	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  001a6	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  001a9	75 0e		 jne	 SHORT $LN112@operator@2
  001ab	83 c0 02	 add	 eax, 2
  001ae	83 c6 02	 add	 esi, 2
  001b1	84 c9		 test	 cl, cl
  001b3	75 e4		 jne	 SHORT $LL111@operator@2
$LN113@operator@2:
  001b5	33 c0		 xor	 eax, eax
  001b7	eb 05		 jmp	 SHORT $LN114@operator@2
$LN112@operator@2:
  001b9	1b c0		 sbb	 eax, eax
  001bb	83 d8 ff	 sbb	 eax, -1
$LN114@operator@2:
  001be	33 c9		 xor	 ecx, ecx
  001c0	85 c0		 test	 eax, eax
  001c2	0f 94 c0	 sete	 al

; 148  : }

  001c5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001c8	5f		 pop	 edi
  001c9	33 cd		 xor	 ecx, ebp
  001cb	5e		 pop	 esi
  001cc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001d1	c9		 leave
  001d2	c3		 ret	 0
??$?8$0M@@@YA_NABVioHashString@@AAY0M@$$CBD@Z ENDP	; operator==<12>
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
EXTRN	__imp_?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\recordinitwnd.cpp
;	COMDAT ?AddRenderFrame@RecordInitWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
_TEXT	SEGMENT
_this$GSCopy$ = -20					; size = 4
__t$509471 = -16					; size = 8
__$ArrayPad$ = -4					; size = 4
_szType$ = 8						; size = 4
_pFrame$ = 12						; size = 4
?AddRenderFrame@RecordInitWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z PROC ; RecordInitWnd::AddRenderFrame, COMDAT
; _this$ = ecx

; 107  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 0c	 mov	 ebx, DWORD PTR _pFrame$[ebp]
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b 7d 08	 mov	 edi, DWORD PTR _szType$[ebp]

; 108  : 	if( szType == "EditFrm" )

  00019	6a 04		 push	 4
  0001b	c7 45 f0 a8 88
	82 9e		 mov	 DWORD PTR __t$509471[ebp], -1635612504 ; 9e8288a8H
  00022	81 75 f0 ed ec
	eb ea		 xor	 DWORD PTR __t$509471[ebp], -353637139 ; eaebecedH
  00029	89 4d ec	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  0002c	c7 45 f4 ab 9e
	86 00		 mov	 DWORD PTR __t$509471[ebp+4], 8822443 ; 00869eabH
  00033	58		 pop	 eax
$LL108@AddRenderF:
  00034	8b c8		 mov	 ecx, eax
  00036	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003c	79 05		 jns	 SHORT $LN122@AddRenderF
  0003e	49		 dec	 ecx
  0003f	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00042	41		 inc	 ecx
$LN122@AddRenderF:
  00043	b2 ed		 mov	 dl, -19			; ffffffedH
  00045	2a d1		 sub	 dl, cl
  00047	30 54 05 f0	 xor	 BYTE PTR __t$509471[ebp+eax], dl
  0004b	40		 inc	 eax
  0004c	83 f8 07	 cmp	 eax, 7
  0004f	7c e3		 jl	 SHORT $LL108@AddRenderF
  00051	8b cf		 mov	 ecx, edi
  00053	8d 75 f0	 lea	 esi, DWORD PTR __t$509471[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL118@AddRenderF:
  0005c	8a 08		 mov	 cl, BYTE PTR [eax]
  0005e	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00060	75 1a		 jne	 SHORT $LN119@AddRenderF
  00062	84 c9		 test	 cl, cl
  00064	74 12		 je	 SHORT $LN120@AddRenderF
  00066	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00069	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  0006c	75 0e		 jne	 SHORT $LN119@AddRenderF
  0006e	83 c0 02	 add	 eax, 2
  00071	83 c6 02	 add	 esi, 2
  00074	84 c9		 test	 cl, cl
  00076	75 e4		 jne	 SHORT $LL118@AddRenderF
$LN120@AddRenderF:
  00078	33 c0		 xor	 eax, eax
  0007a	eb 05		 jmp	 SHORT $LN121@AddRenderF
$LN119@AddRenderF:
  0007c	1b c0		 sbb	 eax, eax
  0007e	83 d8 ff	 sbb	 eax, -1
$LN121@AddRenderF:
  00081	85 c0		 test	 eax, eax
  00083	75 23		 jne	 SHORT $LN3@AddRenderF

; 109  : 	{
; 110  : 		SAFEDELETE( m_pEditFrm );

  00085	8b 75 ec	 mov	 esi, DWORD PTR _this$GSCopy$[ebp]
  00088	8b 8e 7c 01 00
	00		 mov	 ecx, DWORD PTR [esi+380]
  0008e	85 c9		 test	 ecx, ecx
  00090	74 0e		 je	 SHORT $LN2@AddRenderF
  00092	8b 01		 mov	 eax, DWORD PTR [ecx]
  00094	6a 01		 push	 1
  00096	ff 50 40	 call	 DWORD PTR [eax+64]
  00099	83 a6 7c 01 00
	00 00		 and	 DWORD PTR [esi+380], 0
$LN2@AddRenderF:

; 111  : 		m_pEditFrm = pFrame;

  000a0	89 9e 7c 01 00
	00		 mov	 DWORD PTR [esi+380], ebx

; 112  : 	}
; 113  : 	else

  000a6	eb 0b		 jmp	 SHORT $LN1@AddRenderF
$LN3@AddRenderF:

; 114  : 	{
; 115  : 		ioWnd::AddRenderFrame( szType, pFrame );

  000a8	8b 4d ec	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  000ab	53		 push	 ebx
  000ac	57		 push	 edi
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
$LN1@AddRenderF:

; 116  : 	}
; 117  : }

  000b3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b6	5f		 pop	 edi
  000b7	5e		 pop	 esi
  000b8	33 cd		 xor	 ecx, ebp
  000ba	5b		 pop	 ebx
  000bb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c0	c9		 leave
  000c1	c2 08 00	 ret	 8
?AddRenderFrame@RecordInitWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z ENDP ; RecordInitWnd::AddRenderFrame
_TEXT	ENDS
PUBLIC	??_C@_01OHGJGJJP@?$FL?$AA@			; `string'
PUBLIC	__real@3f19999a
PUBLIC	??_C@_0BI@EKGDNKFP@RecordInitWnd?3?3OnRender?$AA@ ; `string'
EXTRN	?PrintFullText@ioComplexStringPrinter@@QAEXMMW4TextAlignType@@E@Z:PROC ; ioComplexStringPrinter::PrintFullText
EXTRN	?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ:PROC ; ioComplexStringPrinter::AddTextPiece
EXTRN	?SetTextColor@ioComplexStringPrinter@@QAEXK@Z:PROC ; ioComplexStringPrinter::SetTextColor
EXTRN	?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z:PROC ; ioComplexStringPrinter::SetTextStyle
EXTRN	?SetBkColor@ioComplexStringPrinter@@QAEXHHH@Z:PROC ; ioComplexStringPrinter::SetBkColor
EXTRN	__imp_?PrintText@ioFontManager@@QAEXMMMPBD0@Z:PROC
;	COMDAT ??_C@_01OHGJGJJP@?$FL?$AA@
CONST	SEGMENT
??_C@_01OHGJGJJP@?$FL?$AA@ DB '[', 00H			; `string'
CONST	ENDS
;	COMDAT __real@3f19999a
CONST	SEGMENT
__real@3f19999a DD 03f19999ar			; 0.6
CONST	ENDS
;	COMDAT ??_C@_0BI@EKGDNKFP@RecordInitWnd?3?3OnRender?$AA@
CONST	SEGMENT
??_C@_0BI@EKGDNKFP@RecordInitWnd?3?3OnRender?$AA@ DB 'RecordInitWnd::OnRe'
	DB	'nder', 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnRender@RecordInitWnd@@MAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnRender@RecordInitWnd@@MAEXXZ$0
__ehfuncinfo$?OnRender@RecordInitWnd@@MAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnRender@RecordInitWnd@@MAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?OnRender@RecordInitWnd@@MAEXXZ
_TEXT	SEGMENT
_kPrinter$ = -60					; size = 32
tv292 = -28						; size = 4
_this$ = -24						; size = 4
_iXPos$ = -20						; size = 4
_iYPos$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?OnRender@RecordInitWnd@@MAEXXZ PROC			; RecordInitWnd::OnRender, COMDAT
; _this$ = ecx

; 162  : {

  00000	6a 30		 push	 48			; 00000030H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?OnRender@RecordInitWnd@@MAEXXZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b d9		 mov	 ebx, ecx
  0000e	89 5d e8	 mov	 DWORD PTR _this$[ebp], ebx

; 163  : 	ioWnd::OnRender();

  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?OnRender@ioWnd@@MAEXXZ

; 164  : 
; 165  : 	int iXPos = GetDerivedPosX();

  00017	8b cb		 mov	 ecx, ebx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosX@ioWnd@@QBEHXZ

; 166  : 	int iYPos = GetDerivedPosY();

  0001f	8b cb		 mov	 ecx, ebx
  00021	89 45 ec	 mov	 DWORD PTR _iXPos$[ebp], eax
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosY@ioWnd@@QBEHXZ

; 167  : 
; 168  : 	enum 
; 169  : 	{
; 170  : 		TITLE_X_OFFSET	= 129,
; 171  : 		TITLE_Y_OFFSET	= 152,
; 172  : 
; 173  : 		INFO_X			= 26,
; 174  : 		INFO_Y			= 397,
; 175  : 		INFO_GAP		= 24,
; 176  : 
; 177  : 		EDIT_TEXT_X		= 62,
; 178  : 		EDIT_TEXT_Y		= 421,
; 179  : 	};
; 180  : 
; 181  : 
; 182  : 	g_FontMgr.SetTextStyle( TS_NORMAL );

  0002a	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?GetSingleton@ioFontManager@@SAAAV1@XZ
  00030	33 ff		 xor	 edi, edi
  00032	57		 push	 edi
  00033	89 45 f0	 mov	 DWORD PTR _iYPos$[ebp], eax
  00036	ff d6		 call	 esi
  00038	8b c8		 mov	 ecx, eax
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z

; 183  : 	g_FontMgr.SetAlignType( TAT_CENTER );

  00040	6a 01		 push	 1
  00042	ff d6		 call	 esi
  00044	8b c8		 mov	 ecx, eax
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 184  : 	g_FontMgr.SetBkColor( 0, 0, 0 );

  0004c	57		 push	 edi
  0004d	57		 push	 edi
  0004e	57		 push	 edi
  0004f	ff d6		 call	 esi
  00051	8b c8		 mov	 ecx, eax
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetBkColor@ioFontManager@@QAEXHHH@Z

; 185  : 	g_FontMgr.SetTextColor( TCT_DEFAULT_DARKGRAY );

  00059	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  0005e	ff d6		 call	 esi
  00060	8b c8		 mov	 ecx, eax
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 186  : 	g_FontMgr.PrintText( iXPos+TITLE_X_OFFSET, iYPos+TITLE_Y_OFFSET, FONT_SIZE_17, STR(1), m_szTitle.c_str() );

  00068	8b 45 ec	 mov	 eax, DWORD PTR _iXPos$[ebp]
  0006b	05 81 00 00 00	 add	 eax, 129		; 00000081H
  00070	0f 57 c0	 xorps	 xmm0, xmm0
  00073	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00077	8d 8b 6c 01 00
	00		 lea	 ecx, DWORD PTR [ebx+364]
  0007d	f3 0f 11 45 e4	 movss	 DWORD PTR tv292[ebp], xmm0
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  00088	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_?GetSingleton@ioStringManager@@SAAAV1@XZ
  0008e	50		 push	 eax
  0008f	57		 push	 edi
  00090	6a 01		 push	 1
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@EKGDNKFP@RecordInitWnd?3?3OnRender?$AA@
  0009c	ff d3		 call	 ebx
  0009e	8b c8		 mov	 ecx, eax
  000a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  000a6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f59999a
  000ae	50		 push	 eax
  000af	8b 45 f0	 mov	 eax, DWORD PTR _iYPos$[ebp]
  000b2	83 ec 0c	 sub	 esp, 12			; 0000000cH
  000b5	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000bb	05 98 00 00 00	 add	 eax, 152		; 00000098H
  000c0	0f 57 c0	 xorps	 xmm0, xmm0
  000c3	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000c7	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000cd	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR tv292[ebp]
  000d2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d7	ff d6		 call	 esi
  000d9	8b c8		 mov	 ecx, eax
  000db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAEXMMMPBD0@Z

; 187  : 
; 188  : 
; 189  : 	PrintManual( iXPos+27, iYPos+206, FONT_SIZE_12 );

  000e1	8b 45 f0	 mov	 eax, DWORD PTR _iYPos$[ebp]
  000e4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  000ec	51		 push	 ecx
  000ed	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f0	05 ce 00 00 00	 add	 eax, 206		; 000000ceH
  000f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fa	50		 push	 eax
  000fb	8b 45 ec	 mov	 eax, DWORD PTR _iXPos$[ebp]
  000fe	83 c0 1b	 add	 eax, 27			; 0000001bH
  00101	50		 push	 eax
  00102	e8 00 00 00 00	 call	 ?PrintManual@RecordInitWnd@@IAEXHHM@Z ; RecordInitWnd::PrintManual

; 190  : 
; 191  : 	ioComplexStringPrinter kPrinter;

  00107	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  0010a	e8 00 00 00 00	 call	 ??0ioComplexStringPrinter@@QAE@XZ ; ioComplexStringPrinter::ioComplexStringPrinter

; 192  : 	kPrinter.SetBkColor( 0, 0, 0 );

  0010f	57		 push	 edi
  00110	57		 push	 edi
  00111	57		 push	 edi
  00112	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  00115	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  00118	e8 00 00 00 00	 call	 ?SetBkColor@ioComplexStringPrinter@@QAEXHHH@Z ; ioComplexStringPrinter::SetBkColor

; 193  : 	kPrinter.SetTextStyle( TS_NORMAL );

  0011d	57		 push	 edi
  0011e	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  00121	e8 00 00 00 00	 call	 ?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z ; ioComplexStringPrinter::SetTextStyle

; 194  : 	kPrinter.SetTextColor( TCT_DEFAULT_DARKGRAY );

  00126	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  0012b	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  0012e	e8 00 00 00 00	 call	 ?SetTextColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetTextColor

; 195  : 	kPrinter.AddTextPiece( FONT_SIZE_12, "[" );

  00133	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  0013b	68 00 00 00 00	 push	 OFFSET ??_C@_01OHGJGJJP@?$FL?$AA@
  00140	51		 push	 ecx
  00141	8d 45 c4	 lea	 eax, DWORD PTR _kPrinter$[ebp]
  00144	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00149	50		 push	 eax
  0014a	e8 00 00 00 00	 call	 ?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ ; ioComplexStringPrinter::AddTextPiece
  0014f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 196  : 	kPrinter.SetTextColor( TCT_DEFAULT_RED );

  00152	68 00 16 b9 ff	 push	 -4647424		; ffb91600H
  00157	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  0015a	e8 00 00 00 00	 call	 ?SetTextColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetTextColor

; 197  : 	kPrinter.AddTextPiece( FONT_SIZE_12, STR(2) );

  0015f	57		 push	 edi
  00160	6a 02		 push	 2
  00162	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00167	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@EKGDNKFP@RecordInitWnd?3?3OnRender?$AA@
  0016c	ff d3		 call	 ebx
  0016e	8b c8		 mov	 ecx, eax
  00170	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  00176	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  0017e	50		 push	 eax
  0017f	51		 push	 ecx
  00180	8d 45 c4	 lea	 eax, DWORD PTR _kPrinter$[ebp]
  00183	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00188	50		 push	 eax
  00189	e8 00 00 00 00	 call	 ?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ ; ioComplexStringPrinter::AddTextPiece
  0018e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 198  : 	kPrinter.SetTextColor( TCT_DEFAULT_DARKGRAY );

  00191	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  00196	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  00199	e8 00 00 00 00	 call	 ?SetTextColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetTextColor

; 199  : 	kPrinter.AddTextPiece( FONT_SIZE_12, STR(3) );

  0019e	57		 push	 edi
  0019f	6a 03		 push	 3
  001a1	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  001a6	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@EKGDNKFP@RecordInitWnd?3?3OnRender?$AA@
  001ab	ff d3		 call	 ebx
  001ad	8b c8		 mov	 ecx, eax
  001af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  001b5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  001bd	50		 push	 eax
  001be	51		 push	 ecx
  001bf	8d 45 c4	 lea	 eax, DWORD PTR _kPrinter$[ebp]
  001c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c7	50		 push	 eax
  001c8	e8 00 00 00 00	 call	 ?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ ; ioComplexStringPrinter::AddTextPiece

; 200  : 	kPrinter.PrintFullText( iXPos + 129, iYPos + 397, TAT_CENTER );

  001cd	8b 45 f0	 mov	 eax, DWORD PTR _iYPos$[ebp]
  001d0	83 c4 0c	 add	 esp, 12			; 0000000cH
  001d3	68 ff 00 00 00	 push	 255			; 000000ffH
  001d8	6a 01		 push	 1
  001da	51		 push	 ecx
  001db	51		 push	 ecx
  001dc	05 8d 01 00 00	 add	 eax, 397		; 0000018dH
  001e1	0f 57 c0	 xorps	 xmm0, xmm0
  001e4	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  001e8	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  001ee	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR tv292[ebp]
  001f3	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  001f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001fb	e8 00 00 00 00	 call	 ?PrintFullText@ioComplexStringPrinter@@QAEXMMW4TextAlignType@@E@Z ; ioComplexStringPrinter::PrintFullText

; 201  : 	kPrinter.ClearList();

  00200	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  00203	e8 00 00 00 00	 call	 ?ClearList@ioComplexStringPrinter@@QAEXXZ ; ioComplexStringPrinter::ClearList

; 202  : 
; 203  : 	if( m_pEditFrm )

  00208	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0020b	39 b8 7c 01 00
	00		 cmp	 DWORD PTR [eax+380], edi
  00211	0f 84 cb 00 00
	00		 je	 $LN1@OnRender@2

; 204  : 	{
; 205  : 		m_pEditFrm->Render( iXPos, iYPos );

  00217	66 0f 6e 45 f0	 movd	 xmm0, DWORD PTR _iYPos$[ebp]
  0021c	8b 80 7c 01 00
	00		 mov	 eax, DWORD PTR [eax+380]
  00222	8b 10		 mov	 edx, DWORD PTR [eax]
  00224	57		 push	 edi
  00225	57		 push	 edi
  00226	57		 push	 edi
  00227	57		 push	 edi
  00228	51		 push	 ecx
  00229	51		 push	 ecx
  0022a	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0022d	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00233	66 0f 6e 45 ec	 movd	 xmm0, DWORD PTR _iXPos$[ebp]
  00238	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0023b	8b c8		 mov	 ecx, eax
  0023d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00242	ff 12		 call	 DWORD PTR [edx]

; 206  : 
; 207  : 		if( m_pInitEdit != ioEdit::m_pKeyFocusEdit )

  00244	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00247	8b 80 68 01 00
	00		 mov	 eax, DWORD PTR [eax+360]
  0024d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?m_pKeyFocusEdit@ioEdit@@2PAV1@A
  00253	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00255	0f 84 87 00 00
	00		 je	 $LN1@OnRender@2

; 208  : 		{
; 209  : 			g_FontMgr.SetTextStyle( TS_NORMAL );

  0025b	57		 push	 edi
  0025c	ff d6		 call	 esi
  0025e	8b c8		 mov	 ecx, eax
  00260	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z

; 210  : 			g_FontMgr.SetAlignType( TAT_CENTER );

  00266	6a 01		 push	 1
  00268	ff d6		 call	 esi
  0026a	8b c8		 mov	 ecx, eax
  0026c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 211  : 			g_FontMgr.SetBkColor( 0, 0, 0 );

  00272	57		 push	 edi
  00273	57		 push	 edi
  00274	57		 push	 edi
  00275	ff d6		 call	 esi
  00277	8b c8		 mov	 ecx, eax
  00279	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetBkColor@ioFontManager@@QAEXHHH@Z

; 212  : 			g_FontMgr.SetTextColor( TCT_DEFAULT_LIGHTGRAY );

  0027f	68 a7 a7 a7 ff	 push	 -5789785		; ffa7a7a7H
  00284	ff d6		 call	 esi
  00286	8b c8		 mov	 ecx, eax
  00288	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 213  : 			g_FontMgr.PrintText( iXPos + 129, iYPos + 420, FONT_SIZE_12, STR(4) );

  0028e	57		 push	 edi
  0028f	6a 04		 push	 4
  00291	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00296	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@EKGDNKFP@RecordInitWnd?3?3OnRender?$AA@
  0029b	ff d3		 call	 ebx
  0029d	8b c8		 mov	 ecx, eax
  0029f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  002a5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  002ad	50		 push	 eax
  002ae	8b 45 f0	 mov	 eax, DWORD PTR _iYPos$[ebp]
  002b1	83 ec 0c	 sub	 esp, 12			; 0000000cH
  002b4	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  002ba	05 a4 01 00 00	 add	 eax, 420		; 000001a4H
  002bf	0f 57 c0	 xorps	 xmm0, xmm0
  002c2	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  002c6	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  002cc	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR tv292[ebp]
  002d1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d6	ff d6		 call	 esi
  002d8	50		 push	 eax
  002d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  002df	83 c4 14	 add	 esp, 20			; 00000014H
$LN1@OnRender@2:

; 214  : 		}
; 215  : 	}
; 216  : }

  002e2	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  002e6	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  002e9	e8 00 00 00 00	 call	 ??1ioComplexStringPrinter@@QAE@XZ ; ioComplexStringPrinter::~ioComplexStringPrinter
  002ee	e8 00 00 00 00	 call	 __EH_epilog3
  002f3	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnRender@RecordInitWnd@@MAEXXZ$0:
  00000	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioComplexStringPrinter@@QAE@XZ ; ioComplexStringPrinter::~ioComplexStringPrinter
__ehhandler$?OnRender@RecordInitWnd@@MAEXXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnRender@RecordInitWnd@@MAEXXZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnRender@RecordInitWnd@@MAEXXZ ENDP			; RecordInitWnd::OnRender
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
EXTRN	__imp_?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ?AddRenderImage@RecordInitResultWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z
_TEXT	SEGMENT
_this$GSCopy$ = -24					; size = 4
__t$509665 = -20					; size = 12
__$ArrayPad$ = -4					; size = 4
_szType$ = 8						; size = 4
_pImage$ = 12						; size = 4
?AddRenderImage@RecordInitResultWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z PROC ; RecordInitResultWnd::AddRenderImage, COMDAT
; _this$ = ecx

; 281  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 0c	 mov	 ebx, DWORD PTR _pImage$[ebp]
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b 7d 08	 mov	 edi, DWORD PTR _szType$[ebp]

; 282  : 	if( szType == "back_effect" )

  00019	6a 02		 push	 2
  0001b	89 4d e8	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  0001e	c7 45 ec 8f 8d
	88 81		 mov	 DWORD PTR __t$509665[ebp], -2121757297 ; 81888d8fH
  00025	c7 45 f0 b2 89
	8d 8c		 mov	 DWORD PTR __t$509665[ebp+4], -1936881230 ; 8c8d89b2H
  0002c	8d 45 ec	 lea	 eax, DWORD PTR __t$509665[ebp]
  0002f	c7 45 f4 88 8f
	9f 00		 mov	 DWORD PTR __t$509665[ebp+8], 10456968 ; 009f8f88H
  00036	59		 pop	 ecx
$LL111@AddRenderI:
  00037	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0003d	83 c0 04	 add	 eax, 4
  00040	49		 dec	 ecx
  00041	75 f4		 jne	 SHORT $LL111@AddRenderI
  00043	6a 08		 push	 8
  00045	58		 pop	 eax
$LL108@AddRenderI:
  00046	8b c8		 mov	 ecx, eax
  00048	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0004e	79 05		 jns	 SHORT $LN122@AddRenderI
  00050	49		 dec	 ecx
  00051	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00054	41		 inc	 ecx
$LN122@AddRenderI:
  00055	b2 ed		 mov	 dl, -19			; ffffffedH
  00057	2a d1		 sub	 dl, cl
  00059	30 54 05 ec	 xor	 BYTE PTR __t$509665[ebp+eax], dl
  0005d	40		 inc	 eax
  0005e	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  00061	7c e3		 jl	 SHORT $LL108@AddRenderI
  00063	8b cf		 mov	 ecx, edi
  00065	8d 75 ec	 lea	 esi, DWORD PTR __t$509665[ebp]
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL118@AddRenderI:
  0006e	8a 08		 mov	 cl, BYTE PTR [eax]
  00070	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00072	75 1a		 jne	 SHORT $LN119@AddRenderI
  00074	84 c9		 test	 cl, cl
  00076	74 12		 je	 SHORT $LN120@AddRenderI
  00078	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  0007b	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  0007e	75 0e		 jne	 SHORT $LN119@AddRenderI
  00080	83 c0 02	 add	 eax, 2
  00083	83 c6 02	 add	 esi, 2
  00086	84 c9		 test	 cl, cl
  00088	75 e4		 jne	 SHORT $LL118@AddRenderI
$LN120@AddRenderI:
  0008a	33 c0		 xor	 eax, eax
  0008c	eb 05		 jmp	 SHORT $LN121@AddRenderI
$LN119@AddRenderI:
  0008e	1b c0		 sbb	 eax, eax
  00090	83 d8 ff	 sbb	 eax, -1
$LN121@AddRenderI:
  00093	85 c0		 test	 eax, eax
  00095	75 23		 jne	 SHORT $LN3@AddRenderI

; 283  : 	{
; 284  : 		SAFEDELETE( m_pBackEffect );

  00097	8b 75 e8	 mov	 esi, DWORD PTR _this$GSCopy$[ebp]
  0009a	8b 8e 68 01 00
	00		 mov	 ecx, DWORD PTR [esi+360]
  000a0	85 c9		 test	 ecx, ecx
  000a2	74 0e		 je	 SHORT $LN2@AddRenderI
  000a4	8b 01		 mov	 eax, DWORD PTR [ecx]
  000a6	6a 01		 push	 1
  000a8	ff 50 40	 call	 DWORD PTR [eax+64]
  000ab	83 a6 68 01 00
	00 00		 and	 DWORD PTR [esi+360], 0
$LN2@AddRenderI:

; 285  : 		m_pBackEffect = pImage;

  000b2	89 9e 68 01 00
	00		 mov	 DWORD PTR [esi+360], ebx

; 286  : 	}
; 287  : 	else

  000b8	eb 0b		 jmp	 SHORT $LN1@AddRenderI
$LN3@AddRenderI:

; 288  : 		ioWnd::AddRenderImage( szType, pImage );

  000ba	8b 4d e8	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  000bd	53		 push	 ebx
  000be	57		 push	 edi
  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
$LN1@AddRenderI:

; 289  : }

  000c5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c8	5f		 pop	 edi
  000c9	5e		 pop	 esi
  000ca	33 cd		 xor	 ecx, ebp
  000cc	5b		 pop	 ebx
  000cd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d2	c9		 leave
  000d3	c2 08 00	 ret	 8
?AddRenderImage@RecordInitResultWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z ENDP ; RecordInitResultWnd::AddRenderImage
_TEXT	ENDS
END
