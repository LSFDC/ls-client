; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\TimeReport.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?StartFrame@TimeReport@@QAEXXZ			; TimeReport::StartFrame
EXTRN	__imp__timeGetTime@0:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\timereport.cpp
;	COMDAT ?StartFrame@TimeReport@@QAEXXZ
_TEXT	SEGMENT
?StartFrame@TimeReport@@QAEXXZ PROC			; TimeReport::StartFrame, COMDAT
; _this$ = ecx

; 32   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 33   : 	if( !m_bReportOn )	return;

  00003	80 7e 0c 00	 cmp	 BYTE PTR [esi+12], 0
  00007	74 09		 je	 SHORT $LN2@StartFrame

; 34   : 
; 35   : 	m_dwPreStartTime = timeGetTime();

  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0
  0000f	89 46 08	 mov	 DWORD PTR [esi+8], eax
$LN2@StartFrame:
  00012	5e		 pop	 esi

; 36   : }

  00013	c3		 ret	 0
?StartFrame@TimeReport@@QAEXXZ ENDP			; TimeReport::StartFrame
_TEXT	ENDS
PUBLIC	?return100@@YAIXZ				; return100
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
;	COMDAT ?return100@@YAIXZ
_TEXT	SEGMENT
?return100@@YAIXZ PROC					; return100, COMDAT

; 25   : 	__forceinline unsigned int return100() { __asm mov eax, 100 };

  00000	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  00005	c3		 ret	 0
?return100@@YAIXZ ENDP					; return100
_TEXT	ENDS
PUBLIC	?empty@?$vector@KV?$allocator@K@std@@@std@@QBE_NXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::empty
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?empty@?$vector@KV?$allocator@K@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@KV?$allocator@K@std@@@std@@QBE_NXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::empty, COMDAT
; _this$ = ecx

; 889  : 		return (this->_Myfirst == this->_Mylast);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00005	f7 d8		 neg	 eax
  00007	1b c0		 sbb	 eax, eax
  00009	40		 inc	 eax

; 890  : 		}

  0000a	c3		 ret	 0
?empty@?$vector@KV?$allocator@K@std@@@std@@QBE_NXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::empty
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::size, COMDAT
; _this$ = ecx

; 869  : 		return (this->_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 870  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::size
_TEXT	ENDS
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())
; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 331  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator==
_TEXT	ENDS
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator!=, COMDAT
; _this$ = ecx

; 334  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 335  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 336  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	??R?$less@H@std@@QBE_NABH0@Z			; std::less<int>::operator()
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xfunctional
;	COMDAT ??R?$less@H@std@@QBE_NABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@H@std@@QBE_NABH0@Z PROC			; std::less<int>::operator(), COMDAT
; _this$ = ecx

; 124  : 		{	// apply operator< to operands

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 125  : 		return (_Left < _Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	8b 55 0c	 mov	 edx, DWORD PTR __Right$[ebp]
  0000b	33 c9		 xor	 ecx, ecx
  0000d	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000f	0f 9c c0	 setl	 al

; 126  : 		}

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
??R?$less@H@std@@QBE_NABH0@Z ENDP			; std::less<int>::operator()
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<int const ,TimeReport::PointInfo> >::allocator<std::pair<int const ,TimeReport::PointInfo> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<int const ,TimeReport::PointInfo> >::allocator<std::pair<int const ,TimeReport::PointInfo> >, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<int const ,TimeReport::PointInfo> >::allocator<std::pair<int const ,TimeReport::PointInfo> >
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::_Mynode
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 123  : 		}

  00002	c3		 ret	 0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Isnil
; Function compile flags: /Ogsp
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 612  : 		return ((char&)(*_Pnode)._Isnil);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 1d	 add	 eax, 29			; 0000001dH

; 613  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Left
; Function compile flags: /Ogsp
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Parent
; Function compile flags: /Ogsp
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 628  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Right
; Function compile flags: /Ogsp
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 633  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@$$CBHUPointInfo@TimeReport@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Myval
; Function compile flags: /Ogsp
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@$$CBHUPointInfo@TimeReport@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@$$CBHUPointInfo@TimeReport@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 637  : 		return ((reference)(*_Pnode)._Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 638  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@$$CBHUPointInfo@TimeReport@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<int const ,TimeReport::PointInfo> >::allocator<std::pair<int const ,TimeReport::PointInfo> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<int const ,TimeReport::PointInfo> >::allocator<std::pair<int const ,TimeReport::PointInfo> >, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<int const ,TimeReport::PointInfo> >::allocator<std::pair<int const ,TimeReport::PointInfo> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Node>::deallocate
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 		if (this->_Getcont() == 0
; 233  : 			|| this->_Ptr == 0
; 234  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)
; 235  : 			{	// report error
; 236  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 237  : 			_SCL_SECURE_OUT_OF_RANGE;
; 238  : 			}
; 239  : 
; 240  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 241  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 242  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 243  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 244  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 245  : 
; 246  : 		return (_Mytree::_Myval(this->_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 247  : 		}

  00005	c3		 ret	 0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0

; 39   : 		}

  00005	c3		 ret	 0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1exception@std@@UAE@XZ
  00012	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00016	74 07		 je	 SHORT $LN1@scalar
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	59		 pop	 ecx
$LN1@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Color
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 607  : 		return ((char&)(*_Pnode)._Color);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 1c	 add	 eax, 28			; 0000001cH

; 608  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Min
; Function compile flags: /Ogsp
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Min
$LL2@Min:

; 650  : 			_Pnode = _Left(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Min:

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	80 79 1d 00	 cmp	 BYTE PTR [ecx+29], 0
  00010	74 f6		 je	 SHORT $LL2@Min

; 651  : 		return (_Pnode);
; 652  : 		}

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?_Min@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Min
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	return (_Where);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 58   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 62   : 	}

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Max
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Max
$LL2@Max:

; 643  : 			_Pnode = _Right(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Max:

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	80 79 1d 00	 cmp	 BYTE PTR [ecx+29], 0
  00011	74 f5		 je	 SHORT $LL2@Max

; 644  : 		return (_Pnode);
; 645  : 		}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Max@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Max
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@QAE@U?$less@H@1@@Z ; std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0>::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@QAE@U?$less@H@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@QAE@U?$less@H@1@@Z PROC ; std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0>::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0>, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 41   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@QAE@U?$less@H@1@@Z ENDP ; std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0>::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0>
_TEXT	ENDS
PUBLIC	??$addressof@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@YAPAU?$pair@$$CBHUPointInfo@TimeReport@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,TimeReport::PointInfo> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@YAPAU?$pair@$$CBHUPointInfo@TimeReport@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@YAPAU?$pair@$$CBHUPointInfo@TimeReport@@@0@AAU10@@Z PROC ; std::addressof<std::pair<int const ,TimeReport::PointInfo> >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@YAPAU?$pair@$$CBHUPointInfo@TimeReport@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<int const ,TimeReport::PointInfo> >
_TEXT	ENDS
PUBLIC	??$_Kfn@$$CBHUPointInfo@TimeReport@@@?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@SAABHABU?$pair@$$CBHUPointInfo@TimeReport@@@1@@Z ; std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0>::_Kfn<int const ,TimeReport::PointInfo>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??$_Kfn@$$CBHUPointInfo@TimeReport@@@?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@SAABHABU?$pair@$$CBHUPointInfo@TimeReport@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBHUPointInfo@TimeReport@@@?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@SAABHABU?$pair@$$CBHUPointInfo@TimeReport@@@1@@Z PROC ; std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0>::_Kfn<int const ,TimeReport::PointInfo>, COMDAT

; 66   : 		static const _Kty& _Kfn(const _STD pair<_Ty1, _Ty2>& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 		{	// extract key from element value
; 68   : 		return (_Val.first);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 69   : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Kfn@$$CBHUPointInfo@TimeReport@@@?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@SAABHABU?$pair@$$CBHUPointInfo@TimeReport@@@1@@Z ENDP ; std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0>::_Kfn<int const ,TimeReport::PointInfo>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Node><std::pair<int const ,TimeReport::PointInfo> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Node><std::pair<int const ,TimeReport::PointInfo> >, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Node><std::pair<int const ,TimeReport::PointInfo> >
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Node>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T507238 = -12						; size = 12
$T507243 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	07		 cmp	 ecx, 134217727		; 07ffffffH
  00015	77 0e		 ja	 SHORT $LN1@Allocate
  00017	c1 e1 05	 shl	 ecx, 5
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T507243[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T507243[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T507238[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T507238[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T507238[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<int const ,TimeReport::PointInfo> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<int const ,TimeReport::PointInfo> >::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 0f	 mov	 eax, 268435455		; 0fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<int const ,TimeReport::PointInfo> >::max_size
_TEXT	ENDS
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator--
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 83   : 		{	// predecrement

  00000	8b c1		 mov	 eax, ecx

; 84   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	53		 push	 ebx
  00005	32 db		 xor	 bl, bl
  00007	38 59 1d	 cmp	 BYTE PTR [ecx+29], bl
  0000a	74 07		 je	 SHORT $LN8@operator

; 85   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

  0000c	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
  00011	5b		 pop	 ebx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00012	c3		 ret	 0
$LN8@operator:

; 86   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	38 5a 1d	 cmp	 BYTE PTR [edx+29], bl
  00018	74 07		 je	 SHORT $LN44@operator

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0001a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001d	eb 17		 jmp	 SHORT $LN46@operator

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

$LL22@operator:
  0001f	8b d1		 mov	 edx, ecx
$LN44@operator:
  00021	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00024	38 59 1d	 cmp	 BYTE PTR [ecx+29], bl
  00027	74 f6		 je	 SHORT $LL22@operator

; 89   : 		else

  00029	eb 17		 jmp	 SHORT $LN45@operator
$LL4@operator:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0002f	75 0a		 jne	 SHORT $LN3@operator

; 94   : 				_Ptr = _Pnode;	// ==> parent while left subtree

  00031	89 10		 mov	 DWORD PTR [eax], edx
  00033	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
$LN46@operator:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  00036	38 5a 1d	 cmp	 BYTE PTR [edx+29], bl
  00039	74 f0		 je	 SHORT $LL4@operator
$LN3@operator:

; 95   : 			if (_Mytree::_Isnil(_Ptr))

  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	38 59 1d	 cmp	 BYTE PTR [ecx+29], bl
  00040	75 02		 jne	 SHORT $LN1@operator
$LN45@operator:

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

  00042	89 10		 mov	 DWORD PTR [eax], edx
$LN1@operator:
  00044	5b		 pop	 ebx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00045	c3		 ret	 0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
PUBLIC	??$forward@AAUPointInfo@TimeReport@@@std@@YAAAUPointInfo@TimeReport@@AAU12@@Z ; std::forward<TimeReport::PointInfo &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAUPointInfo@TimeReport@@@std@@YAAAUPointInfo@TimeReport@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUPointInfo@TimeReport@@@std@@YAAAUPointInfo@TimeReport@@AAU12@@Z PROC ; std::forward<TimeReport::PointInfo &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAUPointInfo@TimeReport@@@std@@YAAAUPointInfo@TimeReport@@AAU12@@Z ENDP ; std::forward<TimeReport::PointInfo &>
_TEXT	ENDS
PUBLIC	??$forward@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@YA$$QAU?$pair@$$CBHUPointInfo@TimeReport@@@0@AAU10@@Z ; std::forward<std::pair<int const ,TimeReport::PointInfo> >
; Function compile flags: /Ogsp
;	COMDAT ??$forward@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@YA$$QAU?$pair@$$CBHUPointInfo@TimeReport@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@YA$$QAU?$pair@$$CBHUPointInfo@TimeReport@@@0@AAU10@@Z PROC ; std::forward<std::pair<int const ,TimeReport::PointInfo> >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@YA$$QAU?$pair@$$CBHUPointInfo@TimeReport@@@0@AAU10@@Z ENDP ; std::forward<std::pair<int const ,TimeReport::PointInfo> >
_TEXT	ENDS
PUBLIC	??$_Iter_cat@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Iter_cat@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > > >, COMDAT

; 476  : 	{	// return category from iterator argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 477  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 478  : 	return (_Cat);

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 479  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Iter_cat@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > > >
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@YAXPAU?$pair@$$CBHUPointInfo@TimeReport@@@0@@Z ; std::_Destroy<std::pair<int const ,TimeReport::PointInfo> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@YAXPAU?$pair@$$CBHUPointInfo@TimeReport@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@YAXPAU?$pair@$$CBHUPointInfo@TimeReport@@@0@@Z PROC ; std::_Destroy<std::pair<int const ,TimeReport::PointInfo> >, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@YAXPAU?$pair@$$CBHUPointInfo@TimeReport@@@0@@Z ENDP ; std::_Destroy<std::pair<int const ,TimeReport::PointInfo> >
_TEXT	ENDS
PUBLIC	??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > > &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > > &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > > &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > > &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$forward@$$CBH@std@@YA$$QBHABH@Z		; std::forward<int const >
; Function compile flags: /Ogsp
;	COMDAT ??$forward@$$CBH@std@@YA$$QBHABH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@$$CBH@std@@YA$$QBHABH@Z PROC			; std::forward<int const >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@$$CBH@std@@YA$$QBHABH@Z ENDP			; std::forward<int const >
_TEXT	ENDS
PUBLIC	??$forward@UPointInfo@TimeReport@@@std@@YA$$QAUPointInfo@TimeReport@@AAU12@@Z ; std::forward<TimeReport::PointInfo>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@UPointInfo@TimeReport@@@std@@YA$$QAUPointInfo@TimeReport@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UPointInfo@TimeReport@@@std@@YA$$QAUPointInfo@TimeReport@@AAU12@@Z PROC ; std::forward<TimeReport::PointInfo>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@UPointInfo@TimeReport@@@std@@YA$$QAUPointInfo@TimeReport@@AAU12@@Z ENDP ; std::forward<TimeReport::PointInfo>
_TEXT	ENDS
PUBLIC	??$move@ABH@std@@YA$$QBHABH@Z			; std::move<int const &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@ABH@std@@YA$$QBHABH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@ABH@std@@YA$$QBHABH@Z PROC			; std::move<int const &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@ABH@std@@YA$$QBHABH@Z ENDP			; std::move<int const &>
_TEXT	ENDS
PUBLIC	??$move@AAUPointInfo@TimeReport@@@std@@YA$$QAUPointInfo@TimeReport@@AAU12@@Z ; std::move<TimeReport::PointInfo &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@AAUPointInfo@TimeReport@@@std@@YA$$QAUPointInfo@TimeReport@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUPointInfo@TimeReport@@@std@@YA$$QAUPointInfo@TimeReport@@AAU12@@Z PROC ; std::move<TimeReport::PointInfo &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAUPointInfo@TimeReport@@@std@@YA$$QAUPointInfo@TimeReport@@AAU12@@Z ENDP ; std::move<TimeReport::PointInfo &>
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00008	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::operator[]
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@KV?$allocator@K@std@@@std@@IBE_NPBK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Inside
; Function compile flags: /Ogsp
;	COMDAT ?_Inside@?$vector@KV?$allocator@K@std@@@std@@IBE_NPBK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@KV?$allocator@K@std@@@std@@IBE_NPBK@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@KV?$allocator@K@std@@@std@@IBE_NPBK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@IBEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@IBEXPAK0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@IBEXPAK0@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@IBEXPAK0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@XZ ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::~_Vector_val<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::~_Vector_val<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::~_Vector_val<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??0?$allocator@K@std@@QAE@XZ			; std::allocator<unsigned long>::allocator<unsigned long>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@K@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@K@std@@QAE@XZ PROC			; std::allocator<unsigned long>::allocator<unsigned long>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@K@std@@QAE@XZ ENDP			; std::allocator<unsigned long>::allocator<unsigned long>
_TEXT	ENDS
PUBLIC	?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 778  : 		}

  00008	c3		 ret	 0
?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
  0000b	cc		 int	 3
?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@K@std@@QAE@ABV01@@Z		; std::allocator<unsigned long>::allocator<unsigned long>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@K@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@K@std@@QAE@ABV01@@Z PROC			; std::allocator<unsigned long>::allocator<unsigned long>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@K@std@@QAE@ABV01@@Z ENDP			; std::allocator<unsigned long>::allocator<unsigned long>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@K@std@@QAEXPAKI@Z	; std::allocator<unsigned long>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@K@std@@QAEXPAKI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@K@std@@QAEXPAKI@Z PROC		; std::allocator<unsigned long>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@K@std@@QAEXPAKI@Z ENDP		; std::allocator<unsigned long>::deallocate
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@K@std@@QBEIXZ		; std::allocator<unsigned long>::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@K@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@K@std@@QBEIXZ PROC		; std::allocator<unsigned long>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@K@std@@QBEIXZ ENDP		; std::allocator<unsigned long>::max_size
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::_Compat
; Function compile flags: /Ogsp
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::_Compat
_TEXT	ENDS
PUBLIC	??$addressof@$$CBK@std@@YAPBKABK@Z		; std::addressof<unsigned long const >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@$$CBK@std@@YAPBKABK@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBK@std@@YAPBKABK@Z PROC			; std::addressof<unsigned long const >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@$$CBK@std@@YAPBKABK@Z ENDP			; std::addressof<unsigned long const >
_TEXT	ENDS
PUBLIC	??$_Allocate@K@std@@YAPAKIPAK@Z			; std::_Allocate<unsigned long>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@K@std@@YAPAKIPAK@Z
_TEXT	SEGMENT
$T507384 = -12						; size = 12
$T507388 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@K@std@@YAPAKIPAK@Z PROC			; std::_Allocate<unsigned long>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3e		 je	 SHORT $LN5@Allocate@2

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate@2
  00017	8b c1		 mov	 eax, ecx
  00019	c1 e0 02	 shl	 eax, 2
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	59		 pop	 ecx
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 26		 jne	 SHORT $LN5@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	83 65 08 00	 and	 DWORD PTR $T507388[ebp], 0
  0002b	8d 45 08	 lea	 eax, DWORD PTR $T507388[ebp]
  0002e	50		 push	 eax
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T507384[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003d	8d 45 f4	 lea	 eax, DWORD PTR $T507384[ebp]
  00040	50		 push	 eax
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T507384[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:

; 40   : 	}

  0004d	c9		 leave
  0004e	c3		 ret	 0
$LN9@Allocate@2:
??$_Allocate@K@std@@YAPAKIPAK@Z ENDP			; std::_Allocate<unsigned long>
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$forward@AAH@std@@YAAAHAAH@Z			; std::forward<int &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAH@std@@YAAAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAH@std@@YAAAHAAH@Z PROC			; std::forward<int &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAH@std@@YAAAHAAH@Z ENDP			; std::forward<int &>
_TEXT	ENDS
PUBLIC	??$forward@AAK@std@@YAAAKAAK@Z			; std::forward<unsigned long &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@AAK@std@@YAAAKAAK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAK@std@@YAAAKAAK@Z PROC			; std::forward<unsigned long &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAK@std@@YAAAKAAK@Z ENDP			; std::forward<unsigned long &>
_TEXT	ENDS
PUBLIC	??$construct@AAK@?$allocator@K@std@@QAEXPAKAAK@Z ; std::allocator<unsigned long>::construct<unsigned long &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAK@?$allocator@K@std@@QAEXPAKAAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAK@?$allocator@K@std@@QAEXPAKAAK@Z PROC	; std::allocator<unsigned long>::construct<unsigned long &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@construct:

; 209  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
??$construct@AAK@?$allocator@K@std@@QAEXPAKAAK@Z ENDP	; std::allocator<unsigned long>::construct<unsigned long &>
_TEXT	ENDS
PUBLIC	??$forward@ABK@std@@YAABKABK@Z			; std::forward<unsigned long const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABK@std@@YAABKABK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABK@std@@YAABKABK@Z PROC			; std::forward<unsigned long const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABK@std@@YAABKABK@Z ENDP			; std::forward<unsigned long const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z ; std::_Ptr_cat<unsigned long,unsigned long>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z PROC ; std::_Ptr_cat<unsigned long,unsigned long>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z ENDP ; std::_Ptr_cat<unsigned long,unsigned long>
_TEXT	ENDS
PUBLIC	??$_Move@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<unsigned long *,unsigned long *>
EXTRN	__imp__memmove:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$_Move@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<unsigned long *,unsigned long *>, COMDAT

; 2522 : 	{	// move [_First, _Last) to [_Dest, ...), pointers to scalars

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2523 : 	ptrdiff_t _Count = _Last - _First;

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	57		 push	 edi

; 2524 : 	_CSTD memmove(&*_Dest, &*_First,
; 2525 : 		_Count * sizeof (*_First));

  0000b	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0000e	c1 fe 02	 sar	 esi, 2
  00011	c1 e6 02	 shl	 esi, 2
  00014	56		 push	 esi
  00015	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00018	57		 push	 edi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2526 : 	return (_Dest + _Count);

  00022	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 2527 : 	}

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Move@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<unsigned long *,unsigned long *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<unsigned long> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned long> >, COMDAT

; 105  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT

; 94   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 95   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 96   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
_TEXT	ENDS
PUBLIC	??$_Construct@KABK@std@@YAXPAKABK@Z		; std::_Construct<unsigned long,unsigned long const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Construct@KABK@std@@YAXPAKABK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@KABK@std@@YAXPAKABK@Z PROC		; std::_Construct<unsigned long,unsigned long const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@Construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@Construct:

; 49   : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Construct@KABK@std@@YAXPAKABK@Z ENDP		; std::_Construct<unsigned long,unsigned long const &>
_TEXT	ENDS
PUBLIC	??$move@AA_N@std@@YA$$QA_NAA_N@Z		; std::move<bool &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AA_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AA_N@std@@YA$$QA_NAA_N@Z PROC			; std::move<bool &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AA_N@std@@YA$$QA_NAA_N@Z ENDP			; std::move<bool &>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAK@std@@YAPAKPAK@Z		; std::_Val_type<unsigned long *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAK@std@@YAPAKPAK@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAK@std@@YAPAKPAK@Z PROC			; std::_Val_type<unsigned long *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAK@std@@YAPAKPAK@Z ENDP			; std::_Val_type<unsigned long *>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@KKK@std@@YAPAKPAK00AAV?$allocator@K@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<unsigned long,unsigned long,unsigned long>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@KKK@std@@YAPAKPAK00AAV?$allocator@K@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@KKK@std@@YAPAKPAK00AAV?$allocator@K@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<unsigned long,unsigned long,unsigned long>, COMDAT

; 456  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 457  : 	_DEBUG_RANGE(_First, _Last);
; 458  : 	_DEBUG_POINTER(_Dest);
; 459  : 	size_t _Count = (size_t)(_Last - _First);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2

; 460  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 461  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 462  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninit_move@KKK@std@@YAPAKPAK00AAV?$allocator@K@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<unsigned long,unsigned long,unsigned long>
_TEXT	ENDS
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
PUBLIC	?GetPointCount@TimeReport@@QBEHXZ		; TimeReport::GetPointCount
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\timereport.cpp
;	COMDAT ?GetPointCount@TimeReport@@QBEHXZ
_TEXT	SEGMENT
?GetPointCount@TimeReport@@QBEHXZ PROC			; TimeReport::GetPointCount, COMDAT
; _this$ = ecx

; 115  : 	return m_FrameTable.size();

  00000	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]

; 116  : }

  00003	c3		 ret	 0
?GetPointCount@TimeReport@@QBEHXZ ENDP			; TimeReport::GetPointCount
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Lmost
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1759 : 		return (this->_Left(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1760 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Rmost
; Function compile flags: /Ogsp
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1784 : 		return (this->_Right(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1785 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Root
; Function compile flags: /Ogsp
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1790 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::~_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::~_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >, COMDAT
; _this$ = ecx

; 555  : 		this->_Alnod.deallocate(this->_Myhead, 1);

  00000	ff 71 04	 push	 DWORD PTR [ecx+4]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx

; 556  : 		}

  00009	c3		 ret	 0
??1?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::~_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Key
; Function compile flags: /Ogsp
;	COMDAT ?_Key@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Key, COMDAT

; 616  : 		{	// return reference to key in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 617  : 		return ((key_type&)_Traits::_Kfn(_Myval(_Pnode)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 618  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Key@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Key
_TEXT	ENDS
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 396  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 397  : 		}

  00005	c3		 ret	 0
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >, COMDAT
; _this$ = ecx

; 208  : 		{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0

; 209  : 		}

  00005	c3		 ret	 0
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >
_TEXT	ENDS
PUBLIC	??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator*, COMDAT
; _this$ = ecx

; 49   : 		return (_Mytree::_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 50   : 		}

  00005	c3		 ret	 0
??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator*
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Lbound
; Function compile flags: /Ogsp
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@ABH@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 1741 : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1742 : 		_Nodeptr _Pnode = _Root();

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00009	80 79 1d 00	 cmp	 BYTE PTR [ecx+29], 0
  0000d	75 19		 jne	 SHORT $LN3@Lbound
  0000f	8b 55 08	 mov	 edx, DWORD PTR __Keyval$[ebp]
  00012	8b 12		 mov	 edx, DWORD PTR [edx]
$LL4@Lbound:

; 1746 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	7d 05		 jge	 SHORT $LN2@Lbound

; 1747 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1748 : 			else

  0001c	eb 04		 jmp	 SHORT $LN1@Lbound
$LN2@Lbound:

; 1749 : 				{	// _Pnode not less than _Keyval, remember it
; 1750 : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 1751 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN1@Lbound:

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00022	80 79 1d 00	 cmp	 BYTE PTR [ecx+29], 0
  00026	74 ec		 je	 SHORT $LL4@Lbound
$LN3@Lbound:

; 1752 : 				}
; 1753 : 
; 1754 : 		return (_Wherenode);	// return best remembered candidate
; 1755 : 		}

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 44   : 		this->_Adopt(_Plist);
; 45   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	53		 push	 ebx
  00005	32 db		 xor	 bl, bl
  00007	38 59 1d	 cmp	 BYTE PTR [ecx+29], bl
  0000a	75 2d		 jne	 SHORT $LN3@operator@2

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

  0000c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000f	38 5a 1d	 cmp	 BYTE PTR [edx+29], bl
  00012	75 0d		 jne	 SHORT $LN34@operator@2

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

$LL18@operator@2:
  00014	8b ca		 mov	 ecx, edx
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	38 5a 1d	 cmp	 BYTE PTR [edx+29], bl
  0001b	74 f7		 je	 SHORT $LL18@operator@2
  0001d	89 08		 mov	 DWORD PTR [eax], ecx
  0001f	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  00020	c3		 ret	 0
$LN34@operator@2:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00021	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00024	eb 0c		 jmp	 SHORT $LN38@operator@2
$LL2@operator@2:
  00026	8b 08		 mov	 ecx, DWORD PTR [eax]
  00028	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  0002b	75 0a		 jne	 SHORT $LN1@operator@2

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
$LN38@operator@2:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00032	38 5a 1d	 cmp	 BYTE PTR [edx+29], bl
  00035	74 ef		 je	 SHORT $LL2@operator@2
$LN1@operator@2:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

  00037	89 10		 mov	 DWORD PTR [eax], edx
$LN3@operator@2:
  00039	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  0003a	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >, COMDAT
; _this$ = ecx

; 482  : 		{	// construct traits from _Parg and allocators from _Al

  00000	8b c1		 mov	 eax, ecx

; 483  : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Node>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Node>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Lrotate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00009	56		 push	 esi

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

  0000f	8b 30		 mov	 esi, DWORD PTR [eax]
  00011	80 7e 1d 00	 cmp	 BYTE PTR [esi+29], 0
  00015	75 03		 jne	 SHORT $LN5@Lrotate

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Lrotate:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 05		 jne	 SHORT $LN4@Lrotate

; 1772 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

  0002c	eb 0e		 jmp	 SHORT $LN1@Lrotate
$LN4@Lrotate:
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00033	75 04		 jne	 SHORT $LN2@Lrotate

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  00035	89 01		 mov	 DWORD PTR [ecx], eax

; 1775 : 		else

  00037	eb 03		 jmp	 SHORT $LN1@Lrotate
$LN2@Lrotate:

; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00039	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@Lrotate:

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0003c	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  0003e	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Rrotate
; Function compile flags: /Ogsp
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	56		 push	 esi

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

  00009	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000c	89 32		 mov	 DWORD PTR [edx], esi

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

  0000e	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00011	80 7e 1d 00	 cmp	 BYTE PTR [esi+29], 0
  00015	75 03		 jne	 SHORT $LN5@Rrotate

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Rrotate:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 05		 jne	 SHORT $LN4@Rrotate

; 1802 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

  0002c	eb 0f		 jmp	 SHORT $LN1@Rrotate
$LN4@Rrotate:
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00034	75 05		 jne	 SHORT $LN2@Rrotate

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00036	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1805 : 		else

  00039	eb 02		 jmp	 SHORT $LN1@Rrotate
$LN2@Rrotate:

; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  0003b	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@Rrotate:

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  0003d	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00040	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QAEXPAU?$pair@$$CBHUPointInfo@TimeReport@@@2@@Z ; std::allocator<std::pair<int const ,TimeReport::PointInfo> >::destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QAEXPAU?$pair@$$CBHUPointInfo@TimeReport@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QAEXPAU?$pair@$$CBHUPointInfo@TimeReport@@@2@@Z PROC ; std::allocator<std::pair<int const ,TimeReport::PointInfo> >::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QAEXPAU?$pair@$$CBHUPointInfo@TimeReport@@@2@@Z ENDP ; std::allocator<std::pair<int const ,TimeReport::PointInfo> >::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::max_size, COMDAT
; _this$ = ecx

; 874  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 0f	 mov	 eax, 268435455		; 0fffffffH

; 875  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::max_size
_TEXT	ENDS
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator--
; Function compile flags: /Ogsp
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 277  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 278  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 279  : 		if (this->_Getcont() == 0
; 280  : 			|| this->_Ptr == 0)
; 281  : 			{	// report error
; 282  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 283  : 			_SCL_SECURE_OUT_OF_RANGE;
; 284  : 			}
; 285  : 
; 286  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 287  : 		--(*(_Mybase *)this);
; 288  : 		if (_Ptrsav == this->_Ptr)
; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 291  : 			_SCL_SECURE_OUT_OF_RANGE;
; 292  : 			}
; 293  : 
; 294  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 295  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 296  : 
; 297  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 298  : 		--(*(_Mybase *)this);
; 299  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 300  : 
; 301  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 302  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator--

; 303  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 304  : 
; 305  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 306  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 146  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??$?0AAHAAUPointInfo@TimeReport@@@?$_Pair_base@$$CBHUPointInfo@TimeReport@@@std@@QAE@AAHAAUPointInfo@TimeReport@@@Z ; std::_Pair_base<int const ,TimeReport::PointInfo>::_Pair_base<int const ,TimeReport::PointInfo><int &,TimeReport::PointInfo &>
; Function compile flags: /Ogsp
;	COMDAT ??$?0AAHAAUPointInfo@TimeReport@@@?$_Pair_base@$$CBHUPointInfo@TimeReport@@@std@@QAE@AAHAAUPointInfo@TimeReport@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAHAAUPointInfo@TimeReport@@@?$_Pair_base@$$CBHUPointInfo@TimeReport@@@std@@QAE@AAHAAUPointInfo@TimeReport@@@Z PROC ; std::_Pair_base<int const ,TimeReport::PointInfo>::_Pair_base<int const ,TimeReport::PointInfo><int &,TimeReport::PointInfo &>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 0c	 mov	 esi, DWORD PTR __Val2$[ebp]
  00007	8b c1		 mov	 eax, ecx
  00009	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  0000c	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000e	57		 push	 edi
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
  00011	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  00014	a5		 movsd
  00015	a5		 movsd
  00016	a5		 movsd
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi

; 164  : 		}

  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
??$?0AAHAAUPointInfo@TimeReport@@@?$_Pair_base@$$CBHUPointInfo@TimeReport@@@std@@QAE@AAHAAUPointInfo@TimeReport@@@Z ENDP ; std::_Pair_base<int const ,TimeReport::PointInfo>::_Pair_base<int const ,TimeReport::PointInfo><int &,TimeReport::PointInfo &>
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Buynode
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Buynode@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
$T507822 = -16						; size = 12
$T507799 = -4						; size = 4
?_Buynode@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 559  : 		{	// allocate a node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00007	6a 20		 push	 32			; 00000020H
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	59		 pop	 ecx
  00011	33 c9		 xor	 ecx, ecx
  00013	3b c1		 cmp	 eax, ecx
  00015	74 18		 je	 SHORT $LN5@Buynode

; 561  : 
; 562  : 		this->_Left(_Wherenode) = this->_Myhead;

  00017	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001a	89 10		 mov	 DWORD PTR [eax], edx

; 563  : 		this->_Parent(_Wherenode) = this->_Myhead;

  0001c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001f	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 564  : 		this->_Right(_Wherenode) = this->_Myhead;

  00022	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00025	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 565  : 		this->_Color(_Wherenode) = this->_Red;

  00028	66 89 48 1c	 mov	 WORD PTR [eax+28], cx
  0002c	5e		 pop	 esi

; 566  : 		this->_Isnil(_Wherenode) = false;
; 567  : 		return (_Wherenode);
; 568  : 		}

  0002d	c9		 leave
  0002e	c3		 ret	 0

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

$LN5@Buynode:
  0002f	8d 45 fc	 lea	 eax, DWORD PTR $T507799[ebp]
  00032	89 4d fc	 mov	 DWORD PTR $T507799[ebp], ecx
  00035	50		 push	 eax
  00036	8d 4d f0	 lea	 ecx, DWORD PTR $T507822[ebp]
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  0003f	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00044	8d 45 f0	 lea	 eax, DWORD PTR $T507822[ebp]
  00047	50		 push	 eax
  00048	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T507822[ebp], OFFSET ??_7bad_alloc@std@@6B@
  0004f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN27@Buynode:
$LN26@Buynode:
  00054	cc		 int	 3
?_Buynode@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > > &,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 164  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@$$CBHUPointInfo@TimeReport@@@std@@QAE@$$QBH$$QAUPointInfo@TimeReport@@@Z ; std::_Pair_base<int const ,TimeReport::PointInfo>::_Pair_base<int const ,TimeReport::PointInfo>
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Pair_base@$$CBHUPointInfo@TimeReport@@@std@@QAE@$$QBH$$QAUPointInfo@TimeReport@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@$$CBHUPointInfo@TimeReport@@@std@@QAE@$$QBH$$QAUPointInfo@TimeReport@@@Z PROC ; std::_Pair_base<int const ,TimeReport::PointInfo>::_Pair_base<int const ,TimeReport::PointInfo>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 0c	 mov	 esi, DWORD PTR __Val2$[ebp]
  00007	8b c1		 mov	 eax, ecx
  00009	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  0000c	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000e	57		 push	 edi
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
  00011	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  00014	a5		 movsd
  00015	a5		 movsd
  00016	a5		 movsd
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi

; 146  : 		}

  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
??0?$_Pair_base@$$CBHUPointInfo@TimeReport@@@std@@QAE@$$QBH$$QAUPointInfo@TimeReport@@@Z ENDP ; std::_Pair_base<int const ,TimeReport::PointInfo>::_Pair_base<int const ,TimeReport::PointInfo>
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@V?$allocator@K@1@@Z ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::_Vector_val<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@V?$allocator@K@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@V?$allocator@K@1@@Z PROC ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::_Vector_val<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@V?$allocator@K@1@@Z ENDP ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::_Vector_val<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  00008	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  0000d	c1 f8 02	 sar	 eax, 2
  00010	8b c8		 mov	 ecx, eax
  00012	d1 e9		 shr	 ecx, 1
  00014	2b d1		 sub	 edx, ecx
  00016	3b d0		 cmp	 edx, eax
  00018	73 04		 jae	 SHORT $LN4@Grow_to
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 02		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  0001e	03 c1		 add	 eax, ecx
$LN5@Grow_to:

; 1279 : 		if (_Capacity < _Count)

  00020	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00023	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Grow_to
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::_Vector_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::_Vector_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::_Vector_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@K@std@@QAEPAKI@Z		; std::allocator<unsigned long>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@K@std@@QAEPAKI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@K@std@@QAEPAKI@Z PROC		; std::allocator<unsigned long>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@K@std@@YAPAKIPAK@Z ; std::_Allocate<unsigned long>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@K@std@@QAEPAKI@Z ENDP		; std::allocator<unsigned long>::allocate
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator==
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator==
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@K@std@@KAAK@std@@YAXAAV?$allocator@K@0@PAKAAK@Z ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@K@std@@KAAK@std@@YAXAAV?$allocator@K@0@PAKAAK@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@K@std@@KAAK@std@@YAXAAV?$allocator@K@0@PAKAAK@Z PROC ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN7@Cons_val
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@Cons_val:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@K@std@@KAAK@std@@YAXAAV?$allocator@K@0@PAKAAK@Z ENDP ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long &>
_TEXT	ENDS
PUBLIC	??$_Move@PAKPAK@std@@YAPAKPAK00@Z		; std::_Move<unsigned long *,unsigned long *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAKPAK@std@@YAPAKPAK00@Z
_TEXT	SEGMENT
__Cat$507949 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAKPAK@std@@YAPAKPAK00@Z PROC			; std::_Move<unsigned long *,unsigned long *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$507949[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<unsigned long *,unsigned long *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAKPAK@std@@YAPAKPAK00@Z ENDP			; std::_Move<unsigned long *,unsigned long *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z ; std::_Destroy_range<std::allocator<unsigned long> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned long> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 101  : 	{	// exchange values stored at _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 102  : 	_Ty _Tmp = _Move(_Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8a 08		 mov	 cl, BYTE PTR [eax]
  00008	56		 push	 esi

; 103  : 	_Left = _Move(_Right);

  00009	8b 75 0c	 mov	 esi, DWORD PTR __Right$[ebp]
  0000c	8a 16		 mov	 dl, BYTE PTR [esi]
  0000e	88 10		 mov	 BYTE PTR [eax], dl

; 104  : 	_Right = _Move(_Tmp);

  00010	88 0e		 mov	 BYTE PTR [esi], cl
  00012	5e		 pop	 esi

; 105  : 	}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@K@std@@QAEXPAKABK@Z	; std::allocator<unsigned long>::construct
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@K@std@@QAEXPAKABK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@K@std@@QAEXPAKABK@Z PROC		; std::allocator<unsigned long>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN5@construct@2
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN5@construct@2:

; 198  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?construct@?$allocator@K@std@@QAEXPAKABK@Z ENDP		; std::allocator<unsigned long>::construct
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::allocator<unsigned long> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z PROC ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::allocator<unsigned long> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2
  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 472  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z ENDP ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >, COMDAT
; _this$ = ecx

; 372  : 	_Tree_iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0

; 373  : 		{	// construct with null node
; 374  : 		}

  00005	c3		 ret	 0
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >
_TEXT	ENDS
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator->
; Function compile flags: /Ogsp
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ
_TEXT	SEGMENT
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator->, COMDAT
; _this$ = ecx

; 401  : 		return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 402  : 		}

  00005	c3		 ret	 0
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator->
_TEXT	ENDS
PUBLIC	??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPBU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator->
; Function compile flags: /Ogsp
;	COMDAT ??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPBU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ
_TEXT	SEGMENT
??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPBU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator->, COMDAT
; _this$ = ecx

; 54   : 		return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 55   : 		}

  00005	c3		 ret	 0
??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPBU?$pair@$$CBHUPointInfo@TimeReport@@@1@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator->
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 214  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))
; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 257  : 			_SCL_SECURE_OUT_OF_RANGE;
; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator++

; 266  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 267  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z
_TEXT	SEGMENT
$T508111 = -16						; size = 12
$T508095 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >, COMDAT
; _this$ = ecx

; 542  : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 543  : 		this->_Mysize = 0;

  00009	83 66 08 00	 and	 DWORD PTR [esi+8], 0

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

  0000d	6a 20		 push	 32			; 00000020H
  0000f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00014	59		 pop	 ecx
  00015	85 c0		 test	 eax, eax
  00017	74 26		 je	 SHORT $LN15@Tree_val
  00019	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 545  : 
; 546  : 		this->_Left(this->_Myhead) = this->_Myhead;

  0001c	89 00		 mov	 DWORD PTR [eax], eax

; 547  : 		this->_Parent(this->_Myhead) = this->_Myhead;

  0001e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00021	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 548  : 		this->_Right(this->_Myhead) = this->_Myhead;

  00024	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00027	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 549  : 		this->_Color(this->_Myhead) = this->_Black;

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	c6 40 1c 01	 mov	 BYTE PTR [eax+28], 1

; 550  : 		this->_Isnil(this->_Myhead) = true;

  00031	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00034	c6 40 1d 01	 mov	 BYTE PTR [eax+29], 1

; 551  : 		}

  00038	8b c6		 mov	 eax, esi
  0003a	5e		 pop	 esi
  0003b	c9		 leave
  0003c	c2 08 00	 ret	 8

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

$LN15@Tree_val:
  0003f	83 65 fc 00	 and	 DWORD PTR $T508095[ebp], 0
  00043	8d 45 fc	 lea	 eax, DWORD PTR $T508095[ebp]
  00046	50		 push	 eax
  00047	8d 4d f0	 lea	 ecx, DWORD PTR $T508111[ebp]
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00050	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00055	8d 45 f0	 lea	 eax, DWORD PTR $T508111[ebp]
  00058	50		 push	 eax
  00059	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T508111[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00060	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN37@Tree_val:
$LN36@Tree_val:
  00065	cc		 int	 3
??0?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 270  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 271  : 		_Myiter _Tmp = *this;

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 06		 mov	 DWORD PTR [esi], eax

; 272  : 		++*this;

  0000b	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator++

; 273  : 		return (_Tmp);

  00010	8b c6		 mov	 eax, esi
  00012	5e		 pop	 esi

; 274  : 		}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??$?0AAHAAUPointInfo@TimeReport@@@?$pair@$$CBHUPointInfo@TimeReport@@@std@@QAE@AAHAAUPointInfo@TimeReport@@@Z ; std::pair<int const ,TimeReport::PointInfo>::pair<int const ,TimeReport::PointInfo><int &,TimeReport::PointInfo &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAHAAUPointInfo@TimeReport@@@?$pair@$$CBHUPointInfo@TimeReport@@@std@@QAE@AAHAAUPointInfo@TimeReport@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAHAAUPointInfo@TimeReport@@@?$pair@$$CBHUPointInfo@TimeReport@@@std@@QAE@AAHAAUPointInfo@TimeReport@@@Z PROC ; std::pair<int const ,TimeReport::PointInfo>::pair<int const ,TimeReport::PointInfo><int &,TimeReport::PointInfo &>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 0c	 mov	 esi, DWORD PTR __Val2$[ebp]
  00007	8b c1		 mov	 eax, ecx
  00009	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  0000c	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000e	57		 push	 edi
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
  00011	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  00014	a5		 movsd
  00015	a5		 movsd
  00016	a5		 movsd
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi

; 248  : 		}

  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
??$?0AAHAAUPointInfo@TimeReport@@@?$pair@$$CBHUPointInfo@TimeReport@@@std@@QAE@AAHAAUPointInfo@TimeReport@@@Z ENDP ; std::pair<int const ,TimeReport::PointInfo>::pair<int const ,TimeReport::PointInfo><int &,TimeReport::PointInfo &>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@U?$pair@$$CBHUPointInfo@TimeReport@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@0@PAU?$pair@$$CBHUPointInfo@TimeReport@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<int const ,TimeReport::PointInfo> >,std::pair<int const ,TimeReport::PointInfo> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@U?$pair@$$CBHUPointInfo@TimeReport@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@0@PAU?$pair@$$CBHUPointInfo@TimeReport@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@U?$pair@$$CBHUPointInfo@TimeReport@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@0@PAU?$pair@$$CBHUPointInfo@TimeReport@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<int const ,TimeReport::PointInfo> >,std::pair<int const ,TimeReport::PointInfo> >, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@U?$pair@$$CBHUPointInfo@TimeReport@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@0@PAU?$pair@$$CBHUPointInfo@TimeReport@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<int const ,TimeReport::PointInfo> >,std::pair<int const ,TimeReport::PointInfo> >
_TEXT	ENDS
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator--
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 418  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 419  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator--

; 420  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 421  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 227  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 228  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??$_Advance@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@H@std@@YAXAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@HUbidirectional_iterator_tag@0@@Z ; std::_Advance<std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,int>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Advance@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@H@std@@YAXAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@HUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Off$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Advance@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@H@std@@YAXAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@HUbidirectional_iterator_tag@0@@Z PROC ; std::_Advance<std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,int>, COMDAT

; 830  : 	{	// increment iterator by offset, bidirectional iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 831  : 	for (; 0 < _Off; --_Off)

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Off$[ebp]
  00007	eb 09		 jmp	 SHORT $LN17@Advance
$LL6@Advance:

; 832  : 		++_Where;

  00009	8b 4d 08	 mov	 ecx, DWORD PTR __Where$[ebp]
  0000c	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator++
  00011	4e		 dec	 esi
$LN17@Advance:

; 831  : 	for (; 0 < _Off; --_Off)

  00012	85 f6		 test	 esi, esi
  00014	7f f3		 jg	 SHORT $LL6@Advance

; 833  : 	for (; _Off < 0; ++_Off)

  00016	79 0d		 jns	 SHORT $LN1@Advance
  00018	f7 de		 neg	 esi
$LL3@Advance:

; 834  : 		--_Where;

  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Where$[ebp]
  0001d	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator--
  00022	4e		 dec	 esi
  00023	75 f5		 jne	 SHORT $LL3@Advance
$LN1@Advance:
  00025	5e		 pop	 esi

; 835  : 	}

  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Advance@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@H@std@@YAXAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@HUbidirectional_iterator_tag@0@@Z ENDP ; std::_Advance<std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,int>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > > &,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 248  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??$?0$$CBHUPointInfo@TimeReport@@@?$pair@$$CBHUPointInfo@TimeReport@@@std@@QAE@$$QAU01@@Z ; std::pair<int const ,TimeReport::PointInfo>::pair<int const ,TimeReport::PointInfo><int const ,TimeReport::PointInfo>
; Function compile flags: /Ogsp
;	COMDAT ??$?0$$CBHUPointInfo@TimeReport@@@?$pair@$$CBHUPointInfo@TimeReport@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0$$CBHUPointInfo@TimeReport@@@?$pair@$$CBHUPointInfo@TimeReport@@@std@@QAE@$$QAU01@@Z PROC ; std::pair<int const ,TimeReport::PointInfo>::pair<int const ,TimeReport::PointInfo><int const ,TimeReport::PointInfo>, COMDAT
; _this$ = ecx

; 255  : 		{	// construct from moved compatible pair

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b c1		 mov	 eax, ecx
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
  00011	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  00014	a5		 movsd
  00015	a5		 movsd
  00016	a5		 movsd
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi

; 256  : 		}

  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??$?0$$CBHUPointInfo@TimeReport@@@?$pair@$$CBHUPointInfo@TimeReport@@@std@@QAE@$$QAU01@@Z ENDP ; std::pair<int const ,TimeReport::PointInfo>::pair<int const ,TimeReport::PointInfo><int const ,TimeReport::PointInfo>
_TEXT	ENDS
PUBLIC	??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@XZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@XZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::end
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Make_iter
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator!=
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@K@std@@KABK@std@@YAXAAV?$allocator@K@0@PAKABK@Z ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@K@std@@KABK@std@@YAXAAV?$allocator@K@0@PAKABK@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@K@std@@KABK@std@@YAXAAV?$allocator@K@0@PAKABK@Z PROC ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN9@Cons_val@2
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN9@Cons_val@2:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@K@std@@KABK@std@@YAXAAV?$allocator@K@0@PAKABK@Z ENDP ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long const &>
_TEXT	ENDS
PUBLIC	??$_Umove@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Umove<unsigned long *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??$_Umove@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Umove<unsigned long *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::allocator<unsigned long> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Umove<unsigned long *>
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::begin
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::begin, COMDAT
; _this$ = ecx

; 811  : 		{	// return iterator for beginning of nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 812  : 		return (const_iterator(_Lmost(), this));

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 813  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::begin
_TEXT	ENDS
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 405  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 406  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator++

; 407  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 408  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z
_TEXT	SEGMENT
$T508444 = -4						; size = 4
$T508439 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >, COMDAT
; _this$ = ecx

; 698  : 		{	// construct empty tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	51		 push	 ecx
  00006	89 65 fc	 mov	 DWORD PTR $T508439[ebp], esp
  00009	89 65 fc	 mov	 DWORD PTR $T508444[ebp], esp
  0000c	ff 75 08	 push	 DWORD PTR __Parg$[ebp]
  0000f	8b f1		 mov	 esi, ecx
  00011	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >

; 699  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	c9		 leave
  0001a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Erase
; Function compile flags: /Ogsp
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1610 : 		{	// free entire subtree, recursively

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1611 : 		for (_Nodeptr _Pnode = _Rootnode;

  00006	8b 7d 08	 mov	 edi, DWORD PTR __Rootnode$[ebp]

; 1612 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

  00009	80 7f 1d 00	 cmp	 BYTE PTR [edi+29], 0
  0000d	8b d9		 mov	 ebx, ecx
  0000f	8b f7		 mov	 esi, edi
  00011	75 1b		 jne	 SHORT $LN1@Erase
$LL3@Erase:

; 1613 : 			{	// free subtrees, then node
; 1614 : 			_Erase(this->_Right(_Pnode));

  00013	ff 76 08	 push	 DWORD PTR [esi+8]
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Erase

; 1615 : 			_Pnode = this->_Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 1616 : 			_Dest_val(this->_Alval,
; 1617 : 				_STD addressof(this->_Myval(_Rootnode)));
; 1618 : 
; 1619 : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	80 7e 1d 00	 cmp	 BYTE PTR [esi+29], 0
  00029	59		 pop	 ecx
  0002a	8b fe		 mov	 edi, esi
  0002c	74 e5		 je	 SHORT $LL3@Erase
$LN1@Erase:
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx

; 1620 : 			}
; 1621 : 		}

  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >, COMDAT
; _this$ = ecx

; 378  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 379  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >
_TEXT	ENDS
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::erase
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::erase, COMDAT
; _this$ = ecx

; 1195 : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))
; 1198 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1199 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1200 : 		++_Where;	// save successor iterator for return
; 1201 : 		_Orphan_ptr(*this, _Erasednode);
; 1202 : 
; 1203 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1204 : 		if (this->_Isnil(_Where._Mynode()))

  00005	8b 5d 0c	 mov	 ebx, DWORD PTR __Where$[ebp]
  00008	80 7b 1d 00	 cmp	 BYTE PTR [ebx+29], 0
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00011	74 0b		 je	 SHORT $LN40@erase

; 1205 : 			_Xout_of_range("invalid map/set<T> iterator");

  00013	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN329@erase:
$LN40@erase:

; 1206 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1207 : 		++_Where;	// save successor iterator for return

  0001e	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00021	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator++

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1211 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1212 : 		_Nodeptr _Pnode = _Erasednode;
; 1213 : 
; 1214 : 		if (this->_Isnil(this->_Left(_Pnode)))

  00026	8b 13		 mov	 edx, DWORD PTR [ebx]
  00028	80 7a 1d 00	 cmp	 BYTE PTR [edx+29], 0
  0002c	74 05		 je	 SHORT $LN39@erase

; 1215 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

  0002e	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 1216 : 		else if (this->_Isnil(this->_Right(_Pnode)))

  00031	eb 17		 jmp	 SHORT $LN321@erase
$LN39@erase:
  00033	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00036	80 78 1d 00	 cmp	 BYTE PTR [eax+29], 0
  0003a	74 04		 je	 SHORT $LN37@erase

; 1217 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

  0003c	8b fa		 mov	 edi, edx

; 1218 : 		else

  0003e	eb 0a		 jmp	 SHORT $LN321@erase
$LN37@erase:

; 1219 : 			{	// two subtrees, must lift successor node to replace erased
; 1220 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

  00040	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 1221 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

  00043	8b 78 08	 mov	 edi, DWORD PTR [eax+8]

; 1222 : 			}
; 1223 : 
; 1224 : 		if (_Pnode == _Erasednode)

  00046	3b c3		 cmp	 eax, ebx
  00048	75 76		 jne	 SHORT $LN35@erase
$LN321@erase:

; 1225 : 			{	// at most one subtree, relink it
; 1226 : 			_Fixnodeparent = this->_Parent(_Erasednode);
; 1227 : 			if (!this->_Isnil(_Fixnode))

  0004a	80 7f 1d 00	 cmp	 BYTE PTR [edi+29], 0
  0004e	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  00051	75 03		 jne	 SHORT $LN34@erase

; 1228 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

  00053	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN34@erase:

; 1229 : 
; 1230 : 			if (_Root() == _Erasednode)

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0005c	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0005f	75 05		 jne	 SHORT $LN33@erase

; 1231 : 				_Root() = _Fixnode;	// link down from root

  00061	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 1232 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

  00064	eb 0b		 jmp	 SHORT $LN30@erase
$LN33@erase:
  00066	39 1e		 cmp	 DWORD PTR [esi], ebx
  00068	75 04		 jne	 SHORT $LN31@erase

; 1233 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  0006a	89 3e		 mov	 DWORD PTR [esi], edi

; 1234 : 			else

  0006c	eb 03		 jmp	 SHORT $LN30@erase
$LN31@erase:

; 1235 : 				this->_Right(_Fixnodeparent) =
; 1236 : 					_Fixnode;	// link down to right

  0006e	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$LN30@erase:

; 1237 : 
; 1238 : 			if (_Lmost() == _Erasednode)

  00071	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00074	39 19		 cmp	 DWORD PTR [ecx], ebx
  00076	75 1c		 jne	 SHORT $LN29@erase

; 1239 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1240 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1241 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

  00078	80 7f 1d 00	 cmp	 BYTE PTR [edi+29], 0
  0007c	74 04		 je	 SHORT $LN43@erase
  0007e	8b d6		 mov	 edx, esi
  00080	eb 10		 jmp	 SHORT $LN97@erase
$LN43@erase:
  00082	8b 07		 mov	 eax, DWORD PTR [edi]
  00084	8b d7		 mov	 edx, edi
  00086	eb 04		 jmp	 SHORT $LN323@erase
$LL98@erase:
  00088	8b d0		 mov	 edx, eax
  0008a	8b 02		 mov	 eax, DWORD PTR [edx]
$LN323@erase:
  0008c	80 78 1d 00	 cmp	 BYTE PTR [eax+29], 0
  00090	74 f6		 je	 SHORT $LL98@erase
$LN97@erase:
  00092	89 11		 mov	 DWORD PTR [ecx], edx
$LN29@erase:

; 1242 : 
; 1243 : 			if (_Rmost() == _Erasednode)

  00094	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00097	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0009a	39 59 08	 cmp	 DWORD PTR [ecx+8], ebx
  0009d	75 7b		 jne	 SHORT $LN185@erase

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  0009f	80 7f 1d 00	 cmp	 BYTE PTR [edi+29], 0
  000a3	74 04		 je	 SHORT $LN45@erase
  000a5	8b d6		 mov	 edx, esi
  000a7	eb 12		 jmp	 SHORT $LN117@erase
$LN45@erase:
  000a9	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000ac	8b d7		 mov	 edx, edi
  000ae	eb 05		 jmp	 SHORT $LN324@erase
$LL118@erase:
  000b0	8b d0		 mov	 edx, eax
  000b2	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
$LN324@erase:
  000b5	80 78 1d 00	 cmp	 BYTE PTR [eax+29], 0
  000b9	74 f5		 je	 SHORT $LL118@erase
$LN117@erase:
  000bb	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 1247 : 			}
; 1248 : 		else

  000be	eb 5a		 jmp	 SHORT $LN185@erase
$LN35@erase:

; 1249 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1250 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1251 : 				_Pnode;	// link left up

  000c0	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1252 : 			this->_Left(_Pnode) =
; 1253 : 				this->_Left(_Erasednode);	// link successor down

  000c3	8b 13		 mov	 edx, DWORD PTR [ebx]
  000c5	89 10		 mov	 DWORD PTR [eax], edx

; 1254 : 
; 1255 : 			if (_Pnode == this->_Right(_Erasednode))

  000c7	3b 43 08	 cmp	 eax, DWORD PTR [ebx+8]
  000ca	75 04		 jne	 SHORT $LN26@erase

; 1256 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  000cc	8b f0		 mov	 esi, eax

; 1257 : 			else

  000ce	eb 1a		 jmp	 SHORT $LN25@erase
$LN26@erase:

; 1258 : 				{	// successor further down, link in place of erased
; 1259 : 				_Fixnodeparent =
; 1260 : 					this->_Parent(_Pnode);	// parent is successor's
; 1261 : 				if (!this->_Isnil(_Fixnode))

  000d0	80 7f 1d 00	 cmp	 BYTE PTR [edi+29], 0
  000d4	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000d7	75 03		 jne	 SHORT $LN24@erase

; 1262 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  000d9	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN24@erase:

; 1263 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  000dc	89 3e		 mov	 DWORD PTR [esi], edi

; 1264 : 				this->_Right(_Pnode) =
; 1265 : 					this->_Right(_Erasednode);	// link next down

  000de	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  000e1	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1266 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1267 : 					_Pnode;	// right up

  000e4	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000e7	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN25@erase:

; 1268 : 				}
; 1269 : 
; 1270 : 			if (_Root() == _Erasednode)

  000ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000f0	39 59 04	 cmp	 DWORD PTR [ecx+4], ebx
  000f3	75 05		 jne	 SHORT $LN23@erase

; 1271 : 				_Root() = _Pnode;	// link down from root

  000f5	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1272 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

  000f8	eb 0e		 jmp	 SHORT $LN20@erase
$LN23@erase:
  000fa	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000fd	39 19		 cmp	 DWORD PTR [ecx], ebx
  000ff	75 04		 jne	 SHORT $LN21@erase

; 1273 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1274 : 					_Pnode;	// link down to left

  00101	89 01		 mov	 DWORD PTR [ecx], eax

; 1275 : 			else

  00103	eb 03		 jmp	 SHORT $LN20@erase
$LN21@erase:

; 1276 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1277 : 					_Pnode;	// link down to right

  00105	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN20@erase:

; 1278 : 
; 1279 : 			this->_Parent(_Pnode) =
; 1280 : 				this->_Parent(_Erasednode);	// link successor up

  00108	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0010b	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1281 : 			_STD swap(this->_Color(_Pnode),
; 1282 : 				this->_Color(_Erasednode));	// recolor it

  0010e	8a 53 1c	 mov	 dl, BYTE PTR [ebx+28]
  00111	8a 48 1c	 mov	 cl, BYTE PTR [eax+28]
  00114	88 50 1c	 mov	 BYTE PTR [eax+28], dl
  00117	88 4b 1c	 mov	 BYTE PTR [ebx+28], cl
$LN185@erase:

; 1283 : 			}
; 1284 : 
; 1285 : 		if (this->_Color(_Erasednode) == this->_Black)

  0011a	80 7b 1c 01	 cmp	 BYTE PTR [ebx+28], 1
  0011e	0f 85 03 01 00
	00		 jne	 $LN19@erase

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00124	e9 b2 00 00 00	 jmp	 $LN326@erase
$LL18@erase:
  00129	80 7f 1c 01	 cmp	 BYTE PTR [edi+28], 1
  0012d	0f 85 f0 00 00
	00		 jne	 $LN16@erase

; 1290 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

  00133	8b 06		 mov	 eax, DWORD PTR [esi]
  00135	3b f8		 cmp	 edi, eax
  00137	75 6c		 jne	 SHORT $LN15@erase

; 1291 : 					{	// fixup left subtree
; 1292 : 					_Pnode = this->_Right(_Fixnodeparent);

  00139	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 1293 : 					if (this->_Color(_Pnode) == this->_Red)

  0013c	80 78 1c 00	 cmp	 BYTE PTR [eax+28], 0
  00140	75 11		 jne	 SHORT $LN14@erase

; 1294 : 						{	// rotate red up from right subtree
; 1295 : 						this->_Color(_Pnode) = this->_Black;

  00142	c6 40 1c 01	 mov	 BYTE PTR [eax+28], 1

; 1296 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1297 : 						_Lrotate(_Fixnodeparent);

  00146	56		 push	 esi
  00147	c6 46 1c 00	 mov	 BYTE PTR [esi+28], 0
  0014b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Lrotate

; 1298 : 						_Pnode = this->_Right(_Fixnodeparent);

  00150	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN14@erase:

; 1299 : 						}
; 1300 : 
; 1301 : 					if (this->_Isnil(_Pnode))

  00153	80 78 1d 00	 cmp	 BYTE PTR [eax+29], 0

; 1302 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1303 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

  00157	75 7d		 jne	 SHORT $LN327@erase

; 1304 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

  00159	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015b	80 79 1c 01	 cmp	 BYTE PTR [ecx+28], 1
  0015f	75 09		 jne	 SHORT $LN11@erase
  00161	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00164	80 79 1c 01	 cmp	 BYTE PTR [ecx+28], 1
  00168	74 68		 je	 SHORT $LN328@erase
$LN11@erase:

; 1305 : 						{	// redden right subtree with black children
; 1306 : 						this->_Color(_Pnode) = this->_Red;
; 1307 : 						_Fixnode = _Fixnodeparent;
; 1308 : 						}
; 1309 : 					else
; 1310 : 						{	// must rearrange right subtree
; 1311 : 						if (this->_Color(this->_Right(_Pnode))
; 1312 : 							== this->_Black)

  0016a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0016d	80 79 1c 01	 cmp	 BYTE PTR [ecx+28], 1
  00171	75 16		 jne	 SHORT $LN9@erase

; 1313 : 							{	// rotate red up from left sub-subtree
; 1314 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

  00173	8b 08		 mov	 ecx, DWORD PTR [eax]
  00175	c6 41 1c 01	 mov	 BYTE PTR [ecx+28], 1

; 1315 : 							this->_Color(_Pnode) = this->_Red;
; 1316 : 							_Rrotate(_Pnode);

  00179	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017c	50		 push	 eax
  0017d	c6 40 1c 00	 mov	 BYTE PTR [eax+28], 0
  00181	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Rrotate

; 1317 : 							_Pnode = this->_Right(_Fixnodeparent);

  00186	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN9@erase:

; 1318 : 							}
; 1319 : 
; 1320 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  00189	8a 4e 1c	 mov	 cl, BYTE PTR [esi+28]
  0018c	88 48 1c	 mov	 BYTE PTR [eax+28], cl

; 1321 : 						this->_Color(_Fixnodeparent) = this->_Black;
; 1322 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;
; 1323 : 						_Lrotate(_Fixnodeparent);

  0018f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00192	c6 46 1c 01	 mov	 BYTE PTR [esi+28], 1
  00196	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00199	56		 push	 esi
  0019a	c6 40 1c 01	 mov	 BYTE PTR [eax+28], 1
  0019e	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Lrotate

; 1324 : 						break;	// tree now recolored/rebalanced

  001a3	eb 7e		 jmp	 SHORT $LN16@erase
$LN15@erase:

; 1325 : 						}
; 1326 : 					}
; 1327 : 				else
; 1328 : 					{	// fixup right subtree
; 1329 : 					_Pnode = this->_Left(_Fixnodeparent);
; 1330 : 					if (this->_Color(_Pnode) == this->_Red)

  001a5	80 78 1c 00	 cmp	 BYTE PTR [eax+28], 0
  001a9	75 10		 jne	 SHORT $LN7@erase

; 1331 : 						{	// rotate red up from left subtree
; 1332 : 						this->_Color(_Pnode) = this->_Black;

  001ab	c6 40 1c 01	 mov	 BYTE PTR [eax+28], 1

; 1333 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1334 : 						_Rrotate(_Fixnodeparent);

  001af	56		 push	 esi
  001b0	c6 46 1c 00	 mov	 BYTE PTR [esi+28], 0
  001b4	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Rrotate

; 1335 : 						_Pnode = this->_Left(_Fixnodeparent);

  001b9	8b 06		 mov	 eax, DWORD PTR [esi]
$LN7@erase:

; 1336 : 						}
; 1337 : 					if (this->_Isnil(_Pnode))

  001bb	80 78 1d 00	 cmp	 BYTE PTR [eax+29], 0

; 1338 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1339 : 					else if (this->_Color(this->_Right(_Pnode)) ==

  001bf	75 15		 jne	 SHORT $LN327@erase

; 1340 : 						this->_Black
; 1341 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

  001c1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001c4	80 79 1c 01	 cmp	 BYTE PTR [ecx+28], 1
  001c8	75 22		 jne	 SHORT $LN4@erase
  001ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  001cc	80 79 1c 01	 cmp	 BYTE PTR [ecx+28], 1
  001d0	75 1a		 jne	 SHORT $LN4@erase
$LN328@erase:

; 1342 : 						{	// redden left subtree with black children
; 1343 : 						this->_Color(_Pnode) = this->_Red;

  001d2	c6 40 1c 00	 mov	 BYTE PTR [eax+28], 0
$LN327@erase:

; 1344 : 						_Fixnode = _Fixnodeparent;

  001d6	8b fe		 mov	 edi, esi
  001d8	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
$LN326@erase:

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  001db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001de	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001e1	3b 78 04	 cmp	 edi, DWORD PTR [eax+4]
  001e4	0f 85 3f ff ff
	ff		 jne	 $LL18@erase
  001ea	eb 37		 jmp	 SHORT $LN16@erase
$LN4@erase:

; 1345 : 						}
; 1346 : 					else
; 1347 : 						{	// must rearrange left subtree
; 1348 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

  001ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ee	80 79 1c 01	 cmp	 BYTE PTR [ecx+28], 1
  001f2	75 16		 jne	 SHORT $LN2@erase

; 1349 : 							{	// rotate red up from right sub-subtree
; 1350 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

  001f4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001f7	c6 41 1c 01	 mov	 BYTE PTR [ecx+28], 1

; 1351 : 							this->_Color(_Pnode) = this->_Red;
; 1352 : 							_Lrotate(_Pnode);

  001fb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001fe	50		 push	 eax
  001ff	c6 40 1c 00	 mov	 BYTE PTR [eax+28], 0
  00203	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Lrotate

; 1353 : 							_Pnode = this->_Left(_Fixnodeparent);

  00208	8b 06		 mov	 eax, DWORD PTR [esi]
$LN2@erase:

; 1354 : 							}
; 1355 : 
; 1356 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  0020a	8a 4e 1c	 mov	 cl, BYTE PTR [esi+28]
  0020d	88 48 1c	 mov	 BYTE PTR [eax+28], cl

; 1357 : 						this->_Color(_Fixnodeparent) = this->_Black;
; 1358 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;
; 1359 : 						_Rrotate(_Fixnodeparent);

  00210	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00213	c6 46 1c 01	 mov	 BYTE PTR [esi+28], 1
  00217	8b 00		 mov	 eax, DWORD PTR [eax]
  00219	56		 push	 esi
  0021a	c6 40 1c 01	 mov	 BYTE PTR [eax+28], 1
  0021e	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Rrotate
$LN16@erase:

; 1360 : 						break;	// tree now recolored/rebalanced
; 1361 : 						}
; 1362 : 					}
; 1363 : 
; 1364 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

  00223	c6 47 1c 01	 mov	 BYTE PTR [edi+28], 1
$LN19@erase:

; 1365 : 			}
; 1366 : 
; 1367 : 		_Dest_val(this->_Alval,
; 1368 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node
; 1369 : 
; 1370 : 		this->_Alnod.deallocate(_Erasednode, 1);

  00227	53		 push	 ebx
  00228	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0022d	59		 pop	 ecx

; 1371 : 
; 1372 : 		if (0 < this->_Mysize)

  0022e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00231	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00234	5f		 pop	 edi
  00235	5e		 pop	 esi
  00236	5b		 pop	 ebx
  00237	85 c0		 test	 eax, eax
  00239	74 04		 je	 SHORT $LN1@erase

; 1373 : 			--this->_Mysize;

  0023b	48		 dec	 eax
  0023c	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@erase:

; 1374 : 
; 1375 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

  0023f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00242	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00245	89 08		 mov	 DWORD PTR [eax], ecx

; 1376 : 		}

  00247	c9		 leave
  00248	c2 08 00	 ret	 8
$LN322@erase:
?erase@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::erase
_TEXT	ENDS
PUBLIC	??$advance@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@H@std@@YAXAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@H@Z ; std::advance<std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,int>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$advance@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@H@std@@YAXAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@H@Z
_TEXT	SEGMENT
$T508986 = -4						; size = 1
__Where$ = 8						; size = 4
__Off$ = 12						; size = 4
??$advance@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@H@std@@YAXAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@H@Z PROC ; std::advance<std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,int>, COMDAT

; 797  : 	{	// increment iterator by offset, arbitrary iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 798  : 	_Advance(_Where, _Off, _Iter_cat(_Where));

  00004	ff 75 fc	 push	 DWORD PTR $T508986[ebp]
  00007	ff 75 0c	 push	 DWORD PTR __Off$[ebp]
  0000a	ff 75 08	 push	 DWORD PTR __Where$[ebp]
  0000d	e8 00 00 00 00	 call	 ??$_Advance@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@H@std@@YAXAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@HUbidirectional_iterator_tag@0@@Z ; std::_Advance<std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,int>
  00012	83 c4 0c	 add	 esp, 12			; 0000000cH

; 799  : 	}

  00015	c9		 leave
  00016	c3		 ret	 0
??$advance@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@H@std@@YAXAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@H@Z ENDP ; std::advance<std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,int>
_TEXT	ENDS
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Insert
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1631 : 		{	// add node with value next to _Wherenode, to left if _Addleft

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 1632 : 		if (max_size() - 1 <= this->_Mysize)

  00008	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0000b	3d fe ff ff 0f	 cmp	 eax, 268435454		; 0ffffffeH
  00010	72 15		 jb	 SHORT $LN17@Insert

; 1633 : 			{	// tree would get too big, fail
; 1634 : 			_Dest_val(this->_Alval,
; 1635 : 				_STD addressof(this->_Myval(_Newnode)));
; 1636 : 
; 1637 : 			this->_Alnod.deallocate(_Newnode, 1);

  00012	ff 75 14	 push	 DWORD PTR __Newnode$[ebp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 1638 : 
; 1639 : 			_Xlength_error("map/set<T> too long");

  0001a	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN188@Insert:
$LN17@Insert:

; 1640 : 			}
; 1641 : 		++this->_Mysize;
; 1642 : 		_Newnode->_Parent = _Wherenode;

  00027	8b 5d 14	 mov	 ebx, DWORD PTR __Newnode$[ebp]
  0002a	40		 inc	 eax
  0002b	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0002e	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00031	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 1643 : 
; 1644 : 		if (_Wherenode == this->_Myhead)

  00034	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00037	3b c1		 cmp	 eax, ecx
  00039	75 10		 jne	 SHORT $LN16@Insert

; 1645 : 			{	// first node in tree, just set head values
; 1646 : 			_Root() = _Newnode;

  0003b	89 59 04	 mov	 DWORD PTR [ecx+4], ebx

; 1647 : 			_Lmost() = _Newnode;

  0003e	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00041	89 18		 mov	 DWORD PTR [eax], ebx

; 1648 : 			_Rmost() = _Newnode;

  00043	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00046	89 58 08	 mov	 DWORD PTR [eax+8], ebx
  00049	eb 21		 jmp	 SHORT $LN11@Insert
$LN16@Insert:

; 1649 : 			}
; 1650 : 		else if (_Addleft)

  0004b	80 7d 0c 00	 cmp	 BYTE PTR __Addleft$[ebp], 0
  0004f	74 0d		 je	 SHORT $LN14@Insert

; 1651 : 			{	// add to left of _Wherenode
; 1652 : 			this->_Left(_Wherenode) = _Newnode;

  00051	89 18		 mov	 DWORD PTR [eax], ebx

; 1653 : 			if (_Wherenode == _Lmost())

  00053	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00056	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00058	75 12		 jne	 SHORT $LN11@Insert

; 1654 : 				_Lmost() = _Newnode;

  0005a	89 19		 mov	 DWORD PTR [ecx], ebx

; 1655 : 			}
; 1656 : 		else

  0005c	eb 0e		 jmp	 SHORT $LN11@Insert
$LN14@Insert:

; 1657 : 			{	// add to right of _Wherenode
; 1658 : 			this->_Right(_Wherenode) = _Newnode;

  0005e	89 58 08	 mov	 DWORD PTR [eax+8], ebx

; 1659 : 			if (_Wherenode == _Rmost())

  00061	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00064	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00067	75 03		 jne	 SHORT $LN11@Insert

; 1660 : 				_Rmost() = _Newnode;

  00069	89 59 08	 mov	 DWORD PTR [ecx+8], ebx
$LN11@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  0006c	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0006f	8b f3		 mov	 esi, ebx
  00071	e9 93 00 00 00	 jmp	 $LN186@Insert
$LL10@Insert:

; 1665 : 			if (this->_Parent(_Pnode)
; 1666 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

  00076	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00079	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007c	3b 01		 cmp	 eax, DWORD PTR [ecx]
  0007e	75 38		 jne	 SHORT $LN8@Insert

; 1667 : 				{	// fixup red-red in left subtree
; 1668 : 				_Wherenode =
; 1669 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

  00080	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1670 : 				if (this->_Color(_Wherenode) == this->_Red)

  00083	80 79 1c 00	 cmp	 BYTE PTR [ecx+28], 0

; 1671 : 					{	// parent has two red children, blacken both
; 1672 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;
; 1673 : 					this->_Color(_Wherenode) = this->_Black;
; 1674 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1675 : 						= this->_Red;
; 1676 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));
; 1677 : 					}
; 1678 : 				else

  00087	74 37		 je	 SHORT $LN187@Insert

; 1679 : 					{	// parent has red and black children
; 1680 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

  00089	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008c	75 0a		 jne	 SHORT $LN5@Insert

; 1681 : 						{	// rotate right child to left
; 1682 : 						_Pnode = this->_Parent(_Pnode);

  0008e	8b f0		 mov	 esi, eax

; 1683 : 						_Lrotate(_Pnode);

  00090	56		 push	 esi
  00091	8b cf		 mov	 ecx, edi
  00093	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Lrotate
$LN5@Insert:

; 1684 : 						}
; 1685 : 					this->_Color(this->_Parent(_Pnode)) =
; 1686 : 						this->_Black;	// propagate red up

  00098	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0009b	c6 40 1c 01	 mov	 BYTE PTR [eax+28], 1

; 1687 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1688 : 						this->_Red;

  0009f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a2	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000a5	c6 40 1c 00	 mov	 BYTE PTR [eax+28], 0

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

  000a9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000ac	ff 70 04	 push	 DWORD PTR [eax+4]
  000af	8b cf		 mov	 ecx, edi
  000b1	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Rrotate

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  000b6	eb 4e		 jmp	 SHORT $LN2@Insert
$LN8@Insert:

; 1693 : 				{	// fixup red-red in right subtree
; 1694 : 				_Wherenode =
; 1695 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

  000b8	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1696 : 				if (this->_Color(_Wherenode) == this->_Red)

  000ba	80 79 1c 00	 cmp	 BYTE PTR [ecx+28], 0
  000be	75 1a		 jne	 SHORT $LN3@Insert
$LN187@Insert:

; 1697 : 					{	// parent has two red children, blacken both
; 1698 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  000c0	c6 40 1c 01	 mov	 BYTE PTR [eax+28], 1

; 1699 : 					this->_Color(_Wherenode) = this->_Black;

  000c4	c6 41 1c 01	 mov	 BYTE PTR [ecx+28], 1

; 1700 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1701 : 						this->_Red;

  000c8	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cb	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000ce	c6 40 1c 00	 mov	 BYTE PTR [eax+28], 0

; 1702 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  000d2	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000d5	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 1703 : 					}
; 1704 : 				else

  000d8	eb 2c		 jmp	 SHORT $LN2@Insert
$LN3@Insert:

; 1705 : 					{	// parent has red and black children
; 1706 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

  000da	3b 30		 cmp	 esi, DWORD PTR [eax]
  000dc	75 0a		 jne	 SHORT $LN1@Insert

; 1707 : 						{	// rotate left child to right
; 1708 : 						_Pnode = this->_Parent(_Pnode);

  000de	8b f0		 mov	 esi, eax

; 1709 : 						_Rrotate(_Pnode);

  000e0	56		 push	 esi
  000e1	8b cf		 mov	 ecx, edi
  000e3	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Rrotate
$LN1@Insert:

; 1710 : 						}
; 1711 : 					this->_Color(this->_Parent(_Pnode)) =
; 1712 : 						this->_Black;	// propagate red up

  000e8	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000eb	c6 40 1c 01	 mov	 BYTE PTR [eax+28], 1

; 1713 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1714 : 						this->_Red;

  000ef	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000f2	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000f5	c6 40 1c 00	 mov	 BYTE PTR [eax+28], 0

; 1715 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

  000f9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000fc	ff 70 04	 push	 DWORD PTR [eax+4]
  000ff	8b cf		 mov	 ecx, edi
  00101	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Lrotate
$LN2@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  00106	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
$LN186@Insert:
  00109	80 78 1c 00	 cmp	 BYTE PTR [eax+28], 0
  0010d	0f 84 63 ff ff
	ff		 je	 $LL10@Insert

; 1716 : 					}
; 1717 : 				}
; 1718 : 
; 1719 : 		this->_Color(_Root()) = this->_Black;	// root is always black

  00113	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00116	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00119	5f		 pop	 edi
  0011a	c6 40 1c 01	 mov	 BYTE PTR [eax+28], 1

; 1720 : 		return (iterator(_Newnode, this));

  0011e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00121	5e		 pop	 esi
  00122	89 18		 mov	 DWORD PTR [eax], ebx
  00124	5b		 pop	 ebx

; 1721 : 		}

  00125	5d		 pop	 ebp
  00126	c2 10 00	 ret	 16			; 00000010H
$LN185@Insert:
?_Insert@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QAEXPAU?$pair@$$CBHUPointInfo@TimeReport@@@2@$$QAU32@@Z ; std::allocator<std::pair<int const ,TimeReport::PointInfo> >::construct
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QAEXPAU?$pair@$$CBHUPointInfo@TimeReport@@@2@$$QAU32@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QAEXPAU?$pair@$$CBHUPointInfo@TimeReport@@@2@$$QAU32@@Z PROC ; std::allocator<std::pair<int const ,TimeReport::PointInfo> >::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 14		 je	 SHORT $LN3@construct@3
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	89 10		 mov	 DWORD PTR [eax], edx
  00013	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
  00016	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  00019	a5		 movsd
  0001a	a5		 movsd
  0001b	a5		 movsd
  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
$LN3@construct@3:

; 203  : 		}

  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
?construct@?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QAEXPAU?$pair@$$CBHUPointInfo@TimeReport@@@2@$$QAU32@@Z ENDP ; std::allocator<std::pair<int const ,TimeReport::PointInfo> >::construct
_TEXT	ENDS
PUBLIC	?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::erase
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$509410 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@0@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __First_arg$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	8b f1		 mov	 esi, ecx
  0000d	89 07		 mov	 DWORD PTR [edi], eax

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 45 10	 cmp	 eax, DWORD PTR __Last_arg$[ebp]
  00012	74 16		 je	 SHORT $LN1@erase@2

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	ff 75 10	 push	 DWORD PTR __Cat$509410[ebp]
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  0001f	e8 00 00 00 00	 call	 ??$_Move@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<unsigned long *,unsigned long *>
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

  00027	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN1@erase@2:

; 1212 : 			}
; 1213 : 		return (_First);

  0002a	8b c7		 mov	 eax, edi
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi

; 1214 : 		}

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN12@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN12@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
_TEXT	ENDS
PUBLIC	?reserve@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::reserve
; Function compile flags: /Ogsp
;	COMDAT ?reserve@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?reserve@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 747  : 		if (max_size() < _Count)

  00003	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	76 0b		 jbe	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN43@reserve:
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  0001a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0001d	2b 06		 sub	 eax, DWORD PTR [esi]
  0001f	c1 f8 02	 sar	 eax, 2
  00022	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00025	73 52		 jae	 SHORT $LN3@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00027	53		 push	 ebx
  00028	57		 push	 edi
  00029	6a 00		 push	 0
  0002b	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate@K@std@@YAPAKIPAK@Z ; std::_Allocate<unsigned long>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00033	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00035	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00038	52		 push	 edx
  00039	8b d8		 mov	 ebx, eax
  0003b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003e	53		 push	 ebx
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::allocator<unsigned long> >

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00046	8b 06		 mov	 eax, DWORD PTR [esi]
  00048	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0004b	2b f8		 sub	 edi, eax
  0004d	83 c4 18	 add	 esp, 24			; 00000018H
  00050	c1 ff 02	 sar	 edi, 2

; 761  : 			if (this->_Myfirst != 0)

  00053	85 c0		 test	 eax, eax
  00055	74 07		 je	 SHORT $LN39@reserve

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);
; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0005d	59		 pop	 ecx
$LN39@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  0005e	8b ce		 mov	 ecx, esi
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00066	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00069	8d 04 83	 lea	 eax, DWORD PTR [ebx+eax*4]
  0006c	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 770  : 			this->_Mylast = _Ptr + _Size;

  0006f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00072	5f		 pop	 edi

; 771  : 			this->_Myfirst = _Ptr;

  00073	89 1e		 mov	 DWORD PTR [esi], ebx
  00075	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00078	5b		 pop	 ebx
$LN3@reserve:
  00079	5e		 pop	 esi

; 772  : 			}
; 773  : 		}

  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
$LN42@reserve:
?reserve@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::reserve
_TEXT	ENDS
PUBLIC	??_C@_0BK@FCFHKNGF@?$CFd?5?3?5Total?5?3?5?$CFd?0?5Avg?5?3?5?$CFd?$AA@ ; `string'
PUBLIC	?GetPointInfo@TimeReport@@QBE_NHPAD@Z		; TimeReport::GetPointInfo
EXTRN	__imp__sprintf:PROC
;	COMDAT ??_C@_0BK@FCFHKNGF@?$CFd?5?3?5Total?5?3?5?$CFd?0?5Avg?5?3?5?$CFd?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	SEGMENT
??_C@_0BK@FCFHKNGF@?$CFd?5?3?5Total?5?3?5?$CFd?0?5Avg?5?3?5?$CFd?$AA@ DB '%'
	DB	'd : Total : %d, Avg : %d', 00H		; `string'
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\timereport.cpp
CONST	ENDS
;	COMDAT ?GetPointInfo@TimeReport@@QBE_NHPAD@Z
_TEXT	SEGMENT
$T509619 = 8						; size = 1
_iter$ = 8						; size = 4
_iIndex$ = 8						; size = 4
_szInfo$ = 12						; size = 4
?GetPointInfo@TimeReport@@QBE_NHPAD@Z PROC		; TimeReport::GetPointInfo, COMDAT
; _this$ = ecx

; 119  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 120  : 	if( !COMPARE( iIndex, 0, GetPointCount() ) )

  00003	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	78 3b		 js	 SHORT $LN1@GetPointIn
  0000a	3b 41 18	 cmp	 eax, DWORD PTR [ecx+24]
  0000d	7d 36		 jge	 SHORT $LN1@GetPointIn

; 122  : 
; 123  : 	FrameTable::const_iterator iter = m_FrameTable.begin();

  0000f	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00012	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00014	89 4d 08	 mov	 DWORD PTR _iter$[ebp], ecx

; 124  : 	std::advance( iter, iIndex );

  00017	ff 75 08	 push	 DWORD PTR $T509619[ebp]
  0001a	50		 push	 eax
  0001b	8d 45 08	 lea	 eax, DWORD PTR _iter$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??$_Advance@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@H@std@@YAXAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@0@HUbidirectional_iterator_tag@0@@Z ; std::_Advance<std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> > >,int>

; 125  : 
; 126  : 	const PointInfo &rkInfo = iter->second;

  00024	8b 45 08	 mov	 eax, DWORD PTR _iter$[ebp]

; 127  : 
; 128  : 	sprintf( szInfo, "%d : Total : %d, Avg : %d", iter->first, rkInfo.dwTotal, rkInfo.dwAverage );

  00027	ff 70 18	 push	 DWORD PTR [eax+24]
  0002a	ff 70 14	 push	 DWORD PTR [eax+20]
  0002d	ff 70 0c	 push	 DWORD PTR [eax+12]
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@FCFHKNGF@?$CFd?5?3?5Total?5?3?5?$CFd?0?5Avg?5?3?5?$CFd?$AA@
  00035	ff 75 0c	 push	 DWORD PTR _szInfo$[ebp]
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  0003e	83 c4 20	 add	 esp, 32			; 00000020H

; 129  : 	return true;

  00041	b0 01		 mov	 al, 1
  00043	eb 02		 jmp	 SHORT $LN3@GetPointIn
$LN1@GetPointIn:

; 121  : 		return false;

  00045	32 c0		 xor	 al, al
$LN3@GetPointIn:

; 130  : }

  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
?GetPointInfo@TimeReport@@QBE_NHPAD@Z ENDP		; TimeReport::GetPointInfo
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::begin
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 807  : 		return (iterator(_Lmost(), this));

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 808  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 817  : 		return (iterator(this->_Myhead, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 818  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::end
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::clear, COMDAT
; _this$ = ecx

; 1410 : 		{	// erase all

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 1411 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1412 : 		this->_Orphan_ptr(*this, 0);
; 1413 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1414 : 
; 1415 : 		_Erase(_Root());

  00004	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00007	ff 70 04	 push	 DWORD PTR [eax+4]
  0000a	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Erase

; 1416 : 		_Root() = this->_Myhead;

  0000f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1417 : 		_Lmost() = this->_Myhead;

  00015	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax

; 1418 : 		_Rmost() = this->_Myhead;

  0001a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0001d	89 76 08	 mov	 DWORD PTR [esi+8], esi

; 1419 : 		this->_Mysize = 0;

  00020	83 67 08 00	 and	 DWORD PTR [edi+8], 0
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi

; 1420 : 		}

  00026	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::clear
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::lower_bound
; Function compile flags: /Ogsp
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1449 : 		{	// find leftmost node not less than _Keyval in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1450 : 		return (iterator(_Lbound(_Keyval), this));

  00003	ff 75 0c	 push	 DWORD PTR __Keyval$[ebp]
  00006	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Lbound
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000e	89 01		 mov	 DWORD PTR [ecx], eax
  00010	8b c1		 mov	 eax, ecx

; 1451 : 		}

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T509785 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::erase, COMDAT
; _this$ = ecx

; 1379 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1380 : 		if (_First == begin() && _Last == end())

  00007	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  0000d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0000f	75 13		 jne	 SHORT $LN65@erase@3
  00011	39 45 10	 cmp	 DWORD PTR __Last$[ebp], eax
  00014	75 0e		 jne	 SHORT $LN65@erase@3

; 1381 : 			{	// erase all
; 1382 : 			clear();

  00016	8b ce		 mov	 ecx, esi
  00018	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::clear

; 1383 : 			return (begin());

  0001d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00020	8b 08		 mov	 ecx, DWORD PTR [eax]
  00022	eb 25		 jmp	 SHORT $LN1@erase@3
$LN65@erase@3:

; 1384 : 			}
; 1385 : 		else
; 1386 : 			{	// partial erase, one at a time
; 1387 : 			while (_First != _Last)

  00024	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00027	74 20		 je	 SHORT $LN1@erase@3
  00029	57		 push	 edi
$LL2@erase@3:

; 1388 : 				erase(_First++);

  0002a	8b f9		 mov	 edi, ecx
  0002c	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0002f	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator++
  00034	57		 push	 edi
  00035	8d 45 fc	 lea	 eax, DWORD PTR $T509785[ebp]
  00038	50		 push	 eax
  00039	8b ce		 mov	 ecx, esi
  0003b	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::erase
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00043	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00046	75 e2		 jne	 SHORT $LL2@erase@3
  00048	5f		 pop	 edi
$LN1@erase@3:

; 1389 : 			return (iterator(_First._Ptr, this));

  00049	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0004c	89 08		 mov	 DWORD PTR [eax], ecx
  0004e	5e		 pop	 esi

; 1390 : 			}
; 1391 : 		}

  0004f	c9		 leave
  00050	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Linsert@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Linsert
; Function compile flags: /Ogsp
;	COMDAT ?_Linsert@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Node$ = 12						; size = 4
$T509978 = 16						; size = 4
__Where$506635 = 16					; size = 4
__Leftish$ = 16						; size = 1
?_Linsert@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Linsert, COMDAT
; _this$ = ecx

; 944  : 		{	// try to insert node at _Node, on left if _Leftish

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 945  : 		const value_type& _Val = this->_Myval(_Node);
; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();

  00008	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0000b	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  0000e	80 78 1d 00	 cmp	 BYTE PTR [eax+29], 0
  00012	57		 push	 edi
  00013	8b d9		 mov	 ebx, ecx
  00015	c6 45 fc 01	 mov	 BYTE PTR __Addleft$[ebp], 1
  00019	75 31		 jne	 SHORT $LN151@Linsert

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Node$[ebp]
  0001e	8b 79 0c	 mov	 edi, DWORD PTR [ecx+12]
$LL12@Linsert:

; 951  : 			{	// look for leaf to insert before (_Addleft) or after
; 952  : 			_Wherenode = _Trynode;

  00021	80 7d 10 00	 cmp	 BYTE PTR __Leftish$[ebp], 0
  00025	8b d8		 mov	 ebx, eax

; 953  : 			if (_Leftish)

  00027	74 09		 je	 SHORT $LN10@Linsert

; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,

  00029	39 78 0c	 cmp	 DWORD PTR [eax+12], edi
  0002c	0f 9d 45 fc	 setge	 BYTE PTR __Addleft$[ebp]

; 955  : 					this->_Key(_Trynode),
; 956  : 					this->_Kfn(_Val));	// favor left end
; 957  : 			else

  00030	eb 07		 jmp	 SHORT $LN9@Linsert
$LN10@Linsert:

; 958  : 				_Addleft = _DEBUG_LT_PRED(this->comp,

  00032	3b 78 0c	 cmp	 edi, DWORD PTR [eax+12]
  00035	0f 9c 45 fc	 setl	 BYTE PTR __Addleft$[ebp]
$LN9@Linsert:

; 959  : 					this->_Kfn(_Val),
; 960  : 					this->_Key(_Trynode));	// favor right end
; 961  : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 962  : 				: this->_Right(_Trynode);

  00039	80 7d fc 00	 cmp	 BYTE PTR __Addleft$[ebp], 0
  0003d	74 04		 je	 SHORT $LN15@Linsert
  0003f	8b 00		 mov	 eax, DWORD PTR [eax]
  00041	eb 03		 jmp	 SHORT $LN16@Linsert
$LN15@Linsert:
  00043	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$LN16@Linsert:

; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  00046	80 78 1d 00	 cmp	 BYTE PTR [eax+29], 0
  0004a	74 d5		 je	 SHORT $LL12@Linsert
$LN151@Linsert:

; 963  : 			}
; 964  : 
; 965  : 		if (this->_Multi)
; 966  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));
; 967  : 		else
; 968  : 			{	// insert only if unique
; 969  : 			iterator _Where = iterator(_Wherenode, this);
; 970  : 			if (!_Addleft)

  0004c	80 7d fc 00	 cmp	 BYTE PTR __Addleft$[ebp], 0
  00050	8b fb		 mov	 edi, ebx
  00052	89 7d 10	 mov	 DWORD PTR __Where$506635[ebp], edi
  00055	74 30		 je	 SHORT $LN99@Linsert

; 971  : 				;	// need to test if insert after is okay
; 972  : 			else if (_Where == begin())

  00057	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0005a	3b 18		 cmp	 ebx, DWORD PTR [eax]
  0005c	75 1e		 jne	 SHORT $LN4@Linsert

; 973  : 				return (_Pairib(_Insert(true, _Wherenode, _Node), true));

  0005e	ff 75 0c	 push	 DWORD PTR __Node$[ebp]
  00061	53		 push	 ebx
  00062	6a 01		 push	 1
$LN152@Linsert:
  00064	8d 45 10	 lea	 eax, DWORD PTR $T509978[ebp]
  00067	50		 push	 eax
  00068	8b ce		 mov	 ecx, esi
  0006a	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Insert
  0006f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00071	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00074	89 08		 mov	 DWORD PTR [eax], ecx
  00076	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  0007a	eb 2c		 jmp	 SHORT $LN1@Linsert
$LN4@Linsert:

; 974  : 			else
; 975  : 				--_Where;	// need to test if insert before is okay

  0007c	8d 4d 10	 lea	 ecx, DWORD PTR __Where$506635[ebp]
  0007f	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator--
  00084	8b 7d 10	 mov	 edi, DWORD PTR __Where$506635[ebp]
$LN99@Linsert:

; 976  : 
; 977  : 			if (_DEBUG_LT_PRED(this->comp,

  00087	8b 45 0c	 mov	 eax, DWORD PTR __Node$[ebp]
  0008a	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]

; 978  : 				this->_Key(_Where._Mynode()),
; 979  : 				this->_Kfn(_Val)))
; 980  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

  0008d	50		 push	 eax
  0008e	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00091	7d 06		 jge	 SHORT $LN2@Linsert
  00093	53		 push	 ebx
  00094	ff 75 fc	 push	 DWORD PTR __Addleft$[ebp]
  00097	eb cb		 jmp	 SHORT $LN152@Linsert
$LN2@Linsert:

; 981  : 			else
; 982  : 				{	// duplicate, don't insert
; 983  : 				_Dest_val(this->_Alval,
; 984  : 					_STD addressof(this->_Myval(_Node)));
; 985  : 
; 986  : 				this->_Alnod.deallocate(_Node, 1);

  00099	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

  0009e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a1	59		 pop	 ecx
  000a2	89 38		 mov	 DWORD PTR [eax], edi
  000a4	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
$LN1@Linsert:
  000a8	5f		 pop	 edi
  000a9	5e		 pop	 esi
  000aa	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  000ab	c9		 leave
  000ac	c2 0c 00	 ret	 12			; 0000000cH
?_Linsert@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Linsert
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@U?$pair@$$CBHUPointInfo@TimeReport@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@0@PAU?$pair@$$CBHUPointInfo@TimeReport@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<int const ,TimeReport::PointInfo> >,std::pair<int const ,TimeReport::PointInfo>,std::pair<int const ,TimeReport::PointInfo> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@U?$pair@$$CBHUPointInfo@TimeReport@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@0@PAU?$pair@$$CBHUPointInfo@TimeReport@@@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@U?$pair@$$CBHUPointInfo@TimeReport@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@0@PAU?$pair@$$CBHUPointInfo@TimeReport@@@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::pair<int const ,TimeReport::PointInfo> >,std::pair<int const ,TimeReport::PointInfo>,std::pair<int const ,TimeReport::PointInfo> >, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  0000c	e8 00 00 00 00	 call	 ?construct@?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QAEXPAU?$pair@$$CBHUPointInfo@TimeReport@@@2@$$QAU32@@Z ; std::allocator<std::pair<int const ,TimeReport::PointInfo> >::construct

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@U?$pair@$$CBHUPointInfo@TimeReport@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@0@PAU?$pair@$$CBHUPointInfo@TimeReport@@@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::pair<int const ,TimeReport::PointInfo> >,std::pair<int const ,TimeReport::PointInfo>,std::pair<int const ,TimeReport::PointInfo> >
_TEXT	ENDS
PUBLIC	??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@KV?$allocator@K@std@@@std@@QAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@KV?$allocator@K@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T510323 = -4						; size = 4
?clear@?$vector@KV?$allocator@K@std@@@std@@QAEXXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T510323[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@KV?$allocator@K@std@@@std@@QAEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::clear
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx

; 1292 : 		if (max_size() - _Count < _Size)

  0000d	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  00012	2b 55 08	 sub	 edx, DWORD PTR __Count$[ebp]
  00015	c1 f8 02	 sar	 eax, 2
  00018	3b d0		 cmp	 edx, eax
  0001a	73 0b		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve:
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  00027	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0002a	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0002d	2b d1		 sub	 edx, ecx
  0002f	c1 fa 02	 sar	 edx, 2
  00032	3b c2		 cmp	 eax, edx
  00034	76 10		 jbe	 SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  00036	50		 push	 eax
  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Grow_to
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?reserve@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::reserve
$LN1@Reserve:
  00046	5e		 pop	 esi

; 1298 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN20@Reserve:
?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve
_TEXT	ENDS
PUBLIC	?EndFrame@TimeReport@@QAEXXZ			; TimeReport::EndFrame
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\timereport.cpp
;	COMDAT ?EndFrame@TimeReport@@QAEXXZ
_TEXT	SEGMENT
$T510619 = -12						; size = 4
_this$ = -8						; size = 4
_iter$ = -4						; size = 4
?EndFrame@TimeReport@@QAEXXZ PROC			; TimeReport::EndFrame, COMDAT
; _this$ = ecx

; 70   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx

; 71   : 	if( !m_bReportOn )	return;

  00009	80 7b 0c 00	 cmp	 BYTE PTR [ebx+12], 0
  0000d	89 5d f8	 mov	 DWORD PTR _this$[ebp], ebx
  00010	74 75		 je	 SHORT $LN10@EndFrame

; 72   : 
; 73   : 	m_iCurFrameCount++;

  00012	ff 43 04	 inc	 DWORD PTR [ebx+4]
  00015	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]

; 74   : 
; 75   : 	if( m_iCheckFrameCount > m_iCurFrameCount )

  00018	39 03		 cmp	 DWORD PTR [ebx], eax
  0001a	7f 6b		 jg	 SHORT $LN10@EndFrame

; 76   : 		return;
; 77   : 
; 78   : 	FrameTable::iterator iter;
; 79   : 	for( iter = m_FrameTable.begin() ; iter!=m_FrameTable.end() ; ++iter )

  0001c	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  0001f	57		 push	 edi
  00020	8b 38		 mov	 edi, DWORD PTR [eax]
  00022	89 7d fc	 mov	 DWORD PTR _iter$[ebp], edi
  00025	3b f8		 cmp	 edi, eax
  00027	74 59		 je	 SHORT $LN5@EndFrame
  00029	56		 push	 esi
$LL34@EndFrame:

; 80   : 	{
; 81   : 		PointInfo &rkInfo = iter->second;
; 82   : 
; 83   : 		FrameTimeList *pList = rkInfo.pList;

  0002a	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]

; 84   : 		if( pList->empty() )

  0002d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002f	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00032	74 3d		 je	 SHORT $LN6@EndFrame

; 85   : 			continue;
; 86   : 
; 87   : 		rkInfo.dwTotal = 0;

  00034	33 d2		 xor	 edx, edx
  00036	89 57 14	 mov	 DWORD PTR [edi+20], edx

; 88   : 
; 89   : 		int iTimeCount = pList->size();

  00039	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  0003c	2b 31		 sub	 esi, DWORD PTR [ecx]
  0003e	c1 fe 02	 sar	 esi, 2

; 90   : 		for( int i=0 ; i<iTimeCount ; i++ )

  00041	3b f2		 cmp	 esi, edx
  00043	7e 12		 jle	 SHORT $LN1@EndFrame
  00045	33 c0		 xor	 eax, eax
$LL3@EndFrame:

; 91   : 		{
; 92   : 			rkInfo.dwTotal += (*pList)[i];

  00047	8b 19		 mov	 ebx, DWORD PTR [ecx]
  00049	03 04 93	 add	 eax, DWORD PTR [ebx+edx*4]
  0004c	42		 inc	 edx
  0004d	89 47 14	 mov	 DWORD PTR [edi+20], eax
  00050	3b d6		 cmp	 edx, esi
  00052	7c f3		 jl	 SHORT $LL3@EndFrame

; 90   : 		for( int i=0 ; i<iTimeCount ; i++ )

  00054	8b 5d f8	 mov	 ebx, DWORD PTR _this$[ebp]
$LN1@EndFrame:

; 93   : 		}
; 94   : 
; 95   : 		rkInfo.dwAverage = rkInfo.dwTotal / iTimeCount;

  00057	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  0005a	33 d2		 xor	 edx, edx
  0005c	f7 f6		 div	 esi
  0005e	89 47 18	 mov	 DWORD PTR [edi+24], eax

; 96   : 
; 97   : 		pList->clear();

  00061	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00064	8b 11		 mov	 edx, DWORD PTR [ecx]
  00066	50		 push	 eax
  00067	52		 push	 edx
  00068	8d 45 f4	 lea	 eax, DWORD PTR $T510619[ebp]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::erase
$LN6@EndFrame:

; 76   : 		return;
; 77   : 
; 78   : 	FrameTable::iterator iter;
; 79   : 	for( iter = m_FrameTable.begin() ; iter!=m_FrameTable.end() ; ++iter )

  00071	8d 4d fc	 lea	 ecx, DWORD PTR _iter$[ebp]
  00074	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator++
  00079	8b 7d fc	 mov	 edi, DWORD PTR _iter$[ebp]
  0007c	3b 7b 14	 cmp	 edi, DWORD PTR [ebx+20]
  0007f	75 a9		 jne	 SHORT $LL34@EndFrame
  00081	5e		 pop	 esi
$LN5@EndFrame:

; 98   : 	}
; 99   : 
; 100  : 	m_iCurFrameCount = 0;

  00082	83 63 04 00	 and	 DWORD PTR [ebx+4], 0
  00086	5f		 pop	 edi
$LN10@EndFrame:
  00087	5b		 pop	 ebx

; 101  : }

  00088	c9		 leave
  00089	c3		 ret	 0
?EndFrame@TimeReport@@QAEXXZ ENDP			; TimeReport::EndFrame
_TEXT	ENDS
PUBLIC	??_G?$vector@KV?$allocator@K@std@@@std@@QAEPAXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_G?$vector@KV?$allocator@K@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$vector@KV?$allocator@K@std@@@std@@QAEPAXI@Z PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@2
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@2:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_G?$vector@KV?$allocator@K@std@@@std@@QAEPAXI@Z ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::find
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@ABH@Z
_TEXT	SEGMENT
$T510655 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::find, COMDAT
; _this$ = ecx

; 1423 : 		{	// find an element in mutable sequence that matches _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1424 : 		iterator _Where = lower_bound(_Keyval);

  00006	8b 7d 0c	 mov	 edi, DWORD PTR __Keyval$[ebp]
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Lbound

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

  00011	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00014	89 45 0c	 mov	 DWORD PTR __Where$[ebp], eax
  00017	3b c6		 cmp	 eax, esi
  00019	74 0c		 je	 SHORT $LN3@find
  0001b	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0001d	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00020	7c 05		 jl	 SHORT $LN3@find
  00022	8d 45 0c	 lea	 eax, DWORD PTR __Where$[ebp]
  00025	eb 06		 jmp	 SHORT $LN4@find
$LN3@find:
  00027	89 75 fc	 mov	 DWORD PTR $T510655[ebp], esi
  0002a	8d 45 fc	 lea	 eax, DWORD PTR $T510655[ebp]
$LN4@find:
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00032	5f		 pop	 edi
  00033	89 08		 mov	 DWORD PTR [eax], ecx
  00035	5e		 pop	 esi

; 1429 : 		}

  00036	c9		 leave
  00037	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::find
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Tidy
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T510793 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1865 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1866 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 10		 mov	 edx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T510793[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::erase

; 1867 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	??$_Buynode@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBHUPointInfo@TimeReport@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Buynode<std::pair<int const ,TimeReport::PointInfo> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Buynode@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBHUPointInfo@TimeReport@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Buynode@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBHUPointInfo@TimeReport@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Buynode<std::pair<int const ,TimeReport::PointInfo> >, COMDAT
; _this$ = ecx

; 586  : 		_Nodeptr _Buynode(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f1		 mov	 esi, ecx

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

  00007	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Buynode

; 589  : 
; 590  : 		_TRY_BEGIN
; 591  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Wherenode)),
; 592  : 			_STD forward<_Valty>(_Val));

  0000c	ff 75 08	 push	 DWORD PTR __Val$[ebp]
  0000f	8b f8		 mov	 edi, eax
  00011	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  00014	50		 push	 eax
  00015	8d 4e 0d	 lea	 ecx, DWORD PTR [esi+13]
  00018	e8 00 00 00 00	 call	 ?construct@?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@std@@QAEXPAU?$pair@$$CBHUPointInfo@TimeReport@@@2@$$QAU32@@Z ; std::allocator<std::pair<int const ,TimeReport::PointInfo> >::construct

; 593  : 		_CATCH_ALL
; 594  : 		this->_Alnod.deallocate(_Wherenode, 1);
; 595  : 		_RERAISE;
; 596  : 		_CATCH_END
; 597  : 
; 598  : 		return (_Wherenode);

  0001d	8b c7		 mov	 eax, edi
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi

; 599  : 		}

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??$_Buynode@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBHUPointInfo@TimeReport@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Buynode<std::pair<int const ,TimeReport::PointInfo> >
_TEXT	ENDS
PUBLIC	?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f8		 cmp	 edi, eax
  0000f	73 27		 jae	 SHORT $LN4@push_back
  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	3b cf		 cmp	 ecx, edi
  00015	77 21		 ja	 SHORT $LN4@push_back

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	2b f9		 sub	 edi, ecx
  00019	c1 ff 02	 sar	 edi, 2

; 980  : 			if (this->_Mylast == this->_Myend)

  0001c	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0001f	75 09		 jne	 SHORT $LN3@push_back

; 981  : 				_Reserve(1);

  00021	6a 01		 push	 1
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve
$LN3@push_back:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	85 c0		 test	 eax, eax
  0002f	74 20		 je	 SHORT $LN39@push_back
  00031	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00033	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00036	eb 17		 jmp	 SHORT $LN46@push_back
$LN4@push_back:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00038	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0003b	75 09		 jne	 SHORT $LN1@push_back

; 991  : 				_Reserve(1);

  0003d	6a 01		 push	 1
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve
$LN1@push_back:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00046	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00049	85 c0		 test	 eax, eax
  0004b	74 04		 je	 SHORT $LN39@push_back
  0004d	8b 0f		 mov	 ecx, DWORD PTR [edi]
$LN46@push_back:
  0004f	89 08		 mov	 DWORD PTR [eax], ecx
$LN39@push_back:

; 996  : 			++this->_Mylast;

  00051	83 46 04 04	 add	 DWORD PTR [esi+4], 4
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back
_TEXT	ENDS
PUBLIC	?ClearResource@TimeReport@@AAEXXZ		; TimeReport::ClearResource
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\timereport.cpp
;	COMDAT ?ClearResource@TimeReport@@AAEXXZ
_TEXT	SEGMENT
_iter$ = -4						; size = 4
?ClearResource@TimeReport@@AAEXXZ PROC			; TimeReport::ClearResource, COMDAT
; _this$ = ecx

; 104  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 105  : 	FrameTable::iterator iter;
; 106  : 	for( iter=m_FrameTable.begin() ; iter!=m_FrameTable.end() ; ++iter )

  00007	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	89 45 fc	 mov	 DWORD PTR _iter$[ebp], eax
  0000f	3b c1		 cmp	 eax, ecx
  00011	74 27		 je	 SHORT $LN1@ClearResou
  00013	57		 push	 edi
$LL30@ClearResou:

; 107  : 	{
; 108  : 		delete iter->second.pList;

  00014	8b 78 10	 mov	 edi, DWORD PTR [eax+16]
  00017	85 ff		 test	 edi, edi
  00019	74 0e		 je	 SHORT $LN2@ClearResou
  0001b	8b cf		 mov	 ecx, edi
  0001d	e8 00 00 00 00	 call	 ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
  00022	57		 push	 edi
  00023	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00028	59		 pop	 ecx
$LN2@ClearResou:

; 105  : 	FrameTable::iterator iter;
; 106  : 	for( iter=m_FrameTable.begin() ; iter!=m_FrameTable.end() ; ++iter )

  00029	8d 4d fc	 lea	 ecx, DWORD PTR _iter$[ebp]
  0002c	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >,std::_Iterator_base0>::operator++
  00031	8b 45 fc	 mov	 eax, DWORD PTR _iter$[ebp]
  00034	3b 46 14	 cmp	 eax, DWORD PTR [esi+20]
  00037	75 db		 jne	 SHORT $LL30@ClearResou
  00039	5f		 pop	 edi
$LN1@ClearResou:

; 109  : 	}
; 110  : 	m_FrameTable.clear();

  0003a	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  0003d	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::clear
  00042	5e		 pop	 esi

; 111  : }

  00043	c9		 leave
  00044	c3		 ret	 0
?ClearResource@TimeReport@@AAEXXZ ENDP			; TimeReport::ClearResource
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::~_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T511295 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::~_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >, COMDAT
; _this$ = ecx

; 790  : 		{	// destroy tree

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 791  : 		_Tidy();

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	8d 45 ec	 lea	 eax, DWORD PTR $T511295[ebp]
  0001f	50		 push	 eax
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::erase

; 792  : 		}

  00027	ff 76 04	 push	 DWORD PTR [esi+4]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	e8 00 00 00 00	 call	 __EH_epilog3
  00035	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::~_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >
__ehhandler$??1?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::~_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >
PUBLIC	??$insert@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBHUPointInfo@TimeReport@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::insert<std::pair<int const ,TimeReport::PointInfo> >
; Function compile flags: /Ogsp
;	COMDAT ??$insert@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBHUPointInfo@TimeReport@@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBHUPointInfo@TimeReport@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::insert<std::pair<int const ,TimeReport::PointInfo> >, COMDAT
; _this$ = ecx

; 753  : 		_Pairib insert(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 754  : 		{	// try to insert node with value _Val, favoring right side
; 755  : 		return (_Linsert(this->_Buynode(_STD forward<_Valty>(_Val)),
; 756  : 			false));

  00004	6a 00		 push	 0
  00006	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBHUPointInfo@TimeReport@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Buynode<std::pair<int const ,TimeReport::PointInfo> >
  00010	50		 push	 eax
  00011	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  00014	8b ce		 mov	 ecx, esi
  00016	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Linsert
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	5e		 pop	 esi

; 757  : 		}

  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
??$insert@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBHUPointInfo@TimeReport@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::insert<std::pair<int const ,TimeReport::PointInfo> >
_TEXT	ENDS
PUBLIC	??1?$map@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@@std@@QAE@XZ ; std::map<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> > >::~map<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> > >
; Function compile flags: /Ogsp
;	COMDAT ??1?$map@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@@std@@QAE@XZ PROC ; std::map<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> > >::~map<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> > >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::~_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >
??1?$map@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@@std@@QAE@XZ ENDP ; std::map<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> > >::~map<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> > >
_TEXT	ENDS
PUBLIC	??1TimeReport@@QAE@XZ				; TimeReport::~TimeReport
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\timereport.cpp
xdata$x	SEGMENT
__unwindtable$??1TimeReport@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1TimeReport@@QAE@XZ$0
__ehfuncinfo$??1TimeReport@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1TimeReport@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1TimeReport@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1TimeReport@@QAE@XZ PROC				; TimeReport::~TimeReport, COMDAT
; _this$ = ecx

; 16   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1TimeReport@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 17   : 	ClearResource();

  00015	e8 00 00 00 00	 call	 ?ClearResource@TimeReport@@AAEXXZ ; TimeReport::ClearResource

; 18   : }

  0001a	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0001e	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00021	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::~_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >
  00026	e8 00 00 00 00	 call	 __EH_epilog3
  0002b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1TimeReport@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 10	 add	 ecx, 16			; 00000010H
  00006	e9 00 00 00 00	 jmp	 ??1?$map@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@@std@@QAE@XZ
__ehhandler$??1TimeReport@@QAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1TimeReport@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1TimeReport@@QAE@XZ ENDP				; TimeReport::~TimeReport
PUBLIC	?SetReportOnOff@TimeReport@@QAEX_NH@Z		; TimeReport::SetReportOnOff
; Function compile flags: /Ogsp
;	COMDAT ?SetReportOnOff@TimeReport@@QAEX_NH@Z
_TEXT	SEGMENT
_bOn$ = 8						; size = 1
_iMaxFrame$ = 12					; size = 4
?SetReportOnOff@TimeReport@@QAEX_NH@Z PROC		; TimeReport::SetReportOnOff, COMDAT
; _this$ = ecx

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 22   : 	m_iCheckFrameCount = iMaxFrame;

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iMaxFrame$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 23   : 	m_iCurFrameCount = 0;

  00009	83 66 04 00	 and	 DWORD PTR [esi+4], 0
  0000d	89 06		 mov	 DWORD PTR [esi], eax

; 24   : 
; 25   : 	m_dwPreStartTime = timeGetTime();

  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0
  00015	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 26   : 	m_bReportOn = bOn;

  00018	8a 45 08	 mov	 al, BYTE PTR _bOn$[ebp]

; 27   : 
; 28   : 	ClearResource();

  0001b	8b ce		 mov	 ecx, esi
  0001d	88 46 0c	 mov	 BYTE PTR [esi+12], al
  00020	e8 00 00 00 00	 call	 ?ClearResource@TimeReport@@AAEXXZ ; TimeReport::ClearResource
  00025	5e		 pop	 esi

; 29   : }

  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?SetReportOnOff@TimeReport@@QAEX_NH@Z ENDP		; TimeReport::SetReportOnOff
_TEXT	ENDS
PUBLIC	?AddPoint@TimeReport@@QAEXH@Z			; TimeReport::AddPoint
; Function compile flags: /Ogsp
;	COMDAT ?AddPoint@TimeReport@@QAEXH@Z
_TEXT	SEGMENT
$T511373 = -36						; size = 16
_kInfo$505868 = -20					; size = 12
$T511374 = -16						; size = 8
_dwFrameGap$ = -8					; size = 4
_iter$ = -4						; size = 4
_pList$ = -4						; size = 4
_iPoint$ = 8						; size = 4
?AddPoint@TimeReport@@QAEXH@Z PROC			; TimeReport::AddPoint, COMDAT
; _this$ = ecx

; 39   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx

; 40   : 	if( !m_bReportOn )	return;

  00009	80 7b 0c 00	 cmp	 BYTE PTR [ebx+12], 0
  0000d	0f 84 9f 00 00
	00		 je	 $LN4@AddPoint

; 41   : 
; 42   : 	DWORD dwFrameGap = timeGetTime() - m_dwPreStartTime;

  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0
  00019	2b 43 08	 sub	 eax, DWORD PTR [ebx+8]

; 43   : 
; 44   : 	FrameTimeList *pList = NULL;
; 45   : 
; 46   : 	FrameTable::iterator iter = m_FrameTable.find( iPoint );

  0001c	8d 4b 10	 lea	 ecx, DWORD PTR [ebx+16]
  0001f	89 45 f8	 mov	 DWORD PTR _dwFrameGap$[ebp], eax
  00022	8d 45 08	 lea	 eax, DWORD PTR _iPoint$[ebp]
  00025	50		 push	 eax
  00026	8d 45 fc	 lea	 eax, DWORD PTR _iter$[ebp]
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::find

; 47   : 	if( iter == m_FrameTable.end() )

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _iter$[ebp]
  00032	3b 43 14	 cmp	 eax, DWORD PTR [ebx+20]
  00035	75 64		 jne	 SHORT $LN2@AddPoint

; 48   : 	{
; 49   : 		pList = new FrameTimeList;

  00037	56		 push	 esi
  00038	57		 push	 edi
  00039	6a 10		 push	 16			; 00000010H
  0003b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00040	33 ff		 xor	 edi, edi
  00042	59		 pop	 ecx
  00043	3b c7		 cmp	 eax, edi
  00045	74 0c		 je	 SHORT $LN6@AddPoint
  00047	89 38		 mov	 DWORD PTR [eax], edi
  00049	89 78 04	 mov	 DWORD PTR [eax+4], edi
  0004c	89 78 08	 mov	 DWORD PTR [eax+8], edi
  0004f	8b f0		 mov	 esi, eax
  00051	eb 02		 jmp	 SHORT $LN7@AddPoint
$LN6@AddPoint:
  00053	33 f6		 xor	 esi, esi
$LN7@AddPoint:

; 50   : 		pList->reserve( m_iCheckFrameCount );

  00055	ff 33		 push	 DWORD PTR [ebx]
  00057	8b ce		 mov	 ecx, esi
  00059	89 75 fc	 mov	 DWORD PTR _pList$[ebp], esi
  0005c	e8 00 00 00 00	 call	 ?reserve@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::reserve

; 51   : 
; 52   : 		PointInfo kInfo;
; 53   : 		kInfo.pList = pList;
; 54   : 		kInfo.dwTotal = 0;
; 55   : 		kInfo.dwAverage = 0;
; 56   : 
; 57   : 		m_FrameTable.insert( FrameTable::value_type( iPoint, kInfo ) );

  00061	8b 45 08	 mov	 eax, DWORD PTR _iPoint$[ebp]
  00064	89 75 ec	 mov	 DWORD PTR _kInfo$505868[ebp], esi
  00067	89 7d f0	 mov	 DWORD PTR _kInfo$505868[ebp+4], edi
  0006a	89 7d f4	 mov	 DWORD PTR _kInfo$505868[ebp+8], edi
  0006d	89 45 dc	 mov	 DWORD PTR $T511373[ebp], eax
  00070	8d 75 ec	 lea	 esi, DWORD PTR _kInfo$505868[ebp]
  00073	8d 7d e0	 lea	 edi, DWORD PTR $T511373[ebp+4]
  00076	a5		 movsd
  00077	a5		 movsd
  00078	6a 00		 push	 0
  0007a	8d 45 dc	 lea	 eax, DWORD PTR $T511373[ebp]
  0007d	50		 push	 eax
  0007e	8d 4b 10	 lea	 ecx, DWORD PTR [ebx+16]
  00081	a5		 movsd
  00082	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBHUPointInfo@TimeReport@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Buynode<std::pair<int const ,TimeReport::PointInfo> >
  00087	50		 push	 eax
  00088	8d 45 f0	 lea	 eax, DWORD PTR $T511374[ebp]
  0008b	50		 push	 eax
  0008c	8d 4b 10	 lea	 ecx, DWORD PTR [ebx+16]
  0008f	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Linsert

; 58   : 	}
; 59   : 	else

  00094	8b 45 fc	 mov	 eax, DWORD PTR _pList$[ebp]
  00097	5f		 pop	 edi
  00098	5e		 pop	 esi
  00099	eb 03		 jmp	 SHORT $LN1@AddPoint
$LN2@AddPoint:

; 60   : 	{
; 61   : 		pList = iter->second.pList;

  0009b	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
$LN1@AddPoint:

; 62   : 	}
; 63   : 
; 64   : 	pList->push_back( dwFrameGap );

  0009e	8d 4d f8	 lea	 ecx, DWORD PTR _dwFrameGap$[ebp]
  000a1	51		 push	 ecx
  000a2	8b c8		 mov	 ecx, eax
  000a4	e8 00 00 00 00	 call	 ?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back

; 65   : 
; 66   : 	m_dwPreStartTime = timeGetTime();

  000a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0
  000af	89 43 08	 mov	 DWORD PTR [ebx+8], eax
$LN4@AddPoint:
  000b2	5b		 pop	 ebx

; 67   : }

  000b3	c9		 leave
  000b4	c2 04 00	 ret	 4
?AddPoint@TimeReport@@QAEXH@Z ENDP			; TimeReport::AddPoint
_TEXT	ENDS
PUBLIC	??0?$map@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@@std@@QAE@XZ ; std::map<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> > >::map<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$map@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
$T511518 = -8						; size = 4
$T511521 = -8						; size = 4
$T511507 = -1						; size = 1
??0?$map@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@@std@@QAE@XZ PROC ; std::map<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> > >::map<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> > >, COMDAT
; _this$ = ecx

; 106  : 		{	// construct empty map from defaults

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	51		 push	 ecx
  00007	89 65 f8	 mov	 DWORD PTR $T511521[ebp], esp
  0000a	8d 45 ff	 lea	 eax, DWORD PTR $T511507[ebp]
  0000d	89 65 f8	 mov	 DWORD PTR $T511518[ebp], esp
  00010	50		 push	 eax
  00011	8b f1		 mov	 esi, ecx
  00013	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >

; 107  : 		}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c9		 leave
  0001c	c3		 ret	 0
??0?$map@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@@std@@QAE@XZ ENDP ; std::map<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> > >::map<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> > >
_TEXT	ENDS
PUBLIC	__real@4f800000
PUBLIC	??0TimeReport@@QAE@XZ				; TimeReport::TimeReport
EXTRN	__fltused:DWORD
EXTRN	__ftol2_sse:PROC
;	COMDAT __real@4f800000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\timereport.cpp
CONST	ENDS
;	COMDAT ??0TimeReport@@QAE@XZ
_TEXT	SEGMENT
tv171 = -8						; size = 4
$T511540 = -8						; size = 4
$T511554 = -8						; size = 4
$T511549 = -1						; size = 1
??0TimeReport@@QAE@XZ PROC				; TimeReport::TimeReport, COMDAT
; _this$ = ecx

; 7    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  0000b	51		 push	 ecx
  0000c	89 65 f8	 mov	 DWORD PTR $T511554[ebp], esp
  0000f	8d 45 ff	 lea	 eax, DWORD PTR $T511549[ebp]
  00012	89 65 f8	 mov	 DWORD PTR $T511540[ebp], esp
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@HUPointInfo@TimeReport@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHUPointInfo@TimeReport@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >::_Tree_val<std::_Tmap_traits<int,TimeReport::PointInfo,std::less<int>,std::allocator<std::pair<int const ,TimeReport::PointInfo> >,0> >

; 8    : 	m_iCheckFrameCount = FLOAT100;

  0001b	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  00020	89 45 f8	 mov	 DWORD PTR tv171[ebp], eax
  00023	db 45 f8	 fild	 DWORD PTR tv171[ebp]
  00026	85 c0		 test	 eax, eax
  00028	79 06		 jns	 SHORT $LN16@TimeReport
  0002a	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN16@TimeReport:
  00030	e8 00 00 00 00	 call	 __ftol2_sse
  00035	89 06		 mov	 DWORD PTR [esi], eax

; 9    : 	m_iCurFrameCount   = 0;

  00037	33 c0		 xor	 eax, eax
  00039	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 10   : 
; 11   : 	m_dwPreStartTime = 0;

  0003c	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 12   : 	m_bReportOn = false;

  0003f	88 46 0c	 mov	 BYTE PTR [esi+12], al

; 13   : }

  00042	8b c6		 mov	 eax, esi
  00044	5e		 pop	 esi
  00045	c9		 leave
  00046	c3		 ret	 0
??0TimeReport@@QAE@XZ ENDP				; TimeReport::TimeReport
_TEXT	ENDS
END
