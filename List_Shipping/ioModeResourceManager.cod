; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioModeResourceManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?ms_Singleton@?$Singleton@VioModeResourceManager@@@@1PAVioModeResourceManager@@A ; Singleton<ioModeResourceManager>::ms_Singleton
;	COMDAT ?ms_Singleton@?$Singleton@VioModeResourceManager@@@@1PAVioModeResourceManager@@A
_BSS	SEGMENT
?ms_Singleton@?$Singleton@VioModeResourceManager@@@@1PAVioModeResourceManager@@A DD 01H DUP (?) ; Singleton<ioModeResourceManager>::ms_Singleton
_BSS	ENDS
PUBLIC	??0ModeIcon@ioModeResourceManager@@QAE@XZ	; ioModeResourceManager::ModeIcon::ModeIcon
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomoderesourcemanager.h
;	COMDAT ??0ModeIcon@ioModeResourceManager@@QAE@XZ
_TEXT	SEGMENT
??0ModeIcon@ioModeResourceManager@@QAE@XZ PROC		; ioModeResourceManager::ModeIcon::ModeIcon, COMDAT
; _this$ = ecx

; 16   : 		ModeIcon()

  00000	8b c1		 mov	 eax, ecx

; 17   : 		{
; 18   : 			eType			= 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 19   : 			eKindValue1		= 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 20   : 			eKindValue2		= 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 21   : 			pModeIcon		= NULL;

  0000c	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 22   : 			pUserModeIcon	= NULL;

  0000f	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 23   : 		}

  00012	c3		 ret	 0
??0ModeIcon@ioModeResourceManager@@QAE@XZ ENDP		; ioModeResourceManager::ModeIcon::ModeIcon
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_04HPMCHFCH@raid?$AA@			; `string'
PUBLIC	??_C@_05KDCECKLC@house?$AA@			; `string'
PUBLIC	??_C@_0P@EMDECHND@teamsurvivalAI?$AA@		; `string'
PUBLIC	??_C@_07OJGHGMNE@factory?$AA@			; `string'
PUBLIC	??_C@_0N@CIFLFJKM@shufflebonus?$AA@		; `string'
PUBLIC	??_C@_0N@GGFCDCGI@headquarters?$AA@		; `string'
PUBLIC	??_C@_0M@JEJKCMKD@doublecrown?$AA@		; `string'
PUBLIC	??_C@_09HGJJLINF@dungeon_a?$AA@			; `string'
PUBLIC	??_C@_06INFBIOGE@gangsi?$AA@			; `string'
PUBLIC	??_C@_09EIOKFMGD@heromatch?$AA@			; `string'
PUBLIC	??_C@_08DKOEHABH@football?$AA@			; `string'
PUBLIC	??_C@_0BA@FAMLMCEH@monstersurvival?$AA@		; `string'
PUBLIC	??_C@_04OLMPDHKG@boss?$AA@			; `string'
PUBLIC	??_C@_0N@FOENFCLF@teamsurvival?$AA@		; `string'
PUBLIC	??_C@_05KPNEEOPH@fight?$AA@			; `string'
PUBLIC	??_C@_08MIMPMLKL@survival?$AA@			; `string'
PUBLIC	??_C@_04PJOEONHN@king?$AA@			; `string'
PUBLIC	??_C@_0BE@EKAMOOK@prisoner_runningman?$AA@	; `string'
PUBLIC	??_C@_08HDGLKCD@prisoner?$AA@			; `string'
PUBLIC	??_C@_08FOJKBHFL@cbt_mode?$AA@			; `string'
PUBLIC	??_C@_09EAGHGDCH@underwear?$AA@			; `string'
PUBLIC	??_C@_0M@BDFGPMPG@fire_temple?$AA@		; `string'
PUBLIC	??_C@_09FIJEJNEG@dark_xmas?$AA@			; `string'
PUBLIC	??_C@_0O@ENJGCMKM@tower_defense?$AA@		; `string'
PUBLIC	??_C@_05PLIADJJL@power?$AA@			; `string'
PUBLIC	?GetModeTitle@ioModeResourceManager@@QAEXAAVioHashString@@H@Z ; ioModeResourceManager::GetModeTitle
EXTRN	__imp_??4ioHashString@@QAEAAV0@PBD@Z:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomoderesourcemanager.cpp
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04HPMCHFCH@raid?$AA@
CONST	SEGMENT
??_C@_04HPMCHFCH@raid?$AA@ DB 'raid', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KDCECKLC@house?$AA@
CONST	SEGMENT
??_C@_05KDCECKLC@house?$AA@ DB 'house', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EMDECHND@teamsurvivalAI?$AA@
CONST	SEGMENT
??_C@_0P@EMDECHND@teamsurvivalAI?$AA@ DB 'teamsurvivalAI', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07OJGHGMNE@factory?$AA@
CONST	SEGMENT
??_C@_07OJGHGMNE@factory?$AA@ DB 'factory', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CIFLFJKM@shufflebonus?$AA@
CONST	SEGMENT
??_C@_0N@CIFLFJKM@shufflebonus?$AA@ DB 'shufflebonus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GGFCDCGI@headquarters?$AA@
CONST	SEGMENT
??_C@_0N@GGFCDCGI@headquarters?$AA@ DB 'headquarters', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JEJKCMKD@doublecrown?$AA@
CONST	SEGMENT
??_C@_0M@JEJKCMKD@doublecrown?$AA@ DB 'doublecrown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HGJJLINF@dungeon_a?$AA@
CONST	SEGMENT
??_C@_09HGJJLINF@dungeon_a?$AA@ DB 'dungeon_a', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06INFBIOGE@gangsi?$AA@
CONST	SEGMENT
??_C@_06INFBIOGE@gangsi?$AA@ DB 'gangsi', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09EIOKFMGD@heromatch?$AA@
CONST	SEGMENT
??_C@_09EIOKFMGD@heromatch?$AA@ DB 'heromatch', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08DKOEHABH@football?$AA@
CONST	SEGMENT
??_C@_08DKOEHABH@football?$AA@ DB 'football', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FAMLMCEH@monstersurvival?$AA@
CONST	SEGMENT
??_C@_0BA@FAMLMCEH@monstersurvival?$AA@ DB 'monstersurvival', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04OLMPDHKG@boss?$AA@
CONST	SEGMENT
??_C@_04OLMPDHKG@boss?$AA@ DB 'boss', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FOENFCLF@teamsurvival?$AA@
CONST	SEGMENT
??_C@_0N@FOENFCLF@teamsurvival?$AA@ DB 'teamsurvival', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05KPNEEOPH@fight?$AA@
CONST	SEGMENT
??_C@_05KPNEEOPH@fight?$AA@ DB 'fight', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08MIMPMLKL@survival?$AA@
CONST	SEGMENT
??_C@_08MIMPMLKL@survival?$AA@ DB 'survival', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04PJOEONHN@king?$AA@
CONST	SEGMENT
??_C@_04PJOEONHN@king?$AA@ DB 'king', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EKAMOOK@prisoner_runningman?$AA@
CONST	SEGMENT
??_C@_0BE@EKAMOOK@prisoner_runningman?$AA@ DB 'prisoner_runningman', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HDGLKCD@prisoner?$AA@
CONST	SEGMENT
??_C@_08HDGLKCD@prisoner?$AA@ DB 'prisoner', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FOJKBHFL@cbt_mode?$AA@
CONST	SEGMENT
??_C@_08FOJKBHFL@cbt_mode?$AA@ DB 'cbt_mode', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09EAGHGDCH@underwear?$AA@
CONST	SEGMENT
??_C@_09EAGHGDCH@underwear?$AA@ DB 'underwear', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BDFGPMPG@fire_temple?$AA@
CONST	SEGMENT
??_C@_0M@BDFGPMPG@fire_temple?$AA@ DB 'fire_temple', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09FIJEJNEG@dark_xmas?$AA@
CONST	SEGMENT
??_C@_09FIJEJNEG@dark_xmas?$AA@ DB 'dark_xmas', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ENJGCMKM@tower_defense?$AA@
CONST	SEGMENT
??_C@_0O@ENJGCMKM@tower_defense?$AA@ DB 'tower_defense', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05PLIADJJL@power?$AA@
CONST	SEGMENT
??_C@_05PLIADJJL@power?$AA@ DB 'power', 00H		; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?GetModeTitle@ioModeResourceManager@@QAEXAAVioHashString@@H@Z
_TEXT	SEGMENT
_szOut$ = 8						; size = 4
_eModeType$ = 12					; size = 4
?GetModeTitle@ioModeResourceManager@@QAEXAAVioHashString@@H@Z PROC ; ioModeResourceManager::GetModeTitle, COMDAT
; _this$ = ecx

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 32   : 	// 로딩 배경 로드
; 33   : 	switch( eModeType )

  00003	8b 45 0c	 mov	 eax, DWORD PTR _eModeType$[ebp]
  00006	48		 dec	 eax
  00007	83 f8 1a	 cmp	 eax, 26			; 0000001aH
  0000a	0f 87 cb 00 00
	00		 ja	 $LN1@GetModeTit
  00010	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN32@GetModeTit[eax*4]
$LN26@GetModeTit:

; 34   : 	{
; 35   : 	case MT_SYMBOL:
; 36   : 		szOut = "power";		

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_05PLIADJJL@power?$AA@

; 37   : 		break;

  0001c	e9 bf 00 00 00	 jmp	 $LN31@GetModeTit
$LN25@GetModeTit:

; 38   : 	case MT_TOWER_DEFENSE:
; 39   : 		szOut = "tower_defense";		

  00021	68 00 00 00 00	 push	 OFFSET ??_C@_0O@ENJGCMKM@tower_defense?$AA@

; 40   : 		break;

  00026	e9 b5 00 00 00	 jmp	 $LN31@GetModeTit
$LN24@GetModeTit:

; 41   : 	case MT_DARK_XMAS:
; 42   : 		szOut = "dark_xmas";		

  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_09FIJEJNEG@dark_xmas?$AA@

; 43   : 		break;

  00030	e9 ab 00 00 00	 jmp	 $LN31@GetModeTit
$LN23@GetModeTit:

; 44   : 	case MT_FIRE_TEMPLE:
; 45   : 		szOut = "fire_temple";		

  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0M@BDFGPMPG@fire_temple?$AA@

; 46   : 		break;

  0003a	e9 a1 00 00 00	 jmp	 $LN31@GetModeTit
$LN22@GetModeTit:

; 47   : 	case MT_UNDERWEAR:
; 48   : 		szOut = "underwear";		

  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_09EAGHGDCH@underwear?$AA@

; 49   : 		break;

  00044	e9 97 00 00 00	 jmp	 $LN31@GetModeTit
$LN21@GetModeTit:

; 50   : 	case MT_CBT:
; 51   : 		szOut = "cbt_mode";		

  00049	68 00 00 00 00	 push	 OFFSET ??_C@_08FOJKBHFL@cbt_mode?$AA@

; 52   : 		break;

  0004e	e9 8d 00 00 00	 jmp	 $LN31@GetModeTit
$LN20@GetModeTit:

; 53   : 	case MT_CATCH:
; 54   : 		szOut = "prisoner";		

  00053	68 00 00 00 00	 push	 OFFSET ??_C@_08HDGLKCD@prisoner?$AA@

; 55   : 		break;

  00058	e9 83 00 00 00	 jmp	 $LN31@GetModeTit
$LN19@GetModeTit:

; 56   : 	case MT_CATCH_RUNNINGMAN:
; 57   : 		szOut = "prisoner_runningman";		

  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@EKAMOOK@prisoner_runningman?$AA@

; 58   : 		break;

  00062	eb 7c		 jmp	 SHORT $LN31@GetModeTit
$LN18@GetModeTit:

; 59   : 	case MT_KING:
; 60   : 		szOut = "king";

  00064	68 00 00 00 00	 push	 OFFSET ??_C@_04PJOEONHN@king?$AA@

; 61   : 		break;

  00069	eb 75		 jmp	 SHORT $LN31@GetModeTit
$LN17@GetModeTit:

; 62   : 	case MT_SURVIVAL:
; 63   : 		szOut = "survival";		

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_08MIMPMLKL@survival?$AA@

; 64   : 		break;

  00070	eb 6e		 jmp	 SHORT $LN31@GetModeTit
$LN16@GetModeTit:

; 65   : 	case MT_FIGHT_CLUB:
; 66   : 		szOut = "fight";		

  00072	68 00 00 00 00	 push	 OFFSET ??_C@_05KPNEEOPH@fight?$AA@

; 67   : 		break;

  00077	eb 67		 jmp	 SHORT $LN31@GetModeTit
$LN15@GetModeTit:

; 68   : 	case MT_TEAM_SURVIVAL:
; 69   : 		szOut = "teamsurvival";		

  00079	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FOENFCLF@teamsurvival?$AA@

; 70   : 		break;

  0007e	eb 60		 jmp	 SHORT $LN31@GetModeTit
$LN14@GetModeTit:

; 71   : 	case MT_BOSS:
; 72   : 		szOut = "boss";		

  00080	68 00 00 00 00	 push	 OFFSET ??_C@_04OLMPDHKG@boss?$AA@

; 73   : 		break;

  00085	eb 59		 jmp	 SHORT $LN31@GetModeTit
$LN13@GetModeTit:

; 74   : 	case MT_MONSTER_SURVIVAL:
; 75   : 		szOut = "monstersurvival";		

  00087	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FAMLMCEH@monstersurvival?$AA@

; 76   : 		break;

  0008c	eb 52		 jmp	 SHORT $LN31@GetModeTit
$LN12@GetModeTit:

; 77   : 	case MT_FOOTBALL:
; 78   : 		szOut = "football";		

  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_08DKOEHABH@football?$AA@

; 79   : 		break;

  00093	eb 4b		 jmp	 SHORT $LN31@GetModeTit
$LN11@GetModeTit:

; 80   : 	case MT_HEROMATCH:
; 81   : 		szOut = "heromatch";		

  00095	68 00 00 00 00	 push	 OFFSET ??_C@_09EIOKFMGD@heromatch?$AA@

; 82   : 		break;

  0009a	eb 44		 jmp	 SHORT $LN31@GetModeTit
$LN10@GetModeTit:

; 83   : 	case MT_GANGSI:
; 84   : 		szOut = "gangsi";	

  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_06INFBIOGE@gangsi?$AA@

; 85   : 		break;

  000a1	eb 3d		 jmp	 SHORT $LN31@GetModeTit
$LN9@GetModeTit:

; 86   : 	case MT_DUNGEON_A:
; 87   : 		szOut = "dungeon_a";		

  000a3	68 00 00 00 00	 push	 OFFSET ??_C@_09HGJJLINF@dungeon_a?$AA@

; 88   : 		break;

  000a8	eb 36		 jmp	 SHORT $LN31@GetModeTit
$LN8@GetModeTit:

; 89   : 	case MT_DOUBLE_CROWN:
; 90   : 		szOut = "doublecrown";

  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JEJKCMKD@doublecrown?$AA@

; 91   : 		break;

  000af	eb 2f		 jmp	 SHORT $LN31@GetModeTit
$LN7@GetModeTit:

; 92   : 	case MT_HEADQUARTERS:
; 93   : 		szOut = "headquarters";

  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0N@GGFCDCGI@headquarters?$AA@

; 94   : 		break;

  000b6	eb 28		 jmp	 SHORT $LN31@GetModeTit
$LN6@GetModeTit:

; 95   : 	case MT_SHUFFLE_BONUS:
; 96   : 		szOut = "shufflebonus";

  000b8	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CIFLFJKM@shufflebonus?$AA@

; 97   : 		break;

  000bd	eb 21		 jmp	 SHORT $LN31@GetModeTit
$LN5@GetModeTit:

; 98   : 	case MT_FACTORY:
; 99   : 		szOut = "factory";

  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_07OJGHGMNE@factory?$AA@

; 100  : 		break;

  000c4	eb 1a		 jmp	 SHORT $LN31@GetModeTit
$LN4@GetModeTit:

; 101  : 	case MT_TEAM_SURVIVAL_AI:
; 102  : 		szOut = "teamsurvivalAI";		

  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_0P@EMDECHND@teamsurvivalAI?$AA@

; 103  : 		break;

  000cb	eb 13		 jmp	 SHORT $LN31@GetModeTit
$LN3@GetModeTit:

; 104  : 	case MT_HOUSE:
; 105  : 		szOut = "house";

  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_05KDCECKLC@house?$AA@

; 106  : 		break;

  000d2	eb 0c		 jmp	 SHORT $LN31@GetModeTit
$LN2@GetModeTit:

; 107  : 	case MT_RAID:
; 108  : 		szOut = "raid";

  000d4	68 00 00 00 00	 push	 OFFSET ??_C@_04HPMCHFCH@raid?$AA@

; 109  : 		break;

  000d9	eb 05		 jmp	 SHORT $LN31@GetModeTit
$LN1@GetModeTit:

; 110  : 	default:
; 111  : 		szOut = "";

  000db	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN31@GetModeTit:
  000e0	8b 4d 08	 mov	 ecx, DWORD PTR _szOut$[ebp]
  000e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z

; 112  : 		break;
; 113  : 	}
; 114  : }

  000e9	5d		 pop	 ebp
  000ea	c2 08 00	 ret	 8
  000ed	8d 49 00	 npad	 3
$LN32@GetModeTit:
  000f0	00 00 00 00	 DD	 $LN26@GetModeTit
  000f4	00 00 00 00	 DD	 $LN20@GetModeTit
  000f8	00 00 00 00	 DD	 $LN18@GetModeTit
  000fc	00 00 00 00	 DD	 $LN1@GetModeTit
  00100	00 00 00 00	 DD	 $LN17@GetModeTit
  00104	00 00 00 00	 DD	 $LN15@GetModeTit
  00108	00 00 00 00	 DD	 $LN14@GetModeTit
  0010c	00 00 00 00	 DD	 $LN13@GetModeTit
  00110	00 00 00 00	 DD	 $LN12@GetModeTit
  00114	00 00 00 00	 DD	 $LN11@GetModeTit
  00118	00 00 00 00	 DD	 $LN10@GetModeTit
  0011c	00 00 00 00	 DD	 $LN9@GetModeTit
  00120	00 00 00 00	 DD	 $LN7@GetModeTit
  00124	00 00 00 00	 DD	 $LN19@GetModeTit
  00128	00 00 00 00	 DD	 $LN16@GetModeTit
  0012c	00 00 00 00	 DD	 $LN25@GetModeTit
  00130	00 00 00 00	 DD	 $LN24@GetModeTit
  00134	00 00 00 00	 DD	 $LN23@GetModeTit
  00138	00 00 00 00	 DD	 $LN8@GetModeTit
  0013c	00 00 00 00	 DD	 $LN6@GetModeTit
  00140	00 00 00 00	 DD	 $LN5@GetModeTit
  00144	00 00 00 00	 DD	 $LN4@GetModeTit
  00148	00 00 00 00	 DD	 $LN3@GetModeTit
  0014c	00 00 00 00	 DD	 $LN1@GetModeTit
  00150	00 00 00 00	 DD	 $LN22@GetModeTit
  00154	00 00 00 00	 DD	 $LN21@GetModeTit
  00158	00 00 00 00	 DD	 $LN2@GetModeTit
?GetModeTitle@ioModeResourceManager@@QAEXAAVioHashString@@H@Z ENDP ; ioModeResourceManager::GetModeTitle
_TEXT	ENDS
PUBLIC	?return1@@YAIXZ					; return1
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
;	COMDAT ?return1@@YAIXZ
_TEXT	SEGMENT
?return1@@YAIXZ PROC					; return1, COMDAT

; 17   : 	__forceinline unsigned int return1() { __asm mov eax, 1 };

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?return1@@YAIXZ ENDP					; return1
_TEXT	ENDS
PUBLIC	??_C@_0BA@IMGCBAGB@plaza_community?$AA@		; `string'
PUBLIC	??_C@_0M@EKGLNHNG@plaza_guild?$AA@		; `string'
PUBLIC	??_C@_0N@LOMBJBAF@plaza_battle?$AA@		; `string'
PUBLIC	?GetPlazaTitle@ioModeResourceManager@@QAEXAAVioHashString@@H@Z ; ioModeResourceManager::GetPlazaTitle
;	COMDAT ??_C@_0BA@IMGCBAGB@plaza_community?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomoderesourcemanager.cpp
CONST	SEGMENT
??_C@_0BA@IMGCBAGB@plaza_community?$AA@ DB 'plaza_community', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EKGLNHNG@plaza_guild?$AA@
CONST	SEGMENT
??_C@_0M@EKGLNHNG@plaza_guild?$AA@ DB 'plaza_guild', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LOMBJBAF@plaza_battle?$AA@
CONST	SEGMENT
??_C@_0N@LOMBJBAF@plaza_battle?$AA@ DB 'plaza_battle', 00H ; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?GetPlazaTitle@ioModeResourceManager@@QAEXAAVioHashString@@H@Z
_TEXT	SEGMENT
_szOut$ = 8						; size = 4
_ePlazaType$ = 12					; size = 4
?GetPlazaTitle@ioModeResourceManager@@QAEXAAVioHashString@@H@Z PROC ; ioModeResourceManager::GetPlazaTitle, COMDAT
; _this$ = ecx

; 117  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 118  : 	// 로딩 배경 로드
; 119  : 	switch( ePlazaType )

  00003	8b 45 0c	 mov	 eax, DWORD PTR _ePlazaType$[ebp]

; 127  : 	default:
; 128  : 		szOut = "plaza_battle";

  00006	8b 4d 08	 mov	 ecx, DWORD PTR _szOut$[ebp]
  00009	48		 dec	 eax
  0000a	48		 dec	 eax
  0000b	74 11		 je	 SHORT $LN3@GetPlazaTi

; 118  : 	// 로딩 배경 로드
; 119  : 	switch( ePlazaType )

  0000d	48		 dec	 eax
  0000e	74 07		 je	 SHORT $LN2@GetPlazaTi

; 127  : 	default:
; 128  : 		szOut = "plaza_battle";

  00010	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LOMBJBAF@plaza_battle?$AA@

; 129  : 		break;

  00015	eb 0c		 jmp	 SHORT $LN8@GetPlazaTi
$LN2@GetPlazaTi:

; 123  : 		break;
; 124  : 	case PT_GUILD:
; 125  : 		szOut = "plaza_guild";

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EKGLNHNG@plaza_guild?$AA@

; 126  : 		break;

  0001c	eb 05		 jmp	 SHORT $LN8@GetPlazaTi
$LN3@GetPlazaTi:

; 120  : 	{
; 121  : 	case PT_COMMUNITY:
; 122  : 		szOut = "plaza_community";

  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IMGCBAGB@plaza_community?$AA@
$LN8@GetPlazaTi:
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z

; 130  : 	}
; 131  : }

  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?GetPlazaTitle@ioModeResourceManager@@QAEXAAVioHashString@@H@Z ENDP ; ioModeResourceManager::GetPlazaTitle
_TEXT	ENDS
PUBLIC	??_C@_0N@NLGJKDHC@myroom_lobby?$AA@		; `string'
PUBLIC	??_C@_0O@EMFAPHIG@myroom_battle?$AA@		; `string'
PUBLIC	??_C@_0O@CGMEPDNP@myroom_ladder?$AA@		; `string'
PUBLIC	??_C@_0BD@CHHMKGLA@myroom_ladder_hero?$AA@	; `string'
PUBLIC	??_C@_0BB@GLDHNHDG@myroom_find_mode?$AA@	; `string'
PUBLIC	??_C@_0BA@FNGKEADH@myroom_practice?$AA@		; `string'
PUBLIC	?GetModeRoomTitle@ioModeResourceManager@@QAEXAAVioHashString@@H_N@Z ; ioModeResourceManager::GetModeRoomTitle
;	COMDAT ??_C@_0N@NLGJKDHC@myroom_lobby?$AA@
CONST	SEGMENT
??_C@_0N@NLGJKDHC@myroom_lobby?$AA@ DB 'myroom_lobby', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EMFAPHIG@myroom_battle?$AA@
CONST	SEGMENT
??_C@_0O@EMFAPHIG@myroom_battle?$AA@ DB 'myroom_battle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CGMEPDNP@myroom_ladder?$AA@
CONST	SEGMENT
??_C@_0O@CGMEPDNP@myroom_ladder?$AA@ DB 'myroom_ladder', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CHHMKGLA@myroom_ladder_hero?$AA@
CONST	SEGMENT
??_C@_0BD@CHHMKGLA@myroom_ladder_hero?$AA@ DB 'myroom_ladder_hero', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GLDHNHDG@myroom_find_mode?$AA@
CONST	SEGMENT
??_C@_0BB@GLDHNHDG@myroom_find_mode?$AA@ DB 'myroom_find_mode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FNGKEADH@myroom_practice?$AA@
CONST	SEGMENT
??_C@_0BA@FNGKEADH@myroom_practice?$AA@ DB 'myroom_practice', 00H ; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?GetModeRoomTitle@ioModeResourceManager@@QAEXAAVioHashString@@H_N@Z
_TEXT	SEGMENT
_szOut$ = 8						; size = 4
_eMyRoomType$ = 12					; size = 4
_bCampHeroBattle$ = 16					; size = 1
?GetModeRoomTitle@ioModeResourceManager@@QAEXAAVioHashString@@H_N@Z PROC ; ioModeResourceManager::GetModeRoomTitle, COMDAT
; _this$ = ecx

; 134  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 135  : 	switch( eMyRoomType )

  00003	8b 45 0c	 mov	 eax, DWORD PTR _eMyRoomType$[ebp]
  00006	83 e8 00	 sub	 eax, 0
  00009	74 3c		 je	 SHORT $LN7@GetModeRoo
  0000b	48		 dec	 eax
  0000c	74 32		 je	 SHORT $LN6@GetModeRoo
  0000e	48		 dec	 eax
  0000f	74 18		 je	 SHORT $LN4@GetModeRoo
  00011	48		 dec	 eax
  00012	48		 dec	 eax
  00013	74 2b		 je	 SHORT $LN6@GetModeRoo
  00015	48		 dec	 eax

; 157  : 	default:
; 158  : 		szOut = "myroom_practice";

  00016	8b 4d 08	 mov	 ecx, DWORD PTR _szOut$[ebp]
  00019	74 07		 je	 SHORT $LN5@GetModeRoo
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FNGKEADH@myroom_practice?$AA@

; 159  : 		break;

  00020	eb 2d		 jmp	 SHORT $LN12@GetModeRoo
$LN5@GetModeRoo:

; 144  : 	case MRT_FIND_MODE:
; 145  : 		szOut = "myroom_find_mode";

  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GLDHNHDG@myroom_find_mode?$AA@

; 146  : 		break;

  00027	eb 26		 jmp	 SHORT $LN12@GetModeRoo
$LN4@GetModeRoo:

; 147  : 	case MRT_LADDER:
; 148  : 		if( bCampHeroBattle )

  00029	80 7d 10 00	 cmp	 BYTE PTR _bCampHeroBattle$[ebp], 0

; 149  : 		{
; 150  : 			szOut = "myroom_ladder_hero";

  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _szOut$[ebp]
  00030	74 07		 je	 SHORT $LN3@GetModeRoo
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CHHMKGLA@myroom_ladder_hero?$AA@

; 151  : 		}
; 152  : 		else

  00037	eb 16		 jmp	 SHORT $LN12@GetModeRoo
$LN3@GetModeRoo:

; 153  : 		{
; 154  : 			szOut = "myroom_ladder";

  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CGMEPDNP@myroom_ladder?$AA@

; 155  : 		}
; 156  : 		break;

  0003e	eb 0f		 jmp	 SHORT $LN12@GetModeRoo
$LN6@GetModeRoo:

; 139  : 		break;
; 140  : 	case MRT_BATTLE:
; 141  : 	case MRT_SHUFFLE:
; 142  : 		szOut = "myroom_battle";

  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0O@EMFAPHIG@myroom_battle?$AA@

; 143  : 		break;

  00045	eb 05		 jmp	 SHORT $LN13@GetModeRoo
$LN7@GetModeRoo:

; 136  : 	{
; 137  : 	case MRT_LOBBY:
; 138  : 		szOut = "myroom_lobby";

  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NLGJKDHC@myroom_lobby?$AA@
$LN13@GetModeRoo:
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _szOut$[ebp]
$LN12@GetModeRoo:
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z

; 160  : 	}
; 161  : }

  00055	5d		 pop	 ebp
  00056	c2 0c 00	 ret	 12			; 0000000cH
?GetModeRoomTitle@ioModeResourceManager@@QAEXAAVioHashString@@H_N@Z ENDP ; ioModeResourceManager::GetModeRoomTitle
_TEXT	ENDS
PUBLIC	??1ioINILoader_e@@QAE@XZ			; ioINILoader_e::~ioINILoader_e
EXTRN	__imp_??1ioINILoader@@QAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1ioINILoader_e@@QAE@XZ
_TEXT	SEGMENT
??1ioINILoader_e@@QAE@XZ PROC				; ioINILoader_e::~ioINILoader_e, COMDAT
; _this$ = ecx
  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
??1ioINILoader_e@@QAE@XZ ENDP				; ioINILoader_e::~ioINILoader_e
_TEXT	ENDS
PUBLIC	??0?$Singleton@VioModeResourceManager@@@@QAE@XZ	; Singleton<ioModeResourceManager>::Singleton<ioModeResourceManager>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
;	COMDAT ??0?$Singleton@VioModeResourceManager@@@@QAE@XZ
_TEXT	SEGMENT
??0?$Singleton@VioModeResourceManager@@@@QAE@XZ PROC	; Singleton<ioModeResourceManager>::Singleton<ioModeResourceManager>, COMDAT
; _this$ = ecx

; 27   : 	Singleton()

  00000	8b c1		 mov	 eax, ecx

; 28   : 	{
; 29   : 		assert( !ms_Singleton );
; 30   : 		int offset = (int)(T*)1 - (int)(Singleton <T>*)(T*)1;
; 31   : 		ms_Singleton = (T*)((int)this + offset);

  00002	8d 48 fc	 lea	 ecx, DWORD PTR [eax-4]
  00005	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioModeResourceManager@@@@1PAVioModeResourceManager@@A, ecx ; Singleton<ioModeResourceManager>::ms_Singleton

; 32   : 	}

  0000b	c3		 ret	 0
??0?$Singleton@VioModeResourceManager@@@@QAE@XZ ENDP	; Singleton<ioModeResourceManager>::Singleton<ioModeResourceManager>
_TEXT	ENDS
PUBLIC	??1?$Singleton@VioModeResourceManager@@@@QAE@XZ	; Singleton<ioModeResourceManager>::~Singleton<ioModeResourceManager>
; Function compile flags: /Ogsp
;	COMDAT ??1?$Singleton@VioModeResourceManager@@@@QAE@XZ
_TEXT	SEGMENT
??1?$Singleton@VioModeResourceManager@@@@QAE@XZ PROC	; Singleton<ioModeResourceManager>::~Singleton<ioModeResourceManager>, COMDAT
; _this$ = ecx

; 36   : 		assert( ms_Singleton );
; 37   : 		ms_Singleton = 0;

  00000	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioModeResourceManager@@@@1PAVioModeResourceManager@@A, 0 ; Singleton<ioModeResourceManager>::ms_Singleton

; 38   : 	}

  00007	c3		 ret	 0
??1?$Singleton@VioModeResourceManager@@@@QAE@XZ ENDP	; Singleton<ioModeResourceManager>::~Singleton<ioModeResourceManager>
_TEXT	ENDS
PUBLIC	?GetSingleton@?$Singleton@VioModeResourceManager@@@@SAAAVioModeResourceManager@@XZ ; Singleton<ioModeResourceManager>::GetSingleton
; Function compile flags: /Ogsp
;	COMDAT ?GetSingleton@?$Singleton@VioModeResourceManager@@@@SAAAVioModeResourceManager@@XZ
_TEXT	SEGMENT
?GetSingleton@?$Singleton@VioModeResourceManager@@@@SAAAVioModeResourceManager@@XZ PROC ; Singleton<ioModeResourceManager>::GetSingleton, COMDAT

; 42   : 		assert( ms_Singleton );
; 43   : 		return (*ms_Singleton);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioModeResourceManager@@@@1PAVioModeResourceManager@@A ; Singleton<ioModeResourceManager>::ms_Singleton

; 44   : 	}

  00005	c3		 ret	 0
?GetSingleton@?$Singleton@VioModeResourceManager@@@@SAAAVioModeResourceManager@@XZ ENDP ; Singleton<ioModeResourceManager>::GetSingleton
_TEXT	ENDS
PUBLIC	?GetSingletonPtr@?$Singleton@VioModeResourceManager@@@@SAPAVioModeResourceManager@@XZ ; Singleton<ioModeResourceManager>::GetSingletonPtr
; Function compile flags: /Ogsp
;	COMDAT ?GetSingletonPtr@?$Singleton@VioModeResourceManager@@@@SAPAVioModeResourceManager@@XZ
_TEXT	SEGMENT
?GetSingletonPtr@?$Singleton@VioModeResourceManager@@@@SAPAVioModeResourceManager@@XZ PROC ; Singleton<ioModeResourceManager>::GetSingletonPtr, COMDAT

; 48   : 		return ( ms_Singleton );

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioModeResourceManager@@@@1PAVioModeResourceManager@@A ; Singleton<ioModeResourceManager>::ms_Singleton

; 49   : 	}

  00005	c3		 ret	 0
?GetSingletonPtr@?$Singleton@VioModeResourceManager@@@@SAPAVioModeResourceManager@@XZ ENDP ; Singleton<ioModeResourceManager>::GetSingletonPtr
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IBE_NPBUModeIcon@ioModeResourceManager@@@Z ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IBE_NPBUModeIcon@ioModeResourceManager@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IBE_NPBUModeIcon@ioModeResourceManager@@@Z PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IBE_NPBUModeIcon@ioModeResourceManager@@@Z ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IBEXPAUModeIcon@ioModeResourceManager@@0@Z ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IBEXPAUModeIcon@ioModeResourceManager@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IBEXPAUModeIcon@ioModeResourceManager@@0@Z PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IBEXPAUModeIcon@ioModeResourceManager@@0@Z ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE@XZ ; std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::~_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::~_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::~_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAE@XZ ; std::allocator<ioModeResourceManager::ModeIcon>::allocator<ioModeResourceManager::ModeIcon>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAE@XZ PROC ; std::allocator<ioModeResourceManager::ModeIcon>::allocator<ioModeResourceManager::ModeIcon>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAE@XZ ENDP ; std::allocator<ioModeResourceManager::ModeIcon>::allocator<ioModeResourceManager::ModeIcon>
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBEABUModeIcon@ioModeResourceManager@@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBEABUModeIcon@ioModeResourceManager@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBEABUModeIcon@ioModeResourceManager@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator*, COMDAT
; _this$ = ecx

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 85   : 		}

  00002	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBEABUModeIcon@ioModeResourceManager@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator++, COMDAT
; _this$ = ecx

; 93   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

  00002	83 00 14	 add	 DWORD PTR [eax], 20	; 00000014H

; 111  : 		return (*this);
; 112  : 		}

  00005	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator++
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	?capacity@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QBEIXZ ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QBEIXZ PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 14		 push	 20			; 00000014H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 778  : 		}

  0000b	c3		 ret	 0
?capacity@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::capacity
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
PUBLIC	?size@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QBEIXZ ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QBEIXZ PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 14		 push	 20			; 00000014H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 880  : 		}

  0000b	c3		 ret	 0
?size@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::size
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1exception@std@@UAE@XZ
  00012	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00016	74 07		 je	 SHORT $LN1@scalar
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	59		 pop	 ecx
$LN1@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IBEXXZ ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IBEXXZ PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
  0000b	cc		 int	 3
?_Xlen@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IBEXXZ ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAE@ABV01@@Z ; std::allocator<ioModeResourceManager::ModeIcon>::allocator<ioModeResourceManager::ModeIcon>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAE@ABV01@@Z PROC ; std::allocator<ioModeResourceManager::ModeIcon>::allocator<ioModeResourceManager::ModeIcon>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<ioModeResourceManager::ModeIcon>::allocator<ioModeResourceManager::ModeIcon>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@I@Z ; std::allocator<ioModeResourceManager::ModeIcon>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@I@Z PROC ; std::allocator<ioModeResourceManager::ModeIcon>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@I@Z ENDP ; std::allocator<ioModeResourceManager::ModeIcon>::deallocate
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::_Compat
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::_Compat
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QBEIXZ ; std::allocator<ioModeResourceManager::ModeIcon>::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QBEIXZ PROC ; std::allocator<ioModeResourceManager::ModeIcon>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QBEIXZ ENDP ; std::allocator<ioModeResourceManager::ModeIcon>::max_size
_TEXT	ENDS
PUBLIC	??$addressof@$$CBUModeIcon@ioModeResourceManager@@@std@@YAPBUModeIcon@ioModeResourceManager@@ABU12@@Z ; std::addressof<ioModeResourceManager::ModeIcon const >
; Function compile flags: /Ogsp
;	COMDAT ??$addressof@$$CBUModeIcon@ioModeResourceManager@@@std@@YAPBUModeIcon@ioModeResourceManager@@ABU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUModeIcon@ioModeResourceManager@@@std@@YAPBUModeIcon@ioModeResourceManager@@ABU12@@Z PROC ; std::addressof<ioModeResourceManager::ModeIcon const >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@$$CBUModeIcon@ioModeResourceManager@@@std@@YAPBUModeIcon@ioModeResourceManager@@ABU12@@Z ENDP ; std::addressof<ioModeResourceManager::ModeIcon const >
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@UModeIcon@ioModeResourceManager@@@std@@YAPAUModeIcon@ioModeResourceManager@@IPAU12@@Z ; std::_Allocate<ioModeResourceManager::ModeIcon>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@UModeIcon@ioModeResourceManager@@@std@@YAPAUModeIcon@ioModeResourceManager@@IPAU12@@Z
_TEXT	SEGMENT
$T506968 = -12						; size = 12
$T506973 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UModeIcon@ioModeResourceManager@@@std@@YAPAUModeIcon@ioModeResourceManager@@IPAU12@@Z PROC ; std::_Allocate<ioModeResourceManager::ModeIcon>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 cc cc cc
	0c		 cmp	 ecx, 214748364		; 0cccccccH
  00015	77 0e		 ja	 SHORT $LN1@Allocate
  00017	6b c9 14	 imul	 ecx, 20			; 00000014H
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T506973[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T506973[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T506968[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T506968[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T506968[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@UModeIcon@ioModeResourceManager@@@std@@YAPAUModeIcon@ioModeResourceManager@@IPAU12@@Z ENDP ; std::_Allocate<ioModeResourceManager::ModeIcon>
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	return (_Where);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 58   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 62   : 	}

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??$forward@AAUModeIcon@ioModeResourceManager@@@std@@YAAAUModeIcon@ioModeResourceManager@@AAU12@@Z ; std::forward<ioModeResourceManager::ModeIcon &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAUModeIcon@ioModeResourceManager@@@std@@YAAAUModeIcon@ioModeResourceManager@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUModeIcon@ioModeResourceManager@@@std@@YAAAUModeIcon@ioModeResourceManager@@AAU12@@Z PROC ; std::forward<ioModeResourceManager::ModeIcon &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAUModeIcon@ioModeResourceManager@@@std@@YAAAUModeIcon@ioModeResourceManager@@AAU12@@Z ENDP ; std::forward<ioModeResourceManager::ModeIcon &>
_TEXT	ENDS
PUBLIC	??$construct@AAUModeIcon@ioModeResourceManager@@@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@AAU23@@Z ; std::allocator<ioModeResourceManager::ModeIcon>::construct<ioModeResourceManager::ModeIcon &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAUModeIcon@ioModeResourceManager@@@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@AAU23@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUModeIcon@ioModeResourceManager@@@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@AAU23@@Z PROC ; std::allocator<ioModeResourceManager::ModeIcon>::construct<ioModeResourceManager::ModeIcon &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN3@construct
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	6a 05		 push	 5
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN3@construct:
  00015	5f		 pop	 edi

; 209  : 		}

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
??$construct@AAUModeIcon@ioModeResourceManager@@@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@AAU23@@Z ENDP ; std::allocator<ioModeResourceManager::ModeIcon>::construct<ioModeResourceManager::ModeIcon &>
_TEXT	ENDS
PUBLIC	??$forward@ABUModeIcon@ioModeResourceManager@@@std@@YAABUModeIcon@ioModeResourceManager@@ABU12@@Z ; std::forward<ioModeResourceManager::ModeIcon const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABUModeIcon@ioModeResourceManager@@@std@@YAABUModeIcon@ioModeResourceManager@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUModeIcon@ioModeResourceManager@@@std@@YAABUModeIcon@ioModeResourceManager@@ABU12@@Z PROC ; std::forward<ioModeResourceManager::ModeIcon const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABUModeIcon@ioModeResourceManager@@@std@@YAABUModeIcon@ioModeResourceManager@@ABU12@@Z ENDP ; std::forward<ioModeResourceManager::ModeIcon const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@UModeIcon@ioModeResourceManager@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUModeIcon@ioModeResourceManager@@0@Z ; std::_Ptr_cat<ioModeResourceManager::ModeIcon,ioModeResourceManager::ModeIcon>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@UModeIcon@ioModeResourceManager@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUModeIcon@ioModeResourceManager@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UModeIcon@ioModeResourceManager@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUModeIcon@ioModeResourceManager@@0@Z PROC ; std::_Ptr_cat<ioModeResourceManager::ModeIcon,ioModeResourceManager::ModeIcon>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@UModeIcon@ioModeResourceManager@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUModeIcon@ioModeResourceManager@@0@Z ENDP ; std::_Ptr_cat<ioModeResourceManager::ModeIcon,ioModeResourceManager::ModeIcon>
_TEXT	ENDS
PUBLIC	??$_Construct@UModeIcon@ioModeResourceManager@@ABU12@@std@@YAXPAUModeIcon@ioModeResourceManager@@ABU12@@Z ; std::_Construct<ioModeResourceManager::ModeIcon,ioModeResourceManager::ModeIcon const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Construct@UModeIcon@ioModeResourceManager@@ABU12@@std@@YAXPAUModeIcon@ioModeResourceManager@@ABU12@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UModeIcon@ioModeResourceManager@@ABU12@@std@@YAXPAUModeIcon@ioModeResourceManager@@ABU12@@Z PROC ; std::_Construct<ioModeResourceManager::ModeIcon,ioModeResourceManager::ModeIcon const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN3@Construct
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	6a 05		 push	 5
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN3@Construct:
  00015	5f		 pop	 edi

; 49   : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Construct@UModeIcon@ioModeResourceManager@@ABU12@@std@@YAXPAUModeIcon@ioModeResourceManager@@ABU12@@Z ENDP ; std::_Construct<ioModeResourceManager::ModeIcon,ioModeResourceManager::ModeIcon const &>
_TEXT	ENDS
PUBLIC	??$move@AAUModeIcon@ioModeResourceManager@@@std@@YA$$QAUModeIcon@ioModeResourceManager@@AAU12@@Z ; std::move<ioModeResourceManager::ModeIcon &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAUModeIcon@ioModeResourceManager@@@std@@YA$$QAUModeIcon@ioModeResourceManager@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUModeIcon@ioModeResourceManager@@@std@@YA$$QAUModeIcon@ioModeResourceManager@@AAU12@@Z PROC ; std::move<ioModeResourceManager::ModeIcon &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAUModeIcon@ioModeResourceManager@@@std@@YA$$QAUModeIcon@ioModeResourceManager@@AAU12@@Z ENDP ; std::move<ioModeResourceManager::ModeIcon &>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAUModeIcon@ioModeResourceManager@@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@@Z ; std::_Val_type<ioModeResourceManager::ModeIcon *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAUModeIcon@ioModeResourceManager@@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUModeIcon@ioModeResourceManager@@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@@Z PROC ; std::_Val_type<ioModeResourceManager::ModeIcon *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAUModeIcon@ioModeResourceManager@@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@@Z ENDP ; std::_Val_type<ioModeResourceManager::ModeIcon *>
_TEXT	ENDS
PUBLIC	??$_Destroy@UModeIcon@ioModeResourceManager@@@std@@YAXPAUModeIcon@ioModeResourceManager@@@Z ; std::_Destroy<ioModeResourceManager::ModeIcon>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@UModeIcon@ioModeResourceManager@@@std@@YAXPAUModeIcon@ioModeResourceManager@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UModeIcon@ioModeResourceManager@@@std@@YAXPAUModeIcon@ioModeResourceManager@@@Z PROC ; std::_Destroy<ioModeResourceManager::ModeIcon>, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@UModeIcon@ioModeResourceManager@@@std@@YAXPAUModeIcon@ioModeResourceManager@@@Z ENDP ; std::_Destroy<ioModeResourceManager::ModeIcon>
_TEXT	ENDS
PUBLIC	??$forward@UModeIcon@ioModeResourceManager@@@std@@YA$$QAUModeIcon@ioModeResourceManager@@AAU12@@Z ; std::forward<ioModeResourceManager::ModeIcon>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@UModeIcon@ioModeResourceManager@@@std@@YA$$QAUModeIcon@ioModeResourceManager@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UModeIcon@ioModeResourceManager@@@std@@YA$$QAUModeIcon@ioModeResourceManager@@AAU12@@Z PROC ; std::forward<ioModeResourceManager::ModeIcon>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@UModeIcon@ioModeResourceManager@@@std@@YA$$QAUModeIcon@ioModeResourceManager@@AAU12@@Z ENDP ; std::forward<ioModeResourceManager::ModeIcon>
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	?GetSingleton@ioModeResourceManager@@SAAAV1@XZ	; ioModeResourceManager::GetSingleton
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomoderesourcemanager.cpp
;	COMDAT ?GetSingleton@ioModeResourceManager@@SAAAV1@XZ
_TEXT	SEGMENT
?GetSingleton@ioModeResourceManager@@SAAAV1@XZ PROC	; ioModeResourceManager::GetSingleton, COMDAT

; 8    : 	return Singleton< ioModeResourceManager >::GetSingleton();

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioModeResourceManager@@@@1PAVioModeResourceManager@@A ; Singleton<ioModeResourceManager>::ms_Singleton

; 9    : }

  00005	c3		 ret	 0
?GetSingleton@ioModeResourceManager@@SAAAV1@XZ ENDP	; ioModeResourceManager::GetSingleton
_TEXT	ENDS
PUBLIC	?GetSingletonPtr@ioModeResourceManager@@SAPAV1@XZ ; ioModeResourceManager::GetSingletonPtr
; Function compile flags: /Ogsp
;	COMDAT ?GetSingletonPtr@ioModeResourceManager@@SAPAV1@XZ
_TEXT	SEGMENT
?GetSingletonPtr@ioModeResourceManager@@SAPAV1@XZ PROC	; ioModeResourceManager::GetSingletonPtr, COMDAT

; 13   : 	return Singleton< ioModeResourceManager >::GetSingletonPtr();

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioModeResourceManager@@@@1PAVioModeResourceManager@@A ; Singleton<ioModeResourceManager>::ms_Singleton

; 14   : }

  00005	c3		 ret	 0
?GetSingletonPtr@ioModeResourceManager@@SAPAV1@XZ ENDP	; ioModeResourceManager::GetSingletonPtr
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBEAAUModeIcon@ioModeResourceManager@@XZ ; std::_Vector_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBEAAUModeIcon@ioModeResourceManager@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBEAAUModeIcon@ioModeResourceManager@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator*, COMDAT
; _this$ = ecx

; 322  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 323  : 		}

  00002	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBEAAUModeIcon@ioModeResourceManager@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator*
_TEXT	ENDS
PUBLIC	??C?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBEPAUModeIcon@ioModeResourceManager@@XZ ; std::_Vector_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator->
; Function compile flags: /Ogsp
;	COMDAT ??C?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBEPAUModeIcon@ioModeResourceManager@@XZ
_TEXT	SEGMENT
??C?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBEPAUModeIcon@ioModeResourceManager@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator->, COMDAT
; _this$ = ecx

; 327  : 		return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 328  : 		}

  00002	c3		 ret	 0
??C?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBEPAUModeIcon@ioModeResourceManager@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator->
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator++, COMDAT
; _this$ = ecx

; 331  : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 332  : 		++*(_Mybase *)this;

  00002	83 00 14	 add	 DWORD PTR [eax], 20	; 00000014H

; 333  : 		return (*this);
; 334  : 		}

  00005	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE@V?$allocator@UModeIcon@ioModeResourceManager@@@1@@Z ; std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE@V?$allocator@UModeIcon@ioModeResourceManager@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE@V?$allocator@UModeIcon@ioModeResourceManager@@@1@@Z PROC ; std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE@V?$allocator@UModeIcon@ioModeResourceManager@@@1@@Z ENDP ; std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator==
_TEXT	ENDS
PUBLIC	?max_size@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QBEIXZ ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QBEIXZ PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IBEII@Z ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IBEII@Z PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	6a 14		 push	 20			; 00000014H
  0000a	99		 cdq
  0000b	59		 pop	 ecx
  0000c	f7 f9		 idiv	 ecx

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0000e	ba cc cc cc 0c	 mov	 edx, 214748364		; 0cccccccH
  00013	8b c8		 mov	 ecx, eax
  00015	d1 e9		 shr	 ecx, 1
  00017	2b d1		 sub	 edx, ecx
  00019	3b d0		 cmp	 edx, eax
  0001b	73 04		 jae	 SHORT $LN4@Grow_to
  0001d	33 c0		 xor	 eax, eax
  0001f	eb 02		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00021	03 c1		 add	 eax, ecx
$LN5@Grow_to:

; 1279 : 		if (_Capacity < _Count)

  00023	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00026	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?_Grow_to@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IBEII@Z ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Grow_to
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QAE@PAUModeIcon@ioModeResourceManager@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QAE@PAUModeIcon@ioModeResourceManager@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QAE@PAUModeIcon@ioModeResourceManager@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QAE@PAUModeIcon@ioModeResourceManager@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEPAUModeIcon@ioModeResourceManager@@I@Z ; std::allocator<ioModeResourceManager::ModeIcon>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEPAUModeIcon@ioModeResourceManager@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEPAUModeIcon@ioModeResourceManager@@I@Z PROC ; std::allocator<ioModeResourceManager::ModeIcon>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@UModeIcon@ioModeResourceManager@@@std@@YAPAUModeIcon@ioModeResourceManager@@IPAU12@@Z ; std::_Allocate<ioModeResourceManager::ModeIcon>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEPAUModeIcon@ioModeResourceManager@@I@Z ENDP ; std::allocator<ioModeResourceManager::ModeIcon>::allocate
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@AAU34@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@AAU23@@Z ; std::_Cons_val<std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon,ioModeResourceManager::ModeIcon &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@AAU34@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@AAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@AAU34@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@AAU23@@Z PROC ; std::_Cons_val<std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon,ioModeResourceManager::ModeIcon &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00004	8b 7d 0c	 mov	 edi, DWORD PTR __Pdest$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN7@Cons_val
  0000b	56		 push	 esi
  0000c	8b 75 10	 mov	 esi, DWORD PTR __Src$[ebp]
  0000f	6a 05		 push	 5
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN7@Cons_val:
  00015	5f		 pop	 edi

; 281  : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Cons_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@AAU34@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@AAU23@@Z ENDP ; std::_Cons_val<std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon,ioModeResourceManager::ModeIcon &>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@ABU34@@Z ; std::allocator<ioModeResourceManager::ModeIcon>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@ABU34@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@ABU34@@Z PROC ; std::allocator<ioModeResourceManager::ModeIcon>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 197  : 		_Construct(_Ptr, _Val);

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN5@construct@2
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	6a 05		 push	 5
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN5@construct@2:
  00015	5f		 pop	 edi

; 198  : 		}

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?construct@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@ABU34@@Z ENDP ; std::allocator<ioModeResourceManager::ModeIcon>::construct
_TEXT	ENDS
PUBLIC	??$encodeString@$0BM@@ioINILoader_e@@AAEPADAAY0BM@$$CBDPAD@Z ; ioINILoader_e::encodeString<28>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$encodeString@$0BM@@ioINILoader_e@@AAEPADAAY0BM@$$CBDPAD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_e$ = 12						; size = 4
??$encodeString@$0BM@@ioINILoader_e@@AAEPADAAY0BM@$$CBDPAD@Z PROC ; ioINILoader_e::encodeString<28>, COMDAT
; _this$ = ecx

; 215  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 216  : 		__ENCSTR(s, e);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _s$[ebp]
  00006	8a 11		 mov	 dl, BYTE PTR [ecx]
  00008	8b 45 0c	 mov	 eax, DWORD PTR _e$[ebp]
  0000b	53		 push	 ebx
  0000c	84 d2		 test	 dl, dl
  0000e	0f 84 6a 04 00
	00		 je	 $LN96@encodeStri
  00014	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00017	88 10		 mov	 BYTE PTR [eax], dl
  00019	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  0001c	84 d2		 test	 dl, dl
  0001e	0f 84 54 04 00
	00		 je	 $LN95@encodeStri
  00024	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00027	88 50 01	 mov	 BYTE PTR [eax+1], dl
  0002a	8a 51 02	 mov	 dl, BYTE PTR [ecx+2]
  0002d	84 d2		 test	 dl, dl
  0002f	0f 84 3d 04 00
	00		 je	 $LN94@encodeStri
  00035	b3 eb		 mov	 bl, -21			; ffffffebH
  00037	32 d3		 xor	 dl, bl
  00039	88 50 02	 mov	 BYTE PTR [eax+2], dl
  0003c	8a 51 03	 mov	 dl, BYTE PTR [ecx+3]
  0003f	84 d2		 test	 dl, dl
  00041	0f 84 25 04 00
	00		 je	 $LN93@encodeStri
  00047	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0004a	88 50 03	 mov	 BYTE PTR [eax+3], dl
  0004d	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  00050	84 d2		 test	 dl, dl
  00052	0f 84 0e 04 00
	00		 je	 $LN92@encodeStri
  00058	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0005b	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0005e	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  00061	84 d2		 test	 dl, dl
  00063	0f 84 f7 03 00
	00		 je	 $LN91@encodeStri
  00069	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0006c	88 50 05	 mov	 BYTE PTR [eax+5], dl
  0006f	8a 51 06	 mov	 dl, BYTE PTR [ecx+6]
  00072	84 d2		 test	 dl, dl
  00074	0f 84 e1 03 00
	00		 je	 $LN90@encodeStri
  0007a	32 d3		 xor	 dl, bl
  0007c	88 50 06	 mov	 BYTE PTR [eax+6], dl
  0007f	8a 51 07	 mov	 dl, BYTE PTR [ecx+7]
  00082	84 d2		 test	 dl, dl
  00084	0f 84 cb 03 00
	00		 je	 $LN89@encodeStri
  0008a	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0008d	88 50 07	 mov	 BYTE PTR [eax+7], dl
  00090	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  00093	84 d2		 test	 dl, dl
  00095	0f 84 b4 03 00
	00		 je	 $LN88@encodeStri
  0009b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0009e	88 50 08	 mov	 BYTE PTR [eax+8], dl
  000a1	8a 51 09	 mov	 dl, BYTE PTR [ecx+9]
  000a4	84 d2		 test	 dl, dl
  000a6	0f 84 9d 03 00
	00		 je	 $LN87@encodeStri
  000ac	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000af	88 50 09	 mov	 BYTE PTR [eax+9], dl
  000b2	8a 51 0a	 mov	 dl, BYTE PTR [ecx+10]
  000b5	84 d2		 test	 dl, dl
  000b7	0f 84 87 03 00
	00		 je	 $LN86@encodeStri
  000bd	32 d3		 xor	 dl, bl
  000bf	88 50 0a	 mov	 BYTE PTR [eax+10], dl
  000c2	8a 51 0b	 mov	 dl, BYTE PTR [ecx+11]
  000c5	84 d2		 test	 dl, dl
  000c7	0f 84 71 03 00
	00		 je	 $LN85@encodeStri
  000cd	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d0	88 50 0b	 mov	 BYTE PTR [eax+11], dl
  000d3	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
  000d6	84 d2		 test	 dl, dl
  000d8	0f 84 5a 03 00
	00		 je	 $LN84@encodeStri
  000de	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e1	88 50 0c	 mov	 BYTE PTR [eax+12], dl
  000e4	8a 51 0d	 mov	 dl, BYTE PTR [ecx+13]
  000e7	84 d2		 test	 dl, dl
  000e9	0f 84 43 03 00
	00		 je	 $LN83@encodeStri
  000ef	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000f2	88 50 0d	 mov	 BYTE PTR [eax+13], dl
  000f5	8a 51 0e	 mov	 dl, BYTE PTR [ecx+14]
  000f8	84 d2		 test	 dl, dl
  000fa	0f 84 2d 03 00
	00		 je	 $LN82@encodeStri
  00100	32 d3		 xor	 dl, bl
  00102	88 50 0e	 mov	 BYTE PTR [eax+14], dl
  00105	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  00108	84 d2		 test	 dl, dl
  0010a	0f 84 17 03 00
	00		 je	 $LN81@encodeStri
  00110	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00113	88 50 0f	 mov	 BYTE PTR [eax+15], dl
  00116	8a 51 10	 mov	 dl, BYTE PTR [ecx+16]
  00119	84 d2		 test	 dl, dl
  0011b	0f 84 00 03 00
	00		 je	 $LN80@encodeStri
  00121	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00124	88 50 10	 mov	 BYTE PTR [eax+16], dl
  00127	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  0012a	84 d2		 test	 dl, dl
  0012c	0f 84 e9 02 00
	00		 je	 $LN79@encodeStri
  00132	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00135	88 50 11	 mov	 BYTE PTR [eax+17], dl
  00138	8a 51 12	 mov	 dl, BYTE PTR [ecx+18]
  0013b	84 d2		 test	 dl, dl
  0013d	0f 84 d3 02 00
	00		 je	 $LN78@encodeStri
  00143	32 d3		 xor	 dl, bl
  00145	88 50 12	 mov	 BYTE PTR [eax+18], dl
  00148	8a 51 13	 mov	 dl, BYTE PTR [ecx+19]
  0014b	84 d2		 test	 dl, dl
  0014d	0f 84 bd 02 00
	00		 je	 $LN77@encodeStri
  00153	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00156	88 50 13	 mov	 BYTE PTR [eax+19], dl
  00159	8a 51 14	 mov	 dl, BYTE PTR [ecx+20]
  0015c	84 d2		 test	 dl, dl
  0015e	0f 84 a6 02 00
	00		 je	 $LN76@encodeStri
  00164	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00167	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0016a	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0016d	84 d2		 test	 dl, dl
  0016f	0f 84 8f 02 00
	00		 je	 $LN75@encodeStri
  00175	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00178	88 50 15	 mov	 BYTE PTR [eax+21], dl
  0017b	8a 51 16	 mov	 dl, BYTE PTR [ecx+22]
  0017e	84 d2		 test	 dl, dl
  00180	0f 84 79 02 00
	00		 je	 $LN74@encodeStri
  00186	32 d3		 xor	 dl, bl
  00188	88 50 16	 mov	 BYTE PTR [eax+22], dl
  0018b	8a 51 17	 mov	 dl, BYTE PTR [ecx+23]
  0018e	84 d2		 test	 dl, dl
  00190	0f 84 60 02 00
	00		 je	 $LN73@encodeStri
  00196	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00199	88 50 17	 mov	 BYTE PTR [eax+23], dl
  0019c	8a 51 18	 mov	 dl, BYTE PTR [ecx+24]
  0019f	84 d2		 test	 dl, dl
  001a1	0f 84 46 02 00
	00		 je	 $LN72@encodeStri
  001a7	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001aa	88 50 18	 mov	 BYTE PTR [eax+24], dl
  001ad	8a 51 19	 mov	 dl, BYTE PTR [ecx+25]
  001b0	84 d2		 test	 dl, dl
  001b2	0f 84 2c 02 00
	00		 je	 $LN71@encodeStri
  001b8	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001bb	88 50 19	 mov	 BYTE PTR [eax+25], dl
  001be	8a 51 1a	 mov	 dl, BYTE PTR [ecx+26]
  001c1	84 d2		 test	 dl, dl
  001c3	0f 84 13 02 00
	00		 je	 $LN70@encodeStri
  001c9	32 d3		 xor	 dl, bl
  001cb	88 50 1a	 mov	 BYTE PTR [eax+26], dl
  001ce	8a 51 1b	 mov	 dl, BYTE PTR [ecx+27]
  001d1	84 d2		 test	 dl, dl
  001d3	0f 84 fa 01 00
	00		 je	 $LN69@encodeStri
  001d9	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001dc	88 50 1b	 mov	 BYTE PTR [eax+27], dl
  001df	8a 51 1c	 mov	 dl, BYTE PTR [ecx+28]
  001e2	84 d2		 test	 dl, dl
  001e4	0f 84 e0 01 00
	00		 je	 $LN68@encodeStri
  001ea	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001ed	88 50 1c	 mov	 BYTE PTR [eax+28], dl
  001f0	8a 51 1d	 mov	 dl, BYTE PTR [ecx+29]
  001f3	84 d2		 test	 dl, dl
  001f5	0f 84 c6 01 00
	00		 je	 $LN67@encodeStri
  001fb	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001fe	88 50 1d	 mov	 BYTE PTR [eax+29], dl
  00201	8a 51 1e	 mov	 dl, BYTE PTR [ecx+30]
  00204	84 d2		 test	 dl, dl
  00206	0f 84 ad 01 00
	00		 je	 $LN66@encodeStri
  0020c	32 d3		 xor	 dl, bl
  0020e	88 50 1e	 mov	 BYTE PTR [eax+30], dl
  00211	8a 51 1f	 mov	 dl, BYTE PTR [ecx+31]
  00214	84 d2		 test	 dl, dl
  00216	0f 84 94 01 00
	00		 je	 $LN65@encodeStri
  0021c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0021f	88 50 1f	 mov	 BYTE PTR [eax+31], dl
  00222	8a 51 20	 mov	 dl, BYTE PTR [ecx+32]
  00225	84 d2		 test	 dl, dl
  00227	0f 84 7a 01 00
	00		 je	 $LN64@encodeStri
  0022d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00230	88 50 20	 mov	 BYTE PTR [eax+32], dl
  00233	8a 51 21	 mov	 dl, BYTE PTR [ecx+33]
  00236	84 d2		 test	 dl, dl
  00238	0f 84 60 01 00
	00		 je	 $LN63@encodeStri
  0023e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00241	88 50 21	 mov	 BYTE PTR [eax+33], dl
  00244	8a 51 22	 mov	 dl, BYTE PTR [ecx+34]
  00247	84 d2		 test	 dl, dl
  00249	0f 84 47 01 00
	00		 je	 $LN62@encodeStri
  0024f	32 d3		 xor	 dl, bl
  00251	88 50 22	 mov	 BYTE PTR [eax+34], dl
  00254	8a 51 23	 mov	 dl, BYTE PTR [ecx+35]
  00257	84 d2		 test	 dl, dl
  00259	0f 84 2e 01 00
	00		 je	 $LN61@encodeStri
  0025f	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00262	88 50 23	 mov	 BYTE PTR [eax+35], dl
  00265	8a 51 24	 mov	 dl, BYTE PTR [ecx+36]
  00268	84 d2		 test	 dl, dl
  0026a	0f 84 14 01 00
	00		 je	 $LN60@encodeStri
  00270	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00273	88 50 24	 mov	 BYTE PTR [eax+36], dl
  00276	8a 51 25	 mov	 dl, BYTE PTR [ecx+37]
  00279	84 d2		 test	 dl, dl
  0027b	0f 84 fa 00 00
	00		 je	 $LN59@encodeStri
  00281	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00284	88 50 25	 mov	 BYTE PTR [eax+37], dl
  00287	8a 51 26	 mov	 dl, BYTE PTR [ecx+38]
  0028a	84 d2		 test	 dl, dl
  0028c	0f 84 e1 00 00
	00		 je	 $LN58@encodeStri
  00292	32 d3		 xor	 dl, bl
  00294	88 50 26	 mov	 BYTE PTR [eax+38], dl
  00297	8a 51 27	 mov	 dl, BYTE PTR [ecx+39]
  0029a	84 d2		 test	 dl, dl
  0029c	0f 84 c8 00 00
	00		 je	 $LN57@encodeStri
  002a2	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002a5	88 50 27	 mov	 BYTE PTR [eax+39], dl
  002a8	8a 51 28	 mov	 dl, BYTE PTR [ecx+40]
  002ab	84 d2		 test	 dl, dl
  002ad	0f 84 ae 00 00
	00		 je	 $LN56@encodeStri
  002b3	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002b6	88 50 28	 mov	 BYTE PTR [eax+40], dl
  002b9	8a 51 29	 mov	 dl, BYTE PTR [ecx+41]
  002bc	84 d2		 test	 dl, dl
  002be	0f 84 94 00 00
	00		 je	 $LN55@encodeStri
  002c4	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002c7	88 50 29	 mov	 BYTE PTR [eax+41], dl
  002ca	8a 51 2a	 mov	 dl, BYTE PTR [ecx+42]
  002cd	84 d2		 test	 dl, dl
  002cf	74 7f		 je	 SHORT $LN54@encodeStri
  002d1	32 d3		 xor	 dl, bl
  002d3	88 50 2a	 mov	 BYTE PTR [eax+42], dl
  002d6	8a 51 2b	 mov	 dl, BYTE PTR [ecx+43]
  002d9	84 d2		 test	 dl, dl
  002db	74 6a		 je	 SHORT $LN53@encodeStri
  002dd	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002e0	88 50 2b	 mov	 BYTE PTR [eax+43], dl
  002e3	8a 51 2c	 mov	 dl, BYTE PTR [ecx+44]
  002e6	84 d2		 test	 dl, dl
  002e8	74 54		 je	 SHORT $LN52@encodeStri
  002ea	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002ed	88 50 2c	 mov	 BYTE PTR [eax+44], dl
  002f0	8a 51 2d	 mov	 dl, BYTE PTR [ecx+45]
  002f3	84 d2		 test	 dl, dl
  002f5	74 3e		 je	 SHORT $LN51@encodeStri
  002f7	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002fa	88 50 2d	 mov	 BYTE PTR [eax+45], dl
  002fd	8a 51 2e	 mov	 dl, BYTE PTR [ecx+46]
  00300	84 d2		 test	 dl, dl
  00302	74 29		 je	 SHORT $LN50@encodeStri
  00304	32 d3		 xor	 dl, bl
  00306	88 50 2e	 mov	 BYTE PTR [eax+46], dl
  00309	8a 51 2f	 mov	 dl, BYTE PTR [ecx+47]
  0030c	84 d2		 test	 dl, dl
  0030e	74 14		 je	 SHORT $LN49@encodeStri
  00310	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00313	88 50 2f	 mov	 BYTE PTR [eax+47], dl
  00316	8a 49 30	 mov	 cl, BYTE PTR [ecx+48]
  00319	80 f1 ed	 xor	 cl, -19			; ffffffedH
  0031c	88 48 30	 mov	 BYTE PTR [eax+48], cl
  0031f	e9 5d 01 00 00	 jmp	 $LN1@encodeStri
$LN49@encodeStri:
  00324	c6 40 2f ea	 mov	 BYTE PTR [eax+47], -22	; ffffffeaH
  00328	e9 54 01 00 00	 jmp	 $LN1@encodeStri
$LN50@encodeStri:
  0032d	88 58 2e	 mov	 BYTE PTR [eax+46], bl
  00330	e9 4c 01 00 00	 jmp	 $LN1@encodeStri
$LN51@encodeStri:
  00335	c6 40 2d ec	 mov	 BYTE PTR [eax+45], -20	; ffffffecH
  00339	e9 43 01 00 00	 jmp	 $LN1@encodeStri
$LN52@encodeStri:
  0033e	c6 40 2c ed	 mov	 BYTE PTR [eax+44], -19	; ffffffedH
  00342	e9 3a 01 00 00	 jmp	 $LN1@encodeStri
$LN53@encodeStri:
  00347	c6 40 2b ea	 mov	 BYTE PTR [eax+43], -22	; ffffffeaH
  0034b	e9 31 01 00 00	 jmp	 $LN1@encodeStri
$LN54@encodeStri:
  00350	88 58 2a	 mov	 BYTE PTR [eax+42], bl
  00353	e9 29 01 00 00	 jmp	 $LN1@encodeStri
$LN55@encodeStri:
  00358	c6 40 29 ec	 mov	 BYTE PTR [eax+41], -20	; ffffffecH
  0035c	e9 20 01 00 00	 jmp	 $LN1@encodeStri
$LN56@encodeStri:
  00361	c6 40 28 ed	 mov	 BYTE PTR [eax+40], -19	; ffffffedH
  00365	e9 17 01 00 00	 jmp	 $LN1@encodeStri
$LN57@encodeStri:
  0036a	c6 40 27 ea	 mov	 BYTE PTR [eax+39], -22	; ffffffeaH
  0036e	e9 0e 01 00 00	 jmp	 $LN1@encodeStri
$LN58@encodeStri:
  00373	88 58 26	 mov	 BYTE PTR [eax+38], bl
  00376	e9 06 01 00 00	 jmp	 $LN1@encodeStri
$LN59@encodeStri:
  0037b	c6 40 25 ec	 mov	 BYTE PTR [eax+37], -20	; ffffffecH
  0037f	e9 fd 00 00 00	 jmp	 $LN1@encodeStri
$LN60@encodeStri:
  00384	c6 40 24 ed	 mov	 BYTE PTR [eax+36], -19	; ffffffedH
  00388	e9 f4 00 00 00	 jmp	 $LN1@encodeStri
$LN61@encodeStri:
  0038d	c6 40 23 ea	 mov	 BYTE PTR [eax+35], -22	; ffffffeaH
  00391	e9 eb 00 00 00	 jmp	 $LN1@encodeStri
$LN62@encodeStri:
  00396	88 58 22	 mov	 BYTE PTR [eax+34], bl
  00399	e9 e3 00 00 00	 jmp	 $LN1@encodeStri
$LN63@encodeStri:
  0039e	c6 40 21 ec	 mov	 BYTE PTR [eax+33], -20	; ffffffecH
  003a2	e9 da 00 00 00	 jmp	 $LN1@encodeStri
$LN64@encodeStri:
  003a7	c6 40 20 ed	 mov	 BYTE PTR [eax+32], -19	; ffffffedH
  003ab	e9 d1 00 00 00	 jmp	 $LN1@encodeStri
$LN65@encodeStri:
  003b0	c6 40 1f ea	 mov	 BYTE PTR [eax+31], -22	; ffffffeaH
  003b4	e9 c8 00 00 00	 jmp	 $LN1@encodeStri
$LN66@encodeStri:
  003b9	88 58 1e	 mov	 BYTE PTR [eax+30], bl
  003bc	e9 c0 00 00 00	 jmp	 $LN1@encodeStri
$LN67@encodeStri:
  003c1	c6 40 1d ec	 mov	 BYTE PTR [eax+29], -20	; ffffffecH
  003c5	e9 b7 00 00 00	 jmp	 $LN1@encodeStri
$LN68@encodeStri:
  003ca	c6 40 1c ed	 mov	 BYTE PTR [eax+28], -19	; ffffffedH
  003ce	e9 ae 00 00 00	 jmp	 $LN1@encodeStri
$LN69@encodeStri:
  003d3	c6 40 1b ea	 mov	 BYTE PTR [eax+27], -22	; ffffffeaH
  003d7	e9 a5 00 00 00	 jmp	 $LN1@encodeStri
$LN70@encodeStri:
  003dc	88 58 1a	 mov	 BYTE PTR [eax+26], bl
  003df	e9 9d 00 00 00	 jmp	 $LN1@encodeStri
$LN71@encodeStri:
  003e4	c6 40 19 ec	 mov	 BYTE PTR [eax+25], -20	; ffffffecH
  003e8	e9 94 00 00 00	 jmp	 $LN1@encodeStri
$LN72@encodeStri:
  003ed	c6 40 18 ed	 mov	 BYTE PTR [eax+24], -19	; ffffffedH
  003f1	e9 8b 00 00 00	 jmp	 $LN1@encodeStri
$LN73@encodeStri:
  003f6	c6 40 17 ea	 mov	 BYTE PTR [eax+23], -22	; ffffffeaH
  003fa	e9 82 00 00 00	 jmp	 $LN1@encodeStri
$LN74@encodeStri:
  003ff	88 58 16	 mov	 BYTE PTR [eax+22], bl
  00402	eb 7d		 jmp	 SHORT $LN1@encodeStri
$LN75@encodeStri:
  00404	c6 40 15 ec	 mov	 BYTE PTR [eax+21], -20	; ffffffecH
  00408	eb 77		 jmp	 SHORT $LN1@encodeStri
$LN76@encodeStri:
  0040a	c6 40 14 ed	 mov	 BYTE PTR [eax+20], -19	; ffffffedH
  0040e	eb 71		 jmp	 SHORT $LN1@encodeStri
$LN77@encodeStri:
  00410	c6 40 13 ea	 mov	 BYTE PTR [eax+19], -22	; ffffffeaH
  00414	eb 6b		 jmp	 SHORT $LN1@encodeStri
$LN78@encodeStri:
  00416	88 58 12	 mov	 BYTE PTR [eax+18], bl
  00419	eb 66		 jmp	 SHORT $LN1@encodeStri
$LN79@encodeStri:
  0041b	c6 40 11 ec	 mov	 BYTE PTR [eax+17], -20	; ffffffecH
  0041f	eb 60		 jmp	 SHORT $LN1@encodeStri
$LN80@encodeStri:
  00421	c6 40 10 ed	 mov	 BYTE PTR [eax+16], -19	; ffffffedH
  00425	eb 5a		 jmp	 SHORT $LN1@encodeStri
$LN81@encodeStri:
  00427	c6 40 0f ea	 mov	 BYTE PTR [eax+15], -22	; ffffffeaH
  0042b	eb 54		 jmp	 SHORT $LN1@encodeStri
$LN82@encodeStri:
  0042d	88 58 0e	 mov	 BYTE PTR [eax+14], bl
  00430	eb 4f		 jmp	 SHORT $LN1@encodeStri
$LN83@encodeStri:
  00432	c6 40 0d ec	 mov	 BYTE PTR [eax+13], -20	; ffffffecH
  00436	eb 49		 jmp	 SHORT $LN1@encodeStri
$LN84@encodeStri:
  00438	c6 40 0c ed	 mov	 BYTE PTR [eax+12], -19	; ffffffedH
  0043c	eb 43		 jmp	 SHORT $LN1@encodeStri
$LN85@encodeStri:
  0043e	c6 40 0b ea	 mov	 BYTE PTR [eax+11], -22	; ffffffeaH
  00442	eb 3d		 jmp	 SHORT $LN1@encodeStri
$LN86@encodeStri:
  00444	88 58 0a	 mov	 BYTE PTR [eax+10], bl
  00447	eb 38		 jmp	 SHORT $LN1@encodeStri
$LN87@encodeStri:
  00449	c6 40 09 ec	 mov	 BYTE PTR [eax+9], -20	; ffffffecH
  0044d	eb 32		 jmp	 SHORT $LN1@encodeStri
$LN88@encodeStri:
  0044f	c6 40 08 ed	 mov	 BYTE PTR [eax+8], -19	; ffffffedH
  00453	eb 2c		 jmp	 SHORT $LN1@encodeStri
$LN89@encodeStri:
  00455	c6 40 07 ea	 mov	 BYTE PTR [eax+7], -22	; ffffffeaH
  00459	eb 26		 jmp	 SHORT $LN1@encodeStri
$LN90@encodeStri:
  0045b	88 58 06	 mov	 BYTE PTR [eax+6], bl
  0045e	eb 21		 jmp	 SHORT $LN1@encodeStri
$LN91@encodeStri:
  00460	c6 40 05 ec	 mov	 BYTE PTR [eax+5], -20	; ffffffecH
  00464	eb 1b		 jmp	 SHORT $LN1@encodeStri
$LN92@encodeStri:
  00466	c6 40 04 ed	 mov	 BYTE PTR [eax+4], -19	; ffffffedH
  0046a	eb 15		 jmp	 SHORT $LN1@encodeStri
$LN93@encodeStri:
  0046c	c6 40 03 ea	 mov	 BYTE PTR [eax+3], -22	; ffffffeaH
  00470	eb 0f		 jmp	 SHORT $LN1@encodeStri
$LN94@encodeStri:
  00472	c6 40 02 eb	 mov	 BYTE PTR [eax+2], -21	; ffffffebH
  00476	eb 09		 jmp	 SHORT $LN1@encodeStri
$LN95@encodeStri:
  00478	c6 40 01 ec	 mov	 BYTE PTR [eax+1], -20	; ffffffecH
  0047c	eb 03		 jmp	 SHORT $LN1@encodeStri
$LN96@encodeStri:
  0047e	c6 00 ed	 mov	 BYTE PTR [eax], -19	; ffffffedH
$LN1@encodeStri:
  00481	6a 06		 push	 6
  00483	5a		 pop	 edx
  00484	8b c8		 mov	 ecx, eax
  00486	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0
  0048a	5b		 pop	 ebx
$LL104@encodeStri:
  0048b	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  00491	83 c1 04	 add	 ecx, 4
  00494	4a		 dec	 edx
  00495	75 f4		 jne	 SHORT $LL104@encodeStri
  00497	56		 push	 esi
  00498	6a 18		 push	 24			; 00000018H
  0049a	5e		 pop	 esi
$LL101@encodeStri:
  0049b	8b ce		 mov	 ecx, esi
  0049d	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  004a3	79 05		 jns	 SHORT $LN111@encodeStri
  004a5	49		 dec	 ecx
  004a6	83 c9 fc	 or	 ecx, -4			; fffffffcH
  004a9	41		 inc	 ecx
$LN111@encodeStri:
  004aa	b2 ed		 mov	 dl, -19			; ffffffedH
  004ac	2a d1		 sub	 dl, cl
  004ae	30 14 06	 xor	 BYTE PTR [esi+eax], dl
  004b1	46		 inc	 esi
  004b2	83 fe 1b	 cmp	 esi, 27			; 0000001bH
  004b5	7c e4		 jl	 SHORT $LL101@encodeStri
  004b7	5e		 pop	 esi

; 217  : 		return e;
; 218  : 	}

  004b8	5d		 pop	 ebp
  004b9	c2 08 00	 ret	 8
??$encodeString@$0BM@@ioINILoader_e@@AAEPADAAY0BM@$$CBDPAD@Z ENDP ; ioINILoader_e::encodeString<28>
_TEXT	ENDS
PUBLIC	??$_Move@PAUModeIcon@ioModeResourceManager@@PAU12@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioModeResourceManager::ModeIcon *,ioModeResourceManager::ModeIcon *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAUModeIcon@ioModeResourceManager@@PAU12@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAUModeIcon@ioModeResourceManager@@PAU12@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<ioModeResourceManager::ModeIcon *,ioModeResourceManager::ModeIcon *>, COMDAT

; 2512 : 	{	// move [_First, _Last) to [_Dest, ...), arbitrary iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00009	74 1a		 je	 SHORT $LN10@Move
  0000b	56		 push	 esi
  0000c	57		 push	 edi
$LL3@Move:

; 2514 : 		*_Dest = _STD move(*_First);

  0000d	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  00010	83 45 10 14	 add	 DWORD PTR __Dest$[ebp], 20 ; 00000014H
  00014	8b f0		 mov	 esi, eax
  00016	6a 05		 push	 5
  00018	83 c0 14	 add	 eax, 20			; 00000014H
  0001b	59		 pop	 ecx
  0001c	f3 a5		 rep movsd
  0001e	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00021	75 ea		 jne	 SHORT $LL3@Move
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
$LN10@Move:

; 2515 : 	return (_Dest);

  00025	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 2516 : 	}

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$_Move@PAUModeIcon@ioModeResourceManager@@PAU12@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<ioModeResourceManager::ModeIcon *,ioModeResourceManager::ModeIcon *>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@@Z ; std::allocator<ioModeResourceManager::ModeIcon>::destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@@Z PROC ; std::allocator<ioModeResourceManager::ModeIcon>::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@@Z ENDP ; std::allocator<ioModeResourceManager::ModeIcon>::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@$$QAU34@@Z ; std::allocator<ioModeResourceManager::ModeIcon>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@$$QAU34@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@$$QAU34@@Z PROC ; std::allocator<ioModeResourceManager::ModeIcon>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN3@construct@3
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	6a 05		 push	 5
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN3@construct@3:
  00015	5f		 pop	 edi

; 203  : 		}

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?construct@?$allocator@UModeIcon@ioModeResourceManager@@@std@@QAEXPAUModeIcon@ioModeResourceManager@@$$QAU34@@Z ENDP ; std::allocator<ioModeResourceManager::ModeIcon>::construct
_TEXT	ENDS
PUBLIC	??0?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE@XZ ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE@XZ PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::operator!=
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QAE@PAUModeIcon@ioModeResourceManager@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::_Vector_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QAE@PAUModeIcon@ioModeResourceManager@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QAE@PAUModeIcon@ioModeResourceManager@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::_Vector_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@std@@QAE@PAUModeIcon@ioModeResourceManager@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >::_Vector_iterator<std::_Vector_val<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> > >
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@@Z ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@@Z PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@@Z ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Make_iter
_TEXT	ENDS
PUBLIC	??$?0$0BM@@ioINILoader_e@@QAE@AAY0BM@$$CBD_N@Z	; ioINILoader_e::ioINILoader_e<28>
EXTRN	__imp_??0ioINILoader@@QAE@PBD_N@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$?0$0BM@@ioINILoader_e@@QAE@AAY0BM@$$CBD_N@Z
_TEXT	SEGMENT
_fn$ = 8						; size = 4
_b$ = 12						; size = 1
??$?0$0BM@@ioINILoader_e@@QAE@AAY0BM@$$CBD_N@Z PROC	; ioINILoader_e::ioINILoader_e<28>, COMDAT
; _this$ = ecx

; 224  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	8b 4d 08	 mov	 ecx, DWORD PTR _fn$[ebp]
  0000b	8a 11		 mov	 dl, BYTE PTR [ecx]
  0000d	8d 87 50 03 00
	00		 lea	 eax, DWORD PTR [edi+848]
  00013	84 d2		 test	 dl, dl
  00015	0f 84 6a 04 00
	00		 je	 $LN99@ioINILoade
  0001b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0001e	88 10		 mov	 BYTE PTR [eax], dl
  00020	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  00023	84 d2		 test	 dl, dl
  00025	0f 84 54 04 00
	00		 je	 $LN98@ioINILoade
  0002b	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0002e	88 50 01	 mov	 BYTE PTR [eax+1], dl
  00031	8a 51 02	 mov	 dl, BYTE PTR [ecx+2]
  00034	84 d2		 test	 dl, dl
  00036	0f 84 3d 04 00
	00		 je	 $LN97@ioINILoade
  0003c	b3 eb		 mov	 bl, -21			; ffffffebH
  0003e	32 d3		 xor	 dl, bl
  00040	88 50 02	 mov	 BYTE PTR [eax+2], dl
  00043	8a 51 03	 mov	 dl, BYTE PTR [ecx+3]
  00046	84 d2		 test	 dl, dl
  00048	0f 84 25 04 00
	00		 je	 $LN96@ioINILoade
  0004e	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00051	88 50 03	 mov	 BYTE PTR [eax+3], dl
  00054	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  00057	84 d2		 test	 dl, dl
  00059	0f 84 0e 04 00
	00		 je	 $LN95@ioINILoade
  0005f	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00062	88 50 04	 mov	 BYTE PTR [eax+4], dl
  00065	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  00068	84 d2		 test	 dl, dl
  0006a	0f 84 f7 03 00
	00		 je	 $LN94@ioINILoade
  00070	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00073	88 50 05	 mov	 BYTE PTR [eax+5], dl
  00076	8a 51 06	 mov	 dl, BYTE PTR [ecx+6]
  00079	84 d2		 test	 dl, dl
  0007b	0f 84 e1 03 00
	00		 je	 $LN93@ioINILoade
  00081	32 d3		 xor	 dl, bl
  00083	88 50 06	 mov	 BYTE PTR [eax+6], dl
  00086	8a 51 07	 mov	 dl, BYTE PTR [ecx+7]
  00089	84 d2		 test	 dl, dl
  0008b	0f 84 cb 03 00
	00		 je	 $LN92@ioINILoade
  00091	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00094	88 50 07	 mov	 BYTE PTR [eax+7], dl
  00097	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  0009a	84 d2		 test	 dl, dl
  0009c	0f 84 b4 03 00
	00		 je	 $LN91@ioINILoade
  000a2	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a5	88 50 08	 mov	 BYTE PTR [eax+8], dl
  000a8	8a 51 09	 mov	 dl, BYTE PTR [ecx+9]
  000ab	84 d2		 test	 dl, dl
  000ad	0f 84 9d 03 00
	00		 je	 $LN90@ioINILoade
  000b3	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b6	88 50 09	 mov	 BYTE PTR [eax+9], dl
  000b9	8a 51 0a	 mov	 dl, BYTE PTR [ecx+10]
  000bc	84 d2		 test	 dl, dl
  000be	0f 84 87 03 00
	00		 je	 $LN89@ioINILoade
  000c4	32 d3		 xor	 dl, bl
  000c6	88 50 0a	 mov	 BYTE PTR [eax+10], dl
  000c9	8a 51 0b	 mov	 dl, BYTE PTR [ecx+11]
  000cc	84 d2		 test	 dl, dl
  000ce	0f 84 71 03 00
	00		 je	 $LN88@ioINILoade
  000d4	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d7	88 50 0b	 mov	 BYTE PTR [eax+11], dl
  000da	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
  000dd	84 d2		 test	 dl, dl
  000df	0f 84 5a 03 00
	00		 je	 $LN87@ioINILoade
  000e5	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e8	88 50 0c	 mov	 BYTE PTR [eax+12], dl
  000eb	8a 51 0d	 mov	 dl, BYTE PTR [ecx+13]
  000ee	84 d2		 test	 dl, dl
  000f0	0f 84 43 03 00
	00		 je	 $LN86@ioINILoade
  000f6	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000f9	88 50 0d	 mov	 BYTE PTR [eax+13], dl
  000fc	8a 51 0e	 mov	 dl, BYTE PTR [ecx+14]
  000ff	84 d2		 test	 dl, dl
  00101	0f 84 2d 03 00
	00		 je	 $LN85@ioINILoade
  00107	32 d3		 xor	 dl, bl
  00109	88 50 0e	 mov	 BYTE PTR [eax+14], dl
  0010c	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  0010f	84 d2		 test	 dl, dl
  00111	0f 84 17 03 00
	00		 je	 $LN84@ioINILoade
  00117	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0011a	88 50 0f	 mov	 BYTE PTR [eax+15], dl
  0011d	8a 51 10	 mov	 dl, BYTE PTR [ecx+16]
  00120	84 d2		 test	 dl, dl
  00122	0f 84 00 03 00
	00		 je	 $LN83@ioINILoade
  00128	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0012b	88 50 10	 mov	 BYTE PTR [eax+16], dl
  0012e	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  00131	84 d2		 test	 dl, dl
  00133	0f 84 e9 02 00
	00		 je	 $LN82@ioINILoade
  00139	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0013c	88 50 11	 mov	 BYTE PTR [eax+17], dl
  0013f	8a 51 12	 mov	 dl, BYTE PTR [ecx+18]
  00142	84 d2		 test	 dl, dl
  00144	0f 84 d3 02 00
	00		 je	 $LN81@ioINILoade
  0014a	32 d3		 xor	 dl, bl
  0014c	88 50 12	 mov	 BYTE PTR [eax+18], dl
  0014f	8a 51 13	 mov	 dl, BYTE PTR [ecx+19]
  00152	84 d2		 test	 dl, dl
  00154	0f 84 bd 02 00
	00		 je	 $LN80@ioINILoade
  0015a	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0015d	88 50 13	 mov	 BYTE PTR [eax+19], dl
  00160	8a 51 14	 mov	 dl, BYTE PTR [ecx+20]
  00163	84 d2		 test	 dl, dl
  00165	0f 84 a6 02 00
	00		 je	 $LN79@ioINILoade
  0016b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0016e	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00171	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00174	84 d2		 test	 dl, dl
  00176	0f 84 8f 02 00
	00		 je	 $LN78@ioINILoade
  0017c	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0017f	88 50 15	 mov	 BYTE PTR [eax+21], dl
  00182	8a 51 16	 mov	 dl, BYTE PTR [ecx+22]
  00185	84 d2		 test	 dl, dl
  00187	0f 84 79 02 00
	00		 je	 $LN77@ioINILoade
  0018d	32 d3		 xor	 dl, bl
  0018f	88 50 16	 mov	 BYTE PTR [eax+22], dl
  00192	8a 51 17	 mov	 dl, BYTE PTR [ecx+23]
  00195	84 d2		 test	 dl, dl
  00197	0f 84 60 02 00
	00		 je	 $LN76@ioINILoade
  0019d	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001a0	88 50 17	 mov	 BYTE PTR [eax+23], dl
  001a3	8a 51 18	 mov	 dl, BYTE PTR [ecx+24]
  001a6	84 d2		 test	 dl, dl
  001a8	0f 84 46 02 00
	00		 je	 $LN75@ioINILoade
  001ae	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001b1	88 50 18	 mov	 BYTE PTR [eax+24], dl
  001b4	8a 51 19	 mov	 dl, BYTE PTR [ecx+25]
  001b7	84 d2		 test	 dl, dl
  001b9	0f 84 2c 02 00
	00		 je	 $LN74@ioINILoade
  001bf	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001c2	88 50 19	 mov	 BYTE PTR [eax+25], dl
  001c5	8a 51 1a	 mov	 dl, BYTE PTR [ecx+26]
  001c8	84 d2		 test	 dl, dl
  001ca	0f 84 13 02 00
	00		 je	 $LN73@ioINILoade
  001d0	32 d3		 xor	 dl, bl
  001d2	88 50 1a	 mov	 BYTE PTR [eax+26], dl
  001d5	8a 51 1b	 mov	 dl, BYTE PTR [ecx+27]
  001d8	84 d2		 test	 dl, dl
  001da	0f 84 fa 01 00
	00		 je	 $LN72@ioINILoade
  001e0	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001e3	88 50 1b	 mov	 BYTE PTR [eax+27], dl
  001e6	8a 51 1c	 mov	 dl, BYTE PTR [ecx+28]
  001e9	84 d2		 test	 dl, dl
  001eb	0f 84 e0 01 00
	00		 je	 $LN71@ioINILoade
  001f1	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001f4	88 50 1c	 mov	 BYTE PTR [eax+28], dl
  001f7	8a 51 1d	 mov	 dl, BYTE PTR [ecx+29]
  001fa	84 d2		 test	 dl, dl
  001fc	0f 84 c6 01 00
	00		 je	 $LN70@ioINILoade
  00202	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00205	88 50 1d	 mov	 BYTE PTR [eax+29], dl
  00208	8a 51 1e	 mov	 dl, BYTE PTR [ecx+30]
  0020b	84 d2		 test	 dl, dl
  0020d	0f 84 ad 01 00
	00		 je	 $LN69@ioINILoade
  00213	32 d3		 xor	 dl, bl
  00215	88 50 1e	 mov	 BYTE PTR [eax+30], dl
  00218	8a 51 1f	 mov	 dl, BYTE PTR [ecx+31]
  0021b	84 d2		 test	 dl, dl
  0021d	0f 84 94 01 00
	00		 je	 $LN68@ioINILoade
  00223	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00226	88 50 1f	 mov	 BYTE PTR [eax+31], dl
  00229	8a 51 20	 mov	 dl, BYTE PTR [ecx+32]
  0022c	84 d2		 test	 dl, dl
  0022e	0f 84 7a 01 00
	00		 je	 $LN67@ioINILoade
  00234	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00237	88 50 20	 mov	 BYTE PTR [eax+32], dl
  0023a	8a 51 21	 mov	 dl, BYTE PTR [ecx+33]
  0023d	84 d2		 test	 dl, dl
  0023f	0f 84 60 01 00
	00		 je	 $LN66@ioINILoade
  00245	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00248	88 50 21	 mov	 BYTE PTR [eax+33], dl
  0024b	8a 51 22	 mov	 dl, BYTE PTR [ecx+34]
  0024e	84 d2		 test	 dl, dl
  00250	0f 84 47 01 00
	00		 je	 $LN65@ioINILoade
  00256	32 d3		 xor	 dl, bl
  00258	88 50 22	 mov	 BYTE PTR [eax+34], dl
  0025b	8a 51 23	 mov	 dl, BYTE PTR [ecx+35]
  0025e	84 d2		 test	 dl, dl
  00260	0f 84 2e 01 00
	00		 je	 $LN64@ioINILoade
  00266	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00269	88 50 23	 mov	 BYTE PTR [eax+35], dl
  0026c	8a 51 24	 mov	 dl, BYTE PTR [ecx+36]
  0026f	84 d2		 test	 dl, dl
  00271	0f 84 14 01 00
	00		 je	 $LN63@ioINILoade
  00277	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0027a	88 50 24	 mov	 BYTE PTR [eax+36], dl
  0027d	8a 51 25	 mov	 dl, BYTE PTR [ecx+37]
  00280	84 d2		 test	 dl, dl
  00282	0f 84 fa 00 00
	00		 je	 $LN62@ioINILoade
  00288	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0028b	88 50 25	 mov	 BYTE PTR [eax+37], dl
  0028e	8a 51 26	 mov	 dl, BYTE PTR [ecx+38]
  00291	84 d2		 test	 dl, dl
  00293	0f 84 e1 00 00
	00		 je	 $LN61@ioINILoade
  00299	32 d3		 xor	 dl, bl
  0029b	88 50 26	 mov	 BYTE PTR [eax+38], dl
  0029e	8a 51 27	 mov	 dl, BYTE PTR [ecx+39]
  002a1	84 d2		 test	 dl, dl
  002a3	0f 84 c8 00 00
	00		 je	 $LN60@ioINILoade
  002a9	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002ac	88 50 27	 mov	 BYTE PTR [eax+39], dl
  002af	8a 51 28	 mov	 dl, BYTE PTR [ecx+40]
  002b2	84 d2		 test	 dl, dl
  002b4	0f 84 ae 00 00
	00		 je	 $LN59@ioINILoade
  002ba	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002bd	88 50 28	 mov	 BYTE PTR [eax+40], dl
  002c0	8a 51 29	 mov	 dl, BYTE PTR [ecx+41]
  002c3	84 d2		 test	 dl, dl
  002c5	0f 84 94 00 00
	00		 je	 $LN58@ioINILoade
  002cb	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002ce	88 50 29	 mov	 BYTE PTR [eax+41], dl
  002d1	8a 51 2a	 mov	 dl, BYTE PTR [ecx+42]
  002d4	84 d2		 test	 dl, dl
  002d6	74 7f		 je	 SHORT $LN57@ioINILoade
  002d8	32 d3		 xor	 dl, bl
  002da	88 50 2a	 mov	 BYTE PTR [eax+42], dl
  002dd	8a 51 2b	 mov	 dl, BYTE PTR [ecx+43]
  002e0	84 d2		 test	 dl, dl
  002e2	74 6a		 je	 SHORT $LN56@ioINILoade
  002e4	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002e7	88 50 2b	 mov	 BYTE PTR [eax+43], dl
  002ea	8a 51 2c	 mov	 dl, BYTE PTR [ecx+44]
  002ed	84 d2		 test	 dl, dl
  002ef	74 54		 je	 SHORT $LN55@ioINILoade
  002f1	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002f4	88 50 2c	 mov	 BYTE PTR [eax+44], dl
  002f7	8a 51 2d	 mov	 dl, BYTE PTR [ecx+45]
  002fa	84 d2		 test	 dl, dl
  002fc	74 3e		 je	 SHORT $LN54@ioINILoade
  002fe	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00301	88 50 2d	 mov	 BYTE PTR [eax+45], dl
  00304	8a 51 2e	 mov	 dl, BYTE PTR [ecx+46]
  00307	84 d2		 test	 dl, dl
  00309	74 29		 je	 SHORT $LN53@ioINILoade
  0030b	32 d3		 xor	 dl, bl
  0030d	88 50 2e	 mov	 BYTE PTR [eax+46], dl
  00310	8a 51 2f	 mov	 dl, BYTE PTR [ecx+47]
  00313	84 d2		 test	 dl, dl
  00315	74 14		 je	 SHORT $LN52@ioINILoade
  00317	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0031a	88 50 2f	 mov	 BYTE PTR [eax+47], dl
  0031d	8a 49 30	 mov	 cl, BYTE PTR [ecx+48]
  00320	80 f1 ed	 xor	 cl, -19			; ffffffedH
  00323	88 48 30	 mov	 BYTE PTR [eax+48], cl
  00326	e9 5d 01 00 00	 jmp	 $LN4@ioINILoade
$LN52@ioINILoade:
  0032b	c6 40 2f ea	 mov	 BYTE PTR [eax+47], -22	; ffffffeaH
  0032f	e9 54 01 00 00	 jmp	 $LN4@ioINILoade
$LN53@ioINILoade:
  00334	88 58 2e	 mov	 BYTE PTR [eax+46], bl
  00337	e9 4c 01 00 00	 jmp	 $LN4@ioINILoade
$LN54@ioINILoade:
  0033c	c6 40 2d ec	 mov	 BYTE PTR [eax+45], -20	; ffffffecH
  00340	e9 43 01 00 00	 jmp	 $LN4@ioINILoade
$LN55@ioINILoade:
  00345	c6 40 2c ed	 mov	 BYTE PTR [eax+44], -19	; ffffffedH
  00349	e9 3a 01 00 00	 jmp	 $LN4@ioINILoade
$LN56@ioINILoade:
  0034e	c6 40 2b ea	 mov	 BYTE PTR [eax+43], -22	; ffffffeaH
  00352	e9 31 01 00 00	 jmp	 $LN4@ioINILoade
$LN57@ioINILoade:
  00357	88 58 2a	 mov	 BYTE PTR [eax+42], bl
  0035a	e9 29 01 00 00	 jmp	 $LN4@ioINILoade
$LN58@ioINILoade:
  0035f	c6 40 29 ec	 mov	 BYTE PTR [eax+41], -20	; ffffffecH
  00363	e9 20 01 00 00	 jmp	 $LN4@ioINILoade
$LN59@ioINILoade:
  00368	c6 40 28 ed	 mov	 BYTE PTR [eax+40], -19	; ffffffedH
  0036c	e9 17 01 00 00	 jmp	 $LN4@ioINILoade
$LN60@ioINILoade:
  00371	c6 40 27 ea	 mov	 BYTE PTR [eax+39], -22	; ffffffeaH
  00375	e9 0e 01 00 00	 jmp	 $LN4@ioINILoade
$LN61@ioINILoade:
  0037a	88 58 26	 mov	 BYTE PTR [eax+38], bl
  0037d	e9 06 01 00 00	 jmp	 $LN4@ioINILoade
$LN62@ioINILoade:
  00382	c6 40 25 ec	 mov	 BYTE PTR [eax+37], -20	; ffffffecH
  00386	e9 fd 00 00 00	 jmp	 $LN4@ioINILoade
$LN63@ioINILoade:
  0038b	c6 40 24 ed	 mov	 BYTE PTR [eax+36], -19	; ffffffedH
  0038f	e9 f4 00 00 00	 jmp	 $LN4@ioINILoade
$LN64@ioINILoade:
  00394	c6 40 23 ea	 mov	 BYTE PTR [eax+35], -22	; ffffffeaH
  00398	e9 eb 00 00 00	 jmp	 $LN4@ioINILoade
$LN65@ioINILoade:
  0039d	88 58 22	 mov	 BYTE PTR [eax+34], bl
  003a0	e9 e3 00 00 00	 jmp	 $LN4@ioINILoade
$LN66@ioINILoade:
  003a5	c6 40 21 ec	 mov	 BYTE PTR [eax+33], -20	; ffffffecH
  003a9	e9 da 00 00 00	 jmp	 $LN4@ioINILoade
$LN67@ioINILoade:
  003ae	c6 40 20 ed	 mov	 BYTE PTR [eax+32], -19	; ffffffedH
  003b2	e9 d1 00 00 00	 jmp	 $LN4@ioINILoade
$LN68@ioINILoade:
  003b7	c6 40 1f ea	 mov	 BYTE PTR [eax+31], -22	; ffffffeaH
  003bb	e9 c8 00 00 00	 jmp	 $LN4@ioINILoade
$LN69@ioINILoade:
  003c0	88 58 1e	 mov	 BYTE PTR [eax+30], bl
  003c3	e9 c0 00 00 00	 jmp	 $LN4@ioINILoade
$LN70@ioINILoade:
  003c8	c6 40 1d ec	 mov	 BYTE PTR [eax+29], -20	; ffffffecH
  003cc	e9 b7 00 00 00	 jmp	 $LN4@ioINILoade
$LN71@ioINILoade:
  003d1	c6 40 1c ed	 mov	 BYTE PTR [eax+28], -19	; ffffffedH
  003d5	e9 ae 00 00 00	 jmp	 $LN4@ioINILoade
$LN72@ioINILoade:
  003da	c6 40 1b ea	 mov	 BYTE PTR [eax+27], -22	; ffffffeaH
  003de	e9 a5 00 00 00	 jmp	 $LN4@ioINILoade
$LN73@ioINILoade:
  003e3	88 58 1a	 mov	 BYTE PTR [eax+26], bl
  003e6	e9 9d 00 00 00	 jmp	 $LN4@ioINILoade
$LN74@ioINILoade:
  003eb	c6 40 19 ec	 mov	 BYTE PTR [eax+25], -20	; ffffffecH
  003ef	e9 94 00 00 00	 jmp	 $LN4@ioINILoade
$LN75@ioINILoade:
  003f4	c6 40 18 ed	 mov	 BYTE PTR [eax+24], -19	; ffffffedH
  003f8	e9 8b 00 00 00	 jmp	 $LN4@ioINILoade
$LN76@ioINILoade:
  003fd	c6 40 17 ea	 mov	 BYTE PTR [eax+23], -22	; ffffffeaH
  00401	e9 82 00 00 00	 jmp	 $LN4@ioINILoade
$LN77@ioINILoade:
  00406	88 58 16	 mov	 BYTE PTR [eax+22], bl
  00409	eb 7d		 jmp	 SHORT $LN4@ioINILoade
$LN78@ioINILoade:
  0040b	c6 40 15 ec	 mov	 BYTE PTR [eax+21], -20	; ffffffecH
  0040f	eb 77		 jmp	 SHORT $LN4@ioINILoade
$LN79@ioINILoade:
  00411	c6 40 14 ed	 mov	 BYTE PTR [eax+20], -19	; ffffffedH
  00415	eb 71		 jmp	 SHORT $LN4@ioINILoade
$LN80@ioINILoade:
  00417	c6 40 13 ea	 mov	 BYTE PTR [eax+19], -22	; ffffffeaH
  0041b	eb 6b		 jmp	 SHORT $LN4@ioINILoade
$LN81@ioINILoade:
  0041d	88 58 12	 mov	 BYTE PTR [eax+18], bl
  00420	eb 66		 jmp	 SHORT $LN4@ioINILoade
$LN82@ioINILoade:
  00422	c6 40 11 ec	 mov	 BYTE PTR [eax+17], -20	; ffffffecH
  00426	eb 60		 jmp	 SHORT $LN4@ioINILoade
$LN83@ioINILoade:
  00428	c6 40 10 ed	 mov	 BYTE PTR [eax+16], -19	; ffffffedH
  0042c	eb 5a		 jmp	 SHORT $LN4@ioINILoade
$LN84@ioINILoade:
  0042e	c6 40 0f ea	 mov	 BYTE PTR [eax+15], -22	; ffffffeaH
  00432	eb 54		 jmp	 SHORT $LN4@ioINILoade
$LN85@ioINILoade:
  00434	88 58 0e	 mov	 BYTE PTR [eax+14], bl
  00437	eb 4f		 jmp	 SHORT $LN4@ioINILoade
$LN86@ioINILoade:
  00439	c6 40 0d ec	 mov	 BYTE PTR [eax+13], -20	; ffffffecH
  0043d	eb 49		 jmp	 SHORT $LN4@ioINILoade
$LN87@ioINILoade:
  0043f	c6 40 0c ed	 mov	 BYTE PTR [eax+12], -19	; ffffffedH
  00443	eb 43		 jmp	 SHORT $LN4@ioINILoade
$LN88@ioINILoade:
  00445	c6 40 0b ea	 mov	 BYTE PTR [eax+11], -22	; ffffffeaH
  00449	eb 3d		 jmp	 SHORT $LN4@ioINILoade
$LN89@ioINILoade:
  0044b	88 58 0a	 mov	 BYTE PTR [eax+10], bl
  0044e	eb 38		 jmp	 SHORT $LN4@ioINILoade
$LN90@ioINILoade:
  00450	c6 40 09 ec	 mov	 BYTE PTR [eax+9], -20	; ffffffecH
  00454	eb 32		 jmp	 SHORT $LN4@ioINILoade
$LN91@ioINILoade:
  00456	c6 40 08 ed	 mov	 BYTE PTR [eax+8], -19	; ffffffedH
  0045a	eb 2c		 jmp	 SHORT $LN4@ioINILoade
$LN92@ioINILoade:
  0045c	c6 40 07 ea	 mov	 BYTE PTR [eax+7], -22	; ffffffeaH
  00460	eb 26		 jmp	 SHORT $LN4@ioINILoade
$LN93@ioINILoade:
  00462	88 58 06	 mov	 BYTE PTR [eax+6], bl
  00465	eb 21		 jmp	 SHORT $LN4@ioINILoade
$LN94@ioINILoade:
  00467	c6 40 05 ec	 mov	 BYTE PTR [eax+5], -20	; ffffffecH
  0046b	eb 1b		 jmp	 SHORT $LN4@ioINILoade
$LN95@ioINILoade:
  0046d	c6 40 04 ed	 mov	 BYTE PTR [eax+4], -19	; ffffffedH
  00471	eb 15		 jmp	 SHORT $LN4@ioINILoade
$LN96@ioINILoade:
  00473	c6 40 03 ea	 mov	 BYTE PTR [eax+3], -22	; ffffffeaH
  00477	eb 0f		 jmp	 SHORT $LN4@ioINILoade
$LN97@ioINILoade:
  00479	c6 40 02 eb	 mov	 BYTE PTR [eax+2], -21	; ffffffebH
  0047d	eb 09		 jmp	 SHORT $LN4@ioINILoade
$LN98@ioINILoade:
  0047f	c6 40 01 ec	 mov	 BYTE PTR [eax+1], -20	; ffffffecH
  00483	eb 03		 jmp	 SHORT $LN4@ioINILoade
$LN99@ioINILoade:
  00485	c6 00 ed	 mov	 BYTE PTR [eax], -19	; ffffffedH
$LN4@ioINILoade:
  00488	6a 06		 push	 6
  0048a	8b c8		 mov	 ecx, eax
  0048c	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0
  00490	5a		 pop	 edx
$LL107@ioINILoade:
  00491	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  00497	83 c1 04	 add	 ecx, 4
  0049a	4a		 dec	 edx
  0049b	75 f4		 jne	 SHORT $LL107@ioINILoade
  0049d	6a 18		 push	 24			; 00000018H
  0049f	5e		 pop	 esi
$LL104@ioINILoade:
  004a0	8b ce		 mov	 ecx, esi
  004a2	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  004a8	79 05		 jns	 SHORT $LN114@ioINILoade
  004aa	49		 dec	 ecx
  004ab	83 c9 fc	 or	 ecx, -4			; fffffffcH
  004ae	41		 inc	 ecx
$LN114@ioINILoade:
  004af	b2 ed		 mov	 dl, -19			; ffffffedH
  004b1	2a d1		 sub	 dl, cl
  004b3	30 14 06	 xor	 BYTE PTR [esi+eax], dl
  004b6	46		 inc	 esi
  004b7	83 fe 1b	 cmp	 esi, 27			; 0000001bH
  004ba	7c e4		 jl	 SHORT $LL104@ioINILoade
  004bc	ff 75 0c	 push	 DWORD PTR _b$[ebp]
  004bf	8b cf		 mov	 ecx, edi
  004c1	50		 push	 eax
  004c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@PBD_N@Z

; 225  : 	}

  004c8	8b c7		 mov	 eax, edi
  004ca	5f		 pop	 edi
  004cb	5e		 pop	 esi
  004cc	5b		 pop	 ebx
  004cd	5d		 pop	 ebp
  004ce	c2 08 00	 ret	 8
??$?0$0BM@@ioINILoader_e@@QAE@AAY0BM@$$CBD_N@Z ENDP	; ioINILoader_e::ioINILoader_e<28>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@ABU34@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@ABU23@@Z ; std::_Cons_val<std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon,ioModeResourceManager::ModeIcon const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@ABU34@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@ABU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@ABU34@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@ABU23@@Z PROC ; std::_Cons_val<std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon,ioModeResourceManager::ModeIcon const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00004	8b 7d 0c	 mov	 edi, DWORD PTR __Pdest$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN9@Cons_val@2
  0000b	56		 push	 esi
  0000c	8b 75 10	 mov	 esi, DWORD PTR __Src$[ebp]
  0000f	6a 05		 push	 5
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN9@Cons_val@2:
  00015	5f		 pop	 edi

; 281  : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Cons_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@ABU34@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@ABU23@@Z ENDP ; std::_Cons_val<std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon,ioModeResourceManager::ModeIcon const &>
_TEXT	ENDS
PUBLIC	??$_Move@PAUModeIcon@ioModeResourceManager@@PAU12@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00@Z ; std::_Move<ioModeResourceManager::ModeIcon *,ioModeResourceManager::ModeIcon *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAUModeIcon@ioModeResourceManager@@PAU12@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00@Z
_TEXT	SEGMENT
__Cat$507454 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAUModeIcon@ioModeResourceManager@@PAU12@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00@Z PROC ; std::_Move<ioModeResourceManager::ModeIcon *,ioModeResourceManager::ModeIcon *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$507454[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAUModeIcon@ioModeResourceManager@@PAU12@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioModeResourceManager::ModeIcon *,ioModeResourceManager::ModeIcon *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAUModeIcon@ioModeResourceManager@@PAU12@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00@Z ENDP ; std::_Move<ioModeResourceManager::ModeIcon *,ioModeResourceManager::ModeIcon *>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@@Z ; std::_Dest_val<std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@@Z PROC ; std::_Dest_val<std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon>, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@@Z ENDP ; std::_Dest_val<std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@U34@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@$$QAU23@@Z ; std::_Cons_val<std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon,ioModeResourceManager::ModeIcon>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@U34@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@$$QAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@U34@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@$$QAU23@@Z PROC ; std::_Cons_val<std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon,ioModeResourceManager::ModeIcon>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00004	8b 7d 0c	 mov	 edi, DWORD PTR __Pdest$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN7@Cons_val@3
  0000b	56		 push	 esi
  0000c	8b 75 10	 mov	 esi, DWORD PTR __Src$[ebp]
  0000f	6a 05		 push	 5
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN7@Cons_val@3:
  00015	5f		 pop	 edi

; 281  : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Cons_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@U34@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@$$QAU23@@Z ENDP ; std::_Cons_val<std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon,ioModeResourceManager::ModeIcon>
_TEXT	ENDS
PUBLIC	?begin@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@XZ ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::begin
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?begin@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@XZ PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@XZ ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@XZ ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@XZ PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@XZ ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::end
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@YAXPAUModeIcon@ioModeResourceManager@@0AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ioModeResourceManager::ModeIcon> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@YAXPAUModeIcon@ioModeResourceManager@@0AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@YAXPAUModeIcon@ioModeResourceManager@@0AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ioModeResourceManager::ModeIcon> >, COMDAT

; 96   : 	for (; _First != _Last; ++_First)
; 97   : 		_Dest_val(_Al, _First);
; 98   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@YAXPAUModeIcon@ioModeResourceManager@@0AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioModeResourceManager::ModeIcon> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAUModeIcon@ioModeResourceManager@@PAU12@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@U12@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioModeResourceManager::ModeIcon *,ioModeResourceManager::ModeIcon *,std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@PAUModeIcon@ioModeResourceManager@@PAU12@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@U12@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUModeIcon@ioModeResourceManager@@PAU12@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@U12@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<ioModeResourceManager::ModeIcon *,ioModeResourceManager::ModeIcon *,std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon>, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 16		 jmp	 SHORT $LN24@Uninit_mov
$LL6@Uninit_mov:

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

  00009	56		 push	 esi
  0000a	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000d	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@U34@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@$$QAU23@@Z ; std::_Cons_val<std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon,ioModeResourceManager::ModeIcon>
  00015	83 45 10 14	 add	 DWORD PTR __Dest$[ebp], 20 ; 00000014H
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001c	83 c6 14	 add	 esi, 20			; 00000014H
$LN24@Uninit_mov:

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  0001f	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00022	75 e5		 jne	 SHORT $LL6@Uninit_mov

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)
; 434  : 		_Dest_val(_Al, _Next);
; 435  : 	_RERAISE;
; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

  00024	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00027	5e		 pop	 esi

; 438  : 	}

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$_Uninit_move@PAUModeIcon@ioModeResourceManager@@PAU12@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@U12@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<ioModeResourceManager::ModeIcon *,ioModeResourceManager::ModeIcon *,std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon>
_TEXT	ENDS
PUBLIC	__real@4f800000
PUBLIC	?GetModeIcon@ioModeResourceManager@@QAEPAVioUIRenderImage@@H@Z ; ioModeResourceManager::GetModeIcon
EXTRN	__fltused:DWORD
;	COMDAT __real@4f800000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomoderesourcemanager.cpp
CONST	ENDS
;	COMDAT ?GetModeIcon@ioModeResourceManager@@QAEPAVioUIRenderImage@@H@Z
_TEXT	SEGMENT
tv331 = 8						; size = 4
tv329 = 8						; size = 4
_eType$ = 8						; size = 4
?GetModeIcon@ioModeResourceManager@@QAEPAVioUIRenderImage@@H@Z PROC ; ioModeResourceManager::GetModeIcon, COMDAT
; _this$ = ecx

; 224  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 225  : 	vModeIconList::iterator iter = m_vModeIconList.begin();

  00004	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]

; 226  : 	for( ; iter != m_vModeIconList.end(); ++iter )

  00007	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000a	3b f1		 cmp	 esi, ecx
  0000c	74 1a		 je	 SHORT $LN3@GetModeIco
  0000e	33 c0		 xor	 eax, eax
$LL18@GetModeIco:

; 227  : 	{
; 228  : 		const ModeIcon& rkIcon = *iter;
; 229  : 
; 230  : 		//일반 모드의 경우 eKindValue1/2는 초기값으로 세팅되어있음
; 231  : 		if( rkIcon.eType == eType && rkIcon.eKindValue1 == 0 && rkIcon.eKindValue2 == 0 )

  00010	8b 16		 mov	 edx, DWORD PTR [esi]
  00012	3b 55 08	 cmp	 edx, DWORD PTR _eType$[ebp]
  00015	75 0a		 jne	 SHORT $LN4@GetModeIco
  00017	39 46 04	 cmp	 DWORD PTR [esi+4], eax
  0001a	75 05		 jne	 SHORT $LN4@GetModeIco
  0001c	39 46 08	 cmp	 DWORD PTR [esi+8], eax
  0001f	74 0e		 je	 SHORT $LN43@GetModeIco
$LN4@GetModeIco:

; 226  : 	for( ; iter != m_vModeIconList.end(); ++iter )

  00021	83 c6 14	 add	 esi, 20			; 00000014H
  00024	3b f1		 cmp	 esi, ecx
  00026	75 e8		 jne	 SHORT $LL18@GetModeIco
$LN3@GetModeIco:

; 237  : 		}
; 238  : 	}
; 239  : 
; 240  : 	return NULL;

  00028	33 c0		 xor	 eax, eax
$LN6@GetModeIco:
  0002a	5e		 pop	 esi

; 241  : }

  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
$LN43@GetModeIco:

; 232  : 		{
; 233  : 			if( rkIcon.pModeIcon )

  0002f	39 46 0c	 cmp	 DWORD PTR [esi+12], eax
  00032	74 3f		 je	 SHORT $LN1@GetModeIco

; 234  : 				rkIcon.pModeIcon->SetScale( FLOAT1, FLOAT1 );

  00034	57		 push	 edi
  00035	b8 01 00 00 00	 mov	 eax, 1
  0003a	8b d0		 mov	 edx, eax
  0003c	b8 01 00 00 00	 mov	 eax, 1
  00041	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00044	8b 39		 mov	 edi, DWORD PTR [ecx]
  00046	89 55 08	 mov	 DWORD PTR tv331[ebp], edx
  00049	db 45 08	 fild	 DWORD PTR tv331[ebp]
  0004c	85 d2		 test	 edx, edx
  0004e	79 06		 jns	 SHORT $LN45@GetModeIco
  00050	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN45@GetModeIco:
  00056	51		 push	 ecx
  00057	51		 push	 ecx
  00058	89 45 08	 mov	 DWORD PTR tv329[ebp], eax
  0005b	d9 5c 24 04	 fstp	 DWORD PTR [esp+4]
  0005f	db 45 08	 fild	 DWORD PTR tv329[ebp]
  00062	85 c0		 test	 eax, eax
  00064	79 06		 jns	 SHORT $LN46@GetModeIco
  00066	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN46@GetModeIco:
  0006c	d9 1c 24	 fstp	 DWORD PTR [esp]
  0006f	ff 57 18	 call	 DWORD PTR [edi+24]
  00072	5f		 pop	 edi
$LN1@GetModeIco:

; 235  : 
; 236  : 			return rkIcon.pModeIcon;

  00073	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00076	eb b2		 jmp	 SHORT $LN6@GetModeIco
?GetModeIcon@ioModeResourceManager@@QAEPAVioUIRenderImage@@H@Z ENDP ; ioModeResourceManager::GetModeIcon
_TEXT	ENDS
PUBLIC	?GetModeIconByUserMode@ioModeResourceManager@@QAEPAVioUIRenderImage@@H@Z ; ioModeResourceManager::GetModeIconByUserMode
; Function compile flags: /Ogsp
;	COMDAT ?GetModeIconByUserMode@ioModeResourceManager@@QAEPAVioUIRenderImage@@H@Z
_TEXT	SEGMENT
tv331 = 8						; size = 4
tv329 = 8						; size = 4
_eType$ = 8						; size = 4
?GetModeIconByUserMode@ioModeResourceManager@@QAEPAVioUIRenderImage@@H@Z PROC ; ioModeResourceManager::GetModeIconByUserMode, COMDAT
; _this$ = ecx

; 244  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 245  : 	vModeIconList::iterator iter = m_vModeIconList.begin();

  00004	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]

; 246  : 	for( ; iter != m_vModeIconList.end(); ++iter )

  00007	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000a	3b f1		 cmp	 esi, ecx
  0000c	74 1a		 je	 SHORT $LN3@GetModeIco@2
  0000e	33 c0		 xor	 eax, eax
$LL18@GetModeIco@2:

; 247  : 	{
; 248  : 		const ModeIcon& rkIcon = *iter;
; 249  : 
; 250  : 		//일반 모드의 경우 eKindValue1/2는 초기값으로 세팅되어있음
; 251  : 		if( rkIcon.eType == eType && rkIcon.eKindValue1 == 0 && rkIcon.eKindValue2 == 0 )

  00010	8b 16		 mov	 edx, DWORD PTR [esi]
  00012	3b 55 08	 cmp	 edx, DWORD PTR _eType$[ebp]
  00015	75 0a		 jne	 SHORT $LN4@GetModeIco@2
  00017	39 46 04	 cmp	 DWORD PTR [esi+4], eax
  0001a	75 05		 jne	 SHORT $LN4@GetModeIco@2
  0001c	39 46 08	 cmp	 DWORD PTR [esi+8], eax
  0001f	74 0e		 je	 SHORT $LN43@GetModeIco@2
$LN4@GetModeIco@2:

; 246  : 	for( ; iter != m_vModeIconList.end(); ++iter )

  00021	83 c6 14	 add	 esi, 20			; 00000014H
  00024	3b f1		 cmp	 esi, ecx
  00026	75 e8		 jne	 SHORT $LL18@GetModeIco@2
$LN3@GetModeIco@2:

; 257  : 		}
; 258  : 	}
; 259  : 
; 260  : 	return NULL;

  00028	33 c0		 xor	 eax, eax
$LN6@GetModeIco@2:
  0002a	5e		 pop	 esi

; 261  : }

  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
$LN43@GetModeIco@2:

; 252  : 		{
; 253  : 			if( rkIcon.pUserModeIcon )

  0002f	39 46 10	 cmp	 DWORD PTR [esi+16], eax
  00032	74 3f		 je	 SHORT $LN1@GetModeIco@2

; 254  : 				rkIcon.pUserModeIcon->SetScale( FLOAT1, FLOAT1 );

  00034	57		 push	 edi
  00035	b8 01 00 00 00	 mov	 eax, 1
  0003a	8b d0		 mov	 edx, eax
  0003c	b8 01 00 00 00	 mov	 eax, 1
  00041	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00044	8b 39		 mov	 edi, DWORD PTR [ecx]
  00046	89 55 08	 mov	 DWORD PTR tv331[ebp], edx
  00049	db 45 08	 fild	 DWORD PTR tv331[ebp]
  0004c	85 d2		 test	 edx, edx
  0004e	79 06		 jns	 SHORT $LN45@GetModeIco@2
  00050	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN45@GetModeIco@2:
  00056	51		 push	 ecx
  00057	51		 push	 ecx
  00058	89 45 08	 mov	 DWORD PTR tv329[ebp], eax
  0005b	d9 5c 24 04	 fstp	 DWORD PTR [esp+4]
  0005f	db 45 08	 fild	 DWORD PTR tv329[ebp]
  00062	85 c0		 test	 eax, eax
  00064	79 06		 jns	 SHORT $LN46@GetModeIco@2
  00066	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN46@GetModeIco@2:
  0006c	d9 1c 24	 fstp	 DWORD PTR [esp]
  0006f	ff 57 18	 call	 DWORD PTR [edi+24]
  00072	5f		 pop	 edi
$LN1@GetModeIco@2:

; 255  : 
; 256  : 			return rkIcon.pUserModeIcon;

  00073	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00076	eb b2		 jmp	 SHORT $LN6@GetModeIco@2
?GetModeIconByUserMode@ioModeResourceManager@@QAEPAVioUIRenderImage@@H@Z ENDP ; ioModeResourceManager::GetModeIconByUserMode
_TEXT	ENDS
PUBLIC	?GetPlazaIcon@ioModeResourceManager@@QAEPAVioUIRenderImage@@H@Z ; ioModeResourceManager::GetPlazaIcon
; Function compile flags: /Ogsp
;	COMDAT ?GetPlazaIcon@ioModeResourceManager@@QAEPAVioUIRenderImage@@H@Z
_TEXT	SEGMENT
tv331 = 8						; size = 4
tv329 = 8						; size = 4
_ePlazaType$ = 8					; size = 4
?GetPlazaIcon@ioModeResourceManager@@QAEPAVioUIRenderImage@@H@Z PROC ; ioModeResourceManager::GetPlazaIcon, COMDAT
; _this$ = ecx

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 265  : 	vModeIconList::iterator iter = m_vModeIconList.begin();

  00004	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]

; 266  : 	for( ; iter != m_vModeIconList.end(); ++iter )

  00007	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000a	eb 16		 jmp	 SHORT $LN47@GetPlazaIc
$LL18@GetPlazaIc:

; 267  : 	{
; 268  : 		const ModeIcon& rkIcon = *iter;
; 269  : 				
; 270  : 		if( rkIcon.eType == MT_TRAINING && rkIcon.eKindValue1 == ePlazaType && rkIcon.eKindValue2 == 0 )

  0000c	83 3e 04	 cmp	 DWORD PTR [esi], 4
  0000f	75 0e		 jne	 SHORT $LN4@GetPlazaIc
  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	3b 45 08	 cmp	 eax, DWORD PTR _ePlazaType$[ebp]
  00017	75 06		 jne	 SHORT $LN4@GetPlazaIc
  00019	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0001d	74 0e		 je	 SHORT $LN43@GetPlazaIc
$LN4@GetPlazaIc:

; 266  : 	for( ; iter != m_vModeIconList.end(); ++iter )

  0001f	83 c6 14	 add	 esi, 20			; 00000014H
$LN47@GetPlazaIc:
  00022	3b f1		 cmp	 esi, ecx
  00024	75 e6		 jne	 SHORT $LL18@GetPlazaIc

; 276  : 		}
; 277  : 	}
; 278  : 
; 279  : 	return NULL;

  00026	33 c0		 xor	 eax, eax
$LN6@GetPlazaIc:
  00028	5e		 pop	 esi

; 280  : }

  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
$LN43@GetPlazaIc:

; 271  : 		{
; 272  : 			if( rkIcon.pModeIcon )

  0002d	83 7e 0c 00	 cmp	 DWORD PTR [esi+12], 0
  00031	74 3f		 je	 SHORT $LN1@GetPlazaIc

; 273  : 				rkIcon.pModeIcon->SetScale( FLOAT1, FLOAT1 );

  00033	57		 push	 edi
  00034	b8 01 00 00 00	 mov	 eax, 1
  00039	8b d0		 mov	 edx, eax
  0003b	b8 01 00 00 00	 mov	 eax, 1
  00040	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00043	8b 39		 mov	 edi, DWORD PTR [ecx]
  00045	89 55 08	 mov	 DWORD PTR tv331[ebp], edx
  00048	db 45 08	 fild	 DWORD PTR tv331[ebp]
  0004b	85 d2		 test	 edx, edx
  0004d	79 06		 jns	 SHORT $LN45@GetPlazaIc
  0004f	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN45@GetPlazaIc:
  00055	51		 push	 ecx
  00056	51		 push	 ecx
  00057	89 45 08	 mov	 DWORD PTR tv329[ebp], eax
  0005a	d9 5c 24 04	 fstp	 DWORD PTR [esp+4]
  0005e	db 45 08	 fild	 DWORD PTR tv329[ebp]
  00061	85 c0		 test	 eax, eax
  00063	79 06		 jns	 SHORT $LN46@GetPlazaIc
  00065	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN46@GetPlazaIc:
  0006b	d9 1c 24	 fstp	 DWORD PTR [esp]
  0006e	ff 57 18	 call	 DWORD PTR [edi+24]
  00071	5f		 pop	 edi
$LN1@GetPlazaIc:

; 274  : 
; 275  : 			return rkIcon.pModeIcon;

  00072	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00075	eb b1		 jmp	 SHORT $LN6@GetPlazaIc
?GetPlazaIcon@ioModeResourceManager@@QAEPAVioUIRenderImage@@H@Z ENDP ; ioModeResourceManager::GetPlazaIcon
_TEXT	ENDS
PUBLIC	?GetModeRoomIcon@ioModeResourceManager@@QAEPAVioUIRenderImage@@H_N@Z ; ioModeResourceManager::GetModeRoomIcon
; Function compile flags: /Ogsp
;	COMDAT ?GetModeRoomIcon@ioModeResourceManager@@QAEPAVioUIRenderImage@@H_N@Z
_TEXT	SEGMENT
_eRoomType$ = 8						; size = 4
tv333 = 12						; size = 4
tv331 = 12						; size = 4
_bCampHeroBattle$ = 12					; size = 1
?GetModeRoomIcon@ioModeResourceManager@@QAEPAVioUIRenderImage@@H_N@Z PROC ; ioModeResourceManager::GetModeRoomIcon, COMDAT
; _this$ = ecx

; 283  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 284  : 	vModeIconList::iterator iter = m_vModeIconList.begin();

  00004	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]

; 285  : 	for( ; iter != m_vModeIconList.end(); ++iter )

  00007	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000a	3b f1		 cmp	 esi, ecx
  0000c	74 28		 je	 SHORT $LN5@GetModeRoo@2
  0000e	8b 55 08	 mov	 edx, DWORD PTR _eRoomType$[ebp]
$LL20@GetModeRoo@2:

; 286  : 	{
; 287  : 		const ModeIcon& rkIcon = *iter;
; 288  : 		if( rkIcon.eType == MT_NONE || rkIcon.eType == MT_MYROOM || eRoomType == MRT_FIND_MODE )

  00011	8b 06		 mov	 eax, DWORD PTR [esi]
  00013	85 c0		 test	 eax, eax
  00015	74 0a		 je	 SHORT $LN3@GetModeRoo@2
  00017	83 f8 18	 cmp	 eax, 24			; 00000018H
  0001a	74 05		 je	 SHORT $LN3@GetModeRoo@2
  0001c	83 fa 05	 cmp	 edx, 5
  0001f	75 0e		 jne	 SHORT $LN6@GetModeRoo@2
$LN3@GetModeRoo@2:

; 289  : 		{
; 290  : 			if( rkIcon.eKindValue1 == eRoomType && rkIcon.eKindValue2 == static_cast<int>( bCampHeroBattle ) )

  00021	39 56 04	 cmp	 DWORD PTR [esi+4], edx
  00024	75 09		 jne	 SHORT $LN6@GetModeRoo@2
  00026	0f b6 45 0c	 movzx	 eax, BYTE PTR _bCampHeroBattle$[ebp]
  0002a	39 46 08	 cmp	 DWORD PTR [esi+8], eax
  0002d	74 0e		 je	 SHORT $LN45@GetModeRoo@2
$LN6@GetModeRoo@2:

; 285  : 	for( ; iter != m_vModeIconList.end(); ++iter )

  0002f	83 c6 14	 add	 esi, 20			; 00000014H
  00032	3b f1		 cmp	 esi, ecx
  00034	75 db		 jne	 SHORT $LL20@GetModeRoo@2
$LN5@GetModeRoo@2:

; 296  : 			}
; 297  : 		}
; 298  : 	}
; 299  : 
; 300  : 	return NULL;

  00036	33 c0		 xor	 eax, eax
$LN8@GetModeRoo@2:
  00038	5e		 pop	 esi

; 301  : }

  00039	5d		 pop	 ebp
  0003a	c2 08 00	 ret	 8
$LN45@GetModeRoo@2:

; 291  : 			{
; 292  : 				if( rkIcon.pModeIcon )

  0003d	83 7e 0c 00	 cmp	 DWORD PTR [esi+12], 0
  00041	74 3f		 je	 SHORT $LN1@GetModeRoo@2

; 293  : 					rkIcon.pModeIcon->SetScale( FLOAT1, FLOAT1 );

  00043	57		 push	 edi
  00044	b8 01 00 00 00	 mov	 eax, 1
  00049	8b d0		 mov	 edx, eax
  0004b	b8 01 00 00 00	 mov	 eax, 1
  00050	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00053	8b 39		 mov	 edi, DWORD PTR [ecx]
  00055	89 55 0c	 mov	 DWORD PTR tv333[ebp], edx
  00058	db 45 0c	 fild	 DWORD PTR tv333[ebp]
  0005b	85 d2		 test	 edx, edx
  0005d	79 06		 jns	 SHORT $LN47@GetModeRoo@2
  0005f	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN47@GetModeRoo@2:
  00065	51		 push	 ecx
  00066	51		 push	 ecx
  00067	89 45 0c	 mov	 DWORD PTR tv331[ebp], eax
  0006a	d9 5c 24 04	 fstp	 DWORD PTR [esp+4]
  0006e	db 45 0c	 fild	 DWORD PTR tv331[ebp]
  00071	85 c0		 test	 eax, eax
  00073	79 06		 jns	 SHORT $LN48@GetModeRoo@2
  00075	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN48@GetModeRoo@2:
  0007b	d9 1c 24	 fstp	 DWORD PTR [esp]
  0007e	ff 57 18	 call	 DWORD PTR [edi+24]
  00081	5f		 pop	 edi
$LN1@GetModeRoo@2:

; 294  : 
; 295  : 				return rkIcon.pModeIcon;

  00082	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00085	eb b1		 jmp	 SHORT $LN8@GetModeRoo@2
?GetModeRoomIcon@ioModeResourceManager@@QAEPAVioUIRenderImage@@H_N@Z ENDP ; ioModeResourceManager::GetModeRoomIcon
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@YAXPAUModeIcon@ioModeResourceManager@@0AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@@Z ; std::_Destroy_range<std::allocator<ioModeResourceManager::ModeIcon> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@YAXPAUModeIcon@ioModeResourceManager@@0AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@YAXPAUModeIcon@ioModeResourceManager@@0AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ioModeResourceManager::ModeIcon> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@YAXPAUModeIcon@ioModeResourceManager@@0AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioModeResourceManager::ModeIcon> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAUModeIcon@ioModeResourceManager@@PAU12@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@@Z ; std::_Uninitialized_move<ioModeResourceManager::ModeIcon *,ioModeResourceManager::ModeIcon *,std::allocator<ioModeResourceManager::ModeIcon> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAUModeIcon@ioModeResourceManager@@PAU12@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@@Z
_TEXT	SEGMENT
__Cat$508014 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUModeIcon@ioModeResourceManager@@PAU12@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@@Z PROC ; std::_Uninitialized_move<ioModeResourceManager::ModeIcon *,ioModeResourceManager::ModeIcon *,std::allocator<ioModeResourceManager::ModeIcon> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$508014[ebp]
  00007	6a 00		 push	 0
  00009	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000c	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00012	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00015	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUModeIcon@ioModeResourceManager@@PAU12@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@U12@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioModeResourceManager::ModeIcon *,ioModeResourceManager::ModeIcon *,std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon>
  0001a	83 c4 18	 add	 esp, 24			; 00000018H

; 472  : 	}

  0001d	c9		 leave
  0001e	c3		 ret	 0
??$_Uninitialized_move@PAUModeIcon@ioModeResourceManager@@PAU12@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@@Z ENDP ; std::_Uninitialized_move<ioModeResourceManager::ModeIcon *,ioModeResourceManager::ModeIcon *,std::allocator<ioModeResourceManager::ModeIcon> >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEXPAUModeIcon@ioModeResourceManager@@0@Z ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEXPAUModeIcon@ioModeResourceManager@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEXPAUModeIcon@ioModeResourceManager@@0@Z PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEXPAUModeIcon@ioModeResourceManager@@0@Z ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Destroy
_TEXT	ENDS
PUBLIC	??$_Umove@PAUModeIcon@ioModeResourceManager@@@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEPAUModeIcon@ioModeResourceManager@@PAU23@00@Z ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Umove<ioModeResourceManager::ModeIcon *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Umove@PAUModeIcon@ioModeResourceManager@@@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEPAUModeIcon@ioModeResourceManager@@PAU23@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUModeIcon@ioModeResourceManager@@@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEPAUModeIcon@ioModeResourceManager@@PAU23@00@Z PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Umove<ioModeResourceManager::ModeIcon *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUModeIcon@ioModeResourceManager@@PAU12@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@@Z ; std::_Uninitialized_move<ioModeResourceManager::ModeIcon *,ioModeResourceManager::ModeIcon *,std::allocator<ioModeResourceManager::ModeIcon> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAUModeIcon@ioModeResourceManager@@@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEPAUModeIcon@ioModeResourceManager@@PAU23@00@Z ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Umove<ioModeResourceManager::ModeIcon *>
_TEXT	ENDS
PUBLIC	?erase@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@0@Z ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$508151 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@0@Z PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __First_arg$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	8b f1		 mov	 esi, ecx
  0000d	89 07		 mov	 DWORD PTR [edi], eax

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 45 10	 cmp	 eax, DWORD PTR __Last_arg$[ebp]
  00012	74 16		 je	 SHORT $LN1@erase

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	ff 75 10	 push	 DWORD PTR __Cat$508151[ebp]
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  0001f	e8 00 00 00 00	 call	 ??$_Move@PAUModeIcon@ioModeResourceManager@@PAU12@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioModeResourceManager::ModeIcon *,ioModeResourceManager::ModeIcon *>
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

  00027	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN1@erase:

; 1212 : 			}
; 1213 : 		return (_First);

  0002a	8b c7		 mov	 eax, edi
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi

; 1214 : 		}

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@0@Z ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEXXZ ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Tidy
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEXXZ PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN21@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN21@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEXXZ ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Tidy
_TEXT	ENDS
PUBLIC	?reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXI@Z ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::reserve
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3_catch:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
__Ptr$505994 = 8					; size = 4
__Count$ = 8						; size = 4
?reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXI@Z PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXI@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx

; 747  : 		if (max_size() < _Count)

  0000e	8b 5d 08	 mov	 ebx, DWORD PTR __Count$[ebp]
  00011	81 fb cc cc cc
	0c		 cmp	 ebx, 214748364		; 0cccccccH
  00017	76 0b		 jbe	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN56@reserve:
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  00024	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00027	2b 06		 sub	 eax, DWORD PTR [esi]
  00029	6a 14		 push	 20			; 00000014H
  0002b	99		 cdq
  0002c	59		 pop	 ecx
  0002d	f7 f9		 idiv	 ecx
  0002f	3b c3		 cmp	 eax, ebx
  00031	73 6b		 jae	 SHORT $LN3@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00033	6a 00		 push	 0
  00035	53		 push	 ebx
  00036	e8 00 00 00 00	 call	 ??$_Allocate@UModeIcon@ioModeResourceManager@@@std@@YAPAUModeIcon@ioModeResourceManager@@IPAU12@@Z ; std::_Allocate<ioModeResourceManager::ModeIcon>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  0003b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0003d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00041	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00044	52		 push	 edx
  00045	89 45 08	 mov	 DWORD PTR __Ptr$505994[ebp], eax
  00048	ff 75 08	 push	 DWORD PTR __Ptr$505994[ebp]
  0004b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004e	50		 push	 eax
  0004f	51		 push	 ecx
  00050	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUModeIcon@ioModeResourceManager@@PAU12@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@YAPAUModeIcon@ioModeResourceManager@@PAU12@00AAV?$allocator@UModeIcon@ioModeResourceManager@@@0@@Z ; std::_Uninitialized_move<ioModeResourceManager::ModeIcon *,ioModeResourceManager::ModeIcon *,std::allocator<ioModeResourceManager::ModeIcon> >

; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00055	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00057	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0005a	83 c4 18	 add	 esp, 24			; 00000018H
  0005d	2b c1		 sub	 eax, ecx
  0005f	6a 14		 push	 20			; 00000014H
  00061	99		 cdq
  00062	5f		 pop	 edi
  00063	f7 ff		 idiv	 edi
  00065	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  00069	8b f8		 mov	 edi, eax
  0006b	85 c9		 test	 ecx, ecx
  0006d	74 12		 je	 SHORT $LN48@reserve

; 761  : 			if (this->_Myfirst != 0)

  0006f	eb 03		 jmp	 SHORT $LN55@reserve

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);

$LL39@reserve:
  00071	83 c1 14	 add	 ecx, 20			; 00000014H
$LN55@reserve:
  00074	3b 4e 04	 cmp	 ecx, DWORD PTR [esi+4]
  00077	75 f8		 jne	 SHORT $LL39@reserve

; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00079	ff 36		 push	 DWORD PTR [esi]
  0007b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00080	59		 pop	 ecx
$LN48@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  00081	8b ce		 mov	 ecx, esi
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00089	6b db 14	 imul	 ebx, 20			; 00000014H

; 770  : 			this->_Mylast = _Ptr + _Size;

  0008c	6b ff 14	 imul	 edi, 20			; 00000014H
  0008f	8b 45 08	 mov	 eax, DWORD PTR __Ptr$505994[ebp]
  00092	03 d8		 add	 ebx, eax
  00094	03 f8		 add	 edi, eax
  00096	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  00099	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 771  : 			this->_Myfirst = _Ptr;

  0009c	89 06		 mov	 DWORD PTR [esi], eax
$LN3@reserve:

; 772  : 			}
; 773  : 		}

  0009e	e8 00 00 00 00	 call	 __EH_epilog3
  000a3	c2 04 00	 ret	 4
__catch$?reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXI@Z$0:

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

  000a6	ff 75 08	 push	 DWORD PTR __Ptr$505994[ebp]
  000a9	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000ae	59		 pop	 ecx

; 757  : 			_RERAISE;

  000af	6a 00		 push	 0
  000b1	6a 00		 push	 0
  000b3	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN57@reserve:
$LN54@reserve:
  000b8	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXI@Z ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::reserve
PUBLIC	??1?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE@XZ ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::~vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE@XZ PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::~vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEXXZ ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Tidy
??1?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::~vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXXZ ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T508461 = -4						; size = 4
?clear@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXXZ PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T508461[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@0@Z ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXXZ ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::clear
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEXI@Z ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEXI@Z PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx
  0000d	57		 push	 edi
  0000e	99		 cdq
  0000f	6a 14		 push	 20			; 00000014H
  00011	5f		 pop	 edi
  00012	f7 ff		 idiv	 edi
  00014	8b f8		 mov	 edi, eax

; 1292 : 		if (max_size() - _Count < _Size)

  00016	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH
  0001b	2b 45 08	 sub	 eax, DWORD PTR __Count$[ebp]
  0001e	3b c7		 cmp	 eax, edi
  00020	73 0b		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve:
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  0002d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00030	2b c1		 sub	 eax, ecx
  00032	6a 14		 push	 20			; 00000014H
  00034	99		 cdq
  00035	59		 pop	 ecx
  00036	f7 f9		 idiv	 ecx
  00038	03 7d 08	 add	 edi, DWORD PTR __Count$[ebp]
  0003b	3b f8		 cmp	 edi, eax
  0003d	76 10		 jbe	 SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  0003f	57		 push	 edi
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IBEII@Z ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Grow_to
  00047	50		 push	 eax
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXI@Z ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::reserve
$LN1@Reserve:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1298 : 		}

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
$LN20@Reserve:
?_Reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEXI@Z ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Reserve
_TEXT	ENDS
PUBLIC	??_7ioModeResourceManager@@6B@			; ioModeResourceManager::`vftable'
PUBLIC	??0ioModeResourceManager@@QAE@XZ		; ioModeResourceManager::ioModeResourceManager
PUBLIC	??_R4ioModeResourceManager@@6B@			; ioModeResourceManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioModeResourceManager@@@8		; ioModeResourceManager `RTTI Type Descriptor'
PUBLIC	??_R3ioModeResourceManager@@8			; ioModeResourceManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioModeResourceManager@@8			; ioModeResourceManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioModeResourceManager@@8		; ioModeResourceManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@?$Singleton@VioModeResourceManager@@@@8 ; Singleton<ioModeResourceManager>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AV?$Singleton@VioModeResourceManager@@@@@8 ; Singleton<ioModeResourceManager> `RTTI Type Descriptor'
PUBLIC	??_R3?$Singleton@VioModeResourceManager@@@@8	; Singleton<ioModeResourceManager>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$Singleton@VioModeResourceManager@@@@8	; Singleton<ioModeResourceManager>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$Singleton@VioModeResourceManager@@@@8 ; Singleton<ioModeResourceManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_EioModeResourceManager@@UAEPAXI@Z:PROC	; ioModeResourceManager::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$Singleton@VioModeResourceManager@@@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
rdata$r	SEGMENT
??_R1A@?0A@EA@?$Singleton@VioModeResourceManager@@@@8 DD FLAT:??_R0?AV?$Singleton@VioModeResourceManager@@@@@8 ; Singleton<ioModeResourceManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioModeResourceManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$Singleton@VioModeResourceManager@@@@8
rdata$r	SEGMENT
??_R2?$Singleton@VioModeResourceManager@@@@8 DD FLAT:??_R1A@?0A@EA@?$Singleton@VioModeResourceManager@@@@8 ; Singleton<ioModeResourceManager>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$Singleton@VioModeResourceManager@@@@8
rdata$r	SEGMENT
??_R3?$Singleton@VioModeResourceManager@@@@8 DD 00H	; Singleton<ioModeResourceManager>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$Singleton@VioModeResourceManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$Singleton@VioModeResourceManager@@@@@8
_DATA	SEGMENT
??_R0?AV?$Singleton@VioModeResourceManager@@@@@8 DD FLAT:??_7type_info@@6B@ ; Singleton<ioModeResourceManager> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$Singleton@VioModeResourceManager@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@?$Singleton@VioModeResourceManager@@@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$Singleton@VioModeResourceManager@@@@8 DD FLAT:??_R0?AV?$Singleton@VioModeResourceManager@@@@@8 ; Singleton<ioModeResourceManager>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioModeResourceManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioModeResourceManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioModeResourceManager@@8 DD FLAT:??_R0?AVioModeResourceManager@@@8 ; ioModeResourceManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioModeResourceManager@@8
rdata$r	ENDS
;	COMDAT ??_R2ioModeResourceManager@@8
rdata$r	SEGMENT
??_R2ioModeResourceManager@@8 DD FLAT:??_R1A@?0A@EA@ioModeResourceManager@@8 ; ioModeResourceManager::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@?$Singleton@VioModeResourceManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R3ioModeResourceManager@@8
rdata$r	SEGMENT
??_R3ioModeResourceManager@@8 DD 00H			; ioModeResourceManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioModeResourceManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioModeResourceManager@@@8
_DATA	SEGMENT
??_R0?AVioModeResourceManager@@@8 DD FLAT:??_7type_info@@6B@ ; ioModeResourceManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioModeResourceManager@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioModeResourceManager@@6B@
rdata$r	SEGMENT
??_R4ioModeResourceManager@@6B@ DD 00H			; ioModeResourceManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioModeResourceManager@@@8
	DD	FLAT:??_R3ioModeResourceManager@@8
rdata$r	ENDS
;	COMDAT ??_7ioModeResourceManager@@6B@
CONST	SEGMENT
??_7ioModeResourceManager@@6B@ DD FLAT:??_R4ioModeResourceManager@@6B@ ; ioModeResourceManager::`vftable'
	DD	FLAT:??_EioModeResourceManager@@UAEPAXI@Z
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomoderesourcemanager.cpp
CONST	ENDS
;	COMDAT ??0ioModeResourceManager@@QAE@XZ
_TEXT	SEGMENT
??0ioModeResourceManager@@QAE@XZ PROC			; ioModeResourceManager::ioModeResourceManager, COMDAT
; _this$ = ecx

; 17   : {

  00000	8b c1		 mov	 eax, ecx
  00002	a3 00 00 00 00	 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioModeResourceManager@@@@1PAVioModeResourceManager@@A, eax ; Singleton<ioModeResourceManager>::ms_Singleton
  00007	33 c9		 xor	 ecx, ecx
  00009	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ioModeResourceManager@@6B@
  0000f	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00012	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00015	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 18   : }

  00018	c3		 ret	 0
??0ioModeResourceManager@@QAE@XZ ENDP			; ioModeResourceManager::ioModeResourceManager
_TEXT	ENDS
PUBLIC	??1ioModeResourceManager@@UAE@XZ		; ioModeResourceManager::~ioModeResourceManager
EXTRN	__EH_prolog3:PROC
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
xdata$x	SEGMENT
__unwindtable$??1ioModeResourceManager@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioModeResourceManager@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ioModeResourceManager@@UAE@XZ$1
__ehfuncinfo$??1ioModeResourceManager@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1ioModeResourceManager@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomoderesourcemanager.cpp
xdata$x	ENDS
;	COMDAT ??1ioModeResourceManager@@UAE@XZ
_TEXT	SEGMENT
$T508819 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioModeResourceManager@@UAE@XZ PROC			; ioModeResourceManager::~ioModeResourceManager, COMDAT
; _this$ = ecx

; 21   : {

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioModeResourceManager@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00011	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7ioModeResourceManager@@6B@

; 22   : 	for( vModeIconList::iterator iter = m_vModeIconList.begin(); iter != m_vModeIconList.end(); ++iter )

  00017	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0001a	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00021	eb 27		 jmp	 SHORT $LN104@ioModeReso
$LN24@ioModeReso:

; 23   : 	{
; 24   : 		SAFEDELETE( iter->pModeIcon );

  00023	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00026	85 c9		 test	 ecx, ecx
  00028	74 0b		 je	 SHORT $LN2@ioModeReso
  0002a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002c	6a 01		 push	 1
  0002e	ff 50 40	 call	 DWORD PTR [eax+64]
  00031	83 66 0c 00	 and	 DWORD PTR [esi+12], 0
$LN2@ioModeReso:

; 25   : 		SAFEDELETE( iter->pUserModeIcon );

  00035	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00038	85 c9		 test	 ecx, ecx
  0003a	74 0b		 je	 SHORT $LN4@ioModeReso
  0003c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0003e	6a 01		 push	 1
  00040	ff 50 40	 call	 DWORD PTR [eax+64]
  00043	83 66 10 00	 and	 DWORD PTR [esi+16], 0
$LN4@ioModeReso:

; 22   : 	for( vModeIconList::iterator iter = m_vModeIconList.begin(); iter != m_vModeIconList.end(); ++iter )

  00047	83 c6 14	 add	 esi, 20			; 00000014H
$LN104@ioModeReso:
  0004a	3b 77 08	 cmp	 esi, DWORD PTR [edi+8]
  0004d	75 d4		 jne	 SHORT $LN24@ioModeReso

; 26   : 	}
; 27   : 	m_vModeIconList.clear();

  0004f	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00052	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00055	50		 push	 eax
  00056	51		 push	 ecx
  00057	8d 45 ec	 lea	 eax, DWORD PTR $T508819[ebp]
  0005a	50		 push	 eax
  0005b	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0005e	e8 00 00 00 00	 call	 ?erase@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@@2@0@Z ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::erase

; 28   : }

  00063	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00066	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0006a	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEXXZ ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Tidy
  0006f	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioModeResourceManager@@@@1PAVioModeResourceManager@@A, 0 ; Singleton<ioModeResourceManager>::ms_Singleton
  00076	e8 00 00 00 00	 call	 __EH_epilog3
  0007b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioModeResourceManager@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioModeResourceManager@@@@QAE@XZ ; Singleton<ioModeResourceManager>::~Singleton<ioModeResourceManager>
__unwindfunclet$??1ioModeResourceManager@@UAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 04	 add	 ecx, 4
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAE@XZ ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::~vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >
__ehhandler$??1ioModeResourceManager@@UAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioModeResourceManager@@UAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioModeResourceManager@@UAE@XZ ENDP			; ioModeResourceManager::~ioModeResourceManager
PUBLIC	?push_back@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXABUModeIcon@ioModeResourceManager@@@Z ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::push_back
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?push_back@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXABUModeIcon@ioModeResourceManager@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXABUModeIcon@ioModeResourceManager@@@Z PROC ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f9		 cmp	 edi, ecx
  0000f	73 34		 jae	 SHORT $LN4@push_back
  00011	8b 16		 mov	 edx, DWORD PTR [esi]
  00013	3b d7		 cmp	 edx, edi
  00015	77 2e		 ja	 SHORT $LN4@push_back

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	8b c7		 mov	 eax, edi
  00019	2b c2		 sub	 eax, edx
  0001b	6a 14		 push	 20			; 00000014H
  0001d	99		 cdq
  0001e	5f		 pop	 edi
  0001f	f7 ff		 idiv	 edi
  00021	8b f8		 mov	 edi, eax

; 980  : 			if (this->_Mylast == this->_Myend)

  00023	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00026	75 09		 jne	 SHORT $LN3@push_back

; 981  : 				_Reserve(1);

  00028	6a 01		 push	 1
  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEXI@Z ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Reserve
$LN3@push_back:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  00031	6b ff 14	 imul	 edi, 20			; 00000014H
  00034	03 3e		 add	 edi, DWORD PTR [esi]
  00036	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00039	57		 push	 edi
  0003a	ff 76 04	 push	 DWORD PTR [esi+4]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@AAU34@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@AAU23@@Z ; std::_Cons_val<std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon,ioModeResourceManager::ModeIcon &>

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00043	eb 1b		 jmp	 SHORT $LN20@push_back
$LN4@push_back:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00045	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00048	75 09		 jne	 SHORT $LN1@push_back

; 991  : 				_Reserve(1);

  0004a	6a 01		 push	 1
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@IAEXI@Z ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::_Reserve
$LN1@push_back:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00053	57		 push	 edi
  00054	ff 76 04	 push	 DWORD PTR [esi+4]
  00057	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@UModeIcon@ioModeResourceManager@@ABU34@@std@@YAXAAV?$allocator@UModeIcon@ioModeResourceManager@@@0@PAUModeIcon@ioModeResourceManager@@ABU23@@Z ; std::_Cons_val<std::allocator<ioModeResourceManager::ModeIcon>,ioModeResourceManager::ModeIcon,ioModeResourceManager::ModeIcon const &>
$LN20@push_back:
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH

; 996  : 			++this->_Mylast;

  00063	83 46 04 14	 add	 DWORD PTR [esi+4], 20	; 00000014H
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
?push_back@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXABUModeIcon@ioModeResourceManager@@@Z ENDP ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::push_back
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GioModeResourceManager@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioModeResourceManager@@UAEPAXI@Z PROC		; ioModeResourceManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioModeResourceManager@@UAE@XZ ; ioModeResourceManager::~ioModeResourceManager
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@2
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@2:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioModeResourceManager@@UAEPAXI@Z ENDP		; ioModeResourceManager::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_0L@IOMGADDA@icon_image?$AA@		; `string'
PUBLIC	??_C@_0BF@EMABIEIE@icon_image_user_mode?$AA@	; `string'
PUBLIC	_rkLoader$GSCopy$
PUBLIC	_this$GSCopy$
PUBLIC	?AddModeIcon@ioModeResourceManager@@QAEXAAVioINILoader@@ABVioHashString@@HHH@Z ; ioModeResourceManager::AddModeIcon
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
EXTRN	__imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z:PROC
EXTRN	__imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ:PROC
EXTRN	__imp_??0ioHashString@@QAE@PBD@Z:PROC
EXTRN	__imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z:PROC
EXTRN	__imp_?SetTitle@ioINILoader@@QAEXPBD@Z:PROC
EXTRN	__imp_?c_str@ioHashString@@QBEPBDXZ:PROC
EXTRN	__EH_epilog3_GS:PROC
EXTRN	__EH_prolog3_GS:PROC
;	COMDAT ??_C@_0L@IOMGADDA@icon_image?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomoderesourcemanager.h
CONST	SEGMENT
??_C@_0L@IOMGADDA@icon_image?$AA@ DB 'icon_image', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EMABIEIE@icon_image_user_mode?$AA@
CONST	SEGMENT
??_C@_0BF@EMABIEIE@icon_image_user_mode?$AA@ DB 'icon_image_user_mode', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddModeIcon@ioModeResourceManager@@QAEXAAVioINILoader@@ABVioHashString@@HHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddModeIcon@ioModeResourceManager@@QAEXAAVioINILoader@@ABVioHashString@@HHH@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AddModeIcon@ioModeResourceManager@@QAEXAAVioINILoader@@ABVioHashString@@HHH@Z$1
__ehfuncinfo$?AddModeIcon@ioModeResourceManager@@QAEXAAVioINILoader@@ABVioHashString@@HHH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AddModeIcon@ioModeResourceManager@@QAEXAAVioINILoader@@ABVioHashString@@HHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomoderesourcemanager.cpp
xdata$x	ENDS
;	COMDAT ?AddModeIcon@ioModeResourceManager@@QAEXAAVioINILoader@@ABVioHashString@@HHH@Z
_TEXT	SEGMENT
$T508888 = -336						; size = 16
$T508887 = -320						; size = 16
_Icon$ = -304						; size = 20
_rkLoader$GSCopy$ = -284				; size = 4
_this$GSCopy$ = -280					; size = 4
_szBuf$ = -276						; size = 260
__$EHRec$ = -12						; size = 12
_rkLoader$ = 8						; size = 4
_szTitle$ = 12						; size = 4
_eType$ = 16						; size = 4
_eKindValue1$ = 20					; size = 4
_eKindValue2$ = 24					; size = 4
?AddModeIcon@ioModeResourceManager@@QAEXAAVioINILoader@@ABVioHashString@@HHH@Z PROC ; ioModeResourceManager::AddModeIcon, COMDAT
; _this$ = ecx

; 205  : {

  00000	68 44 01 00 00	 push	 324			; 00000144H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?AddModeIcon@ioModeResourceManager@@QAEXAAVioINILoader@@ABVioHashString@@HHH@Z
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000f	8b 75 08	 mov	 esi, DWORD PTR _rkLoader$[ebp]
  00012	89 8d e8 fe ff
	ff		 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _szTitle$[ebp]
  0001b	89 b5 e4 fe ff
	ff		 mov	 DWORD PTR _rkLoader$GSCopy$[ebp], esi

; 206  : 	rkLoader.SetTitle( szTitle.c_str() );

  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  00027	50		 push	 eax
  00028	8b ce		 mov	 ecx, esi
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 207  : 	char szBuf[MAX_PATH];
; 208  : 
; 209  : 	ModeIcon Icon;
; 210  : 	Icon.eType			= eType;

  00030	8b 45 10	 mov	 eax, DWORD PTR _eType$[ebp]
  00033	89 85 d0 fe ff
	ff		 mov	 DWORD PTR _Icon$[ebp], eax

; 211  : 	Icon.eKindValue1	= eKindValue1;

  00039	8b 45 14	 mov	 eax, DWORD PTR _eKindValue1$[ebp]
  0003c	89 85 d4 fe ff
	ff		 mov	 DWORD PTR _Icon$[ebp+4], eax

; 212  : 	Icon.eKindValue2	= eKindValue2;

  00042	8b 45 18	 mov	 eax, DWORD PTR _eKindValue2$[ebp]

; 213  : 
; 214  : 	rkLoader.LoadString( "icon_image_user_mode", "", szBuf, MAX_PATH );

  00045	68 04 01 00 00	 push	 260			; 00000104H
  0004a	89 85 d8 fe ff
	ff		 mov	 DWORD PTR _Icon$[ebp+8], eax
  00050	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0005c	8b ce		 mov	 ecx, esi
  0005e	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@EMABIEIE@icon_image_user_mode?$AA@
  00069	ff d6		 call	 esi

; 215  : 	Icon.pUserModeIcon = g_UIImageSetMgr.CreateImageByFullName( szBuf, true );

  0006b	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00071	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00077	50		 push	 eax
  00078	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR $T508887[ebp]
  0007e	ff d7		 call	 edi
  00080	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ
  00086	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0008a	8d 85 c0 fe ff
	ff		 lea	 eax, DWORD PTR $T508887[ebp]
  00090	6a 01		 push	 1
  00092	50		 push	 eax
  00093	ff d3		 call	 ebx
  00095	8b c8		 mov	 ecx, eax
  00097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z
  0009d	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000a1	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR $T508887[ebp]
  000a7	89 85 e0 fe ff
	ff		 mov	 DWORD PTR _Icon$[ebp+16], eax
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ

; 216  : 
; 217  : 	rkLoader.LoadString( "icon_image", "", szBuf, MAX_PATH );

  000b3	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  000b9	68 04 01 00 00	 push	 260			; 00000104H
  000be	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  000c4	50		 push	 eax
  000c5	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0L@IOMGADDA@icon_image?$AA@
  000cf	ff d6		 call	 esi

; 218  : 	Icon.pModeIcon = g_UIImageSetMgr.CreateImageByFullName( szBuf, true );

  000d1	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  000d7	50		 push	 eax
  000d8	8d 8d b0 fe ff
	ff		 lea	 ecx, DWORD PTR $T508888[ebp]
  000de	ff d7		 call	 edi
  000e0	33 c0		 xor	 eax, eax
  000e2	40		 inc	 eax
  000e3	50		 push	 eax
  000e4	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  000e7	8d 85 b0 fe ff
	ff		 lea	 eax, DWORD PTR $T508888[ebp]
  000ed	50		 push	 eax
  000ee	ff d3		 call	 ebx
  000f0	8b c8		 mov	 ecx, eax
  000f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z
  000f8	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000fc	8d 8d b0 fe ff
	ff		 lea	 ecx, DWORD PTR $T508888[ebp]
  00102	89 85 dc fe ff
	ff		 mov	 DWORD PTR _Icon$[ebp+12], eax
  00108	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ

; 219  : 	
; 220  : 	m_vModeIconList.push_back( Icon );

  0010e	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00114	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _Icon$[ebp]
  0011a	50		 push	 eax
  0011b	83 c1 04	 add	 ecx, 4
  0011e	e8 00 00 00 00	 call	 ?push_back@?$vector@UModeIcon@ioModeResourceManager@@V?$allocator@UModeIcon@ioModeResourceManager@@@std@@@std@@QAEXABUModeIcon@ioModeResourceManager@@@Z ; std::vector<ioModeResourceManager::ModeIcon,std::allocator<ioModeResourceManager::ModeIcon> >::push_back

; 221  : }

  00123	e8 00 00 00 00	 call	 __EH_epilog3_GS
  00128	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddModeIcon@ioModeResourceManager@@QAEXAAVioINILoader@@ABVioHashString@@HHH@Z$0:
  00000	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR $T508887[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?AddModeIcon@ioModeResourceManager@@QAEXAAVioINILoader@@ABVioHashString@@HHH@Z$1:
  0000c	8d 8d b0 fe ff
	ff		 lea	 ecx, DWORD PTR $T508888[ebp]
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?AddModeIcon@ioModeResourceManager@@QAEXAAVioINILoader@@ABVioHashString@@HHH@Z:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 8a ac fe ff
	ff		 mov	 ecx, DWORD PTR [edx-340]
  00025	33 c8		 xor	 ecx, eax
  00027	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002c	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002f	33 c8		 xor	 ecx, eax
  00031	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00036	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddModeIcon@ioModeResourceManager@@QAEXAAVioINILoader@@ABVioHashString@@HHH@Z
  0003b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddModeIcon@ioModeResourceManager@@QAEXAAVioINILoader@@ABVioHashString@@HHH@Z ENDP ; ioModeResourceManager::AddModeIcon
PUBLIC	?InitCommonModeIcon@ioModeResourceManager@@QAEXXZ ; ioModeResourceManager::InitCommonModeIcon
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitCommonModeIcon@ioModeResourceManager@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCommonModeIcon@ioModeResourceManager@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?InitCommonModeIcon@ioModeResourceManager@@QAEXXZ$1
__ehfuncinfo$?InitCommonModeIcon@ioModeResourceManager@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?InitCommonModeIcon@ioModeResourceManager@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?InitCommonModeIcon@ioModeResourceManager@@QAEXXZ
_TEXT	SEGMENT
_szTitle$505751 = -944					; size = 16
_kLoader$ = -928					; size = 912
__$EHRec$ = -12						; size = 12
?InitCommonModeIcon@ioModeResourceManager@@QAEXXZ PROC	; ioModeResourceManager::InitCommonModeIcon, COMDAT
; _this$ = ecx

; 163  : {

  00000	68 a4 03 00 00	 push	 932			; 000003a4H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?InitCommonModeIcon@ioModeResourceManager@@QAEXXZ
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS

; 164  : 	ioINILoader_e kLoader( "config/sp2_mode_loading.ini" );

  0000f	6a 06		 push	 6
  00011	8b d9		 mov	 ebx, ecx
  00013	c7 45 b0 8e 83
	85 8c		 mov	 DWORD PTR _kLoader$[ebp+848], -1937407090 ; 8c85838eH
  0001a	c7 45 b4 84 8b
	c4 99		 mov	 DWORD PTR _kLoader$[ebp+852], -1715172476 ; 99c48b84H
  00021	c7 45 b8 9d de
	b4 87		 mov	 DWORD PTR _kLoader$[ebp+856], -2018189667 ; 87b4de9dH
  00028	c7 45 bc 82 88
	8e b5		 mov	 DWORD PTR _kLoader$[ebp+860], -1248950142 ; b58e8882H
  0002f	c7 45 c0 81 83
	8a 8e		 mov	 DWORD PTR _kLoader$[ebp+864], -1903524991 ; 8e8a8381H
  00036	c7 45 c4 84 82
	8c c4		 mov	 DWORD PTR _kLoader$[ebp+868], -997424508 ; c48c8284H
  0003d	8d 45 b0	 lea	 eax, DWORD PTR _kLoader$[ebp+848]
  00040	c7 45 c8 84 82
	82 00		 mov	 DWORD PTR _kLoader$[ebp+872], 8553092 ; 00828284H
  00047	59		 pop	 ecx
$LL126@InitCommon:
  00048	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0004e	83 c0 04	 add	 eax, 4
  00051	49		 dec	 ecx
  00052	75 f4		 jne	 SHORT $LL126@InitCommon
  00054	6a 18		 push	 24			; 00000018H
  00056	58		 pop	 eax
$LL123@InitCommon:
  00057	8b c8		 mov	 ecx, eax
  00059	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0005f	79 05		 jns	 SHORT $LN144@InitCommon
  00061	49		 dec	 ecx
  00062	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00065	41		 inc	 ecx
$LN144@InitCommon:
  00066	b2 ed		 mov	 dl, -19			; ffffffedH
  00068	2a d1		 sub	 dl, cl
  0006a	30 54 05 b0	 xor	 BYTE PTR _kLoader$[ebp+eax+848], dl
  0006e	40		 inc	 eax
  0006f	83 f8 1b	 cmp	 eax, 27			; 0000001bH
  00072	7c e3		 jl	 SHORT $LL123@InitCommon
  00074	6a 01		 push	 1
  00076	8d 45 b0	 lea	 eax, DWORD PTR _kLoader$[ebp+848]
  00079	50		 push	 eax
  0007a	8d 8d 60 fc ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@PBD_N@Z
  00086	33 f6		 xor	 esi, esi
  00088	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
$LN15@InitCommon:

; 165  : 
; 166  : 	// 로딩 리소스 로드
; 167  : 	for( int eModeType = MT_NONE; eModeType < MAX_MODE_TYPE; ++eModeType )
; 168  : 	{
; 169  : 		ioHashString szTitle;		

  0008b	8d 8d 50 fc ff
	ff		 lea	 ecx, DWORD PTR _szTitle$505751[ebp]
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ

; 170  : 		if( eModeType == MT_TRAINING )
; 171  : 		{
; 172  : 			//광장 리소스
; 173  : 			for( int ePlaza = PT_BATTLE; ePlaza <= PT_GUILD; ++ePlaza )

  00097	33 ff		 xor	 edi, edi
  00099	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0009d	83 fe 04	 cmp	 esi, 4
  000a0	75 35		 jne	 SHORT $LN12@InitCommon
  000a2	47		 inc	 edi
$LL11@InitCommon:

; 174  : 			{
; 175  : 				GetPlazaTitle( szTitle, ePlaza );

  000a3	57		 push	 edi
  000a4	8d 85 50 fc ff
	ff		 lea	 eax, DWORD PTR _szTitle$505751[ebp]
  000aa	50		 push	 eax
  000ab	8b cb		 mov	 ecx, ebx
  000ad	e8 00 00 00 00	 call	 ?GetPlazaTitle@ioModeResourceManager@@QAEXAAVioHashString@@H@Z ; ioModeResourceManager::GetPlazaTitle

; 176  : 				AddModeIcon( kLoader, szTitle, eModeType, ePlaza, 0 );

  000b2	6a 00		 push	 0
  000b4	57		 push	 edi
  000b5	6a 04		 push	 4
  000b7	8d 85 50 fc ff
	ff		 lea	 eax, DWORD PTR _szTitle$505751[ebp]
  000bd	50		 push	 eax
  000be	8d 85 60 fc ff
	ff		 lea	 eax, DWORD PTR _kLoader$[ebp]
  000c4	50		 push	 eax
  000c5	8b cb		 mov	 ecx, ebx
  000c7	e8 00 00 00 00	 call	 ?AddModeIcon@ioModeResourceManager@@QAEXAAVioINILoader@@ABVioHashString@@HHH@Z ; ioModeResourceManager::AddModeIcon
  000cc	47		 inc	 edi
  000cd	83 ff 03	 cmp	 edi, 3
  000d0	7e d1		 jle	 SHORT $LL11@InitCommon

; 177  : 			}
; 178  : 		}
; 179  : 		else if( eModeType == MT_NONE || eModeType == MT_MYROOM )

  000d2	e9 91 00 00 00	 jmp	 $LN3@InitCommon
$LN12@InitCommon:
  000d7	3b f7		 cmp	 esi, edi
  000d9	74 2e		 je	 SHORT $LL6@InitCommon
  000db	83 fe 18	 cmp	 esi, 24			; 00000018H
  000de	74 29		 je	 SHORT $LL6@InitCommon

; 192  : 				}
; 193  : 			}
; 194  : 		}
; 195  : 		else
; 196  : 		{
; 197  : 			//일반 모드
; 198  : 			GetModeTitle( szTitle, eModeType );

  000e0	56		 push	 esi
  000e1	8d 85 50 fc ff
	ff		 lea	 eax, DWORD PTR _szTitle$505751[ebp]
  000e7	50		 push	 eax
  000e8	8b cb		 mov	 ecx, ebx
  000ea	e8 00 00 00 00	 call	 ?GetModeTitle@ioModeResourceManager@@QAEXAAVioHashString@@H@Z ; ioModeResourceManager::GetModeTitle

; 199  : 			AddModeIcon( kLoader, szTitle, eModeType, 0, 0 );

  000ef	57		 push	 edi
  000f0	57		 push	 edi
  000f1	56		 push	 esi
  000f2	8d 85 50 fc ff
	ff		 lea	 eax, DWORD PTR _szTitle$505751[ebp]
  000f8	50		 push	 eax
  000f9	8d 85 60 fc ff
	ff		 lea	 eax, DWORD PTR _kLoader$[ebp]
  000ff	50		 push	 eax
  00100	8b cb		 mov	 ecx, ebx
  00102	e8 00 00 00 00	 call	 ?AddModeIcon@ioModeResourceManager@@QAEXAAVioINILoader@@ABVioHashString@@HHH@Z ; ioModeResourceManager::AddModeIcon
  00107	eb 5f		 jmp	 SHORT $LN3@InitCommon
$LL6@InitCommon:

; 183  : 			{
; 184  : 				GetModeRoomTitle( szTitle, eRoom, false );

  00109	6a 00		 push	 0
  0010b	57		 push	 edi
  0010c	8d 85 50 fc ff
	ff		 lea	 eax, DWORD PTR _szTitle$505751[ebp]
  00112	50		 push	 eax
  00113	8b cb		 mov	 ecx, ebx
  00115	e8 00 00 00 00	 call	 ?GetModeRoomTitle@ioModeResourceManager@@QAEXAAVioHashString@@H_N@Z ; ioModeResourceManager::GetModeRoomTitle

; 185  : 				AddModeIcon( kLoader, szTitle, eModeType, eRoom, FALSE );

  0011a	6a 00		 push	 0
  0011c	57		 push	 edi
  0011d	56		 push	 esi
  0011e	8d 85 50 fc ff
	ff		 lea	 eax, DWORD PTR _szTitle$505751[ebp]
  00124	50		 push	 eax
  00125	8d 85 60 fc ff
	ff		 lea	 eax, DWORD PTR _kLoader$[ebp]
  0012b	50		 push	 eax
  0012c	8b cb		 mov	 ecx, ebx
  0012e	e8 00 00 00 00	 call	 ?AddModeIcon@ioModeResourceManager@@QAEXAAVioINILoader@@ABVioHashString@@HHH@Z ; ioModeResourceManager::AddModeIcon

; 186  : 
; 187  : 				//래더 - 진영전
; 188  : 				if( eRoom == MRT_LADDER )

  00133	83 ff 02	 cmp	 edi, 2
  00136	75 2a		 jne	 SHORT $LN4@InitCommon

; 189  : 				{
; 190  : 					GetModeRoomTitle( szTitle, eRoom, true );

  00138	6a 01		 push	 1
  0013a	57		 push	 edi
  0013b	8d 85 50 fc ff
	ff		 lea	 eax, DWORD PTR _szTitle$505751[ebp]
  00141	50		 push	 eax
  00142	8b cb		 mov	 ecx, ebx
  00144	e8 00 00 00 00	 call	 ?GetModeRoomTitle@ioModeResourceManager@@QAEXAAVioHashString@@H_N@Z ; ioModeResourceManager::GetModeRoomTitle

; 191  : 					AddModeIcon( kLoader, szTitle, eModeType, eRoom, TRUE );

  00149	6a 01		 push	 1
  0014b	57		 push	 edi
  0014c	56		 push	 esi
  0014d	8d 85 50 fc ff
	ff		 lea	 eax, DWORD PTR _szTitle$505751[ebp]
  00153	50		 push	 eax
  00154	8d 85 60 fc ff
	ff		 lea	 eax, DWORD PTR _kLoader$[ebp]
  0015a	50		 push	 eax
  0015b	8b cb		 mov	 ecx, ebx
  0015d	e8 00 00 00 00	 call	 ?AddModeIcon@ioModeResourceManager@@QAEXAAVioINILoader@@ABVioHashString@@HHH@Z ; ioModeResourceManager::AddModeIcon
$LN4@InitCommon:

; 180  : 		{
; 181  : 			//룸 타입별 리소스( 로비, 광장, 오늘의 모드 등)
; 182  : 			for( int eRoom = MRT_LOBBY; eRoom <= MRT_FIND_MODE; ++eRoom )

  00162	47		 inc	 edi
  00163	83 ff 05	 cmp	 edi, 5
  00166	7e a1		 jle	 SHORT $LL6@InitCommon
$LN3@InitCommon:

; 200  : 		}
; 201  : 	}

  00168	8d 8d 50 fc ff
	ff		 lea	 ecx, DWORD PTR _szTitle$505751[ebp]
  0016e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00172	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00178	46		 inc	 esi
  00179	83 fe 1c	 cmp	 esi, 28			; 0000001cH
  0017c	0f 8c 09 ff ff
	ff		 jl	 $LN15@InitCommon

; 202  : }

  00182	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00186	8d 8d 60 fc ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  0018c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
  00192	e8 00 00 00 00	 call	 __EH_epilog3_GS
  00197	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InitCommonModeIcon@ioModeResourceManager@@QAEXXZ$0:
  00000	8d 8d 60 fc ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1ioINILoader_e@@QAE@XZ
__unwindfunclet$?InitCommonModeIcon@ioModeResourceManager@@QAEXXZ$1:
  0000b	8d 8d 50 fc ff
	ff		 lea	 ecx, DWORD PTR _szTitle$505751[ebp]
  00011	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?InitCommonModeIcon@ioModeResourceManager@@QAEXXZ:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 8a 4c fc ff
	ff		 mov	 ecx, DWORD PTR [edx-948]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002e	33 c8		 xor	 ecx, eax
  00030	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00035	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InitCommonModeIcon@ioModeResourceManager@@QAEXXZ
  0003a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InitCommonModeIcon@ioModeResourceManager@@QAEXXZ ENDP	; ioModeResourceManager::InitCommonModeIcon
END
