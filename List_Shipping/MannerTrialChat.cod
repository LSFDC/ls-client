; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\GUI\MannerTrialChat.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?ms_Singleton@?$Singleton@VioMannerTrialChatManager@@@@1PAVioMannerTrialChatManager@@A ; Singleton<ioMannerTrialChatManager>::ms_Singleton
;	COMDAT ?ms_Singleton@?$Singleton@VioMannerTrialChatManager@@@@1PAVioMannerTrialChatManager@@A
_BSS	SEGMENT
?ms_Singleton@?$Singleton@VioMannerTrialChatManager@@@@1PAVioMannerTrialChatManager@@A DD 01H DUP (?) ; Singleton<ioMannerTrialChatManager>::ms_Singleton
_BSS	ENDS
PUBLIC	??1ChatItem@CMannerTrialChat@@QAE@XZ		; CMannerTrialChat::ChatItem::~ChatItem
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ChatItem@CMannerTrialChat@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ChatItem@CMannerTrialChat@@QAE@XZ$0
__ehfuncinfo$??1ChatItem@CMannerTrialChat@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ChatItem@CMannerTrialChat@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1ChatItem@CMannerTrialChat@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ChatItem@CMannerTrialChat@@QAE@XZ PROC		; CMannerTrialChat::ChatItem::~ChatItem, COMDAT
; _this$ = ecx
  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ChatItem@CMannerTrialChat@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00011	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00017	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001b	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  0001e	ff d6		 call	 esi
  00020	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00024	8b cf		 mov	 ecx, edi
  00026	ff d6		 call	 esi
  00028	e8 00 00 00 00	 call	 __EH_epilog3
  0002d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ChatItem@CMannerTrialChat@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??1ChatItem@CMannerTrialChat@@QAE@XZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ChatItem@CMannerTrialChat@@QAE@XZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ChatItem@CMannerTrialChat@@QAE@XZ ENDP		; CMannerTrialChat::ChatItem::~ChatItem
PUBLIC	??0ChatItem@CMannerTrialChat@@QAE@XZ		; CMannerTrialChat::ChatItem::ChatItem
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ChatItem@CMannerTrialChat@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ChatItem@CMannerTrialChat@@QAE@XZ$0
__ehfuncinfo$??0ChatItem@CMannerTrialChat@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ChatItem@CMannerTrialChat@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0ChatItem@CMannerTrialChat@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ChatItem@CMannerTrialChat@@QAE@XZ PROC		; CMannerTrialChat::ChatItem::ChatItem, COMDAT
; _this$ = ecx
  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ChatItem@CMannerTrialChat@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00011	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_??0ioHashString@@QAE@XZ
  00017	ff d6		 call	 esi
  00019	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001d	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00020	ff d6		 call	 esi
  00022	8b c7		 mov	 eax, edi
  00024	e8 00 00 00 00	 call	 __EH_epilog3
  00029	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ChatItem@CMannerTrialChat@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??0ChatItem@CMannerTrialChat@@QAE@XZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ChatItem@CMannerTrialChat@@QAE@XZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ChatItem@CMannerTrialChat@@QAE@XZ ENDP		; CMannerTrialChat::ChatItem::ChatItem
PUBLIC	??_C@_0CL@OAJFIAFG@ioMannerTrialChatManager?3?3GetTri@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?GetTrialTypeName@ioMannerTrialChatManager@@QAEPBDW4TrialType@1@@Z ; ioMannerTrialChatManager::GetTrialTypeName
EXTRN	__imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z:PROC
EXTRN	__imp_?GetSingleton@ioStringManager@@SAAAV1@XZ:PROC
;	COMDAT ??_C@_0CL@OAJFIAFG@ioMannerTrialChatManager?3?3GetTri@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\mannertrialchat.cpp
CONST	SEGMENT
??_C@_0CL@OAJFIAFG@ioMannerTrialChatManager?3?3GetTri@ DB 'ioMannerTrialC'
	DB	'hatManager::GetTrialTypeName', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?GetTrialTypeName@ioMannerTrialChatManager@@QAEPBDW4TrialType@1@@Z
_TEXT	SEGMENT
_eTrialType$ = 8					; size = 4
?GetTrialTypeName@ioMannerTrialChatManager@@QAEPBDW4TrialType@1@@Z PROC ; ioMannerTrialChatManager::GetTrialTypeName, COMDAT
; _this$ = ecx

; 164  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 165  : 	if( eTrialType == TT_NORMAL_CHAT )

  00003	8b 45 08	 mov	 eax, DWORD PTR _eTrialType$[ebp]

; 166  : 		return STR(1);

  00006	6a 00		 push	 0
  00008	83 f8 01	 cmp	 eax, 1
  0000b	75 03		 jne	 SHORT $LN18@GetTrialTy
  0000d	50		 push	 eax
  0000e	eb 45		 jmp	 SHORT $LN21@GetTrialTy
$LN18@GetTrialTy:

; 167  : 	else if( eTrialType == TT_CHANNEL_CHAT )

  00010	83 f8 03	 cmp	 eax, 3
  00013	75 04		 jne	 SHORT $LN16@GetTrialTy

; 168  : 		return STR(2);

  00015	6a 02		 push	 2
  00017	eb 3c		 jmp	 SHORT $LN21@GetTrialTy
$LN16@GetTrialTy:

; 169  : 	else if( eTrialType == TT_GUILD_CHAT )

  00019	83 f8 05	 cmp	 eax, 5
  0001c	75 04		 jne	 SHORT $LN14@GetTrialTy

; 170  : 		return STR(3);

  0001e	6a 03		 push	 3
  00020	eb 33		 jmp	 SHORT $LN21@GetTrialTy
$LN14@GetTrialTy:

; 171  : 	else if( eTrialType == TT_MEMO )

  00022	83 f8 04	 cmp	 eax, 4
  00025	75 03		 jne	 SHORT $LN12@GetTrialTy

; 172  : 		return STR(4);

  00027	50		 push	 eax
  00028	eb 2b		 jmp	 SHORT $LN21@GetTrialTy
$LN12@GetTrialTy:

; 173  : 	else if( eTrialType == TT_BATTLE_CHAT )

  0002a	83 f8 02	 cmp	 eax, 2
  0002d	75 04		 jne	 SHORT $LN10@GetTrialTy

; 174  : 		return STR(5);

  0002f	6a 05		 push	 5
  00031	eb 22		 jmp	 SHORT $LN21@GetTrialTy
$LN10@GetTrialTy:

; 175  : 	else if( eTrialType == TT_SERVER_LOBBY_CHAT )

  00033	83 f8 06	 cmp	 eax, 6
  00036	75 03		 jne	 SHORT $LN8@GetTrialTy

; 176  : 		return STR(6);

  00038	50		 push	 eax
  00039	eb 1a		 jmp	 SHORT $LN21@GetTrialTy
$LN8@GetTrialTy:

; 177  : 	else if( eTrialType == TT_WHOLE_SERVER_CHAT )

  0003b	83 f8 07	 cmp	 eax, 7
  0003e	75 03		 jne	 SHORT $LN6@GetTrialTy

; 178  : 		return STR(7);

  00040	50		 push	 eax
  00041	eb 12		 jmp	 SHORT $LN21@GetTrialTy
$LN6@GetTrialTy:

; 179  : 	else if( eTrialType == TT_LADDER_CHAT )

  00043	83 f8 08	 cmp	 eax, 8
  00046	75 03		 jne	 SHORT $LN4@GetTrialTy

; 180  : 		return STR(8);

  00048	50		 push	 eax
  00049	eb 0a		 jmp	 SHORT $LN21@GetTrialTy
$LN4@GetTrialTy:

; 181  : 	else if( eTrialType == TT_WHOLE_SERVER_RAINBOW_CHAT )

  0004b	83 f8 09	 cmp	 eax, 9
  0004e	75 03		 jne	 SHORT $LN2@GetTrialTy

; 182  : 		return STR(9);

  00050	50		 push	 eax
  00051	eb 02		 jmp	 SHORT $LN21@GetTrialTy
$LN2@GetTrialTy:

; 183  : 	else
; 184  : 		return STR(10);

  00053	6a 0a		 push	 10			; 0000000aH
$LN21@GetTrialTy:
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@OAJFIAFG@ioMannerTrialChatManager?3?3GetTri@
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioStringManager@@SAAAV1@XZ
  00065	8b c8		 mov	 ecx, eax
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z

; 185  : }

  0006d	5d		 pop	 ebp
  0006e	c2 04 00	 ret	 4
?GetTrialTypeName@ioMannerTrialChatManager@@QAEPBDW4TrialType@1@@Z ENDP ; ioMannerTrialChatManager::GetTrialTypeName
_TEXT	ENDS
PUBLIC	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty, COMDAT
; _this$ = ecx

; 1551 : 		return (this->_Mysize == 0);

  00000	33 c0		 xor	 eax, eax
  00002	39 41 10	 cmp	 DWORD PTR [ecx+16], eax
  00005	0f 94 c0	 sete	 al

; 1552 : 		}

  00008	c3		 ret	 0
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
_TEXT	ENDS
PUBLIC	?size@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEIXZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
;	COMDAT ?size@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEIXZ PROC ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::size, COMDAT
; _this$ = ecx

; 1150 : 		return (this->_Mysize);

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 1151 : 		}

  00003	c3		 ret	 0
?size@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEIXZ ENDP ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::size
_TEXT	ENDS
PUBLIC	?empty@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBE_NXZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::empty
; Function compile flags: /Ogsp
;	COMDAT ?empty@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBE_NXZ PROC ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::empty, COMDAT
; _this$ = ecx

; 1160 : 		return (this->_Mysize == 0);

  00000	33 c0		 xor	 eax, eax
  00002	39 41 10	 cmp	 DWORD PTR [ecx+16], eax
  00005	0f 94 c0	 sete	 al

; 1161 : 		}

  00008	c3		 ret	 0
?empty@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBE_NXZ ENDP ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::empty
_TEXT	ENDS
PUBLIC	??0?$Singleton@VioMannerTrialChatManager@@@@QAE@XZ ; Singleton<ioMannerTrialChatManager>::Singleton<ioMannerTrialChatManager>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
;	COMDAT ??0?$Singleton@VioMannerTrialChatManager@@@@QAE@XZ
_TEXT	SEGMENT
??0?$Singleton@VioMannerTrialChatManager@@@@QAE@XZ PROC	; Singleton<ioMannerTrialChatManager>::Singleton<ioMannerTrialChatManager>, COMDAT
; _this$ = ecx

; 27   : 	Singleton()

  00000	8b c1		 mov	 eax, ecx

; 28   : 	{
; 29   : 		assert( !ms_Singleton );
; 30   : 		int offset = (int)(T*)1 - (int)(Singleton <T>*)(T*)1;
; 31   : 		ms_Singleton = (T*)((int)this + offset);

  00002	8d 48 fc	 lea	 ecx, DWORD PTR [eax-4]
  00005	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioMannerTrialChatManager@@@@1PAVioMannerTrialChatManager@@A, ecx ; Singleton<ioMannerTrialChatManager>::ms_Singleton

; 32   : 	}

  0000b	c3		 ret	 0
??0?$Singleton@VioMannerTrialChatManager@@@@QAE@XZ ENDP	; Singleton<ioMannerTrialChatManager>::Singleton<ioMannerTrialChatManager>
_TEXT	ENDS
PUBLIC	??1?$Singleton@VioMannerTrialChatManager@@@@QAE@XZ ; Singleton<ioMannerTrialChatManager>::~Singleton<ioMannerTrialChatManager>
; Function compile flags: /Ogsp
;	COMDAT ??1?$Singleton@VioMannerTrialChatManager@@@@QAE@XZ
_TEXT	SEGMENT
??1?$Singleton@VioMannerTrialChatManager@@@@QAE@XZ PROC	; Singleton<ioMannerTrialChatManager>::~Singleton<ioMannerTrialChatManager>, COMDAT
; _this$ = ecx

; 36   : 		assert( ms_Singleton );
; 37   : 		ms_Singleton = 0;

  00000	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioMannerTrialChatManager@@@@1PAVioMannerTrialChatManager@@A, 0 ; Singleton<ioMannerTrialChatManager>::ms_Singleton

; 38   : 	}

  00007	c3		 ret	 0
??1?$Singleton@VioMannerTrialChatManager@@@@QAE@XZ ENDP	; Singleton<ioMannerTrialChatManager>::~Singleton<ioMannerTrialChatManager>
_TEXT	ENDS
PUBLIC	?GetSingleton@?$Singleton@VioMannerTrialChatManager@@@@SAAAVioMannerTrialChatManager@@XZ ; Singleton<ioMannerTrialChatManager>::GetSingleton
; Function compile flags: /Ogsp
;	COMDAT ?GetSingleton@?$Singleton@VioMannerTrialChatManager@@@@SAAAVioMannerTrialChatManager@@XZ
_TEXT	SEGMENT
?GetSingleton@?$Singleton@VioMannerTrialChatManager@@@@SAAAVioMannerTrialChatManager@@XZ PROC ; Singleton<ioMannerTrialChatManager>::GetSingleton, COMDAT

; 42   : 		assert( ms_Singleton );
; 43   : 		return (*ms_Singleton);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioMannerTrialChatManager@@@@1PAVioMannerTrialChatManager@@A ; Singleton<ioMannerTrialChatManager>::ms_Singleton

; 44   : 	}

  00005	c3		 ret	 0
?GetSingleton@?$Singleton@VioMannerTrialChatManager@@@@SAAAVioMannerTrialChatManager@@XZ ENDP ; Singleton<ioMannerTrialChatManager>::GetSingleton
_TEXT	ENDS
PUBLIC	??E?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator++
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
;	COMDAT ??E?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator++, COMDAT
; _this$ = ecx

; 364  : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 365  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 366  : 		_Mydeque *_Mycont = ((_Mydeque *)this->_Getcont());
; 367  : 		if (_Mycont == 0
; 368  : 			|| _Mycont->_Myoff + _Mycont->_Mysize <= this->_Myoff)
; 369  : 		{	// report error
; 370  : 		_DEBUG_ERROR("deque iterator not incrementable");
; 371  : 		_SCL_SECURE_OUT_OF_RANGE;
; 372  : 		}
; 373  : 
; 374  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 375  : 		_Mydeque *_Mycont = ((_Mydeque *)this->_Getcont());
; 376  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 377  : 		_SCL_SECURE_VALIDATE_RANGE(
; 378  : 			this->_Myoff < _Mycont->_Myoff + _Mycont->_Mysize);
; 379  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 380  : 
; 381  : 		++_Myoff;

  00002	ff 40 08	 inc	 DWORD PTR [eax+8]

; 382  : 		return (*this);
; 383  : 		}

  00005	c3		 ret	 0
??E?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator++
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator==
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())
; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 331  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator==
_TEXT	ENDS
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator!=, COMDAT
; _this$ = ecx

; 334  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 335  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 336  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xfunctional
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@K@std@@QBE_NABK0@Z PROC			; std::less<unsigned long>::operator(), COMDAT
; _this$ = ecx

; 124  : 		{	// apply operator< to operands

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 125  : 		return (_Left < _Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000b	3b 01		 cmp	 eax, DWORD PTR [ecx]
  0000d	1b c0		 sbb	 eax, eax
  0000f	f7 d8		 neg	 eax

; 126  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1exception@std@@UAE@XZ
  00012	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00016	74 07		 je	 SHORT $LN1@scalar
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	59		 pop	 ecx
$LN1@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	return (_Where);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 58   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 62   : 	}

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??0?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAE@XZ ; std::allocator<CMannerTrialChat::ChatItem *>::allocator<CMannerTrialChat::ChatItem *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAE@XZ PROC ; std::allocator<CMannerTrialChat::ChatItem *>::allocator<CMannerTrialChat::ChatItem *>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAE@XZ ENDP ; std::allocator<CMannerTrialChat::ChatItem *>::allocator<CMannerTrialChat::ChatItem *>
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 490  : 		{	// find length of null-terminated string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 491  : 		return (_CSTD strlen(_First));

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL3@length:
  00009	8a 08		 mov	 cl, BYTE PTR [eax]
  0000b	40		 inc	 eax
  0000c	84 c9		 test	 cl, cl
  0000e	75 f9		 jne	 SHORT $LL3@length
  00010	2b c2		 sub	 eax, edx

; 492  : 		}

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::_Mynode
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 123  : 		}

  00002	c3		 ret	 0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
EXTRN	_memcpy:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 496  : 		{	// copy [_First1, _First1 + _Count) to [_First2, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 498  : 		}

  00003	5d		 pop	 ebp

; 497  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

  00004	e9 00 00 00 00	 jmp	 _memcpy
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogsp
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 526  : 		{	// assign an element

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 527  : 		_Left = _Right;

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	8a 00		 mov	 al, BYTE PTR [eax]
  00008	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000b	88 01		 mov	 BYTE PTR [ecx], al

; 528  : 		}

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@IBEXXZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
CONST	SEGMENT
??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@ DB 'deque<T> too long', 00H ; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@IBEXXZ PROC ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Xlen, COMDAT
; _this$ = ecx

; 1580 : 		_Xlength_error("deque<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
  0000b	cc		 int	 3
?_Xlen@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@IBEXXZ ENDP ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAE@ABV01@@Z ; std::allocator<CMannerTrialChat::ChatItem *>::allocator<CMannerTrialChat::ChatItem *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAE@ABV01@@Z PROC ; std::allocator<CMannerTrialChat::ChatItem *>::allocator<CMannerTrialChat::ChatItem *>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<CMannerTrialChat::ChatItem *>::allocator<CMannerTrialChat::ChatItem *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAUChatItem@CMannerTrialChat@@I@Z ; std::allocator<CMannerTrialChat::ChatItem *>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAUChatItem@CMannerTrialChat@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAUChatItem@CMannerTrialChat@@I@Z PROC ; std::allocator<CMannerTrialChat::ChatItem *>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAUChatItem@CMannerTrialChat@@I@Z ENDP ; std::allocator<CMannerTrialChat::ChatItem *>::deallocate
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAPAUChatItem@CMannerTrialChat@@I@Z ; std::allocator<CMannerTrialChat::ChatItem * *>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAPAUChatItem@CMannerTrialChat@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAPAUChatItem@CMannerTrialChat@@I@Z PROC ; std::allocator<CMannerTrialChat::ChatItem * *>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAPAUChatItem@CMannerTrialChat@@I@Z ENDP ; std::allocator<CMannerTrialChat::ChatItem * *>::deallocate
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Isnil
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 612  : 		return ((char&)(*_Pnode)._Isnil);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 15	 add	 eax, 21			; 00000015H

; 613  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Left
; Function compile flags: /Ogsp
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Parent
; Function compile flags: /Ogsp
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 628  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Right
; Function compile flags: /Ogsp
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 633  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBKPAVCMannerTrialChat@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Myval
; Function compile flags: /Ogsp
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBKPAVCMannerTrialChat@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBKPAVCMannerTrialChat@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 637  : 		return ((reference)(*_Pnode)._Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 638  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBKPAVCMannerTrialChat@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Compat@?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEXABV12@@Z ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Compat
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
;	COMDAT ?_Compat@?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Compat, COMDAT
; _this$ = ecx

; 538  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Compat
_TEXT	ENDS
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKPAVCMannerTrialChat@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKPAVCMannerTrialChat@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKPAVCMannerTrialChat@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 		if (this->_Getcont() == 0
; 233  : 			|| this->_Ptr == 0
; 234  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)
; 235  : 			{	// report error
; 236  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 237  : 			_SCL_SECURE_OUT_OF_RANGE;
; 238  : 			}
; 239  : 
; 240  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 241  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 242  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 243  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 244  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 245  : 
; 246  : 		return (_Mytree::_Myval(this->_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 247  : 		}

  00005	c3		 ret	 0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKPAVCMannerTrialChat@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QBEIXZ ; std::allocator<CMannerTrialChat::ChatItem *>::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QBEIXZ PROC ; std::allocator<CMannerTrialChat::ChatItem *>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QBEIXZ ENDP ; std::allocator<CMannerTrialChat::ChatItem *>::max_size
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Color
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 607  : 		return ((char&)(*_Pnode)._Color);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 14	 add	 eax, 20			; 00000014H

; 608  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Min
; Function compile flags: /Ogsp
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Min
$LL2@Min:

; 650  : 			_Pnode = _Left(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Min:

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00010	74 f6		 je	 SHORT $LL2@Min

; 651  : 		return (_Pnode);
; 652  : 		}

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?_Min@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
; Function compile flags: /Ogsp
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 65   : 		{	// construct from pointers

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0
  00005	83 60 04 00	 and	 DWORD PTR [eax+4], 0

; 66   : 		}

  00009	c3		 ret	 0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
; Function compile flags: /Ogsp
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 111  : 		{	// construct orphaned iterator

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0
  00005	83 60 04 00	 and	 DWORD PTR [eax+4], 0

; 112  : 		}

  00009	c3		 ret	 0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Max
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Max
$LL2@Max:

; 643  : 			_Pnode = _Right(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Max:

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00011	74 f5		 je	 SHORT $LL2@Max

; 644  : 		return (_Pnode);
; 645  : 		}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Max@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0>::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC ; std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0>::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0>, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 41   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0>::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0>
_TEXT	ENDS
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx

; 129  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 130  : 		_Lockit _Lock(_LOCK_DEBUG);
; 131  : 		_Orphan_me();
; 132  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 133  : 		}

  00000	c3		 ret	 0
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Function compile flags: /Ogsp
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx

; 136  : 		{	// adopt this iterator by parent

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 137  : 		if (_Parent != 0)

  00003	8b 45 08	 mov	 eax, DWORD PTR __Parent$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 04		 je	 SHORT $LN1@Adopt

; 138  : 			{	// have a parent, do adoption
; 139  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;
; 140  : 
; 141  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 142  : 			if (_Myproxy != _Parent_proxy)
; 143  : 				{	// change parentage
; 144  : 				_Lockit _Lock(_LOCK_DEBUG);
; 145  : 				_Orphan_me();
; 146  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;
; 147  : 				_Parent_proxy->_Myfirstiter = this;
; 148  : 				_Myproxy = _Parent_proxy;
; 149  : 				}
; 150  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 151  : 			_Myproxy = _Parent_proxy;

  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@Adopt:

; 152  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 153  : 			}
; 154  : 		}

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
; Function compile flags: /Ogsp
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx

; 163  : 		return (_Myproxy == 0 ? 0 : _Myproxy->_Mycont);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	85 c0		 test	 eax, eax
  00004	75 01		 jne	 SHORT $LN3@Getcont

; 164  : 		}

  00006	c3		 ret	 0
$LN3@Getcont:

; 163  : 		return (_Myproxy == 0 ? 0 : _Myproxy->_Mycont);

  00007	8b 00		 mov	 eax, DWORD PTR [eax]

; 164  : 		}

  00009	c3		 ret	 0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
PUBLIC	??$?0PAUChatItem@CMannerTrialChat@@@?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@QAE@ABV?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z ; std::allocator<CMannerTrialChat::ChatItem * *>::allocator<CMannerTrialChat::ChatItem * *><CMannerTrialChat::ChatItem *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$?0PAUChatItem@CMannerTrialChat@@@?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@QAE@ABV?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0PAUChatItem@CMannerTrialChat@@@?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@QAE@ABV?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z PROC ; std::allocator<CMannerTrialChat::ChatItem * *>::allocator<CMannerTrialChat::ChatItem * *><CMannerTrialChat::ChatItem *>, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

  00002	c2 04 00	 ret	 4
??$?0PAUChatItem@CMannerTrialChat@@@?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@QAE@ABV?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z ENDP ; std::allocator<CMannerTrialChat::ChatItem * *>::allocator<CMannerTrialChat::ChatItem * *><CMannerTrialChat::ChatItem *>
_TEXT	ENDS
PUBLIC	??$?0PAUChatItem@CMannerTrialChat@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><CMannerTrialChat::ChatItem *>
; Function compile flags: /Ogsp
;	COMDAT ??$?0PAUChatItem@CMannerTrialChat@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0PAUChatItem@CMannerTrialChat@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><CMannerTrialChat::ChatItem *>, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

  00002	c2 04 00	 ret	 4
??$?0PAUChatItem@CMannerTrialChat@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><CMannerTrialChat::ChatItem *>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@PAUChatItem@CMannerTrialChat@@@std@@YAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@@Z ; std::_Allocate<CMannerTrialChat::ChatItem *>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@PAUChatItem@CMannerTrialChat@@@std@@YAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@@Z
_TEXT	SEGMENT
$T507881 = -12						; size = 12
$T507886 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAUChatItem@CMannerTrialChat@@@std@@YAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@@Z PROC ; std::_Allocate<CMannerTrialChat::ChatItem *>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3e		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate
  00017	8b c1		 mov	 eax, ecx
  00019	c1 e0 02	 shl	 eax, 2
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	59		 pop	 ecx
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 26		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	83 65 08 00	 and	 DWORD PTR $T507886[ebp], 0
  0002b	8d 45 08	 lea	 eax, DWORD PTR $T507886[ebp]
  0002e	50		 push	 eax
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T507881[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003d	8d 45 f4	 lea	 eax, DWORD PTR $T507881[ebp]
  00040	50		 push	 eax
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T507881[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  0004d	c9		 leave
  0004e	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@PAUChatItem@CMannerTrialChat@@@std@@YAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@@Z ENDP ; std::_Allocate<CMannerTrialChat::ChatItem *>
_TEXT	ENDS
PUBLIC	??$addressof@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@YAPAU?$pair@$$CBKPAVCMannerTrialChat@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned long const ,CMannerTrialChat *> >
; Function compile flags: /Ogsp
;	COMDAT ??$addressof@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@YAPAU?$pair@$$CBKPAVCMannerTrialChat@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@YAPAU?$pair@$$CBKPAVCMannerTrialChat@@@0@AAU10@@Z PROC ; std::addressof<std::pair<unsigned long const ,CMannerTrialChat *> >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@YAPAU?$pair@$$CBKPAVCMannerTrialChat@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<unsigned long const ,CMannerTrialChat *> >
_TEXT	ENDS
PUBLIC	??$_Kfn@$$CBKPAVCMannerTrialChat@@@?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCMannerTrialChat@@@1@@Z ; std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0>::_Kfn<unsigned long const ,CMannerTrialChat *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??$_Kfn@$$CBKPAVCMannerTrialChat@@@?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCMannerTrialChat@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBKPAVCMannerTrialChat@@@?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCMannerTrialChat@@@1@@Z PROC ; std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0>::_Kfn<unsigned long const ,CMannerTrialChat *>, COMDAT

; 66   : 		static const _Kty& _Kfn(const _STD pair<_Ty1, _Ty2>& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 		{	// extract key from element value
; 68   : 		return (_Val.first);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 69   : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Kfn@$$CBKPAVCMannerTrialChat@@@?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCMannerTrialChat@@@1@@Z ENDP ; std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0>::_Kfn<unsigned long const ,CMannerTrialChat *>
_TEXT	ENDS
PUBLIC	??$_Allocate@PAPAUChatItem@CMannerTrialChat@@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@IPAPAPAU12@@Z ; std::_Allocate<CMannerTrialChat::ChatItem * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Allocate@PAPAUChatItem@CMannerTrialChat@@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@IPAPAPAU12@@Z
_TEXT	SEGMENT
$T507895 = -12						; size = 12
$T507899 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAPAUChatItem@CMannerTrialChat@@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@IPAPAPAU12@@Z PROC ; std::_Allocate<CMannerTrialChat::ChatItem * *>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3e		 je	 SHORT $LN5@Allocate@2

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate@2
  00017	8b c1		 mov	 eax, ecx
  00019	c1 e0 02	 shl	 eax, 2
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	59		 pop	 ecx
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 26		 jne	 SHORT $LN5@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	83 65 08 00	 and	 DWORD PTR $T507899[ebp], 0
  0002b	8d 45 08	 lea	 eax, DWORD PTR $T507899[ebp]
  0002e	50		 push	 eax
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T507895[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003d	8d 45 f4	 lea	 eax, DWORD PTR $T507895[ebp]
  00040	50		 push	 eax
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T507895[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:

; 40   : 	}

  0004d	c9		 leave
  0004e	c3		 ret	 0
$LN9@Allocate@2:
??$_Allocate@PAPAUChatItem@CMannerTrialChat@@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@IPAPAPAU12@@Z ENDP ; std::_Allocate<CMannerTrialChat::ChatItem * *>
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
$T507904 = -12						; size = 12
$T507908 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3e		 je	 SHORT $LN5@Allocate@3

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	1f		 cmp	 ecx, 536870911		; 1fffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate@3
  00017	8b c1		 mov	 eax, ecx
  00019	c1 e0 03	 shl	 eax, 3
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	59		 pop	 ecx
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 26		 jne	 SHORT $LN5@Allocate@3
$LN1@Allocate@3:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	83 65 08 00	 and	 DWORD PTR $T507908[ebp], 0
  0002b	8d 45 08	 lea	 eax, DWORD PTR $T507908[ebp]
  0002e	50		 push	 eax
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T507904[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003d	8d 45 f4	 lea	 eax, DWORD PTR $T507904[ebp]
  00040	50		 push	 eax
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T507904[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@3:
$LN5@Allocate@3:

; 40   : 	}

  0004d	c9		 leave
  0004e	c3		 ret	 0
$LN9@Allocate@3:
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Node><std::pair<unsigned long const ,CMannerTrialChat *> >
; Function compile flags: /Ogsp
;	COMDAT ??$?0U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Node><std::pair<unsigned long const ,CMannerTrialChat *> >, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Node><std::pair<unsigned long const ,CMannerTrialChat *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Node>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T507916 = -12						; size = 12
$T507920 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate@4

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 aa aa aa
	0a		 cmp	 ecx, 178956970		; 0aaaaaaaH
  00015	77 0e		 ja	 SHORT $LN1@Allocate@4
  00017	6b c9 18	 imul	 ecx, 24			; 00000018H
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate@4
$LN1@Allocate@4:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T507920[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T507920[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T507916[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T507916[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T507916[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@4:
$LN5@Allocate@4:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate@4:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >::max_size
_TEXT	ENDS
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::operator--
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 83   : 		{	// predecrement

  00000	8b c1		 mov	 eax, ecx

; 84   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	53		 push	 ebx
  00005	32 db		 xor	 bl, bl
  00007	38 59 15	 cmp	 BYTE PTR [ecx+21], bl
  0000a	74 07		 je	 SHORT $LN8@operator

; 85   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

  0000c	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
  00011	5b		 pop	 ebx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00012	c3		 ret	 0
$LN8@operator:

; 86   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	38 5a 15	 cmp	 BYTE PTR [edx+21], bl
  00018	74 07		 je	 SHORT $LN44@operator

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0001a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001d	eb 17		 jmp	 SHORT $LN46@operator

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

$LL22@operator:
  0001f	8b d1		 mov	 edx, ecx
$LN44@operator:
  00021	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00024	38 59 15	 cmp	 BYTE PTR [ecx+21], bl
  00027	74 f6		 je	 SHORT $LL22@operator

; 89   : 		else

  00029	eb 17		 jmp	 SHORT $LN45@operator
$LL4@operator:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0002f	75 0a		 jne	 SHORT $LN3@operator

; 94   : 				_Ptr = _Pnode;	// ==> parent while left subtree

  00031	89 10		 mov	 DWORD PTR [eax], edx
  00033	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
$LN46@operator:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  00036	38 5a 15	 cmp	 BYTE PTR [edx+21], bl
  00039	74 f0		 je	 SHORT $LL4@operator
$LN3@operator:

; 95   : 			if (_Mytree::_Isnil(_Ptr))

  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	38 59 15	 cmp	 BYTE PTR [ecx+21], bl
  00040	75 02		 jne	 SHORT $LN1@operator
$LN45@operator:

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

  00042	89 10		 mov	 DWORD PTR [eax], edx
$LN1@operator:
  00044	5b		 pop	 ebx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00045	c3		 ret	 0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
PUBLIC	??$forward@AAPAVCMannerTrialChat@@@std@@YAAAPAVCMannerTrialChat@@AAPAV1@@Z ; std::forward<CMannerTrialChat * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAPAVCMannerTrialChat@@@std@@YAAAPAVCMannerTrialChat@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVCMannerTrialChat@@@std@@YAAAPAVCMannerTrialChat@@AAPAV1@@Z PROC ; std::forward<CMannerTrialChat * &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAVCMannerTrialChat@@@std@@YAAAPAVCMannerTrialChat@@AAPAV1@@Z ENDP ; std::forward<CMannerTrialChat * &>
_TEXT	ENDS
PUBLIC	??$forward@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@YA$$QAU?$pair@$$CBKPAVCMannerTrialChat@@@0@AAU10@@Z ; std::forward<std::pair<unsigned long const ,CMannerTrialChat *> >
; Function compile flags: /Ogsp
;	COMDAT ??$forward@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@YA$$QAU?$pair@$$CBKPAVCMannerTrialChat@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@YA$$QAU?$pair@$$CBKPAVCMannerTrialChat@@@0@AAU10@@Z PROC ; std::forward<std::pair<unsigned long const ,CMannerTrialChat *> >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@YA$$QAU?$pair@$$CBKPAVCMannerTrialChat@@@0@AAU10@@Z ENDP ; std::forward<std::pair<unsigned long const ,CMannerTrialChat *> >
_TEXT	ENDS
PUBLIC	??$forward@ABQAUChatItem@CMannerTrialChat@@@std@@YAABQAUChatItem@CMannerTrialChat@@ABQAU12@@Z ; std::forward<CMannerTrialChat::ChatItem * const &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@ABQAUChatItem@CMannerTrialChat@@@std@@YAABQAUChatItem@CMannerTrialChat@@ABQAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAUChatItem@CMannerTrialChat@@@std@@YAABQAUChatItem@CMannerTrialChat@@ABQAU12@@Z PROC ; std::forward<CMannerTrialChat::ChatItem * const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABQAUChatItem@CMannerTrialChat@@@std@@YAABQAUChatItem@CMannerTrialChat@@ABQAU12@@Z ENDP ; std::forward<CMannerTrialChat::ChatItem * const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAPAUChatItem@CMannerTrialChat@@PAPAU12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAPAUChatItem@CMannerTrialChat@@0@Z ; std::_Ptr_cat<CMannerTrialChat::ChatItem * *,CMannerTrialChat::ChatItem * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAPAUChatItem@CMannerTrialChat@@PAPAU12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAPAUChatItem@CMannerTrialChat@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAPAUChatItem@CMannerTrialChat@@PAPAU12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAPAUChatItem@CMannerTrialChat@@0@Z PROC ; std::_Ptr_cat<CMannerTrialChat::ChatItem * *,CMannerTrialChat::ChatItem * *>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@PAPAUChatItem@CMannerTrialChat@@PAPAU12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAPAUChatItem@CMannerTrialChat@@0@Z ENDP ; std::_Ptr_cat<CMannerTrialChat::ChatItem * *,CMannerTrialChat::ChatItem * *>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAPAUChatItem@CMannerTrialChat@@PAPAU12@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@00AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<CMannerTrialChat::ChatItem * *,CMannerTrialChat::ChatItem * *>
EXTRN	__imp__memmove:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_copy@PAPAUChatItem@CMannerTrialChat@@PAPAU12@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@00AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@PAPAUChatItem@CMannerTrialChat@@PAPAU12@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@00AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<CMannerTrialChat::ChatItem * *,CMannerTrialChat::ChatItem * *>, COMDAT

; 399  : 	{	// copy [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 400  : 	_DEBUG_RANGE(_First, _Last);
; 401  : 	_DEBUG_POINTER(_Dest);
; 402  : 	size_t _Count = (size_t)(_Last - _First);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2

; 403  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 404  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 405  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninit_copy@PAPAUChatItem@CMannerTrialChat@@PAPAU12@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@00AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<CMannerTrialChat::ChatItem * *,CMannerTrialChat::ChatItem * *>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAPAPAUChatItem@CMannerTrialChat@@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@@Z ; std::_Val_type<CMannerTrialChat::ChatItem * * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAPAPAUChatItem@CMannerTrialChat@@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAPAUChatItem@CMannerTrialChat@@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@@Z PROC ; std::_Val_type<CMannerTrialChat::ChatItem * * *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAPAPAUChatItem@CMannerTrialChat@@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@@Z ENDP ; std::_Val_type<CMannerTrialChat::ChatItem * * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@0AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<CMannerTrialChat::ChatItem * *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@0AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@0AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<CMannerTrialChat::ChatItem * *> >, COMDAT

; 105  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@0AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<CMannerTrialChat::ChatItem * *> >
_TEXT	ENDS
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??$_Construct@PAUChatItem@CMannerTrialChat@@ABQAU12@@std@@YAXPAPAUChatItem@CMannerTrialChat@@ABQAU12@@Z ; std::_Construct<CMannerTrialChat::ChatItem *,CMannerTrialChat::ChatItem * const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Construct@PAUChatItem@CMannerTrialChat@@ABQAU12@@std@@YAXPAPAUChatItem@CMannerTrialChat@@ABQAU12@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAUChatItem@CMannerTrialChat@@ABQAU12@@std@@YAXPAPAUChatItem@CMannerTrialChat@@ABQAU12@@Z PROC ; std::_Construct<CMannerTrialChat::ChatItem *,CMannerTrialChat::ChatItem * const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@Construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@Construct:

; 49   : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Construct@PAUChatItem@CMannerTrialChat@@ABQAU12@@std@@YAXPAPAUChatItem@CMannerTrialChat@@ABQAU12@@Z ENDP ; std::_Construct<CMannerTrialChat::ChatItem *,CMannerTrialChat::ChatItem * const &>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAUChatItem@CMannerTrialChat@@@std@@YAXPAPAUChatItem@CMannerTrialChat@@@Z ; std::_Destroy<CMannerTrialChat::ChatItem *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy@PAUChatItem@CMannerTrialChat@@@std@@YAXPAPAUChatItem@CMannerTrialChat@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAUChatItem@CMannerTrialChat@@@std@@YAXPAPAUChatItem@CMannerTrialChat@@@Z PROC ; std::_Destroy<CMannerTrialChat::ChatItem *>, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAUChatItem@CMannerTrialChat@@@std@@YAXPAPAUChatItem@CMannerTrialChat@@@Z ENDP ; std::_Destroy<CMannerTrialChat::ChatItem *>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAPAUChatItem@CMannerTrialChat@@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@@Z ; std::_Destroy<CMannerTrialChat::ChatItem * *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy@PAPAUChatItem@CMannerTrialChat@@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAPAUChatItem@CMannerTrialChat@@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@@Z PROC ; std::_Destroy<CMannerTrialChat::ChatItem * *>, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAPAUChatItem@CMannerTrialChat@@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@@Z ENDP ; std::_Destroy<CMannerTrialChat::ChatItem * *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@YAXPAU?$pair@$$CBKPAVCMannerTrialChat@@@0@@Z ; std::_Destroy<std::pair<unsigned long const ,CMannerTrialChat *> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@YAXPAU?$pair@$$CBKPAVCMannerTrialChat@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@YAXPAU?$pair@$$CBKPAVCMannerTrialChat@@@0@@Z PROC ; std::_Destroy<std::pair<unsigned long const ,CMannerTrialChat *> >, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@YAXPAU?$pair@$$CBKPAVCMannerTrialChat@@@0@@Z ENDP ; std::_Destroy<std::pair<unsigned long const ,CMannerTrialChat *> >
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ; std::_Destroy<std::_Container_proxy>
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z PROC ; std::_Destroy<std::_Container_proxy>, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ENDP ; std::_Destroy<std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > > &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > > &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$_Fill_n@PAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@IABQAPAU12@@Z ; std::_Fill_n<CMannerTrialChat::ChatItem * * *,unsigned int,CMannerTrialChat::ChatItem * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Fill_n@PAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@IABQAPAU12@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill_n@PAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@IABQAPAU12@@Z PROC ; std::_Fill_n<CMannerTrialChat::ChatItem * * *,unsigned int,CMannerTrialChat::ChatItem * *>, COMDAT

; 2723 : 	{	// copy _Val _Count times through [_Dest, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2724 : 	for (; 0 < _Count; --_Count, ++_Dest)

  00003	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00007	76 16		 jbe	 SHORT $LN1@Fill_n
  00009	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
$LL3@Fill_n:

; 2725 : 		*_Dest = _Val;

  0000c	8b 4d 10	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000f	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00011	ff 4d 0c	 dec	 DWORD PTR __Count$[ebp]
  00014	89 08		 mov	 DWORD PTR [eax], ecx
  00016	83 c0 04	 add	 eax, 4
  00019	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  0001d	77 ed		 ja	 SHORT $LL3@Fill_n
$LN1@Fill_n:

; 2726 : 	}

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??$_Fill_n@PAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@IABQAPAU12@@Z ENDP ; std::_Fill_n<CMannerTrialChat::ChatItem * * *,unsigned int,CMannerTrialChat::ChatItem * *>
_TEXT	ENDS
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > > &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > > &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$forward@$$CBK@std@@YA$$QBKABK@Z		; std::forward<unsigned long const >
; Function compile flags: /Ogsp
;	COMDAT ??$forward@$$CBK@std@@YA$$QBKABK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@$$CBK@std@@YA$$QBKABK@Z PROC			; std::forward<unsigned long const >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@$$CBK@std@@YA$$QBKABK@Z ENDP			; std::forward<unsigned long const >
_TEXT	ENDS
PUBLIC	??$forward@PAVCMannerTrialChat@@@std@@YA$$QAPAVCMannerTrialChat@@AAPAV1@@Z ; std::forward<CMannerTrialChat *>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@PAVCMannerTrialChat@@@std@@YA$$QAPAVCMannerTrialChat@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVCMannerTrialChat@@@std@@YA$$QAPAVCMannerTrialChat@@AAPAV1@@Z PROC ; std::forward<CMannerTrialChat *>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@PAVCMannerTrialChat@@@std@@YA$$QAPAVCMannerTrialChat@@AAPAV1@@Z ENDP ; std::forward<CMannerTrialChat *>
_TEXT	ENDS
PUBLIC	??$move@ABK@std@@YA$$QBKABK@Z			; std::move<unsigned long const &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@ABK@std@@YA$$QBKABK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@ABK@std@@YA$$QBKABK@Z PROC			; std::move<unsigned long const &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@ABK@std@@YA$$QBKABK@Z ENDP			; std::move<unsigned long const &>
_TEXT	ENDS
PUBLIC	??$move@AAPAVCMannerTrialChat@@@std@@YA$$QAPAVCMannerTrialChat@@AAPAV1@@Z ; std::move<CMannerTrialChat * &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@AAPAVCMannerTrialChat@@@std@@YA$$QAPAVCMannerTrialChat@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAPAVCMannerTrialChat@@@std@@YA$$QAPAVCMannerTrialChat@@AAPAV1@@Z PROC ; std::move<CMannerTrialChat * &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAPAVCMannerTrialChat@@@std@@YA$$QAPAVCMannerTrialChat@@AAPAV1@@Z ENDP ; std::move<CMannerTrialChat * &>
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1512 : 		return (this->_Mysize);

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 1513 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogsp
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2010 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2011 : 			: this->_Bx._Buf);

  00000	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  00004	72 03		 jb	 SHORT $LN3@Myptr
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]

; 2012 : 		}

  00008	c3		 ret	 0
$LN3@Myptr:

; 2010 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2011 : 			: this->_Bx._Buf);

  00009	8b c1		 mov	 eax, ecx

; 2012 : 		}

  0000b	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 459  : 		}

  00000	c3		 ret	 0
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogsp
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2004 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2005 : 			: this->_Bx._Buf);

  00000	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  00004	72 03		 jb	 SHORT $LN3@Myptr@2
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]

; 2006 : 		}

  00008	c3		 ret	 0
$LN3@Myptr@2:

; 2004 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2005 : 			: this->_Bx._Buf);

  00009	8b c1		 mov	 eax, ecx

; 2006 : 		}

  0000b	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2016 : 		_Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@2:
$LN3@Xlen@2:
  0000b	cc		 int	 3
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2021 : 		_Xout_of_range("invalid string position");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN4@Xran:
$LN3@Xran:
  0000b	cc		 int	 3
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1973 : 		{	// test if _Ptr points inside string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1974 : 		if (_Ptr == 0 || _Ptr < _Myptr() || _Myptr() + this->_Mysize <= _Ptr)

  00003	83 7d 08 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00007	74 2c		 je	 SHORT $LN2@Inside
  00009	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0000c	83 fa 10	 cmp	 edx, 16			; 00000010H
  0000f	72 04		 jb	 SHORT $LN8@Inside
  00011	8b 01		 mov	 eax, DWORD PTR [ecx]
  00013	eb 02		 jmp	 SHORT $LN9@Inside
$LN8@Inside:
  00015	8b c1		 mov	 eax, ecx
$LN9@Inside:
  00017	39 45 08	 cmp	 DWORD PTR __Ptr$[ebp], eax
  0001a	72 19		 jb	 SHORT $LN2@Inside
  0001c	83 fa 10	 cmp	 edx, 16			; 00000010H
  0001f	72 04		 jb	 SHORT $LN12@Inside
  00021	8b 01		 mov	 eax, DWORD PTR [ecx]
  00023	eb 02		 jmp	 SHORT $LN13@Inside
$LN12@Inside:
  00025	8b c1		 mov	 eax, ecx
$LN13@Inside:
  00027	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  0002a	03 c8		 add	 ecx, eax
  0002c	3b 4d 08	 cmp	 ecx, DWORD PTR __Ptr$[ebp]
  0002f	76 04		 jbe	 SHORT $LN2@Inside

; 1976 : 		else
; 1977 : 			return (true);

  00031	b0 01		 mov	 al, 1
  00033	eb 02		 jmp	 SHORT $LN1@Inside
$LN2@Inside:

; 1975 : 			return (false);	// don't ask

  00035	32 c0		 xor	 al, al
$LN1@Inside:

; 1978 : 		}

  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 220  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
$T508105 = -12						; size = 12
$T508109 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;

  00003	33 c0		 xor	 eax, eax
  00005	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 32   : 
; 33   : 	if (_Count <= 0)

  00008	39 45 08	 cmp	 DWORD PTR __Count$[ebp], eax

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000b	76 39		 jbe	 SHORT $LN5@Allocate@5

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000d	83 7d 08 ff	 cmp	 DWORD PTR __Count$[ebp], -1
  00011	77 0d		 ja	 SHORT $LN1@Allocate@5
  00013	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00016	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001b	59		 pop	 ecx
  0001c	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  0001e	75 26		 jne	 SHORT $LN5@Allocate@5
$LN1@Allocate@5:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00020	83 65 08 00	 and	 DWORD PTR $T508109[ebp], 0
  00024	8d 45 08	 lea	 eax, DWORD PTR $T508109[ebp]
  00027	50		 push	 eax
  00028	8d 4d f4	 lea	 ecx, DWORD PTR $T508105[ebp]
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00031	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00036	8d 45 f4	 lea	 eax, DWORD PTR $T508105[ebp]
  00039	50		 push	 eax
  0003a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T508105[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00041	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@5:
$LN5@Allocate@5:

; 40   : 	}

  00046	c9		 leave
  00047	c3		 ret	 0
$LN9@Allocate@5:
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$forward@AAH@std@@YAAAHAAH@Z			; std::forward<int &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAH@std@@YAAAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAH@std@@YAAAHAAH@Z PROC			; std::forward<int &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAH@std@@YAAAHAAH@Z ENDP			; std::forward<int &>
_TEXT	ENDS
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT

; 94   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 95   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 96   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
_TEXT	ENDS
PUBLIC	??$move@AA_N@std@@YA$$QA_NAA_N@Z		; std::move<bool &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@AA_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AA_N@std@@YA$$QA_NAA_N@Z PROC			; std::move<bool &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AA_N@std@@YA$$QA_NAA_N@Z ENDP			; std::move<bool &>
_TEXT	ENDS
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
PUBLIC	??_GChatItem@CMannerTrialChat@@QAEPAXI@Z	; CMannerTrialChat::ChatItem::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_GChatItem@CMannerTrialChat@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GChatItem@CMannerTrialChat@@QAEPAXI@Z PROC		; CMannerTrialChat::ChatItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ChatItem@CMannerTrialChat@@QAE@XZ
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@2
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@2:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GChatItem@CMannerTrialChat@@QAEPAXI@Z ENDP		; CMannerTrialChat::ChatItem::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::~_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ PROC ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::~_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >, COMDAT
; _this$ = ecx
  00000	c3		 ret	 0
??1?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::~_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
_TEXT	ENDS
PUBLIC	?GetSingleton@ioMannerTrialChatManager@@SAAAV1@XZ ; ioMannerTrialChatManager::GetSingleton
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\mannertrialchat.cpp
;	COMDAT ?GetSingleton@ioMannerTrialChatManager@@SAAAV1@XZ
_TEXT	SEGMENT
?GetSingleton@ioMannerTrialChatManager@@SAAAV1@XZ PROC	; ioMannerTrialChatManager::GetSingleton, COMDAT

; 117  : 	return Singleton< ioMannerTrialChatManager >::GetSingleton();

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioMannerTrialChatManager@@@@1PAVioMannerTrialChatManager@@A ; Singleton<ioMannerTrialChatManager>::ms_Singleton

; 118  : }

  00005	c3		 ret	 0
?GetSingleton@ioMannerTrialChatManager@@SAAAV1@XZ ENDP	; ioMannerTrialChatManager::GetSingleton
_TEXT	ENDS
PUBLIC	??E?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator++
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
;	COMDAT ??E?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Deque_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator++, COMDAT
; _this$ = ecx

; 628  : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 629  : 		++*(_Mybase *)this;

  00002	ff 40 08	 inc	 DWORD PTR [eax+8]

; 630  : 		return (*this);
; 631  : 		}

  00005	c3		 ret	 0
??E?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Deque_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator++
_TEXT	ENDS
PUBLIC	??D?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEABQAUChatItem@CMannerTrialChat@@XZ ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEABQAUChatItem@CMannerTrialChat@@XZ
_TEXT	SEGMENT
??D?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEABQAUChatItem@CMannerTrialChat@@XZ PROC ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator*, COMDAT
; _this$ = ecx

; 331  : 		_Mydeque *_Mycont = ((_Mydeque *)this->_Getcont());

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	85 c0		 test	 eax, eax
  00004	75 04		 jne	 SHORT $LN6@operator@2
  00006	33 d2		 xor	 edx, edx
  00008	eb 02		 jmp	 SHORT $LN7@operator@2
$LN6@operator@2:
  0000a	8b 10		 mov	 edx, DWORD PTR [eax]
$LN7@operator@2:

; 332  : 
; 333  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 334  : 		if (_Mycont == 0
; 335  : 			|| this->_Myoff < _Mycont->_Myoff
; 336  : 			|| _Mycont->_Myoff + _Mycont->_Mysize <= this->_Myoff)
; 337  : 		{	// report error
; 338  : 		_DEBUG_ERROR("deque iterator not dereferencable");
; 339  : 		_SCL_SECURE_OUT_OF_RANGE;
; 340  : 		}
; 341  : 
; 342  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 343  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 344  : 		_SCL_SECURE_VALIDATE_RANGE(_Mycont->_Myoff <= this->_Myoff
; 345  : 			&& this->_Myoff < _Mycont->_Myoff + _Mycont->_Mysize);
; 346  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 347  : 
; 348  : 		__analysis_assume(_Mycont != 0);
; 349  : 
; 350  : 		size_type _Block = _Myoff / _DEQUESIZ;

  0000c	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000f	8b c8		 mov	 ecx, eax
  00011	56		 push	 esi

; 351  : 		size_type _Off = _Myoff & (_DEQUESIZ - 1);	// assume power of 2
; 352  : 
; 353  : 		if (_Mycont->_Mapsize <= _Block)

  00012	8b 72 08	 mov	 esi, DWORD PTR [edx+8]
  00015	c1 e9 02	 shr	 ecx, 2
  00018	83 e0 03	 and	 eax, 3
  0001b	3b f1		 cmp	 esi, ecx
  0001d	77 02		 ja	 SHORT $LN1@operator@2

; 354  : 			_Block -= _Mycont->_Mapsize;

  0001f	2b ce		 sub	 ecx, esi
$LN1@operator@2:

; 355  : 		return ((_Mycont->_Map)[_Block][_Off]);

  00021	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00024	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  00027	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0002a	5e		 pop	 esi

; 356  : 		}

  0002b	c3		 ret	 0
??D?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEABQAUChatItem@CMannerTrialChat@@XZ ENDP ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator*
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAEPAPAUChatItem@CMannerTrialChat@@I@Z ; std::allocator<CMannerTrialChat::ChatItem *>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAEPAPAUChatItem@CMannerTrialChat@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAEPAPAUChatItem@CMannerTrialChat@@I@Z PROC ; std::allocator<CMannerTrialChat::ChatItem *>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@PAUChatItem@CMannerTrialChat@@@std@@YAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@@Z ; std::_Allocate<CMannerTrialChat::ChatItem *>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAEPAPAUChatItem@CMannerTrialChat@@I@Z ENDP ; std::allocator<CMannerTrialChat::ChatItem *>::allocate
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Lmost
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1759 : 		return (this->_Left(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1760 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Rmost
; Function compile flags: /Ogsp
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1784 : 		return (this->_Right(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1785 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Root
; Function compile flags: /Ogsp
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1790 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >, COMDAT
; _this$ = ecx

; 555  : 		this->_Alnod.deallocate(this->_Myhead, 1);

  00000	ff 71 04	 push	 DWORD PTR [ecx+4]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx

; 556  : 		}

  00009	c3		 ret	 0
??1?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Key
; Function compile flags: /Ogsp
;	COMDAT ?_Key@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Key, COMDAT

; 616  : 		{	// return reference to key in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 617  : 		return ((key_type&)_Traits::_Kfn(_Myval(_Pnode)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 618  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Key@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	??8?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator==
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
;	COMDAT ??8?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator==, COMDAT
; _this$ = ecx

; 474  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 475  : 		_Compat(_Right);
; 476  : 		return (this->_Myoff == _Right._Myoff);

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00009	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0000c	f7 d8		 neg	 eax
  0000e	1b c0		 sbb	 eax, eax
  00010	40		 inc	 eax

; 477  : 		}

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
??8?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator==
_TEXT	ENDS
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKPAVCMannerTrialChat@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKPAVCMannerTrialChat@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKPAVCMannerTrialChat@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 396  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 397  : 		}

  00005	c3		 ret	 0
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKPAVCMannerTrialChat@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	?max_size@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEIXZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
;	COMDAT ?max_size@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEIXZ PROC ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::max_size, COMDAT
; _this$ = ecx

; 1155 : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 1156 : 		}

  00005	c3		 ret	 0
?max_size@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEIXZ ENDP ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@QAEPAPAPAUChatItem@CMannerTrialChat@@I@Z ; std::allocator<CMannerTrialChat::ChatItem * *>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@QAEPAPAPAUChatItem@CMannerTrialChat@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@QAEPAPAPAUChatItem@CMannerTrialChat@@I@Z PROC ; std::allocator<CMannerTrialChat::ChatItem * *>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@PAPAUChatItem@CMannerTrialChat@@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@IPAPAPAU12@@Z ; std::_Allocate<CMannerTrialChat::ChatItem * *>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@QAEPAPAPAUChatItem@CMannerTrialChat@@I@Z ENDP ; std::allocator<CMannerTrialChat::ChatItem * *>::allocate
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Lbound
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 1741 : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1742 : 		_Nodeptr _Pnode = _Root();

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00009	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  0000d	75 19		 jne	 SHORT $LN3@Lbound
  0000f	8b 55 08	 mov	 edx, DWORD PTR __Keyval$[ebp]
  00012	8b 12		 mov	 edx, DWORD PTR [edx]
$LL4@Lbound:

; 1746 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $LN2@Lbound

; 1747 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1748 : 			else

  0001c	eb 04		 jmp	 SHORT $LN1@Lbound
$LN2@Lbound:

; 1749 : 				{	// _Pnode not less than _Keyval, remember it
; 1750 : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 1751 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN1@Lbound:

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00022	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00026	74 ec		 je	 SHORT $LL4@Lbound
$LN3@Lbound:

; 1752 : 				}
; 1753 : 
; 1754 : 		return (_Wherenode);	// return best remembered candidate
; 1755 : 		}

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	53		 push	 ebx
  00005	32 db		 xor	 bl, bl
  00007	38 59 15	 cmp	 BYTE PTR [ecx+21], bl
  0000a	75 2d		 jne	 SHORT $LN3@operator@3

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

  0000c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000f	38 5a 15	 cmp	 BYTE PTR [edx+21], bl
  00012	75 0d		 jne	 SHORT $LN34@operator@3

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

$LL18@operator@3:
  00014	8b ca		 mov	 ecx, edx
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	38 5a 15	 cmp	 BYTE PTR [edx+21], bl
  0001b	74 f7		 je	 SHORT $LL18@operator@3
  0001d	89 08		 mov	 DWORD PTR [eax], ecx
  0001f	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  00020	c3		 ret	 0
$LN34@operator@3:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00021	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00024	eb 0c		 jmp	 SHORT $LN38@operator@3
$LL2@operator@3:
  00026	8b 08		 mov	 ecx, DWORD PTR [eax]
  00028	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  0002b	75 0a		 jne	 SHORT $LN1@operator@3

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
$LN38@operator@3:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00032	38 5a 15	 cmp	 BYTE PTR [edx+21], bl
  00035	74 ef		 je	 SHORT $LL2@operator@3
$LN1@operator@3:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

  00037	89 10		 mov	 DWORD PTR [eax], edx
$LN3@operator@3:
  00039	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  0003a	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >, COMDAT
; _this$ = ecx

; 482  : 		{	// construct traits from _Parg and allocators from _Al

  00000	8b c1		 mov	 eax, ecx

; 483  : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Node>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Node>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Setcont@?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXPBV?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@@Z ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Setcont
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
;	COMDAT ?_Setcont@?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXPBV?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@@Z
_TEXT	SEGMENT
__Pdeque$ = 8						; size = 4
?_Setcont@?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXPBV?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@@Z PROC ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Setcont, COMDAT
; _this$ = ecx

; 541  : 		{	// set container pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 542  : 		this->_Adopt(_Pdeque);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pdeque$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 04		 je	 SHORT $LN3@Setcont
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax
$LN3@Setcont:

; 543  : 		}

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?_Setcont@?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXPBV?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@@Z ENDP ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Setcont
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 44   : 		this->_Adopt(_Plist);
; 45   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Lrotate
; Function compile flags: /Ogsp
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00009	56		 push	 esi

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

  0000f	8b 30		 mov	 esi, DWORD PTR [eax]
  00011	80 7e 15 00	 cmp	 BYTE PTR [esi+21], 0
  00015	75 03		 jne	 SHORT $LN5@Lrotate

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Lrotate:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 05		 jne	 SHORT $LN4@Lrotate

; 1772 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

  0002c	eb 0e		 jmp	 SHORT $LN1@Lrotate
$LN4@Lrotate:
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00033	75 04		 jne	 SHORT $LN2@Lrotate

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  00035	89 01		 mov	 DWORD PTR [ecx], eax

; 1775 : 		else

  00037	eb 03		 jmp	 SHORT $LN1@Lrotate
$LN2@Lrotate:

; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00039	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@Lrotate:

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0003c	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  0003e	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Rrotate
; Function compile flags: /Ogsp
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	56		 push	 esi

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

  00009	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000c	89 32		 mov	 DWORD PTR [edx], esi

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

  0000e	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00011	80 7e 15 00	 cmp	 BYTE PTR [esi+21], 0
  00015	75 03		 jne	 SHORT $LN5@Rrotate

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Rrotate:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 05		 jne	 SHORT $LN4@Rrotate

; 1802 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

  0002c	eb 0f		 jmp	 SHORT $LN1@Rrotate
$LN4@Rrotate:
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00034	75 05		 jne	 SHORT $LN2@Rrotate

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00036	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1805 : 		else

  00039	eb 02		 jmp	 SHORT $LN1@Rrotate
$LN2@Rrotate:

; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  0003b	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@Rrotate:

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  0003d	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00040	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx

; 121  : 		{	// assign an iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 122  : 		if (_Myproxy != _Right._Myproxy)

  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	39 10		 cmp	 DWORD PTR [eax], edx
  0000c	74 0a		 je	 SHORT $LN4@operator@4

; 123  : 			_Adopt(_Right._Myproxy->_Mycont);

  0000e	8b 12		 mov	 edx, DWORD PTR [edx]
  00010	85 d2		 test	 edx, edx
  00012	74 04		 je	 SHORT $LN4@operator@4
  00014	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
$LN4@operator@4:

; 124  : 		return (*this);
; 125  : 		}

  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@PAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@00AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@@Z ; std::_Uninitialized_copy<CMannerTrialChat::ChatItem * * *,CMannerTrialChat::ChatItem * * *,std::allocator<CMannerTrialChat::ChatItem * *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_copy@PAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@00AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@@Z
_TEXT	SEGMENT
__Cat$508487 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@00AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@@Z PROC ; std::_Uninitialized_copy<CMannerTrialChat::ChatItem * * *,CMannerTrialChat::ChatItem * * *,std::allocator<CMannerTrialChat::ChatItem * *> >, COMDAT

; 412  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 413  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 414  : 		_Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$508487[ebp]
  00007	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000a	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00010	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00013	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAPAUChatItem@CMannerTrialChat@@PAPAU12@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@00AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<CMannerTrialChat::ChatItem * *,CMannerTrialChat::ChatItem * *>
  00018	83 c4 14	 add	 esp, 20			; 00000014H

; 415  : 	}

  0001b	c9		 leave
  0001c	c3		 ret	 0
??$_Uninitialized_copy@PAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@00AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@@Z ENDP ; std::_Uninitialized_copy<CMannerTrialChat::ChatItem * * *,CMannerTrialChat::ChatItem * * *,std::allocator<CMannerTrialChat::ChatItem * *> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@0AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@@Z ; std::_Destroy_range<std::allocator<CMannerTrialChat::ChatItem * *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@0AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@0AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CMannerTrialChat::ChatItem * *> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@0AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CMannerTrialChat::ChatItem * *> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAUChatItem@CMannerTrialChat@@ABQAU34@@Z ; std::allocator<CMannerTrialChat::ChatItem *>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAUChatItem@CMannerTrialChat@@ABQAU34@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAUChatItem@CMannerTrialChat@@ABQAU34@@Z PROC ; std::allocator<CMannerTrialChat::ChatItem *>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN5@construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN5@construct:

; 198  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?construct@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAUChatItem@CMannerTrialChat@@ABQAU34@@Z ENDP ; std::allocator<CMannerTrialChat::ChatItem *>::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAUChatItem@CMannerTrialChat@@@Z ; std::allocator<CMannerTrialChat::ChatItem *>::destroy
; Function compile flags: /Ogsp
;	COMDAT ?destroy@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAUChatItem@CMannerTrialChat@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAUChatItem@CMannerTrialChat@@@Z PROC ; std::allocator<CMannerTrialChat::ChatItem *>::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAUChatItem@CMannerTrialChat@@@Z ENDP ; std::allocator<CMannerTrialChat::ChatItem *>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAPAUChatItem@CMannerTrialChat@@@Z ; std::allocator<CMannerTrialChat::ChatItem * *>::destroy
; Function compile flags: /Ogsp
;	COMDAT ?destroy@?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAPAUChatItem@CMannerTrialChat@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAPAUChatItem@CMannerTrialChat@@@Z PROC ; std::allocator<CMannerTrialChat::ChatItem * *>::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@QAEXPAPAPAUChatItem@CMannerTrialChat@@@Z ENDP ; std::allocator<CMannerTrialChat::ChatItem * *>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QAEXPAU?$pair@$$CBKPAVCMannerTrialChat@@@2@@Z ; std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >::destroy
; Function compile flags: /Ogsp
;	COMDAT ?destroy@?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QAEXPAU?$pair@$$CBKPAVCMannerTrialChat@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QAEXPAU?$pair@$$CBKPAVCMannerTrialChat@@@2@@Z PROC ; std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QAEXPAU?$pair@$$CBKPAVCMannerTrialChat@@@2@@Z ENDP ; std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ; std::allocator<std::_Container_proxy>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z PROC ; std::allocator<std::_Container_proxy>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN3@construct@2
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN3@construct@2:

; 203  : 		}

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ENDP ; std::allocator<std::_Container_proxy>::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ; std::allocator<std::_Container_proxy>::destroy
; Function compile flags: /Ogsp
;	COMDAT ?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z PROC ; std::allocator<std::_Container_proxy>::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 874  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 875  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 146  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator--
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 277  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 278  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 279  : 		if (this->_Getcont() == 0
; 280  : 			|| this->_Ptr == 0)
; 281  : 			{	// report error
; 282  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 283  : 			_SCL_SECURE_OUT_OF_RANGE;
; 284  : 			}
; 285  : 
; 286  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 287  : 		--(*(_Mybase *)this);
; 288  : 		if (_Ptrsav == this->_Ptr)
; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 291  : 			_SCL_SECURE_OUT_OF_RANGE;
; 292  : 			}
; 293  : 
; 294  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 295  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 296  : 
; 297  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 298  : 		--(*(_Mybase *)this);
; 299  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 300  : 
; 301  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 302  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::operator--

; 303  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 304  : 
; 305  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 306  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??$?0AAHAAPAVCMannerTrialChat@@@?$_Pair_base@$$CBKPAVCMannerTrialChat@@@std@@QAE@AAHAAPAVCMannerTrialChat@@@Z ; std::_Pair_base<unsigned long const ,CMannerTrialChat *>::_Pair_base<unsigned long const ,CMannerTrialChat *><int &,CMannerTrialChat * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAHAAPAVCMannerTrialChat@@@?$_Pair_base@$$CBKPAVCMannerTrialChat@@@std@@QAE@AAHAAPAVCMannerTrialChat@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAHAAPAVCMannerTrialChat@@@?$_Pair_base@$$CBKPAVCMannerTrialChat@@@std@@QAE@AAHAAPAVCMannerTrialChat@@@Z PROC ; std::_Pair_base<unsigned long const ,CMannerTrialChat *>::_Pair_base<unsigned long const ,CMannerTrialChat *><int &,CMannerTrialChat * &>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00011	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 164  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAHAAPAVCMannerTrialChat@@@?$_Pair_base@$$CBKPAVCMannerTrialChat@@@std@@QAE@AAHAAPAVCMannerTrialChat@@@Z ENDP ; std::_Pair_base<unsigned long const ,CMannerTrialChat *>::_Pair_base<unsigned long const ,CMannerTrialChat *><int &,CMannerTrialChat * &>
_TEXT	ENDS
PUBLIC	??$_Uninit_def_fill_n@PAPAUChatItem@CMannerTrialChat@@IPAPAU12@PAPAU12@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@IPBQAPAU12@AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_def_fill_n<CMannerTrialChat::ChatItem * *,unsigned int,CMannerTrialChat::ChatItem * *,CMannerTrialChat::ChatItem * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_def_fill_n@PAPAUChatItem@CMannerTrialChat@@IPAPAU12@PAPAU12@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@IPBQAPAU12@AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T508593 = -4						; size = 4
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_def_fill_n@PAPAUChatItem@CMannerTrialChat@@IPAPAU12@PAPAU12@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@IPBQAPAU12@AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_def_fill_n<CMannerTrialChat::ChatItem * *,unsigned int,CMannerTrialChat::ChatItem * *,CMannerTrialChat::ChatItem * *>, COMDAT

; 660  : 	{	// copy _Count * _Valty() to raw _First, using _Al, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 661  : 	_Fill_n(_First, _Count, (_Valty)0);

  00004	83 65 fc 00	 and	 DWORD PTR $T508593[ebp], 0
  00008	8d 45 fc	 lea	 eax, DWORD PTR $T508593[ebp]
  0000b	50		 push	 eax
  0000c	ff 75 0c	 push	 DWORD PTR __Count$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00012	e8 00 00 00 00	 call	 ??$_Fill_n@PAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@IABQAPAU12@@Z ; std::_Fill_n<CMannerTrialChat::ChatItem * * *,unsigned int,CMannerTrialChat::ChatItem * *>
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 662  : 	}

  0001a	c9		 leave
  0001b	c3		 ret	 0
??$_Uninit_def_fill_n@PAPAUChatItem@CMannerTrialChat@@IPAPAU12@PAPAU12@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@IPBQAPAU12@AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_def_fill_n<CMannerTrialChat::ChatItem * *,unsigned int,CMannerTrialChat::ChatItem * *,CMannerTrialChat::ChatItem * *>
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Buynode
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Buynode@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
$T508625 = -16						; size = 12
$T508602 = -4						; size = 4
?_Buynode@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 559  : 		{	// allocate a node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00007	6a 18		 push	 24			; 00000018H
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	59		 pop	 ecx
  00011	33 c9		 xor	 ecx, ecx
  00013	3b c1		 cmp	 eax, ecx
  00015	74 18		 je	 SHORT $LN5@Buynode

; 561  : 
; 562  : 		this->_Left(_Wherenode) = this->_Myhead;

  00017	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001a	89 10		 mov	 DWORD PTR [eax], edx

; 563  : 		this->_Parent(_Wherenode) = this->_Myhead;

  0001c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001f	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 564  : 		this->_Right(_Wherenode) = this->_Myhead;

  00022	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00025	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 565  : 		this->_Color(_Wherenode) = this->_Red;

  00028	66 89 48 14	 mov	 WORD PTR [eax+20], cx
  0002c	5e		 pop	 esi

; 566  : 		this->_Isnil(_Wherenode) = false;
; 567  : 		return (_Wherenode);
; 568  : 		}

  0002d	c9		 leave
  0002e	c3		 ret	 0

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

$LN5@Buynode:
  0002f	8d 45 fc	 lea	 eax, DWORD PTR $T508602[ebp]
  00032	89 4d fc	 mov	 DWORD PTR $T508602[ebp], ecx
  00035	50		 push	 eax
  00036	8d 4d f0	 lea	 ecx, DWORD PTR $T508625[ebp]
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  0003f	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00044	8d 45 f0	 lea	 eax, DWORD PTR $T508625[ebp]
  00047	50		 push	 eax
  00048	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T508625[ebp], OFFSET ??_7bad_alloc@std@@6B@
  0004f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN27@Buynode:
$LN26@Buynode:
  00054	cc		 int	 3
?_Buynode@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > > &,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 164  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@$$CBKPAVCMannerTrialChat@@@std@@QAE@$$QBK$$QAPAVCMannerTrialChat@@@Z ; std::_Pair_base<unsigned long const ,CMannerTrialChat *>::_Pair_base<unsigned long const ,CMannerTrialChat *>
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Pair_base@$$CBKPAVCMannerTrialChat@@@std@@QAE@$$QBK$$QAPAVCMannerTrialChat@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@$$CBKPAVCMannerTrialChat@@@std@@QAE@$$QBK$$QAPAVCMannerTrialChat@@@Z PROC ; std::_Pair_base<unsigned long const ,CMannerTrialChat *>::_Pair_base<unsigned long const ,CMannerTrialChat *>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00011	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 146  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$_Pair_base@$$CBKPAVCMannerTrialChat@@@std@@QAE@$$QBK$$QAPAVCMannerTrialChat@@@Z ENDP ; std::_Pair_base<unsigned long const ,CMannerTrialChat *>::_Pair_base<unsigned long const ,CMannerTrialChat *>
_TEXT	ENDS
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 1497 : 		return (_Myptr());

  00000	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  00004	72 03		 jb	 SHORT $LN5@c_str
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1498 : 		}

  00008	c3		 ret	 0

; 1497 : 		return (_Myptr());

$LN5@c_str:
  00009	8b c1		 mov	 eax, ecx

; 1498 : 		}

  0000b	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z PROC ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 454  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 455  : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogsp
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1953 : 		{	// set new length and null terminator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1954 : 		_Traits::assign(_Myptr()[this->_Mysize = _Newsize], _Elem());

  00003	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  00007	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0000a	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  0000d	72 02		 jb	 SHORT $LN5@Eos
  0000f	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN5@Eos:
  00011	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1955 : 		}

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1517 : 		size_type _Num = this->_Alval.max_size();
; 1518 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	6a fe		 push	 -2			; fffffffeH
  00002	58		 pop	 eax

; 1519 : 		}

  00003	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@D@std@@YAPADIPAD@Z ; std::_Allocate<char>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 101  : 	{	// exchange values stored at _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 102  : 	_Ty _Tmp = _Move(_Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8a 08		 mov	 cl, BYTE PTR [eax]
  00008	56		 push	 esi

; 103  : 	_Left = _Move(_Right);

  00009	8b 75 0c	 mov	 esi, DWORD PTR __Right$[ebp]
  0000c	8a 16		 mov	 dl, BYTE PTR [esi]
  0000e	88 10		 mov	 BYTE PTR [eax], dl

; 104  : 	_Right = _Move(_Tmp);

  00010	88 0e		 mov	 BYTE PTR [esi], cl
  00012	5e		 pop	 esi

; 105  : 	}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??1?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ ; std::_Deque_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::~_Deque_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ PROC ; std::_Deque_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::~_Deque_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >, COMDAT
; _this$ = ecx
  00000	c3		 ret	 0
??1?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::~_Deque_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
_TEXT	ENDS
PUBLIC	??D?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEAAPAUChatItem@CMannerTrialChat@@XZ ; std::_Deque_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
;	COMDAT ??D?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEAAPAUChatItem@CMannerTrialChat@@XZ
_TEXT	SEGMENT
??D?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEAAPAUChatItem@CMannerTrialChat@@XZ PROC ; std::_Deque_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator*, COMDAT
; _this$ = ecx

; 619  : 		return ((reference)**(_Mybase *)this);

  00000	e9 00 00 00 00	 jmp	 ??D?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEABQAUChatItem@CMannerTrialChat@@XZ ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator*
??D?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEAAPAUChatItem@CMannerTrialChat@@XZ ENDP ; std::_Deque_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator*
_TEXT	ENDS
PUBLIC	??9?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator!=, COMDAT
; _this$ = ecx

; 480  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 		return (!(*this == _Right));

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0000e	0f 95 c0	 setne	 al

; 482  : 		}

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
??9?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator!=
_TEXT	ENDS
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKPAVCMannerTrialChat@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator->
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKPAVCMannerTrialChat@@@1@XZ
_TEXT	SEGMENT
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKPAVCMannerTrialChat@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator->, COMDAT
; _this$ = ecx

; 401  : 		return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 402  : 		}

  00005	c3		 ret	 0
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKPAVCMannerTrialChat@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator->
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))
; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 257  : 			_SCL_SECURE_OUT_OF_RANGE;
; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::operator++

; 266  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 267  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z
_TEXT	SEGMENT
$T508820 = -16						; size = 12
$T508797 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >, COMDAT
; _this$ = ecx

; 542  : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 543  : 		this->_Mysize = 0;

  00009	83 66 08 00	 and	 DWORD PTR [esi+8], 0

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

  0000d	6a 18		 push	 24			; 00000018H
  0000f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00014	59		 pop	 ecx
  00015	85 c0		 test	 eax, eax
  00017	74 26		 je	 SHORT $LN15@Tree_val
  00019	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 545  : 
; 546  : 		this->_Left(this->_Myhead) = this->_Myhead;

  0001c	89 00		 mov	 DWORD PTR [eax], eax

; 547  : 		this->_Parent(this->_Myhead) = this->_Myhead;

  0001e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00021	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 548  : 		this->_Right(this->_Myhead) = this->_Myhead;

  00024	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00027	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 549  : 		this->_Color(this->_Myhead) = this->_Black;

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 550  : 		this->_Isnil(this->_Myhead) = true;

  00031	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00034	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 551  : 		}

  00038	8b c6		 mov	 eax, esi
  0003a	5e		 pop	 esi
  0003b	c9		 leave
  0003c	c2 08 00	 ret	 8

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

$LN15@Tree_val:
  0003f	83 65 fc 00	 and	 DWORD PTR $T508797[ebp], 0
  00043	8d 45 fc	 lea	 eax, DWORD PTR $T508797[ebp]
  00046	50		 push	 eax
  00047	8d 4d f0	 lea	 ecx, DWORD PTR $T508820[ebp]
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00050	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00055	8d 45 f0	 lea	 eax, DWORD PTR $T508820[ebp]
  00058	50		 push	 eax
  00059	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T508820[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00060	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN37@Tree_val:
$LN36@Tree_val:
  00065	cc		 int	 3
??0?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
;	COMDAT ??0?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Pdeque$ = 12						; size = 4
??0?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z PROC ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >, COMDAT
; _this$ = ecx

; 310  : 	_Deque_const_iterator(size_type _Off, const _Container_base12 *_Pdeque)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 311  : 		{	// construct with offset _Off in *_Pdeque
; 312  : 		_Setcont((_Mydeque *)_Pdeque);

  00005	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdeque$[ebp]
  00008	83 20 00	 and	 DWORD PTR [eax], 0
  0000b	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  0000f	85 c9		 test	 ecx, ecx
  00011	74 04		 je	 SHORT $LN7@Deque_cons
  00013	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00015	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@Deque_cons:

; 313  : 		_Myoff = _Off;

  00017	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  0001a	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 314  : 		}

  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ENDP ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 214  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 270  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 271  : 		_Myiter _Tmp = *this;

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 06		 mov	 DWORD PTR [esi], eax

; 272  : 		++*this;

  0000b	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::operator++

; 273  : 		return (_Tmp);

  00010	8b c6		 mov	 eax, esi
  00012	5e		 pop	 esi

; 274  : 		}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 116  : 		{	// copy an iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	83 20 00	 and	 DWORD PTR [eax], 0
  00008	83 60 04 00	 and	 DWORD PTR [eax+4], 0

; 117  : 		*this = _Right;

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00011	85 c9		 test	 ecx, ecx
  00013	74 0a		 je	 SHORT $LN6@Iterator_b
  00015	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00017	85 c9		 test	 ecx, ecx
  00019	74 04		 je	 SHORT $LN6@Iterator_b
  0001b	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0001d	89 08		 mov	 DWORD PTR [eax], ecx
$LN6@Iterator_b:

; 118  : 		}

  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
PUBLIC	??$?0AAHAAPAVCMannerTrialChat@@@?$pair@$$CBKPAVCMannerTrialChat@@@std@@QAE@AAHAAPAVCMannerTrialChat@@@Z ; std::pair<unsigned long const ,CMannerTrialChat *>::pair<unsigned long const ,CMannerTrialChat *><int &,CMannerTrialChat * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAHAAPAVCMannerTrialChat@@@?$pair@$$CBKPAVCMannerTrialChat@@@std@@QAE@AAHAAPAVCMannerTrialChat@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAHAAPAVCMannerTrialChat@@@?$pair@$$CBKPAVCMannerTrialChat@@@std@@QAE@AAHAAPAVCMannerTrialChat@@@Z PROC ; std::pair<unsigned long const ,CMannerTrialChat *>::pair<unsigned long const ,CMannerTrialChat *><int &,CMannerTrialChat * &>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00011	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 248  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAHAAPAVCMannerTrialChat@@@?$pair@$$CBKPAVCMannerTrialChat@@@std@@QAE@AAHAAPAVCMannerTrialChat@@@Z ENDP ; std::pair<unsigned long const ,CMannerTrialChat *>::pair<unsigned long const ,CMannerTrialChat *><int &,CMannerTrialChat * &>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@PAUChatItem@CMannerTrialChat@@@std@@YAXAAV?$allocator@PAUChatItem@CMannerTrialChat@@@0@PAPAUChatItem@CMannerTrialChat@@@Z ; std::_Dest_val<std::allocator<CMannerTrialChat::ChatItem *>,CMannerTrialChat::ChatItem *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@PAUChatItem@CMannerTrialChat@@@std@@YAXAAV?$allocator@PAUChatItem@CMannerTrialChat@@@0@PAPAUChatItem@CMannerTrialChat@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@PAUChatItem@CMannerTrialChat@@@std@@YAXAAV?$allocator@PAUChatItem@CMannerTrialChat@@@0@PAPAUChatItem@CMannerTrialChat@@@Z PROC ; std::_Dest_val<std::allocator<CMannerTrialChat::ChatItem *>,CMannerTrialChat::ChatItem *>, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@PAUChatItem@CMannerTrialChat@@@std@@YAXAAV?$allocator@PAUChatItem@CMannerTrialChat@@@0@PAPAUChatItem@CMannerTrialChat@@@Z ENDP ; std::_Dest_val<std::allocator<CMannerTrialChat::ChatItem *>,CMannerTrialChat::ChatItem *>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@PAUChatItem@CMannerTrialChat@@ABQAU34@@std@@YAXAAV?$allocator@PAUChatItem@CMannerTrialChat@@@0@PAPAUChatItem@CMannerTrialChat@@ABQAU23@@Z ; std::_Cons_val<std::allocator<CMannerTrialChat::ChatItem *>,CMannerTrialChat::ChatItem *,CMannerTrialChat::ChatItem * const &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@PAUChatItem@CMannerTrialChat@@ABQAU34@@std@@YAXAAV?$allocator@PAUChatItem@CMannerTrialChat@@@0@PAPAUChatItem@CMannerTrialChat@@ABQAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@PAUChatItem@CMannerTrialChat@@ABQAU34@@std@@YAXAAV?$allocator@PAUChatItem@CMannerTrialChat@@@0@PAPAUChatItem@CMannerTrialChat@@ABQAU23@@Z PROC ; std::_Cons_val<std::allocator<CMannerTrialChat::ChatItem *>,CMannerTrialChat::ChatItem *,CMannerTrialChat::ChatItem * const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN9@Cons_val
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN9@Cons_val:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@PAUChatItem@CMannerTrialChat@@ABQAU34@@std@@YAXAAV?$allocator@PAUChatItem@CMannerTrialChat@@@0@PAPAUChatItem@CMannerTrialChat@@ABQAU23@@Z ENDP ; std::_Cons_val<std::allocator<CMannerTrialChat::ChatItem *>,CMannerTrialChat::ChatItem *,CMannerTrialChat::ChatItem * const &>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_default_fill_n@PAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@IPBQAPAU12@AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@@Z ; std::_Uninitialized_default_fill_n<CMannerTrialChat::ChatItem * * *,unsigned int,CMannerTrialChat::ChatItem * *,std::allocator<CMannerTrialChat::ChatItem * *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_default_fill_n@PAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@IPBQAPAU12@AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@@Z
_TEXT	SEGMENT
$T508978 = -4						; size = 4
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Pval$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_default_fill_n@PAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@IPBQAPAU12@AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@@Z PROC ; std::_Uninitialized_default_fill_n<CMannerTrialChat::ChatItem * * *,unsigned int,CMannerTrialChat::ChatItem * *,std::allocator<CMannerTrialChat::ChatItem * *> >, COMDAT

; 670  : 	{	// copy _Count * _Val_type(_First)() to raw _First, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 671  : 	_Uninit_def_fill_n(_First, _Count, _Pval, _Al,
; 672  : 		_Val_type(_First), _Ptr_cat(_First, _First));

  00004	83 65 fc 00	 and	 DWORD PTR $T508978[ebp], 0
  00008	8d 45 fc	 lea	 eax, DWORD PTR $T508978[ebp]
  0000b	50		 push	 eax
  0000c	ff 75 0c	 push	 DWORD PTR __Count$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00012	e8 00 00 00 00	 call	 ??$_Fill_n@PAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@IABQAPAU12@@Z ; std::_Fill_n<CMannerTrialChat::ChatItem * * *,unsigned int,CMannerTrialChat::ChatItem * *>
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 673  : 	}

  0001a	c9		 leave
  0001b	c3		 ret	 0
??$_Uninitialized_default_fill_n@PAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@IPBQAPAU12@AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@@Z ENDP ; std::_Uninitialized_default_fill_n<CMannerTrialChat::ChatItem * * *,unsigned int,CMannerTrialChat::ChatItem * *,std::allocator<CMannerTrialChat::ChatItem * *> >
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@PAPAUChatItem@CMannerTrialChat@@@std@@YAXAAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@PAPAPAUChatItem@CMannerTrialChat@@@Z ; std::_Dest_val<std::allocator<CMannerTrialChat::ChatItem * *>,CMannerTrialChat::ChatItem * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@PAPAUChatItem@CMannerTrialChat@@@std@@YAXAAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@PAPAPAUChatItem@CMannerTrialChat@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@PAPAUChatItem@CMannerTrialChat@@@std@@YAXAAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@PAPAPAUChatItem@CMannerTrialChat@@@Z PROC ; std::_Dest_val<std::allocator<CMannerTrialChat::ChatItem * *>,CMannerTrialChat::ChatItem * *>, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@PAPAUChatItem@CMannerTrialChat@@@std@@PAPAUChatItem@CMannerTrialChat@@@std@@YAXAAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@PAPAPAUChatItem@CMannerTrialChat@@@Z ENDP ; std::_Dest_val<std::allocator<CMannerTrialChat::ChatItem * *>,CMannerTrialChat::ChatItem * *>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN7@Cons_val@2
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN7@Cons_val@2:

; 281  : 	}

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
; Function compile flags: /Ogsp
;	COMDAT ??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z PROC ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ENDP ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@U?$pair@$$CBKPAVCMannerTrialChat@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@0@PAU?$pair@$$CBKPAVCMannerTrialChat@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,std::pair<unsigned long const ,CMannerTrialChat *> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@U?$pair@$$CBKPAVCMannerTrialChat@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@0@PAU?$pair@$$CBKPAVCMannerTrialChat@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@U?$pair@$$CBKPAVCMannerTrialChat@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@0@PAU?$pair@$$CBKPAVCMannerTrialChat@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,std::pair<unsigned long const ,CMannerTrialChat *> >, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@U?$pair@$$CBKPAVCMannerTrialChat@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@0@PAU?$pair@$$CBKPAVCMannerTrialChat@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,std::pair<unsigned long const ,CMannerTrialChat *> >
_TEXT	ENDS
PUBLIC	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 227  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 228  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator--
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 418  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 419  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::operator--

; 420  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 421  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > > &,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 248  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??$?0$$CBKPAVCMannerTrialChat@@@?$pair@$$CBKPAVCMannerTrialChat@@@std@@QAE@$$QAU01@@Z ; std::pair<unsigned long const ,CMannerTrialChat *>::pair<unsigned long const ,CMannerTrialChat *><unsigned long const ,CMannerTrialChat *>
; Function compile flags: /Ogsp
;	COMDAT ??$?0$$CBKPAVCMannerTrialChat@@@?$pair@$$CBKPAVCMannerTrialChat@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0$$CBKPAVCMannerTrialChat@@@?$pair@$$CBKPAVCMannerTrialChat@@@std@@QAE@$$QAU01@@Z PROC ; std::pair<unsigned long const ,CMannerTrialChat *>::pair<unsigned long const ,CMannerTrialChat *><unsigned long const ,CMannerTrialChat *>, COMDAT
; _this$ = ecx

; 255  : 		{	// construct from moved compatible pair

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	89 10		 mov	 DWORD PTR [eax], edx
  0000c	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 256  : 		}

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
??$?0$$CBKPAVCMannerTrialChat@@@?$pair@$$CBKPAVCMannerTrialChat@@@std@@QAE@$$QAU01@@Z ENDP ; std::pair<unsigned long const ,CMannerTrialChat *>::pair<unsigned long const ,CMannerTrialChat *><unsigned long const ,CMannerTrialChat *>
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1988 : 		{	// initialize buffer, deallocating any storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1989 : 		if (!_Built)

  00003	80 7d 08 00	 cmp	 BYTE PTR __Built$[ebp], 0
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	74 20		 je	 SHORT $LN9@Tidy

; 1990 : 			;
; 1991 : 		else if (this->_BUF_SIZE <= this->_Myres)

  00010	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00014	72 1a		 jb	 SHORT $LN9@Tidy

; 1992 : 			{	// copy any leftovers to small buffer and deallocate
; 1993 : 			_Elem *_Ptr = this->_Bx._Ptr;

  00016	53		 push	 ebx
  00017	8b 1e		 mov	 ebx, DWORD PTR [esi]

; 1994 : 			if (0 < _Newsize)

  00019	85 ff		 test	 edi, edi
  0001b	74 0b		 je	 SHORT $LN7@Tidy

; 1995 : 				_Traits::copy(this->_Bx._Buf, _Ptr, _Newsize);

  0001d	57		 push	 edi
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	e8 00 00 00 00	 call	 _memcpy
  00025	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@Tidy:

; 1996 : 			this->_Alval.deallocate(_Ptr, this->_Myres + 1);

  00028	53		 push	 ebx
  00029	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002e	59		 pop	 ecx
  0002f	5b		 pop	 ebx
$LN9@Tidy:

; 1997 : 			}
; 1998 : 		this->_Myres = this->_BUF_SIZE - 1;
; 1999 : 		_Eos(_Newsize);

  00030	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  00033	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  0003a	c6 04 37 00	 mov	 BYTE PTR [edi+esi], 0
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi

; 2000 : 		}

  00040	5d		 pop	 ebp
  00041	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
EXTRN	__EH_prolog3_catch:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
tv296 = -20						; size = 4
__Newres$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1919 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	6a 0c		 push	 12			; 0000000cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 e8	 mov	 DWORD PTR _this$[ebp], esi

; 1920 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

  00011	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  00014	83 cf 0f	 or	 edi, 15			; 0000000fH

; 1921 : 		if (max_size() < _Newres)

  00017	83 ff fe	 cmp	 edi, -2			; fffffffeH
  0001a	76 05		 jbe	 SHORT $LN9@Copy

; 1922 : 			_Newres = _Newsize;	// undo roundup if too big

  0001c	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0001f	eb 27		 jmp	 SHORT $LN5@Copy
$LN9@Copy:

; 1923 : 		else if (this->_Myres / 2 <= _Newres / 3)

  00021	33 d2		 xor	 edx, edx
  00023	6a 03		 push	 3
  00025	8b c7		 mov	 eax, edi
  00027	5b		 pop	 ebx
  00028	f7 f3		 div	 ebx
  0002a	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0002d	89 4d ec	 mov	 DWORD PTR tv296[ebp], ecx
  00030	d1 6d ec	 shr	 DWORD PTR tv296[ebp], 1
  00033	8b 55 ec	 mov	 edx, DWORD PTR tv296[ebp]
  00036	3b d0		 cmp	 edx, eax
  00038	76 0e		 jbe	 SHORT $LN5@Copy

; 1924 : 			;
; 1925 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

  0003a	6a fe		 push	 -2			; fffffffeH
  0003c	5f		 pop	 edi
  0003d	8b c7		 mov	 eax, edi
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	77 03		 ja	 SHORT $LN5@Copy

; 1926 : 			_Newres = this->_Myres
; 1927 : 				+ this->_Myres / 2;	// grow exponentially if possible

  00045	8d 3c 0a	 lea	 edi, DWORD PTR [edx+ecx]
$LN5@Copy:

; 1928 : 		else
; 1929 : 			_Newres = max_size();	// settle for max_size()
; 1930 : 
; 1931 : 		_Elem *_Ptr;
; 1932 : 		_TRY_BEGIN

  00048	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0

; 1933 : 			_Ptr = this->_Alval.allocate(_Newres + 1);

  0004c	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  0004f	6a 00		 push	 0
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ??$_Allocate@D@std@@YAPADIPAD@Z ; std::_Allocate<char>
  00057	59		 pop	 ecx
  00058	59		 pop	 ecx
  00059	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  0005c	eb 27		 jmp	 SHORT $LN19@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 1934 : 		_CATCH_ALL
; 1935 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  0005e	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00061	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00064	89 45 ec	 mov	 DWORD PTR __Newres$[ebp], eax

; 1936 : 			_TRY_BEGIN
; 1937 : 				_Ptr = this->_Alval.allocate(_Newres + 1);

  00067	40		 inc	 eax
  00068	6a 00		 push	 0
  0006a	50		 push	 eax
  0006b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  0006f	e8 00 00 00 00	 call	 ??$_Allocate@D@std@@YAPADIPAD@Z ; std::_Allocate<char>
  00074	59		 pop	 ecx
  00075	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  00078	59		 pop	 ecx

; 1941 : 			_CATCH_END
; 1942 : 		_CATCH_END

  00079	b8 00 00 00 00	 mov	 eax, $LN63@Copy
  0007e	c3		 ret	 0
$LN63@Copy:
  0007f	8b 75 e8	 mov	 esi, DWORD PTR _this$[ebp]
  00082	8b 7d ec	 mov	 edi, DWORD PTR __Newres$[ebp]
$LN19@Copy:

; 1943 : 
; 1944 : 		if (0 < _Oldlen)

  00085	8b 5d 0c	 mov	 ebx, DWORD PTR __Oldlen$[ebp]
  00088	85 db		 test	 ebx, ebx
  0008a	74 19		 je	 SHORT $LN52@Copy

; 1945 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  0008c	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00090	72 04		 jb	 SHORT $LN50@Copy
  00092	8b 06		 mov	 eax, DWORD PTR [esi]
  00094	eb 02		 jmp	 SHORT $LN51@Copy
$LN50@Copy:
  00096	8b c6		 mov	 eax, esi
$LN51@Copy:
  00098	53		 push	 ebx
  00099	50		 push	 eax
  0009a	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  0009d	e8 00 00 00 00	 call	 _memcpy
  000a2	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN52@Copy:

; 1946 : 		_Tidy(true);

  000a5	6a 00		 push	 0
  000a7	6a 01		 push	 1
  000a9	8b ce		 mov	 ecx, esi
  000ab	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 1947 : 		this->_Bx._Ptr = _Ptr;

  000b0	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000b3	89 06		 mov	 DWORD PTR [esi], eax

; 1948 : 		this->_Myres = _Newres;
; 1949 : 		_Eos(_Oldlen);

  000b5	83 ff 10	 cmp	 edi, 16			; 00000010H
  000b8	89 7e 14	 mov	 DWORD PTR [esi+20], edi
  000bb	89 5e 10	 mov	 DWORD PTR [esi+16], ebx
  000be	0f 42 c6	 cmovb	 eax, esi
  000c1	c6 04 18 00	 mov	 BYTE PTR [eax+ebx], 0

; 1950 : 		}

  000c5	e8 00 00 00 00	 call	 __EH_epilog3
  000ca	c2 08 00	 ret	 8
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 1938 : 			_CATCH_ALL
; 1939 : 			_Tidy(true);	// failed again, discard storage and reraise

  000cd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	33 f6		 xor	 esi, esi
  000d2	56		 push	 esi
  000d3	6a 01		 push	 1
  000d5	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 1940 : 			_RERAISE;

  000da	56		 push	 esi
  000db	56		 push	 esi
  000dc	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN67@Copy:
$LN66@Copy:
  000e1	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	??0?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@ABV01@@Z ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b 7d 08	 mov	 edi, DWORD PTR ___that$[ebp]
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@ABU01@@Z ; std::_Iterator_base12::_Iterator_base12
  00010	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00013	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00016	5f		 pop	 edi
  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
??0?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
_TEXT	ENDS
PUBLIC	?pop_front@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXXZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::pop_front
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
;	COMDAT ?pop_front@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?pop_front@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXXZ PROC ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::pop_front, COMDAT
; _this$ = ecx

; 1233 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1234 : 		if (empty())
; 1235 : 			_DEBUG_ERROR("deque empty before pop");
; 1236 : 		else
; 1237 : 			{	// something to erase, do it
; 1238 : 			_Orphan_off(this->_Myoff);
; 1239 : 			size_type _Block = this->_Myoff / _DEQUESIZ;
; 1240 : 			_Dest_val(this->_Alval,
; 1241 : 				this->_Map[_Block] + this->_Myoff % _DEQUESIZ);
; 1242 : 			if (this->_Mapsize * _DEQUESIZ <= ++this->_Myoff)
; 1243 : 				this->_Myoff = 0;
; 1244 : 			if (--this->_Mysize == 0)
; 1245 : 				this->_Myoff = 0;
; 1246 : 			}
; 1247 : 
; 1248 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1249 : 		if (!empty())

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00003	85 c0		 test	 eax, eax
  00005	74 1e		 je	 SHORT $LN1@pop_front

; 1250 : 			{	// something to erase, do it
; 1251 : 			size_type _Block = this->_Myoff / _DEQUESIZ;
; 1252 : 			_Dest_val(this->_Alval,
; 1253 : 				this->_Map[_Block] + this->_Myoff % _DEQUESIZ);
; 1254 : 			if (this->_Mapsize * _DEQUESIZ <= ++this->_Myoff)

  00007	ff 41 0c	 inc	 DWORD PTR [ecx+12]
  0000a	56		 push	 esi
  0000b	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  0000e	c1 e6 02	 shl	 esi, 2
  00011	3b 71 0c	 cmp	 esi, DWORD PTR [ecx+12]
  00014	5e		 pop	 esi
  00015	77 04		 ja	 SHORT $LN2@pop_front

; 1255 : 				this->_Myoff = 0;

  00017	83 61 0c 00	 and	 DWORD PTR [ecx+12], 0
$LN2@pop_front:

; 1256 : 			if (--this->_Mysize == 0)

  0001b	48		 dec	 eax
  0001c	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  0001f	75 04		 jne	 SHORT $LN1@pop_front

; 1257 : 				this->_Myoff = 0;

  00021	83 61 0c 00	 and	 DWORD PTR [ecx+12], 0
$LN1@pop_front:

; 1258 : 			}
; 1259 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1260 : 		}

  00025	c3		 ret	 0
?pop_front@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXXZ ENDP ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::pop_front
_TEXT	ENDS
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator++
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 405  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 406  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::operator++

; 407  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 408  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	?_Growmap@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@IAEXI@Z ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Growmap
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
;	COMDAT ?_Growmap@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T509464 = -12						; size = 4
$T509411 = -12						; size = 4
__Myptr$ = -12						; size = 4
$T509386 = -8						; size = 4
$T509347 = -8						; size = 4
__Newmap$ = -4						; size = 4
__Cat$509436 = 8					; size = 1
__Cat$509422 = 8					; size = 1
__Cat$509358 = 8					; size = 1
__Cat$509344 = 8					; size = 1
__Count$ = 8						; size = 4
?_Growmap@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@IAEXI@Z PROC ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Growmap, COMDAT
; _this$ = ecx

; 1589 : 		{	// grow map by _Count pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 1590 : 		if (max_size() / _DEQUESIZ - this->_Mapsize < _Count)

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	ba ff ff ff 0f	 mov	 edx, 268435455		; 0fffffffH
  00011	8b ca		 mov	 ecx, edx
  00013	2b c8		 sub	 ecx, eax
  00015	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  00018	73 0b		 jae	 SHORT $LN6@Growmap

; 1591 : 			_Xlen();	// result too long

  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN75@Growmap:
$LN6@Growmap:

; 1592 : 
; 1593 : 		size_type _Inc = this->_Mapsize / 2;	// try to grow by 50%

  00025	8b c8		 mov	 ecx, eax
  00027	d1 e9		 shr	 ecx, 1

; 1594 : 		if (_Inc < _DEQUEMAPSIZ)

  00029	83 f9 08	 cmp	 ecx, 8
  0002c	73 03		 jae	 SHORT $LN5@Growmap

; 1595 : 			_Inc = _DEQUEMAPSIZ;

  0002e	6a 08		 push	 8
  00030	59		 pop	 ecx
$LN5@Growmap:

; 1596 : 		if (_Count < _Inc && this->_Mapsize <= max_size() / _DEQUESIZ - _Inc)

  00031	39 4d 08	 cmp	 DWORD PTR __Count$[ebp], ecx
  00034	73 09		 jae	 SHORT $LN4@Growmap
  00036	2b d1		 sub	 edx, ecx
  00038	3b c2		 cmp	 eax, edx
  0003a	77 03		 ja	 SHORT $LN4@Growmap

; 1597 : 			_Count = _Inc;

  0003c	89 4d 08	 mov	 DWORD PTR __Count$[ebp], ecx
$LN4@Growmap:

; 1598 : 		size_type _Myboff = this->_Myoff / _DEQUESIZ;
; 1599 : 		_Mapptr _Newmap = this->_Almap.allocate(this->_Mapsize + _Count);

  0003f	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00042	53		 push	 ebx
  00043	57		 push	 edi
  00044	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  00047	6a 00		 push	 0
  00049	50		 push	 eax
  0004a	c1 ef 02	 shr	 edi, 2
  0004d	e8 00 00 00 00	 call	 ??$_Allocate@PAPAUChatItem@CMannerTrialChat@@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@IPAPAPAU12@@Z ; std::_Allocate<CMannerTrialChat::ChatItem * *>

; 1600 : 		_Mapptr _Myptr = _Newmap + _Myboff;
; 1601 : 
; 1602 : 		_Myptr = _Uninitialized_copy(this->_Map + _Myboff,
; 1603 : 			this->_Map + this->_Mapsize,
; 1604 : 			_Myptr, this->_Almap);	// copy initial to end

  00052	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00055	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00058	ff 75 08	 push	 DWORD PTR __Cat$509344[ebp]
  0005b	8d 14 91	 lea	 edx, DWORD PTR [ecx+edx*4]
  0005e	8b df		 mov	 ebx, edi
  00060	c1 e3 02	 shl	 ebx, 2
  00063	03 cb		 add	 ecx, ebx
  00065	89 4d f8	 mov	 DWORD PTR $T509347[ebp], ecx
  00068	8d 4e 15	 lea	 ecx, DWORD PTR [esi+21]
  0006b	51		 push	 ecx
  0006c	89 45 fc	 mov	 DWORD PTR __Newmap$[ebp], eax
  0006f	03 c3		 add	 eax, ebx
  00071	50		 push	 eax
  00072	52		 push	 edx
  00073	ff 75 f8	 push	 DWORD PTR $T509347[ebp]
  00076	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAPAUChatItem@CMannerTrialChat@@PAPAU12@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@00AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<CMannerTrialChat::ChatItem * *,CMannerTrialChat::ChatItem * *>

; 1605 : 		if (_Myboff <= _Count)

  0007b	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]

; 1606 : 			{	// increment greater than offset of initial block
; 1607 : 			_Myptr = _Uninitialized_copy(this->_Map,
; 1608 : 				this->_Map + _Myboff,
; 1609 : 				_Myptr, this->_Almap);	// copy rest of old

  0007e	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00081	83 c4 1c	 add	 esp, 28			; 0000001cH
  00084	89 45 f4	 mov	 DWORD PTR __Myptr$[ebp], eax
  00087	3b fa		 cmp	 edi, edx
  00089	77 3d		 ja	 SHORT $LN3@Growmap

; 1610 : 			_Uninitialized_default_fill_n(_Myptr, _Count - _Myboff,
; 1611 : 				(pointer *)0, this->_Almap);	// clear suffix of new

  0008b	83 65 f8 00	 and	 DWORD PTR $T509386[ebp], 0
  0008f	8d 45 f8	 lea	 eax, DWORD PTR $T509386[ebp]
  00092	50		 push	 eax
  00093	2b d7		 sub	 edx, edi
  00095	52		 push	 edx
  00096	ff 75 08	 push	 DWORD PTR __Cat$509358[ebp]
  00099	8d 56 15	 lea	 edx, DWORD PTR [esi+21]
  0009c	52		 push	 edx
  0009d	ff 75 f4	 push	 DWORD PTR __Myptr$[ebp]
  000a0	03 d9		 add	 ebx, ecx
  000a2	53		 push	 ebx
  000a3	51		 push	 ecx
  000a4	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAPAUChatItem@CMannerTrialChat@@PAPAU12@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@00AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<CMannerTrialChat::ChatItem * *,CMannerTrialChat::ChatItem * *>
  000a9	83 c4 14	 add	 esp, 20			; 00000014H
  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 ??$_Fill_n@PAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@IABQAPAU12@@Z ; std::_Fill_n<CMannerTrialChat::ChatItem * * *,unsigned int,CMannerTrialChat::ChatItem * *>

; 1612 : 			_Uninitialized_default_fill_n(_Newmap, _Myboff,
; 1613 : 				(pointer *)0, this->_Almap);	// clear prefix of new

  000b2	83 65 f4 00	 and	 DWORD PTR $T509411[ebp], 0
  000b6	8d 45 f4	 lea	 eax, DWORD PTR $T509411[ebp]
  000b9	50		 push	 eax
  000ba	57		 push	 edi
  000bb	ff 75 fc	 push	 DWORD PTR __Newmap$[ebp]
  000be	e8 00 00 00 00	 call	 ??$_Fill_n@PAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@IABQAPAU12@@Z ; std::_Fill_n<CMannerTrialChat::ChatItem * * *,unsigned int,CMannerTrialChat::ChatItem * *>
  000c3	83 c4 18	 add	 esp, 24			; 00000018H

; 1614 : 			}
; 1615 : 		else

  000c6	eb 49		 jmp	 SHORT $LN64@Growmap
$LN3@Growmap:

; 1616 : 			{	// increment not greater than offset of initial block
; 1617 : 			_Uninitialized_copy(this->_Map,
; 1618 : 				this->_Map + _Count,
; 1619 : 				_Myptr, this->_Almap);	// copy more old

  000c8	ff 75 08	 push	 DWORD PTR __Cat$509422[ebp]
  000cb	8b fa		 mov	 edi, edx
  000cd	8d 56 15	 lea	 edx, DWORD PTR [esi+21]
  000d0	52		 push	 edx
  000d1	50		 push	 eax
  000d2	c1 e7 02	 shl	 edi, 2
  000d5	8d 04 0f	 lea	 eax, DWORD PTR [edi+ecx]
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAPAUChatItem@CMannerTrialChat@@PAPAU12@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@00AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<CMannerTrialChat::ChatItem * *,CMannerTrialChat::ChatItem * *>

; 1620 : 			_Myptr = _Uninitialized_copy(this->_Map + _Count,
; 1621 : 				this->_Map + _Myboff,
; 1622 : 				_Newmap, this->_Almap);	// copy rest of old

  000df	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 1623 : 			_Uninitialized_default_fill_n(_Myptr, _Count,
; 1624 : 				(pointer *)0, this->_Almap);	// clear rest to initial block

  000e2	83 65 f4 00	 and	 DWORD PTR $T509464[ebp], 0
  000e6	83 c4 14	 add	 esp, 20			; 00000014H
  000e9	03 d8		 add	 ebx, eax
  000eb	03 f8		 add	 edi, eax
  000ed	8d 45 f4	 lea	 eax, DWORD PTR $T509464[ebp]
  000f0	50		 push	 eax
  000f1	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  000f4	8d 46 15	 lea	 eax, DWORD PTR [esi+21]
  000f7	ff 75 08	 push	 DWORD PTR __Cat$509436[ebp]
  000fa	50		 push	 eax
  000fb	ff 75 fc	 push	 DWORD PTR __Newmap$[ebp]
  000fe	53		 push	 ebx
  000ff	57		 push	 edi
  00100	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAPAUChatItem@CMannerTrialChat@@PAPAU12@@std@@YAPAPAPAUChatItem@CMannerTrialChat@@PAPAPAU12@00AAV?$allocator@PAPAUChatItem@CMannerTrialChat@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<CMannerTrialChat::ChatItem * *,CMannerTrialChat::ChatItem * *>
  00105	83 c4 14	 add	 esp, 20			; 00000014H
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 ??$_Fill_n@PAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@@std@@YAXPAPAPAUChatItem@CMannerTrialChat@@IABQAPAU12@@Z ; std::_Fill_n<CMannerTrialChat::ChatItem * * *,unsigned int,CMannerTrialChat::ChatItem * *>
  0010e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN64@Growmap:

; 1625 : 			}
; 1626 : 
; 1627 : 		_Destroy_range(this->_Map + _Myboff, this->_Map + this->_Mapsize,
; 1628 : 			this->_Almap);
; 1629 : 		if (this->_Map != 0)

  00111	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00114	5f		 pop	 edi
  00115	5b		 pop	 ebx
  00116	85 c0		 test	 eax, eax
  00118	74 07		 je	 SHORT $LN72@Growmap

; 1630 : 			this->_Almap.deallocate(this->_Map,
; 1631 : 				this->_Mapsize);	// free storage for old

  0011a	50		 push	 eax
  0011b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00120	59		 pop	 ecx
$LN72@Growmap:

; 1632 : 
; 1633 : 		this->_Map = _Newmap;	// point at new

  00121	8b 45 fc	 mov	 eax, DWORD PTR __Newmap$[ebp]
  00124	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1634 : 		this->_Mapsize += _Count;

  00127	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0012a	01 46 08	 add	 DWORD PTR [esi+8], eax
  0012d	5e		 pop	 esi

; 1635 : 		}

  0012e	c9		 leave
  0012f	c2 04 00	 ret	 4
$LN74@Growmap:
?_Growmap@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@IAEXI@Z ENDP ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Growmap
_TEXT	ENDS
PUBLIC	??0?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@V?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z ; std::_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
EXTRN	__imp_??1_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_??0_Container_base12@std@@QAE@XZ:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??0?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@V?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@V?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z$0
__ehfuncinfo$??0?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@V?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@V?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
xdata$x	ENDS
;	COMDAT ??0?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@V?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@V?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z PROC ; std::_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >, COMDAT
; _this$ = ecx

; 728  : 		{	// construct allocators from _Al

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@V?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  00017	33 ff		 xor	 edi, edi

; 729  : 		typename _Alloc::template rebind<_Container_proxy>::other
; 730  : 			_Alproxy(_Alval);
; 731  : 		this->_Myproxy = _Alproxy.allocate(1);

  00019	57		 push	 edi
  0001a	6a 01		 push	 1
  0001c	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  0001f	e8 00 00 00 00	 call	 ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
  00024	59		 pop	 ecx
  00025	59		 pop	 ecx

; 732  : 		_Cons_val(_Alproxy, this->_Myproxy, _Container_proxy());

  00026	33 c9		 xor	 ecx, ecx
  00028	33 d2		 xor	 edx, edx
  0002a	89 06		 mov	 DWORD PTR [esi], eax
  0002c	3b c7		 cmp	 eax, edi
  0002e	74 05		 je	 SHORT $LN20@Deque_val
  00030	89 08		 mov	 DWORD PTR [eax], ecx
  00032	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Deque_val:

; 733  : 		this->_Myproxy->_Mycont = this;

  00035	8b 06		 mov	 eax, DWORD PTR [esi]
  00037	89 30		 mov	 DWORD PTR [eax], esi

; 734  : 
; 735  : 		_Map = 0;

  00039	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 736  : 		_Mapsize = 0;

  0003c	89 7e 08	 mov	 DWORD PTR [esi+8], edi

; 737  : 		_Myoff = 0;

  0003f	89 7e 0c	 mov	 DWORD PTR [esi+12], edi

; 738  : 		_Mysize = 0;

  00042	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 739  : 		}

  00045	8b c6		 mov	 eax, esi
  00047	e8 00 00 00 00	 call	 __EH_epilog3
  0004c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@V?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
__ehhandler$??0?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@V?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@V?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@V?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z ENDP ; std::_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
PUBLIC	??1?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ ; std::_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::~_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
EXTRN	__imp_?_Orphan_all@_Container_base12@std@@QAEXXZ:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
xdata$x	ENDS
;	COMDAT ??1?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ PROC ; std::_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::~_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >, COMDAT
; _this$ = ecx

; 742  : 		{	// destroy proxy

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 743  : 		typename _Alloc::template rebind<_Container_proxy>::other
; 744  : 			_Alproxy(_Alval);
; 745  : 		this->_Orphan_all();

  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ

; 746  : 		_Dest_val(_Alproxy, this->_Myproxy);
; 747  : 		_Alproxy.deallocate(this->_Myproxy, 1);

  0001b	ff 36		 push	 DWORD PTR [esi]
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 748  : 		this->_Myproxy = 0;

  00022	83 26 00	 and	 DWORD PTR [esi], 0

; 749  : 		}

  00025	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00029	59		 pop	 ecx
  0002a	8b ce		 mov	 ecx, esi
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  00032	e8 00 00 00 00	 call	 __EH_epilog3
  00037	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
__ehhandler$??1?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::~_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z
_TEXT	SEGMENT
$T509593 = -4						; size = 4
$T509588 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >, COMDAT
; _this$ = ecx

; 698  : 		{	// construct empty tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	51		 push	 ecx
  00006	89 65 fc	 mov	 DWORD PTR $T509588[ebp], esp
  00009	89 65 fc	 mov	 DWORD PTR $T509593[ebp], esp
  0000c	ff 75 08	 push	 DWORD PTR __Parg$[ebp]
  0000f	8b f1		 mov	 esi, ecx
  00011	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >

; 699  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	c9		 leave
  0001a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Erase
; Function compile flags: /Ogsp
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1610 : 		{	// free entire subtree, recursively

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1611 : 		for (_Nodeptr _Pnode = _Rootnode;

  00006	8b 7d 08	 mov	 edi, DWORD PTR __Rootnode$[ebp]

; 1612 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

  00009	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  0000d	8b d9		 mov	 ebx, ecx
  0000f	8b f7		 mov	 esi, edi
  00011	75 1b		 jne	 SHORT $LN1@Erase
$LL3@Erase:

; 1613 : 			{	// free subtrees, then node
; 1614 : 			_Erase(this->_Right(_Pnode));

  00013	ff 76 08	 push	 DWORD PTR [esi+8]
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Erase

; 1615 : 			_Pnode = this->_Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 1616 : 			_Dest_val(this->_Alval,
; 1617 : 				_STD addressof(this->_Myval(_Rootnode)));
; 1618 : 
; 1619 : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	80 7e 15 00	 cmp	 BYTE PTR [esi+21], 0
  00029	59		 pop	 ecx
  0002a	8b fe		 mov	 edi, esi
  0002c	74 e5		 je	 SHORT $LL3@Erase
$LN1@Erase:
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx

; 1620 : 			}
; 1621 : 		}

  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	??0?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Deque_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
;	COMDAT ??0?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Pdeque$ = 12						; size = 4
??0?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z PROC ; std::_Deque_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Deque_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >, COMDAT
; _this$ = ecx

; 601  : 		{	// construct with offset _Off in *_Pdeque

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 0c	 push	 DWORD PTR __Pdeque$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 08	 push	 DWORD PTR __Off$[ebp]
  0000c	e8 00 00 00 00	 call	 ??0?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >

; 602  : 		}

  00011	8b c6		 mov	 eax, esi
  00013	5e		 pop	 esi
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ENDP ; std::_Deque_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Deque_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >, COMDAT
; _this$ = ecx

; 378  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 379  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> > >
_TEXT	ENDS
PUBLIC	?pop_back@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXXZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::pop_back
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
;	COMDAT ?pop_back@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?pop_back@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXXZ PROC ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::pop_back, COMDAT
; _this$ = ecx

; 1273 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1274 : 		if (empty())
; 1275 : 			_DEBUG_ERROR("deque empty before pop");
; 1276 : 		else
; 1277 : 			{	// something to erase, do it
; 1278 : 			_Orphan_off(this->_Myoff + this->_Mysize - 1);
; 1279 : 			size_type _Newoff = this->_Mysize + this->_Myoff - 1;
; 1280 : 			size_type _Block = _Newoff / _DEQUESIZ;
; 1281 : 			if (this->_Mapsize <= _Block)
; 1282 : 				_Block -= this->_Mapsize;
; 1283 : 			_Dest_val(this->_Alval,
; 1284 : 				this->_Map[_Block] + _Newoff % _DEQUESIZ);
; 1285 : 			if (--this->_Mysize == 0)
; 1286 : 				this->_Myoff = 0;
; 1287 : 			}
; 1288 : 
; 1289 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1290 : 		if (!empty())

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00003	85 c0		 test	 eax, eax
  00005	74 0a		 je	 SHORT $LN1@pop_back

; 1291 : 			{	// something to erase, do it
; 1292 : 			size_type _Newoff = this->_Mysize + this->_Myoff - 1;
; 1293 : 			size_type _Block = _Newoff / _DEQUESIZ;
; 1294 : 			if (this->_Mapsize <= _Block)
; 1295 : 				_Block -= this->_Mapsize;
; 1296 : 			_Dest_val(this->_Alval,
; 1297 : 				this->_Map[_Block] + _Newoff % _DEQUESIZ);
; 1298 : 			if (--this->_Mysize == 0)

  00007	48		 dec	 eax
  00008	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  0000b	75 04		 jne	 SHORT $LN1@pop_back

; 1299 : 				this->_Myoff = 0;

  0000d	83 61 0c 00	 and	 DWORD PTR [ecx+12], 0
$LN1@pop_back:

; 1300 : 			}
; 1301 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1302 : 		}

  00011	c3		 ret	 0
?pop_back@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXXZ ENDP ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::pop_back
_TEXT	ENDS
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::erase
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1195 : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))
; 1198 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1199 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1200 : 		++_Where;	// save successor iterator for return
; 1201 : 		_Orphan_ptr(*this, _Erasednode);
; 1202 : 
; 1203 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1204 : 		if (this->_Isnil(_Where._Mynode()))

  00005	8b 5d 0c	 mov	 ebx, DWORD PTR __Where$[ebp]
  00008	80 7b 15 00	 cmp	 BYTE PTR [ebx+21], 0
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00011	74 0b		 je	 SHORT $LN40@erase

; 1205 : 			_Xout_of_range("invalid map/set<T> iterator");

  00013	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN329@erase:
$LN40@erase:

; 1206 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1207 : 		++_Where;	// save successor iterator for return

  0001e	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00021	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::operator++

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1211 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1212 : 		_Nodeptr _Pnode = _Erasednode;
; 1213 : 
; 1214 : 		if (this->_Isnil(this->_Left(_Pnode)))

  00026	8b 13		 mov	 edx, DWORD PTR [ebx]
  00028	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0
  0002c	74 05		 je	 SHORT $LN39@erase

; 1215 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

  0002e	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 1216 : 		else if (this->_Isnil(this->_Right(_Pnode)))

  00031	eb 17		 jmp	 SHORT $LN321@erase
$LN39@erase:
  00033	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00036	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003a	74 04		 je	 SHORT $LN37@erase

; 1217 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

  0003c	8b fa		 mov	 edi, edx

; 1218 : 		else

  0003e	eb 0a		 jmp	 SHORT $LN321@erase
$LN37@erase:

; 1219 : 			{	// two subtrees, must lift successor node to replace erased
; 1220 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

  00040	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 1221 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

  00043	8b 78 08	 mov	 edi, DWORD PTR [eax+8]

; 1222 : 			}
; 1223 : 
; 1224 : 		if (_Pnode == _Erasednode)

  00046	3b c3		 cmp	 eax, ebx
  00048	75 76		 jne	 SHORT $LN35@erase
$LN321@erase:

; 1225 : 			{	// at most one subtree, relink it
; 1226 : 			_Fixnodeparent = this->_Parent(_Erasednode);
; 1227 : 			if (!this->_Isnil(_Fixnode))

  0004a	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  0004e	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  00051	75 03		 jne	 SHORT $LN34@erase

; 1228 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

  00053	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN34@erase:

; 1229 : 
; 1230 : 			if (_Root() == _Erasednode)

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0005c	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0005f	75 05		 jne	 SHORT $LN33@erase

; 1231 : 				_Root() = _Fixnode;	// link down from root

  00061	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 1232 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

  00064	eb 0b		 jmp	 SHORT $LN30@erase
$LN33@erase:
  00066	39 1e		 cmp	 DWORD PTR [esi], ebx
  00068	75 04		 jne	 SHORT $LN31@erase

; 1233 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  0006a	89 3e		 mov	 DWORD PTR [esi], edi

; 1234 : 			else

  0006c	eb 03		 jmp	 SHORT $LN30@erase
$LN31@erase:

; 1235 : 				this->_Right(_Fixnodeparent) =
; 1236 : 					_Fixnode;	// link down to right

  0006e	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$LN30@erase:

; 1237 : 
; 1238 : 			if (_Lmost() == _Erasednode)

  00071	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00074	39 19		 cmp	 DWORD PTR [ecx], ebx
  00076	75 1c		 jne	 SHORT $LN29@erase

; 1239 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1240 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1241 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

  00078	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  0007c	74 04		 je	 SHORT $LN43@erase
  0007e	8b d6		 mov	 edx, esi
  00080	eb 10		 jmp	 SHORT $LN97@erase
$LN43@erase:
  00082	8b 07		 mov	 eax, DWORD PTR [edi]
  00084	8b d7		 mov	 edx, edi
  00086	eb 04		 jmp	 SHORT $LN323@erase
$LL98@erase:
  00088	8b d0		 mov	 edx, eax
  0008a	8b 02		 mov	 eax, DWORD PTR [edx]
$LN323@erase:
  0008c	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00090	74 f6		 je	 SHORT $LL98@erase
$LN97@erase:
  00092	89 11		 mov	 DWORD PTR [ecx], edx
$LN29@erase:

; 1242 : 
; 1243 : 			if (_Rmost() == _Erasednode)

  00094	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00097	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0009a	39 59 08	 cmp	 DWORD PTR [ecx+8], ebx
  0009d	75 7b		 jne	 SHORT $LN185@erase

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  0009f	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  000a3	74 04		 je	 SHORT $LN45@erase
  000a5	8b d6		 mov	 edx, esi
  000a7	eb 12		 jmp	 SHORT $LN117@erase
$LN45@erase:
  000a9	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000ac	8b d7		 mov	 edx, edi
  000ae	eb 05		 jmp	 SHORT $LN324@erase
$LL118@erase:
  000b0	8b d0		 mov	 edx, eax
  000b2	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
$LN324@erase:
  000b5	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  000b9	74 f5		 je	 SHORT $LL118@erase
$LN117@erase:
  000bb	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 1247 : 			}
; 1248 : 		else

  000be	eb 5a		 jmp	 SHORT $LN185@erase
$LN35@erase:

; 1249 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1250 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1251 : 				_Pnode;	// link left up

  000c0	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1252 : 			this->_Left(_Pnode) =
; 1253 : 				this->_Left(_Erasednode);	// link successor down

  000c3	8b 13		 mov	 edx, DWORD PTR [ebx]
  000c5	89 10		 mov	 DWORD PTR [eax], edx

; 1254 : 
; 1255 : 			if (_Pnode == this->_Right(_Erasednode))

  000c7	3b 43 08	 cmp	 eax, DWORD PTR [ebx+8]
  000ca	75 04		 jne	 SHORT $LN26@erase

; 1256 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  000cc	8b f0		 mov	 esi, eax

; 1257 : 			else

  000ce	eb 1a		 jmp	 SHORT $LN25@erase
$LN26@erase:

; 1258 : 				{	// successor further down, link in place of erased
; 1259 : 				_Fixnodeparent =
; 1260 : 					this->_Parent(_Pnode);	// parent is successor's
; 1261 : 				if (!this->_Isnil(_Fixnode))

  000d0	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  000d4	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000d7	75 03		 jne	 SHORT $LN24@erase

; 1262 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  000d9	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN24@erase:

; 1263 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  000dc	89 3e		 mov	 DWORD PTR [esi], edi

; 1264 : 				this->_Right(_Pnode) =
; 1265 : 					this->_Right(_Erasednode);	// link next down

  000de	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  000e1	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1266 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1267 : 					_Pnode;	// right up

  000e4	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000e7	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN25@erase:

; 1268 : 				}
; 1269 : 
; 1270 : 			if (_Root() == _Erasednode)

  000ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000f0	39 59 04	 cmp	 DWORD PTR [ecx+4], ebx
  000f3	75 05		 jne	 SHORT $LN23@erase

; 1271 : 				_Root() = _Pnode;	// link down from root

  000f5	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1272 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

  000f8	eb 0e		 jmp	 SHORT $LN20@erase
$LN23@erase:
  000fa	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000fd	39 19		 cmp	 DWORD PTR [ecx], ebx
  000ff	75 04		 jne	 SHORT $LN21@erase

; 1273 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1274 : 					_Pnode;	// link down to left

  00101	89 01		 mov	 DWORD PTR [ecx], eax

; 1275 : 			else

  00103	eb 03		 jmp	 SHORT $LN20@erase
$LN21@erase:

; 1276 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1277 : 					_Pnode;	// link down to right

  00105	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN20@erase:

; 1278 : 
; 1279 : 			this->_Parent(_Pnode) =
; 1280 : 				this->_Parent(_Erasednode);	// link successor up

  00108	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0010b	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1281 : 			_STD swap(this->_Color(_Pnode),
; 1282 : 				this->_Color(_Erasednode));	// recolor it

  0010e	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00111	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00114	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00117	88 4b 14	 mov	 BYTE PTR [ebx+20], cl
$LN185@erase:

; 1283 : 			}
; 1284 : 
; 1285 : 		if (this->_Color(_Erasednode) == this->_Black)

  0011a	80 7b 14 01	 cmp	 BYTE PTR [ebx+20], 1
  0011e	0f 85 03 01 00
	00		 jne	 $LN19@erase

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00124	e9 b2 00 00 00	 jmp	 $LN326@erase
$LL18@erase:
  00129	80 7f 14 01	 cmp	 BYTE PTR [edi+20], 1
  0012d	0f 85 f0 00 00
	00		 jne	 $LN16@erase

; 1290 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

  00133	8b 06		 mov	 eax, DWORD PTR [esi]
  00135	3b f8		 cmp	 edi, eax
  00137	75 6c		 jne	 SHORT $LN15@erase

; 1291 : 					{	// fixup left subtree
; 1292 : 					_Pnode = this->_Right(_Fixnodeparent);

  00139	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 1293 : 					if (this->_Color(_Pnode) == this->_Red)

  0013c	80 78 14 00	 cmp	 BYTE PTR [eax+20], 0
  00140	75 11		 jne	 SHORT $LN14@erase

; 1294 : 						{	// rotate red up from right subtree
; 1295 : 						this->_Color(_Pnode) = this->_Black;

  00142	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1296 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1297 : 						_Lrotate(_Fixnodeparent);

  00146	56		 push	 esi
  00147	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  0014b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Lrotate

; 1298 : 						_Pnode = this->_Right(_Fixnodeparent);

  00150	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN14@erase:

; 1299 : 						}
; 1300 : 
; 1301 : 					if (this->_Isnil(_Pnode))

  00153	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0

; 1302 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1303 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

  00157	75 7d		 jne	 SHORT $LN327@erase

; 1304 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

  00159	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015b	80 79 14 01	 cmp	 BYTE PTR [ecx+20], 1
  0015f	75 09		 jne	 SHORT $LN11@erase
  00161	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00164	80 79 14 01	 cmp	 BYTE PTR [ecx+20], 1
  00168	74 68		 je	 SHORT $LN328@erase
$LN11@erase:

; 1305 : 						{	// redden right subtree with black children
; 1306 : 						this->_Color(_Pnode) = this->_Red;
; 1307 : 						_Fixnode = _Fixnodeparent;
; 1308 : 						}
; 1309 : 					else
; 1310 : 						{	// must rearrange right subtree
; 1311 : 						if (this->_Color(this->_Right(_Pnode))
; 1312 : 							== this->_Black)

  0016a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0016d	80 79 14 01	 cmp	 BYTE PTR [ecx+20], 1
  00171	75 16		 jne	 SHORT $LN9@erase

; 1313 : 							{	// rotate red up from left sub-subtree
; 1314 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

  00173	8b 08		 mov	 ecx, DWORD PTR [eax]
  00175	c6 41 14 01	 mov	 BYTE PTR [ecx+20], 1

; 1315 : 							this->_Color(_Pnode) = this->_Red;
; 1316 : 							_Rrotate(_Pnode);

  00179	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017c	50		 push	 eax
  0017d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00181	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Rrotate

; 1317 : 							_Pnode = this->_Right(_Fixnodeparent);

  00186	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN9@erase:

; 1318 : 							}
; 1319 : 
; 1320 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  00189	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0018c	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 1321 : 						this->_Color(_Fixnodeparent) = this->_Black;
; 1322 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;
; 1323 : 						_Lrotate(_Fixnodeparent);

  0018f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00192	c6 46 14 01	 mov	 BYTE PTR [esi+20], 1
  00196	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00199	56		 push	 esi
  0019a	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1
  0019e	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Lrotate

; 1324 : 						break;	// tree now recolored/rebalanced

  001a3	eb 7e		 jmp	 SHORT $LN16@erase
$LN15@erase:

; 1325 : 						}
; 1326 : 					}
; 1327 : 				else
; 1328 : 					{	// fixup right subtree
; 1329 : 					_Pnode = this->_Left(_Fixnodeparent);
; 1330 : 					if (this->_Color(_Pnode) == this->_Red)

  001a5	80 78 14 00	 cmp	 BYTE PTR [eax+20], 0
  001a9	75 10		 jne	 SHORT $LN7@erase

; 1331 : 						{	// rotate red up from left subtree
; 1332 : 						this->_Color(_Pnode) = this->_Black;

  001ab	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1333 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1334 : 						_Rrotate(_Fixnodeparent);

  001af	56		 push	 esi
  001b0	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b4	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Rrotate

; 1335 : 						_Pnode = this->_Left(_Fixnodeparent);

  001b9	8b 06		 mov	 eax, DWORD PTR [esi]
$LN7@erase:

; 1336 : 						}
; 1337 : 					if (this->_Isnil(_Pnode))

  001bb	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0

; 1338 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1339 : 					else if (this->_Color(this->_Right(_Pnode)) ==

  001bf	75 15		 jne	 SHORT $LN327@erase

; 1340 : 						this->_Black
; 1341 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

  001c1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001c4	80 79 14 01	 cmp	 BYTE PTR [ecx+20], 1
  001c8	75 22		 jne	 SHORT $LN4@erase
  001ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  001cc	80 79 14 01	 cmp	 BYTE PTR [ecx+20], 1
  001d0	75 1a		 jne	 SHORT $LN4@erase
$LN328@erase:

; 1342 : 						{	// redden left subtree with black children
; 1343 : 						this->_Color(_Pnode) = this->_Red;

  001d2	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$LN327@erase:

; 1344 : 						_Fixnode = _Fixnodeparent;

  001d6	8b fe		 mov	 edi, esi
  001d8	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
$LN326@erase:

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  001db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001de	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001e1	3b 78 04	 cmp	 edi, DWORD PTR [eax+4]
  001e4	0f 85 3f ff ff
	ff		 jne	 $LL18@erase
  001ea	eb 37		 jmp	 SHORT $LN16@erase
$LN4@erase:

; 1345 : 						}
; 1346 : 					else
; 1347 : 						{	// must rearrange left subtree
; 1348 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

  001ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ee	80 79 14 01	 cmp	 BYTE PTR [ecx+20], 1
  001f2	75 16		 jne	 SHORT $LN2@erase

; 1349 : 							{	// rotate red up from right sub-subtree
; 1350 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

  001f4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001f7	c6 41 14 01	 mov	 BYTE PTR [ecx+20], 1

; 1351 : 							this->_Color(_Pnode) = this->_Red;
; 1352 : 							_Lrotate(_Pnode);

  001fb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001fe	50		 push	 eax
  001ff	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00203	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Lrotate

; 1353 : 							_Pnode = this->_Left(_Fixnodeparent);

  00208	8b 06		 mov	 eax, DWORD PTR [esi]
$LN2@erase:

; 1354 : 							}
; 1355 : 
; 1356 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  0020a	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0020d	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 1357 : 						this->_Color(_Fixnodeparent) = this->_Black;
; 1358 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;
; 1359 : 						_Rrotate(_Fixnodeparent);

  00210	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00213	c6 46 14 01	 mov	 BYTE PTR [esi+20], 1
  00217	8b 00		 mov	 eax, DWORD PTR [eax]
  00219	56		 push	 esi
  0021a	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1
  0021e	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Rrotate
$LN16@erase:

; 1360 : 						break;	// tree now recolored/rebalanced
; 1361 : 						}
; 1362 : 					}
; 1363 : 
; 1364 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

  00223	c6 47 14 01	 mov	 BYTE PTR [edi+20], 1
$LN19@erase:

; 1365 : 			}
; 1366 : 
; 1367 : 		_Dest_val(this->_Alval,
; 1368 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node
; 1369 : 
; 1370 : 		this->_Alnod.deallocate(_Erasednode, 1);

  00227	53		 push	 ebx
  00228	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0022d	59		 pop	 ecx

; 1371 : 
; 1372 : 		if (0 < this->_Mysize)

  0022e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00231	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00234	5f		 pop	 edi
  00235	5e		 pop	 esi
  00236	5b		 pop	 ebx
  00237	85 c0		 test	 eax, eax
  00239	74 04		 je	 SHORT $LN1@erase

; 1373 : 			--this->_Mysize;

  0023b	48		 dec	 eax
  0023c	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@erase:

; 1374 : 
; 1375 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

  0023f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00242	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00245	89 08		 mov	 DWORD PTR [eax], ecx

; 1376 : 		}

  00247	c9		 leave
  00248	c2 08 00	 ret	 8
$LN322@erase:
?erase@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::erase
_TEXT	ENDS
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Insert
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1631 : 		{	// add node with value next to _Wherenode, to left if _Addleft

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 1632 : 		if (max_size() - 1 <= this->_Mysize)

  00008	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0000b	3d fe ff ff 1f	 cmp	 eax, 536870910		; 1ffffffeH
  00010	72 15		 jb	 SHORT $LN17@Insert

; 1633 : 			{	// tree would get too big, fail
; 1634 : 			_Dest_val(this->_Alval,
; 1635 : 				_STD addressof(this->_Myval(_Newnode)));
; 1636 : 
; 1637 : 			this->_Alnod.deallocate(_Newnode, 1);

  00012	ff 75 14	 push	 DWORD PTR __Newnode$[ebp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 1638 : 
; 1639 : 			_Xlength_error("map/set<T> too long");

  0001a	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN188@Insert:
$LN17@Insert:

; 1640 : 			}
; 1641 : 		++this->_Mysize;
; 1642 : 		_Newnode->_Parent = _Wherenode;

  00027	8b 5d 14	 mov	 ebx, DWORD PTR __Newnode$[ebp]
  0002a	40		 inc	 eax
  0002b	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0002e	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00031	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 1643 : 
; 1644 : 		if (_Wherenode == this->_Myhead)

  00034	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00037	3b c1		 cmp	 eax, ecx
  00039	75 10		 jne	 SHORT $LN16@Insert

; 1645 : 			{	// first node in tree, just set head values
; 1646 : 			_Root() = _Newnode;

  0003b	89 59 04	 mov	 DWORD PTR [ecx+4], ebx

; 1647 : 			_Lmost() = _Newnode;

  0003e	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00041	89 18		 mov	 DWORD PTR [eax], ebx

; 1648 : 			_Rmost() = _Newnode;

  00043	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00046	89 58 08	 mov	 DWORD PTR [eax+8], ebx
  00049	eb 21		 jmp	 SHORT $LN11@Insert
$LN16@Insert:

; 1649 : 			}
; 1650 : 		else if (_Addleft)

  0004b	80 7d 0c 00	 cmp	 BYTE PTR __Addleft$[ebp], 0
  0004f	74 0d		 je	 SHORT $LN14@Insert

; 1651 : 			{	// add to left of _Wherenode
; 1652 : 			this->_Left(_Wherenode) = _Newnode;

  00051	89 18		 mov	 DWORD PTR [eax], ebx

; 1653 : 			if (_Wherenode == _Lmost())

  00053	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00056	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00058	75 12		 jne	 SHORT $LN11@Insert

; 1654 : 				_Lmost() = _Newnode;

  0005a	89 19		 mov	 DWORD PTR [ecx], ebx

; 1655 : 			}
; 1656 : 		else

  0005c	eb 0e		 jmp	 SHORT $LN11@Insert
$LN14@Insert:

; 1657 : 			{	// add to right of _Wherenode
; 1658 : 			this->_Right(_Wherenode) = _Newnode;

  0005e	89 58 08	 mov	 DWORD PTR [eax+8], ebx

; 1659 : 			if (_Wherenode == _Rmost())

  00061	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00064	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00067	75 03		 jne	 SHORT $LN11@Insert

; 1660 : 				_Rmost() = _Newnode;

  00069	89 59 08	 mov	 DWORD PTR [ecx+8], ebx
$LN11@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  0006c	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0006f	8b f3		 mov	 esi, ebx
  00071	e9 93 00 00 00	 jmp	 $LN186@Insert
$LL10@Insert:

; 1665 : 			if (this->_Parent(_Pnode)
; 1666 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

  00076	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00079	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007c	3b 01		 cmp	 eax, DWORD PTR [ecx]
  0007e	75 38		 jne	 SHORT $LN8@Insert

; 1667 : 				{	// fixup red-red in left subtree
; 1668 : 				_Wherenode =
; 1669 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

  00080	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1670 : 				if (this->_Color(_Wherenode) == this->_Red)

  00083	80 79 14 00	 cmp	 BYTE PTR [ecx+20], 0

; 1671 : 					{	// parent has two red children, blacken both
; 1672 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;
; 1673 : 					this->_Color(_Wherenode) = this->_Black;
; 1674 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1675 : 						= this->_Red;
; 1676 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));
; 1677 : 					}
; 1678 : 				else

  00087	74 37		 je	 SHORT $LN187@Insert

; 1679 : 					{	// parent has red and black children
; 1680 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

  00089	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008c	75 0a		 jne	 SHORT $LN5@Insert

; 1681 : 						{	// rotate right child to left
; 1682 : 						_Pnode = this->_Parent(_Pnode);

  0008e	8b f0		 mov	 esi, eax

; 1683 : 						_Lrotate(_Pnode);

  00090	56		 push	 esi
  00091	8b cf		 mov	 ecx, edi
  00093	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Lrotate
$LN5@Insert:

; 1684 : 						}
; 1685 : 					this->_Color(this->_Parent(_Pnode)) =
; 1686 : 						this->_Black;	// propagate red up

  00098	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0009b	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1687 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1688 : 						this->_Red;

  0009f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a2	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000a5	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

  000a9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000ac	ff 70 04	 push	 DWORD PTR [eax+4]
  000af	8b cf		 mov	 ecx, edi
  000b1	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Rrotate

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  000b6	eb 4e		 jmp	 SHORT $LN2@Insert
$LN8@Insert:

; 1693 : 				{	// fixup red-red in right subtree
; 1694 : 				_Wherenode =
; 1695 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

  000b8	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1696 : 				if (this->_Color(_Wherenode) == this->_Red)

  000ba	80 79 14 00	 cmp	 BYTE PTR [ecx+20], 0
  000be	75 1a		 jne	 SHORT $LN3@Insert
$LN187@Insert:

; 1697 : 					{	// parent has two red children, blacken both
; 1698 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  000c0	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1699 : 					this->_Color(_Wherenode) = this->_Black;

  000c4	c6 41 14 01	 mov	 BYTE PTR [ecx+20], 1

; 1700 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1701 : 						this->_Red;

  000c8	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cb	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000ce	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0

; 1702 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  000d2	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000d5	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 1703 : 					}
; 1704 : 				else

  000d8	eb 2c		 jmp	 SHORT $LN2@Insert
$LN3@Insert:

; 1705 : 					{	// parent has red and black children
; 1706 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

  000da	3b 30		 cmp	 esi, DWORD PTR [eax]
  000dc	75 0a		 jne	 SHORT $LN1@Insert

; 1707 : 						{	// rotate left child to right
; 1708 : 						_Pnode = this->_Parent(_Pnode);

  000de	8b f0		 mov	 esi, eax

; 1709 : 						_Rrotate(_Pnode);

  000e0	56		 push	 esi
  000e1	8b cf		 mov	 ecx, edi
  000e3	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Rrotate
$LN1@Insert:

; 1710 : 						}
; 1711 : 					this->_Color(this->_Parent(_Pnode)) =
; 1712 : 						this->_Black;	// propagate red up

  000e8	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000eb	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1713 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1714 : 						this->_Red;

  000ef	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000f2	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000f5	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0

; 1715 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

  000f9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000fc	ff 70 04	 push	 DWORD PTR [eax+4]
  000ff	8b cf		 mov	 ecx, edi
  00101	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Lrotate
$LN2@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  00106	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
$LN186@Insert:
  00109	80 78 14 00	 cmp	 BYTE PTR [eax+20], 0
  0010d	0f 84 63 ff ff
	ff		 je	 $LL10@Insert

; 1716 : 					}
; 1717 : 				}
; 1718 : 
; 1719 : 		this->_Color(_Root()) = this->_Black;	// root is always black

  00113	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00116	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00119	5f		 pop	 edi
  0011a	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1720 : 		return (iterator(_Newnode, this));

  0011e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00121	5e		 pop	 esi
  00122	89 18		 mov	 DWORD PTR [eax], ebx
  00124	5b		 pop	 ebx

; 1721 : 		}

  00125	5d		 pop	 ebp
  00126	c2 10 00	 ret	 16			; 00000010H
$LN185@Insert:
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QAEXPAU?$pair@$$CBKPAVCMannerTrialChat@@@2@$$QAU32@@Z ; std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >::construct
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QAEXPAU?$pair@$$CBKPAVCMannerTrialChat@@@2@$$QAU32@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QAEXPAU?$pair@$$CBKPAVCMannerTrialChat@@@2@$$QAU32@@Z PROC ; std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN3@construct@3
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN3@construct@3:

; 203  : 		}

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
?construct@?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@QAEXPAU?$pair@$$CBKPAVCMannerTrialChat@@@2@$$QAU32@@Z ENDP ; std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >::construct
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 550  : 		{	// construct empty string

  00000	8b c1		 mov	 eax, ecx

; 551  : 		_Tidy();

  00002	83 60 10 00	 and	 DWORD PTR [eax+16], 0
  00006	c7 40 14 0f 00
	00 00		 mov	 DWORD PTR [eax+20], 15	; 0000000fH
  0000d	c6 00 00	 mov	 BYTE PTR [eax], 0

; 552  : 		}

  00010	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 754  : 		_Tidy(true);

  00000	6a 00		 push	 0
  00002	6a 01		 push	 1
  00004	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 755  : 		}

  00009	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
; Function compile flags: /Ogsp
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1959 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1960 : 		if (max_size() < _Newsize)

  00004	8b 75 08	 mov	 esi, DWORD PTR __Newsize$[ebp]
  00007	83 fe fe	 cmp	 esi, -2			; fffffffeH
  0000a	76 0b		 jbe	 SHORT $LN6@Grow

; 1961 : 			_Xlen();	// result too long

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN31@Grow:
$LN6@Grow:

; 1962 : 		if (this->_Myres < _Newsize)

  00017	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  0001a	3b c6		 cmp	 eax, esi
  0001c	73 0b		 jae	 SHORT $LN5@Grow

; 1963 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

  0001e	ff 71 10	 push	 DWORD PTR [ecx+16]
  00021	56		 push	 esi
  00022	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00027	eb 2e		 jmp	 SHORT $LN28@Grow
$LN5@Grow:

; 1964 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

  00029	33 d2		 xor	 edx, edx
  0002b	38 55 0c	 cmp	 BYTE PTR __Trim$[ebp], dl
  0002e	74 17		 je	 SHORT $LN3@Grow
  00030	83 fe 10	 cmp	 esi, 16			; 00000010H
  00033	73 12		 jae	 SHORT $LN3@Grow

; 1965 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1966 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

  00035	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00038	3b f0		 cmp	 esi, eax
  0003a	0f 42 c6	 cmovb	 eax, esi
  0003d	50		 push	 eax
  0003e	6a 01		 push	 1
  00040	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  00045	eb 10		 jmp	 SHORT $LN28@Grow
$LN3@Grow:

; 1967 : 		else if (_Newsize == 0)

  00047	3b f2		 cmp	 esi, edx
  00049	75 0c		 jne	 SHORT $LN28@Grow

; 1968 : 			_Eos(0);	// new size is zero, just null terminate

  0004b	89 51 10	 mov	 DWORD PTR [ecx+16], edx
  0004e	83 f8 10	 cmp	 eax, 16			; 00000010H
  00051	72 02		 jb	 SHORT $LN26@Grow
  00053	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN26@Grow:
  00055	88 11		 mov	 BYTE PTR [ecx], dl
$LN28@Grow:

; 1969 : 		return (0 < _Newsize);	// return true only if more work to do

  00057	33 c0		 xor	 eax, eax
  00059	3b c6		 cmp	 eax, esi
  0005b	1b c0		 sbb	 eax, eax
  0005d	f7 d8		 neg	 eax
  0005f	5e		 pop	 esi

; 1970 : 		}

  00060	5d		 pop	 ebp
  00061	c2 08 00	 ret	 8
$LN30@Grow:
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Ogsp
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 799  : 		{	// append _Right [_Roff, _Roff + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 800  : 		if (_Right.size() < _Roff)

  00003	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	3b 45 0c	 cmp	 eax, DWORD PTR __Roff$[ebp]
  00010	73 0b		 jae	 SHORT $LN4@append

; 801  : 			_Xran();	// _Roff off end

  00012	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN36@append:
$LN4@append:

; 802  : 		size_type _Num = _Right.size() - _Roff;

  0001d	2b 45 0c	 sub	 eax, DWORD PTR __Roff$[ebp]

; 803  : 		if (_Num < _Count)

  00020	8b 5d 10	 mov	 ebx, DWORD PTR __Count$[ebp]
  00023	3b c3		 cmp	 eax, ebx

; 804  : 			_Count = _Num;	// trim _Count to size

  00025	0f 42 d8	 cmovb	 ebx, eax

; 805  : 		if (npos - this->_Mysize <= _Count)

  00028	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0002b	83 c9 ff	 or	 ecx, -1
  0002e	2b c8		 sub	 ecx, eax
  00030	3b cb		 cmp	 ecx, ebx
  00032	77 0b		 ja	 SHORT $LN2@append

; 806  : 			_Xlen();	// result too long

  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN37@append:
$LN2@append:

; 807  : 
; 808  : 		if (0 < _Count && _Grow(_Num = this->_Mysize + _Count))

  0003f	85 db		 test	 ebx, ebx
  00041	74 50		 je	 SHORT $LN32@append
  00043	57		 push	 edi
  00044	8d 3c 18	 lea	 edi, DWORD PTR [eax+ebx]
  00047	6a 00		 push	 0
  00049	57		 push	 edi
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  00051	84 c0		 test	 al, al
  00053	74 3d		 je	 SHORT $LN34@append

; 809  : 			{	// make room and append new stuff
; 810  : 			_Traits::copy(_Myptr() + this->_Mysize,
; 811  : 				_Right._Myptr() + _Roff, _Count);

  00055	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00058	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0005c	72 02		 jb	 SHORT $LN18@append
  0005e	8b 00		 mov	 eax, DWORD PTR [eax]
$LN18@append:
  00060	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00064	72 04		 jb	 SHORT $LN22@append
  00066	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00068	eb 02		 jmp	 SHORT $LN23@append
$LN22@append:
  0006a	8b ce		 mov	 ecx, esi
$LN23@append:
  0006c	03 45 0c	 add	 eax, DWORD PTR __Roff$[ebp]
  0006f	53		 push	 ebx
  00070	50		 push	 eax
  00071	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00074	03 c1		 add	 eax, ecx
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 _memcpy
  0007c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 812  : 			_Eos(_Num);

  0007f	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00083	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  00086	72 04		 jb	 SHORT $LN30@append
  00088	8b 06		 mov	 eax, DWORD PTR [esi]
  0008a	eb 02		 jmp	 SHORT $LN31@append
$LN30@append:
  0008c	8b c6		 mov	 eax, esi
$LN31@append:
  0008e	c6 04 38 00	 mov	 BYTE PTR [eax+edi], 0
$LN34@append:
  00092	5f		 pop	 edi
$LN32@append:

; 813  : 			}
; 814  : 		return (*this);

  00093	8b c6		 mov	 eax, esi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx

; 815  : 		}

  00097	5d		 pop	 ebp
  00098	c2 0c 00	 ret	 12			; 0000000cH
$LN35@append:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	??0?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
;	COMDAT ??0?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T510692 = -4						; size = 4
$T510687 = -4						; size = 4
??0?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ PROC ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >, COMDAT
; _this$ = ecx

; 799  : 		{	// construct empty deque

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	51		 push	 ecx
  00006	89 65 fc	 mov	 DWORD PTR $T510687[ebp], esp
  00009	8b f1		 mov	 esi, ecx
  0000b	89 65 fc	 mov	 DWORD PTR $T510692[ebp], esp
  0000e	e8 00 00 00 00	 call	 ??0?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@V?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z ; std::_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >

; 800  : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c9		 leave
  00017	c3		 ret	 0
??0?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ ENDP ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
_TEXT	ENDS
PUBLIC	?begin@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE?AV?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@XZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE?AV?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE?AV?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@XZ PROC ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::begin, COMDAT
; _this$ = ecx

; 1050 : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1051 : 		return (iterator(this->_Myoff, this));

  00003	51		 push	 ecx
  00004	ff 71 0c	 push	 DWORD PTR [ecx+12]
  00007	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1052 : 		}

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?begin@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE?AV?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@XZ ENDP ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE?AV?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@XZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE?AV?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE?AV?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@XZ PROC ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::end, COMDAT
; _this$ = ecx

; 1060 : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1061 : 		return (iterator(this->_Myoff + this->_Mysize, this));

  00003	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00006	03 41 0c	 add	 eax, DWORD PTR [ecx+12]
  00009	51		 push	 ecx
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??0?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
  00013	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1062 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?end@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE?AV?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@XZ ENDP ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::end
_TEXT	ENDS
PUBLIC	?front@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEAAPAUChatItem@CMannerTrialChat@@XZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::front
; Function compile flags: /Ogsp
;	COMDAT ?front@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEAAPAUChatItem@CMannerTrialChat@@XZ
_TEXT	SEGMENT
$T510708 = -12						; size = 12
?front@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEAAPAUChatItem@CMannerTrialChat@@XZ PROC ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::front, COMDAT
; _this$ = ecx

; 1203 : 		{	// return first element of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1204 : 		return (*begin());

  00006	8d 45 f4	 lea	 eax, DWORD PTR $T510708[ebp]
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ?begin@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE?AV?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@XZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::begin
  0000f	8b c8		 mov	 ecx, eax
  00011	e8 00 00 00 00	 call	 ??D?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEABQAUChatItem@CMannerTrialChat@@XZ ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator*

; 1205 : 		}

  00016	c9		 leave
  00017	c3		 ret	 0
?front@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEAAPAUChatItem@CMannerTrialChat@@XZ ENDP ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::front
_TEXT	ENDS
PUBLIC	?push_back@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXABQAUChatItem@CMannerTrialChat@@@Z ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::push_back
; Function compile flags: /Ogsp
;	COMDAT ?push_back@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXABQAUChatItem@CMannerTrialChat@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXABQAUChatItem@CMannerTrialChat@@@Z PROC ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::push_back, COMDAT
; _this$ = ecx

; 1263 : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f1		 mov	 esi, ecx

; 1264 : 		this->_Orphan_all();

  00007	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ

; 1265 : 		_PUSH_BACK_BEGIN;

  0000d	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00010	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00013	03 c8		 add	 ecx, eax
  00015	f6 c1 03	 test	 cl, 3
  00018	75 14		 jne	 SHORT $LN3@push_back
  0001a	83 c0 04	 add	 eax, 4
  0001d	c1 e8 02	 shr	 eax, 2
  00020	39 46 08	 cmp	 DWORD PTR [esi+8], eax
  00023	77 09		 ja	 SHORT $LN3@push_back
  00025	6a 01		 push	 1
  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?_Growmap@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@IAEXI@Z ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Growmap
$LN3@push_back:
  0002e	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  00031	03 7e 10	 add	 edi, DWORD PTR [esi+16]
  00034	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00037	8b c7		 mov	 eax, edi
  00039	c1 e8 02	 shr	 eax, 2
  0003c	3b c8		 cmp	 ecx, eax
  0003e	77 02		 ja	 SHORT $LN2@push_back
  00040	2b c1		 sub	 eax, ecx
$LN2@push_back:
  00042	53		 push	 ebx
  00043	8b d8		 mov	 ebx, eax
  00045	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00048	83 3c 98 00	 cmp	 DWORD PTR [eax+ebx*4], 0
  0004c	75 11		 jne	 SHORT $LN1@push_back
  0004e	6a 00		 push	 0
  00050	6a 04		 push	 4
  00052	e8 00 00 00 00	 call	 ??$_Allocate@PAUChatItem@CMannerTrialChat@@@std@@YAPAPAUChatItem@CMannerTrialChat@@IPAPAU12@@Z ; std::_Allocate<CMannerTrialChat::ChatItem *>
  00057	59		 pop	 ecx
  00058	59		 pop	 ecx
  00059	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0005c	89 04 99	 mov	 DWORD PTR [ecx+ebx*4], eax
$LN1@push_back:

; 1266 : 		_Cons_val(this->_Alval,
; 1267 : 			this->_Map[_Block] + _Newoff % _DEQUESIZ, _Val);

  0005f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00062	8b 04 98	 mov	 eax, DWORD PTR [eax+ebx*4]
  00065	83 e7 03	 and	 edi, 3
  00068	8d 3c b8	 lea	 edi, DWORD PTR [eax+edi*4]
  0006b	5b		 pop	 ebx
  0006c	85 ff		 test	 edi, edi
  0006e	74 07		 je	 SHORT $LN16@push_back
  00070	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00073	8b 00		 mov	 eax, DWORD PTR [eax]
  00075	89 07		 mov	 DWORD PTR [edi], eax
$LN16@push_back:

; 1268 : 		_PUSH_BACK_END;

  00077	ff 46 10	 inc	 DWORD PTR [esi+16]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 1269 : 		}

  0007c	5d		 pop	 ebp
  0007d	c2 04 00	 ret	 4
?push_back@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXABQAUChatItem@CMannerTrialChat@@@Z ENDP ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::push_back
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::begin
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 807  : 		return (iterator(_Lmost(), this));

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 808  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 817  : 		return (iterator(this->_Myhead, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 818  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::end
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::clear, COMDAT
; _this$ = ecx

; 1410 : 		{	// erase all

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 1411 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1412 : 		this->_Orphan_ptr(*this, 0);
; 1413 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1414 : 
; 1415 : 		_Erase(_Root());

  00004	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00007	ff 70 04	 push	 DWORD PTR [eax+4]
  0000a	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Erase

; 1416 : 		_Root() = this->_Myhead;

  0000f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1417 : 		_Lmost() = this->_Myhead;

  00015	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax

; 1418 : 		_Rmost() = this->_Myhead;

  0001a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0001d	89 76 08	 mov	 DWORD PTR [esi+8], esi

; 1419 : 		this->_Mysize = 0;

  00020	83 67 08 00	 and	 DWORD PTR [edi+8], 0
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi

; 1420 : 		}

  00026	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?_Tidy@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@IAEXXZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Tidy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
;	COMDAT ?_Tidy@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@IAEXXZ PROC ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Tidy, COMDAT
; _this$ = ecx

; 1638 : 		{	// free all storage

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1639 : 		while (!empty())

  00004	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00007	33 db		 xor	 ebx, ebx
  00009	3b c3		 cmp	 eax, ebx
  0000b	74 12		 je	 SHORT $LN5@Tidy@2
$LL6@Tidy@2:

; 1640 : 			pop_back();

  0000d	3b c3		 cmp	 eax, ebx
  0000f	74 09		 je	 SHORT $LN11@Tidy@2
  00011	48		 dec	 eax
  00012	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00015	75 03		 jne	 SHORT $LN11@Tidy@2
  00017	89 5e 0c	 mov	 DWORD PTR [esi+12], ebx
$LN11@Tidy@2:

; 1639 : 		while (!empty())

  0001a	39 5e 10	 cmp	 DWORD PTR [esi+16], ebx
  0001d	75 ee		 jne	 SHORT $LL6@Tidy@2
$LN5@Tidy@2:
  0001f	57		 push	 edi

; 1641 : 		for (size_type _Count = this->_Mapsize; 0 < _Count; )

  00020	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  00023	eb 10		 jmp	 SHORT $LN36@Tidy@2
$LL4@Tidy@2:

; 1642 : 			{	// free storage for a block and destroy pointer
; 1643 : 			if (*(this->_Map + --_Count) != 0)

  00025	4f		 dec	 edi
  00026	8d 04 b8	 lea	 eax, DWORD PTR [eax+edi*4]
  00029	39 18		 cmp	 DWORD PTR [eax], ebx
  0002b	74 08		 je	 SHORT $LN36@Tidy@2

; 1644 : 				{	// free block and destroy its pointer
; 1645 : 				this->_Alval.deallocate(*(this->_Map + _Count), _DEQUESIZ);

  0002d	ff 30		 push	 DWORD PTR [eax]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00034	59		 pop	 ecx
$LN36@Tidy@2:

; 1646 : 				_Dest_val(this->_Almap, this->_Map + _Count);
; 1647 : 				}
; 1648 : 			}
; 1649 : 
; 1650 : 		if (this->_Map != 0)

  00035	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00038	3b fb		 cmp	 edi, ebx
  0003a	77 e9		 ja	 SHORT $LL4@Tidy@2
  0003c	5f		 pop	 edi
  0003d	3b c3		 cmp	 eax, ebx
  0003f	74 07		 je	 SHORT $LN32@Tidy@2

; 1651 : 			this->_Almap.deallocate(this->_Map,
; 1652 : 				this->_Mapsize);	// free storage for map

  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00047	59		 pop	 ecx
$LN32@Tidy@2:

; 1653 : 		this->_Mapsize = 0;

  00048	89 5e 08	 mov	 DWORD PTR [esi+8], ebx

; 1654 : 		this->_Map = 0;

  0004b	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx

; 1655 : 		}

  00050	c3		 ret	 0
?_Tidy@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@IAEXXZ ENDP ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Tidy
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::lower_bound
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1449 : 		{	// find leftmost node not less than _Keyval in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1450 : 		return (iterator(_Lbound(_Keyval), this));

  00003	ff 75 0c	 push	 DWORD PTR __Keyval$[ebp]
  00006	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Lbound
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000e	89 01		 mov	 DWORD PTR [ecx], eax
  00010	8b c1		 mov	 eax, ecx

; 1451 : 		}

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T510990 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1379 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1380 : 		if (_First == begin() && _Last == end())

  00007	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  0000d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0000f	75 13		 jne	 SHORT $LN65@erase@2
  00011	39 45 10	 cmp	 DWORD PTR __Last$[ebp], eax
  00014	75 0e		 jne	 SHORT $LN65@erase@2

; 1381 : 			{	// erase all
; 1382 : 			clear();

  00016	8b ce		 mov	 ecx, esi
  00018	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::clear

; 1383 : 			return (begin());

  0001d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00020	8b 08		 mov	 ecx, DWORD PTR [eax]
  00022	eb 25		 jmp	 SHORT $LN1@erase@2
$LN65@erase@2:

; 1384 : 			}
; 1385 : 		else
; 1386 : 			{	// partial erase, one at a time
; 1387 : 			while (_First != _Last)

  00024	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00027	74 20		 je	 SHORT $LN1@erase@2
  00029	57		 push	 edi
$LL2@erase@2:

; 1388 : 				erase(_First++);

  0002a	8b f9		 mov	 edi, ecx
  0002c	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0002f	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::operator++
  00034	57		 push	 edi
  00035	8d 45 fc	 lea	 eax, DWORD PTR $T510990[ebp]
  00038	50		 push	 eax
  00039	8b ce		 mov	 ecx, esi
  0003b	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::erase
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00043	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00046	75 e2		 jne	 SHORT $LL2@erase@2
  00048	5f		 pop	 edi
$LN1@erase@2:

; 1389 : 			return (iterator(_First._Ptr, this));

  00049	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0004c	89 08		 mov	 DWORD PTR [eax], ecx
  0004e	5e		 pop	 esi

; 1390 : 			}
; 1391 : 		}

  0004f	c9		 leave
  00050	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Linsert@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Linsert
; Function compile flags: /Ogsp
;	COMDAT ?_Linsert@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Node$ = 12						; size = 4
$T511183 = 16						; size = 4
__Where$507032 = 16					; size = 4
__Leftish$ = 16						; size = 1
?_Linsert@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Linsert, COMDAT
; _this$ = ecx

; 944  : 		{	// try to insert node at _Node, on left if _Leftish

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 945  : 		const value_type& _Val = this->_Myval(_Node);
; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();

  00008	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0000b	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  0000e	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00012	8b d9		 mov	 ebx, ecx
  00014	b1 01		 mov	 cl, 1
  00016	57		 push	 edi
  00017	88 4d fc	 mov	 BYTE PTR __Addleft$[ebp], cl
  0001a	75 31		 jne	 SHORT $LN151@Linsert
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR __Node$[ebp]
  0001f	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
$LL12@Linsert:

; 951  : 			{	// look for leaf to insert before (_Addleft) or after
; 952  : 			_Wherenode = _Trynode;
; 953  : 			if (_Leftish)

  00022	80 7d 10 00	 cmp	 BYTE PTR __Leftish$[ebp], 0
  00026	8b d8		 mov	 ebx, eax
  00028	74 09		 je	 SHORT $LN10@Linsert

; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,

  0002a	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  0002d	1a c9		 sbb	 cl, cl
  0002f	fe c1		 inc	 cl

; 955  : 					this->_Key(_Trynode),
; 956  : 					this->_Kfn(_Val));	// favor left end
; 957  : 			else

  00031	eb 06		 jmp	 SHORT $LN152@Linsert
$LN10@Linsert:

; 958  : 				_Addleft = _DEBUG_LT_PRED(this->comp,

  00033	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00036	0f 92 c1	 setb	 cl
$LN152@Linsert:
  00039	88 4d fc	 mov	 BYTE PTR __Addleft$[ebp], cl

; 959  : 					this->_Kfn(_Val),
; 960  : 					this->_Key(_Trynode));	// favor right end
; 961  : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 962  : 				: this->_Right(_Trynode);

  0003c	84 c9		 test	 cl, cl
  0003e	74 04		 je	 SHORT $LN15@Linsert
  00040	8b 00		 mov	 eax, DWORD PTR [eax]
  00042	eb 03		 jmp	 SHORT $LN16@Linsert
$LN15@Linsert:
  00044	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$LN16@Linsert:

; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  00047	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0004b	74 d5		 je	 SHORT $LL12@Linsert
$LN151@Linsert:

; 963  : 			}
; 964  : 
; 965  : 		if (this->_Multi)
; 966  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));
; 967  : 		else
; 968  : 			{	// insert only if unique
; 969  : 			iterator _Where = iterator(_Wherenode, this);

  0004d	8b fb		 mov	 edi, ebx
  0004f	89 7d 10	 mov	 DWORD PTR __Where$507032[ebp], edi

; 970  : 			if (!_Addleft)

  00052	84 c9		 test	 cl, cl
  00054	74 30		 je	 SHORT $LN99@Linsert

; 971  : 				;	// need to test if insert after is okay
; 972  : 			else if (_Where == begin())

  00056	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00059	3b 18		 cmp	 ebx, DWORD PTR [eax]
  0005b	75 1e		 jne	 SHORT $LN4@Linsert

; 973  : 				return (_Pairib(_Insert(true, _Wherenode, _Node), true));

  0005d	ff 75 0c	 push	 DWORD PTR __Node$[ebp]
  00060	53		 push	 ebx
  00061	6a 01		 push	 1
$LN153@Linsert:
  00063	8d 45 10	 lea	 eax, DWORD PTR $T511183[ebp]
  00066	50		 push	 eax
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Insert
  0006e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00070	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00073	89 08		 mov	 DWORD PTR [eax], ecx
  00075	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  00079	eb 2c		 jmp	 SHORT $LN1@Linsert
$LN4@Linsert:

; 974  : 			else
; 975  : 				--_Where;	// need to test if insert before is okay

  0007b	8d 4d 10	 lea	 ecx, DWORD PTR __Where$507032[ebp]
  0007e	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::operator--
  00083	8b 7d 10	 mov	 edi, DWORD PTR __Where$507032[ebp]
$LN99@Linsert:

; 976  : 
; 977  : 			if (_DEBUG_LT_PRED(this->comp,

  00086	8b 45 0c	 mov	 eax, DWORD PTR __Node$[ebp]
  00089	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]

; 978  : 				this->_Key(_Where._Mynode()),
; 979  : 				this->_Kfn(_Val)))
; 980  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

  0008c	50		 push	 eax
  0008d	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00090	73 06		 jae	 SHORT $LN2@Linsert
  00092	53		 push	 ebx
  00093	ff 75 fc	 push	 DWORD PTR __Addleft$[ebp]
  00096	eb cb		 jmp	 SHORT $LN153@Linsert
$LN2@Linsert:

; 981  : 			else
; 982  : 				{	// duplicate, don't insert
; 983  : 				_Dest_val(this->_Alval,
; 984  : 					_STD addressof(this->_Myval(_Node)));
; 985  : 
; 986  : 				this->_Alnod.deallocate(_Node, 1);

  00098	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

  0009d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a0	59		 pop	 ecx
  000a1	89 38		 mov	 DWORD PTR [eax], edi
  000a3	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
$LN1@Linsert:
  000a7	5f		 pop	 edi
  000a8	5e		 pop	 esi
  000a9	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  000aa	c9		 leave
  000ab	c2 0c 00	 ret	 12			; 0000000cH
?_Linsert@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Linsert
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@U?$pair@$$CBKPAVCMannerTrialChat@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@0@PAU?$pair@$$CBKPAVCMannerTrialChat@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,std::pair<unsigned long const ,CMannerTrialChat *>,std::pair<unsigned long const ,CMannerTrialChat *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@U?$pair@$$CBKPAVCMannerTrialChat@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@0@PAU?$pair@$$CBKPAVCMannerTrialChat@@@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@U?$pair@$$CBKPAVCMannerTrialChat@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@0@PAU?$pair@$$CBKPAVCMannerTrialChat@@@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,std::pair<unsigned long const ,CMannerTrialChat *>,std::pair<unsigned long const ,CMannerTrialChat *> >, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN7@Cons_val@3
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN7@Cons_val@3:

; 281  : 	}

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Cons_val@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@U?$pair@$$CBKPAVCMannerTrialChat@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@0@PAU?$pair@$$CBKPAVCMannerTrialChat@@@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,std::pair<unsigned long const ,CMannerTrialChat *>,std::pair<unsigned long const ,CMannerTrialChat *> >
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 818  : 		{	// append [_Ptr, _Ptr + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 819  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 820  : 		if (_Count != 0)
; 821  : 			_DEBUG_POINTER(_Ptr);
; 822  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 823  : 
; 824  : 		if (_Inside(_Ptr))

  00005	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
  00010	84 c0		 test	 al, al
  00012	74 1c		 je	 SHORT $LN3@append@2

; 825  : 			return (append(*this, _Ptr - _Myptr(), _Count));	// substring

  00014	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00018	72 04		 jb	 SHORT $LN8@append@2
  0001a	8b 06		 mov	 eax, DWORD PTR [esi]
  0001c	eb 02		 jmp	 SHORT $LN9@append@2
$LN8@append@2:
  0001e	8b c6		 mov	 eax, esi
$LN9@append@2:
  00020	ff 75 0c	 push	 DWORD PTR __Count$[ebp]
  00023	2b f8		 sub	 edi, eax
  00025	57		 push	 edi
  00026	56		 push	 esi
  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
  0002e	eb 64		 jmp	 SHORT $LN4@append@2
$LN3@append@2:

; 826  : 		if (npos - this->_Mysize <= _Count)

  00030	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00033	83 c9 ff	 or	 ecx, -1
  00036	53		 push	 ebx
  00037	8b 5d 0c	 mov	 ebx, DWORD PTR __Count$[ebp]
  0003a	2b c8		 sub	 ecx, eax
  0003c	3b cb		 cmp	 ecx, ebx
  0003e	77 0b		 ja	 SHORT $LN2@append@2

; 827  : 			_Xlen();	// result too long

  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN28@append@2:
$LN2@append@2:

; 828  : 
; 829  : 		size_type _Num;
; 830  : 		if (0 < _Count && _Grow(_Num = this->_Mysize + _Count))

  0004b	85 db		 test	 ebx, ebx
  0004d	74 42		 je	 SHORT $LN25@append@2
  0004f	8d 3c 18	 lea	 edi, DWORD PTR [eax+ebx]
  00052	6a 00		 push	 0
  00054	57		 push	 edi
  00055	8b ce		 mov	 ecx, esi
  00057	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  0005c	84 c0		 test	 al, al
  0005e	74 31		 je	 SHORT $LN25@append@2

; 831  : 			{	// make room and append new stuff
; 832  : 			_Traits::copy(_Myptr() + this->_Mysize, _Ptr, _Count);

  00060	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00064	72 04		 jb	 SHORT $LN15@append@2
  00066	8b 06		 mov	 eax, DWORD PTR [esi]
  00068	eb 02		 jmp	 SHORT $LN16@append@2
$LN15@append@2:
  0006a	8b c6		 mov	 eax, esi
$LN16@append@2:
  0006c	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0006f	53		 push	 ebx
  00070	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00073	03 c8		 add	 ecx, eax
  00075	51		 push	 ecx
  00076	e8 00 00 00 00	 call	 _memcpy
  0007b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 833  : 			_Eos(_Num);

  0007e	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00082	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  00085	72 04		 jb	 SHORT $LN23@append@2
  00087	8b 06		 mov	 eax, DWORD PTR [esi]
  00089	eb 02		 jmp	 SHORT $LN24@append@2
$LN23@append@2:
  0008b	8b c6		 mov	 eax, esi
$LN24@append@2:
  0008d	c6 04 38 00	 mov	 BYTE PTR [eax+edi], 0
$LN25@append@2:

; 834  : 			}
; 835  : 		return (*this);

  00091	8b c6		 mov	 eax, esi
  00093	5b		 pop	 ebx
$LN4@append@2:
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi

; 836  : 		}

  00096	5d		 pop	 ebp
  00097	c2 08 00	 ret	 8
$LN27@append@2:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Ogsp
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 839  : 		{	// append [_Ptr, <null>)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 840  : 		_DEBUG_POINTER(_Ptr);
; 841  : 		return (append(_Ptr, _Traits::length(_Ptr)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  00009	53		 push	 ebx
$LL5@append@3:
  0000a	8a 18		 mov	 bl, BYTE PTR [eax]
  0000c	40		 inc	 eax
  0000d	84 db		 test	 bl, bl
  0000f	75 f9		 jne	 SHORT $LL5@append@3
  00011	2b c2		 sub	 eax, edx
  00013	50		 push	 eax
  00014	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00017	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
  0001c	5b		 pop	 ebx

; 842  : 		}

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	?DeleteHead@CMannerTrialChat@@QAEXXZ		; CMannerTrialChat::DeleteHead
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\mannertrialchat.cpp
;	COMDAT ?DeleteHead@CMannerTrialChat@@QAEXXZ
_TEXT	SEGMENT
$T511668 = -12						; size = 12
?DeleteHead@CMannerTrialChat@@QAEXXZ PROC		; CMannerTrialChat::DeleteHead, COMDAT
; _this$ = ecx

; 40   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 41   : 	if( !m_ChatList.empty() )

  00006	83 79 14 00	 cmp	 DWORD PTR [ecx+20], 0
  0000a	74 34		 je	 SHORT $LN2@DeleteHead

; 42   : 	{
; 43   : 		ChatItem *pItem = m_ChatList.front();

  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8d 79 04	 lea	 edi, DWORD PTR [ecx+4]
  00011	8d 45 f4	 lea	 eax, DWORD PTR $T511668[ebp]
  00014	50		 push	 eax
  00015	8b cf		 mov	 ecx, edi
  00017	e8 00 00 00 00	 call	 ?begin@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE?AV?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@XZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::begin
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ??D?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEABQAUChatItem@CMannerTrialChat@@XZ ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator*
  00023	8b 30		 mov	 esi, DWORD PTR [eax]

; 44   : 		if( pItem )

  00025	85 f6		 test	 esi, esi
  00027	74 0e		 je	 SHORT $LN19@DeleteHead

; 45   : 			delete pItem;

  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ??1ChatItem@CMannerTrialChat@@QAE@XZ
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00036	59		 pop	 ecx
$LN19@DeleteHead:

; 46   : 
; 47   : 		m_ChatList.pop_front();

  00037	8b cf		 mov	 ecx, edi
  00039	e8 00 00 00 00	 call	 ?pop_front@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXXZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::pop_front
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
$LN2@DeleteHead:

; 48   : 	}
; 49   : }

  00040	c9		 leave
  00041	c3		 ret	 0
?DeleteHead@CMannerTrialChat@@QAEXXZ ENDP		; CMannerTrialChat::DeleteHead
_TEXT	ENDS
PUBLIC	?CheckDeleteHead@CMannerTrialChat@@QAEXXZ	; CMannerTrialChat::CheckDeleteHead
; Function compile flags: /Ogsp
;	COMDAT ?CheckDeleteHead@CMannerTrialChat@@QAEXXZ
_TEXT	SEGMENT
?CheckDeleteHead@CMannerTrialChat@@QAEXXZ PROC		; CMannerTrialChat::CheckDeleteHead, COMDAT
; _this$ = ecx

; 52   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 53   : 	if( (int)m_ChatList.size() <= m_iMaxChat )

  00003	eb 07		 jmp	 SHORT $LN13@CheckDelet
$LL2@CheckDelet:

; 57   : 		DeleteHead();

  00005	8b ce		 mov	 ecx, esi
  00007	e8 00 00 00 00	 call	 ?DeleteHead@CMannerTrialChat@@QAEXXZ ; CMannerTrialChat::DeleteHead
$LN13@CheckDelet:

; 54   : 		return;
; 55   : 
; 56   : 	while( (int)m_ChatList.size() > m_iMaxChat)

  0000c	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0000f	3b 46 1c	 cmp	 eax, DWORD PTR [esi+28]
  00012	7f f1		 jg	 SHORT $LL2@CheckDelet
  00014	5e		 pop	 esi

; 58   : }

  00015	c3		 ret	 0
?CheckDeleteHead@CMannerTrialChat@@QAEXXZ ENDP		; CMannerTrialChat::CheckDeleteHead
_TEXT	ENDS
PUBLIC	?SetMaxChat@CMannerTrialChat@@QAEXH@Z		; CMannerTrialChat::SetMaxChat
; Function compile flags: /Ogsp
;	COMDAT ?SetMaxChat@CMannerTrialChat@@QAEXH@Z
_TEXT	SEGMENT
_iMax$ = 8						; size = 4
?SetMaxChat@CMannerTrialChat@@QAEXH@Z PROC		; CMannerTrialChat::SetMaxChat, COMDAT
; _this$ = ecx

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 62   : 	m_iMaxChat = iMax;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iMax$[ebp]
  00006	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 63   : 	CheckDeleteHead();

  00009	e8 00 00 00 00	 call	 ?CheckDeleteHead@CMannerTrialChat@@QAEXXZ ; CMannerTrialChat::CheckDeleteHead

; 64   : }

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?SetMaxChat@CMannerTrialChat@@QAEXH@Z ENDP		; CMannerTrialChat::SetMaxChat
_TEXT	ENDS
PUBLIC	?IsHaveID@CMannerTrialChat@@QAE_NABVioHashString@@@Z ; CMannerTrialChat::IsHaveID
EXTRN	__imp_??8ioHashString@@QBE_NABV0@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ?IsHaveID@CMannerTrialChat@@QAE_NABVioHashString@@@Z
_TEXT	SEGMENT
$T511702 = -24						; size = 12
$T511700 = -24						; size = 12
_it$505287 = -12					; size = 12
_rszID$ = 8						; size = 4
?IsHaveID@CMannerTrialChat@@QAE_NABVioHashString@@@Z PROC ; CMannerTrialChat::IsHaveID, COMDAT
; _this$ = ecx

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	57		 push	 edi

; 68   : 	for(ChatList::const_iterator it = m_ChatList.begin(); it != m_ChatList.end(); ++it)

  00008	8d 79 04	 lea	 edi, DWORD PTR [ecx+4]
  0000b	8d 45 e8	 lea	 eax, DWORD PTR $T511700[ebp]
  0000e	50		 push	 eax
  0000f	8b cf		 mov	 ecx, edi
  00011	e8 00 00 00 00	 call	 ?begin@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE?AV?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@XZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::begin
  00016	8b f0		 mov	 esi, eax
  00018	56		 push	 esi
  00019	8d 4d f4	 lea	 ecx, DWORD PTR _it$505287[ebp]
  0001c	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@ABU01@@Z ; std::_Iterator_base12::_Iterator_base12
  00021	8b 76 08	 mov	 esi, DWORD PTR [esi+8]
  00024	eb 18		 jmp	 SHORT $LN41@IsHaveID
$LL15@IsHaveID:

; 69   : 	{
; 70   : 	    if( (*it)->szID == rszID )

  00026	ff 75 08	 push	 DWORD PTR _rszID$[ebp]
  00029	8d 4d f4	 lea	 ecx, DWORD PTR _it$505287[ebp]
  0002c	e8 00 00 00 00	 call	 ??D?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEABQAUChatItem@CMannerTrialChat@@XZ ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator*
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00039	84 c0		 test	 al, al
  0003b	75 1c		 jne	 SHORT $LN38@IsHaveID

; 68   : 	for(ChatList::const_iterator it = m_ChatList.begin(); it != m_ChatList.end(); ++it)

  0003d	46		 inc	 esi
$LN41@IsHaveID:
  0003e	8d 45 e8	 lea	 eax, DWORD PTR $T511702[ebp]
  00041	50		 push	 eax
  00042	8b cf		 mov	 ecx, edi
  00044	89 75 fc	 mov	 DWORD PTR _it$505287[ebp+8], esi
  00047	e8 00 00 00 00	 call	 ?end@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE?AV?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@XZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::end
  0004c	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0004f	75 d5		 jne	 SHORT $LL15@IsHaveID

; 72   : 	}
; 73   : 	return false;

  00051	32 c0		 xor	 al, al
$LN5@IsHaveID:
  00053	5f		 pop	 edi
  00054	5e		 pop	 esi

; 74   : }

  00055	c9		 leave
  00056	c2 04 00	 ret	 4
$LN38@IsHaveID:

; 71   : 			return true;

  00059	b0 01		 mov	 al, 1
  0005b	eb f6		 jmp	 SHORT $LN5@IsHaveID
?IsHaveID@CMannerTrialChat@@QAE_NABVioHashString@@@Z ENDP ; CMannerTrialChat::IsHaveID
_TEXT	ENDS
PUBLIC	?SetMaxChat@ioMannerTrialChatManager@@QAEXH@Z	; ioMannerTrialChatManager::SetMaxChat
; Function compile flags: /Ogsp
;	COMDAT ?SetMaxChat@ioMannerTrialChatManager@@QAEXH@Z
_TEXT	SEGMENT
_iter$505772 = -4					; size = 4
_iMax$ = 8						; size = 4
?SetMaxChat@ioMannerTrialChatManager@@QAEXH@Z PROC	; ioMannerTrialChatManager::SetMaxChat, COMDAT
; _this$ = ecx

; 121  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 122  : 	for(MannerTrialChatMap::iterator iter = m_MannerTrialChatMap.begin(); iter != m_MannerTrialChatMap.end(); ++iter)

  00007	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	89 45 fc	 mov	 DWORD PTR _iter$505772[ebp], eax
  0000f	3b c1		 cmp	 eax, ecx
  00011	74 24		 je	 SHORT $LN2@SetMaxChat
$LL23@SetMaxChat:

; 123  : 	{
; 124  : 	    CMannerTrialChat *pChat = iter->second;

  00013	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 125  : 		if( pChat )

  00016	85 c0		 test	 eax, eax
  00018	74 0d		 je	 SHORT $LN3@SetMaxChat

; 126  : 			pChat->SetMaxChat( iMax );

  0001a	8b 4d 08	 mov	 ecx, DWORD PTR _iMax$[ebp]
  0001d	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
  00020	8b c8		 mov	 ecx, eax
  00022	e8 00 00 00 00	 call	 ?CheckDeleteHead@CMannerTrialChat@@QAEXXZ ; CMannerTrialChat::CheckDeleteHead
$LN3@SetMaxChat:

; 122  : 	for(MannerTrialChatMap::iterator iter = m_MannerTrialChatMap.begin(); iter != m_MannerTrialChatMap.end(); ++iter)

  00027	8d 4d fc	 lea	 ecx, DWORD PTR _iter$505772[ebp]
  0002a	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::operator++
  0002f	8b 45 fc	 mov	 eax, DWORD PTR _iter$505772[ebp]
  00032	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  00035	75 dc		 jne	 SHORT $LL23@SetMaxChat
$LN2@SetMaxChat:
  00037	5e		 pop	 esi

; 127  : 	}
; 128  : }

  00038	c9		 leave
  00039	c2 04 00	 ret	 4
?SetMaxChat@ioMannerTrialChatManager@@QAEXH@Z ENDP	; ioMannerTrialChatManager::SetMaxChat
_TEXT	ENDS
PUBLIC	??1?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::~deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
;	COMDAT ??1?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ PROC ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::~deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >, COMDAT
; _this$ = ecx

; 1021 : 		{	// destroy the deque

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1022 : 		_Tidy();

  00003	e8 00 00 00 00	 call	 ?_Tidy@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@IAEXXZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Tidy

; 1023 : 		}

  00008	8b ce		 mov	 ecx, esi
  0000a	5e		 pop	 esi
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ ; std::_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::~_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
??1?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ ENDP ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::~deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
_TEXT	ENDS
PUBLIC	?clear@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXXZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXXZ PROC ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::clear, COMDAT
; _this$ = ecx

; 1465 : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@IAEXXZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Tidy
?clear@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXXZ ENDP ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::find
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z
_TEXT	SEGMENT
$T511926 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::find, COMDAT
; _this$ = ecx

; 1423 : 		{	// find an element in mutable sequence that matches _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1424 : 		iterator _Where = lower_bound(_Keyval);

  00006	8b 7d 0c	 mov	 edi, DWORD PTR __Keyval$[ebp]
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Lbound

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

  00011	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00014	89 45 0c	 mov	 DWORD PTR __Where$[ebp], eax
  00017	3b c6		 cmp	 eax, esi
  00019	74 0c		 je	 SHORT $LN3@find
  0001b	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0001d	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00020	72 05		 jb	 SHORT $LN3@find
  00022	8d 45 0c	 lea	 eax, DWORD PTR __Where$[ebp]
  00025	eb 06		 jmp	 SHORT $LN4@find
$LN3@find:
  00027	89 75 fc	 mov	 DWORD PTR $T511926[ebp], esi
  0002a	8d 45 fc	 lea	 eax, DWORD PTR $T511926[ebp]
$LN4@find:
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00032	5f		 pop	 edi
  00033	89 08		 mov	 DWORD PTR [eax], ecx
  00035	5e		 pop	 esi

; 1429 : 		}

  00036	c9		 leave
  00037	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::find
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Tidy
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T512064 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1865 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1866 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 10		 mov	 edx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T512064[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::erase

; 1867 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	??$_Buynode@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKPAVCMannerTrialChat@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Buynode<std::pair<unsigned long const ,CMannerTrialChat *> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Buynode@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKPAVCMannerTrialChat@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Buynode@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKPAVCMannerTrialChat@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Buynode<std::pair<unsigned long const ,CMannerTrialChat *> >, COMDAT
; _this$ = ecx

; 586  : 		_Nodeptr _Buynode(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f1		 mov	 esi, ecx

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

  00007	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Buynode

; 589  : 
; 590  : 		_TRY_BEGIN
; 591  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Wherenode)),
; 592  : 			_STD forward<_Valty>(_Val));

  0000c	ff 75 08	 push	 DWORD PTR __Val$[ebp]
  0000f	8b f8		 mov	 edi, eax
  00011	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  00014	50		 push	 eax
  00015	83 c6 0d	 add	 esi, 13			; 0000000dH
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@std@@U?$pair@$$CBKPAVCMannerTrialChat@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@0@PAU?$pair@$$CBKPAVCMannerTrialChat@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,std::pair<unsigned long const ,CMannerTrialChat *>,std::pair<unsigned long const ,CMannerTrialChat *> >
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 593  : 		_CATCH_ALL
; 594  : 		this->_Alnod.deallocate(_Wherenode, 1);
; 595  : 		_RERAISE;
; 596  : 		_CATCH_END
; 597  : 
; 598  : 		return (_Wherenode);

  00021	8b c7		 mov	 eax, edi
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi

; 599  : 		}

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??$_Buynode@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKPAVCMannerTrialChat@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Buynode<std::pair<unsigned long const ,CMannerTrialChat *> >
_TEXT	ENDS
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx

; 783  : 		{	// append [_Ptr, <null>)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 785  : 		}

  00003	5d		 pop	 ebp

; 784  : 		return (append(_Ptr));

  00004	e9 00 00 00 00	 jmp	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
PUBLIC	??_7CMannerTrialChat@@6B@			; CMannerTrialChat::`vftable'
PUBLIC	??0CMannerTrialChat@@QAE@XZ			; CMannerTrialChat::CMannerTrialChat
PUBLIC	??_R4CMannerTrialChat@@6B@			; CMannerTrialChat::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMannerTrialChat@@@8			; CMannerTrialChat `RTTI Type Descriptor'
PUBLIC	??_R3CMannerTrialChat@@8			; CMannerTrialChat::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMannerTrialChat@@8			; CMannerTrialChat::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMannerTrialChat@@8		; CMannerTrialChat::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_ECMannerTrialChat@@UAEPAXI@Z:PROC		; CMannerTrialChat::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CMannerTrialChat@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
rdata$r	SEGMENT
??_R1A@?0A@EA@CMannerTrialChat@@8 DD FLAT:??_R0?AVCMannerTrialChat@@@8 ; CMannerTrialChat::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMannerTrialChat@@8
rdata$r	ENDS
;	COMDAT ??_R2CMannerTrialChat@@8
rdata$r	SEGMENT
??_R2CMannerTrialChat@@8 DD FLAT:??_R1A@?0A@EA@CMannerTrialChat@@8 ; CMannerTrialChat::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMannerTrialChat@@8
rdata$r	SEGMENT
??_R3CMannerTrialChat@@8 DD 00H				; CMannerTrialChat::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMannerTrialChat@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMannerTrialChat@@@8
_DATA	SEGMENT
??_R0?AVCMannerTrialChat@@@8 DD FLAT:??_7type_info@@6B@	; CMannerTrialChat `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMannerTrialChat@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CMannerTrialChat@@6B@
rdata$r	SEGMENT
??_R4CMannerTrialChat@@6B@ DD 00H			; CMannerTrialChat::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMannerTrialChat@@@8
	DD	FLAT:??_R3CMannerTrialChat@@8
rdata$r	ENDS
;	COMDAT ??_7CMannerTrialChat@@6B@
CONST	SEGMENT
??_7CMannerTrialChat@@6B@ DD FLAT:??_R4CMannerTrialChat@@6B@ ; CMannerTrialChat::`vftable'
	DD	FLAT:??_ECMannerTrialChat@@UAEPAXI@Z
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\mannertrialchat.cpp
CONST	ENDS
;	COMDAT ??0CMannerTrialChat@@QAE@XZ
_TEXT	SEGMENT
$T512184 = -4						; size = 4
$T512186 = -4						; size = 4
??0CMannerTrialChat@@QAE@XZ PROC			; CMannerTrialChat::CMannerTrialChat, COMDAT
; _this$ = ecx

; 8    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0000a	51		 push	 ecx
  0000b	89 65 fc	 mov	 DWORD PTR $T512186[ebp], esp
  0000e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMannerTrialChat@@6B@
  00014	89 65 fc	 mov	 DWORD PTR $T512184[ebp], esp
  00017	e8 00 00 00 00	 call	 ??0?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@V?$allocator@PAUChatItem@CMannerTrialChat@@@1@@Z ; std::_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >

; 9    : 	m_iMaxChat = 0;

  0001c	83 66 1c 00	 and	 DWORD PTR [esi+28], 0

; 10   : }

  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	c9		 leave
  00024	c3		 ret	 0
??0CMannerTrialChat@@QAE@XZ ENDP			; CMannerTrialChat::CMannerTrialChat
_TEXT	ENDS
PUBLIC	?DeleteAll@CMannerTrialChat@@QAEXXZ		; CMannerTrialChat::DeleteAll
; Function compile flags: /Ogsp
;	COMDAT ?DeleteAll@CMannerTrialChat@@QAEXXZ
_TEXT	SEGMENT
$T512194 = -24						; size = 12
_it$505214 = -12					; size = 12
?DeleteAll@CMannerTrialChat@@QAEXXZ PROC		; CMannerTrialChat::DeleteAll, COMDAT
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	57		 push	 edi

; 19   : 	for(ChatList::iterator it = m_ChatList.begin(); it != m_ChatList.end(); ++it)

  00008	8d 79 04	 lea	 edi, DWORD PTR [ecx+4]
  0000b	8d 45 f4	 lea	 eax, DWORD PTR _it$505214[ebp]
  0000e	50		 push	 eax
  0000f	8b cf		 mov	 ecx, edi
  00011	e8 00 00 00 00	 call	 ?begin@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE?AV?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@XZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::begin
  00016	8d 45 e8	 lea	 eax, DWORD PTR $T512194[ebp]
  00019	50		 push	 eax
  0001a	8b cf		 mov	 ecx, edi
  0001c	e8 00 00 00 00	 call	 ?end@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE?AV?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@XZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::end
  00021	8b 75 fc	 mov	 esi, DWORD PTR _it$505214[ebp+8]
  00024	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00027	74 32		 je	 SHORT $LN1@DeleteAll
  00029	53		 push	 ebx
$LL10@DeleteAll:

; 20   : 	{
; 21   : 	    delete *it;

  0002a	8d 4d f4	 lea	 ecx, DWORD PTR _it$505214[ebp]
  0002d	e8 00 00 00 00	 call	 ??D?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEABQAUChatItem@CMannerTrialChat@@XZ ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator*
  00032	8b 18		 mov	 ebx, DWORD PTR [eax]
  00034	85 db		 test	 ebx, ebx
  00036	74 0e		 je	 SHORT $LN2@DeleteAll
  00038	8b cb		 mov	 ecx, ebx
  0003a	e8 00 00 00 00	 call	 ??1ChatItem@CMannerTrialChat@@QAE@XZ
  0003f	53		 push	 ebx
  00040	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00045	59		 pop	 ecx
$LN2@DeleteAll:

; 19   : 	for(ChatList::iterator it = m_ChatList.begin(); it != m_ChatList.end(); ++it)

  00046	8d 45 e8	 lea	 eax, DWORD PTR $T512194[ebp]
  00049	46		 inc	 esi
  0004a	50		 push	 eax
  0004b	8b cf		 mov	 ecx, edi
  0004d	89 75 fc	 mov	 DWORD PTR _it$505214[ebp+8], esi
  00050	e8 00 00 00 00	 call	 ?end@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE?AV?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@XZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::end
  00055	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00058	75 d0		 jne	 SHORT $LL10@DeleteAll
  0005a	5b		 pop	 ebx
$LN1@DeleteAll:

; 22   : 	}
; 23   : 
; 24   : 	m_ChatList.clear();

  0005b	8b cf		 mov	 ecx, edi
  0005d	e8 00 00 00 00	 call	 ?_Tidy@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@IAEXXZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Tidy
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi

; 25   : }

  00064	c9		 leave
  00065	c3		 ret	 0
?DeleteAll@CMannerTrialChat@@QAEXXZ ENDP		; CMannerTrialChat::DeleteAll
_TEXT	ENDS
PUBLIC	?Add@CMannerTrialChat@@QAEXPBD0@Z		; CMannerTrialChat::Add
EXTRN	__imp_??4ioHashString@@QAEAAV0@PBD@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Add@CMannerTrialChat@@QAEXPBD0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Add@CMannerTrialChat@@QAEXPBD0@Z$0
__ehfuncinfo$?Add@CMannerTrialChat@@QAEXPBD0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Add@CMannerTrialChat@@QAEXPBD0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?Add@CMannerTrialChat@@QAEXPBD0@Z
_TEXT	SEGMENT
$T512268 = -16						; size = 4
_pItem$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_szID$ = 8						; size = 4
_szChat$ = 12						; size = 4
?Add@CMannerTrialChat@@QAEXPBD0@Z PROC			; CMannerTrialChat::Add, COMDAT
; _this$ = ecx

; 28   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?Add@CMannerTrialChat@@QAEXPBD0@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b d9		 mov	 ebx, ecx

; 29   : 	ChatItem *pItem = new ChatItem;

  0000e	6a 20		 push	 32			; 00000020H
  00010	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00015	59		 pop	 ecx
  00016	8b c8		 mov	 ecx, eax
  00018	89 4d f0	 mov	 DWORD PTR $T512268[ebp], ecx
  0001b	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001f	85 c9		 test	 ecx, ecx
  00021	74 09		 je	 SHORT $LN4@Add
  00023	e8 00 00 00 00	 call	 ??0ChatItem@CMannerTrialChat@@QAE@XZ
  00028	8b f8		 mov	 edi, eax
  0002a	eb 02		 jmp	 SHORT $LN5@Add
$LN4@Add:
  0002c	33 ff		 xor	 edi, edi
$LN5@Add:
  0002e	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00032	89 7d f0	 mov	 DWORD PTR _pItem$[ebp], edi

; 30   : 	if( pItem )

  00035	85 ff		 test	 edi, edi
  00037	74 28		 je	 SHORT $LN1@Add

; 31   : 	{
; 32   : 		pItem->szID   = szID;

  00039	ff 75 08	 push	 DWORD PTR _szID$[ebp]
  0003c	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z
  00042	8b cf		 mov	 ecx, edi
  00044	ff d6		 call	 esi

; 33   : 		pItem->szChat = szChat;

  00046	ff 75 0c	 push	 DWORD PTR _szChat$[ebp]
  00049	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  0004c	ff d6		 call	 esi

; 34   : 		m_ChatList.push_back( pItem ); 

  0004e	8d 45 f0	 lea	 eax, DWORD PTR _pItem$[ebp]
  00051	50		 push	 eax
  00052	8d 4b 04	 lea	 ecx, DWORD PTR [ebx+4]
  00055	e8 00 00 00 00	 call	 ?push_back@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAEXABQAUChatItem@CMannerTrialChat@@@Z ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::push_back

; 35   : 		CheckDeleteHead();

  0005a	8b cb		 mov	 ecx, ebx
  0005c	e8 00 00 00 00	 call	 ?CheckDeleteHead@CMannerTrialChat@@QAEXXZ ; CMannerTrialChat::CheckDeleteHead
$LN1@Add:

; 36   : 	}
; 37   : }

  00061	e8 00 00 00 00	 call	 __EH_epilog3
  00066	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Add@CMannerTrialChat@@QAEXPBD0@Z$0:
  00000	ff 75 f0	 push	 DWORD PTR $T512268[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__ehhandler$?Add@CMannerTrialChat@@QAEXPBD0@Z:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00011	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Add@CMannerTrialChat@@QAEXPBD0@Z
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Add@CMannerTrialChat@@QAEXPBD0@Z ENDP			; CMannerTrialChat::Add
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_01JLIPDDHJ@?3?$AA@			; `string'
PUBLIC	_rkChatList$GSCopy$
PUBLIC	?GetChatList@CMannerTrialChat@@QAEXAAVioHashString@@@Z ; CMannerTrialChat::GetChatList
EXTRN	__imp_?c_str@ioHashString@@QBEPBDXZ:PROC
EXTRN	__EH_epilog3_GS:PROC
EXTRN	__EH_prolog3_GS:PROC
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01JLIPDDHJ@?3?$AA@
CONST	SEGMENT
??_C@_01JLIPDDHJ@?3?$AA@ DB ':', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetChatList@CMannerTrialChat@@QAEXAAVioHashString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetChatList@CMannerTrialChat@@QAEXAAVioHashString@@@Z$0
__ehfuncinfo$?GetChatList@CMannerTrialChat@@QAEXAAVioHashString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetChatList@CMannerTrialChat@@QAEXAAVioHashString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\mannertrialchat.cpp
xdata$x	ENDS
;	COMDAT ?GetChatList@CMannerTrialChat@@QAEXAAVioHashString@@@Z
_TEXT	SEGMENT
$T512283 = -72						; size = 12
$T512281 = -72						; size = 12
_it$505320 = -60					; size = 12
_rkChatList$GSCopy$ = -48				; size = 4
_szMerge$ = -44						; size = 28
__$EHRec$ = -12						; size = 12
_rkChatList$ = 8					; size = 4
?GetChatList@CMannerTrialChat@@QAEXAAVioHashString@@@Z PROC ; CMannerTrialChat::GetChatList, COMDAT
; _this$ = ecx

; 77   : {

  00000	6a 3c		 push	 60			; 0000003cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?GetChatList@CMannerTrialChat@@QAEXAAVioHashString@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000c	8b f9		 mov	 edi, ecx
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR _rkChatList$[ebp]

; 78   : 	std::string szMerge;

  00011	33 db		 xor	 ebx, ebx

; 90   : }

  00013	89 4d d0	 mov	 DWORD PTR _rkChatList$GSCopy$[ebp], ecx
  00016	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR _szMerge$[ebp+20], 15 ; 0000000fH
  0001d	89 5d e4	 mov	 DWORD PTR _szMerge$[ebp+16], ebx
  00020	88 5d d4	 mov	 BYTE PTR _szMerge$[ebp], bl
  00023	8d 45 b8	 lea	 eax, DWORD PTR $T512281[ebp]
  00026	83 c7 04	 add	 edi, 4
  00029	50		 push	 eax
  0002a	8b cf		 mov	 ecx, edi
  0002c	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  0002f	e8 00 00 00 00	 call	 ?begin@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE?AV?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@XZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::begin
  00034	8b f0		 mov	 esi, eax
  00036	56		 push	 esi
  00037	8d 4d c4	 lea	 ecx, DWORD PTR _it$505320[ebp]
  0003a	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@ABU01@@Z ; std::_Iterator_base12::_Iterator_base12
  0003f	8b 76 08	 mov	 esi, DWORD PTR [esi+8]
  00042	8d 45 b8	 lea	 eax, DWORD PTR $T512283[ebp]
  00045	50		 push	 eax
  00046	8b cf		 mov	 ecx, edi
  00048	89 75 cc	 mov	 DWORD PTR _it$505320[ebp+8], esi
  0004b	e8 00 00 00 00	 call	 ?end@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE?AV?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@XZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::end
  00050	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00053	0f 84 86 00 00
	00		 je	 $LN1@GetChatLis

; 79   : 	for(ChatList::const_iterator it = m_ChatList.begin(); it != m_ChatList.end(); ++it)

$LL43@GetChatLis:

; 80   : 	{
; 81   : 		if( (*it) == NULL ) continue;

  00059	8d 4d c4	 lea	 ecx, DWORD PTR _it$505320[ebp]
  0005c	e8 00 00 00 00	 call	 ??D?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEABQAUChatItem@CMannerTrialChat@@XZ ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator*
  00061	39 18		 cmp	 DWORD PTR [eax], ebx
  00063	74 4b		 je	 SHORT $LN4@GetChatLis

; 82   : 		szMerge += (*it)->szID.c_str();

  00065	8b 08		 mov	 ecx, DWORD PTR [eax]
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  0006d	50		 push	 eax
  0006e	8d 4d d4	 lea	 ecx, DWORD PTR _szMerge$[ebp]
  00071	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 83   : 		szMerge += ":";

  00076	6a 01		 push	 1
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_01JLIPDDHJ@?3?$AA@
  0007d	8d 4d d4	 lea	 ecx, DWORD PTR _szMerge$[ebp]
  00080	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 84   : 		szMerge += (*it)->szChat.c_str();

  00085	8d 4d c4	 lea	 ecx, DWORD PTR _it$505320[ebp]
  00088	e8 00 00 00 00	 call	 ??D?$_Deque_const_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QBEABQAUChatItem@CMannerTrialChat@@XZ ; std::_Deque_const_iterator<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::operator*
  0008d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008f	83 c1 10	 add	 ecx, 16			; 00000010H
  00092	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  00098	50		 push	 eax
  00099	8d 4d d4	 lea	 ecx, DWORD PTR _szMerge$[ebp]
  0009c	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 85   : 		szMerge += "\n";

  000a1	6a 01		 push	 1
  000a3	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6?$AA@
  000a8	8d 4d d4	 lea	 ecx, DWORD PTR _szMerge$[ebp]
  000ab	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN4@GetChatLis:

; 79   : 	for(ChatList::const_iterator it = m_ChatList.begin(); it != m_ChatList.end(); ++it)

  000b0	8d 45 b8	 lea	 eax, DWORD PTR $T512283[ebp]
  000b3	46		 inc	 esi
  000b4	50		 push	 eax
  000b5	8b cf		 mov	 ecx, edi
  000b7	89 75 cc	 mov	 DWORD PTR _it$505320[ebp+8], esi
  000ba	e8 00 00 00 00	 call	 ?end@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE?AV?$_Deque_iterator@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@2@XZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::end
  000bf	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000c2	75 95		 jne	 SHORT $LL43@GetChatLis

; 86   : 	}
; 87   : 
; 88   : 	if( !szMerge.empty())

  000c4	39 5d e4	 cmp	 DWORD PTR _szMerge$[ebp+16], ebx
  000c7	74 16		 je	 SHORT $LN1@GetChatLis

; 89   : 		rkChatList = szMerge.c_str();

  000c9	83 7d e8 10	 cmp	 DWORD PTR _szMerge$[ebp+20], 16 ; 00000010H
  000cd	8b 45 d4	 mov	 eax, DWORD PTR _szMerge$[ebp]
  000d0	73 03		 jae	 SHORT $LN84@GetChatLis
  000d2	8d 45 d4	 lea	 eax, DWORD PTR _szMerge$[ebp]
$LN84@GetChatLis:
  000d5	8b 4d d0	 mov	 ecx, DWORD PTR _rkChatList$GSCopy$[ebp]
  000d8	50		 push	 eax
  000d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z
$LN1@GetChatLis:

; 90   : }

  000df	53		 push	 ebx
  000e0	6a 01		 push	 1
  000e2	8d 4d d4	 lea	 ecx, DWORD PTR _szMerge$[ebp]
  000e5	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  000ea	e8 00 00 00 00	 call	 __EH_epilog3_GS
  000ef	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetChatList@CMannerTrialChat@@QAEXAAVioHashString@@@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _szMerge$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?GetChatList@CMannerTrialChat@@QAEXAAVioHashString@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a b4	 mov	 ecx, DWORD PTR [edx-76]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetChatList@CMannerTrialChat@@QAEXAAVioHashString@@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetChatList@CMannerTrialChat@@QAEXAAVioHashString@@@Z ENDP ; CMannerTrialChat::GetChatList
PUBLIC	?Add@ioMannerTrialChatManager@@QAEXW4TrialType@1@PBD1@Z ; ioMannerTrialChatManager::Add
; Function compile flags: /Ogsp
;	COMDAT ?Add@ioMannerTrialChatManager@@QAEXW4TrialType@1@PBD1@Z
_TEXT	SEGMENT
_iter$ = -4						; size = 4
$T512516 = 8						; size = 4
_eTrialType$ = 8					; size = 4
_szID$ = 12						; size = 4
_szChat$ = 16						; size = 4
?Add@ioMannerTrialChatManager@@QAEXW4TrialType@1@PBD1@Z PROC ; ioMannerTrialChatManager::Add, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 132  : 	MannerTrialChatMap::iterator iter = m_MannerTrialChatMap.find( (DWORD) eTrialType );

  00004	8b 45 08	 mov	 eax, DWORD PTR _eTrialType$[ebp]
  00007	56		 push	 esi
  00008	89 45 08	 mov	 DWORD PTR $T512516[ebp], eax
  0000b	8d 45 08	 lea	 eax, DWORD PTR $T512516[ebp]
  0000e	50		 push	 eax
  0000f	8b f1		 mov	 esi, ecx
  00011	8d 45 fc	 lea	 eax, DWORD PTR _iter$[ebp]
  00014	50		 push	 eax
  00015	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00018	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::find

; 133  : 	if( iter == m_MannerTrialChatMap.end() )

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _iter$[ebp]
  00020	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  00023	5e		 pop	 esi
  00024	74 14		 je	 SHORT $LN3@Add@2

; 134  : 		return;
; 135  : 	CMannerTrialChat *pChat = iter->second;

  00026	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 136  : 	if( !pChat )

  00029	85 c0		 test	 eax, eax
  0002b	74 0d		 je	 SHORT $LN3@Add@2

; 137  : 		return;
; 138  : 	pChat->Add( szID, szChat );

  0002d	ff 75 10	 push	 DWORD PTR _szChat$[ebp]
  00030	8b c8		 mov	 ecx, eax
  00032	ff 75 0c	 push	 DWORD PTR _szID$[ebp]
  00035	e8 00 00 00 00	 call	 ?Add@CMannerTrialChat@@QAEXPBD0@Z ; CMannerTrialChat::Add
$LN3@Add@2:

; 139  : }

  0003a	c9		 leave
  0003b	c2 0c 00	 ret	 12			; 0000000cH
?Add@ioMannerTrialChatManager@@QAEXW4TrialType@1@PBD1@Z ENDP ; ioMannerTrialChatManager::Add
_TEXT	ENDS
PUBLIC	?IsHaveID@ioMannerTrialChatManager@@QAE_NW4TrialType@1@ABVioHashString@@@Z ; ioMannerTrialChatManager::IsHaveID
; Function compile flags: /Ogsp
;	COMDAT ?IsHaveID@ioMannerTrialChatManager@@QAE_NW4TrialType@1@ABVioHashString@@@Z
_TEXT	SEGMENT
_iter$ = -4						; size = 4
$T512583 = 8						; size = 4
_eTrialType$ = 8					; size = 4
_rszID$ = 12						; size = 4
?IsHaveID@ioMannerTrialChatManager@@QAE_NW4TrialType@1@ABVioHashString@@@Z PROC ; ioMannerTrialChatManager::IsHaveID, COMDAT
; _this$ = ecx

; 142  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 143  : 	MannerTrialChatMap::iterator iter = m_MannerTrialChatMap.find( (DWORD) eTrialType );

  00004	8b 45 08	 mov	 eax, DWORD PTR _eTrialType$[ebp]
  00007	56		 push	 esi
  00008	89 45 08	 mov	 DWORD PTR $T512583[ebp], eax
  0000b	8d 45 08	 lea	 eax, DWORD PTR $T512583[ebp]
  0000e	50		 push	 eax
  0000f	8b f1		 mov	 esi, ecx
  00011	8d 45 fc	 lea	 eax, DWORD PTR _iter$[ebp]
  00014	50		 push	 eax
  00015	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00018	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::find

; 144  : 	if( iter == m_MannerTrialChatMap.end() )

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _iter$[ebp]
  00020	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  00023	5e		 pop	 esi
  00024	75 04		 jne	 SHORT $LN2@IsHaveID@2
$LN25@IsHaveID@2:

; 145  : 		return false;

  00026	32 c0		 xor	 al, al
  00028	eb 11		 jmp	 SHORT $LN3@IsHaveID@2
$LN2@IsHaveID@2:

; 146  : 	CMannerTrialChat *pChat = iter->second;

  0002a	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 147  : 	if( !pChat )

  0002d	85 c0		 test	 eax, eax

; 148  : 		return false;

  0002f	74 f5		 je	 SHORT $LN25@IsHaveID@2

; 149  : 	return pChat->IsHaveID( rszID );

  00031	ff 75 0c	 push	 DWORD PTR _rszID$[ebp]
  00034	8b c8		 mov	 ecx, eax
  00036	e8 00 00 00 00	 call	 ?IsHaveID@CMannerTrialChat@@QAE_NABVioHashString@@@Z ; CMannerTrialChat::IsHaveID
$LN3@IsHaveID@2:

; 150  : }

  0003b	c9		 leave
  0003c	c2 08 00	 ret	 8
?IsHaveID@ioMannerTrialChatManager@@QAE_NW4TrialType@1@ABVioHashString@@@Z ENDP ; ioMannerTrialChatManager::IsHaveID
_TEXT	ENDS
PUBLIC	?GetChatList@ioMannerTrialChatManager@@QAEXW4TrialType@1@AAVioHashString@@@Z ; ioMannerTrialChatManager::GetChatList
; Function compile flags: /Ogsp
;	COMDAT ?GetChatList@ioMannerTrialChatManager@@QAEXW4TrialType@1@AAVioHashString@@@Z
_TEXT	SEGMENT
_iter$ = -4						; size = 4
$T512651 = 8						; size = 4
_eTrialType$ = 8					; size = 4
_rkChatList$ = 12					; size = 4
?GetChatList@ioMannerTrialChatManager@@QAEXW4TrialType@1@AAVioHashString@@@Z PROC ; ioMannerTrialChatManager::GetChatList, COMDAT
; _this$ = ecx

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 154  : 	MannerTrialChatMap::iterator iter = m_MannerTrialChatMap.find( (DWORD) eTrialType );

  00004	8b 45 08	 mov	 eax, DWORD PTR _eTrialType$[ebp]
  00007	56		 push	 esi
  00008	89 45 08	 mov	 DWORD PTR $T512651[ebp], eax
  0000b	8d 45 08	 lea	 eax, DWORD PTR $T512651[ebp]
  0000e	50		 push	 eax
  0000f	8b f1		 mov	 esi, ecx
  00011	8d 45 fc	 lea	 eax, DWORD PTR _iter$[ebp]
  00014	50		 push	 eax
  00015	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00018	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::find

; 155  : 	if( iter == m_MannerTrialChatMap.end() )

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _iter$[ebp]
  00020	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  00023	5e		 pop	 esi
  00024	74 11		 je	 SHORT $LN3@GetChatLis@2

; 156  : 		return;
; 157  : 	CMannerTrialChat *pChat = iter->second;

  00026	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 158  : 	if( !pChat )

  00029	85 c0		 test	 eax, eax
  0002b	74 0a		 je	 SHORT $LN3@GetChatLis@2

; 159  : 		return;
; 160  : 	pChat->GetChatList( rkChatList );

  0002d	ff 75 0c	 push	 DWORD PTR _rkChatList$[ebp]
  00030	8b c8		 mov	 ecx, eax
  00032	e8 00 00 00 00	 call	 ?GetChatList@CMannerTrialChat@@QAEXAAVioHashString@@@Z ; CMannerTrialChat::GetChatList
$LN3@GetChatLis@2:

; 161  : }

  00037	c9		 leave
  00038	c2 08 00	 ret	 8
?GetChatList@ioMannerTrialChatManager@@QAEXW4TrialType@1@AAVioHashString@@@Z ENDP ; ioMannerTrialChatManager::GetChatList
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T512816 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >, COMDAT
; _this$ = ecx

; 790  : 		{	// destroy tree

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 791  : 		_Tidy();

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	8d 45 ec	 lea	 eax, DWORD PTR $T512816[ebp]
  0001f	50		 push	 eax
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::erase

; 792  : 		}

  00027	ff 76 04	 push	 DWORD PTR [esi+4]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	e8 00 00 00 00	 call	 __EH_epilog3
  00035	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >
__ehhandler$??1?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >
PUBLIC	??$insert@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCMannerTrialChat@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::insert<std::pair<unsigned long const ,CMannerTrialChat *> >
; Function compile flags: /Ogsp
;	COMDAT ??$insert@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCMannerTrialChat@@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCMannerTrialChat@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::insert<std::pair<unsigned long const ,CMannerTrialChat *> >, COMDAT
; _this$ = ecx

; 753  : 		_Pairib insert(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 754  : 		{	// try to insert node with value _Val, favoring right side
; 755  : 		return (_Linsert(this->_Buynode(_STD forward<_Valty>(_Val)),
; 756  : 			false));

  00004	6a 00		 push	 0
  00006	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKPAVCMannerTrialChat@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Buynode<std::pair<unsigned long const ,CMannerTrialChat *> >
  00010	50		 push	 eax
  00011	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  00014	8b ce		 mov	 ecx, esi
  00016	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Linsert
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	5e		 pop	 esi

; 757  : 		}

  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
??$insert@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCMannerTrialChat@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::insert<std::pair<unsigned long const ,CMannerTrialChat *> >
_TEXT	ENDS
PUBLIC	??1CMannerTrialChat@@UAE@XZ			; CMannerTrialChat::~CMannerTrialChat
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
xdata$x	SEGMENT
__unwindtable$??1CMannerTrialChat@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CMannerTrialChat@@UAE@XZ$0
__ehfuncinfo$??1CMannerTrialChat@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CMannerTrialChat@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\mannertrialchat.cpp
xdata$x	ENDS
;	COMDAT ??1CMannerTrialChat@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CMannerTrialChat@@UAE@XZ PROC			; CMannerTrialChat::~CMannerTrialChat, COMDAT
; _this$ = ecx

; 13   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1CMannerTrialChat@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMannerTrialChat@@6B@
  00017	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 14   : 	DeleteAll();

  0001b	e8 00 00 00 00	 call	 ?DeleteAll@CMannerTrialChat@@QAEXXZ ; CMannerTrialChat::DeleteAll

; 15   : }

  00020	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00024	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00027	e8 00 00 00 00	 call	 ?_Tidy@?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@IAEXXZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::_Tidy
  0002c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0002f	e8 00 00 00 00	 call	 ??1?$_Deque_val@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ ; std::_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::~_Deque_val<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
  00034	e8 00 00 00 00	 call	 __EH_epilog3
  00039	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CMannerTrialChat@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$deque@PAUChatItem@CMannerTrialChat@@V?$allocator@PAUChatItem@CMannerTrialChat@@@std@@@std@@QAE@XZ ; std::deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >::~deque<CMannerTrialChat::ChatItem *,std::allocator<CMannerTrialChat::ChatItem *> >
__ehhandler$??1CMannerTrialChat@@UAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CMannerTrialChat@@UAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CMannerTrialChat@@UAE@XZ ENDP			; CMannerTrialChat::~CMannerTrialChat
PUBLIC	??1?$map@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> > >::~map<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> > >
; Function compile flags: /Ogsp
;	COMDAT ??1?$map@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@@std@@QAE@XZ PROC ; std::map<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> > >::~map<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> > >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >
??1?$map@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> > >::~map<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> > >
_TEXT	ENDS
PUBLIC	??_7ioMannerTrialChatManager@@6B@		; ioMannerTrialChatManager::`vftable'
PUBLIC	??1ioMannerTrialChatManager@@UAE@XZ		; ioMannerTrialChatManager::~ioMannerTrialChatManager
PUBLIC	??_R4ioMannerTrialChatManager@@6B@		; ioMannerTrialChatManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioMannerTrialChatManager@@@8		; ioMannerTrialChatManager `RTTI Type Descriptor'
PUBLIC	??_R3ioMannerTrialChatManager@@8		; ioMannerTrialChatManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioMannerTrialChatManager@@8		; ioMannerTrialChatManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioMannerTrialChatManager@@8	; ioMannerTrialChatManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@?$Singleton@VioMannerTrialChatManager@@@@8 ; Singleton<ioMannerTrialChatManager>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AV?$Singleton@VioMannerTrialChatManager@@@@@8 ; Singleton<ioMannerTrialChatManager> `RTTI Type Descriptor'
PUBLIC	??_R3?$Singleton@VioMannerTrialChatManager@@@@8	; Singleton<ioMannerTrialChatManager>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$Singleton@VioMannerTrialChatManager@@@@8	; Singleton<ioMannerTrialChatManager>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$Singleton@VioMannerTrialChatManager@@@@8 ; Singleton<ioMannerTrialChatManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_EioMannerTrialChatManager@@UAEPAXI@Z:PROC	; ioMannerTrialChatManager::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$Singleton@VioMannerTrialChatManager@@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
rdata$r	SEGMENT
??_R1A@?0A@EA@?$Singleton@VioMannerTrialChatManager@@@@8 DD FLAT:??_R0?AV?$Singleton@VioMannerTrialChatManager@@@@@8 ; Singleton<ioMannerTrialChatManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioMannerTrialChatManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$Singleton@VioMannerTrialChatManager@@@@8
rdata$r	SEGMENT
??_R2?$Singleton@VioMannerTrialChatManager@@@@8 DD FLAT:??_R1A@?0A@EA@?$Singleton@VioMannerTrialChatManager@@@@8 ; Singleton<ioMannerTrialChatManager>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$Singleton@VioMannerTrialChatManager@@@@8
rdata$r	SEGMENT
??_R3?$Singleton@VioMannerTrialChatManager@@@@8 DD 00H	; Singleton<ioMannerTrialChatManager>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$Singleton@VioMannerTrialChatManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$Singleton@VioMannerTrialChatManager@@@@@8
_DATA	SEGMENT
??_R0?AV?$Singleton@VioMannerTrialChatManager@@@@@8 DD FLAT:??_7type_info@@6B@ ; Singleton<ioMannerTrialChatManager> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$Singleton@VioMannerTrialChatManager@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@?$Singleton@VioMannerTrialChatManager@@@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$Singleton@VioMannerTrialChatManager@@@@8 DD FLAT:??_R0?AV?$Singleton@VioMannerTrialChatManager@@@@@8 ; Singleton<ioMannerTrialChatManager>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioMannerTrialChatManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioMannerTrialChatManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioMannerTrialChatManager@@8 DD FLAT:??_R0?AVioMannerTrialChatManager@@@8 ; ioMannerTrialChatManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioMannerTrialChatManager@@8
rdata$r	ENDS
;	COMDAT ??_R2ioMannerTrialChatManager@@8
rdata$r	SEGMENT
??_R2ioMannerTrialChatManager@@8 DD FLAT:??_R1A@?0A@EA@ioMannerTrialChatManager@@8 ; ioMannerTrialChatManager::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@?$Singleton@VioMannerTrialChatManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R3ioMannerTrialChatManager@@8
rdata$r	SEGMENT
??_R3ioMannerTrialChatManager@@8 DD 00H			; ioMannerTrialChatManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioMannerTrialChatManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioMannerTrialChatManager@@@8
_DATA	SEGMENT
??_R0?AVioMannerTrialChatManager@@@8 DD FLAT:??_7type_info@@6B@ ; ioMannerTrialChatManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioMannerTrialChatManager@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioMannerTrialChatManager@@6B@
rdata$r	SEGMENT
??_R4ioMannerTrialChatManager@@6B@ DD 00H		; ioMannerTrialChatManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioMannerTrialChatManager@@@8
	DD	FLAT:??_R3ioMannerTrialChatManager@@8
rdata$r	ENDS
;	COMDAT ??_7ioMannerTrialChatManager@@6B@
CONST	SEGMENT
??_7ioMannerTrialChatManager@@6B@ DD FLAT:??_R4ioMannerTrialChatManager@@6B@ ; ioMannerTrialChatManager::`vftable'
	DD	FLAT:??_EioMannerTrialChatManager@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ioMannerTrialChatManager@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioMannerTrialChatManager@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ioMannerTrialChatManager@@UAE@XZ$1
__ehfuncinfo$??1ioMannerTrialChatManager@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1ioMannerTrialChatManager@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\mannertrialchat.cpp
xdata$x	ENDS
;	COMDAT ??1ioMannerTrialChatManager@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
_iter$505741 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??1ioMannerTrialChatManager@@UAE@XZ PROC		; ioMannerTrialChatManager::~ioMannerTrialChatManager, COMDAT
; _this$ = ecx

; 107  : {

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioMannerTrialChatManager@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioMannerTrialChatManager@@6B@

; 108  : 	for(MannerTrialChatMap::iterator iter = m_MannerTrialChatMap.begin(); iter != m_MannerTrialChatMap.end(); ++iter)

  00017	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00023	89 4d f0	 mov	 DWORD PTR _iter$505741[ebp], ecx
  00026	3b c8		 cmp	 ecx, eax
  00028	74 1d		 je	 SHORT $LN1@ioMannerTr
$LL26@ioMannerTr:

; 109  : 	{
; 110  : 	    delete iter->second;

  0002a	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  0002d	85 c9		 test	 ecx, ecx
  0002f	74 06		 je	 SHORT $LN2@ioMannerTr
  00031	8b 01		 mov	 eax, DWORD PTR [ecx]
  00033	6a 01		 push	 1
  00035	ff 10		 call	 DWORD PTR [eax]
$LN2@ioMannerTr:

; 108  : 	for(MannerTrialChatMap::iterator iter = m_MannerTrialChatMap.begin(); iter != m_MannerTrialChatMap.end(); ++iter)

  00037	8d 4d f0	 lea	 ecx, DWORD PTR _iter$505741[ebp]
  0003a	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >,std::_Iterator_base0>::operator++
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _iter$505741[ebp]
  00042	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00045	75 e3		 jne	 SHORT $LL26@ioMannerTr
$LN1@ioMannerTr:

; 111  : 	}
; 112  : 	m_MannerTrialChatMap.clear();

  00047	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0004a	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::clear

; 113  : }

  0004f	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00052	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00056	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >
  0005b	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioMannerTrialChatManager@@@@1PAVioMannerTrialChatManager@@A, 0 ; Singleton<ioMannerTrialChatManager>::ms_Singleton
  00062	e8 00 00 00 00	 call	 __EH_epilog3
  00067	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioMannerTrialChatManager@@UAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioMannerTrialChatManager@@@@QAE@XZ ; Singleton<ioMannerTrialChatManager>::~Singleton<ioMannerTrialChatManager>
__unwindfunclet$??1ioMannerTrialChatManager@@UAE@XZ$1:
  0000b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 04	 add	 ecx, 4
  00011	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@@std@@QAE@XZ
__ehhandler$??1ioMannerTrialChatManager@@UAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioMannerTrialChatManager@@UAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioMannerTrialChatManager@@UAE@XZ ENDP		; ioMannerTrialChatManager::~ioMannerTrialChatManager
PUBLIC	??0?$map@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> > >::map<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$map@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T513044 = -8						; size = 4
$T513046 = -8						; size = 4
$T513033 = -1						; size = 1
??0?$map@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@@std@@QAE@XZ PROC ; std::map<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> > >::map<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> > >, COMDAT
; _this$ = ecx

; 106  : 		{	// construct empty map from defaults

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	51		 push	 ecx
  00007	89 65 f8	 mov	 DWORD PTR $T513046[ebp], esp
  0000a	8d 45 ff	 lea	 eax, DWORD PTR $T513033[ebp]
  0000d	89 65 f8	 mov	 DWORD PTR $T513044[ebp], esp
  00010	50		 push	 eax
  00011	8b f1		 mov	 esi, ecx
  00013	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >

; 107  : 		}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c9		 leave
  0001c	c3		 ret	 0
??0?$map@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> > >::map<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> > >
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GCMannerTrialChat@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCMannerTrialChat@@UAEPAXI@Z PROC			; CMannerTrialChat::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CMannerTrialChat@@UAE@XZ ; CMannerTrialChat::~CMannerTrialChat
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@3
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@3:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GCMannerTrialChat@@UAEPAXI@Z ENDP			; CMannerTrialChat::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0ioMannerTrialChatManager@@QAE@XZ		; ioMannerTrialChatManager::ioMannerTrialChatManager
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??0ioMannerTrialChatManager@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioMannerTrialChatManager@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ioMannerTrialChatManager@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0ioMannerTrialChatManager@@QAE@XZ$2
__ehfuncinfo$??0ioMannerTrialChatManager@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0ioMannerTrialChatManager@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\mannertrialchat.cpp
xdata$x	ENDS
;	COMDAT ??0ioMannerTrialChatManager@@QAE@XZ
_TEXT	SEGMENT
$T513059 = -40						; size = 8
$T513058 = -32						; size = 8
$T513085 = -24						; size = 4
$T513097 = -24						; size = 4
$T513055 = -24						; size = 4
_this$ = -20						; size = 4
$T513093 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??0ioMannerTrialChatManager@@QAE@XZ PROC		; ioMannerTrialChatManager::ioMannerTrialChatManager, COMDAT
; _this$ = ecx

; 96   : {

  00000	6a 1c		 push	 28			; 0000001cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioMannerTrialChatManager@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
  00011	8b c7		 mov	 eax, edi
  00013	a3 00 00 00 00	 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioMannerTrialChatManager@@@@1PAVioMannerTrialChatManager@@A, eax ; Singleton<ioMannerTrialChatManager>::ms_Singleton
  00018	51		 push	 ecx
  00019	89 65 e8	 mov	 DWORD PTR $T513097[ebp], esp
  0001c	8d 45 f3	 lea	 eax, DWORD PTR $T513093[ebp]
  0001f	33 db		 xor	 ebx, ebx
  00021	89 65 e8	 mov	 DWORD PTR $T513085[ebp], esp
  00024	50		 push	 eax
  00025	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00028	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  0002b	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7ioMannerTrialChatManager@@6B@
  00031	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >
  00036	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
$LL4@ioMannerTr@2:

; 98   : 	{
; 99   : 		if( i == TT_NONE )

  0003a	85 db		 test	 ebx, ebx
  0003c	74 43		 je	 SHORT $LN3@ioMannerTr@2

; 100  : 			continue;
; 101  : 		CMannerTrialChat *pChat = new CMannerTrialChat;

  0003e	6a 20		 push	 32			; 00000020H
  00040	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00045	59		 pop	 ecx
  00046	89 45 e8	 mov	 DWORD PTR $T513055[ebp], eax
  00049	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0004d	85 c0		 test	 eax, eax
  0004f	74 09		 je	 SHORT $LN7@ioMannerTr@2
  00051	8b c8		 mov	 ecx, eax
  00053	e8 00 00 00 00	 call	 ??0CMannerTrialChat@@QAE@XZ ; CMannerTrialChat::CMannerTrialChat
  00058	eb 02		 jmp	 SHORT $LN8@ioMannerTr@2
$LN7@ioMannerTr@2:
  0005a	33 c0		 xor	 eax, eax
$LN8@ioMannerTr@2:

; 102  : 		m_MannerTrialChatMap.insert( MannerTrialChatMap::value_type( i, pChat ) );

  0005c	89 45 e4	 mov	 DWORD PTR $T513058[ebp+4], eax
  0005f	6a 00		 push	 0
  00061	8d 45 e0	 lea	 eax, DWORD PTR $T513058[ebp]
  00064	50		 push	 eax
  00065	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00068	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0006c	89 5d e0	 mov	 DWORD PTR $T513058[ebp], ebx
  0006f	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKPAVCMannerTrialChat@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Buynode<std::pair<unsigned long const ,CMannerTrialChat *> >
  00074	50		 push	 eax
  00075	8d 45 d8	 lea	 eax, DWORD PTR $T513059[ebp]
  00078	50		 push	 eax
  00079	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0007c	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CMannerTrialChat *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CMannerTrialChat *> >,0> >::_Linsert
$LN3@ioMannerTr@2:

; 97   : 	for (int i = TT_NONE; i <  TT_MAX ; i++)

  00081	43		 inc	 ebx
  00082	83 fb 0a	 cmp	 ebx, 10			; 0000000aH
  00085	7c b3		 jl	 SHORT $LL4@ioMannerTr@2

; 103  : 	}
; 104  : }

  00087	8b c7		 mov	 eax, edi
  00089	e8 00 00 00 00	 call	 __EH_epilog3
  0008e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioMannerTrialChatManager@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioMannerTrialChatManager@@@@QAE@XZ ; Singleton<ioMannerTrialChatManager>::~Singleton<ioMannerTrialChatManager>
__unwindfunclet$??0ioMannerTrialChatManager@@QAE@XZ$1:
  0000b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 04	 add	 ecx, 4
  00011	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCMannerTrialChat@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCMannerTrialChat@@@std@@@3@@std@@QAE@XZ
__unwindfunclet$??0ioMannerTrialChatManager@@QAE@XZ$2:
  00016	ff 75 e8	 push	 DWORD PTR $T513055[ebp]
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	59		 pop	 ecx
  0001f	c3		 ret	 0
__ehhandler$??0ioMannerTrialChatManager@@QAE@XZ:
  00020	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00024	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00027	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioMannerTrialChatManager@@QAE@XZ
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioMannerTrialChatManager@@QAE@XZ ENDP		; ioMannerTrialChatManager::ioMannerTrialChatManager
; Function compile flags: /Ogsp
;	COMDAT ??_GioMannerTrialChatManager@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioMannerTrialChatManager@@UAEPAXI@Z PROC		; ioMannerTrialChatManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioMannerTrialChatManager@@UAE@XZ ; ioMannerTrialChatManager::~ioMannerTrialChatManager
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@4
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@4:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioMannerTrialChatManager@@UAEPAXI@Z ENDP		; ioMannerTrialChatManager::`scalar deleting destructor'
_TEXT	ENDS
END
