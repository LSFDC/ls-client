; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\Housing\ioBlockEventAgency.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?ms_Singleton@?$Singleton@VioBlockEventAgency@@@@1PAVioBlockEventAgency@@A ; Singleton<ioBlockEventAgency>::ms_Singleton
;	COMDAT ?ms_Singleton@?$Singleton@VioBlockEventAgency@@@@1PAVioBlockEventAgency@@A
_BSS	SEGMENT
?ms_Singleton@?$Singleton@VioBlockEventAgency@@@@1PAVioBlockEventAgency@@A DD 01H DUP (?) ; Singleton<ioBlockEventAgency>::ms_Singleton
_BSS	ENDS
PUBLIC	??0ReseveEvent@ioBlockEventAgency@@QAE@XZ	; ioBlockEventAgency::ReseveEvent::ReseveEvent
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockeventagency.h
;	COMDAT ??0ReseveEvent@ioBlockEventAgency@@QAE@XZ
_TEXT	SEGMENT
??0ReseveEvent@ioBlockEventAgency@@QAE@XZ PROC		; ioBlockEventAgency::ReseveEvent::ReseveEvent, COMDAT
; _this$ = ecx

; 39   : 		ReseveEvent()

  00000	8b c1		 mov	 eax, ecx

; 40   : 		{
; 41   : 			eType	= 0;

  00002	83 20 00	 and	 DWORD PTR [eax], 0

; 42   : 			pParam	= NULL;

  00005	83 60 04 00	 and	 DWORD PTR [eax+4], 0

; 43   : 		}

  00009	c3		 ret	 0
??0ReseveEvent@ioBlockEventAgency@@QAE@XZ ENDP		; ioBlockEventAgency::ReseveEvent::ReseveEvent
_TEXT	ENDS
PUBLIC	??0?$Singleton@VioBlockEventAgency@@@@QAE@XZ	; Singleton<ioBlockEventAgency>::Singleton<ioBlockEventAgency>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
;	COMDAT ??0?$Singleton@VioBlockEventAgency@@@@QAE@XZ
_TEXT	SEGMENT
??0?$Singleton@VioBlockEventAgency@@@@QAE@XZ PROC	; Singleton<ioBlockEventAgency>::Singleton<ioBlockEventAgency>, COMDAT
; _this$ = ecx

; 27   : 	Singleton()

  00000	8b c1		 mov	 eax, ecx

; 28   : 	{
; 29   : 		assert( !ms_Singleton );
; 30   : 		int offset = (int)(T*)1 - (int)(Singleton <T>*)(T*)1;
; 31   : 		ms_Singleton = (T*)((int)this + offset);

  00002	8d 48 fc	 lea	 ecx, DWORD PTR [eax-4]
  00005	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioBlockEventAgency@@@@1PAVioBlockEventAgency@@A, ecx ; Singleton<ioBlockEventAgency>::ms_Singleton

; 32   : 	}

  0000b	c3		 ret	 0
??0?$Singleton@VioBlockEventAgency@@@@QAE@XZ ENDP	; Singleton<ioBlockEventAgency>::Singleton<ioBlockEventAgency>
_TEXT	ENDS
PUBLIC	??1?$Singleton@VioBlockEventAgency@@@@QAE@XZ	; Singleton<ioBlockEventAgency>::~Singleton<ioBlockEventAgency>
; Function compile flags: /Ogsp
;	COMDAT ??1?$Singleton@VioBlockEventAgency@@@@QAE@XZ
_TEXT	SEGMENT
??1?$Singleton@VioBlockEventAgency@@@@QAE@XZ PROC	; Singleton<ioBlockEventAgency>::~Singleton<ioBlockEventAgency>, COMDAT
; _this$ = ecx

; 36   : 		assert( ms_Singleton );
; 37   : 		ms_Singleton = 0;

  00000	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioBlockEventAgency@@@@1PAVioBlockEventAgency@@A, 0 ; Singleton<ioBlockEventAgency>::ms_Singleton

; 38   : 	}

  00007	c3		 ret	 0
??1?$Singleton@VioBlockEventAgency@@@@QAE@XZ ENDP	; Singleton<ioBlockEventAgency>::~Singleton<ioBlockEventAgency>
_TEXT	ENDS
PUBLIC	?GetSingleton@?$Singleton@VioBlockEventAgency@@@@SAAAVioBlockEventAgency@@XZ ; Singleton<ioBlockEventAgency>::GetSingleton
; Function compile flags: /Ogsp
;	COMDAT ?GetSingleton@?$Singleton@VioBlockEventAgency@@@@SAAAVioBlockEventAgency@@XZ
_TEXT	SEGMENT
?GetSingleton@?$Singleton@VioBlockEventAgency@@@@SAAAVioBlockEventAgency@@XZ PROC ; Singleton<ioBlockEventAgency>::GetSingleton, COMDAT

; 42   : 		assert( ms_Singleton );
; 43   : 		return (*ms_Singleton);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioBlockEventAgency@@@@1PAVioBlockEventAgency@@A ; Singleton<ioBlockEventAgency>::ms_Singleton

; 44   : 	}

  00005	c3		 ret	 0
?GetSingleton@?$Singleton@VioBlockEventAgency@@@@SAAAVioBlockEventAgency@@XZ ENDP ; Singleton<ioBlockEventAgency>::GetSingleton
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QBEABUReseveEvent@ioBlockEventAgency@@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QBEABUReseveEvent@ioBlockEventAgency@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QBEABUReseveEvent@ioBlockEventAgency@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::operator*, COMDAT
; _this$ = ecx

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 85   : 		}

  00002	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QBEABUReseveEvent@ioBlockEventAgency@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::operator++, COMDAT
; _this$ = ecx

; 93   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

  00002	83 00 08	 add	 DWORD PTR [eax], 8

; 111  : 		return (*this);
; 112  : 		}

  00005	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::operator++
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IBE_NPBQAVioBlockEventListener@@@Z ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Inside
; Function compile flags: /Ogsp
;	COMDAT ?_Inside@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IBE_NPBQAVioBlockEventListener@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IBE_NPBQAVioBlockEventListener@@@Z PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IBE_NPBQAVioBlockEventListener@@@Z ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IBEXPAPAVioBlockEventListener@@0@Z ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IBEXPAPAVioBlockEventListener@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IBEXPAPAVioBlockEventListener@@0@Z PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IBEXPAPAVioBlockEventListener@@0@Z ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE@XZ ; std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::~_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::~_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::~_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVioBlockEventListener@@@std@@QAE@XZ ; std::allocator<ioBlockEventListener *>::allocator<ioBlockEventListener *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAVioBlockEventListener@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAVioBlockEventListener@@@std@@QAE@XZ PROC ; std::allocator<ioBlockEventListener *>::allocator<ioBlockEventListener *>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@PAVioBlockEventListener@@@std@@QAE@XZ ENDP ; std::allocator<ioBlockEventListener *>::allocator<ioBlockEventListener *>
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IBE_NPBUReseveEvent@ioBlockEventAgency@@@Z ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IBE_NPBUReseveEvent@ioBlockEventAgency@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IBE_NPBUReseveEvent@ioBlockEventAgency@@@Z PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside@2
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside@2
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside@2
$LN3@Inside@2:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside@2:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IBE_NPBUReseveEvent@ioBlockEventAgency@@@Z ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IBEXPAUReseveEvent@ioBlockEventAgency@@0@Z ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IBEXPAUReseveEvent@ioBlockEventAgency@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IBEXPAUReseveEvent@ioBlockEventAgency@@0@Z PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IBEXPAUReseveEvent@ioBlockEventAgency@@0@Z ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE@XZ ; std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::~_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::~_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::~_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAE@XZ ; std::allocator<ioBlockEventAgency::ReseveEvent>::allocator<ioBlockEventAgency::ReseveEvent>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAE@XZ PROC ; std::allocator<ioBlockEventAgency::ReseveEvent>::allocator<ioBlockEventAgency::ReseveEvent>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAE@XZ ENDP ; std::allocator<ioBlockEventAgency::ReseveEvent>::allocator<ioBlockEventAgency::ReseveEvent>
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBEABQAVioBlockEventListener@@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBEABQAVioBlockEventListener@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBEABQAVioBlockEventListener@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::operator*, COMDAT
; _this$ = ecx

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 85   : 		}

  00002	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBEABQAVioBlockEventListener@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::operator++, COMDAT
; _this$ = ecx

; 93   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 111  : 		return (*this);
; 112  : 		}

  00005	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::operator++
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	?capacity@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QBEIXZ ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QBEIXZ PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 778  : 		}

  00008	c3		 ret	 0
?capacity@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::capacity
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
PUBLIC	?size@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QBEIXZ ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QBEIXZ PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::size
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1exception@std@@UAE@XZ
  00012	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00016	74 07		 je	 SHORT $LN1@scalar
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	59		 pop	 ecx
$LN1@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IBEXXZ ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IBEXXZ PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
  0000b	cc		 int	 3
?_Xlen@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IBEXXZ ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVioBlockEventListener@@@std@@QAE@ABV01@@Z ; std::allocator<ioBlockEventListener *>::allocator<ioBlockEventListener *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAVioBlockEventListener@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAVioBlockEventListener@@@std@@QAE@ABV01@@Z PROC ; std::allocator<ioBlockEventListener *>::allocator<ioBlockEventListener *>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@PAVioBlockEventListener@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<ioBlockEventListener *>::allocator<ioBlockEventListener *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVioBlockEventListener@@@std@@QAEXPAPAVioBlockEventListener@@I@Z ; std::allocator<ioBlockEventListener *>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@PAVioBlockEventListener@@@std@@QAEXPAPAVioBlockEventListener@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVioBlockEventListener@@@std@@QAEXPAPAVioBlockEventListener@@I@Z PROC ; std::allocator<ioBlockEventListener *>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVioBlockEventListener@@@std@@QAEXPAPAVioBlockEventListener@@I@Z ENDP ; std::allocator<ioBlockEventListener *>::deallocate
_TEXT	ENDS
PUBLIC	?capacity@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QBEIXZ ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QBEIXZ PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 03	 sar	 eax, 3

; 778  : 		}

  00008	c3		 ret	 0
?capacity@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::capacity
_TEXT	ENDS
PUBLIC	?size@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QBEIXZ ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::size
; Function compile flags: /Ogsp
;	COMDAT ?size@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QBEIXZ PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 03	 sar	 eax, 3

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::size
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	return (_Where);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 58   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 62   : 	}

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IBEXXZ ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Xlen
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Xlen@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IBEXXZ PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@2:
$LN3@Xlen@2:
  0000b	cc		 int	 3
?_Xlen@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IBEXXZ ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAE@ABV01@@Z ; std::allocator<ioBlockEventAgency::ReseveEvent>::allocator<ioBlockEventAgency::ReseveEvent>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAE@ABV01@@Z PROC ; std::allocator<ioBlockEventAgency::ReseveEvent>::allocator<ioBlockEventAgency::ReseveEvent>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<ioBlockEventAgency::ReseveEvent>::allocator<ioBlockEventAgency::ReseveEvent>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@I@Z ; std::allocator<ioBlockEventAgency::ReseveEvent>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@I@Z PROC ; std::allocator<ioBlockEventAgency::ReseveEvent>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@I@Z ENDP ; std::allocator<ioBlockEventAgency::ReseveEvent>::deallocate
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::_Compat
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::_Compat
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::_Compat
; Function compile flags: /Ogsp
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::_Compat
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVioBlockEventListener@@@std@@QBEIXZ ; std::allocator<ioBlockEventListener *>::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@PAVioBlockEventListener@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAVioBlockEventListener@@@std@@QBEIXZ PROC ; std::allocator<ioBlockEventListener *>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@PAVioBlockEventListener@@@std@@QBEIXZ ENDP ; std::allocator<ioBlockEventListener *>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QBEIXZ ; std::allocator<ioBlockEventAgency::ReseveEvent>::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QBEIXZ PROC ; std::allocator<ioBlockEventAgency::ReseveEvent>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QBEIXZ ENDP ; std::allocator<ioBlockEventAgency::ReseveEvent>::max_size
_TEXT	ENDS
PUBLIC	??$addressof@QAVioBlockEventListener@@@std@@YAPBQAVioBlockEventListener@@ABQAV1@@Z ; std::addressof<ioBlockEventListener * const>
; Function compile flags: /Ogsp
;	COMDAT ??$addressof@QAVioBlockEventListener@@@std@@YAPBQAVioBlockEventListener@@ABQAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAVioBlockEventListener@@@std@@YAPBQAVioBlockEventListener@@ABQAV1@@Z PROC ; std::addressof<ioBlockEventListener * const>, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@QAVioBlockEventListener@@@std@@YAPBQAVioBlockEventListener@@ABQAV1@@Z ENDP ; std::addressof<ioBlockEventListener * const>
_TEXT	ENDS
PUBLIC	??$addressof@$$CBUReseveEvent@ioBlockEventAgency@@@std@@YAPBUReseveEvent@ioBlockEventAgency@@ABU12@@Z ; std::addressof<ioBlockEventAgency::ReseveEvent const >
; Function compile flags: /Ogsp
;	COMDAT ??$addressof@$$CBUReseveEvent@ioBlockEventAgency@@@std@@YAPBUReseveEvent@ioBlockEventAgency@@ABU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUReseveEvent@ioBlockEventAgency@@@std@@YAPBUReseveEvent@ioBlockEventAgency@@ABU12@@Z PROC ; std::addressof<ioBlockEventAgency::ReseveEvent const >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@$$CBUReseveEvent@ioBlockEventAgency@@@std@@YAPBUReseveEvent@ioBlockEventAgency@@ABU12@@Z ENDP ; std::addressof<ioBlockEventAgency::ReseveEvent const >
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@PAVioBlockEventListener@@@std@@YAPAPAVioBlockEventListener@@IPAPAV1@@Z ; std::_Allocate<ioBlockEventListener *>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@PAVioBlockEventListener@@@std@@YAPAPAVioBlockEventListener@@IPAPAV1@@Z
_TEXT	SEGMENT
$T507741 = -12						; size = 12
$T507746 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVioBlockEventListener@@@std@@YAPAPAVioBlockEventListener@@IPAPAV1@@Z PROC ; std::_Allocate<ioBlockEventListener *>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3e		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate
  00017	8b c1		 mov	 eax, ecx
  00019	c1 e0 02	 shl	 eax, 2
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	59		 pop	 ecx
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 26		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	83 65 08 00	 and	 DWORD PTR $T507746[ebp], 0
  0002b	8d 45 08	 lea	 eax, DWORD PTR $T507746[ebp]
  0002e	50		 push	 eax
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T507741[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003d	8d 45 f4	 lea	 eax, DWORD PTR $T507741[ebp]
  00040	50		 push	 eax
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T507741[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  0004d	c9		 leave
  0004e	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@PAVioBlockEventListener@@@std@@YAPAPAVioBlockEventListener@@IPAPAV1@@Z ENDP ; std::_Allocate<ioBlockEventListener *>
_TEXT	ENDS
PUBLIC	??$_Allocate@UReseveEvent@ioBlockEventAgency@@@std@@YAPAUReseveEvent@ioBlockEventAgency@@IPAU12@@Z ; std::_Allocate<ioBlockEventAgency::ReseveEvent>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@UReseveEvent@ioBlockEventAgency@@@std@@YAPAUReseveEvent@ioBlockEventAgency@@IPAU12@@Z
_TEXT	SEGMENT
$T507751 = -12						; size = 12
$T507755 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UReseveEvent@ioBlockEventAgency@@@std@@YAPAUReseveEvent@ioBlockEventAgency@@IPAU12@@Z PROC ; std::_Allocate<ioBlockEventAgency::ReseveEvent>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3e		 je	 SHORT $LN5@Allocate@2

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	1f		 cmp	 ecx, 536870911		; 1fffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate@2
  00017	8b c1		 mov	 eax, ecx
  00019	c1 e0 03	 shl	 eax, 3
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	59		 pop	 ecx
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 26		 jne	 SHORT $LN5@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	83 65 08 00	 and	 DWORD PTR $T507755[ebp], 0
  0002b	8d 45 08	 lea	 eax, DWORD PTR $T507755[ebp]
  0002e	50		 push	 eax
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T507751[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003d	8d 45 f4	 lea	 eax, DWORD PTR $T507751[ebp]
  00040	50		 push	 eax
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T507751[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:

; 40   : 	}

  0004d	c9		 leave
  0004e	c3		 ret	 0
$LN9@Allocate@2:
??$_Allocate@UReseveEvent@ioBlockEventAgency@@@std@@YAPAUReseveEvent@ioBlockEventAgency@@IPAU12@@Z ENDP ; std::_Allocate<ioBlockEventAgency::ReseveEvent>
_TEXT	ENDS
PUBLIC	??$forward@AAPAVioBlockEventListener@@@std@@YAAAPAVioBlockEventListener@@AAPAV1@@Z ; std::forward<ioBlockEventListener * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAPAVioBlockEventListener@@@std@@YAAAPAVioBlockEventListener@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVioBlockEventListener@@@std@@YAAAPAVioBlockEventListener@@AAPAV1@@Z PROC ; std::forward<ioBlockEventListener * &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAVioBlockEventListener@@@std@@YAAAPAVioBlockEventListener@@AAPAV1@@Z ENDP ; std::forward<ioBlockEventListener * &>
_TEXT	ENDS
PUBLIC	??$construct@AAPAVioBlockEventListener@@@?$allocator@PAVioBlockEventListener@@@std@@QAEXPAPAVioBlockEventListener@@AAPAV2@@Z ; std::allocator<ioBlockEventListener *>::construct<ioBlockEventListener * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAPAVioBlockEventListener@@@?$allocator@PAVioBlockEventListener@@@std@@QAEXPAPAVioBlockEventListener@@AAPAV2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAPAVioBlockEventListener@@@?$allocator@PAVioBlockEventListener@@@std@@QAEXPAPAVioBlockEventListener@@AAPAV2@@Z PROC ; std::allocator<ioBlockEventListener *>::construct<ioBlockEventListener * &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@construct:

; 209  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
??$construct@AAPAVioBlockEventListener@@@?$allocator@PAVioBlockEventListener@@@std@@QAEXPAPAVioBlockEventListener@@AAPAV2@@Z ENDP ; std::allocator<ioBlockEventListener *>::construct<ioBlockEventListener * &>
_TEXT	ENDS
PUBLIC	??$forward@ABQAVioBlockEventListener@@@std@@YAABQAVioBlockEventListener@@ABQAV1@@Z ; std::forward<ioBlockEventListener * const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABQAVioBlockEventListener@@@std@@YAABQAVioBlockEventListener@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVioBlockEventListener@@@std@@YAABQAVioBlockEventListener@@ABQAV1@@Z PROC ; std::forward<ioBlockEventListener * const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABQAVioBlockEventListener@@@std@@YAABQAVioBlockEventListener@@ABQAV1@@Z ENDP ; std::forward<ioBlockEventListener * const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAVioBlockEventListener@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioBlockEventListener@@0@Z ; std::_Ptr_cat<ioBlockEventListener *,ioBlockEventListener *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAVioBlockEventListener@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioBlockEventListener@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVioBlockEventListener@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioBlockEventListener@@0@Z PROC ; std::_Ptr_cat<ioBlockEventListener *,ioBlockEventListener *>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@PAVioBlockEventListener@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioBlockEventListener@@0@Z ENDP ; std::_Ptr_cat<ioBlockEventListener *,ioBlockEventListener *>
_TEXT	ENDS
PUBLIC	??$_Move@PAPAVioBlockEventListener@@PAPAV1@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ioBlockEventListener * *,ioBlockEventListener * *>
EXTRN	__imp__memmove:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$_Move@PAPAVioBlockEventListener@@PAPAV1@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAPAVioBlockEventListener@@PAPAV1@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<ioBlockEventListener * *,ioBlockEventListener * *>, COMDAT

; 2522 : 	{	// move [_First, _Last) to [_Dest, ...), pointers to scalars

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2523 : 	ptrdiff_t _Count = _Last - _First;

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	57		 push	 edi

; 2524 : 	_CSTD memmove(&*_Dest, &*_First,
; 2525 : 		_Count * sizeof (*_First));

  0000b	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0000e	c1 fe 02	 sar	 esi, 2
  00011	c1 e6 02	 shl	 esi, 2
  00014	56		 push	 esi
  00015	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00018	57		 push	 edi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2526 : 	return (_Dest + _Count);

  00022	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 2527 : 	}

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Move@PAPAVioBlockEventListener@@PAPAV1@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<ioBlockEventListener * *,ioBlockEventListener * *>
_TEXT	ENDS
PUBLIC	??$forward@AAUReseveEvent@ioBlockEventAgency@@@std@@YAAAUReseveEvent@ioBlockEventAgency@@AAU12@@Z ; std::forward<ioBlockEventAgency::ReseveEvent &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAUReseveEvent@ioBlockEventAgency@@@std@@YAAAUReseveEvent@ioBlockEventAgency@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUReseveEvent@ioBlockEventAgency@@@std@@YAAAUReseveEvent@ioBlockEventAgency@@AAU12@@Z PROC ; std::forward<ioBlockEventAgency::ReseveEvent &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAUReseveEvent@ioBlockEventAgency@@@std@@YAAAUReseveEvent@ioBlockEventAgency@@AAU12@@Z ENDP ; std::forward<ioBlockEventAgency::ReseveEvent &>
_TEXT	ENDS
PUBLIC	??$construct@AAUReseveEvent@ioBlockEventAgency@@@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@AAU23@@Z ; std::allocator<ioBlockEventAgency::ReseveEvent>::construct<ioBlockEventAgency::ReseveEvent &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAUReseveEvent@ioBlockEventAgency@@@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@AAU23@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUReseveEvent@ioBlockEventAgency@@@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@AAU23@@Z PROC ; std::allocator<ioBlockEventAgency::ReseveEvent>::construct<ioBlockEventAgency::ReseveEvent &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN3@construct@2
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN3@construct@2:

; 209  : 		}

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
??$construct@AAUReseveEvent@ioBlockEventAgency@@@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@AAU23@@Z ENDP ; std::allocator<ioBlockEventAgency::ReseveEvent>::construct<ioBlockEventAgency::ReseveEvent &>
_TEXT	ENDS
PUBLIC	??$forward@ABUReseveEvent@ioBlockEventAgency@@@std@@YAABUReseveEvent@ioBlockEventAgency@@ABU12@@Z ; std::forward<ioBlockEventAgency::ReseveEvent const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABUReseveEvent@ioBlockEventAgency@@@std@@YAABUReseveEvent@ioBlockEventAgency@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUReseveEvent@ioBlockEventAgency@@@std@@YAABUReseveEvent@ioBlockEventAgency@@ABU12@@Z PROC ; std::forward<ioBlockEventAgency::ReseveEvent const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABUReseveEvent@ioBlockEventAgency@@@std@@YAABUReseveEvent@ioBlockEventAgency@@ABU12@@Z ENDP ; std::forward<ioBlockEventAgency::ReseveEvent const &>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVioBlockEventListener@@@std@@@std@@YAXPAPAVioBlockEventListener@@0AAV?$allocator@PAVioBlockEventListener@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ioBlockEventListener *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVioBlockEventListener@@@std@@@std@@YAXPAPAVioBlockEventListener@@0AAV?$allocator@PAVioBlockEventListener@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAVioBlockEventListener@@@std@@@std@@YAXPAPAVioBlockEventListener@@0AAV?$allocator@PAVioBlockEventListener@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ioBlockEventListener *> >, COMDAT

; 105  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAVioBlockEventListener@@@std@@@std@@YAXPAPAVioBlockEventListener@@0AAV?$allocator@PAVioBlockEventListener@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioBlockEventListener *> >
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@UReseveEvent@ioBlockEventAgency@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUReseveEvent@ioBlockEventAgency@@0@Z ; std::_Ptr_cat<ioBlockEventAgency::ReseveEvent,ioBlockEventAgency::ReseveEvent>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@UReseveEvent@ioBlockEventAgency@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUReseveEvent@ioBlockEventAgency@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UReseveEvent@ioBlockEventAgency@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUReseveEvent@ioBlockEventAgency@@0@Z PROC ; std::_Ptr_cat<ioBlockEventAgency::ReseveEvent,ioBlockEventAgency::ReseveEvent>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@UReseveEvent@ioBlockEventAgency@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUReseveEvent@ioBlockEventAgency@@0@Z ENDP ; std::_Ptr_cat<ioBlockEventAgency::ReseveEvent,ioBlockEventAgency::ReseveEvent>
_TEXT	ENDS
PUBLIC	??$_Construct@PAVioBlockEventListener@@ABQAV1@@std@@YAXPAPAVioBlockEventListener@@ABQAV1@@Z ; std::_Construct<ioBlockEventListener *,ioBlockEventListener * const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Construct@PAVioBlockEventListener@@ABQAV1@@std@@YAXPAPAVioBlockEventListener@@ABQAV1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAVioBlockEventListener@@ABQAV1@@std@@YAXPAPAVioBlockEventListener@@ABQAV1@@Z PROC ; std::_Construct<ioBlockEventListener *,ioBlockEventListener * const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@Construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@Construct:

; 49   : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Construct@PAVioBlockEventListener@@ABQAV1@@std@@YAXPAPAVioBlockEventListener@@ABQAV1@@Z ENDP ; std::_Construct<ioBlockEventListener *,ioBlockEventListener * const &>
_TEXT	ENDS
PUBLIC	??$_Construct@UReseveEvent@ioBlockEventAgency@@ABU12@@std@@YAXPAUReseveEvent@ioBlockEventAgency@@ABU12@@Z ; std::_Construct<ioBlockEventAgency::ReseveEvent,ioBlockEventAgency::ReseveEvent const &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Construct@UReseveEvent@ioBlockEventAgency@@ABU12@@std@@YAXPAUReseveEvent@ioBlockEventAgency@@ABU12@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UReseveEvent@ioBlockEventAgency@@ABU12@@std@@YAXPAUReseveEvent@ioBlockEventAgency@@ABU12@@Z PROC ; std::_Construct<ioBlockEventAgency::ReseveEvent,ioBlockEventAgency::ReseveEvent const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN3@Construct@2
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN3@Construct@2:

; 49   : 	}

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Construct@UReseveEvent@ioBlockEventAgency@@ABU12@@std@@YAXPAUReseveEvent@ioBlockEventAgency@@ABU12@@Z ENDP ; std::_Construct<ioBlockEventAgency::ReseveEvent,ioBlockEventAgency::ReseveEvent const &>
_TEXT	ENDS
PUBLIC	??$move@AAUReseveEvent@ioBlockEventAgency@@@std@@YA$$QAUReseveEvent@ioBlockEventAgency@@AAU12@@Z ; std::move<ioBlockEventAgency::ReseveEvent &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAUReseveEvent@ioBlockEventAgency@@@std@@YA$$QAUReseveEvent@ioBlockEventAgency@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUReseveEvent@ioBlockEventAgency@@@std@@YA$$QAUReseveEvent@ioBlockEventAgency@@AAU12@@Z PROC ; std::move<ioBlockEventAgency::ReseveEvent &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAUReseveEvent@ioBlockEventAgency@@@std@@YA$$QAUReseveEvent@ioBlockEventAgency@@AAU12@@Z ENDP ; std::move<ioBlockEventAgency::ReseveEvent &>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAPAVioBlockEventListener@@@std@@YAPAPAVioBlockEventListener@@PAPAV1@@Z ; std::_Val_type<ioBlockEventListener * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAPAVioBlockEventListener@@@std@@YAPAPAVioBlockEventListener@@PAPAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAVioBlockEventListener@@@std@@YAPAPAVioBlockEventListener@@PAPAV1@@Z PROC ; std::_Val_type<ioBlockEventListener * *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAPAVioBlockEventListener@@@std@@YAPAPAVioBlockEventListener@@PAPAV1@@Z ENDP ; std::_Val_type<ioBlockEventListener * *>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAVioBlockEventListener@@PAV1@PAV1@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00AAV?$allocator@PAVioBlockEventListener@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioBlockEventListener *,ioBlockEventListener *,ioBlockEventListener *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@PAVioBlockEventListener@@PAV1@PAV1@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00AAV?$allocator@PAVioBlockEventListener@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVioBlockEventListener@@PAV1@PAV1@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00AAV?$allocator@PAVioBlockEventListener@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<ioBlockEventListener *,ioBlockEventListener *,ioBlockEventListener *>, COMDAT

; 456  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 457  : 	_DEBUG_RANGE(_First, _Last);
; 458  : 	_DEBUG_POINTER(_Dest);
; 459  : 	size_t _Count = (size_t)(_Last - _First);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2

; 460  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 461  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 462  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninit_move@PAVioBlockEventListener@@PAV1@PAV1@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00AAV?$allocator@PAVioBlockEventListener@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<ioBlockEventListener *,ioBlockEventListener *,ioBlockEventListener *>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAUReseveEvent@ioBlockEventAgency@@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@@Z ; std::_Val_type<ioBlockEventAgency::ReseveEvent *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAUReseveEvent@ioBlockEventAgency@@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUReseveEvent@ioBlockEventAgency@@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@@Z PROC ; std::_Val_type<ioBlockEventAgency::ReseveEvent *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAUReseveEvent@ioBlockEventAgency@@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@@Z ENDP ; std::_Val_type<ioBlockEventAgency::ReseveEvent *>
_TEXT	ENDS
PUBLIC	??$_Destroy@UReseveEvent@ioBlockEventAgency@@@std@@YAXPAUReseveEvent@ioBlockEventAgency@@@Z ; std::_Destroy<ioBlockEventAgency::ReseveEvent>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@UReseveEvent@ioBlockEventAgency@@@std@@YAXPAUReseveEvent@ioBlockEventAgency@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UReseveEvent@ioBlockEventAgency@@@std@@YAXPAUReseveEvent@ioBlockEventAgency@@@Z PROC ; std::_Destroy<ioBlockEventAgency::ReseveEvent>, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@UReseveEvent@ioBlockEventAgency@@@std@@YAXPAUReseveEvent@ioBlockEventAgency@@@Z ENDP ; std::_Destroy<ioBlockEventAgency::ReseveEvent>
_TEXT	ENDS
PUBLIC	??$forward@UReseveEvent@ioBlockEventAgency@@@std@@YA$$QAUReseveEvent@ioBlockEventAgency@@AAU12@@Z ; std::forward<ioBlockEventAgency::ReseveEvent>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@UReseveEvent@ioBlockEventAgency@@@std@@YA$$QAUReseveEvent@ioBlockEventAgency@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UReseveEvent@ioBlockEventAgency@@@std@@YA$$QAUReseveEvent@ioBlockEventAgency@@AAU12@@Z PROC ; std::forward<ioBlockEventAgency::ReseveEvent>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@UReseveEvent@ioBlockEventAgency@@@std@@YA$$QAUReseveEvent@ioBlockEventAgency@@AAU12@@Z ENDP ; std::forward<ioBlockEventAgency::ReseveEvent>
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	?GetSingleton@ioBlockEventAgency@@SAAAV1@XZ	; ioBlockEventAgency::GetSingleton
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockeventagency.cpp
;	COMDAT ?GetSingleton@ioBlockEventAgency@@SAAAV1@XZ
_TEXT	SEGMENT
?GetSingleton@ioBlockEventAgency@@SAAAV1@XZ PROC	; ioBlockEventAgency::GetSingleton, COMDAT

; 31   : 	return Singleton< ioBlockEventAgency >::GetSingleton();

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioBlockEventAgency@@@@1PAVioBlockEventAgency@@A ; Singleton<ioBlockEventAgency>::ms_Singleton

; 32   : }

  00005	c3		 ret	 0
?GetSingleton@ioBlockEventAgency@@SAAAV1@XZ ENDP	; ioBlockEventAgency::GetSingleton
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBEAAPAVioBlockEventListener@@XZ ; std::_Vector_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBEAAPAVioBlockEventListener@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBEAAPAVioBlockEventListener@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::operator*, COMDAT
; _this$ = ecx

; 322  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 323  : 		}

  00002	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBEAAPAVioBlockEventListener@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::operator++, COMDAT
; _this$ = ecx

; 331  : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 332  : 		++*(_Mybase *)this;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 333  : 		return (*this);
; 334  : 		}

  00005	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE@V?$allocator@PAVioBlockEventListener@@@1@@Z ; std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE@V?$allocator@PAVioBlockEventListener@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE@V?$allocator@PAVioBlockEventListener@@@1@@Z PROC ; std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE@V?$allocator@PAVioBlockEventListener@@@1@@Z ENDP ; std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE@V?$allocator@UReseveEvent@ioBlockEventAgency@@@1@@Z ; std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE@V?$allocator@UReseveEvent@ioBlockEventAgency@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE@V?$allocator@UReseveEvent@ioBlockEventAgency@@@1@@Z PROC ; std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE@V?$allocator@UReseveEvent@ioBlockEventAgency@@@1@@Z ENDP ; std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::operator==
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::operator==
_TEXT	ENDS
PUBLIC	?max_size@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QBEIXZ ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QBEIXZ PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IBEII@Z ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IBEII@Z PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  00008	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  0000d	c1 f8 02	 sar	 eax, 2
  00010	8b c8		 mov	 ecx, eax
  00012	d1 e9		 shr	 ecx, 1
  00014	2b d1		 sub	 edx, ecx
  00016	3b d0		 cmp	 edx, eax
  00018	73 04		 jae	 SHORT $LN4@Grow_to
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 02		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  0001e	03 c1		 add	 eax, ecx
$LN5@Grow_to:

; 1279 : 		if (_Capacity < _Count)

  00020	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00023	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IBEII@Z ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Grow_to
_TEXT	ENDS
PUBLIC	?max_size@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QBEIXZ ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QBEIXZ PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IBEII@Z ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IBEII@Z PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  00008	ba ff ff ff 1f	 mov	 edx, 536870911		; 1fffffffH
  0000d	c1 f8 03	 sar	 eax, 3
  00010	8b c8		 mov	 ecx, eax
  00012	d1 e9		 shr	 ecx, 1
  00014	2b d1		 sub	 edx, ecx
  00016	3b d0		 cmp	 edx, eax
  00018	73 04		 jae	 SHORT $LN4@Grow_to@2
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 02		 jmp	 SHORT $LN5@Grow_to@2
$LN4@Grow_to@2:
  0001e	03 c1		 add	 eax, ecx
$LN5@Grow_to@2:

; 1279 : 		if (_Capacity < _Count)

  00020	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00023	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?_Grow_to@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IBEII@Z ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Grow_to
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QAE@PAPAVioBlockEventListener@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QAE@PAPAVioBlockEventListener@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QAE@PAPAVioBlockEventListener@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QAE@PAPAVioBlockEventListener@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QAE@PAUReseveEvent@ioBlockEventAgency@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QAE@PAUReseveEvent@ioBlockEventAgency@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QAE@PAUReseveEvent@ioBlockEventAgency@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QAE@PAUReseveEvent@ioBlockEventAgency@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAVioBlockEventListener@@@std@@QAEPAPAVioBlockEventListener@@I@Z ; std::allocator<ioBlockEventListener *>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@PAVioBlockEventListener@@@std@@QAEPAPAVioBlockEventListener@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVioBlockEventListener@@@std@@QAEPAPAVioBlockEventListener@@I@Z PROC ; std::allocator<ioBlockEventListener *>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@PAVioBlockEventListener@@@std@@YAPAPAVioBlockEventListener@@IPAPAV1@@Z ; std::_Allocate<ioBlockEventListener *>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@PAVioBlockEventListener@@@std@@QAEPAPAVioBlockEventListener@@I@Z ENDP ; std::allocator<ioBlockEventListener *>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEPAUReseveEvent@ioBlockEventAgency@@I@Z ; std::allocator<ioBlockEventAgency::ReseveEvent>::allocate
; Function compile flags: /Ogsp
;	COMDAT ?allocate@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEPAUReseveEvent@ioBlockEventAgency@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEPAUReseveEvent@ioBlockEventAgency@@I@Z PROC ; std::allocator<ioBlockEventAgency::ReseveEvent>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@UReseveEvent@ioBlockEventAgency@@@std@@YAPAUReseveEvent@ioBlockEventAgency@@IPAU12@@Z ; std::_Allocate<ioBlockEventAgency::ReseveEvent>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEPAUReseveEvent@ioBlockEventAgency@@I@Z ENDP ; std::allocator<ioBlockEventAgency::ReseveEvent>::allocate
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVioBlockEventListener@@@std@@PAVioBlockEventListener@@AAPAV3@@std@@YAXAAV?$allocator@PAVioBlockEventListener@@@0@PAPAVioBlockEventListener@@AAPAV2@@Z ; std::_Cons_val<std::allocator<ioBlockEventListener *>,ioBlockEventListener *,ioBlockEventListener * &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@PAVioBlockEventListener@@@std@@PAVioBlockEventListener@@AAPAV3@@std@@YAXAAV?$allocator@PAVioBlockEventListener@@@0@PAPAVioBlockEventListener@@AAPAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVioBlockEventListener@@@std@@PAVioBlockEventListener@@AAPAV3@@std@@YAXAAV?$allocator@PAVioBlockEventListener@@@0@PAPAVioBlockEventListener@@AAPAV2@@Z PROC ; std::_Cons_val<std::allocator<ioBlockEventListener *>,ioBlockEventListener *,ioBlockEventListener * &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN7@Cons_val
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@Cons_val:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@PAVioBlockEventListener@@@std@@PAVioBlockEventListener@@AAPAV3@@std@@YAXAAV?$allocator@PAVioBlockEventListener@@@0@PAPAVioBlockEventListener@@AAPAV2@@Z ENDP ; std::_Cons_val<std::allocator<ioBlockEventListener *>,ioBlockEventListener *,ioBlockEventListener * &>
_TEXT	ENDS
PUBLIC	??$_Move@PAPAVioBlockEventListener@@PAPAV1@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00@Z ; std::_Move<ioBlockEventListener * *,ioBlockEventListener * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAPAVioBlockEventListener@@PAPAV1@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00@Z
_TEXT	SEGMENT
__Cat$508003 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAPAVioBlockEventListener@@PAPAV1@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00@Z PROC ; std::_Move<ioBlockEventListener * *,ioBlockEventListener * *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$508003[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAPAVioBlockEventListener@@PAPAV1@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ioBlockEventListener * *,ioBlockEventListener * *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAPAVioBlockEventListener@@PAPAV1@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00@Z ENDP ; std::_Move<ioBlockEventListener * *,ioBlockEventListener * *>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@AAU34@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@AAU23@@Z ; std::_Cons_val<std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent,ioBlockEventAgency::ReseveEvent &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@AAU34@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@AAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@AAU34@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@AAU23@@Z PROC ; std::_Cons_val<std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent,ioBlockEventAgency::ReseveEvent &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN7@Cons_val@2
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN7@Cons_val@2:

; 281  : 	}

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Cons_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@AAU34@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@AAU23@@Z ENDP ; std::_Cons_val<std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent,ioBlockEventAgency::ReseveEvent &>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVioBlockEventListener@@@std@@@std@@YAXPAPAVioBlockEventListener@@0AAV?$allocator@PAVioBlockEventListener@@@0@@Z ; std::_Destroy_range<std::allocator<ioBlockEventListener *> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy_range@V?$allocator@PAVioBlockEventListener@@@std@@@std@@YAXPAPAVioBlockEventListener@@0AAV?$allocator@PAVioBlockEventListener@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVioBlockEventListener@@@std@@@std@@YAXPAPAVioBlockEventListener@@0AAV?$allocator@PAVioBlockEventListener@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ioBlockEventListener *> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAVioBlockEventListener@@@std@@@std@@YAXPAPAVioBlockEventListener@@0AAV?$allocator@PAVioBlockEventListener@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioBlockEventListener *> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVioBlockEventListener@@@std@@QAEXPAPAVioBlockEventListener@@ABQAV3@@Z ; std::allocator<ioBlockEventListener *>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@PAVioBlockEventListener@@@std@@QAEXPAPAVioBlockEventListener@@ABQAV3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVioBlockEventListener@@@std@@QAEXPAPAVioBlockEventListener@@ABQAV3@@Z PROC ; std::allocator<ioBlockEventListener *>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN5@construct@3
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN5@construct@3:

; 198  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?construct@?$allocator@PAVioBlockEventListener@@@std@@QAEXPAPAVioBlockEventListener@@ABQAV3@@Z ENDP ; std::allocator<ioBlockEventListener *>::construct
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@ABU34@@Z ; std::allocator<ioBlockEventAgency::ReseveEvent>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@ABU34@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@ABU34@@Z PROC ; std::allocator<ioBlockEventAgency::ReseveEvent>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN5@construct@4
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN5@construct@4:

; 198  : 		}

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
?construct@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@ABU34@@Z ENDP ; std::allocator<ioBlockEventAgency::ReseveEvent>::construct
_TEXT	ENDS
PUBLIC	??$_Move@PAUReseveEvent@ioBlockEventAgency@@PAU12@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioBlockEventAgency::ReseveEvent *,ioBlockEventAgency::ReseveEvent *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAUReseveEvent@ioBlockEventAgency@@PAU12@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAUReseveEvent@ioBlockEventAgency@@PAU12@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<ioBlockEventAgency::ReseveEvent *,ioBlockEventAgency::ReseveEvent *>, COMDAT

; 2512 : 	{	// move [_First, _Last) to [_Dest, ...), arbitrary iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
$LN11@Move:
  00009	3b 4d 0c	 cmp	 ecx, DWORD PTR __Last$[ebp]
  0000c	74 12		 je	 SHORT $LN1@Move

; 2514 : 		*_Dest = _STD move(*_First);

  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 10		 mov	 DWORD PTR [eax], edx
  00012	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00015	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00018	83 c0 08	 add	 eax, 8
  0001b	83 c1 08	 add	 ecx, 8
  0001e	eb e9		 jmp	 SHORT $LN11@Move
$LN1@Move:

; 2515 : 	return (_Dest);
; 2516 : 	}

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Move@PAUReseveEvent@ioBlockEventAgency@@PAU12@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<ioBlockEventAgency::ReseveEvent *,ioBlockEventAgency::ReseveEvent *>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAPAVioBlockEventListener@@PAPAV1@V?$allocator@PAVioBlockEventListener@@@std@@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00AAV?$allocator@PAVioBlockEventListener@@@0@@Z ; std::_Uninitialized_move<ioBlockEventListener * *,ioBlockEventListener * *,std::allocator<ioBlockEventListener *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAPAVioBlockEventListener@@PAPAV1@V?$allocator@PAVioBlockEventListener@@@std@@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00AAV?$allocator@PAVioBlockEventListener@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVioBlockEventListener@@PAPAV1@V?$allocator@PAVioBlockEventListener@@@std@@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00AAV?$allocator@PAVioBlockEventListener@@@0@@Z PROC ; std::_Uninitialized_move<ioBlockEventListener * *,ioBlockEventListener * *,std::allocator<ioBlockEventListener *> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2
  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 472  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVioBlockEventListener@@PAPAV1@V?$allocator@PAVioBlockEventListener@@@std@@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00AAV?$allocator@PAVioBlockEventListener@@@0@@Z ENDP ; std::_Uninitialized_move<ioBlockEventListener * *,ioBlockEventListener * *,std::allocator<ioBlockEventListener *> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@@Z ; std::allocator<ioBlockEventAgency::ReseveEvent>::destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@@Z PROC ; std::allocator<ioBlockEventAgency::ReseveEvent>::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@@Z ENDP ; std::allocator<ioBlockEventAgency::ReseveEvent>::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@$$QAU34@@Z ; std::allocator<ioBlockEventAgency::ReseveEvent>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@$$QAU34@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@$$QAU34@@Z PROC ; std::allocator<ioBlockEventAgency::ReseveEvent>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN3@construct@5
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN3@construct@5:

; 203  : 		}

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
?construct@?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@QAEXPAUReseveEvent@ioBlockEventAgency@@$$QAU34@@Z ENDP ; std::allocator<ioBlockEventAgency::ReseveEvent>::construct
_TEXT	ENDS
PUBLIC	??0?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE@XZ ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE@XZ PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >
_TEXT	ENDS
PUBLIC	??0?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE@XZ ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE@XZ PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::operator!=
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::operator!=
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEXPAPAVioBlockEventListener@@0@Z ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEXPAPAVioBlockEventListener@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEXPAPAVioBlockEventListener@@0@Z PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEXPAPAVioBlockEventListener@@0@Z ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEXXZ ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Tidy
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEXXZ PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN12@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN12@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEXXZ ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QAE@PAPAVioBlockEventListener@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::_Vector_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QAE@PAPAVioBlockEventListener@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QAE@PAPAVioBlockEventListener@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::_Vector_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@std@@QAE@PAPAVioBlockEventListener@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >::_Vector_iterator<std::_Vector_val<ioBlockEventListener *,std::allocator<ioBlockEventListener *> > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QAE@PAUReseveEvent@ioBlockEventAgency@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::_Vector_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QAE@PAUReseveEvent@ioBlockEventAgency@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QAE@PAUReseveEvent@ioBlockEventAgency@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::_Vector_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@std@@QAE@PAUReseveEvent@ioBlockEventAgency@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >::_Vector_iterator<std::_Vector_val<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> > >
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@@Z ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@@Z PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@@Z ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Make_iter
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVioBlockEventListener@@@std@@PAVioBlockEventListener@@ABQAV3@@std@@YAXAAV?$allocator@PAVioBlockEventListener@@@0@PAPAVioBlockEventListener@@ABQAV2@@Z ; std::_Cons_val<std::allocator<ioBlockEventListener *>,ioBlockEventListener *,ioBlockEventListener * const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@PAVioBlockEventListener@@@std@@PAVioBlockEventListener@@ABQAV3@@std@@YAXAAV?$allocator@PAVioBlockEventListener@@@0@PAPAVioBlockEventListener@@ABQAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVioBlockEventListener@@@std@@PAVioBlockEventListener@@ABQAV3@@std@@YAXAAV?$allocator@PAVioBlockEventListener@@@0@PAPAVioBlockEventListener@@ABQAV2@@Z PROC ; std::_Cons_val<std::allocator<ioBlockEventListener *>,ioBlockEventListener *,ioBlockEventListener * const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN9@Cons_val@3
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN9@Cons_val@3:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@PAVioBlockEventListener@@@std@@PAVioBlockEventListener@@ABQAV3@@std@@YAXAAV?$allocator@PAVioBlockEventListener@@@0@PAPAVioBlockEventListener@@ABQAV2@@Z ENDP ; std::_Cons_val<std::allocator<ioBlockEventListener *>,ioBlockEventListener *,ioBlockEventListener * const &>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@ABU34@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@ABU23@@Z ; std::_Cons_val<std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent,ioBlockEventAgency::ReseveEvent const &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@ABU34@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@ABU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@ABU34@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@ABU23@@Z PROC ; std::_Cons_val<std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent,ioBlockEventAgency::ReseveEvent const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN9@Cons_val@4
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN9@Cons_val@4:

; 281  : 	}

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Cons_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@ABU34@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@ABU23@@Z ENDP ; std::_Cons_val<std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent,ioBlockEventAgency::ReseveEvent const &>
_TEXT	ENDS
PUBLIC	??$_Move@PAUReseveEvent@ioBlockEventAgency@@PAU12@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00@Z ; std::_Move<ioBlockEventAgency::ReseveEvent *,ioBlockEventAgency::ReseveEvent *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAUReseveEvent@ioBlockEventAgency@@PAU12@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00@Z
_TEXT	SEGMENT
__Cat$508365 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAUReseveEvent@ioBlockEventAgency@@PAU12@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00@Z PROC ; std::_Move<ioBlockEventAgency::ReseveEvent *,ioBlockEventAgency::ReseveEvent *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$508365[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAUReseveEvent@ioBlockEventAgency@@PAU12@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioBlockEventAgency::ReseveEvent *,ioBlockEventAgency::ReseveEvent *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAUReseveEvent@ioBlockEventAgency@@PAU12@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00@Z ENDP ; std::_Move<ioBlockEventAgency::ReseveEvent *,ioBlockEventAgency::ReseveEvent *>
_TEXT	ENDS
PUBLIC	??$_Umove@PAPAVioBlockEventListener@@@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEPAPAVioBlockEventListener@@PAPAV2@00@Z ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Umove<ioBlockEventListener * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??$_Umove@PAPAVioBlockEventListener@@@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEPAPAVioBlockEventListener@@PAPAV2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAVioBlockEventListener@@@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEPAPAVioBlockEventListener@@PAPAV2@00@Z PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Umove<ioBlockEventListener * *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVioBlockEventListener@@PAPAV1@V?$allocator@PAVioBlockEventListener@@@std@@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00AAV?$allocator@PAVioBlockEventListener@@@0@@Z ; std::_Uninitialized_move<ioBlockEventListener * *,ioBlockEventListener * *,std::allocator<ioBlockEventListener *> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAPAVioBlockEventListener@@@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEPAPAVioBlockEventListener@@PAPAV2@00@Z ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Umove<ioBlockEventListener * *>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@@Z ; std::_Dest_val<std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@@Z PROC ; std::_Dest_val<std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent>, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@@Z ENDP ; std::_Dest_val<std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@U34@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@$$QAU23@@Z ; std::_Cons_val<std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent,ioBlockEventAgency::ReseveEvent>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@U34@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@$$QAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@U34@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@$$QAU23@@Z PROC ; std::_Cons_val<std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent,ioBlockEventAgency::ReseveEvent>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN7@Cons_val@5
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN7@Cons_val@5:

; 281  : 	}

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Cons_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@U34@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@$$QAU23@@Z ENDP ; std::_Cons_val<std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent,ioBlockEventAgency::ReseveEvent>
_TEXT	ENDS
PUBLIC	??1?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE@XZ ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::~vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE@XZ PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::~vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEXXZ ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Tidy
??1?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::~vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@XZ ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@XZ PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@XZ ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@XZ ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@XZ PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@XZ ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::end
_TEXT	ENDS
PUBLIC	?begin@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@XZ ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@XZ PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@XZ ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@XZ ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@XZ PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@XZ ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::end
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@@Z ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@@Z PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@@Z ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Make_iter
_TEXT	ENDS
PUBLIC	?reserve@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAEXI@Z ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::reserve
; Function compile flags: /Ogsp
;	COMDAT ?reserve@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?reserve@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAEXI@Z PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 747  : 		if (max_size() < _Count)

  00003	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	76 0b		 jbe	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN43@reserve:
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  0001a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0001d	2b 06		 sub	 eax, DWORD PTR [esi]
  0001f	c1 f8 02	 sar	 eax, 2
  00022	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00025	73 52		 jae	 SHORT $LN3@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00027	53		 push	 ebx
  00028	57		 push	 edi
  00029	6a 00		 push	 0
  0002b	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate@PAVioBlockEventListener@@@std@@YAPAPAVioBlockEventListener@@IPAPAV1@@Z ; std::_Allocate<ioBlockEventListener *>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00033	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00035	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00038	52		 push	 edx
  00039	8b d8		 mov	 ebx, eax
  0003b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003e	53		 push	 ebx
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVioBlockEventListener@@PAPAV1@V?$allocator@PAVioBlockEventListener@@@std@@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00AAV?$allocator@PAVioBlockEventListener@@@0@@Z ; std::_Uninitialized_move<ioBlockEventListener * *,ioBlockEventListener * *,std::allocator<ioBlockEventListener *> >

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00046	8b 06		 mov	 eax, DWORD PTR [esi]
  00048	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0004b	2b f8		 sub	 edi, eax
  0004d	83 c4 18	 add	 esp, 24			; 00000018H
  00050	c1 ff 02	 sar	 edi, 2

; 761  : 			if (this->_Myfirst != 0)

  00053	85 c0		 test	 eax, eax
  00055	74 07		 je	 SHORT $LN39@reserve

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);
; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0005d	59		 pop	 ecx
$LN39@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  0005e	8b ce		 mov	 ecx, esi
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00066	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00069	8d 04 83	 lea	 eax, DWORD PTR [ebx+eax*4]
  0006c	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 770  : 			this->_Mylast = _Ptr + _Size;

  0006f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00072	5f		 pop	 edi

; 771  : 			this->_Myfirst = _Ptr;

  00073	89 1e		 mov	 DWORD PTR [esi], ebx
  00075	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00078	5b		 pop	 ebx
$LN3@reserve:
  00079	5e		 pop	 esi

; 772  : 			}
; 773  : 		}

  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
$LN42@reserve:
?reserve@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAEXI@Z ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::reserve
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@YAXPAUReseveEvent@ioBlockEventAgency@@0AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ioBlockEventAgency::ReseveEvent> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@YAXPAUReseveEvent@ioBlockEventAgency@@0AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@YAXPAUReseveEvent@ioBlockEventAgency@@0AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ioBlockEventAgency::ReseveEvent> >, COMDAT

; 96   : 	for (; _First != _Last; ++_First)
; 97   : 		_Dest_val(_Al, _First);
; 98   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@YAXPAUReseveEvent@ioBlockEventAgency@@0AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioBlockEventAgency::ReseveEvent> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAUReseveEvent@ioBlockEventAgency@@PAU12@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@U12@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioBlockEventAgency::ReseveEvent *,ioBlockEventAgency::ReseveEvent *,std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@PAUReseveEvent@ioBlockEventAgency@@PAU12@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@U12@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUReseveEvent@ioBlockEventAgency@@PAU12@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@U12@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<ioBlockEventAgency::ReseveEvent *,ioBlockEventAgency::ReseveEvent *,std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent>, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 16		 jmp	 SHORT $LN24@Uninit_mov
$LL6@Uninit_mov:

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

  00009	56		 push	 esi
  0000a	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000d	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@U34@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@$$QAU23@@Z ; std::_Cons_val<std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent,ioBlockEventAgency::ReseveEvent>
  00015	83 45 10 08	 add	 DWORD PTR __Dest$[ebp], 8
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001c	83 c6 08	 add	 esi, 8
$LN24@Uninit_mov:

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  0001f	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00022	75 e5		 jne	 SHORT $LL6@Uninit_mov

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)
; 434  : 		_Dest_val(_Al, _Next);
; 435  : 	_RERAISE;
; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

  00024	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00027	5e		 pop	 esi

; 438  : 	}

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$_Uninit_move@PAUReseveEvent@ioBlockEventAgency@@PAU12@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@U12@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<ioBlockEventAgency::ReseveEvent *,ioBlockEventAgency::ReseveEvent *,std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent>
_TEXT	ENDS
PUBLIC	?IsEvent@ioBlockEventAgency@@QAE_NW4EventType@ioBlockEventListener@@PAVioBlockEventParameter@@@Z ; ioBlockEventAgency::IsEvent
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockeventagency.cpp
;	COMDAT ?IsEvent@ioBlockEventAgency@@QAE_NW4EventType@ioBlockEventListener@@PAVioBlockEventParameter@@@Z
_TEXT	SEGMENT
_eType$ = 8						; size = 4
_param$ = 12						; size = 4
?IsEvent@ioBlockEventAgency@@QAE_NW4EventType@ioBlockEventListener@@PAVioBlockEventParameter@@@Z PROC ; ioBlockEventAgency::IsEvent, COMDAT
; _this$ = ecx

; 60   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 61   : 	for( ReseveEventList::const_iterator iter = m_ReseveEventList.begin(); iter != m_ReseveEventList.end(); ++iter )

  00003	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00006	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00009	eb 12		 jmp	 SHORT $LN36@IsEvent
$LL15@IsEvent:

; 62   : 	{	
; 63   : 		const ReseveEvent& Event = *iter;
; 64   : 		if( Event.eType == eType && Event.pParam == param )

  0000b	8b 10		 mov	 edx, DWORD PTR [eax]
  0000d	3b 55 08	 cmp	 edx, DWORD PTR _eType$[ebp]
  00010	75 08		 jne	 SHORT $LN3@IsEvent
  00012	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00015	3b 55 0c	 cmp	 edx, DWORD PTR _param$[ebp]
  00018	74 0d		 je	 SHORT $LN34@IsEvent
$LN3@IsEvent:

; 61   : 	for( ReseveEventList::const_iterator iter = m_ReseveEventList.begin(); iter != m_ReseveEventList.end(); ++iter )

  0001a	83 c0 08	 add	 eax, 8
$LN36@IsEvent:
  0001d	3b c1		 cmp	 eax, ecx
  0001f	75 ea		 jne	 SHORT $LL15@IsEvent

; 66   : 	}
; 67   : 
; 68   : 	return false;

  00021	32 c0		 xor	 al, al
$LN5@IsEvent:

; 69   : }

  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
$LN34@IsEvent:

; 65   : 			return true;

  00027	b0 01		 mov	 al, 1
  00029	eb f8		 jmp	 SHORT $LN5@IsEvent
?IsEvent@ioBlockEventAgency@@QAE_NW4EventType@ioBlockEventListener@@PAVioBlockEventParameter@@@Z ENDP ; ioBlockEventAgency::IsEvent
_TEXT	ENDS
PUBLIC	?BroadCastEvent@ioBlockEventAgency@@QAEXW4EventType@ioBlockEventListener@@PAVioBlockEventParameter@@@Z ; ioBlockEventAgency::BroadCastEvent
; Function compile flags: /Ogsp
;	COMDAT ?BroadCastEvent@ioBlockEventAgency@@QAEXW4EventType@ioBlockEventListener@@PAVioBlockEventParameter@@@Z
_TEXT	SEGMENT
_eType$ = 8						; size = 4
_param$ = 12						; size = 4
?BroadCastEvent@ioBlockEventAgency@@QAEXW4EventType@ioBlockEventListener@@PAVioBlockEventParameter@@@Z PROC ; ioBlockEventAgency::BroadCastEvent, COMDAT
; _this$ = ecx

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 94   : 	for( ioBlockEventListenerList::iterator iter = m_BlockEventListenerList.begin(); iter != m_BlockEventListenerList.end(); ++iter )

  00007	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000a	eb 13		 jmp	 SHORT $LN39@BroadCastE
$LL17@BroadCastE:

; 95   : 	{
; 96   : 		ioBlockEventListener* pListener = *iter;

  0000c	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 97   : 		if( pListener )

  0000e	85 c9		 test	 ecx, ecx
  00010	74 0a		 je	 SHORT $LN3@BroadCastE

; 98   : 			pListener->ReciveEvent( eType, param );

  00012	ff 75 0c	 push	 DWORD PTR _param$[ebp]
  00015	8b 01		 mov	 eax, DWORD PTR [ecx]
  00017	ff 75 08	 push	 DWORD PTR _eType$[ebp]
  0001a	ff 10		 call	 DWORD PTR [eax]
$LN3@BroadCastE:

; 94   : 	for( ioBlockEventListenerList::iterator iter = m_BlockEventListenerList.begin(); iter != m_BlockEventListenerList.end(); ++iter )

  0001c	83 c6 04	 add	 esi, 4
$LN39@BroadCastE:
  0001f	3b 77 08	 cmp	 esi, DWORD PTR [edi+8]
  00022	75 e8		 jne	 SHORT $LL17@BroadCastE
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi

; 99   : 	}
; 100  : }

  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?BroadCastEvent@ioBlockEventAgency@@QAEXW4EventType@ioBlockEventListener@@PAVioBlockEventParameter@@@Z ENDP ; ioBlockEventAgency::BroadCastEvent
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@@Z ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::erase
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?erase@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cat$508811 = 12					; size = 1
__Where$ = 12						; size = 4
?erase@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@@Z PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::erase, COMDAT
; _this$ = ecx

; 1179 : 		{	// erase element at where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1180 : 		_Move(_VIPTR(_Where) + 1, this->_Mylast,
; 1181 : 			_VIPTR(_Where));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	56		 push	 esi
  00007	ff 75 0c	 push	 DWORD PTR __Cat$508811[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	ff 76 04	 push	 DWORD PTR [esi+4]
  00010	83 c0 04	 add	 eax, 4
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Move@PAPAVioBlockEventListener@@PAPAV1@@std@@YAPAPAVioBlockEventListener@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ioBlockEventListener * *,ioBlockEventListener * *>

; 1182 : 		_Destroy(this->_Mylast - 1, this->_Mylast);
; 1183 : 		--this->_Mylast;
; 1184 : 		return (_Make_iter(_Where));

  00019	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  0001f	83 c4 10	 add	 esp, 16			; 00000010H
  00022	83 46 04 fc	 add	 DWORD PTR [esi+4], -4	; fffffffcH
  00026	89 08		 mov	 DWORD PTR [eax], ecx
  00028	5e		 pop	 esi

; 1185 : 		}

  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?erase@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@@Z ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::erase
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEXI@Z ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEXI@Z PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx

; 1292 : 		if (max_size() - _Count < _Size)

  0000d	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  00012	2b 55 08	 sub	 edx, DWORD PTR __Count$[ebp]
  00015	c1 f8 02	 sar	 eax, 2
  00018	3b d0		 cmp	 edx, eax
  0001a	73 0b		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve:
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  00027	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0002a	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0002d	2b d1		 sub	 edx, ecx
  0002f	c1 fa 02	 sar	 edx, 2
  00032	3b c2		 cmp	 eax, edx
  00034	76 10		 jbe	 SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  00036	50		 push	 eax
  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IBEII@Z ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Grow_to
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?reserve@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAEXI@Z ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::reserve
$LN1@Reserve:
  00046	5e		 pop	 esi

; 1298 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN20@Reserve:
?_Reserve@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEXI@Z ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Reserve
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@YAXPAUReseveEvent@ioBlockEventAgency@@0AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@@Z ; std::_Destroy_range<std::allocator<ioBlockEventAgency::ReseveEvent> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@YAXPAUReseveEvent@ioBlockEventAgency@@0AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@YAXPAUReseveEvent@ioBlockEventAgency@@0AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ioBlockEventAgency::ReseveEvent> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@YAXPAUReseveEvent@ioBlockEventAgency@@0AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioBlockEventAgency::ReseveEvent> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAUReseveEvent@ioBlockEventAgency@@PAU12@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@@Z ; std::_Uninitialized_move<ioBlockEventAgency::ReseveEvent *,ioBlockEventAgency::ReseveEvent *,std::allocator<ioBlockEventAgency::ReseveEvent> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAUReseveEvent@ioBlockEventAgency@@PAU12@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@@Z
_TEXT	SEGMENT
__Cat$508940 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUReseveEvent@ioBlockEventAgency@@PAU12@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@@Z PROC ; std::_Uninitialized_move<ioBlockEventAgency::ReseveEvent *,ioBlockEventAgency::ReseveEvent *,std::allocator<ioBlockEventAgency::ReseveEvent> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$508940[ebp]
  00007	6a 00		 push	 0
  00009	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000c	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00012	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00015	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUReseveEvent@ioBlockEventAgency@@PAU12@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@U12@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioBlockEventAgency::ReseveEvent *,ioBlockEventAgency::ReseveEvent *,std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent>
  0001a	83 c4 18	 add	 esp, 24			; 00000018H

; 472  : 	}

  0001d	c9		 leave
  0001e	c3		 ret	 0
??$_Uninitialized_move@PAUReseveEvent@ioBlockEventAgency@@PAU12@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@@Z ENDP ; std::_Uninitialized_move<ioBlockEventAgency::ReseveEvent *,ioBlockEventAgency::ReseveEvent *,std::allocator<ioBlockEventAgency::ReseveEvent> >
_TEXT	ENDS
PUBLIC	?UnRegisterEventListener@ioBlockEventAgency@@QAEXPAVioBlockEventListener@@@Z ; ioBlockEventAgency::UnRegisterEventListener
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockeventagency.cpp
;	COMDAT ?UnRegisterEventListener@ioBlockEventAgency@@QAEXPAVioBlockEventListener@@@Z
_TEXT	SEGMENT
$T508948 = -4						; size = 4
_pListener$ = 8						; size = 4
?UnRegisterEventListener@ioBlockEventAgency@@QAEXPAVioBlockEventListener@@@Z PROC ; ioBlockEventAgency::UnRegisterEventListener, COMDAT
; _this$ = ecx

; 45   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 46   : 	for( ioBlockEventListenerList::iterator iter = m_BlockEventListenerList.begin(); iter != m_BlockEventListenerList.end(); )

  00007	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000a	57		 push	 edi
  0000b	eb 1b		 jmp	 SHORT $LN38@UnRegister
$LL4@UnRegister:

; 47   : 	{		
; 48   : 		if( pListener == *iter )

  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _pListener$[ebp]
  00010	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00012	75 11		 jne	 SHORT $LN2@UnRegister

; 49   : 		{
; 50   : 			iter = m_BlockEventListenerList.erase( iter );

  00014	50		 push	 eax
  00015	8d 45 fc	 lea	 eax, DWORD PTR $T508948[ebp]
  00018	50		 push	 eax
  00019	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0001c	e8 00 00 00 00	 call	 ?erase@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@@2@@Z ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::erase
  00021	8b 00		 mov	 eax, DWORD PTR [eax]

; 51   : 		}
; 52   : 		else

  00023	eb 03		 jmp	 SHORT $LN38@UnRegister
$LN2@UnRegister:

; 53   : 		{
; 54   : 			 ++iter;

  00025	83 c0 04	 add	 eax, 4
$LN38@UnRegister:

; 46   : 	for( ioBlockEventListenerList::iterator iter = m_BlockEventListenerList.begin(); iter != m_BlockEventListenerList.end(); )

  00028	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0002b	75 e0		 jne	 SHORT $LL4@UnRegister
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi

; 55   : 		}
; 56   : 	}
; 57   : }

  0002f	c9		 leave
  00030	c2 04 00	 ret	 4
?UnRegisterEventListener@ioBlockEventAgency@@QAEXPAVioBlockEventListener@@@Z ENDP ; ioBlockEventAgency::UnRegisterEventListener
_TEXT	ENDS
PUBLIC	?push_back@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAEXABQAVioBlockEventListener@@@Z ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::push_back
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?push_back@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAEXABQAVioBlockEventListener@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAEXABQAVioBlockEventListener@@@Z PROC ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f8		 cmp	 edi, eax
  0000f	73 27		 jae	 SHORT $LN4@push_back
  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	3b cf		 cmp	 ecx, edi
  00015	77 21		 ja	 SHORT $LN4@push_back

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	2b f9		 sub	 edi, ecx
  00019	c1 ff 02	 sar	 edi, 2

; 980  : 			if (this->_Mylast == this->_Myend)

  0001c	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0001f	75 09		 jne	 SHORT $LN3@push_back

; 981  : 				_Reserve(1);

  00021	6a 01		 push	 1
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEXI@Z ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Reserve
$LN3@push_back:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	85 c0		 test	 eax, eax
  0002f	74 20		 je	 SHORT $LN39@push_back
  00031	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00033	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00036	eb 17		 jmp	 SHORT $LN46@push_back
$LN4@push_back:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00038	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0003b	75 09		 jne	 SHORT $LN1@push_back

; 991  : 				_Reserve(1);

  0003d	6a 01		 push	 1
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEXI@Z ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Reserve
$LN1@push_back:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00046	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00049	85 c0		 test	 eax, eax
  0004b	74 04		 je	 SHORT $LN39@push_back
  0004d	8b 0f		 mov	 ecx, DWORD PTR [edi]
$LN46@push_back:
  0004f	89 08		 mov	 DWORD PTR [eax], ecx
$LN39@push_back:

; 996  : 			++this->_Mylast;

  00051	83 46 04 04	 add	 DWORD PTR [esi+4], 4
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
?push_back@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAEXABQAVioBlockEventListener@@@Z ENDP ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::push_back
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEXPAUReseveEvent@ioBlockEventAgency@@0@Z ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEXPAUReseveEvent@ioBlockEventAgency@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEXPAUReseveEvent@ioBlockEventAgency@@0@Z PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEXPAUReseveEvent@ioBlockEventAgency@@0@Z ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Destroy
_TEXT	ENDS
PUBLIC	??$_Umove@PAUReseveEvent@ioBlockEventAgency@@@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEPAUReseveEvent@ioBlockEventAgency@@PAU23@00@Z ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Umove<ioBlockEventAgency::ReseveEvent *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Umove@PAUReseveEvent@ioBlockEventAgency@@@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEPAUReseveEvent@ioBlockEventAgency@@PAU23@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUReseveEvent@ioBlockEventAgency@@@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEPAUReseveEvent@ioBlockEventAgency@@PAU23@00@Z PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Umove<ioBlockEventAgency::ReseveEvent *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUReseveEvent@ioBlockEventAgency@@PAU12@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@@Z ; std::_Uninitialized_move<ioBlockEventAgency::ReseveEvent *,ioBlockEventAgency::ReseveEvent *,std::allocator<ioBlockEventAgency::ReseveEvent> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAUReseveEvent@ioBlockEventAgency@@@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEPAUReseveEvent@ioBlockEventAgency@@PAU23@00@Z ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Umove<ioBlockEventAgency::ReseveEvent *>
_TEXT	ENDS
PUBLIC	??_7ioBlockEventListener@@6B@			; ioBlockEventListener::`vftable'
PUBLIC	??1ioBlockEventListener@@UAE@XZ			; ioBlockEventListener::~ioBlockEventListener
PUBLIC	??_R4ioBlockEventListener@@6B@			; ioBlockEventListener::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioBlockEventListener@@@8		; ioBlockEventListener `RTTI Type Descriptor'
PUBLIC	??_R3ioBlockEventListener@@8			; ioBlockEventListener::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioBlockEventListener@@8			; ioBlockEventListener::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioBlockEventListener@@8		; ioBlockEventListener::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ReciveEvent@ioBlockEventListener@@UAEXW4EventType@1@PAVioBlockEventParameter@@@Z ; ioBlockEventListener::ReciveEvent
EXTRN	??_EioBlockEventListener@@UAEPAXI@Z:PROC	; ioBlockEventListener::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@ioBlockEventListener@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
rdata$r	SEGMENT
??_R1A@?0A@EA@ioBlockEventListener@@8 DD FLAT:??_R0?AVioBlockEventListener@@@8 ; ioBlockEventListener::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioBlockEventListener@@8
rdata$r	ENDS
;	COMDAT ??_R2ioBlockEventListener@@8
rdata$r	SEGMENT
??_R2ioBlockEventListener@@8 DD FLAT:??_R1A@?0A@EA@ioBlockEventListener@@8 ; ioBlockEventListener::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioBlockEventListener@@8
rdata$r	SEGMENT
??_R3ioBlockEventListener@@8 DD 00H			; ioBlockEventListener::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioBlockEventListener@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioBlockEventListener@@@8
_DATA	SEGMENT
??_R0?AVioBlockEventListener@@@8 DD FLAT:??_7type_info@@6B@ ; ioBlockEventListener `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioBlockEventListener@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioBlockEventListener@@6B@
rdata$r	SEGMENT
??_R4ioBlockEventListener@@6B@ DD 00H			; ioBlockEventListener::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioBlockEventListener@@@8
	DD	FLAT:??_R3ioBlockEventListener@@8
rdata$r	ENDS
;	COMDAT ??_7ioBlockEventListener@@6B@
CONST	SEGMENT
??_7ioBlockEventListener@@6B@ DD FLAT:??_R4ioBlockEventListener@@6B@ ; ioBlockEventListener::`vftable'
	DD	FLAT:?ReciveEvent@ioBlockEventListener@@UAEXW4EventType@1@PAVioBlockEventParameter@@@Z
	DD	FLAT:??_EioBlockEventListener@@UAEPAXI@Z
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockeventagency.cpp
CONST	ENDS
;	COMDAT ??1ioBlockEventListener@@UAE@XZ
_TEXT	SEGMENT
??1ioBlockEventListener@@UAE@XZ PROC			; ioBlockEventListener::~ioBlockEventListener, COMDAT
; _this$ = ecx

; 13   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ioBlockEventListener@@6B@

; 14   : 	g_BlockEventAgency.UnRegisterEventListener( this );

  00006	51		 push	 ecx
  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_Singleton@?$Singleton@VioBlockEventAgency@@@@1PAVioBlockEventAgency@@A ; Singleton<ioBlockEventAgency>::ms_Singleton
  0000d	e8 00 00 00 00	 call	 ?UnRegisterEventListener@ioBlockEventAgency@@QAEXPAVioBlockEventListener@@@Z ; ioBlockEventAgency::UnRegisterEventListener

; 15   : }

  00012	c3		 ret	 0
??1ioBlockEventListener@@UAE@XZ ENDP			; ioBlockEventListener::~ioBlockEventListener
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockeventagency.h
_TEXT	ENDS
;	COMDAT ?ReciveEvent@ioBlockEventListener@@UAEXW4EventType@1@PAVioBlockEventParameter@@@Z
_TEXT	SEGMENT
_eType$ = 8						; size = 4
_param$ = 12						; size = 4
?ReciveEvent@ioBlockEventListener@@UAEXW4EventType@1@PAVioBlockEventParameter@@@Z PROC ; ioBlockEventListener::ReciveEvent, COMDAT
; _this$ = ecx

; 20   : 	virtual void ReciveEvent( EventType eType, ioBlockEventParameter* param ){};

  00000	c2 08 00	 ret	 8
?ReciveEvent@ioBlockEventListener@@UAEXW4EventType@1@PAVioBlockEventParameter@@@Z ENDP ; ioBlockEventListener::ReciveEvent
_TEXT	ENDS
PUBLIC	?RegisterEventListener@ioBlockEventAgency@@QAEXPAVioBlockEventListener@@@Z ; ioBlockEventAgency::RegisterEventListener
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockeventagency.cpp
;	COMDAT ?RegisterEventListener@ioBlockEventAgency@@QAEXPAVioBlockEventListener@@@Z
_TEXT	SEGMENT
_pListener$ = 8						; size = 4
?RegisterEventListener@ioBlockEventAgency@@QAEXPAVioBlockEventListener@@@Z PROC ; ioBlockEventAgency::RegisterEventListener, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 36   : 	for( ioBlockEventListenerList::iterator iter = m_BlockEventListenerList.begin(); iter != m_BlockEventListenerList.end(); ++iter )

  00005	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000d	56		 push	 esi
  0000e	eb 0a		 jmp	 SHORT $LN40@RegisterEv
$LL17@RegisterEv:

; 37   : 	{		
; 38   : 		if( pListener == *iter )

  00010	8b 75 08	 mov	 esi, DWORD PTR _pListener$[ebp]
  00013	3b 32		 cmp	 esi, DWORD PTR [edx]
  00015	74 10		 je	 SHORT $LN5@RegisterEv

; 36   : 	for( ioBlockEventListenerList::iterator iter = m_BlockEventListenerList.begin(); iter != m_BlockEventListenerList.end(); ++iter )

  00017	83 c2 04	 add	 edx, 4
$LN40@RegisterEv:
  0001a	3b d0		 cmp	 edx, eax
  0001c	75 f2		 jne	 SHORT $LL17@RegisterEv

; 39   : 			return;
; 40   : 	}
; 41   : 	m_BlockEventListenerList.push_back( pListener );

  0001e	8d 45 08	 lea	 eax, DWORD PTR _pListener$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAEXABQAVioBlockEventListener@@@Z ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::push_back
$LN5@RegisterEv:
  00027	5e		 pop	 esi

; 42   : }

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?RegisterEventListener@ioBlockEventAgency@@QAEXPAVioBlockEventListener@@@Z ENDP ; ioBlockEventAgency::RegisterEventListener
_TEXT	ENDS
PUBLIC	?erase@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@0@Z ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::erase
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?erase@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$509388 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@0@Z PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __First_arg$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	8b f1		 mov	 esi, ecx
  0000d	89 07		 mov	 DWORD PTR [edi], eax

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 45 10	 cmp	 eax, DWORD PTR __Last_arg$[ebp]
  00012	74 16		 je	 SHORT $LN1@erase

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	ff 75 10	 push	 DWORD PTR __Cat$509388[ebp]
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  0001f	e8 00 00 00 00	 call	 ??$_Move@PAUReseveEvent@ioBlockEventAgency@@PAU12@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioBlockEventAgency::ReseveEvent *,ioBlockEventAgency::ReseveEvent *>
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

  00027	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN1@erase:

; 1212 : 			}
; 1213 : 		return (_First);

  0002a	8b c7		 mov	 eax, edi
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi

; 1214 : 		}

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@0@Z ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEXXZ ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Tidy
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEXXZ PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN21@Tidy@2

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN21@Tidy@2:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEXXZ ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Tidy
_TEXT	ENDS
PUBLIC	?reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXI@Z ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::reserve
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3_catch:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Ptr$506476 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXI@Z PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXI@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx

; 747  : 		if (max_size() < _Count)

  0000e	81 7d 08 ff ff
	ff 1f		 cmp	 DWORD PTR __Count$[ebp], 536870911 ; 1fffffffH
  00015	76 0b		 jbe	 SHORT $LN5@reserve@2

; 748  : 			_Xlen();	// result too long

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN56@reserve@2:
$LN5@reserve@2:

; 749  : 		else if (capacity() < _Count)

  00022	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00025	2b 06		 sub	 eax, DWORD PTR [esi]
  00027	c1 f8 03	 sar	 eax, 3
  0002a	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0002d	73 65		 jae	 SHORT $LN3@reserve@2

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  0002f	6a 00		 push	 0
  00031	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00034	e8 00 00 00 00	 call	 ??$_Allocate@UReseveEvent@ioBlockEventAgency@@@std@@YAPAUReseveEvent@ioBlockEventAgency@@IPAU12@@Z ; std::_Allocate<ioBlockEventAgency::ReseveEvent>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00039	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0003b	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  0003f	8b d8		 mov	 ebx, eax
  00041	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00044	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00047	52		 push	 edx
  00048	53		 push	 ebx
  00049	50		 push	 eax
  0004a	51		 push	 ecx
  0004b	89 5d ec	 mov	 DWORD PTR __Ptr$506476[ebp], ebx
  0004e	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUReseveEvent@ioBlockEventAgency@@PAU12@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@YAPAUReseveEvent@ioBlockEventAgency@@PAU12@00AAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@@Z ; std::_Uninitialized_move<ioBlockEventAgency::ReseveEvent *,ioBlockEventAgency::ReseveEvent *,std::allocator<ioBlockEventAgency::ReseveEvent> >

; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00053	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00056	8b 06		 mov	 eax, DWORD PTR [esi]
  00058	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  0005c	8b f9		 mov	 edi, ecx
  0005e	2b f8		 sub	 edi, eax
  00060	83 c4 18	 add	 esp, 24			; 00000018H
  00063	c1 ff 03	 sar	 edi, 3
  00066	85 c0		 test	 eax, eax
  00068	74 11		 je	 SHORT $LN48@reserve@2

; 761  : 			if (this->_Myfirst != 0)

  0006a	eb 03		 jmp	 SHORT $LN55@reserve@2

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);

$LL39@reserve@2:
  0006c	83 c0 08	 add	 eax, 8
$LN55@reserve@2:
  0006f	3b c1		 cmp	 eax, ecx
  00071	75 f9		 jne	 SHORT $LL39@reserve@2

; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00073	ff 36		 push	 DWORD PTR [esi]
  00075	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0007a	59		 pop	 ecx
$LN48@reserve@2:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  0007b	8b ce		 mov	 ecx, esi
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00083	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00086	8d 04 c3	 lea	 eax, DWORD PTR [ebx+eax*8]
  00089	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 770  : 			this->_Mylast = _Ptr + _Size;

  0008c	8d 04 fb	 lea	 eax, DWORD PTR [ebx+edi*8]
  0008f	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 771  : 			this->_Myfirst = _Ptr;

  00092	89 1e		 mov	 DWORD PTR [esi], ebx
$LN3@reserve@2:

; 772  : 			}
; 773  : 		}

  00094	e8 00 00 00 00	 call	 __EH_epilog3
  00099	c2 04 00	 ret	 4
__catch$?reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXI@Z$0:

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

  0009c	ff 75 ec	 push	 DWORD PTR __Ptr$506476[ebp]
  0009f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000a4	59		 pop	 ecx

; 757  : 			_RERAISE;

  000a5	6a 00		 push	 0
  000a7	6a 00		 push	 0
  000a9	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN57@reserve@2:
$LN54@reserve@2:
  000ae	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXI@Z ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::reserve
PUBLIC	??0ioBlockEventListener@@QAE@XZ			; ioBlockEventListener::ioBlockEventListener
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockeventagency.cpp
;	COMDAT ??0ioBlockEventListener@@QAE@XZ
_TEXT	SEGMENT
??0ioBlockEventListener@@QAE@XZ PROC			; ioBlockEventListener::ioBlockEventListener, COMDAT
; _this$ = ecx

; 8    : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioBlockEventListener@@6B@

; 9    : 	g_BlockEventAgency.RegisterEventListener( this );

  00009	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_Singleton@?$Singleton@VioBlockEventAgency@@@@1PAVioBlockEventAgency@@A ; Singleton<ioBlockEventAgency>::ms_Singleton
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ?RegisterEventListener@ioBlockEventAgency@@QAEXPAVioBlockEventListener@@@Z ; ioBlockEventAgency::RegisterEventListener

; 10   : }

  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	c3		 ret	 0
??0ioBlockEventListener@@QAE@XZ ENDP			; ioBlockEventListener::ioBlockEventListener
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GioBlockEventListener@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioBlockEventListener@@UAEPAXI@Z PROC		; ioBlockEventListener::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioBlockEventListener@@UAE@XZ ; ioBlockEventListener::~ioBlockEventListener
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@2
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@2:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioBlockEventListener@@UAEPAXI@Z ENDP		; ioBlockEventListener::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE@XZ ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::~vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE@XZ PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::~vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEXXZ ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Tidy
??1?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::~vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXXZ ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T509712 = -4						; size = 4
?clear@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXXZ PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T509712[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@0@Z ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXXZ ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::clear
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEXI@Z ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEXI@Z PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx

; 1292 : 		if (max_size() - _Count < _Size)

  0000d	ba ff ff ff 1f	 mov	 edx, 536870911		; 1fffffffH
  00012	2b 55 08	 sub	 edx, DWORD PTR __Count$[ebp]
  00015	c1 f8 03	 sar	 eax, 3
  00018	3b d0		 cmp	 edx, eax
  0001a	73 0b		 jae	 SHORT $LN4@Reserve@2

; 1293 : 			_Xlen();

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve@2:
$LN4@Reserve@2:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  00027	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0002a	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0002d	2b d1		 sub	 edx, ecx
  0002f	c1 fa 03	 sar	 edx, 3
  00032	3b c2		 cmp	 eax, edx
  00034	76 10		 jbe	 SHORT $LN1@Reserve@2

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  00036	50		 push	 eax
  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IBEII@Z ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Grow_to
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXI@Z ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::reserve
$LN1@Reserve@2:
  00046	5e		 pop	 esi

; 1298 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN20@Reserve@2:
?_Reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEXI@Z ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Reserve
_TEXT	ENDS
PUBLIC	??_7ioBlockEventAgency@@6B@			; ioBlockEventAgency::`vftable'
PUBLIC	??0ioBlockEventAgency@@QAE@XZ			; ioBlockEventAgency::ioBlockEventAgency
PUBLIC	??_R4ioBlockEventAgency@@6B@			; ioBlockEventAgency::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioBlockEventAgency@@@8			; ioBlockEventAgency `RTTI Type Descriptor'
PUBLIC	??_R3ioBlockEventAgency@@8			; ioBlockEventAgency::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioBlockEventAgency@@8			; ioBlockEventAgency::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioBlockEventAgency@@8		; ioBlockEventAgency::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@?$Singleton@VioBlockEventAgency@@@@8 ; Singleton<ioBlockEventAgency>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AV?$Singleton@VioBlockEventAgency@@@@@8	; Singleton<ioBlockEventAgency> `RTTI Type Descriptor'
PUBLIC	??_R3?$Singleton@VioBlockEventAgency@@@@8	; Singleton<ioBlockEventAgency>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$Singleton@VioBlockEventAgency@@@@8	; Singleton<ioBlockEventAgency>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$Singleton@VioBlockEventAgency@@@@8 ; Singleton<ioBlockEventAgency>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_EioBlockEventAgency@@UAEPAXI@Z:PROC		; ioBlockEventAgency::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$Singleton@VioBlockEventAgency@@@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
rdata$r	SEGMENT
??_R1A@?0A@EA@?$Singleton@VioBlockEventAgency@@@@8 DD FLAT:??_R0?AV?$Singleton@VioBlockEventAgency@@@@@8 ; Singleton<ioBlockEventAgency>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioBlockEventAgency@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$Singleton@VioBlockEventAgency@@@@8
rdata$r	SEGMENT
??_R2?$Singleton@VioBlockEventAgency@@@@8 DD FLAT:??_R1A@?0A@EA@?$Singleton@VioBlockEventAgency@@@@8 ; Singleton<ioBlockEventAgency>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$Singleton@VioBlockEventAgency@@@@8
rdata$r	SEGMENT
??_R3?$Singleton@VioBlockEventAgency@@@@8 DD 00H	; Singleton<ioBlockEventAgency>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$Singleton@VioBlockEventAgency@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$Singleton@VioBlockEventAgency@@@@@8
_DATA	SEGMENT
??_R0?AV?$Singleton@VioBlockEventAgency@@@@@8 DD FLAT:??_7type_info@@6B@ ; Singleton<ioBlockEventAgency> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$Singleton@VioBlockEventAgency@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@?$Singleton@VioBlockEventAgency@@@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$Singleton@VioBlockEventAgency@@@@8 DD FLAT:??_R0?AV?$Singleton@VioBlockEventAgency@@@@@8 ; Singleton<ioBlockEventAgency>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioBlockEventAgency@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioBlockEventAgency@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioBlockEventAgency@@8 DD FLAT:??_R0?AVioBlockEventAgency@@@8 ; ioBlockEventAgency::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioBlockEventAgency@@8
rdata$r	ENDS
;	COMDAT ??_R2ioBlockEventAgency@@8
rdata$r	SEGMENT
??_R2ioBlockEventAgency@@8 DD FLAT:??_R1A@?0A@EA@ioBlockEventAgency@@8 ; ioBlockEventAgency::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@?$Singleton@VioBlockEventAgency@@@@8
rdata$r	ENDS
;	COMDAT ??_R3ioBlockEventAgency@@8
rdata$r	SEGMENT
??_R3ioBlockEventAgency@@8 DD 00H			; ioBlockEventAgency::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioBlockEventAgency@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioBlockEventAgency@@@8
_DATA	SEGMENT
??_R0?AVioBlockEventAgency@@@8 DD FLAT:??_7type_info@@6B@ ; ioBlockEventAgency `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioBlockEventAgency@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioBlockEventAgency@@6B@
rdata$r	SEGMENT
??_R4ioBlockEventAgency@@6B@ DD 00H			; ioBlockEventAgency::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioBlockEventAgency@@@8
	DD	FLAT:??_R3ioBlockEventAgency@@8
rdata$r	ENDS
;	COMDAT ??_7ioBlockEventAgency@@6B@
CONST	SEGMENT
??_7ioBlockEventAgency@@6B@ DD FLAT:??_R4ioBlockEventAgency@@6B@ ; ioBlockEventAgency::`vftable'
	DD	FLAT:??_EioBlockEventAgency@@UAEPAXI@Z
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockeventagency.cpp
CONST	ENDS
;	COMDAT ??0ioBlockEventAgency@@QAE@XZ
_TEXT	SEGMENT
??0ioBlockEventAgency@@QAE@XZ PROC			; ioBlockEventAgency::ioBlockEventAgency, COMDAT
; _this$ = ecx

; 22   : {

  00000	8b c1		 mov	 eax, ecx
  00002	a3 00 00 00 00	 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioBlockEventAgency@@@@1PAVioBlockEventAgency@@A, eax ; Singleton<ioBlockEventAgency>::ms_Singleton
  00007	33 c9		 xor	 ecx, ecx
  00009	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ioBlockEventAgency@@6B@
  0000f	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00012	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00015	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  00018	89 48 14	 mov	 DWORD PTR [eax+20], ecx
  0001b	89 48 18	 mov	 DWORD PTR [eax+24], ecx
  0001e	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 23   : }

  00021	c3		 ret	 0
??0ioBlockEventAgency@@QAE@XZ ENDP			; ioBlockEventAgency::ioBlockEventAgency
_TEXT	ENDS
PUBLIC	??1ioBlockEventAgency@@UAE@XZ			; ioBlockEventAgency::~ioBlockEventAgency
EXTRN	__EH_prolog3:PROC
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
xdata$x	SEGMENT
__unwindtable$??1ioBlockEventAgency@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioBlockEventAgency@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ioBlockEventAgency@@UAE@XZ$1
__ehfuncinfo$??1ioBlockEventAgency@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1ioBlockEventAgency@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockeventagency.cpp
xdata$x	ENDS
;	COMDAT ??1ioBlockEventAgency@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioBlockEventAgency@@UAE@XZ PROC			; ioBlockEventAgency::~ioBlockEventAgency, COMDAT
; _this$ = ecx

; 26   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioBlockEventAgency@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioBlockEventAgency@@6B@

; 27   : }

  00017	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  0001a	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00021	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEXXZ ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Tidy
  00026	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00029	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0002d	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@IAEXXZ ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::_Tidy
  00032	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioBlockEventAgency@@@@1PAVioBlockEventAgency@@A, 0 ; Singleton<ioBlockEventAgency>::ms_Singleton
  00039	e8 00 00 00 00	 call	 __EH_epilog3
  0003e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioBlockEventAgency@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioBlockEventAgency@@@@QAE@XZ ; Singleton<ioBlockEventAgency>::~Singleton<ioBlockEventAgency>
__unwindfunclet$??1ioBlockEventAgency@@UAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 04	 add	 ecx, 4
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@PAVioBlockEventListener@@V?$allocator@PAVioBlockEventListener@@@std@@@std@@QAE@XZ ; std::vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >::~vector<ioBlockEventListener *,std::allocator<ioBlockEventListener *> >
__ehhandler$??1ioBlockEventAgency@@UAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioBlockEventAgency@@UAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioBlockEventAgency@@UAE@XZ ENDP			; ioBlockEventAgency::~ioBlockEventAgency
PUBLIC	?ProcessEvent@ioBlockEventAgency@@QAEXXZ	; ioBlockEventAgency::ProcessEvent
; Function compile flags: /Ogsp
;	COMDAT ?ProcessEvent@ioBlockEventAgency@@QAEXXZ
_TEXT	SEGMENT
$T510025 = -4						; size = 4
?ProcessEvent@ioBlockEventAgency@@QAEXXZ PROC		; ioBlockEventAgency::ProcessEvent, COMDAT
; _this$ = ecx

; 83   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b d9		 mov	 ebx, ecx

; 84   : 	for( ReseveEventList::const_iterator iter = m_ReseveEventList.begin(); iter != m_ReseveEventList.end(); ++iter )

  00008	8b 73 14	 mov	 esi, DWORD PTR [ebx+20]
  0000b	57		 push	 edi
  0000c	eb 0f		 jmp	 SHORT $LN52@ProcessEve
$LL14@ProcessEve:

; 85   : 	{	
; 86   : 		const ReseveEvent& Event = *iter;		
; 87   : 		BroadCastEvent( (ioBlockEventListener::EventType)Event.eType, Event.pParam );		

  0000e	ff 76 04	 push	 DWORD PTR [esi+4]
  00011	8b cb		 mov	 ecx, ebx
  00013	ff 36		 push	 DWORD PTR [esi]
  00015	e8 00 00 00 00	 call	 ?BroadCastEvent@ioBlockEventAgency@@QAEXW4EventType@ioBlockEventListener@@PAVioBlockEventParameter@@@Z ; ioBlockEventAgency::BroadCastEvent
  0001a	83 c6 08	 add	 esi, 8
$LN52@ProcessEve:

; 84   : 	for( ReseveEventList::const_iterator iter = m_ReseveEventList.begin(); iter != m_ReseveEventList.end(); ++iter )

  0001d	3b 73 18	 cmp	 esi, DWORD PTR [ebx+24]
  00020	75 ec		 jne	 SHORT $LL14@ProcessEve

; 88   : 	}
; 89   : 	m_ReseveEventList.clear();

  00022	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00025	8b 4b 14	 mov	 ecx, DWORD PTR [ebx+20]
  00028	50		 push	 eax
  00029	51		 push	 ecx
  0002a	8d 45 fc	 lea	 eax, DWORD PTR $T510025[ebp]
  0002d	50		 push	 eax
  0002e	8d 4b 14	 lea	 ecx, DWORD PTR [ebx+20]
  00031	e8 00 00 00 00	 call	 ?erase@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@@2@0@Z ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::erase
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx

; 90   : }

  00039	c9		 leave
  0003a	c3		 ret	 0
?ProcessEvent@ioBlockEventAgency@@QAEXXZ ENDP		; ioBlockEventAgency::ProcessEvent
_TEXT	ENDS
PUBLIC	?push_back@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXABUReseveEvent@ioBlockEventAgency@@@Z ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::push_back
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?push_back@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXABUReseveEvent@ioBlockEventAgency@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXABUReseveEvent@ioBlockEventAgency@@@Z PROC ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f8		 cmp	 edi, eax
  0000f	73 2d		 jae	 SHORT $LN4@push_back@2
  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	3b cf		 cmp	 ecx, edi
  00015	77 27		 ja	 SHORT $LN4@push_back@2

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	2b f9		 sub	 edi, ecx
  00019	c1 ff 03	 sar	 edi, 3

; 980  : 			if (this->_Mylast == this->_Myend)

  0001c	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0001f	75 09		 jne	 SHORT $LN3@push_back@2

; 981  : 				_Reserve(1);

  00021	6a 01		 push	 1
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEXI@Z ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Reserve
$LN3@push_back@2:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  0002a	8b 06		 mov	 eax, DWORD PTR [esi]
  0002c	8d 04 f8	 lea	 eax, DWORD PTR [eax+edi*8]
  0002f	50		 push	 eax
  00030	ff 76 04	 push	 DWORD PTR [esi+4]
  00033	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@AAU34@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@AAU23@@Z ; std::_Cons_val<std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent,ioBlockEventAgency::ReseveEvent &>

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  0003c	eb 1b		 jmp	 SHORT $LN20@push_back@2
$LN4@push_back@2:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  0003e	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  00041	75 09		 jne	 SHORT $LN1@push_back@2

; 991  : 				_Reserve(1);

  00043	6a 01		 push	 1
  00045	8b ce		 mov	 ecx, esi
  00047	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@IAEXI@Z ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::_Reserve
$LN1@push_back@2:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  0004c	57		 push	 edi
  0004d	ff 76 04	 push	 DWORD PTR [esi+4]
  00050	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@UReseveEvent@ioBlockEventAgency@@ABU34@@std@@YAXAAV?$allocator@UReseveEvent@ioBlockEventAgency@@@0@PAUReseveEvent@ioBlockEventAgency@@ABU23@@Z ; std::_Cons_val<std::allocator<ioBlockEventAgency::ReseveEvent>,ioBlockEventAgency::ReseveEvent,ioBlockEventAgency::ReseveEvent const &>
$LN20@push_back@2:
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH

; 996  : 			++this->_Mylast;

  0005c	83 46 04 08	 add	 DWORD PTR [esi+4], 8
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
?push_back@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXABUReseveEvent@ioBlockEventAgency@@@Z ENDP ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::push_back
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GioBlockEventAgency@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioBlockEventAgency@@UAEPAXI@Z PROC			; ioBlockEventAgency::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioBlockEventAgency@@UAE@XZ ; ioBlockEventAgency::~ioBlockEventAgency
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@3
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@3:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioBlockEventAgency@@UAEPAXI@Z ENDP			; ioBlockEventAgency::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?SendEvent@ioBlockEventAgency@@QAEXW4EventType@ioBlockEventListener@@PAVioBlockEventParameter@@@Z ; ioBlockEventAgency::SendEvent
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\housing\ioblockeventagency.cpp
;	COMDAT ?SendEvent@ioBlockEventAgency@@QAEXW4EventType@ioBlockEventListener@@PAVioBlockEventParameter@@@Z
_TEXT	SEGMENT
_Event$506160 = -8					; size = 8
_eType$ = 8						; size = 4
_param$ = 12						; size = 4
?SendEvent@ioBlockEventAgency@@QAEXW4EventType@ioBlockEventListener@@PAVioBlockEventParameter@@@Z PROC ; ioBlockEventAgency::SendEvent, COMDAT
; _this$ = ecx

; 72   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	53		 push	 ebx

; 73   : 	if( !IsEvent( eType, param ) )

  00006	8b 5d 08	 mov	 ebx, DWORD PTR _eType$[ebp]
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR _param$[ebp]
  0000e	57		 push	 edi
  0000f	53		 push	 ebx
  00010	8b f1		 mov	 esi, ecx
  00012	e8 00 00 00 00	 call	 ?IsEvent@ioBlockEventAgency@@QAE_NW4EventType@ioBlockEventListener@@PAVioBlockEventParameter@@@Z ; ioBlockEventAgency::IsEvent
  00017	84 c0		 test	 al, al
  00019	75 12		 jne	 SHORT $LN1@SendEvent

; 74   : 	{
; 75   : 		ReseveEvent Event;
; 76   : 		Event.eType		= eType;
; 77   : 		Event.pParam	= param;
; 78   : 		m_ReseveEventList.push_back( Event );

  0001b	8d 45 f8	 lea	 eax, DWORD PTR _Event$506160[ebp]
  0001e	50		 push	 eax
  0001f	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00022	89 5d f8	 mov	 DWORD PTR _Event$506160[ebp], ebx
  00025	89 7d fc	 mov	 DWORD PTR _Event$506160[ebp+4], edi
  00028	e8 00 00 00 00	 call	 ?push_back@?$vector@UReseveEvent@ioBlockEventAgency@@V?$allocator@UReseveEvent@ioBlockEventAgency@@@std@@@std@@QAEXABUReseveEvent@ioBlockEventAgency@@@Z ; std::vector<ioBlockEventAgency::ReseveEvent,std::allocator<ioBlockEventAgency::ReseveEvent> >::push_back
$LN1@SendEvent:
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx

; 79   : 	}
; 80   : }

  00030	c9		 leave
  00031	c2 08 00	 ret	 8
?SendEvent@ioBlockEventAgency@@QAEXW4EventType@ioBlockEventListener@@PAVioBlockEventParameter@@@Z ENDP ; ioBlockEventAgency::SendEvent
_TEXT	ENDS
END
