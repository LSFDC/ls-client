; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\GUI\ioExMedalSlotReleaseWnd.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_7ioExMedalSlotReleaseWnd@@6B@		; ioExMedalSlotReleaseWnd::`vftable'
PUBLIC	??0ioExMedalSlotReleaseWnd@@QAE@XZ		; ioExMedalSlotReleaseWnd::ioExMedalSlotReleaseWnd
PUBLIC	??_R4ioExMedalSlotReleaseWnd@@6B@		; ioExMedalSlotReleaseWnd::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioExMedalSlotReleaseWnd@@@8		; ioExMedalSlotReleaseWnd `RTTI Type Descriptor'
PUBLIC	??_R3ioExMedalSlotReleaseWnd@@8			; ioExMedalSlotReleaseWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioExMedalSlotReleaseWnd@@8			; ioExMedalSlotReleaseWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioExMedalSlotReleaseWnd@@8	; ioExMedalSlotReleaseWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioMovingWnd@@8			; ioMovingWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioMovingWnd@@@8				; ioMovingWnd `RTTI Type Descriptor'
PUBLIC	??_R3ioMovingWnd@@8				; ioMovingWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioMovingWnd@@8				; ioMovingWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioWnd@@8				; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioWnd@@@8				; ioWnd `RTTI Type Descriptor'
PUBLIC	??_R3ioWnd@@8					; ioWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioWnd@@8					; ioWnd::`RTTI Base Class Array'
PUBLIC	?AddRenderImage@ioExMedalSlotReleaseWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z ; ioExMedalSlotReleaseWnd::AddRenderImage
PUBLIC	?OnRender@ioExMedalSlotReleaseWnd@@MAEXXZ	; ioExMedalSlotReleaseWnd::OnRender
PUBLIC	?OnProcess@ioExMedalSlotReleaseWnd@@MAEXM@Z	; ioExMedalSlotReleaseWnd::OnProcess
PUBLIC	?iwm_command@ioExMedalSlotReleaseWnd@@UAEXPAVioWnd@@HK@Z ; ioExMedalSlotReleaseWnd::iwm_command
PUBLIC	?iwm_show@ioExMedalSlotReleaseWnd@@UAEXXZ	; ioExMedalSlotReleaseWnd::iwm_show
PUBLIC	?iwm_hide@ioExMedalSlotReleaseWnd@@UAEXXZ	; ioExMedalSlotReleaseWnd::iwm_hide
PUBLIC	?iwm_esc@ioExMedalSlotReleaseWnd@@UAE_NXZ	; ioExMedalSlotReleaseWnd::iwm_esc
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
EXTRN	__imp_??1ioMovingWnd@@UAE@XZ:PROC
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
EXTRN	__imp_??0ioMovingWnd@@QAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z:PROC ; ioWnd::AddRenderFrame
EXTRN	?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z:PROC ; ioWnd::AddTooltipHelp
EXTRN	?ParseExtraInfo@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC ; ioWnd::ParseExtraInfo
EXTRN	?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC ; ioWnd::AddNamedRenderImage
EXTRN	?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z:PROC ; ioWnd::RemoveNamedRenderImage
EXTRN	?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z:PROC ; ioWnd::GetNamedRenderImage
EXTRN	?SetWindowAlpha@ioWnd@@UAEXH@Z:PROC		; ioWnd::SetWindowAlpha
EXTRN	?SetActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetActive
EXTRN	?SetInActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetInActive
EXTRN	?ClearElementImageList@ioWnd@@UAEXXZ:PROC	; ioWnd::ClearElementImageList
EXTRN	?SetSize@ioWnd@@UAEXHH@Z:PROC			; ioWnd::SetSize
EXTRN	?SetPositionToDefault@ioMovingWnd@@UAEXHH_N0@Z:PROC ; ioMovingWnd::SetPositionToDefault
EXTRN	?IsNeedProcess@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsNeedProcess
EXTRN	?IsCanMouseReaction@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsCanMouseReaction
EXTRN	?AddChild@ioWnd@@UAEXPAV1@@Z:PROC		; ioWnd::AddChild
EXTRN	?DeleteChild@ioWnd@@UAEXK@Z:PROC		; ioWnd::DeleteChild
EXTRN	?DeleteAllChild@ioWnd@@UAEXXZ:PROC		; ioWnd::DeleteAllChild
EXTRN	?OnRenderShowAndHide@ioWnd@@MAE_NXZ:PROC	; ioWnd::OnRenderShowAndHide
EXTRN	?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z:PROC ; ioWnd::OnRenderShowAndHideByDefault
EXTRN	?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByTop
EXTRN	?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByDown
EXTRN	?OnRenderAfterChild@ioWnd@@MAEXXZ:PROC		; ioWnd::OnRenderAfterChild
EXTRN	?OnMouseProcess@ioMovingWnd@@MAEXABVioMouse@@@Z:PROC ; ioMovingWnd::OnMouseProcess
EXTRN	?CheckFrameReSize@ioWnd@@MAEXHHHH@Z:PROC	; ioWnd::CheckFrameReSize
EXTRN	?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z:PROC ; ioWnd::RenderImageList
EXTRN	?iwm_create@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_create
EXTRN	?iwm_destroy@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_destroy
EXTRN	?iwm_lbuttondown@ioMovingWnd@@UAEXABVioMouse@@@Z:PROC ; ioMovingWnd::iwm_lbuttondown
EXTRN	?iwm_lbuttonup@ioMovingWnd@@UAEXABVioMouse@@@Z:PROC ; ioMovingWnd::iwm_lbuttonup
EXTRN	?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z:PROC ; ioWnd::iwm_lbuttonDBLCLK
EXTRN	?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_rbuttondown
EXTRN	?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_rbuttonup
EXTRN	?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mouseover
EXTRN	?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mousemove
EXTRN	?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mouseleave
EXTRN	?iwm_vscroll@ioWnd@@UAEXKH@Z:PROC		; ioWnd::iwm_vscroll
EXTRN	?iwm_wheel@ioWnd@@UAEXH@Z:PROC			; ioWnd::iwm_wheel
EXTRN	?iwm_spacebar@ioWnd@@UAE_NXZ:PROC		; ioWnd::iwm_spacebar
EXTRN	?iwm_gototop@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_gototop
EXTRN	?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragenter
EXTRN	?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragover
EXTRN	?iwm_dragleave@ioWnd@@UAEXXZ:PROC		; ioWnd::iwm_dragleave
EXTRN	?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z:PROC ; ioWnd::iwm_dropitem
EXTRN	?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z:PROC ; ioWnd::iwm_dropdone
EXTRN	?IsEXType@ioWnd@@UBE_NXZ:PROC			; ioWnd::IsEXType
EXTRN	?GetWndType@ioWnd@@UBEKXZ:PROC			; ioWnd::GetWndType
EXTRN	?RenderWnd@ioWnd@@UAEXXZ:PROC			; ioWnd::RenderWnd
EXTRN	?SetIDEX@ioWnd@@UAEXAAK_N@Z:PROC		; ioWnd::SetIDEX
EXTRN	?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC	; ioWnd::ParseXML
EXTRN	?GetHeaderFileName@ioWnd@@UAEPBDXZ:PROC		; ioWnd::GetHeaderFileName
EXTRN	?GetTemplateName@ioWnd@@UAEPBDXZ:PROC		; ioWnd::GetTemplateName
EXTRN	?GetDefClassName@ioWnd@@UBEPBDXZ:PROC		; ioWnd::GetDefClassName
EXTRN	?_Clone@ioWnd@@UAEPAV1@XZ:PROC			; ioWnd::_Clone
EXTRN	?Copy@ioWnd@@UAEXPAV1@@Z:PROC			; ioWnd::Copy
EXTRN	?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z:PROC	; ioWnd::Save
EXTRN	?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC ; ioWnd::SetSaveData
EXTRN	?SetPosX@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosX
EXTRN	?SetPosY@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosY
EXTRN	?SetWidth@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetWidth
EXTRN	?SetHeight@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetHeight
EXTRN	?GetNumFixedRenderFrame@ioWnd@@UBEHXZ:PROC	; ioWnd::GetNumFixedRenderFrame
EXTRN	?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z:PROC	; ioWnd::GetFixedRenderFrameType
EXTRN	?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioWnd::GetRenderFrame
EXTRN	?GetNumFixedRenderImage@ioWnd@@UBEHXZ:PROC	; ioWnd::GetNumFixedRenderImage
EXTRN	?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z:PROC	; ioWnd::GetFixedRenderImageType
EXTRN	?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioWnd::GetRenderImage
EXTRN	?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z:PROC ; ioWnd::AddEffect
EXTRN	?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z:PROC ; ioWnd::GetEffect
EXTRN	??_EioExMedalSlotReleaseWnd@@UAEPAXI@Z:PROC	; ioExMedalSlotReleaseWnd::`vector deleting destructor'
;	COMDAT ??_R2ioWnd@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\ioexmedalslotreleasewnd.cpp
rdata$r	SEGMENT
??_R2ioWnd@@8 DD FLAT:??_R1A@?0A@EA@ioWnd@@8		; ioWnd::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioWnd@@8
rdata$r	SEGMENT
??_R3ioWnd@@8 DD 00H					; ioWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioWnd@@@8
_DATA	SEGMENT
??_R0?AVioWnd@@@8 DD FLAT:??_7type_info@@6B@		; ioWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioWnd@@8 DD FLAT:??_R0?AVioWnd@@@8	; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2ioMovingWnd@@8
rdata$r	SEGMENT
??_R2ioMovingWnd@@8 DD FLAT:??_R1A@?0A@EA@ioMovingWnd@@8 ; ioMovingWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3ioMovingWnd@@8
rdata$r	SEGMENT
??_R3ioMovingWnd@@8 DD 00H				; ioMovingWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioMovingWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioMovingWnd@@@8
_DATA	SEGMENT
??_R0?AVioMovingWnd@@@8 DD FLAT:??_7type_info@@6B@	; ioMovingWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioMovingWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioMovingWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioMovingWnd@@8 DD FLAT:??_R0?AVioMovingWnd@@@8 ; ioMovingWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioMovingWnd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioExMedalSlotReleaseWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioExMedalSlotReleaseWnd@@8 DD FLAT:??_R0?AVioExMedalSlotReleaseWnd@@@8 ; ioExMedalSlotReleaseWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioExMedalSlotReleaseWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2ioExMedalSlotReleaseWnd@@8
rdata$r	SEGMENT
??_R2ioExMedalSlotReleaseWnd@@8 DD FLAT:??_R1A@?0A@EA@ioExMedalSlotReleaseWnd@@8 ; ioExMedalSlotReleaseWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioMovingWnd@@8
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3ioExMedalSlotReleaseWnd@@8
rdata$r	SEGMENT
??_R3ioExMedalSlotReleaseWnd@@8 DD 00H			; ioExMedalSlotReleaseWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ioExMedalSlotReleaseWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioExMedalSlotReleaseWnd@@@8
_DATA	SEGMENT
??_R0?AVioExMedalSlotReleaseWnd@@@8 DD FLAT:??_7type_info@@6B@ ; ioExMedalSlotReleaseWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioExMedalSlotReleaseWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioExMedalSlotReleaseWnd@@6B@
rdata$r	SEGMENT
??_R4ioExMedalSlotReleaseWnd@@6B@ DD 00H		; ioExMedalSlotReleaseWnd::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioExMedalSlotReleaseWnd@@@8
	DD	FLAT:??_R3ioExMedalSlotReleaseWnd@@8
rdata$r	ENDS
;	COMDAT ??_7ioExMedalSlotReleaseWnd@@6B@
CONST	SEGMENT
??_7ioExMedalSlotReleaseWnd@@6B@ DD FLAT:??_R4ioExMedalSlotReleaseWnd@@6B@ ; ioExMedalSlotReleaseWnd::`vftable'
	DD	FLAT:?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
	DD	FLAT:?AddRenderImage@ioExMedalSlotReleaseWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z
	DD	FLAT:?ParseExtraInfo@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z
	DD	FLAT:?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z
	DD	FLAT:?SetWindowAlpha@ioWnd@@UAEXH@Z
	DD	FLAT:?SetActive@ioWnd@@UAEXXZ
	DD	FLAT:?SetInActive@ioWnd@@UAEXXZ
	DD	FLAT:?ClearElementImageList@ioWnd@@UAEXXZ
	DD	FLAT:?SetSize@ioWnd@@UAEXHH@Z
	DD	FLAT:?SetPositionToDefault@ioMovingWnd@@UAEXHH_N0@Z
	DD	FLAT:?IsNeedProcess@ioWnd@@UBE_NXZ
	DD	FLAT:?IsCanMouseReaction@ioWnd@@UBE_NXZ
	DD	FLAT:?AddChild@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?DeleteChild@ioWnd@@UAEXK@Z
	DD	FLAT:?DeleteAllChild@ioWnd@@UAEXXZ
	DD	FLAT:?OnRenderShowAndHide@ioWnd@@MAE_NXZ
	DD	FLAT:?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRender@ioExMedalSlotReleaseWnd@@MAEXXZ
	DD	FLAT:?OnRenderAfterChild@ioWnd@@MAEXXZ
	DD	FLAT:?OnProcess@ioExMedalSlotReleaseWnd@@MAEXM@Z
	DD	FLAT:?OnMouseProcess@ioMovingWnd@@MAEXABVioMouse@@@Z
	DD	FLAT:?CheckFrameReSize@ioWnd@@MAEXHHHH@Z
	DD	FLAT:?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z
	DD	FLAT:?iwm_create@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_destroy@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_lbuttondown@ioMovingWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonup@ioMovingWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_command@ioExMedalSlotReleaseWnd@@UAEXPAVioWnd@@HK@Z
	DD	FLAT:?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_vscroll@ioWnd@@UAEXKH@Z
	DD	FLAT:?iwm_wheel@ioWnd@@UAEXH@Z
	DD	FLAT:?iwm_show@ioExMedalSlotReleaseWnd@@UAEXXZ
	DD	FLAT:?iwm_hide@ioExMedalSlotReleaseWnd@@UAEXXZ
	DD	FLAT:?iwm_esc@ioExMedalSlotReleaseWnd@@UAE_NXZ
	DD	FLAT:?iwm_spacebar@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_gototop@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragleave@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z
	DD	FLAT:?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z
	DD	FLAT:?IsEXType@ioWnd@@UBE_NXZ
	DD	FLAT:?GetWndType@ioWnd@@UBEKXZ
	DD	FLAT:?RenderWnd@ioWnd@@UAEXXZ
	DD	FLAT:?SetIDEX@ioWnd@@UAEXAAK_N@Z
	DD	FLAT:?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?GetHeaderFileName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetTemplateName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetDefClassName@ioWnd@@UBEPBDXZ
	DD	FLAT:?_Clone@ioWnd@@UAEPAV1@XZ
	DD	FLAT:?Copy@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z
	DD	FLAT:?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?SetPosX@ioWnd@@UAEXH@Z
	DD	FLAT:?SetPosY@ioWnd@@UAEXH@Z
	DD	FLAT:?SetWidth@ioWnd@@UAEXH@Z
	DD	FLAT:?SetHeight@ioWnd@@UAEXH@Z
	DD	FLAT:?GetNumFixedRenderFrame@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?GetNumFixedRenderImage@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z
	DD	FLAT:?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z
	DD	FLAT:??_EioExMedalSlotReleaseWnd@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ioExMedalSlotReleaseWnd@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioExMedalSlotReleaseWnd@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ioExMedalSlotReleaseWnd@@QAE@XZ$1
__ehfuncinfo$??0ioExMedalSlotReleaseWnd@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0ioExMedalSlotReleaseWnd@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0ioExMedalSlotReleaseWnd@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ioExMedalSlotReleaseWnd@@QAE@XZ PROC			; ioExMedalSlotReleaseWnd::ioExMedalSlotReleaseWnd, COMDAT
; _this$ = ecx

; 32   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioExMedalSlotReleaseWnd@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioMovingWnd@@QAE@XZ
  00017	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??0ioHashString@@QAE@XZ
  0001d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00021	8d 8e 98 01 00
	00		 lea	 ecx, DWORD PTR [esi+408]
  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioExMedalSlotReleaseWnd@@6B@
  0002d	ff d7		 call	 edi
  0002f	8d 8e a8 01 00
	00		 lea	 ecx, DWORD PTR [esi+424]
  00035	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00039	ff d7		 call	 edi

; 33   : 	m_pIconBack		 = NULL;

  0003b	83 a6 90 01 00
	00 00		 and	 DWORD PTR [esi+400], 0

; 34   : 	m_pExtraItemIcon = NULL;

  00042	83 a6 94 01 00
	00 00		 and	 DWORD PTR [esi+404], 0

; 35   : 	
; 36   : 	m_dwHideDelayTime = 0;

  00049	83 a6 bc 01 00
	00 00		 and	 DWORD PTR [esi+444], 0

; 37   : }

  00050	8b c6		 mov	 eax, esi
  00052	e8 00 00 00 00	 call	 __EH_epilog3
  00057	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioExMedalSlotReleaseWnd@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioMovingWnd@@UAE@XZ
__unwindfunclet$??0ioExMedalSlotReleaseWnd@@QAE@XZ$1:
  00009	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	81 c1 98 01 00
	00		 add	 ecx, 408		; 00000198H
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??0ioExMedalSlotReleaseWnd@@QAE@XZ:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioExMedalSlotReleaseWnd@@QAE@XZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioExMedalSlotReleaseWnd@@QAE@XZ ENDP			; ioExMedalSlotReleaseWnd::ioExMedalSlotReleaseWnd
PUBLIC	??1ioExMedalSlotReleaseWnd@@UAE@XZ		; ioExMedalSlotReleaseWnd::~ioExMedalSlotReleaseWnd
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ioExMedalSlotReleaseWnd@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioExMedalSlotReleaseWnd@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ioExMedalSlotReleaseWnd@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1ioExMedalSlotReleaseWnd@@UAE@XZ$2
__ehfuncinfo$??1ioExMedalSlotReleaseWnd@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1ioExMedalSlotReleaseWnd@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1ioExMedalSlotReleaseWnd@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioExMedalSlotReleaseWnd@@UAE@XZ PROC			; ioExMedalSlotReleaseWnd::~ioExMedalSlotReleaseWnd, COMDAT
; _this$ = ecx

; 40   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioExMedalSlotReleaseWnd@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioExMedalSlotReleaseWnd@@6B@

; 41   : 	SAFEDELETE( m_pIconBack );

  00017	8b 8e 90 01 00
	00		 mov	 ecx, DWORD PTR [esi+400]
  0001d	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00024	85 c9		 test	 ecx, ecx
  00026	74 0e		 je	 SHORT $LN2@ioExMedalS
  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	6a 01		 push	 1
  0002c	ff 50 40	 call	 DWORD PTR [eax+64]
  0002f	83 a6 90 01 00
	00 00		 and	 DWORD PTR [esi+400], 0
$LN2@ioExMedalS:

; 42   : 	SAFEDELETE( m_pExtraItemIcon );

  00036	8b 8e 94 01 00
	00		 mov	 ecx, DWORD PTR [esi+404]
  0003c	85 c9		 test	 ecx, ecx
  0003e	74 0e		 je	 SHORT $LN1@ioExMedalS
  00040	8b 01		 mov	 eax, DWORD PTR [ecx]
  00042	6a 01		 push	 1
  00044	ff 50 40	 call	 DWORD PTR [eax+64]
  00047	83 a6 94 01 00
	00 00		 and	 DWORD PTR [esi+404], 0
$LN1@ioExMedalS:

; 43   : }

  0004e	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00054	8d 8e a8 01 00
	00		 lea	 ecx, DWORD PTR [esi+424]
  0005a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0005e	ff d7		 call	 edi
  00060	8d 8e 98 01 00
	00		 lea	 ecx, DWORD PTR [esi+408]
  00066	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0006a	ff d7		 call	 edi
  0006c	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00070	8b ce		 mov	 ecx, esi
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioMovingWnd@@UAE@XZ
  00078	e8 00 00 00 00	 call	 __EH_epilog3
  0007d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioExMedalSlotReleaseWnd@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioMovingWnd@@UAE@XZ
__unwindfunclet$??1ioExMedalSlotReleaseWnd@@UAE@XZ$1:
  00009	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	81 c1 98 01 00
	00		 add	 ecx, 408		; 00000198H
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??1ioExMedalSlotReleaseWnd@@UAE@XZ$2:
  00018	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	81 c1 a8 01 00
	00		 add	 ecx, 424		; 000001a8H
  00021	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??1ioExMedalSlotReleaseWnd@@UAE@XZ:
  00027	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002e	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00031	33 c8		 xor	 ecx, eax
  00033	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00038	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioExMedalSlotReleaseWnd@@UAE@XZ
  0003d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioExMedalSlotReleaseWnd@@UAE@XZ ENDP			; ioExMedalSlotReleaseWnd::~ioExMedalSlotReleaseWnd
PUBLIC	?return100@@YAIXZ				; return100
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
;	COMDAT ?return100@@YAIXZ
_TEXT	SEGMENT
?return100@@YAIXZ PROC					; return100, COMDAT

; 25   : 	__forceinline unsigned int return100() { __asm mov eax, 100 };

  00000	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  00005	c3		 ret	 0
?return100@@YAIXZ ENDP					; return100
_TEXT	ENDS
PUBLIC	__real@3f266666
PUBLIC	??_C@_0CC@PPMNNCLG@ioExMedalSlotReleaseWnd?3?3OnRende@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
EXTRN	__imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ:PROC
EXTRN	__imp_?PrintText@ioFontManager@@QAEXMMMPBDH@Z:PROC
EXTRN	__imp_?PrintText@ioFontManager@@QAEXMMMPBD0@Z:PROC
EXTRN	__imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z:PROC
EXTRN	__imp_?GetSingleton@ioStringManager@@SAAAV1@XZ:PROC
EXTRN	__imp_?c_str@ioHashString@@QBEPBDXZ:PROC
EXTRN	__imp_?SetTextColor@ioFontManager@@QAEXK@Z:PROC
EXTRN	__imp_?SetBkColor@ioFontManager@@QAEXHHH@Z:PROC
EXTRN	__imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z:PROC
EXTRN	__imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z:PROC
EXTRN	__imp_?GetSingleton@ioFontManager@@SAAAV1@XZ:PROC
EXTRN	__imp_?GetDerivedPosY@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?GetDerivedPosX@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?OnRender@ioWnd@@MAEXXZ:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@3f266666
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\ioexmedalslotreleasewnd.cpp
CONST	SEGMENT
__real@3f266666 DD 03f266666r			; 0.65
CONST	ENDS
;	COMDAT ??_C@_0CC@PPMNNCLG@ioExMedalSlotReleaseWnd?3?3OnRende@
CONST	SEGMENT
??_C@_0CC@PPMNNCLG@ioExMedalSlotReleaseWnd?3?3OnRende@ DB 'ioExMedalSlotR'
	DB	'eleaseWnd::OnRender', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?OnRender@ioExMedalSlotReleaseWnd@@MAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv279 = -8						; size = 4
_iXPos$ = -8						; size = 4
_iYPos$ = -4						; size = 4
?OnRender@ioExMedalSlotReleaseWnd@@MAEXXZ PROC		; ioExMedalSlotReleaseWnd::OnRender, COMDAT
; _this$ = ecx

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b d9		 mov	 ebx, ecx
  0000a	57		 push	 edi
  0000b	89 5d f4	 mov	 DWORD PTR _this$[ebp], ebx

; 74   : 	ioWnd::OnRender();

  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?OnRender@ioWnd@@MAEXXZ

; 75   : 
; 76   : 	int iXPos = GetDerivedPosX();

  00014	8b cb		 mov	 ecx, ebx
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosX@ioWnd@@QBEHXZ
  0001c	8b f0		 mov	 esi, eax

; 77   : 	int iYPos = GetDerivedPosY();

  0001e	8b cb		 mov	 ecx, ebx
  00020	89 75 f8	 mov	 DWORD PTR _iXPos$[ebp], esi
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosY@ioWnd@@QBEHXZ

; 78   : 
; 79   : 	if( m_pIconBack )

  00029	33 ff		 xor	 edi, edi
  0002b	89 45 fc	 mov	 DWORD PTR _iYPos$[ebp], eax
  0002e	39 bb 90 01 00
	00		 cmp	 DWORD PTR [ebx+400], edi
  00034	74 2d		 je	 SHORT $LN2@OnRender

; 80   : 		m_pIconBack->Render( iXPos, iYPos, UI_RENDER_MULTIPLY );

  00036	66 0f 6e 45 fc	 movd	 xmm0, DWORD PTR _iYPos$[ebp]
  0003b	8b 83 90 01 00
	00		 mov	 eax, DWORD PTR [ebx+400]
  00041	8b 10		 mov	 edx, DWORD PTR [eax]
  00043	57		 push	 edi
  00044	57		 push	 edi
  00045	57		 push	 edi
  00046	6a 08		 push	 8
  00048	51		 push	 ecx
  00049	51		 push	 ecx
  0004a	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0004d	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00053	0f 57 c0	 xorps	 xmm0, xmm0
  00056	f3 0f 2a c6	 cvtsi2ss xmm0, esi
  0005a	8b c8		 mov	 ecx, eax
  0005c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00061	ff 12		 call	 DWORD PTR [edx]
$LN2@OnRender:

; 81   : 	if( m_pExtraItemIcon )

  00063	39 bb 94 01 00
	00		 cmp	 DWORD PTR [ebx+404], edi
  00069	74 32		 je	 SHORT $LN1@OnRender

; 82   : 	{
; 83   : 		m_pExtraItemIcon->Render( iXPos + 103, iYPos + 98 );

  0006b	8b 8b 94 01 00
	00		 mov	 ecx, DWORD PTR [ebx+404]
  00071	8b 55 fc	 mov	 edx, DWORD PTR _iYPos$[ebp]
  00074	8b 01		 mov	 eax, DWORD PTR [ecx]
  00076	57		 push	 edi
  00077	57		 push	 edi
  00078	57		 push	 edi
  00079	57		 push	 edi
  0007a	0f 57 c0	 xorps	 xmm0, xmm0
  0007d	51		 push	 ecx
  0007e	83 c2 62	 add	 edx, 98			; 00000062H
  00081	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00085	51		 push	 ecx
  00086	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0008c	83 c6 67	 add	 esi, 103		; 00000067H
  0008f	0f 57 c0	 xorps	 xmm0, xmm0
  00092	f3 0f 2a c6	 cvtsi2ss xmm0, esi
  00096	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009b	ff 10		 call	 DWORD PTR [eax]
$LN1@OnRender:

; 84   : 	}
; 85   : 
; 86   : 	g_FontMgr.SetTextStyle( TS_NORMAL );

  0009d	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?GetSingleton@ioFontManager@@SAAAV1@XZ
  000a3	57		 push	 edi
  000a4	ff d6		 call	 esi
  000a6	8b c8		 mov	 ecx, eax
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z

; 87   : 	g_FontMgr.SetAlignType( TAT_CENTER );

  000ae	6a 01		 push	 1
  000b0	ff d6		 call	 esi
  000b2	8b c8		 mov	 ecx, eax
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 88   : 	g_FontMgr.SetBkColor( 0, 0, 0 );

  000ba	57		 push	 edi
  000bb	57		 push	 edi
  000bc	57		 push	 edi
  000bd	ff d6		 call	 esi
  000bf	8b c8		 mov	 ecx, eax
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetBkColor@ioFontManager@@QAEXHHH@Z

; 89   : 	g_FontMgr.SetTextColor( TCT_DEFAULT_DARKGRAY );

  000c7	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  000cc	ff d6		 call	 esi
  000ce	8b c8		 mov	 ecx, eax
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 90   : 	g_FontMgr.PrintText( iXPos + 103, iYPos + 144, FONT_SIZE_13, STR(1), m_szClassName.c_str() ); 

  000d6	8b 45 f8	 mov	 eax, DWORD PTR _iXPos$[ebp]
  000d9	83 c0 67	 add	 eax, 103		; 00000067H
  000dc	0f 57 c0	 xorps	 xmm0, xmm0
  000df	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000e3	8d 8b a8 01 00
	00		 lea	 ecx, DWORD PTR [ebx+424]
  000e9	f3 0f 11 45 f8	 movss	 DWORD PTR tv279[ebp], xmm0
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  000f4	50		 push	 eax
  000f5	57		 push	 edi
  000f6	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetSingleton@ioStringManager@@SAAAV1@XZ
  000fc	6a 01		 push	 1
  000fe	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00103	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@PPMNNCLG@ioExMedalSlotReleaseWnd?3?3OnRende@
  00108	ff d7		 call	 edi
  0010a	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  00110	8b c8		 mov	 ecx, eax
  00112	ff d3		 call	 ebx
  00114	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  0011c	50		 push	 eax
  0011d	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  00120	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00123	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00129	05 90 00 00 00	 add	 eax, 144		; 00000090H
  0012e	0f 57 c0	 xorps	 xmm0, xmm0
  00131	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00135	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0013b	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv279[ebp]
  00140	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00145	ff d6		 call	 esi
  00147	8b c8		 mov	 ecx, eax
  00149	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAEXMMMPBD0@Z

; 91   : 	g_FontMgr.PrintText( iXPos + 103, iYPos + 162, FONT_SIZE_13, STR(2), m_iSlotLevel );

  0014f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00152	ff b0 b8 01 00
	00		 push	 DWORD PTR [eax+440]
  00158	6a 00		 push	 0
  0015a	6a 02		 push	 2
  0015c	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00161	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@PPMNNCLG@ioExMedalSlotReleaseWnd?3?3OnRende@
  00166	ff d7		 call	 edi
  00168	8b c8		 mov	 ecx, eax
  0016a	ff d3		 call	 ebx
  0016c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  00174	50		 push	 eax
  00175	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  00178	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0017b	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00181	05 a2 00 00 00	 add	 eax, 162		; 000000a2H
  00186	0f 57 c0	 xorps	 xmm0, xmm0
  00189	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0018d	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00193	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv279[ebp]
  00198	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019d	ff d6		 call	 esi
  0019f	8b c8		 mov	 ecx, eax
  001a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAEXMMMPBDH@Z

; 92   : 	g_FontMgr.SetTextColor( TCT_DEFAULT_GRAY );

  001a7	68 6e 6e 6e ff	 push	 -9539986		; ff6e6e6eH
  001ac	ff d6		 call	 esi
  001ae	8b c8		 mov	 ecx, eax
  001b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 93   : 	g_FontMgr.PrintText( iXPos + 103, iYPos + 180, FONT_SIZE_13, STR(3) );

  001b6	6a 00		 push	 0
  001b8	6a 03		 push	 3
  001ba	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  001bf	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@PPMNNCLG@ioExMedalSlotReleaseWnd?3?3OnRende@
  001c4	ff d7		 call	 edi
  001c6	8b c8		 mov	 ecx, eax
  001c8	ff d3		 call	 ebx
  001ca	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  001d2	50		 push	 eax
  001d3	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  001d6	83 ec 0c	 sub	 esp, 12			; 0000000cH
  001d9	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  001df	05 b4 00 00 00	 add	 eax, 180		; 000000b4H
  001e4	0f 57 c0	 xorps	 xmm0, xmm0
  001e7	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  001eb	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  001f1	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv279[ebp]
  001f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001fb	ff d6		 call	 esi
  001fd	50		 push	 eax
  001fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  00204	83 c4 14	 add	 esp, 20			; 00000014H
  00207	5f		 pop	 edi
  00208	5e		 pop	 esi
  00209	5b		 pop	 ebx

; 94   : }

  0020a	c9		 leave
  0020b	c3		 ret	 0
?OnRender@ioExMedalSlotReleaseWnd@@MAEXXZ ENDP		; ioExMedalSlotReleaseWnd::OnRender
_TEXT	ENDS
EXTRN	__imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z:PROC
EXTRN	__imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ:PROC
EXTRN	?GetFirstDeleteExMedalSlot@ioMyInfo@@QAEXAAVioHashString@@0AAH@Z:PROC ; ioMyInfo::GetFirstDeleteExMedalSlot
EXTRN	?GetSingleton@ioMyInfo@@SAAAV1@XZ:PROC		; ioMyInfo::GetSingleton
EXTRN	__imp_?Clear@ioHashString@@QAEXXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?iwm_show@ioExMedalSlotReleaseWnd@@UAEXXZ
_TEXT	SEGMENT
?iwm_show@ioExMedalSlotReleaseWnd@@UAEXXZ PROC		; ioExMedalSlotReleaseWnd::iwm_show, COMDAT
; _this$ = ecx

; 97   : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 98   : 	SAFEDELETE( m_pExtraItemIcon );

  00004	8b 8e 94 01 00
	00		 mov	 ecx, DWORD PTR [esi+404]
  0000a	57		 push	 edi
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 0e		 je	 SHORT $LN1@iwm_show
  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	6a 01		 push	 1
  00013	ff 50 40	 call	 DWORD PTR [eax+64]
  00016	83 a6 94 01 00
	00 00		 and	 DWORD PTR [esi+404], 0
$LN1@iwm_show:

; 99   : 	m_szClassName.Clear();

  0001d	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?Clear@ioHashString@@QAEXXZ
  00023	8d 8e a8 01 00
	00		 lea	 ecx, DWORD PTR [esi+424]
  00029	ff d7		 call	 edi

; 100  : 	m_szIconName.Clear();

  0002b	8d 9e 98 01 00
	00		 lea	 ebx, DWORD PTR [esi+408]
  00031	8b cb		 mov	 ecx, ebx
  00033	ff d7		 call	 edi

; 101  : 	m_iSlotLevel = 0;

  00035	8d 86 b8 01 00
	00		 lea	 eax, DWORD PTR [esi+440]
  0003b	83 20 00	 and	 DWORD PTR [eax], 0

; 102  : 
; 103  : 	g_MyInfo.GetFirstDeleteExMedalSlot( m_szIconName, m_szClassName, m_iSlotLevel );

  0003e	50		 push	 eax
  0003f	8d 86 a8 01 00
	00		 lea	 eax, DWORD PTR [esi+424]
  00045	50		 push	 eax
  00046	53		 push	 ebx
  00047	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  0004c	8b c8		 mov	 ecx, eax
  0004e	e8 00 00 00 00	 call	 ?GetFirstDeleteExMedalSlot@ioMyInfo@@QAEXAAVioHashString@@0AAH@Z ; ioMyInfo::GetFirstDeleteExMedalSlot

; 104  : 	m_pExtraItemIcon = g_UIImageSetMgr.CreateImageByFullName( m_szIconName );

  00053	6a 00		 push	 0
  00055	53		 push	 ebx
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ
  0005c	8b c8		 mov	 ecx, eax
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z
  00064	5f		 pop	 edi
  00065	89 86 94 01 00
	00		 mov	 DWORD PTR [esi+404], eax
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx

; 105  : }

  0006d	c3		 ret	 0
?iwm_show@ioExMedalSlotReleaseWnd@@UAEXXZ ENDP		; ioExMedalSlotReleaseWnd::iwm_show
_TEXT	ENDS
EXTRN	__imp_?GetLoopSec@ioFrameTimer@@QBEKXZ:PROC
EXTRN	__imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?iwm_hide@ioExMedalSlotReleaseWnd@@UAEXXZ
_TEXT	SEGMENT
?iwm_hide@ioExMedalSlotReleaseWnd@@UAEXXZ PROC		; ioExMedalSlotReleaseWnd::iwm_hide, COMDAT
; _this$ = ecx

; 108  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 109  : 	m_szClassName.Clear();

  00004	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?Clear@ioHashString@@QAEXXZ
  0000a	8d 8e a8 01 00
	00		 lea	 ecx, DWORD PTR [esi+424]
  00010	ff d7		 call	 edi

; 110  : 	m_szIconName.Clear();

  00012	8d 8e 98 01 00
	00		 lea	 ecx, DWORD PTR [esi+408]
  00018	ff d7		 call	 edi

; 111  : 	m_iSlotLevel = 0;

  0001a	83 a6 b8 01 00
	00 00		 and	 DWORD PTR [esi+440], 0

; 112  : 
; 113  : 	m_dwHideDelayTime = FRAMEGETTIME();

  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00027	8b c8		 mov	 ecx, eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  0002f	5f		 pop	 edi
  00030	89 86 bc 01 00
	00		 mov	 DWORD PTR [esi+444], eax
  00036	5e		 pop	 esi

; 114  : }

  00037	c3		 ret	 0
?iwm_hide@ioExMedalSlotReleaseWnd@@UAEXXZ ENDP		; ioExMedalSlotReleaseWnd::iwm_hide
_TEXT	ENDS
EXTRN	?EraseDeleteExMedalSlot@ioMyInfo@@QAEX_N@Z:PROC	; ioMyInfo::EraseDeleteExMedalSlot
EXTRN	__imp_?iwm_esc@ioWnd@@UAE_NXZ:PROC
EXTRN	__imp_?IsShow@ioWnd@@QBE_NXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?iwm_esc@ioExMedalSlotReleaseWnd@@UAE_NXZ
_TEXT	SEGMENT
?iwm_esc@ioExMedalSlotReleaseWnd@@UAE_NXZ PROC		; ioExMedalSlotReleaseWnd::iwm_esc, COMDAT
; _this$ = ecx

; 117  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 118  : 	if( !IsShow() ) return false;

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsShow@ioWnd@@QBE_NXZ
  00009	84 c0		 test	 al, al
  0000b	74 1e		 je	 SHORT $LN1@iwm_esc

; 119  : 	if( ioWnd::iwm_esc() )

  0000d	8b ce		 mov	 ecx, esi
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?iwm_esc@ioWnd@@UAE_NXZ
  00015	84 c0		 test	 al, al
  00017	74 12		 je	 SHORT $LN1@iwm_esc

; 120  : 	{
; 121  : 		g_MyInfo.EraseDeleteExMedalSlot( false );

  00019	6a 00		 push	 0
  0001b	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00020	8b c8		 mov	 ecx, eax
  00022	e8 00 00 00 00	 call	 ?EraseDeleteExMedalSlot@ioMyInfo@@QAEX_N@Z ; ioMyInfo::EraseDeleteExMedalSlot

; 122  : 		return true;

  00027	b0 01		 mov	 al, 1
  00029	5e		 pop	 esi

; 125  : }

  0002a	c3		 ret	 0
$LN1@iwm_esc:

; 123  : 	}
; 124  : 	return false;

  0002b	32 c0		 xor	 al, al
  0002d	5e		 pop	 esi

; 125  : }

  0002e	c3		 ret	 0
?iwm_esc@ioExMedalSlotReleaseWnd@@UAE_NXZ ENDP		; ioExMedalSlotReleaseWnd::iwm_esc
_TEXT	ENDS
EXTRN	__imp_?HideWnd@ioWnd@@QAEXXZ:PROC
EXTRN	__imp_?GetID@ioWnd@@QBEKXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?iwm_command@ioExMedalSlotReleaseWnd@@UAEXPAVioWnd@@HK@Z
_TEXT	SEGMENT
_pWnd$ = 8						; size = 4
_cmd$ = 12						; size = 4
_param$ = 16						; size = 4
?iwm_command@ioExMedalSlotReleaseWnd@@UAEXPAVioWnd@@HK@Z PROC ; ioExMedalSlotReleaseWnd::iwm_command, COMDAT
; _this$ = ecx

; 128  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 129  : 	DWORD dwID = pWnd->GetID();

  00006	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetID@ioWnd@@QBEKXZ

; 130  : 
; 131  : 	switch( dwID )

  0000f	48		 dec	 eax
  00010	74 06		 je	 SHORT $LN2@iwm_comman
  00012	48		 dec	 eax
  00013	74 24		 je	 SHORT $LN4@iwm_comman
  00015	48		 dec	 eax
  00016	75 1c		 jne	 SHORT $LN1@iwm_comman
$LN2@iwm_comman:

; 140  : 	case ID_X:
; 141  : 	case ID_OK:
; 142  : 		if( cmd == IOBN_BTNUP )

  00018	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  0001c	75 16		 jne	 SHORT $LN1@iwm_comman

; 143  : 		{
; 144  : 			g_MyInfo.EraseDeleteExMedalSlot( false );

  0001e	6a 00		 push	 0
$LN9@iwm_comman:
  00020	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00025	8b c8		 mov	 ecx, eax
  00027	e8 00 00 00 00	 call	 ?EraseDeleteExMedalSlot@ioMyInfo@@QAEX_N@Z ; ioMyInfo::EraseDeleteExMedalSlot

; 145  : 			HideWnd();

  0002c	8b ce		 mov	 ecx, esi
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HideWnd@ioWnd@@QAEXXZ
$LN1@iwm_comman:
  00034	5e		 pop	 esi

; 146  : 		}
; 147  : 		break;
; 148  : 	}
; 149  : }

  00035	5d		 pop	 ebp
  00036	c2 0c 00	 ret	 12			; 0000000cH
$LN4@iwm_comman:

; 132  : 	{
; 133  : 	case ID_ALL_OK:
; 134  : 		if( cmd == IOBN_BTNUP )

  00039	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  0003d	75 f5		 jne	 SHORT $LN1@iwm_comman

; 135  : 		{
; 136  : 			g_MyInfo.EraseDeleteExMedalSlot( true );

  0003f	6a 01		 push	 1

; 137  : 			HideWnd();
; 138  : 		}
; 139  : 		break;

  00041	eb dd		 jmp	 SHORT $LN9@iwm_comman
?iwm_command@ioExMedalSlotReleaseWnd@@UAEXPAVioWnd@@HK@Z ENDP ; ioExMedalSlotReleaseWnd::iwm_command
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GioExMedalSlotReleaseWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioExMedalSlotReleaseWnd@@UAEPAXI@Z PROC		; ioExMedalSlotReleaseWnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioExMedalSlotReleaseWnd@@UAE@XZ ; ioExMedalSlotReleaseWnd::~ioExMedalSlotReleaseWnd
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioExMedalSlotReleaseWnd@@UAEPAXI@Z ENDP		; ioExMedalSlotReleaseWnd::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__real@4f800000
EXTRN	__imp_?OnProcess@ioWnd@@MAEXM@Z:PROC
EXTRN	__imp_?ShowWnd@ioWnd@@QAEXXZ:PROC
EXTRN	?IsReserveDeleteExMedalSlot@ioMyInfo@@QAE_NXZ:PROC ; ioMyInfo::IsReserveDeleteExMedalSlot
;	COMDAT __real@4f800000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\ioexmedalslotreleasewnd.cpp
CONST	ENDS
;	COMDAT ?OnProcess@ioExMedalSlotReleaseWnd@@MAEXM@Z
_TEXT	SEGMENT
tv163 = 8						; size = 4
tv160 = 8						; size = 4
_fTimePerSec$ = 8					; size = 4
?OnProcess@ioExMedalSlotReleaseWnd@@MAEXM@Z PROC	; ioExMedalSlotReleaseWnd::OnProcess, COMDAT
; _this$ = ecx

; 57   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 58   : 	if( !IsShow() )

  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsShow@ioWnd@@QBE_NXZ
  0000c	84 c0		 test	 al, al
  0000e	75 5b		 jne	 SHORT $LN3@OnProcess

; 59   : 	{
; 60   : 		if( FRAMEGETTIME() - m_dwHideDelayTime < FLOAT100 )

  00010	57		 push	 edi
  00011	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  00016	8b f8		 mov	 edi, eax
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  0001e	8b c8		 mov	 ecx, eax
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00026	2b 86 bc 01 00
	00		 sub	 eax, DWORD PTR [esi+444]
  0002c	89 45 08	 mov	 DWORD PTR tv163[ebp], eax
  0002f	db 45 08	 fild	 DWORD PTR tv163[ebp]
  00032	79 06		 jns	 SHORT $LN8@OnProcess
  00034	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN8@OnProcess:
  0003a	89 7d 08	 mov	 DWORD PTR tv160[ebp], edi
  0003d	db 45 08	 fild	 DWORD PTR tv160[ebp]
  00040	85 ff		 test	 edi, edi
  00042	79 06		 jns	 SHORT $LN9@OnProcess
  00044	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN9@OnProcess:
  0004a	df f1		 fcomip	 ST(1)
  0004c	dd d8		 fstp	 ST(0)
  0004e	5f		 pop	 edi
  0004f	77 2d		 ja	 SHORT $LN4@OnProcess

; 61   : 			return;
; 62   : 
; 63   : 		if( g_MyInfo.IsReserveDeleteExMedalSlot() )

  00051	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00056	8b c8		 mov	 ecx, eax
  00058	e8 00 00 00 00	 call	 ?IsReserveDeleteExMedalSlot@ioMyInfo@@QAE_NXZ ; ioMyInfo::IsReserveDeleteExMedalSlot
  0005d	84 c0		 test	 al, al
  0005f	74 1d		 je	 SHORT $LN4@OnProcess

; 64   : 		{
; 65   : 			ShowWnd();

  00061	8b ce		 mov	 ecx, esi
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ShowWnd@ioWnd@@QAEXXZ

; 66   : 		}
; 67   : 		return;

  00069	eb 13		 jmp	 SHORT $LN4@OnProcess
$LN3@OnProcess:

; 68   : 	}
; 69   : 	ioMovingWnd::OnProcess( fTimePerSec );

  0006b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fTimePerSec$[ebp]
  00070	51		 push	 ecx
  00071	8b ce		 mov	 ecx, esi
  00073	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?OnProcess@ioWnd@@MAEXM@Z
$LN4@OnProcess:
  0007e	5e		 pop	 esi

; 70   : }

  0007f	5d		 pop	 ebp
  00080	c2 04 00	 ret	 4
?OnProcess@ioExMedalSlotReleaseWnd@@MAEXM@Z ENDP	; ioExMedalSlotReleaseWnd::OnProcess
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$?8$08@@YA_NABVioHashString@@AAY08$$CBD@Z	; operator==<9>
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iohashstring.h
;	COMDAT ??$?8$08@@YA_NABVioHashString@@AAY08$$CBD@Z
_TEXT	SEGMENT
__t$ = -20						; size = 9
__$ArrayPad$ = -4					; size = 4
_lhs$ = 8						; size = 4
_t$ = 12						; size = 4
??$?8$08@@YA_NABVioHashString@@AAY08$$CBD@Z PROC	; operator==<9>, COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]

; 147  : 	_ENCSTR(t, _t); return ( strcmp( lhs.c_str(), _t ) == 0 );

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _lhs$[ebp]
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 ee 00 00
	00		 je	 $LN96@operator
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 ec	 mov	 BYTE PTR __t$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 d7 00 00
	00		 je	 $LN95@operator
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 ed	 mov	 BYTE PTR __t$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 c0 00 00
	00		 je	 $LN94@operator
  00042	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00045	88 55 ee	 mov	 BYTE PTR __t$[ebp+2], dl
  00048	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004b	84 d2		 test	 dl, dl
  0004d	0f 84 a9 00 00
	00		 je	 $LN93@operator
  00053	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00056	88 55 ef	 mov	 BYTE PTR __t$[ebp+3], dl
  00059	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005c	84 d2		 test	 dl, dl
  0005e	0f 84 92 00 00
	00		 je	 $LN92@operator
  00064	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00067	88 55 f0	 mov	 BYTE PTR __t$[ebp+4], dl
  0006a	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006d	84 d2		 test	 dl, dl
  0006f	74 7f		 je	 SHORT $LN91@operator
  00071	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00074	88 55 f1	 mov	 BYTE PTR __t$[ebp+5], dl
  00077	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007a	84 d2		 test	 dl, dl
  0007c	74 6c		 je	 SHORT $LN90@operator
  0007e	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00081	88 55 f2	 mov	 BYTE PTR __t$[ebp+6], dl
  00084	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00087	84 d2		 test	 dl, dl
  00089	74 59		 je	 SHORT $LN89@operator
  0008b	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0008e	80 78 08 00	 cmp	 BYTE PTR [eax+8], 0
  00092	88 55 f3	 mov	 BYTE PTR __t$[ebp+7], dl
  00095	74 7b		 je	 SHORT $LN1@operator
  00097	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  0009a	84 d2		 test	 dl, dl
  0009c	74 40		 je	 SHORT $LN87@operator
  0009e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000a1	88 55 f5	 mov	 BYTE PTR __t$[ebp+9], dl
  000a4	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000a7	84 d2		 test	 dl, dl
  000a9	74 2d		 je	 SHORT $LN86@operator
  000ab	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000ae	88 55 f6	 mov	 BYTE PTR __t$[ebp+10], dl
  000b1	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000b4	84 d2		 test	 dl, dl
  000b6	74 1a		 je	 SHORT $LN85@operator
  000b8	8a 40 0c	 mov	 al, BYTE PTR [eax+12]
  000bb	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000be	88 55 f7	 mov	 BYTE PTR __t$[ebp+11], dl
  000c1	84 c0		 test	 al, al
  000c3	74 07		 je	 SHORT $LN84@operator
  000c5	34 ed		 xor	 al, -19			; ffffffedH
  000c7	88 45 f8	 mov	 BYTE PTR __t$[ebp+12], al
  000ca	eb 46		 jmp	 SHORT $LN1@operator
$LN84@operator:
  000cc	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+12], -19 ; ffffffedH
  000d0	eb 40		 jmp	 SHORT $LN1@operator
$LN85@operator:
  000d2	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+11], -22 ; ffffffeaH
  000d6	eb 3a		 jmp	 SHORT $LN1@operator
$LN86@operator:
  000d8	c6 45 f6 eb	 mov	 BYTE PTR __t$[ebp+10], -21 ; ffffffebH
  000dc	eb 34		 jmp	 SHORT $LN1@operator
$LN87@operator:
  000de	c6 45 f5 ec	 mov	 BYTE PTR __t$[ebp+9], -20 ; ffffffecH
  000e2	eb 2e		 jmp	 SHORT $LN1@operator
$LN89@operator:
  000e4	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  000e8	eb 28		 jmp	 SHORT $LN1@operator
$LN90@operator:
  000ea	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+6], -21 ; ffffffebH
  000ee	eb 22		 jmp	 SHORT $LN1@operator
$LN91@operator:
  000f0	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  000f4	eb 1c		 jmp	 SHORT $LN1@operator
$LN92@operator:
  000f6	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  000fa	eb 16		 jmp	 SHORT $LN1@operator
$LN93@operator:
  000fc	c6 45 ef ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  00100	eb 10		 jmp	 SHORT $LN1@operator
$LN94@operator:
  00102	c6 45 ee eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  00106	eb 0a		 jmp	 SHORT $LN1@operator
$LN95@operator:
  00108	c6 45 ed ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  0010c	eb 04		 jmp	 SHORT $LN1@operator
$LN96@operator:
  0010e	c6 45 ec ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@operator:
  00112	6a 02		 push	 2
  00114	8d 45 ec	 lea	 eax, DWORD PTR __t$[ebp]
  00117	c6 45 f4 00	 mov	 BYTE PTR __t$[ebp+8], 0
  0011b	5a		 pop	 edx
$LL104@operator:
  0011c	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00122	83 c0 04	 add	 eax, 4
  00125	4a		 dec	 edx
  00126	75 f4		 jne	 SHORT $LL104@operator
  00128	56		 push	 esi
  00129	8d 75 ec	 lea	 esi, DWORD PTR __t$[ebp]
  0012c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL111@operator:
  00132	8a 08		 mov	 cl, BYTE PTR [eax]
  00134	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00136	75 1a		 jne	 SHORT $LN112@operator
  00138	84 c9		 test	 cl, cl
  0013a	74 12		 je	 SHORT $LN113@operator
  0013c	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  0013f	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  00142	75 0e		 jne	 SHORT $LN112@operator
  00144	83 c0 02	 add	 eax, 2
  00147	83 c6 02	 add	 esi, 2
  0014a	84 c9		 test	 cl, cl
  0014c	75 e4		 jne	 SHORT $LL111@operator
$LN113@operator:
  0014e	33 c0		 xor	 eax, eax
  00150	eb 05		 jmp	 SHORT $LN114@operator
$LN112@operator:
  00152	1b c0		 sbb	 eax, eax
  00154	83 d8 ff	 sbb	 eax, -1
$LN114@operator:
  00157	33 c9		 xor	 ecx, ecx
  00159	85 c0		 test	 eax, eax
  0015b	0f 94 c0	 sete	 al

; 148  : }

  0015e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00161	33 cd		 xor	 ecx, ebp
  00163	5e		 pop	 esi
  00164	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00169	c9		 leave
  0016a	c3		 ret	 0
??$?8$08@@YA_NABVioHashString@@AAY08$$CBD@Z ENDP	; operator==<9>
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
EXTRN	__imp_?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\ioexmedalslotreleasewnd.cpp
;	COMDAT ?AddRenderImage@ioExMedalSlotReleaseWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z
_TEXT	SEGMENT
_this$GSCopy$ = -24					; size = 4
__t$505652 = -20					; size = 9
__$ArrayPad$ = -4					; size = 4
_szType$ = 8						; size = 4
_pImage$ = 12						; size = 4
?AddRenderImage@ioExMedalSlotReleaseWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z PROC ; ioExMedalSlotReleaseWnd::AddRenderImage, COMDAT
; _this$ = ecx

; 46   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 0c	 mov	 ebx, DWORD PTR _pImage$[ebp]
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b 7d 08	 mov	 edi, DWORD PTR _szType$[ebp]

; 47   : 	if( szType == "IconBack" )

  00019	6a 02		 push	 2
  0001b	89 4d e8	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  0001e	c7 45 ec a4 8f
	84 84		 mov	 DWORD PTR __t$505652[ebp], -2071687260 ; 84848fa4H
  00025	c7 45 f0 af 8d
	88 81		 mov	 DWORD PTR __t$505652[ebp+4], -2121757265 ; 81888dafH
  0002c	8d 45 ec	 lea	 eax, DWORD PTR __t$505652[ebp]
  0002f	c6 45 f4 00	 mov	 BYTE PTR __t$505652[ebp+8], 0
  00033	59		 pop	 ecx
$LL111@AddRenderI:
  00034	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0003a	83 c0 04	 add	 eax, 4
  0003d	49		 dec	 ecx
  0003e	75 f4		 jne	 SHORT $LL111@AddRenderI
  00040	8b cf		 mov	 ecx, edi
  00042	8d 75 ec	 lea	 esi, DWORD PTR __t$505652[ebp]
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL118@AddRenderI:
  0004b	8a 08		 mov	 cl, BYTE PTR [eax]
  0004d	3a 0e		 cmp	 cl, BYTE PTR [esi]
  0004f	75 1a		 jne	 SHORT $LN119@AddRenderI
  00051	84 c9		 test	 cl, cl
  00053	74 12		 je	 SHORT $LN120@AddRenderI
  00055	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00058	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  0005b	75 0e		 jne	 SHORT $LN119@AddRenderI
  0005d	83 c0 02	 add	 eax, 2
  00060	83 c6 02	 add	 esi, 2
  00063	84 c9		 test	 cl, cl
  00065	75 e4		 jne	 SHORT $LL118@AddRenderI
$LN120@AddRenderI:
  00067	33 c0		 xor	 eax, eax
  00069	eb 05		 jmp	 SHORT $LN121@AddRenderI
$LN119@AddRenderI:
  0006b	1b c0		 sbb	 eax, eax
  0006d	83 d8 ff	 sbb	 eax, -1
$LN121@AddRenderI:
  00070	85 c0		 test	 eax, eax
  00072	75 23		 jne	 SHORT $LN3@AddRenderI

; 48   : 	{
; 49   : 		SAFEDELETE( m_pIconBack );

  00074	8b 75 e8	 mov	 esi, DWORD PTR _this$GSCopy$[ebp]
  00077	8b 8e 90 01 00
	00		 mov	 ecx, DWORD PTR [esi+400]
  0007d	85 c9		 test	 ecx, ecx
  0007f	74 0e		 je	 SHORT $LN2@AddRenderI
  00081	8b 01		 mov	 eax, DWORD PTR [ecx]
  00083	6a 01		 push	 1
  00085	ff 50 40	 call	 DWORD PTR [eax+64]
  00088	83 a6 90 01 00
	00 00		 and	 DWORD PTR [esi+400], 0
$LN2@AddRenderI:

; 50   : 		m_pIconBack = pImage;

  0008f	89 9e 90 01 00
	00		 mov	 DWORD PTR [esi+400], ebx

; 51   : 	}
; 52   : 	else

  00095	eb 0b		 jmp	 SHORT $LN1@AddRenderI
$LN3@AddRenderI:

; 53   : 		ioWnd::AddRenderImage( szType, pImage );

  00097	8b 4d e8	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  0009a	53		 push	 ebx
  0009b	57		 push	 edi
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
$LN1@AddRenderI:

; 54   : }

  000a2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a5	5f		 pop	 edi
  000a6	5e		 pop	 esi
  000a7	33 cd		 xor	 ecx, ebp
  000a9	5b		 pop	 ebx
  000aa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000af	c9		 leave
  000b0	c2 08 00	 ret	 8
?AddRenderImage@ioExMedalSlotReleaseWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z ENDP ; ioExMedalSlotReleaseWnd::AddRenderImage
_TEXT	ENDS
END
