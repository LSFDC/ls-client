; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\GUI\TrainingFuncMenuWnd.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
;	COMDAT ?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB DD 01H ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
CONST	ENDS
PUBLIC	?GetCurrMenu@TrainingFuncWnd@@QAEKXZ		; TrainingFuncWnd::GetCurrMenu
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\trainingfuncwnd.h
;	COMDAT ?GetCurrMenu@TrainingFuncWnd@@QAEKXZ
_TEXT	SEGMENT
?GetCurrMenu@TrainingFuncWnd@@QAEKXZ PROC		; TrainingFuncWnd::GetCurrMenu, COMDAT
; _this$ = ecx

; 58   : 	DWORD GetCurrMenu(){ return m_dwCurrMenu; }

  00000	8b 81 90 01 00
	00		 mov	 eax, DWORD PTR [ecx+400]
  00006	c3		 ret	 0
?GetCurrMenu@TrainingFuncWnd@@QAEKXZ ENDP		; TrainingFuncWnd::GetCurrMenu
_TEXT	ENDS
PUBLIC	?ResetCurrMenu@TrainingFuncWnd@@QAEXXZ		; TrainingFuncWnd::ResetCurrMenu
; Function compile flags: /Ogsp
;	COMDAT ?ResetCurrMenu@TrainingFuncWnd@@QAEXXZ
_TEXT	SEGMENT
?ResetCurrMenu@TrainingFuncWnd@@QAEXXZ PROC		; TrainingFuncWnd::ResetCurrMenu, COMDAT
; _this$ = ecx

; 59   : 	void ResetCurrMenu(){ m_dwCurrMenu = NONE; }

  00000	83 a1 90 01 00
	00 00		 and	 DWORD PTR [ecx+400], 0
  00007	c3		 ret	 0
?ResetCurrMenu@TrainingFuncWnd@@QAEXXZ ENDP		; TrainingFuncWnd::ResetCurrMenu
_TEXT	ENDS
PUBLIC	?GetMasterName@ioHouseMode@@QAEAAVioHashString@@XZ ; ioHouseMode::GetMasterName
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iohousemode.h
;	COMDAT ?GetMasterName@ioHouseMode@@QAEAAVioHashString@@XZ
_TEXT	SEGMENT
?GetMasterName@ioHouseMode@@QAEAAVioHashString@@XZ PROC	; ioHouseMode::GetMasterName, COMDAT
; _this$ = ecx

; 156  : 	inline ioHashString &GetMasterName(){ return m_szMasterName; }

  00000	8d 81 f4 04 00
	00		 lea	 eax, DWORD PTR [ecx+1268]
  00006	c3		 ret	 0
?GetMasterName@ioHouseMode@@QAEAAVioHashString@@XZ ENDP	; ioHouseMode::GetMasterName
_TEXT	ENDS
PUBLIC	??_C@_04IAEKAMNC@YPos?$AA@			; `string'
PUBLIC	??_C@_04LNCKCFGC@XPos?$AA@			; `string'
PUBLIC	??_C@_0BE@ODDDAOMI@TrainingFuncMenuWnd?$AA@	; `string'
PUBLIC	??_7TrainingFuncMenuWnd@@6B@			; TrainingFuncMenuWnd::`vftable'
PUBLIC	??1TrainingFuncMenuWnd@@UAE@XZ			; TrainingFuncMenuWnd::~TrainingFuncMenuWnd
PUBLIC	??_R4TrainingFuncMenuWnd@@6B@			; TrainingFuncMenuWnd::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTrainingFuncMenuWnd@@@8			; TrainingFuncMenuWnd `RTTI Type Descriptor'
PUBLIC	??_R3TrainingFuncMenuWnd@@8			; TrainingFuncMenuWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TrainingFuncMenuWnd@@8			; TrainingFuncMenuWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TrainingFuncMenuWnd@@8		; TrainingFuncMenuWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioMovingWnd@@8			; ioMovingWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioMovingWnd@@@8				; ioMovingWnd `RTTI Type Descriptor'
PUBLIC	??_R3ioMovingWnd@@8				; ioMovingWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioMovingWnd@@8				; ioMovingWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioWnd@@8				; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioWnd@@@8				; ioWnd `RTTI Type Descriptor'
PUBLIC	??_R3ioWnd@@8					; ioWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioWnd@@8					; ioWnd::`RTTI Base Class Array'
PUBLIC	?SetPositionToDefault@TrainingFuncMenuWnd@@UAEXHH_N0@Z ; TrainingFuncMenuWnd::SetPositionToDefault
PUBLIC	?OnRender@TrainingFuncMenuWnd@@MAEXXZ		; TrainingFuncMenuWnd::OnRender
PUBLIC	?OnProcess@TrainingFuncMenuWnd@@MAEXM@Z		; TrainingFuncMenuWnd::OnProcess
PUBLIC	?iwm_create@TrainingFuncMenuWnd@@UAEXXZ		; TrainingFuncMenuWnd::iwm_create
PUBLIC	?iwm_command@TrainingFuncMenuWnd@@UAEXPAVioWnd@@HK@Z ; TrainingFuncMenuWnd::iwm_command
PUBLIC	?iwm_show@TrainingFuncMenuWnd@@UAEXXZ		; TrainingFuncMenuWnd::iwm_show
PUBLIC	?iwm_hide@TrainingFuncMenuWnd@@UAEXXZ		; TrainingFuncMenuWnd::iwm_hide
EXTRN	__imp_??1ioMovingWnd@@UAE@XZ:PROC
EXTRN	??1FSMStateMgr@@UAE@XZ:PROC			; FSMStateMgr::~FSMStateMgr
EXTRN	?GUIPosSaveInt@ioSP2GUIManager@@QAEHPBD0HH@Z:PROC ; ioSP2GUIManager::GUIPosSaveInt
EXTRN	?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ:PROC	; ioSP2GUIManager::GetSingleton
EXTRN	?Height@Setting@@SAHXZ:PROC			; Setting::Height
EXTRN	?Width@Setting@@SAHXZ:PROC			; Setting::Width
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z:PROC ; ioWnd::AddRenderFrame
EXTRN	?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC ; ioWnd::AddRenderImage
EXTRN	?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z:PROC ; ioWnd::AddTooltipHelp
EXTRN	?ParseExtraInfo@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC ; ioWnd::ParseExtraInfo
EXTRN	?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC ; ioWnd::AddNamedRenderImage
EXTRN	?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z:PROC ; ioWnd::RemoveNamedRenderImage
EXTRN	?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z:PROC ; ioWnd::GetNamedRenderImage
EXTRN	?SetWindowAlpha@ioWnd@@UAEXH@Z:PROC		; ioWnd::SetWindowAlpha
EXTRN	?SetActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetActive
EXTRN	?SetInActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetInActive
EXTRN	?ClearElementImageList@ioWnd@@UAEXXZ:PROC	; ioWnd::ClearElementImageList
EXTRN	?SetSize@ioWnd@@UAEXHH@Z:PROC			; ioWnd::SetSize
EXTRN	?IsNeedProcess@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsNeedProcess
EXTRN	?IsCanMouseReaction@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsCanMouseReaction
EXTRN	?AddChild@ioWnd@@UAEXPAV1@@Z:PROC		; ioWnd::AddChild
EXTRN	?DeleteChild@ioWnd@@UAEXK@Z:PROC		; ioWnd::DeleteChild
EXTRN	?DeleteAllChild@ioWnd@@UAEXXZ:PROC		; ioWnd::DeleteAllChild
EXTRN	?OnRenderShowAndHide@ioWnd@@MAE_NXZ:PROC	; ioWnd::OnRenderShowAndHide
EXTRN	?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z:PROC ; ioWnd::OnRenderShowAndHideByDefault
EXTRN	?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByTop
EXTRN	?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByDown
EXTRN	?OnRenderAfterChild@ioWnd@@MAEXXZ:PROC		; ioWnd::OnRenderAfterChild
EXTRN	?OnMouseProcess@ioMovingWnd@@MAEXABVioMouse@@@Z:PROC ; ioMovingWnd::OnMouseProcess
EXTRN	?CheckFrameReSize@ioWnd@@MAEXHHHH@Z:PROC	; ioWnd::CheckFrameReSize
EXTRN	?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z:PROC ; ioWnd::RenderImageList
EXTRN	?iwm_destroy@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_destroy
EXTRN	?iwm_lbuttondown@ioMovingWnd@@UAEXABVioMouse@@@Z:PROC ; ioMovingWnd::iwm_lbuttondown
EXTRN	?iwm_lbuttonup@ioMovingWnd@@UAEXABVioMouse@@@Z:PROC ; ioMovingWnd::iwm_lbuttonup
EXTRN	?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z:PROC ; ioWnd::iwm_lbuttonDBLCLK
EXTRN	?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_rbuttondown
EXTRN	?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_rbuttonup
EXTRN	?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mouseover
EXTRN	?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mousemove
EXTRN	?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mouseleave
EXTRN	?iwm_vscroll@ioWnd@@UAEXKH@Z:PROC		; ioWnd::iwm_vscroll
EXTRN	?iwm_wheel@ioWnd@@UAEXH@Z:PROC			; ioWnd::iwm_wheel
EXTRN	?iwm_esc@ioWnd@@UAE_NXZ:PROC			; ioWnd::iwm_esc
EXTRN	?iwm_spacebar@ioWnd@@UAE_NXZ:PROC		; ioWnd::iwm_spacebar
EXTRN	?iwm_gototop@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_gototop
EXTRN	?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragenter
EXTRN	?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragover
EXTRN	?iwm_dragleave@ioWnd@@UAEXXZ:PROC		; ioWnd::iwm_dragleave
EXTRN	?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z:PROC ; ioWnd::iwm_dropitem
EXTRN	?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z:PROC ; ioWnd::iwm_dropdone
EXTRN	?IsEXType@ioWnd@@UBE_NXZ:PROC			; ioWnd::IsEXType
EXTRN	?GetWndType@ioWnd@@UBEKXZ:PROC			; ioWnd::GetWndType
EXTRN	?RenderWnd@ioWnd@@UAEXXZ:PROC			; ioWnd::RenderWnd
EXTRN	?SetIDEX@ioWnd@@UAEXAAK_N@Z:PROC		; ioWnd::SetIDEX
EXTRN	?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC	; ioWnd::ParseXML
EXTRN	?GetHeaderFileName@ioWnd@@UAEPBDXZ:PROC		; ioWnd::GetHeaderFileName
EXTRN	?GetTemplateName@ioWnd@@UAEPBDXZ:PROC		; ioWnd::GetTemplateName
EXTRN	?GetDefClassName@ioWnd@@UBEPBDXZ:PROC		; ioWnd::GetDefClassName
EXTRN	?_Clone@ioWnd@@UAEPAV1@XZ:PROC			; ioWnd::_Clone
EXTRN	?Copy@ioWnd@@UAEXPAV1@@Z:PROC			; ioWnd::Copy
EXTRN	?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z:PROC	; ioWnd::Save
EXTRN	?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC ; ioWnd::SetSaveData
EXTRN	?SetPosX@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosX
EXTRN	?SetPosY@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosY
EXTRN	?SetWidth@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetWidth
EXTRN	?SetHeight@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetHeight
EXTRN	?GetNumFixedRenderFrame@ioWnd@@UBEHXZ:PROC	; ioWnd::GetNumFixedRenderFrame
EXTRN	?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z:PROC	; ioWnd::GetFixedRenderFrameType
EXTRN	?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioWnd::GetRenderFrame
EXTRN	?GetNumFixedRenderImage@ioWnd@@UBEHXZ:PROC	; ioWnd::GetNumFixedRenderImage
EXTRN	?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z:PROC	; ioWnd::GetFixedRenderImageType
EXTRN	?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioWnd::GetRenderImage
EXTRN	?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z:PROC ; ioWnd::AddEffect
EXTRN	?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z:PROC ; ioWnd::GetEffect
EXTRN	??_ETrainingFuncMenuWnd@@UAEPAXI@Z:PROC		; TrainingFuncMenuWnd::`vector deleting destructor'
;	COMDAT ??_R2ioWnd@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\trainingfuncmenuwnd.cpp
rdata$r	SEGMENT
??_R2ioWnd@@8 DD FLAT:??_R1A@?0A@EA@ioWnd@@8		; ioWnd::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioWnd@@8
rdata$r	SEGMENT
??_R3ioWnd@@8 DD 00H					; ioWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioWnd@@@8
_DATA	SEGMENT
??_R0?AVioWnd@@@8 DD FLAT:??_7type_info@@6B@		; ioWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioWnd@@8 DD FLAT:??_R0?AVioWnd@@@8	; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2ioMovingWnd@@8
rdata$r	SEGMENT
??_R2ioMovingWnd@@8 DD FLAT:??_R1A@?0A@EA@ioMovingWnd@@8 ; ioMovingWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3ioMovingWnd@@8
rdata$r	SEGMENT
??_R3ioMovingWnd@@8 DD 00H				; ioMovingWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioMovingWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioMovingWnd@@@8
_DATA	SEGMENT
??_R0?AVioMovingWnd@@@8 DD FLAT:??_7type_info@@6B@	; ioMovingWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioMovingWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioMovingWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioMovingWnd@@8 DD FLAT:??_R0?AVioMovingWnd@@@8 ; ioMovingWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioMovingWnd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@TrainingFuncMenuWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TrainingFuncMenuWnd@@8 DD FLAT:??_R0?AVTrainingFuncMenuWnd@@@8 ; TrainingFuncMenuWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TrainingFuncMenuWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2TrainingFuncMenuWnd@@8
rdata$r	SEGMENT
??_R2TrainingFuncMenuWnd@@8 DD FLAT:??_R1A@?0A@EA@TrainingFuncMenuWnd@@8 ; TrainingFuncMenuWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioMovingWnd@@8
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3TrainingFuncMenuWnd@@8
rdata$r	SEGMENT
??_R3TrainingFuncMenuWnd@@8 DD 00H			; TrainingFuncMenuWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2TrainingFuncMenuWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTrainingFuncMenuWnd@@@8
_DATA	SEGMENT
??_R0?AVTrainingFuncMenuWnd@@@8 DD FLAT:??_7type_info@@6B@ ; TrainingFuncMenuWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTrainingFuncMenuWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TrainingFuncMenuWnd@@6B@
rdata$r	SEGMENT
??_R4TrainingFuncMenuWnd@@6B@ DD 00H			; TrainingFuncMenuWnd::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTrainingFuncMenuWnd@@@8
	DD	FLAT:??_R3TrainingFuncMenuWnd@@8
rdata$r	ENDS
;	COMDAT ??_C@_04IAEKAMNC@YPos?$AA@
CONST	SEGMENT
??_C@_04IAEKAMNC@YPos?$AA@ DB 'YPos', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LNCKCFGC@XPos?$AA@
CONST	SEGMENT
??_C@_04LNCKCFGC@XPos?$AA@ DB 'XPos', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ODDDAOMI@TrainingFuncMenuWnd?$AA@
CONST	SEGMENT
??_C@_0BE@ODDDAOMI@TrainingFuncMenuWnd?$AA@ DB 'TrainingFuncMenuWnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7TrainingFuncMenuWnd@@6B@
CONST	SEGMENT
??_7TrainingFuncMenuWnd@@6B@ DD FLAT:??_R4TrainingFuncMenuWnd@@6B@ ; TrainingFuncMenuWnd::`vftable'
	DD	FLAT:?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
	DD	FLAT:?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z
	DD	FLAT:?ParseExtraInfo@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z
	DD	FLAT:?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z
	DD	FLAT:?SetWindowAlpha@ioWnd@@UAEXH@Z
	DD	FLAT:?SetActive@ioWnd@@UAEXXZ
	DD	FLAT:?SetInActive@ioWnd@@UAEXXZ
	DD	FLAT:?ClearElementImageList@ioWnd@@UAEXXZ
	DD	FLAT:?SetSize@ioWnd@@UAEXHH@Z
	DD	FLAT:?SetPositionToDefault@TrainingFuncMenuWnd@@UAEXHH_N0@Z
	DD	FLAT:?IsNeedProcess@ioWnd@@UBE_NXZ
	DD	FLAT:?IsCanMouseReaction@ioWnd@@UBE_NXZ
	DD	FLAT:?AddChild@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?DeleteChild@ioWnd@@UAEXK@Z
	DD	FLAT:?DeleteAllChild@ioWnd@@UAEXXZ
	DD	FLAT:?OnRenderShowAndHide@ioWnd@@MAE_NXZ
	DD	FLAT:?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRender@TrainingFuncMenuWnd@@MAEXXZ
	DD	FLAT:?OnRenderAfterChild@ioWnd@@MAEXXZ
	DD	FLAT:?OnProcess@TrainingFuncMenuWnd@@MAEXM@Z
	DD	FLAT:?OnMouseProcess@ioMovingWnd@@MAEXABVioMouse@@@Z
	DD	FLAT:?CheckFrameReSize@ioWnd@@MAEXHHHH@Z
	DD	FLAT:?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z
	DD	FLAT:?iwm_create@TrainingFuncMenuWnd@@UAEXXZ
	DD	FLAT:?iwm_destroy@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_lbuttondown@ioMovingWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonup@ioMovingWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_command@TrainingFuncMenuWnd@@UAEXPAVioWnd@@HK@Z
	DD	FLAT:?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_vscroll@ioWnd@@UAEXKH@Z
	DD	FLAT:?iwm_wheel@ioWnd@@UAEXH@Z
	DD	FLAT:?iwm_show@TrainingFuncMenuWnd@@UAEXXZ
	DD	FLAT:?iwm_hide@TrainingFuncMenuWnd@@UAEXXZ
	DD	FLAT:?iwm_esc@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_spacebar@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_gototop@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragleave@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z
	DD	FLAT:?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z
	DD	FLAT:?IsEXType@ioWnd@@UBE_NXZ
	DD	FLAT:?GetWndType@ioWnd@@UBEKXZ
	DD	FLAT:?RenderWnd@ioWnd@@UAEXXZ
	DD	FLAT:?SetIDEX@ioWnd@@UAEXAAK_N@Z
	DD	FLAT:?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?GetHeaderFileName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetTemplateName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetDefClassName@ioWnd@@UBEPBDXZ
	DD	FLAT:?_Clone@ioWnd@@UAEPAV1@XZ
	DD	FLAT:?Copy@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z
	DD	FLAT:?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?SetPosX@ioWnd@@UAEXH@Z
	DD	FLAT:?SetPosY@ioWnd@@UAEXH@Z
	DD	FLAT:?SetWidth@ioWnd@@UAEXH@Z
	DD	FLAT:?SetHeight@ioWnd@@UAEXH@Z
	DD	FLAT:?GetNumFixedRenderFrame@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?GetNumFixedRenderImage@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z
	DD	FLAT:?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z
	DD	FLAT:??_ETrainingFuncMenuWnd@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1TrainingFuncMenuWnd@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1TrainingFuncMenuWnd@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1TrainingFuncMenuWnd@@UAE@XZ$1
__ehfuncinfo$??1TrainingFuncMenuWnd@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1TrainingFuncMenuWnd@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1TrainingFuncMenuWnd@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1TrainingFuncMenuWnd@@UAE@XZ PROC			; TrainingFuncMenuWnd::~TrainingFuncMenuWnd, COMDAT
; _this$ = ecx

; 28   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1TrainingFuncMenuWnd@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7TrainingFuncMenuWnd@@6B@

; 29   : 	if( !COMPARE( m_iDefaultX, 0, Setting::Width() ) || 
; 30   : 		!COMPARE( m_iDefaultY, 0, Setting::Height() ) )

  00017	83 be 94 01 00
	00 00		 cmp	 DWORD PTR [esi+404], 0
  0001e	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00025	7c 5c		 jl	 SHORT $LN1@TrainingFu
  00027	e8 00 00 00 00	 call	 ?Width@Setting@@SAHXZ	; Setting::Width
  0002c	39 86 94 01 00
	00		 cmp	 DWORD PTR [esi+404], eax
  00032	7d 4f		 jge	 SHORT $LN1@TrainingFu
  00034	83 be 98 01 00
	00 00		 cmp	 DWORD PTR [esi+408], 0
  0003b	7c 46		 jl	 SHORT $LN1@TrainingFu
  0003d	e8 00 00 00 00	 call	 ?Height@Setting@@SAHXZ	; Setting::Height
  00042	39 86 98 01 00
	00		 cmp	 DWORD PTR [esi+408], eax
  00048	7d 39		 jge	 SHORT $LN1@TrainingFu

; 31   : 		return;
; 32   : 
; 33   : 	g_GUIMgr.GUIPosSaveInt( "TrainingFuncMenuWnd", "XPos", m_iDefaultX ,POS_SAVE_VERSION );

  0004a	6a 04		 push	 4
  0004c	ff b6 94 01 00
	00		 push	 DWORD PTR [esi+404]
  00052	bf 00 00 00 00	 mov	 edi, OFFSET ??_C@_0BE@ODDDAOMI@TrainingFuncMenuWnd?$AA@
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_04LNCKCFGC@XPos?$AA@
  0005c	57		 push	 edi
  0005d	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  00062	8b c8		 mov	 ecx, eax
  00064	e8 00 00 00 00	 call	 ?GUIPosSaveInt@ioSP2GUIManager@@QAEHPBD0HH@Z ; ioSP2GUIManager::GUIPosSaveInt

; 34   : 	g_GUIMgr.GUIPosSaveInt( "TrainingFuncMenuWnd", "YPos", m_iDefaultY ,POS_SAVE_VERSION );

  00069	6a 04		 push	 4
  0006b	ff b6 98 01 00
	00		 push	 DWORD PTR [esi+408]
  00071	68 00 00 00 00	 push	 OFFSET ??_C@_04IAEKAMNC@YPos?$AA@
  00076	57		 push	 edi
  00077	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ?GUIPosSaveInt@ioSP2GUIManager@@QAEHPBD0HH@Z ; ioSP2GUIManager::GUIPosSaveInt
$LN1@TrainingFu:

; 35   : }

  00083	8d 8e a0 01 00
	00		 lea	 ecx, DWORD PTR [esi+416]
  00089	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0008d	e8 00 00 00 00	 call	 ??1FSMStateMgr@@UAE@XZ	; FSMStateMgr::~FSMStateMgr
  00092	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00096	8b ce		 mov	 ecx, esi
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioMovingWnd@@UAE@XZ
  0009e	e8 00 00 00 00	 call	 __EH_epilog3
  000a3	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1TrainingFuncMenuWnd@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioMovingWnd@@UAE@XZ
__unwindfunclet$??1TrainingFuncMenuWnd@@UAE@XZ$1:
  00009	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	81 c1 a0 01 00
	00		 add	 ecx, 416		; 000001a0H
  00012	e9 00 00 00 00	 jmp	 ??1FSMStateMgr@@UAE@XZ	; FSMStateMgr::~FSMStateMgr
__ehhandler$??1TrainingFuncMenuWnd@@UAE@XZ:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1TrainingFuncMenuWnd@@UAE@XZ
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1TrainingFuncMenuWnd@@UAE@XZ ENDP			; TrainingFuncMenuWnd::~TrainingFuncMenuWnd
EXTRN	__imp_?SetWndPos@ioWnd@@QAEXHH@Z:PROC
EXTRN	__imp_?GetYPos@ioWnd@@QBEHXZ:PROC
EXTRN	?GUIPosLoadInt@ioSP2GUIManager@@QAEHPBD0HH@Z:PROC ; ioSP2GUIManager::GUIPosLoadInt
EXTRN	__imp_?GetXPos@ioWnd@@QBEHXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?iwm_create@TrainingFuncMenuWnd@@UAEXXZ
_TEXT	SEGMENT
?iwm_create@TrainingFuncMenuWnd@@UAEXXZ PROC		; TrainingFuncMenuWnd::iwm_create, COMDAT
; _this$ = ecx

; 38   : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 39   : 	int iXPos = g_GUIMgr.GUIPosLoadInt( "TrainingFuncMenuWnd", "XPos", GetXPos() ,POS_SAVE_VERSION );

  00003	6a 04		 push	 4
  00005	8b f9		 mov	 edi, ecx
  00007	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetXPos@ioWnd@@QBEHXZ
  0000d	50		 push	 eax
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_04LNCKCFGC@XPos?$AA@
  00013	be 00 00 00 00	 mov	 esi, OFFSET ??_C@_0BE@ODDDAOMI@TrainingFuncMenuWnd?$AA@
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  0001e	8b c8		 mov	 ecx, eax
  00020	e8 00 00 00 00	 call	 ?GUIPosLoadInt@ioSP2GUIManager@@QAEHPBD0HH@Z ; ioSP2GUIManager::GUIPosLoadInt

; 40   : 	int iYPos = g_GUIMgr.GUIPosLoadInt( "TrainingFuncMenuWnd", "YPos", GetYPos() ,POS_SAVE_VERSION );

  00025	6a 04		 push	 4
  00027	8b cf		 mov	 ecx, edi
  00029	8b d8		 mov	 ebx, eax
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetYPos@ioWnd@@QBEHXZ
  00031	50		 push	 eax
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_04IAEKAMNC@YPos?$AA@
  00037	56		 push	 esi
  00038	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  0003d	8b c8		 mov	 ecx, eax
  0003f	e8 00 00 00 00	 call	 ?GUIPosLoadInt@ioSP2GUIManager@@QAEHPBD0HH@Z ; ioSP2GUIManager::GUIPosLoadInt
  00044	8b f0		 mov	 esi, eax

; 41   : 
; 42   : 	if( COMPARE( iXPos, 0, Setting::Width() ) && COMPARE( iYPos, 0, Setting::Height() ) )

  00046	85 db		 test	 ebx, ebx
  00048	78 20		 js	 SHORT $LN1@iwm_create
  0004a	e8 00 00 00 00	 call	 ?Width@Setting@@SAHXZ	; Setting::Width
  0004f	3b d8		 cmp	 ebx, eax
  00051	7d 17		 jge	 SHORT $LN1@iwm_create
  00053	85 f6		 test	 esi, esi
  00055	78 13		 js	 SHORT $LN1@iwm_create
  00057	e8 00 00 00 00	 call	 ?Height@Setting@@SAHXZ	; Setting::Height
  0005c	3b f0		 cmp	 esi, eax
  0005e	7d 0a		 jge	 SHORT $LN1@iwm_create

; 43   : 		SetWndPos( iXPos, iYPos );

  00060	56		 push	 esi
  00061	53		 push	 ebx
  00062	8b cf		 mov	 ecx, edi
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetWndPos@ioWnd@@QAEXHH@Z
$LN1@iwm_create:

; 44   : 
; 45   : 	m_iDefaultX = GetXPos();

  0006a	8b cf		 mov	 ecx, edi
  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetXPos@ioWnd@@QBEHXZ

; 46   : 	m_iDefaultY = GetYPos();

  00072	8b cf		 mov	 ecx, edi
  00074	89 87 94 01 00
	00		 mov	 DWORD PTR [edi+404], eax
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetYPos@ioWnd@@QBEHXZ
  00080	89 87 98 01 00
	00		 mov	 DWORD PTR [edi+408], eax

; 47   : 
; 48   : 	m_bStartAni = false;

  00086	c6 87 9d 01 00
	00 00		 mov	 BYTE PTR [edi+413], 0
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx

; 49   : }

  00090	c3		 ret	 0
?iwm_create@TrainingFuncMenuWnd@@UAEXXZ ENDP		; TrainingFuncMenuWnd::iwm_create
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?iwm_show@TrainingFuncMenuWnd@@UAEXXZ
_TEXT	SEGMENT
?iwm_show@TrainingFuncMenuWnd@@UAEXXZ PROC		; TrainingFuncMenuWnd::iwm_show, COMDAT
; _this$ = ecx

; 53   : 	m_bStartAni = true;

  00000	c6 81 9d 01 00
	00 01		 mov	 BYTE PTR [ecx+413], 1

; 54   : }

  00007	c3		 ret	 0
?iwm_show@TrainingFuncMenuWnd@@UAEXXZ ENDP		; TrainingFuncMenuWnd::iwm_show
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?iwm_hide@TrainingFuncMenuWnd@@UAEXXZ
_TEXT	SEGMENT
?iwm_hide@TrainingFuncMenuWnd@@UAEXXZ PROC		; TrainingFuncMenuWnd::iwm_hide, COMDAT
; _this$ = ecx

; 58   : 	m_bStartAni = false;

  00000	c6 81 9d 01 00
	00 00		 mov	 BYTE PTR [ecx+413], 0

; 59   : }

  00007	c3		 ret	 0
?iwm_hide@TrainingFuncMenuWnd@@UAEXXZ ENDP		; TrainingFuncMenuWnd::iwm_hide
_TEXT	ENDS
PUBLIC	__real@4024000000000000
PUBLIC	__real@4082c00000000000
EXTRN	__imp_?SetPositionToDefault@ioMovingWnd@@UAEXHH_N0@Z:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@4082c00000000000
CONST	SEGMENT
__real@4082c00000000000 DQ 04082c00000000000r	; 600
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?SetPositionToDefault@TrainingFuncMenuWnd@@UAEXHH_N0@Z
_TEXT	SEGMENT
_iParentWidth$ = 8					; size = 4
_iParentHeight$ = 12					; size = 4
_bChildMove$ = 16					; size = 1
_bCreate$ = 20						; size = 1
?SetPositionToDefault@TrainingFuncMenuWnd@@UAEXHH_N0@Z PROC ; TrainingFuncMenuWnd::SetPositionToDefault, COMDAT
; _this$ = ecx

; 276  : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f1		 mov	 esi, ecx

; 277  : 	float fPosGap = ( Setting::Height() - 600.0f ) / 10;

  00008	e8 00 00 00 00	 call	 ?Height@Setting@@SAHXZ	; Setting::Height

; 278  : 
; 279  : 	int iTempDefXPos = m_iDefXPos;
; 280  : 	int iTempDefYPos = m_iDefYPos;
; 281  : 
; 282  : 	m_iDefXPos = iTempDefXPos + fPosGap;
; 283  : 	m_iDefYPos = iTempDefYPos + fPosGap;
; 284  : 
; 285  : 	ioMovingWnd::SetPositionToDefault( iParentWidth, iParentHeight, bChildMove, bCreate );

  0000d	ff 75 14	 push	 DWORD PTR _bCreate$[ebp]
  00010	8b be c0 00 00
	00		 mov	 edi, DWORD PTR [esi+192]
  00016	ff 75 10	 push	 DWORD PTR _bChildMove$[ebp]
  00019	8b 9e c4 00 00
	00		 mov	 ebx, DWORD PTR [esi+196]
  0001f	ff 75 0c	 push	 DWORD PTR _iParentHeight$[ebp]
  00022	0f 57 c0	 xorps	 xmm0, xmm0
  00025	ff 75 08	 push	 DWORD PTR _iParentWidth$[ebp]
  00028	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0002c	0f 57 c9	 xorps	 xmm1, xmm1
  0002f	0f 5a c0	 cvtps2pd xmm0, xmm0
  00032	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4082c00000000000
  0003a	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4024000000000000
  00042	f3 0f 2a cf	 cvtsi2ss xmm1, edi
  00046	0f 5a c9	 cvtps2pd xmm1, xmm1
  00049	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0004d	0f 57 d2	 xorps	 xmm2, xmm2
  00050	f3 0f 5a d0	 cvtss2sd xmm2, xmm0
  00054	f2 0f 58 ca	 addsd	 xmm1, xmm2
  00058	f2 0f 2c c1	 cvttsd2si eax, xmm1
  0005c	0f 57 c9	 xorps	 xmm1, xmm1
  0005f	f3 0f 2a cb	 cvtsi2ss xmm1, ebx
  00063	0f 5a c9	 cvtps2pd xmm1, xmm1
  00066	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0006a	89 86 c0 00 00
	00		 mov	 DWORD PTR [esi+192], eax
  00070	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00074	f2 0f 2c c1	 cvttsd2si eax, xmm1
  00078	8b ce		 mov	 ecx, esi
  0007a	89 86 c4 00 00
	00		 mov	 DWORD PTR [esi+196], eax
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetPositionToDefault@ioMovingWnd@@UAEXHH_N0@Z

; 286  : 
; 287  : 	m_iDefXPos = iTempDefXPos;
; 288  : 	m_iDefYPos = iTempDefYPos;
; 289  : 
; 290  : 	if( !bCreate )

  00086	80 7d 14 00	 cmp	 BYTE PTR _bCreate$[ebp], 0
  0008a	89 be c0 00 00
	00		 mov	 DWORD PTR [esi+192], edi
  00090	89 9e c4 00 00
	00		 mov	 DWORD PTR [esi+196], ebx
  00096	75 32		 jne	 SHORT $LN1@SetPositio

; 291  : 	{
; 292  : 		m_iDefaultX = GetXPos();

  00098	8b ce		 mov	 ecx, esi
  0009a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetXPos@ioWnd@@QBEHXZ

; 293  : 		m_iDefaultY = GetYPos();

  000a0	8b ce		 mov	 ecx, esi
  000a2	89 86 94 01 00
	00		 mov	 DWORD PTR [esi+404], eax
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetYPos@ioWnd@@QBEHXZ

; 294  : 
; 295  : 		SetWndPos( m_iDefaultX, m_iDefaultY );

  000ae	50		 push	 eax
  000af	ff b6 94 01 00
	00		 push	 DWORD PTR [esi+404]
  000b5	8b ce		 mov	 ecx, esi
  000b7	89 86 98 01 00
	00		 mov	 DWORD PTR [esi+408], eax
  000bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetWndPos@ioWnd@@QAEXHH@Z

; 296  : 		m_bChangeResolution = true;

  000c3	c6 86 9c 01 00
	00 01		 mov	 BYTE PTR [esi+412], 1
$LN1@SetPositio:
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx

; 297  : 	}
; 298  : }

  000cd	5d		 pop	 ebp
  000ce	c2 10 00	 ret	 16			; 00000010H
?SetPositionToDefault@TrainingFuncMenuWnd@@UAEXHH_N0@Z ENDP ; TrainingFuncMenuWnd::SetPositionToDefault
_TEXT	ENDS
PUBLIC	?ResetWindow@TrainingFuncMenuWnd@@QAEXXZ	; TrainingFuncMenuWnd::ResetWindow
EXTRN	__imp_?SetWndStyle@ioWnd@@QAEXK@Z:PROC
EXTRN	__imp_?GetWndStyle@ioWnd@@QBEKXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?ResetWindow@TrainingFuncMenuWnd@@QAEXXZ
_TEXT	SEGMENT
?ResetWindow@TrainingFuncMenuWnd@@QAEXXZ PROC		; TrainingFuncMenuWnd::ResetWindow, COMDAT
; _this$ = ecx

; 301  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f1		 mov	 esi, ecx

; 302  : 	int iXPos = GetXPos();

  00004	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetXPos@ioWnd@@QBEHXZ

; 303  : 	int iYPos = GetYPos();

  0000a	8b ce		 mov	 ecx, esi
  0000c	8b f8		 mov	 edi, eax
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetYPos@ioWnd@@QBEHXZ

; 304  : 
; 305  : 	ioMovingWnd::SetWndPos( iXPos, iYPos );

  00014	50		 push	 eax
  00015	57		 push	 edi
  00016	8b ce		 mov	 ecx, esi
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetWndPos@ioWnd@@QAEXHH@Z

; 306  : 
; 307  : 	DWORD dwWndStyle = GetWndStyle();

  0001e	8b ce		 mov	 ecx, esi
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetWndStyle@ioWnd@@QBEKXZ

; 308  : 	SetWndStyle( dwWndStyle );

  00026	50		 push	 eax
  00027	8b ce		 mov	 ecx, esi
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetWndStyle@ioWnd@@QAEXK@Z
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi

; 309  : }

  00031	c3		 ret	 0
?ResetWindow@TrainingFuncMenuWnd@@QAEXXZ ENDP		; TrainingFuncMenuWnd::ResetWindow
_TEXT	ENDS
PUBLIC	?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ	; TrainingFuncMenuWnd::InitShowAniState
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?Add@FSMStateMgr@@QAEXPAVFSMState@@@Z:PROC	; FSMStateMgr::Add
EXTRN	?Add@FSMState@@QAEXHHH@Z:PROC			; FSMState::Add
EXTRN	??0FSMState@@QAE@H@Z:PROC			; FSMState::FSMState
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	?SetCurState@FSMStateMgr@@QAEXH@Z:PROC		; FSMStateMgr::SetCurState
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ$7
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ
_TEXT	SEGMENT
$T513523 = -20						; size = 4
$T513519 = -20						; size = 4
$T513515 = -20						; size = 4
$T513511 = -20						; size = 4
$T513507 = -20						; size = 4
$T513503 = -20						; size = 4
$T513499 = -20						; size = 4
$T513495 = -20						; size = 4
tv256 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ PROC	; TrainingFuncMenuWnd::InitShowAniState, COMDAT
; _this$ = ecx

; 314  : {

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 315  : 	enum { DELAY_DELAY = 165, DELAY_UP = 198, DELAY_DOWN = 66, DELAY_UP_STOP = 66, };
; 316  : 
; 317  : 	m_ShowAniState.SetCurState( SAT_NONE );

  0000c	8d b9 a0 01 00
	00		 lea	 edi, DWORD PTR [ecx+416]
  00012	33 f6		 xor	 esi, esi
  00014	56		 push	 esi
  00015	8b cf		 mov	 ecx, edi
  00017	89 7d f0	 mov	 DWORD PTR tv256[ebp], edi
  0001a	e8 00 00 00 00	 call	 ?SetCurState@FSMStateMgr@@QAEXH@Z ; FSMStateMgr::SetCurState

; 318  : 
; 319  : 	FSMState *pState = new FSMState(SAT_NONE);

  0001f	6a 38		 push	 56			; 00000038H
  00021	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00026	59		 pop	 ecx
  00027	89 45 ec	 mov	 DWORD PTR $T513495[ebp], eax
  0002a	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
  0002d	3b c6		 cmp	 eax, esi
  0002f	74 0a		 je	 SHORT $LN11@InitShowAn
  00031	56		 push	 esi
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0FSMState@@QAE@H@Z	; FSMState::FSMState
  00039	8b f0		 mov	 esi, eax
$LN11@InitShowAn:
  0003b	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1

; 320  : 	if( pState )

  0003f	6a 02		 push	 2
  00041	5b		 pop	 ebx
  00042	85 f6		 test	 esi, esi
  00044	74 25		 je	 SHORT $LN8@InitShowAn

; 321  : 	{
; 322  : 		pState->Add( SAT_DELAY,  SAT_DELAY );

  00046	6a ff		 push	 -1
  00048	53		 push	 ebx
  00049	53		 push	 ebx
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?Add@FSMState@@QAEXHHH@Z ; FSMState::Add

; 323  : 		pState->Add( SAT_START_ROUND, SAT_START_ROUND );

  00051	6a ff		 push	 -1
  00053	6a 01		 push	 1
  00055	6a 01		 push	 1
  00057	8b ce		 mov	 ecx, esi
  00059	e8 00 00 00 00	 call	 ?Add@FSMState@@QAEXHHH@Z ; FSMState::Add

; 324  : 		pState->Add( SAT_END,  SAT_END );

  0005e	6a ff		 push	 -1
  00060	6a 07		 push	 7
  00062	6a 07		 push	 7
  00064	8b ce		 mov	 ecx, esi
  00066	e8 00 00 00 00	 call	 ?Add@FSMState@@QAEXHHH@Z ; FSMState::Add
$LN8@InitShowAn:

; 325  : 	}
; 326  : 	m_ShowAniState.Add( pState );

  0006b	56		 push	 esi
  0006c	8b cf		 mov	 ecx, edi
  0006e	e8 00 00 00 00	 call	 ?Add@FSMStateMgr@@QAEXPAVFSMState@@@Z ; FSMStateMgr::Add

; 327  : 
; 328  : 	pState = new FSMState(SAT_START_ROUND);

  00073	6a 38		 push	 56			; 00000038H
  00075	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0007a	59		 pop	 ecx
  0007b	89 45 ec	 mov	 DWORD PTR $T513499[ebp], eax
  0007e	33 c9		 xor	 ecx, ecx
  00080	41		 inc	 ecx
  00081	89 4d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ecx
  00084	85 c0		 test	 eax, eax
  00086	74 0c		 je	 SHORT $LN13@InitShowAn
  00088	51		 push	 ecx
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??0FSMState@@QAE@H@Z	; FSMState::FSMState
  00090	8b f0		 mov	 esi, eax
  00092	eb 02		 jmp	 SHORT $LN14@InitShowAn
$LN13@InitShowAn:
  00094	33 f6		 xor	 esi, esi
$LN14@InitShowAn:
  00096	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1

; 329  : 	if( pState )

  0009a	85 f6		 test	 esi, esi
  0009c	74 0b		 je	 SHORT $LN7@InitShowAn

; 330  : 		pState->Add( SAT_DELAY,  SAT_DELAY);

  0009e	6a ff		 push	 -1
  000a0	53		 push	 ebx
  000a1	53		 push	 ebx
  000a2	8b ce		 mov	 ecx, esi
  000a4	e8 00 00 00 00	 call	 ?Add@FSMState@@QAEXHHH@Z ; FSMState::Add
$LN7@InitShowAn:

; 331  : 	m_ShowAniState.Add( pState );	

  000a9	56		 push	 esi
  000aa	8b cf		 mov	 ecx, edi
  000ac	e8 00 00 00 00	 call	 ?Add@FSMStateMgr@@QAEXPAVFSMState@@@Z ; FSMStateMgr::Add

; 332  : 
; 333  : 	pState = new FSMState(SAT_DELAY);

  000b1	6a 38		 push	 56			; 00000038H
  000b3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000b8	59		 pop	 ecx
  000b9	89 45 ec	 mov	 DWORD PTR $T513503[ebp], eax
  000bc	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  000bf	85 c0		 test	 eax, eax
  000c1	74 0c		 je	 SHORT $LN15@InitShowAn
  000c3	53		 push	 ebx
  000c4	8b c8		 mov	 ecx, eax
  000c6	e8 00 00 00 00	 call	 ??0FSMState@@QAE@H@Z	; FSMState::FSMState
  000cb	8b f0		 mov	 esi, eax
  000cd	eb 02		 jmp	 SHORT $LN16@InitShowAn
$LN15@InitShowAn:
  000cf	33 f6		 xor	 esi, esi
$LN16@InitShowAn:
  000d1	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1

; 334  : 	if( pState )

  000d5	6a 03		 push	 3
  000d7	5f		 pop	 edi
  000d8	85 f6		 test	 esi, esi
  000da	74 0e		 je	 SHORT $LN6@InitShowAn

; 335  : 		pState->Add( SAT_DELAY,  SAT_UP , DELAY_DELAY);

  000dc	68 a5 00 00 00	 push	 165			; 000000a5H
  000e1	57		 push	 edi
  000e2	53		 push	 ebx
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?Add@FSMState@@QAEXHHH@Z ; FSMState::Add
$LN6@InitShowAn:

; 336  : 	m_ShowAniState.Add( pState );	

  000ea	8b 4d f0	 mov	 ecx, DWORD PTR tv256[ebp]
  000ed	56		 push	 esi
  000ee	e8 00 00 00 00	 call	 ?Add@FSMStateMgr@@QAEXPAVFSMState@@@Z ; FSMStateMgr::Add

; 337  : 
; 338  : 	pState = new FSMState(SAT_UP);

  000f3	6a 38		 push	 56			; 00000038H
  000f5	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000fa	59		 pop	 ecx
  000fb	89 45 ec	 mov	 DWORD PTR $T513507[ebp], eax
  000fe	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  00101	85 c0		 test	 eax, eax
  00103	74 0c		 je	 SHORT $LN17@InitShowAn
  00105	57		 push	 edi
  00106	8b c8		 mov	 ecx, eax
  00108	e8 00 00 00 00	 call	 ??0FSMState@@QAE@H@Z	; FSMState::FSMState
  0010d	8b d8		 mov	 ebx, eax
  0010f	eb 02		 jmp	 SHORT $LN18@InitShowAn
$LN17@InitShowAn:
  00111	33 db		 xor	 ebx, ebx
$LN18@InitShowAn:
  00113	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1

; 339  : 	if( pState )

  00117	6a 04		 push	 4
  00119	5e		 pop	 esi
  0011a	85 db		 test	 ebx, ebx
  0011c	74 0e		 je	 SHORT $LN5@InitShowAn

; 340  : 		pState->Add( SAT_UP,  SAT_DOWN , DELAY_UP);

  0011e	68 c6 00 00 00	 push	 198			; 000000c6H
  00123	56		 push	 esi
  00124	57		 push	 edi
  00125	8b cb		 mov	 ecx, ebx
  00127	e8 00 00 00 00	 call	 ?Add@FSMState@@QAEXHHH@Z ; FSMState::Add
$LN5@InitShowAn:

; 341  : 	m_ShowAniState.Add( pState );

  0012c	8b 4d f0	 mov	 ecx, DWORD PTR tv256[ebp]
  0012f	53		 push	 ebx
  00130	e8 00 00 00 00	 call	 ?Add@FSMStateMgr@@QAEXPAVFSMState@@@Z ; FSMStateMgr::Add

; 342  : 
; 343  : 	pState = new FSMState(SAT_DOWN);

  00135	6a 38		 push	 56			; 00000038H
  00137	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0013c	59		 pop	 ecx
  0013d	89 45 ec	 mov	 DWORD PTR $T513511[ebp], eax
  00140	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
  00143	85 c0		 test	 eax, eax
  00145	74 0c		 je	 SHORT $LN19@InitShowAn
  00147	56		 push	 esi
  00148	8b c8		 mov	 ecx, eax
  0014a	e8 00 00 00 00	 call	 ??0FSMState@@QAE@H@Z	; FSMState::FSMState
  0014f	8b d8		 mov	 ebx, eax
  00151	eb 02		 jmp	 SHORT $LN20@InitShowAn
$LN19@InitShowAn:
  00153	33 db		 xor	 ebx, ebx
$LN20@InitShowAn:
  00155	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1

; 344  : 	if( pState )

  00159	6a 05		 push	 5
  0015b	5f		 pop	 edi
  0015c	85 db		 test	 ebx, ebx
  0015e	74 0b		 je	 SHORT $LN4@InitShowAn

; 345  : 		pState->Add( SAT_DOWN,  SAT_UP_STOP , DELAY_DOWN );

  00160	6a 42		 push	 66			; 00000042H
  00162	57		 push	 edi
  00163	56		 push	 esi
  00164	8b cb		 mov	 ecx, ebx
  00166	e8 00 00 00 00	 call	 ?Add@FSMState@@QAEXHHH@Z ; FSMState::Add
$LN4@InitShowAn:

; 346  : 	m_ShowAniState.Add( pState );

  0016b	8b 4d f0	 mov	 ecx, DWORD PTR tv256[ebp]
  0016e	53		 push	 ebx
  0016f	e8 00 00 00 00	 call	 ?Add@FSMStateMgr@@QAEXPAVFSMState@@@Z ; FSMStateMgr::Add

; 347  : 
; 348  : 	pState = new FSMState(SAT_UP_STOP);

  00174	6a 38		 push	 56			; 00000038H
  00176	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0017b	59		 pop	 ecx
  0017c	89 45 ec	 mov	 DWORD PTR $T513515[ebp], eax
  0017f	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  00182	85 c0		 test	 eax, eax
  00184	74 0c		 je	 SHORT $LN21@InitShowAn
  00186	57		 push	 edi
  00187	8b c8		 mov	 ecx, eax
  00189	e8 00 00 00 00	 call	 ??0FSMState@@QAE@H@Z	; FSMState::FSMState
  0018e	8b d8		 mov	 ebx, eax
  00190	eb 02		 jmp	 SHORT $LN22@InitShowAn
$LN21@InitShowAn:
  00192	33 db		 xor	 ebx, ebx
$LN22@InitShowAn:
  00194	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1

; 349  : 	if( pState )

  00198	6a 06		 push	 6
  0019a	5e		 pop	 esi
  0019b	85 db		 test	 ebx, ebx
  0019d	74 0b		 je	 SHORT $LN3@InitShowAn

; 350  : 		pState->Add( SAT_UP_STOP,  SAT_STOP , DELAY_UP_STOP );

  0019f	6a 42		 push	 66			; 00000042H
  001a1	56		 push	 esi
  001a2	57		 push	 edi
  001a3	8b cb		 mov	 ecx, ebx
  001a5	e8 00 00 00 00	 call	 ?Add@FSMState@@QAEXHHH@Z ; FSMState::Add
$LN3@InitShowAn:

; 351  : 	m_ShowAniState.Add( pState );

  001aa	8b 4d f0	 mov	 ecx, DWORD PTR tv256[ebp]
  001ad	53		 push	 ebx
  001ae	e8 00 00 00 00	 call	 ?Add@FSMStateMgr@@QAEXPAVFSMState@@@Z ; FSMStateMgr::Add

; 352  : 
; 353  : 	pState = new FSMState(SAT_STOP);

  001b3	6a 38		 push	 56			; 00000038H
  001b5	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  001ba	59		 pop	 ecx
  001bb	89 45 ec	 mov	 DWORD PTR $T513519[ebp], eax
  001be	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
  001c1	85 c0		 test	 eax, eax
  001c3	74 0c		 je	 SHORT $LN23@InitShowAn
  001c5	56		 push	 esi
  001c6	8b c8		 mov	 ecx, eax
  001c8	e8 00 00 00 00	 call	 ??0FSMState@@QAE@H@Z	; FSMState::FSMState
  001cd	8b f0		 mov	 esi, eax
  001cf	eb 02		 jmp	 SHORT $LN24@InitShowAn
$LN23@InitShowAn:
  001d1	33 f6		 xor	 esi, esi
$LN24@InitShowAn:
  001d3	83 cf ff	 or	 edi, -1
  001d6	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi

; 354  : 	if( pState )

  001d9	85 f6		 test	 esi, esi
  001db	74 0c		 je	 SHORT $LN2@InitShowAn

; 355  : 		pState->Add( SAT_END,  SAT_END );

  001dd	57		 push	 edi
  001de	6a 07		 push	 7
  001e0	6a 07		 push	 7
  001e2	8b ce		 mov	 ecx, esi
  001e4	e8 00 00 00 00	 call	 ?Add@FSMState@@QAEXHHH@Z ; FSMState::Add
$LN2@InitShowAn:

; 356  : 	m_ShowAniState.Add( pState );

  001e9	8b 4d f0	 mov	 ecx, DWORD PTR tv256[ebp]
  001ec	56		 push	 esi
  001ed	e8 00 00 00 00	 call	 ?Add@FSMStateMgr@@QAEXPAVFSMState@@@Z ; FSMStateMgr::Add

; 357  : 
; 358  : 	pState = new FSMState(SAT_END);

  001f2	6a 38		 push	 56			; 00000038H
  001f4	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  001f9	59		 pop	 ecx
  001fa	89 45 ec	 mov	 DWORD PTR $T513523[ebp], eax
  001fd	6a 07		 push	 7
  001ff	59		 pop	 ecx
  00200	89 4d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ecx
  00203	85 c0		 test	 eax, eax
  00205	74 0c		 je	 SHORT $LN25@InitShowAn
  00207	51		 push	 ecx
  00208	8b c8		 mov	 ecx, eax
  0020a	e8 00 00 00 00	 call	 ??0FSMState@@QAE@H@Z	; FSMState::FSMState
  0020f	8b f0		 mov	 esi, eax
  00211	eb 02		 jmp	 SHORT $LN26@InitShowAn
$LN25@InitShowAn:
  00213	33 f6		 xor	 esi, esi
$LN26@InitShowAn:
  00215	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi

; 359  : 	if( pState )

  00218	85 f6		 test	 esi, esi
  0021a	74 18		 je	 SHORT $LN1@InitShowAn

; 360  : 	{
; 361  : 		pState->Add( SAT_NONE,  SAT_NONE );

  0021c	57		 push	 edi
  0021d	6a 00		 push	 0
  0021f	6a 00		 push	 0
  00221	8b ce		 mov	 ecx, esi
  00223	e8 00 00 00 00	 call	 ?Add@FSMState@@QAEXHHH@Z ; FSMState::Add

; 362  : 		pState->Add( SAT_START_ROUND, SAT_START_ROUND );

  00228	57		 push	 edi
  00229	6a 01		 push	 1
  0022b	6a 01		 push	 1
  0022d	8b ce		 mov	 ecx, esi
  0022f	e8 00 00 00 00	 call	 ?Add@FSMState@@QAEXHHH@Z ; FSMState::Add
$LN1@InitShowAn:

; 363  : 	}
; 364  : 	m_ShowAniState.Add( pState );

  00234	8b 4d f0	 mov	 ecx, DWORD PTR tv256[ebp]
  00237	56		 push	 esi
  00238	e8 00 00 00 00	 call	 ?Add@FSMStateMgr@@QAEXPAVFSMState@@@Z ; FSMStateMgr::Add

; 365  : }

  0023d	e8 00 00 00 00	 call	 __EH_epilog3
  00242	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ$0:
  00000	ff 75 ec	 push	 DWORD PTR $T513495[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__unwindfunclet$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ$1:
  0000a	ff 75 ec	 push	 DWORD PTR $T513499[ebp]
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	59		 pop	 ecx
  00013	c3		 ret	 0
__unwindfunclet$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ$2:
  00014	ff 75 ec	 push	 DWORD PTR $T513503[ebp]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001c	59		 pop	 ecx
  0001d	c3		 ret	 0
__unwindfunclet$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ$3:
  0001e	ff 75 ec	 push	 DWORD PTR $T513507[ebp]
  00021	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00026	59		 pop	 ecx
  00027	c3		 ret	 0
__unwindfunclet$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ$4:
  00028	ff 75 ec	 push	 DWORD PTR $T513511[ebp]
  0002b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00030	59		 pop	 ecx
  00031	c3		 ret	 0
__unwindfunclet$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ$5:
  00032	ff 75 ec	 push	 DWORD PTR $T513515[ebp]
  00035	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003a	59		 pop	 ecx
  0003b	c3		 ret	 0
__unwindfunclet$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ$6:
  0003c	ff 75 ec	 push	 DWORD PTR $T513519[ebp]
  0003f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00044	59		 pop	 ecx
  00045	c3		 ret	 0
__unwindfunclet$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ$7:
  00046	ff 75 ec	 push	 DWORD PTR $T513523[ebp]
  00049	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004e	59		 pop	 ecx
  0004f	c3		 ret	 0
__ehhandler$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ:
  00050	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00054	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00057	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0005a	33 c8		 xor	 ecx, eax
  0005c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00061	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ
  00066	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ ENDP	; TrainingFuncMenuWnd::InitShowAniState
PUBLIC	?ChangeShowAniState@TrainingFuncMenuWnd@@QAEXW4ShowAniType@1@@Z ; TrainingFuncMenuWnd::ChangeShowAniState
EXTRN	?ChangeState@FSMStateMgr@@QAEHH@Z:PROC		; FSMStateMgr::ChangeState
; Function compile flags: /Ogsp
;	COMDAT ?ChangeShowAniState@TrainingFuncMenuWnd@@QAEXW4ShowAniType@1@@Z
_TEXT	SEGMENT
_eShowAniType$ = 8					; size = 4
?ChangeShowAniState@TrainingFuncMenuWnd@@QAEXW4ShowAniType@1@@Z PROC ; TrainingFuncMenuWnd::ChangeShowAniState, COMDAT
; _this$ = ecx

; 368  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 369  : 	m_ShowAniState.ChangeState( (int) eShowAniType );

  00003	81 c1 a0 01 00
	00		 add	 ecx, 416		; 000001a0H

; 370  : }

  00009	5d		 pop	 ebp

; 369  : 	m_ShowAniState.ChangeState( (int) eShowAniType );

  0000a	e9 00 00 00 00	 jmp	 ?ChangeState@FSMStateMgr@@QAEHH@Z ; FSMStateMgr::ChangeState
?ChangeShowAniState@TrainingFuncMenuWnd@@QAEXW4ShowAniType@1@@Z ENDP ; TrainingFuncMenuWnd::ChangeShowAniState
_TEXT	ENDS
PUBLIC	?UpdateDefaultPos@TrainingFuncMenuWnd@@IAEXXZ	; TrainingFuncMenuWnd::UpdateDefaultPos
EXTRN	__imp_?GetHeight@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?GetWidth@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?IsMoving@ioMovingWnd@@QAE_NXZ:PROC
EXTRN	?IsDragMove@ioSP2GUIManager@@QBE_NK@Z:PROC	; ioSP2GUIManager::IsDragMove
; Function compile flags: /Ogsp
;	COMDAT ?UpdateDefaultPos@TrainingFuncMenuWnd@@IAEXXZ
_TEXT	SEGMENT
?UpdateDefaultPos@TrainingFuncMenuWnd@@IAEXXZ PROC	; TrainingFuncMenuWnd::UpdateDefaultPos, COMDAT
; _this$ = ecx

; 380  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 381  : 	if( g_GUIMgr.IsDragMove( m_dwID ) || IsMoving() )

  00003	ff 76 14	 push	 DWORD PTR [esi+20]
  00006	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  0000b	8b c8		 mov	 ecx, eax
  0000d	e8 00 00 00 00	 call	 ?IsDragMove@ioSP2GUIManager@@QBE_NK@Z ; ioSP2GUIManager::IsDragMove
  00012	84 c0		 test	 al, al
  00014	75 10		 jne	 SHORT $LN5@UpdateDefa
  00016	8b ce		 mov	 ecx, esi
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsMoving@ioMovingWnd@@QAE_NXZ
  0001e	84 c0		 test	 al, al
  00020	0f 84 96 00 00
	00		 je	 $LN1@UpdateDefa
$LN5@UpdateDefa:
  00026	57		 push	 edi

; 382  : 	{
; 383  : 		if( m_iDefaultX != GetXPos() )

  00027	8b ce		 mov	 ecx, esi
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetXPos@ioWnd@@QBEHXZ
  0002f	39 86 94 01 00
	00		 cmp	 DWORD PTR [esi+404], eax
  00035	74 3a		 je	 SHORT $LN3@UpdateDefa

; 384  : 		{
; 385  : 			if( COMPARE( GetXPos(), 0, (Setting::Width() - GetWidth() ) + 1 ))

  00037	8b ce		 mov	 ecx, esi
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetXPos@ioWnd@@QBEHXZ
  0003f	85 c0		 test	 eax, eax
  00041	78 2e		 js	 SHORT $LN3@UpdateDefa
  00043	8b ce		 mov	 ecx, esi
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetWidth@ioWnd@@QBEHXZ
  0004b	33 ff		 xor	 edi, edi
  0004d	47		 inc	 edi
  0004e	2b f8		 sub	 edi, eax
  00050	e8 00 00 00 00	 call	 ?Width@Setting@@SAHXZ	; Setting::Width
  00055	8b ce		 mov	 ecx, esi
  00057	03 f8		 add	 edi, eax
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetXPos@ioWnd@@QBEHXZ
  0005f	3b c7		 cmp	 eax, edi
  00061	7d 0e		 jge	 SHORT $LN3@UpdateDefa

; 386  : 				m_iDefaultX = GetXPos();

  00063	8b ce		 mov	 ecx, esi
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetXPos@ioWnd@@QBEHXZ
  0006b	89 86 94 01 00
	00		 mov	 DWORD PTR [esi+404], eax
$LN3@UpdateDefa:

; 387  : 		}
; 388  : 
; 389  : 		if( m_iDefaultY != GetYPos() )

  00071	8b ce		 mov	 ecx, esi
  00073	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetYPos@ioWnd@@QBEHXZ
  00079	39 86 98 01 00
	00		 cmp	 DWORD PTR [esi+408], eax
  0007f	74 3a		 je	 SHORT $LN9@UpdateDefa

; 390  : 		{
; 391  : 			if( COMPARE( GetYPos(), 0, (Setting::Height() - GetHeight() ) + 1 ))

  00081	8b ce		 mov	 ecx, esi
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetYPos@ioWnd@@QBEHXZ
  00089	85 c0		 test	 eax, eax
  0008b	78 2e		 js	 SHORT $LN9@UpdateDefa
  0008d	8b ce		 mov	 ecx, esi
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetHeight@ioWnd@@QBEHXZ
  00095	33 ff		 xor	 edi, edi
  00097	47		 inc	 edi
  00098	2b f8		 sub	 edi, eax
  0009a	e8 00 00 00 00	 call	 ?Height@Setting@@SAHXZ	; Setting::Height
  0009f	8b ce		 mov	 ecx, esi
  000a1	03 f8		 add	 edi, eax
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetYPos@ioWnd@@QBEHXZ
  000a9	3b c7		 cmp	 eax, edi
  000ab	7d 0e		 jge	 SHORT $LN9@UpdateDefa

; 392  : 				m_iDefaultY = GetYPos();

  000ad	8b ce		 mov	 ecx, esi
  000af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetYPos@ioWnd@@QBEHXZ
  000b5	89 86 98 01 00
	00		 mov	 DWORD PTR [esi+408], eax
$LN9@UpdateDefa:
  000bb	5f		 pop	 edi
$LN1@UpdateDefa:
  000bc	5e		 pop	 esi

; 393  : 		}
; 394  : 	}
; 395  : }

  000bd	c3		 ret	 0
?UpdateDefaultPos@TrainingFuncMenuWnd@@IAEXXZ ENDP	; TrainingFuncMenuWnd::UpdateDefaultPos
_TEXT	ENDS
PUBLIC	??_R0?AVTrainingFuncWnd@@@8			; TrainingFuncWnd `RTTI Type Descriptor'
PUBLIC	?ShowTrainingFuncWnd@TrainingFuncMenuWnd@@IAEXK@Z ; TrainingFuncMenuWnd::ShowTrainingFuncWnd
EXTRN	?ShowMenu@TrainingFuncWnd@@QAEXK@Z:PROC		; TrainingFuncWnd::ShowMenu
EXTRN	__imp_?HideWnd@ioWnd@@QAEXXZ:PROC
EXTRN	?ShowGuildHQMsg@TrainingFuncWnd@@QAEXXZ:PROC	; TrainingFuncWnd::ShowGuildHQMsg
EXTRN	?ShowHomeMsg@TrainingFuncWnd@@QAEXXZ:PROC	; TrainingFuncWnd::ShowHomeMsg
EXTRN	?ShowHeadquartersMsg@TrainingFuncWnd@@QAEXXZ:PROC ; TrainingFuncWnd::ShowHeadquartersMsg
EXTRN	__imp_?FindWnd@ioGUIManager@@QAEPAVioWnd@@K@Z:PROC
EXTRN	___RTDynamicCast:PROC
;	COMDAT ??_R0?AVTrainingFuncWnd@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\trainingfuncwnd.h
_DATA	SEGMENT
??_R0?AVTrainingFuncWnd@@@8 DD FLAT:??_7type_info@@6B@	; TrainingFuncWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTrainingFuncWnd@@', 00H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\trainingfuncmenuwnd.cpp
_DATA	ENDS
;	COMDAT ?ShowTrainingFuncWnd@TrainingFuncMenuWnd@@IAEXK@Z
_TEXT	SEGMENT
_dwID$ = 8						; size = 4
?ShowTrainingFuncWnd@TrainingFuncMenuWnd@@IAEXK@Z PROC	; TrainingFuncMenuWnd::ShowTrainingFuncWnd, COMDAT
; _this$ = ecx

; 424  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 425  : 	TrainingFuncWnd *pTrainingFuncWnd = dynamic_cast<TrainingFuncWnd*>( g_GUIMgr.FindWnd( TRAINING_FUNC_WND ) );

  00005	33 db		 xor	 ebx, ebx
  00007	53		 push	 ebx
  00008	68 00 00 00 00	 push	 OFFSET ??_R0?AVTrainingFuncWnd@@@8
  0000d	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWnd@@@8
  00012	53		 push	 ebx
  00013	68 88 18 00 00	 push	 6280			; 00001888H
  00018	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  0001d	8b c8		 mov	 ecx, eax
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindWnd@ioGUIManager@@QAEPAVioWnd@@K@Z
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ___RTDynamicCast
  0002b	8b f0		 mov	 esi, eax
  0002d	83 c4 14	 add	 esp, 20			; 00000014H

; 426  : 	if( pTrainingFuncWnd )

  00030	3b f3		 cmp	 esi, ebx
  00032	74 4d		 je	 SHORT $LN1@ShowTraini

; 427  : 	{
; 428  : 		if( dwID == ID_HEAD_QUATER_BTN )

  00034	8b 45 08	 mov	 eax, DWORD PTR _dwID$[ebp]

; 429  : 		{
; 430  : 			pTrainingFuncWnd->ShowHeadquartersMsg();

  00037	8b ce		 mov	 ecx, esi
  00039	83 f8 04	 cmp	 eax, 4
  0003c	75 07		 jne	 SHORT $LN8@ShowTraini
  0003e	e8 00 00 00 00	 call	 ?ShowHeadquartersMsg@TrainingFuncWnd@@QAEXXZ ; TrainingFuncWnd::ShowHeadquartersMsg

; 431  : 			pTrainingFuncWnd->ResetCurrMenu();

  00043	eb 16		 jmp	 SHORT $LN23@ShowTraini
$LN8@ShowTraini:

; 432  : 		}
; 433  : 		else if( dwID == ID_HOME_BTN )

  00045	83 f8 05	 cmp	 eax, 5
  00048	75 07		 jne	 SHORT $LN6@ShowTraini

; 434  : 		{
; 435  : 			pTrainingFuncWnd->ShowHomeMsg();

  0004a	e8 00 00 00 00	 call	 ?ShowHomeMsg@TrainingFuncWnd@@QAEXXZ ; TrainingFuncWnd::ShowHomeMsg

; 436  : 			pTrainingFuncWnd->ResetCurrMenu();

  0004f	eb 0a		 jmp	 SHORT $LN23@ShowTraini
$LN6@ShowTraini:

; 437  : 		}
; 438  : 		else if( dwID == ID_GUILD_HQ_BTN )

  00051	83 f8 06	 cmp	 eax, 6
  00054	75 0d		 jne	 SHORT $LN4@ShowTraini

; 439  : 		{
; 440  : 			pTrainingFuncWnd->ShowGuildHQMsg();

  00056	e8 00 00 00 00	 call	 ?ShowGuildHQMsg@TrainingFuncWnd@@QAEXXZ ; TrainingFuncWnd::ShowGuildHQMsg
$LN23@ShowTraini:

; 441  : 			pTrainingFuncWnd->ResetCurrMenu();

  0005b	89 9e 90 01 00
	00		 mov	 DWORD PTR [esi+400], ebx

; 442  : 		}
; 443  : 		else

  00061	eb 1e		 jmp	 SHORT $LN1@ShowTraini
$LN4@ShowTraini:
  00063	57		 push	 edi

; 444  : 		{
; 445  : 			if( pTrainingFuncWnd->GetCurrMenu() == dwID )

  00064	39 86 90 01 00
	00		 cmp	 DWORD PTR [esi+400], eax
  0006a	75 0e		 jne	 SHORT $LN2@ShowTraini

; 446  : 			{
; 447  : 				pTrainingFuncWnd->HideWnd();

  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HideWnd@ioWnd@@QAEXXZ

; 448  : 				pTrainingFuncWnd->ResetCurrMenu();

  00072	89 9e 90 01 00
	00		 mov	 DWORD PTR [esi+400], ebx

; 449  : 			}
; 450  : 			else

  00078	eb 06		 jmp	 SHORT $LN22@ShowTraini
$LN2@ShowTraini:

; 451  : 				pTrainingFuncWnd->ShowMenu( dwID );

  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ?ShowMenu@TrainingFuncWnd@@QAEXK@Z ; TrainingFuncWnd::ShowMenu
$LN22@ShowTraini:
  00080	5f		 pop	 edi
$LN1@ShowTraini:
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx

; 452  : 		}
; 453  : 	}
; 454  : }

  00083	5d		 pop	 ebp
  00084	c2 04 00	 ret	 4
?ShowTrainingFuncWnd@TrainingFuncMenuWnd@@IAEXK@Z ENDP	; TrainingFuncMenuWnd::ShowTrainingFuncWnd
_TEXT	ENDS
PUBLIC	??0ETCITEMSLOT@ioUserEtcItem@@QAE@XZ		; ioUserEtcItem::ETCITEMSLOT::ETCITEMSLOT
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iouseretcitem.h
;	COMDAT ??0ETCITEMSLOT@ioUserEtcItem@@QAE@XZ
_TEXT	SEGMENT
??0ETCITEMSLOT@ioUserEtcItem@@QAE@XZ PROC		; ioUserEtcItem::ETCITEMSLOT::ETCITEMSLOT, COMDAT
; _this$ = ecx

; 22   : 		ETCITEMSLOT()

  00000	8b c1		 mov	 eax, ecx

; 23   : 		{
; 24   : 			m_iType   = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 25   : 			m_iValue1 = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 26   : 			m_iValue2 = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 27   : 		}

  0000c	c3		 ret	 0
??0ETCITEMSLOT@ioUserEtcItem@@QAE@XZ ENDP		; ioUserEtcItem::ETCITEMSLOT::ETCITEMSLOT
_TEXT	ENDS
PUBLIC	?GetCurState@FSMStateMgr@@QBEHXZ		; FSMStateMgr::GetCurState
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\fsmstatemgr.h
;	COMDAT ?GetCurState@FSMStateMgr@@QBEHXZ
_TEXT	SEGMENT
?GetCurState@FSMStateMgr@@QBEHXZ PROC			; FSMStateMgr::GetCurState, COMDAT
; _this$ = ecx

; 52   : 	inline int GetCurState() const { return m_iCurState; }

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetCurState@FSMStateMgr@@QBEHXZ ENDP			; FSMStateMgr::GetCurState
_TEXT	ENDS
PUBLIC	?GetCurTime@FSMStateMgr@@QBEKXZ			; FSMStateMgr::GetCurTime
; Function compile flags: /Ogsp
;	COMDAT ?GetCurTime@FSMStateMgr@@QBEKXZ
_TEXT	SEGMENT
?GetCurTime@FSMStateMgr@@QBEKXZ PROC			; FSMStateMgr::GetCurTime, COMDAT
; _this$ = ecx

; 55   : 	inline DWORD GetCurTime() const { return m_dwCurTime; }

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00003	c3		 ret	 0
?GetCurTime@FSMStateMgr@@QBEKXZ ENDP			; FSMStateMgr::GetCurTime
_TEXT	ENDS
PUBLIC	?GetDelay@FSMStateMgr@@QBEHXZ			; FSMStateMgr::GetDelay
; Function compile flags: /Ogsp
;	COMDAT ?GetDelay@FSMStateMgr@@QBEHXZ
_TEXT	SEGMENT
?GetDelay@FSMStateMgr@@QBEHXZ PROC			; FSMStateMgr::GetDelay, COMDAT
; _this$ = ecx

; 61   : 	inline int GetDelay() const { return m_iCurDelay; }

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00003	c3		 ret	 0
?GetDelay@FSMStateMgr@@QBEHXZ ENDP			; FSMStateMgr::GetDelay
_TEXT	ENDS
PUBLIC	?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ	; ioMyInfo::GetPublicID
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomyinfo.h
;	COMDAT ?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ
_TEXT	SEGMENT
?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ PROC	; ioMyInfo::GetPublicID, COMDAT
; _this$ = ecx

; 517  : 	const ioHashString& GetPublicID() const { return m_user_data.m_public_id; }    

  00000	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  00003	c3		 ret	 0
?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ ENDP	; ioMyInfo::GetPublicID
_TEXT	ENDS
PUBLIC	?GetUserEtcItem@ioMyInfo@@QAEPAVioUserEtcItem@@XZ ; ioMyInfo::GetUserEtcItem
; Function compile flags: /Ogsp
;	COMDAT ?GetUserEtcItem@ioMyInfo@@QAEPAVioUserEtcItem@@XZ
_TEXT	SEGMENT
?GetUserEtcItem@ioMyInfo@@QAEPAVioUserEtcItem@@XZ PROC	; ioMyInfo::GetUserEtcItem, COMDAT
; _this$ = ecx

; 635  : 	ioUserEtcItem* GetUserEtcItem() { return &m_UserEtcItem; }

  00000	8d 81 44 01 00
	00		 lea	 eax, DWORD PTR [ecx+324]
  00006	c3		 ret	 0
?GetUserEtcItem@ioMyInfo@@QAEPAVioUserEtcItem@@XZ ENDP	; ioMyInfo::GetUserEtcItem
_TEXT	ENDS
PUBLIC	?GetGuildRoomOpen@ioGuildData@@QAEHXZ		; ioGuildData::GetGuildRoomOpen
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.h
;	COMDAT ?GetGuildRoomOpen@ioGuildData@@QAEHXZ
_TEXT	SEGMENT
?GetGuildRoomOpen@ioGuildData@@QAEHXZ PROC		; ioGuildData::GetGuildRoomOpen, COMDAT
; _this$ = ecx

; 106  : 	inline BOOL GetGuildRoomOpen(){ return m_bGuildRoomOpen; }

  00000	8b 41 54	 mov	 eax, DWORD PTR [ecx+84]
  00003	c3		 ret	 0
?GetGuildRoomOpen@ioGuildData@@QAEHXZ ENDP		; ioGuildData::GetGuildRoomOpen
_TEXT	ENDS
PUBLIC	?GetGuildIndex@ioGuildInfo@@QAEKXZ		; ioGuildInfo::GetGuildIndex
; Function compile flags: /Ogsp
;	COMDAT ?GetGuildIndex@ioGuildInfo@@QAEKXZ
_TEXT	SEGMENT
?GetGuildIndex@ioGuildInfo@@QAEKXZ PROC			; ioGuildInfo::GetGuildIndex, COMDAT
; _this$ = ecx

; 302  : 	inline DWORD GetGuildIndex(){ return m_dwGuildIndex; }

  00000	8b 81 90 00 00
	00		 mov	 eax, DWORD PTR [ecx+144]
  00006	c3		 ret	 0
?GetGuildIndex@ioGuildInfo@@QAEKXZ ENDP			; ioGuildInfo::GetGuildIndex
_TEXT	ENDS
PUBLIC	?GetCreator@ioPlayMode@@QBEPAVioPlayStage@@XZ	; ioPlayMode::GetCreator
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioplaymode.h
;	COMDAT ?GetCreator@ioPlayMode@@QBEPAVioPlayStage@@XZ
_TEXT	SEGMENT
?GetCreator@ioPlayMode@@QBEPAVioPlayStage@@XZ PROC	; ioPlayMode::GetCreator, COMDAT
; _this$ = ecx

; 631  : 	inline ioPlayStage* GetCreator() const { return m_pCreator; }

  00000	8b 41 34	 mov	 eax, DWORD PTR [ecx+52]
  00003	c3		 ret	 0
?GetCreator@ioPlayMode@@QBEPAVioPlayStage@@XZ ENDP	; ioPlayMode::GetCreator
_TEXT	ENDS
PUBLIC	?GetMasterName@ioHeadquartersMode@@QAEAAVioHashString@@XZ ; ioHeadquartersMode::GetMasterName
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioheadquartersmode.h
;	COMDAT ?GetMasterName@ioHeadquartersMode@@QAEAAVioHashString@@XZ
_TEXT	SEGMENT
?GetMasterName@ioHeadquartersMode@@QAEAAVioHashString@@XZ PROC ; ioHeadquartersMode::GetMasterName, COMDAT
; _this$ = ecx

; 193  : 	inline ioHashString &GetMasterName(){ return m_szMasterName; }

  00000	8d 81 f4 04 00
	00		 lea	 eax, DWORD PTR [ecx+1268]
  00006	c3		 ret	 0
?GetMasterName@ioHeadquartersMode@@QAEAAVioHashString@@XZ ENDP ; ioHeadquartersMode::GetMasterName
_TEXT	ENDS
PUBLIC	?IsSkipUIByBlind@ioSP2GUIManager@@QBE_NXZ	; ioSP2GUIManager::IsSkipUIByBlind
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\iosp2guimanager.h
;	COMDAT ?IsSkipUIByBlind@ioSP2GUIManager@@QBE_NXZ
_TEXT	SEGMENT
?IsSkipUIByBlind@ioSP2GUIManager@@QBE_NXZ PROC		; ioSP2GUIManager::IsSkipUIByBlind, COMDAT
; _this$ = ecx

; 236  : 	inline bool IsSkipUIByBlind() const { return m_bSkipUIByBlind; }	

  00000	8a 81 e0 04 00
	00		 mov	 al, BYTE PTR [ecx+1248]
  00006	c3		 ret	 0
?IsSkipUIByBlind@ioSP2GUIManager@@QBE_NXZ ENDP		; ioSP2GUIManager::IsSkipUIByBlind
_TEXT	ENDS
PUBLIC	?DecryptValueToPool@?$CEncrypt@W4ModeType@@@@QAEXPAW4ModeType@@@Z ; CEncrypt<enum ModeType>::DecryptValueToPool
EXTRN	?DecryptByte@ccddaabb@@QBEXPBDPADH@Z:PROC	; ccddaabb::DecryptByte
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
;	COMDAT ?DecryptValueToPool@?$CEncrypt@W4ModeType@@@@QAEXPAW4ModeType@@@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
?DecryptValueToPool@?$CEncrypt@W4ModeType@@@@QAEXPAW4ModeType@@@Z PROC ; CEncrypt<enum ModeType>::DecryptValueToPool, COMDAT
; _this$ = ecx

; 3039 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 3040 : 		m_RC5.DecryptByte( m_MemPool, m_TempMem, sizeof(ModeType) );

  00004	8d 71 28	 lea	 esi, DWORD PTR [ecx+40]
  00007	6a 04		 push	 4
  00009	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  0000c	56		 push	 esi
  0000d	50		 push	 eax
  0000e	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00011	e8 00 00 00 00	 call	 ?DecryptByte@ccddaabb@@QBEXPBDPADH@Z ; ccddaabb::DecryptByte

; 3041 : 		*value = *((ModeType*)m_TempMem);

  00016	8b 06		 mov	 eax, DWORD PTR [esi]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _value$[ebp]
  0001b	89 01		 mov	 DWORD PTR [ecx], eax
  0001d	5e		 pop	 esi

; 3042 : 	}

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?DecryptValueToPool@?$CEncrypt@W4ModeType@@@@QAEXPAW4ModeType@@@Z ENDP ; CEncrypt<enum ModeType>::DecryptValueToPool
_TEXT	ENDS
PUBLIC	??0TrainingFuncMenuWnd@@QAE@XZ			; TrainingFuncMenuWnd::TrainingFuncMenuWnd
EXTRN	??0FSMStateMgr@@QAE@XZ:PROC			; FSMStateMgr::FSMStateMgr
EXTRN	__imp_??0ioMovingWnd@@QAE@XZ:PROC
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\trainingfuncmenuwnd.cpp
xdata$x	SEGMENT
__unwindtable$??0TrainingFuncMenuWnd@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TrainingFuncMenuWnd@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0TrainingFuncMenuWnd@@QAE@XZ$1
__ehfuncinfo$??0TrainingFuncMenuWnd@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0TrainingFuncMenuWnd@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0TrainingFuncMenuWnd@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0TrainingFuncMenuWnd@@QAE@XZ PROC			; TrainingFuncMenuWnd::TrainingFuncMenuWnd, COMDAT
; _this$ = ecx

; 15   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0TrainingFuncMenuWnd@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioMovingWnd@@QAE@XZ
  00017	33 db		 xor	 ebx, ebx
  00019	8d 8e a0 01 00
	00		 lea	 ecx, DWORD PTR [esi+416]
  0001f	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00022	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7TrainingFuncMenuWnd@@6B@
  00028	e8 00 00 00 00	 call	 ??0FSMStateMgr@@QAE@XZ	; FSMStateMgr::FSMStateMgr

; 16   : 	m_iDefaultX			= 0;
; 17   : 	m_iDefaultY			= 0;
; 18   : 
; 19   : 	m_bChangeResolution	= false;
; 20   : 	m_bStartAni			= false;
; 21   : 
; 22   : 	m_pCurrMode			= NULL;
; 23   : 
; 24   : 	InitShowAniState();

  0002d	8b ce		 mov	 ecx, esi
  0002f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00033	89 9e 94 01 00
	00		 mov	 DWORD PTR [esi+404], ebx
  00039	89 9e 98 01 00
	00		 mov	 DWORD PTR [esi+408], ebx
  0003f	66 89 9e 9c 01
	00 00		 mov	 WORD PTR [esi+412], bx
  00046	89 9e 90 01 00
	00		 mov	 DWORD PTR [esi+400], ebx
  0004c	e8 00 00 00 00	 call	 ?InitShowAniState@TrainingFuncMenuWnd@@QAEXXZ ; TrainingFuncMenuWnd::InitShowAniState

; 25   : }

  00051	8b c6		 mov	 eax, esi
  00053	e8 00 00 00 00	 call	 __EH_epilog3
  00058	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TrainingFuncMenuWnd@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioMovingWnd@@UAE@XZ
__unwindfunclet$??0TrainingFuncMenuWnd@@QAE@XZ$1:
  00009	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	81 c1 a0 01 00
	00		 add	 ecx, 416		; 000001a0H
  00012	e9 00 00 00 00	 jmp	 ??1FSMStateMgr@@UAE@XZ	; FSMStateMgr::~FSMStateMgr
__ehhandler$??0TrainingFuncMenuWnd@@QAE@XZ:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0TrainingFuncMenuWnd@@QAE@XZ
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0TrainingFuncMenuWnd@@QAE@XZ ENDP			; TrainingFuncMenuWnd::TrainingFuncMenuWnd
; Function compile flags: /Ogsp
;	COMDAT ??_GTrainingFuncMenuWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GTrainingFuncMenuWnd@@UAEPAXI@Z PROC			; TrainingFuncMenuWnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1TrainingFuncMenuWnd@@UAE@XZ ; TrainingFuncMenuWnd::~TrainingFuncMenuWnd
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GTrainingFuncMenuWnd@@UAEPAXI@Z ENDP			; TrainingFuncMenuWnd::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_R0?AVHomeEtcItemNeedPopup@@@8		; HomeEtcItemNeedPopup `RTTI Type Descriptor'
PUBLIC	??_C@_0CB@FKEPMGML@TrainingFuncMenuWnd?3?3iwm_command@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_R0?AVGuildHQEtcItemNeedPopup@@@8		; GuildHQEtcItemNeedPopup `RTTI Type Descriptor'
EXTRN	__imp_?ShowWnd@ioWnd@@QAEXXZ:PROC
EXTRN	?SetMsgBox@ioSP2GUIManager@@QAAXHPAVioWnd@@PBDZZ:PROC ; ioSP2GUIManager::SetMsgBox
EXTRN	__imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z:PROC
EXTRN	__imp_?GetSingleton@ioStringManager@@SAAAV1@XZ:PROC
EXTRN	?GetEtcItem@ioUserEtcItem@@QAE_NHAAUETCITEMSLOT@1@@Z:PROC ; ioUserEtcItem::GetEtcItem
EXTRN	?SetType@GuildHQEtcItemNeedPopup@@QAEXW4PopUpType@1@@Z:PROC ; GuildHQEtcItemNeedPopup::SetType
EXTRN	__imp_??8ioHashString@@QBE_NABV0@@Z:PROC
EXTRN	?GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ:PROC ; ioGuildData::GetGuildMasterName
EXTRN	?GetSingleton@ioMyInfo@@SAAAV1@XZ:PROC		; ioMyInfo::GetSingleton
EXTRN	?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z:PROC ; ioGuildInfo::GetGuildData
EXTRN	?GetSingleton@ioGuildInfo@@SAAAV1@XZ:PROC	; ioGuildInfo::GetSingleton
EXTRN	__imp_?GetID@ioWnd@@QBEKXZ:PROC
;	COMDAT ??_R0?AVHomeEtcItemNeedPopup@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iouseretcitem.h
_DATA	SEGMENT
??_R0?AVHomeEtcItemNeedPopup@@@8 DD FLAT:??_7type_info@@6B@ ; HomeEtcItemNeedPopup `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVHomeEtcItemNeedPopup@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_0CB@FKEPMGML@TrainingFuncMenuWnd?3?3iwm_command@
CONST	SEGMENT
??_C@_0CB@FKEPMGML@TrainingFuncMenuWnd?3?3iwm_command@ DB 'TrainingFuncMe'
	DB	'nuWnd::iwm_command', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_R0?AVGuildHQEtcItemNeedPopup@@@8
_DATA	SEGMENT
??_R0?AVGuildHQEtcItemNeedPopup@@@8 DD FLAT:??_7type_info@@6B@ ; GuildHQEtcItemNeedPopup `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGuildHQEtcItemNeedPopup@@', 00H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\trainingfuncmenuwnd.cpp
_DATA	ENDS
;	COMDAT ?iwm_command@TrainingFuncMenuWnd@@UAEXPAVioWnd@@HK@Z
_TEXT	SEGMENT
_Slot$513006 = -12					; size = 12
_pWnd$ = 8						; size = 4
_cmd$ = 12						; size = 4
_param$ = 16						; size = 4
?iwm_command@TrainingFuncMenuWnd@@UAEXPAVioWnd@@HK@Z PROC ; TrainingFuncMenuWnd::iwm_command, COMDAT
; _this$ = ecx

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 63   : 	DWORD dwID = pWnd->GetID();

  00009	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  0000c	57		 push	 edi
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetID@ioWnd@@QBEKXZ

; 64   : 	switch( dwID )

  00013	48		 dec	 eax
  00014	0f 84 86 01 00
	00		 je	 $LN24@iwm_comman
  0001a	48		 dec	 eax
  0001b	0f 84 75 01 00
	00		 je	 $LN22@iwm_comman
  00021	48		 dec	 eax
  00022	0f 84 64 01 00
	00		 je	 $LN20@iwm_comman
  00028	48		 dec	 eax
  00029	0f 84 53 01 00
	00		 je	 $LN18@iwm_comman
  0002f	48		 dec	 eax
  00030	0f 84 05 01 00
	00		 je	 $LN16@iwm_comman
  00036	48		 dec	 eax
  00037	0f 85 72 01 00
	00		 jne	 $LN23@iwm_comman

; 102  : 	case ID_GUILD_HQ_BTN:
; 103  : 		if( cmd == IOBN_BTNUP )

  0003d	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  00041	75 07		 jne	 SHORT $LN10@iwm_comman

; 104  : 		{
; 105  : 			ShowTrainingFuncWnd( ID_GUILD_HQ_BTN );

  00043	6a 06		 push	 6
  00045	e9 5e 01 00 00	 jmp	 $LN37@iwm_comman
$LN10@iwm_comman:

; 106  : 		}
; 107  : 		else if( cmd == IOEX_BTNUP )

  0004a	83 7d 0c 16	 cmp	 DWORD PTR _cmd$[ebp], 22 ; 00000016H
  0004e	0f 85 5b 01 00
	00		 jne	 $LN23@iwm_comman

; 108  : 		{
; 109  : 			ioGuildData *pGuildData = g_GuildInfo.GetGuildData( g_GuildInfo.GetGuildIndex() );

  00054	e8 00 00 00 00	 call	 ?GetSingleton@ioGuildInfo@@SAAAV1@XZ ; ioGuildInfo::GetSingleton
  00059	8b 80 90 00 00
	00		 mov	 eax, DWORD PTR [eax+144]
  0005f	33 f6		 xor	 esi, esi
  00061	56		 push	 esi
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ?GetSingleton@ioGuildInfo@@SAAAV1@XZ ; ioGuildInfo::GetSingleton
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData
  0006f	8b f8		 mov	 edi, eax

; 110  : 			if( pGuildData )

  00071	3b fe		 cmp	 edi, esi
  00073	0f 84 94 00 00
	00		 je	 $LN7@iwm_comman

; 111  : 			{				
; 112  : 				if( pGuildData->GetGuildMasterName() == g_MyInfo.GetPublicID() )

  00079	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  0007e	83 c0 1c	 add	 eax, 28			; 0000001cH
  00081	50		 push	 eax
  00082	8b cf		 mov	 ecx, edi
  00084	e8 00 00 00 00	 call	 ?GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ ; ioGuildData::GetGuildMasterName
  00089	8b c8		 mov	 ecx, eax
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z

; 113  : 				{
; 114  : 					GuildHQEtcItemNeedPopup* pWnd = dynamic_cast<GuildHQEtcItemNeedPopup*>( g_GUIMgr.FindWnd( GUILD_HQ_NEED_POPUP ) );

  00091	56		 push	 esi
  00092	84 c0		 test	 al, al
  00094	74 73		 je	 SHORT $LN6@iwm_comman
  00096	68 00 00 00 00	 push	 OFFSET ??_R0?AVGuildHQEtcItemNeedPopup@@@8
  0009b	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWnd@@@8
  000a0	56		 push	 esi
  000a1	68 8c 18 00 00	 push	 6284			; 0000188cH
  000a6	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  000ab	8b c8		 mov	 ecx, eax
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindWnd@ioGUIManager@@QAEPAVioWnd@@K@Z
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ___RTDynamicCast
  000b9	8b f8		 mov	 edi, eax
  000bb	83 c4 14	 add	 esp, 20			; 00000014H

; 115  : 					if( pWnd )

  000be	3b fe		 cmp	 edi, esi
  000c0	0f 84 e9 00 00
	00		 je	 $LN23@iwm_comman

; 116  : 					{
; 117  : 						pWnd->SetType( GuildHQEtcItemNeedPopup::PUT_NEED_HQ );

  000c6	56		 push	 esi
  000c7	8b cf		 mov	 ecx, edi
  000c9	e8 00 00 00 00	 call	 ?SetType@GuildHQEtcItemNeedPopup@@QAEXW4PopUpType@1@@Z ; GuildHQEtcItemNeedPopup::SetType

; 118  : 						ioUserEtcItem* pInven = g_MyInfo.GetUserEtcItem();

  000ce	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  000d3	05 44 01 00 00	 add	 eax, 324		; 00000144H

; 119  : 						if( pInven )

  000d8	74 2b		 je	 SHORT $LN3@iwm_comman

; 120  : 						{
; 121  : 							ioUserEtcItem::ETCITEMSLOT Slot;
; 122  : 							if( pInven->GetEtcItem( ioEtcItem::EIT_ETC_CREATE_GUILD_HQ, Slot ) && Slot.m_iValue1 > 0 )

  000da	8d 4d f4	 lea	 ecx, DWORD PTR _Slot$513006[ebp]
  000dd	51		 push	 ecx
  000de	68 39 e4 2d 00	 push	 3007545			; 002de439H
  000e3	8b c8		 mov	 ecx, eax
  000e5	89 75 f4	 mov	 DWORD PTR _Slot$513006[ebp], esi
  000e8	89 75 f8	 mov	 DWORD PTR _Slot$513006[ebp+4], esi
  000eb	89 75 fc	 mov	 DWORD PTR _Slot$513006[ebp+8], esi
  000ee	e8 00 00 00 00	 call	 ?GetEtcItem@ioUserEtcItem@@QAE_NHAAUETCITEMSLOT@1@@Z ; ioUserEtcItem::GetEtcItem
  000f3	84 c0		 test	 al, al
  000f5	74 0e		 je	 SHORT $LN3@iwm_comman
  000f7	39 75 f8	 cmp	 DWORD PTR _Slot$513006[ebp+4], esi
  000fa	7e 09		 jle	 SHORT $LN3@iwm_comman

; 123  : 							{
; 124  : 								pWnd->SetType( GuildHQEtcItemNeedPopup::PUT_USE_HQ );

  000fc	6a 01		 push	 1
  000fe	8b cf		 mov	 ecx, edi
  00100	e8 00 00 00 00	 call	 ?SetType@GuildHQEtcItemNeedPopup@@QAEXW4PopUpType@1@@Z ; GuildHQEtcItemNeedPopup::SetType
$LN3@iwm_comman:

; 125  : 							}
; 126  : 						}
; 127  : 						pWnd->ShowWnd();

  00105	8b cf		 mov	 ecx, edi

; 128  : 					}
; 129  : 				}
; 130  : 				else

  00107	eb 71		 jmp	 SHORT $LN38@iwm_comman
$LN6@iwm_comman:

; 131  : 				{
; 132  : 					g_GUIMgr.SetMsgBox( MB_OK, NULL, STR(1) );

  00109	6a 01		 push	 1

; 133  : 				}
; 134  : 			}
; 135  : 			else

  0010b	eb 03		 jmp	 SHORT $LN39@iwm_comman
$LN7@iwm_comman:

; 136  : 			{
; 137  : 				g_GUIMgr.SetMsgBox( MB_OK, NULL, STR(2) );

  0010d	56		 push	 esi
  0010e	6a 02		 push	 2
$LN39@iwm_comman:
  00110	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00115	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@FKEPMGML@TrainingFuncMenuWnd?3?3iwm_command@
  0011a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioStringManager@@SAAAV1@XZ
  00120	8b c8		 mov	 ecx, eax
  00122	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  00128	50		 push	 eax
  00129	56		 push	 esi
  0012a	56		 push	 esi
  0012b	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  00130	50		 push	 eax
  00131	e8 00 00 00 00	 call	 ?SetMsgBox@ioSP2GUIManager@@QAAXHPAVioWnd@@PBDZZ ; ioSP2GUIManager::SetMsgBox
  00136	83 c4 10	 add	 esp, 16			; 00000010H

; 138  : 			}
; 139  : 			
; 140  : 		}
; 141  : 		break;

  00139	eb 74		 jmp	 SHORT $LN23@iwm_comman
$LN16@iwm_comman:

; 90   : 	case ID_HOME_BTN:
; 91   : 		if( cmd == IOBN_BTNUP )

  0013b	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  0013f	75 04		 jne	 SHORT $LN15@iwm_comman

; 92   : 		{
; 93   : 			ShowTrainingFuncWnd( ID_HOME_BTN );

  00141	6a 05		 push	 5
  00143	eb 63		 jmp	 SHORT $LN37@iwm_comman
$LN15@iwm_comman:

; 94   : 		}
; 95   : 		else if( cmd == IOEX_BTNUP )

  00145	83 7d 0c 16	 cmp	 DWORD PTR _cmd$[ebp], 22 ; 00000016H
  00149	75 64		 jne	 SHORT $LN23@iwm_comman

; 96   : 		{
; 97   : 			HomeEtcItemNeedPopup* pWnd = dynamic_cast<HomeEtcItemNeedPopup*>( g_GUIMgr.FindWnd( HOUSE_NEED_POPUP ) );

  0014b	33 f6		 xor	 esi, esi
  0014d	56		 push	 esi
  0014e	68 00 00 00 00	 push	 OFFSET ??_R0?AVHomeEtcItemNeedPopup@@@8
  00153	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWnd@@@8
  00158	56		 push	 esi
  00159	68 92 18 00 00	 push	 6290			; 00001892H
  0015e	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  00163	8b c8		 mov	 ecx, eax
  00165	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindWnd@ioGUIManager@@QAEPAVioWnd@@K@Z
  0016b	50		 push	 eax
  0016c	e8 00 00 00 00	 call	 ___RTDynamicCast
  00171	83 c4 14	 add	 esp, 20			; 00000014H

; 98   : 			if( pWnd )

  00174	3b c6		 cmp	 eax, esi
  00176	74 37		 je	 SHORT $LN23@iwm_comman

; 99   : 				pWnd->ShowWnd();

  00178	8b c8		 mov	 ecx, eax
$LN38@iwm_comman:
  0017a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ShowWnd@ioWnd@@QAEXXZ

; 100  : 		}
; 101  : 		break;

  00180	eb 2d		 jmp	 SHORT $LN23@iwm_comman
$LN18@iwm_comman:

; 84   : 	case ID_HEAD_QUATER_BTN:
; 85   : 		if( cmd == IOBN_BTNUP )

  00182	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  00186	75 27		 jne	 SHORT $LN23@iwm_comman

; 86   : 		{
; 87   : 			ShowTrainingFuncWnd( ID_HEAD_QUATER_BTN );

  00188	6a 04		 push	 4

; 88   : 		}
; 89   : 		break;

  0018a	eb 1c		 jmp	 SHORT $LN37@iwm_comman
$LN20@iwm_comman:

; 78   : 	case ID_TRADE_BTN:
; 79   : 		if( cmd == IOBN_BTNUP )

  0018c	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  00190	75 1d		 jne	 SHORT $LN23@iwm_comman

; 80   : 		{
; 81   : 			ShowTrainingFuncWnd( TrainingFuncWnd::ID_TRADE );

  00192	6a 0f		 push	 15			; 0000000fH

; 82   : 		}
; 83   : 		break;

  00194	eb 12		 jmp	 SHORT $LN37@iwm_comman
$LN22@iwm_comman:

; 70   : 		}
; 71   : 		break;
; 72   : 	case ID_PLAZA_BTN:
; 73   : 		if( cmd == IOBN_BTNUP )

  00196	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  0019a	75 13		 jne	 SHORT $LN23@iwm_comman

; 74   : 		{
; 75   : 			ShowTrainingFuncWnd( TrainingFuncWnd::ID_PLAZA );

  0019c	6a 0c		 push	 12			; 0000000cH

; 76   : 		}
; 77   : 		break;

  0019e	eb 08		 jmp	 SHORT $LN37@iwm_comman
$LN24@iwm_comman:

; 65   : 	{
; 66   : 	case ID_BATTLE_BTN:
; 67   : 		if( cmd == IOBN_BTNUP )

  001a0	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  001a4	75 09		 jne	 SHORT $LN23@iwm_comman

; 68   : 		{
; 69   : 			ShowTrainingFuncWnd( TrainingFuncWnd::ID_BATTLE );

  001a6	6a 0a		 push	 10			; 0000000aH
$LN37@iwm_comman:
  001a8	8b ce		 mov	 ecx, esi
  001aa	e8 00 00 00 00	 call	 ?ShowTrainingFuncWnd@TrainingFuncMenuWnd@@IAEXK@Z ; TrainingFuncMenuWnd::ShowTrainingFuncWnd
$LN23@iwm_comman:
  001af	5f		 pop	 edi
  001b0	5e		 pop	 esi

; 142  : 	}
; 143  : }

  001b1	c9		 leave
  001b2	c2 0c 00	 ret	 12			; 0000000cH
?iwm_command@TrainingFuncMenuWnd@@UAEXPAVioWnd@@HK@Z ENDP ; TrainingFuncMenuWnd::iwm_command
_TEXT	ENDS
PUBLIC	?GetCurState@TrainingFuncMenuWnd@@QBEHXZ	; TrainingFuncMenuWnd::GetCurState
; Function compile flags: /Ogsp
;	COMDAT ?GetCurState@TrainingFuncMenuWnd@@QBEHXZ
_TEXT	SEGMENT
?GetCurState@TrainingFuncMenuWnd@@QBEHXZ PROC		; TrainingFuncMenuWnd::GetCurState, COMDAT
; _this$ = ecx

; 374  : 	return m_ShowAniState.GetCurState();

  00000	8b 81 a4 01 00
	00		 mov	 eax, DWORD PTR [ecx+420]

; 375  : }

  00006	c3		 ret	 0
?GetCurState@TrainingFuncMenuWnd@@QBEHXZ ENDP		; TrainingFuncMenuWnd::GetCurState
_TEXT	ENDS
PUBLIC	?SkipRender@TrainingFuncMenuWnd@@IAE_NXZ	; TrainingFuncMenuWnd::SkipRender
EXTRN	__imp_?ShowChildWnd@ioWnd@@QAEXK_N@Z:PROC
EXTRN	__imp_?HideChildWnd@ioWnd@@QAEXK_N@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ?SkipRender@TrainingFuncMenuWnd@@IAE_NXZ
_TEXT	SEGMENT
_bSkipRender$ = -1					; size = 1
?SkipRender@TrainingFuncMenuWnd@@IAE_NXZ PROC		; TrainingFuncMenuWnd::SkipRender, COMDAT
; _this$ = ecx

; 398  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi

; 399  : 	bool bSkipRender = false;

  00006	33 db		 xor	 ebx, ebx
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
  0000b	88 5d ff	 mov	 BYTE PTR _bSkipRender$[ebp], bl

; 400  : 
; 401  : 	if( g_GUIMgr.IsSkipUIByBlind() )

  0000e	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  00013	38 98 e0 04 00
	00		 cmp	 BYTE PTR [eax+1248], bl
  00019	74 04		 je	 SHORT $LN26@SkipRender

; 402  : 		bSkipRender = true;

  0001b	c6 45 ff 01	 mov	 BYTE PTR _bSkipRender$[ebp], 1
$LN26@SkipRender:

; 403  : 
; 404  : 	if( m_ShowAniState.GetCurState() == SAT_DELAY || 
; 405  : 		m_ShowAniState.GetCurState() == SAT_START_ROUND )

  0001f	8b 86 a4 01 00
	00		 mov	 eax, DWORD PTR [esi+420]
  00025	83 f8 02	 cmp	 eax, 2
  00028	74 05		 je	 SHORT $LN10@SkipRender
  0002a	83 f8 01	 cmp	 eax, 1
  0002d	75 04		 jne	 SHORT $LN11@SkipRender
$LN10@SkipRender:

; 406  : 		bSkipRender = true;

  0002f	c6 45 ff 01	 mov	 BYTE PTR _bSkipRender$[ebp], 1
$LN11@SkipRender:

; 407  : 
; 408  : 	if ( bSkipRender && m_bStartAni )

  00033	38 5d ff	 cmp	 BYTE PTR _bSkipRender$[ebp], bl
  00036	74 23		 je	 SHORT $LN25@SkipRender
  00038	38 9e 9d 01 00
	00		 cmp	 BYTE PTR [esi+413], bl
  0003e	74 3d		 je	 SHORT $LN1@SkipRender

; 409  : 	{
; 410  : 		m_bStartAni = false;
; 411  : 		for( int i=ID_BATTLE_BTN; i<ID_BTN_MAX; ++i )

  00040	33 ff		 xor	 edi, edi
  00042	88 9e 9d 01 00
	00		 mov	 BYTE PTR [esi+413], bl
  00048	47		 inc	 edi
$LL8@SkipRender:

; 412  : 			HideChildWnd(i);

  00049	53		 push	 ebx
  0004a	57		 push	 edi
  0004b	8b ce		 mov	 ecx, esi
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HideChildWnd@ioWnd@@QAEXK_N@Z
  00053	47		 inc	 edi
  00054	83 ff 07	 cmp	 edi, 7
  00057	7c f0		 jl	 SHORT $LL8@SkipRender

; 413  : 	}
; 414  : 	else if ( !bSkipRender && !m_bStartAni )

  00059	eb 22		 jmp	 SHORT $LN1@SkipRender
$LN25@SkipRender:
  0005b	38 9e 9d 01 00
	00		 cmp	 BYTE PTR [esi+413], bl
  00061	75 1a		 jne	 SHORT $LN1@SkipRender

; 415  : 	{
; 416  : 		m_bStartAni = true;
; 417  : 		for( int i=ID_BATTLE_BTN; i<ID_BTN_MAX; ++i )

  00063	33 ff		 xor	 edi, edi
  00065	c6 86 9d 01 00
	00 01		 mov	 BYTE PTR [esi+413], 1
  0006c	47		 inc	 edi
$LL3@SkipRender:

; 418  : 			ShowChildWnd(i);

  0006d	53		 push	 ebx
  0006e	57		 push	 edi
  0006f	8b ce		 mov	 ecx, esi
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ShowChildWnd@ioWnd@@QAEXK_N@Z
  00077	47		 inc	 edi
  00078	83 ff 07	 cmp	 edi, 7
  0007b	7c f0		 jl	 SHORT $LL3@SkipRender
$LN1@SkipRender:

; 419  : 	}
; 420  : 	return bSkipRender;

  0007d	8a 45 ff	 mov	 al, BYTE PTR _bSkipRender$[ebp]
  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx

; 421  : }

  00083	c9		 leave
  00084	c3		 ret	 0
?SkipRender@TrainingFuncMenuWnd@@IAE_NXZ ENDP		; TrainingFuncMenuWnd::SkipRender
_TEXT	ENDS
PUBLIC	??B?$CEncrypt@W4ModeType@@@@QAE?AW4ModeType@@XZ	; CEncrypt<enum ModeType>::operator enum ModeType
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
;	COMDAT ??B?$CEncrypt@W4ModeType@@@@QAE?AW4ModeType@@XZ
_TEXT	SEGMENT
_value$ = -4						; size = 4
??B?$CEncrypt@W4ModeType@@@@QAE?AW4ModeType@@XZ PROC	; CEncrypt<enum ModeType>::operator enum ModeType, COMDAT
; _this$ = ecx

; 134  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 135  : 		type value;
; 136  : 		DecryptValueToPool(&value);

  00004	8d 45 fc	 lea	 eax, DWORD PTR _value$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@W4ModeType@@@@QAEXPAW4ModeType@@@Z ; CEncrypt<enum ModeType>::DecryptValueToPool

; 137  : 
; 138  : #ifdef _NOTUSE
; 139  : 		Debug();
; 140  : #endif
; 141  : 		return value;

  0000d	8b 45 fc	 mov	 eax, DWORD PTR _value$[ebp]

; 142  : 	}

  00010	c9		 leave
  00011	c3		 ret	 0
??B?$CEncrypt@W4ModeType@@@@QAE?AW4ModeType@@XZ ENDP	; CEncrypt<enum ModeType>::operator enum ModeType
_TEXT	ENDS
EXTRN	__imp_?OnRender@ioWnd@@MAEXXZ:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\trainingfuncmenuwnd.cpp
;	COMDAT ?OnRender@TrainingFuncMenuWnd@@MAEXXZ
_TEXT	SEGMENT
?OnRender@TrainingFuncMenuWnd@@MAEXXZ PROC		; TrainingFuncMenuWnd::OnRender, COMDAT
; _this$ = ecx

; 266  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 267  : 	if( SkipRender() )

  00003	e8 00 00 00 00	 call	 ?SkipRender@TrainingFuncMenuWnd@@IAE_NXZ ; TrainingFuncMenuWnd::SkipRender
  00008	84 c0		 test	 al, al
  0000a	75 09		 jne	 SHORT $LN2@OnRender

; 268  : 		return;
; 269  : 	
; 270  : 	ioMovingWnd::OnRender();

  0000c	8b ce		 mov	 ecx, esi
  0000e	5e		 pop	 esi
  0000f	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_?OnRender@ioWnd@@MAEXXZ
$LN2@OnRender:
  00015	5e		 pop	 esi

; 271  : }

  00016	c3		 ret	 0
?OnRender@TrainingFuncMenuWnd@@MAEXXZ ENDP		; TrainingFuncMenuWnd::OnRender
_TEXT	ENDS
PUBLIC	?GetModeType@ioPlayMode@@SA?AW4ModeType@@XZ	; ioPlayMode::GetModeType
EXTRN	?m_ModeType@ioPlayMode@@1V?$CEncrypt@W4ModeType@@@@A:BYTE ; ioPlayMode::m_ModeType
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioplaymode.h
;	COMDAT ?GetModeType@ioPlayMode@@SA?AW4ModeType@@XZ
_TEXT	SEGMENT
?GetModeType@ioPlayMode@@SA?AW4ModeType@@XZ PROC	; ioPlayMode::GetModeType, COMDAT

; 782  : 	static ModeType GetModeType() { return m_ModeType; }

  00000	6a 04		 push	 4
  00002	68 28 00 00 00	 push	 OFFSET ?m_ModeType@ioPlayMode@@1V?$CEncrypt@W4ModeType@@@@A+40
  00007	68 1c 00 00 00	 push	 OFFSET ?m_ModeType@ioPlayMode@@1V?$CEncrypt@W4ModeType@@@@A+28
  0000c	b9 0c 00 00 00	 mov	 ecx, OFFSET ?m_ModeType@ioPlayMode@@1V?$CEncrypt@W4ModeType@@@@A+12
  00011	e8 00 00 00 00	 call	 ?DecryptByte@ccddaabb@@QBEXPBDPADH@Z ; ccddaabb::DecryptByte
  00016	a1 28 00 00 00	 mov	 eax, DWORD PTR ?m_ModeType@ioPlayMode@@1V?$CEncrypt@W4ModeType@@@@A+40
  0001b	c3		 ret	 0
?GetModeType@ioPlayMode@@SA?AW4ModeType@@XZ ENDP	; ioPlayMode::GetModeType
_TEXT	ENDS
PUBLIC	??_R0?AVioPlayMode@@@8				; ioPlayMode `RTTI Type Descriptor'
PUBLIC	??_R0?AVioHeadquartersMode@@@8			; ioHeadquartersMode `RTTI Type Descriptor'
PUBLIC	?ToHeadquartersMode@@YAPAVioHeadquartersMode@@PAVioPlayMode@@@Z ; ToHeadquartersMode
;	COMDAT ??_R0?AVioPlayMode@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioheadquartersmode.h
_DATA	SEGMENT
??_R0?AVioPlayMode@@@8 DD FLAT:??_7type_info@@6B@	; ioPlayMode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioPlayMode@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVioHeadquartersMode@@@8
_DATA	SEGMENT
??_R0?AVioHeadquartersMode@@@8 DD FLAT:??_7type_info@@6B@ ; ioHeadquartersMode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioHeadquartersMode@@', 00H
; Function compile flags: /Ogsp
_DATA	ENDS
;	COMDAT ?ToHeadquartersMode@@YAPAVioHeadquartersMode@@PAVioPlayMode@@@Z
_TEXT	SEGMENT
_pMode$ = 8						; size = 4
?ToHeadquartersMode@@YAPAVioHeadquartersMode@@PAVioPlayMode@@@Z PROC ; ToHeadquartersMode, COMDAT

; 234  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 235  : 	if( !pMode || pMode->GetModeType() != MT_HEADQUARTERS )

  00003	83 7d 08 00	 cmp	 DWORD PTR _pMode$[ebp], 0
  00007	74 25		 je	 SHORT $LN1@ToHeadquar
  00009	e8 00 00 00 00	 call	 ?GetModeType@ioPlayMode@@SA?AW4ModeType@@XZ ; ioPlayMode::GetModeType
  0000e	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  00011	75 1b		 jne	 SHORT $LN1@ToHeadquar

; 237  : 
; 238  : 	return dynamic_cast< ioHeadquartersMode* >( pMode );

  00013	6a 00		 push	 0
  00015	68 00 00 00 00	 push	 OFFSET ??_R0?AVioHeadquartersMode@@@8
  0001a	68 00 00 00 00	 push	 OFFSET ??_R0?AVioPlayMode@@@8
  0001f	6a 00		 push	 0
  00021	ff 75 08	 push	 DWORD PTR _pMode$[ebp]
  00024	e8 00 00 00 00	 call	 ___RTDynamicCast
  00029	83 c4 14	 add	 esp, 20			; 00000014H

; 239  : }

  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
$LN1@ToHeadquar:

; 236  : 		return NULL;

  0002e	33 c0		 xor	 eax, eax

; 239  : }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?ToHeadquartersMode@@YAPAVioHeadquartersMode@@PAVioPlayMode@@@Z ENDP ; ToHeadquartersMode
_TEXT	ENDS
PUBLIC	??_R0?AVioHouseMode@@@8				; ioHouseMode `RTTI Type Descriptor'
PUBLIC	?ToHouseMode@@YAPAVioHouseMode@@PAVioPlayMode@@@Z ; ToHouseMode
;	COMDAT ??_R0?AVioHouseMode@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iohousemode.h
_DATA	SEGMENT
??_R0?AVioHouseMode@@@8 DD FLAT:??_7type_info@@6B@	; ioHouseMode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioHouseMode@@', 00H
; Function compile flags: /Ogsp
_DATA	ENDS
;	COMDAT ?ToHouseMode@@YAPAVioHouseMode@@PAVioPlayMode@@@Z
_TEXT	SEGMENT
_pMode$ = 8						; size = 4
?ToHouseMode@@YAPAVioHouseMode@@PAVioPlayMode@@@Z PROC	; ToHouseMode, COMDAT

; 165  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 166  : 	if( !pMode || pMode->GetModeType() != MT_HOUSE )

  00003	83 7d 08 00	 cmp	 DWORD PTR _pMode$[ebp], 0
  00007	74 25		 je	 SHORT $LN1@ToHouseMod
  00009	e8 00 00 00 00	 call	 ?GetModeType@ioPlayMode@@SA?AW4ModeType@@XZ ; ioPlayMode::GetModeType
  0000e	83 f8 17	 cmp	 eax, 23			; 00000017H
  00011	75 1b		 jne	 SHORT $LN1@ToHouseMod

; 168  : 
; 169  : 	return dynamic_cast< ioHouseMode* >( pMode );

  00013	6a 00		 push	 0
  00015	68 00 00 00 00	 push	 OFFSET ??_R0?AVioHouseMode@@@8
  0001a	68 00 00 00 00	 push	 OFFSET ??_R0?AVioPlayMode@@@8
  0001f	6a 00		 push	 0
  00021	ff 75 08	 push	 DWORD PTR _pMode$[ebp]
  00024	e8 00 00 00 00	 call	 ___RTDynamicCast
  00029	83 c4 14	 add	 esp, 20			; 00000014H

; 170  : }

  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
$LN1@ToHouseMod:

; 167  : 		return NULL;

  0002e	33 c0		 xor	 eax, eax

; 170  : }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?ToHouseMode@@YAPAVioHouseMode@@PAVioPlayMode@@@Z ENDP	; ToHouseMode
_TEXT	ENDS
PUBLIC	?UpdateHQButton@TrainingFuncMenuWnd@@IAEXXZ	; TrainingFuncMenuWnd::UpdateHQButton
EXTRN	__imp_?SetChildWndStyleAdd@ioWnd@@QAEXKK@Z:PROC
EXTRN	__imp_?SetChildWndStyleRemove@ioWnd@@QAEXKK@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\trainingfuncmenuwnd.cpp
;	COMDAT ?UpdateHQButton@TrainingFuncMenuWnd@@IAEXXZ
_TEXT	SEGMENT
?UpdateHQButton@TrainingFuncMenuWnd@@IAEXXZ PROC	; TrainingFuncMenuWnd::UpdateHQButton, COMDAT
; _this$ = ecx

; 212  : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 213  : 	SetChildWndStyleRemove( ID_HEAD_QUATER_BTN, IWS_INACTIVE );

  00002	6a 02		 push	 2
  00004	6a 04		 push	 4
  00006	8b f9		 mov	 edi, ecx
  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetChildWndStyleRemove@ioWnd@@QAEXKK@Z

; 214  : 	if( m_pCurrMode && m_pCurrMode->GetModeType() == MT_HEADQUARTERS )

  0000e	83 bf 90 01 00
	00 00		 cmp	 DWORD PTR [edi+400], 0
  00015	74 41		 je	 SHORT $LN1@UpdateHQBu
  00017	e8 00 00 00 00	 call	 ?GetModeType@ioPlayMode@@SA?AW4ModeType@@XZ ; ioPlayMode::GetModeType
  0001c	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  0001f	75 37		 jne	 SHORT $LN1@UpdateHQBu

; 215  : 	{
; 216  : 		ioHeadquartersMode* pMode = ToHeadquartersMode( m_pCurrMode );

  00021	ff b7 90 01 00
	00		 push	 DWORD PTR [edi+400]
  00027	e8 00 00 00 00	 call	 ?ToHeadquartersMode@@YAPAVioHeadquartersMode@@PAVioPlayMode@@@Z ; ToHeadquartersMode
  0002c	8b f0		 mov	 esi, eax
  0002e	59		 pop	 ecx

; 217  : 		if( pMode && pMode->GetMasterName() == g_MyInfo.GetPublicID() )

  0002f	85 f6		 test	 esi, esi
  00031	74 25		 je	 SHORT $LN1@UpdateHQBu
  00033	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00038	83 c0 1c	 add	 eax, 28			; 0000001cH
  0003b	50		 push	 eax
  0003c	8d 8e f4 04 00
	00		 lea	 ecx, DWORD PTR [esi+1268]
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00048	84 c0		 test	 al, al
  0004a	74 0c		 je	 SHORT $LN1@UpdateHQBu

; 218  : 		{			
; 219  : 			SetChildWndStyleAdd( ID_HEAD_QUATER_BTN, IWS_INACTIVE );

  0004c	6a 02		 push	 2
  0004e	6a 04		 push	 4
  00050	8b cf		 mov	 ecx, edi
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetChildWndStyleAdd@ioWnd@@QAEXKK@Z
$LN1@UpdateHQBu:

; 220  : 		}
; 221  : 	}
; 222  : }

  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	c3		 ret	 0
?UpdateHQButton@TrainingFuncMenuWnd@@IAEXXZ ENDP	; TrainingFuncMenuWnd::UpdateHQButton
_TEXT	ENDS
PUBLIC	?UpdateHomeButton@TrainingFuncMenuWnd@@IAEXXZ	; TrainingFuncMenuWnd::UpdateHomeButton
EXTRN	?IsHouseOpen@ioMyInfo@@QAE_NXZ:PROC		; ioMyInfo::IsHouseOpen
; Function compile flags: /Ogsp
;	COMDAT ?UpdateHomeButton@TrainingFuncMenuWnd@@IAEXXZ
_TEXT	SEGMENT
_pMode$513049 = -4					; size = 4
?UpdateHomeButton@TrainingFuncMenuWnd@@IAEXXZ PROC	; TrainingFuncMenuWnd::UpdateHomeButton, COMDAT
; _this$ = ecx

; 225  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi

; 226  : 	SetChildWndStyleRemove( ID_HOME_BTN, IWS_INACTIVE );

  00006	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?SetChildWndStyleRemove@ioWnd@@QAEXKK@Z
  0000c	57		 push	 edi
  0000d	6a 02		 push	 2
  0000f	6a 05		 push	 5
  00011	8b d9		 mov	 ebx, ecx
  00013	ff d6		 call	 esi

; 227  : 	SetChildWndStyleAdd( ID_HOME_BTN, IWS_EXACTIVE );

  00015	bf 00 10 00 00	 mov	 edi, 4096		; 00001000H
  0001a	57		 push	 edi
  0001b	6a 05		 push	 5
  0001d	8b cb		 mov	 ecx, ebx
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetChildWndStyleAdd@ioWnd@@QAEXKK@Z

; 228  : 
; 229  : 	if( m_pCurrMode && m_pCurrMode->GetModeType() == MT_HOUSE )

  00025	83 bb 90 01 00
	00 00		 cmp	 DWORD PTR [ebx+400], 0
  0002c	74 47		 je	 SHORT $LN4@UpdateHome
  0002e	e8 00 00 00 00	 call	 ?GetModeType@ioPlayMode@@SA?AW4ModeType@@XZ ; ioPlayMode::GetModeType
  00033	83 f8 17	 cmp	 eax, 23			; 00000017H
  00036	75 3d		 jne	 SHORT $LN4@UpdateHome

; 230  : 	{
; 231  : 		ioHouseMode* pMode = ToHouseMode( m_pCurrMode );

  00038	ff b3 90 01 00
	00		 push	 DWORD PTR [ebx+400]
  0003e	e8 00 00 00 00	 call	 ?ToHouseMode@@YAPAVioHouseMode@@PAVioPlayMode@@@Z ; ToHouseMode
  00043	59		 pop	 ecx
  00044	89 45 fc	 mov	 DWORD PTR _pMode$513049[ebp], eax

; 232  : 		if( pMode && pMode->GetMasterName() == g_MyInfo.GetPublicID() )

  00047	85 c0		 test	 eax, eax
  00049	74 41		 je	 SHORT $LN1@UpdateHome
  0004b	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _pMode$513049[ebp]
  00053	83 c0 1c	 add	 eax, 28			; 0000001cH
  00056	50		 push	 eax
  00057	81 c1 f4 04 00
	00		 add	 ecx, 1268		; 000004f4H
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00063	84 c0		 test	 al, al
  00065	74 25		 je	 SHORT $LN1@UpdateHome

; 233  : 		{	
; 234  : 			SetChildWndStyleAdd( ID_HOME_BTN, IWS_INACTIVE );

  00067	6a 02		 push	 2
  00069	6a 05		 push	 5
  0006b	8b cb		 mov	 ecx, ebx
  0006d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetChildWndStyleAdd@ioWnd@@QAEXKK@Z

; 235  : 			SetChildWndStyleRemove( ID_HOME_BTN, IWS_EXACTIVE );
; 236  : 		}
; 237  : 	}
; 238  : 	else

  00073	eb 10		 jmp	 SHORT $LN11@UpdateHome
$LN4@UpdateHome:

; 239  : 	{
; 240  : 		if( g_MyInfo.IsHouseOpen() )

  00075	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ?IsHouseOpen@ioMyInfo@@QAE_NXZ ; ioMyInfo::IsHouseOpen
  00081	84 c0		 test	 al, al
  00083	74 07		 je	 SHORT $LN1@UpdateHome
$LN11@UpdateHome:

; 241  : 		{
; 242  : 			SetChildWndStyleRemove( ID_HOME_BTN, IWS_EXACTIVE );

  00085	57		 push	 edi
  00086	6a 05		 push	 5
  00088	8b cb		 mov	 ecx, ebx
  0008a	ff d6		 call	 esi
$LN1@UpdateHome:
  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx

; 243  : 		}
; 244  : 	}
; 245  : }

  0008f	c9		 leave
  00090	c3		 ret	 0
?UpdateHomeButton@TrainingFuncMenuWnd@@IAEXXZ ENDP	; TrainingFuncMenuWnd::UpdateHomeButton
_TEXT	ENDS
PUBLIC	?UpdateGuildHQButton@TrainingFuncMenuWnd@@IAEXXZ ; TrainingFuncMenuWnd::UpdateGuildHQButton
EXTRN	?GetPlazaModeType@ioPlayStage@@QAE?AW4PlazaType@@XZ:PROC ; ioPlayStage::GetPlazaModeType
; Function compile flags: /Ogsp
;	COMDAT ?UpdateGuildHQButton@TrainingFuncMenuWnd@@IAEXXZ
_TEXT	SEGMENT
?UpdateGuildHQButton@TrainingFuncMenuWnd@@IAEXXZ PROC	; TrainingFuncMenuWnd::UpdateGuildHQButton, COMDAT
; _this$ = ecx

; 248  : {	

  00000	53		 push	 ebx
  00001	56		 push	 esi

; 249  : 	SetChildWndStyleRemove( ID_GUILD_HQ_BTN, IWS_INACTIVE );

  00002	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?SetChildWndStyleRemove@ioWnd@@QAEXKK@Z
  00008	57		 push	 edi
  00009	6a 02		 push	 2
  0000b	6a 06		 push	 6
  0000d	8b f9		 mov	 edi, ecx
  0000f	ff d6		 call	 esi

; 250  : 	SetChildWndStyleRemove( ID_GUILD_HQ_BTN, IWS_EXACTIVE );

  00011	bb 00 10 00 00	 mov	 ebx, 4096		; 00001000H
  00016	53		 push	 ebx
  00017	6a 06		 push	 6
  00019	8b cf		 mov	 ecx, edi
  0001b	ff d6		 call	 esi

; 251  : 	if( m_pCurrMode && m_pCurrMode->GetModeType() == MT_TRAINING && m_pCurrMode->GetCreator()->GetPlazaModeType() == PT_GUILD )

  0001d	83 bf 90 01 00
	00 00		 cmp	 DWORD PTR [edi+400], 0
  00024	74 21		 je	 SHORT $LN4@UpdateGuil
  00026	e8 00 00 00 00	 call	 ?GetModeType@ioPlayMode@@SA?AW4ModeType@@XZ ; ioPlayMode::GetModeType
  0002b	83 f8 04	 cmp	 eax, 4
  0002e	75 17		 jne	 SHORT $LN4@UpdateGuil
  00030	8b 87 90 01 00
	00		 mov	 eax, DWORD PTR [edi+400]
  00036	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  00039	e8 00 00 00 00	 call	 ?GetPlazaModeType@ioPlayStage@@QAE?AW4PlazaType@@XZ ; ioPlayStage::GetPlazaModeType
  0003e	83 f8 03	 cmp	 eax, 3
  00041	75 04		 jne	 SHORT $LN4@UpdateGuil

; 252  : 	{
; 253  : 		SetChildWndStyleAdd( ID_GUILD_HQ_BTN, IWS_INACTIVE );

  00043	6a 02		 push	 2

; 254  : 	}
; 255  : 	else

  00045	eb 25		 jmp	 SHORT $LN13@UpdateGuil
$LN4@UpdateGuil:

; 256  : 	{
; 257  : 		ioGuildData *pGuildData = g_GuildInfo.GetGuildData( g_GuildInfo.GetGuildIndex() );

  00047	e8 00 00 00 00	 call	 ?GetSingleton@ioGuildInfo@@SAAAV1@XZ ; ioGuildInfo::GetSingleton
  0004c	8b 80 90 00 00
	00		 mov	 eax, DWORD PTR [eax+144]
  00052	6a 00		 push	 0
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ?GetSingleton@ioGuildInfo@@SAAAV1@XZ ; ioGuildInfo::GetSingleton
  0005a	8b c8		 mov	 ecx, eax
  0005c	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData

; 258  : 		if( !pGuildData || !pGuildData->GetGuildRoomOpen() )

  00061	85 c0		 test	 eax, eax
  00063	74 06		 je	 SHORT $LN1@UpdateGuil
  00065	83 78 54 00	 cmp	 DWORD PTR [eax+84], 0
  00069	75 0b		 jne	 SHORT $LN2@UpdateGuil
$LN1@UpdateGuil:

; 259  : 		{
; 260  : 			SetChildWndStyleAdd( ID_GUILD_HQ_BTN, IWS_EXACTIVE );

  0006b	53		 push	 ebx
$LN13@UpdateGuil:
  0006c	6a 06		 push	 6
  0006e	8b cf		 mov	 ecx, edi
  00070	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetChildWndStyleAdd@ioWnd@@QAEXKK@Z
$LN2@UpdateGuil:

; 261  : 		}
; 262  : 	}
; 263  : }

  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
  00079	c3		 ret	 0
?UpdateGuildHQButton@TrainingFuncMenuWnd@@IAEXXZ ENDP	; TrainingFuncMenuWnd::UpdateGuildHQButton
_TEXT	ENDS
PUBLIC	__real@4026000000000000
PUBLIC	__real@3ff921fb54442d18
PUBLIC	__real@41f0000000000000
EXTRN	__imp_?OnProcess@ioWnd@@MAEXM@Z:PROC
EXTRN	?UpdateTime@FSMStateMgr@@QAEXXZ:PROC		; FSMStateMgr::UpdateTime
EXTRN	?IsShowSkillStep@ioTutorialManager@@QAE_NXZ:PROC ; ioTutorialManager::IsShowSkillStep
EXTRN	?GetSingleton@ioTutorialManager@@SAAAV1@XZ:PROC	; ioTutorialManager::GetSingleton
EXTRN	__imp_?IsShow@ioWnd@@QBE_NXZ:PROC
EXTRN	__CIsin:PROC
EXTRN	__ftol2_sse:PROC
EXTRN	__CIcos:PROC
;	COMDAT __real@4026000000000000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\fsmstatemgr.h
CONST	SEGMENT
__real@4026000000000000 DQ 04026000000000000r	; 11
CONST	ENDS
;	COMDAT __real@3ff921fb54442d18
CONST	SEGMENT
__real@3ff921fb54442d18 DQ 03ff921fb54442d18r	; 1.5708
CONST	ENDS
;	COMDAT __real@41f0000000000000
CONST	SEGMENT
__real@41f0000000000000 DQ 041f0000000000000r	; 4.29497e+009
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\trainingfuncmenuwnd.cpp
CONST	ENDS
;	COMDAT ?OnProcess@TrainingFuncMenuWnd@@MAEXM@Z
_TEXT	SEGMENT
tv387 = -8						; size = 4
tv374 = -8						; size = 4
tv363 = -8						; size = 4
_iStartYPos$513023 = -4					; size = 4
_fTimePerSec$ = 8					; size = 4
?OnProcess@TrainingFuncMenuWnd@@MAEXM@Z PROC		; TrainingFuncMenuWnd::OnProcess, COMDAT
; _this$ = ecx

; 148  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 149  : 	if( !IsShow() )

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsShow@ioWnd@@QBE_NXZ
  0000e	84 c0		 test	 al, al
  00010	0f 84 ef 01 00
	00		 je	 $LN15@OnProcess

; 150  : 		return;
; 151  : 
; 152  : 	//////////////////////////////////////////////////////////////////////////
; 153  : 	if( !g_GUIMgr.IsSkipUIByBlind() && m_ShowAniState.GetCurState() == SAT_NONE )

  00016	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  0001b	80 b8 e0 04 00
	00 00		 cmp	 BYTE PTR [eax+1248], 0
  00022	75 16		 jne	 SHORT $LN49@OnProcess
  00024	83 be a4 01 00
	00 00		 cmp	 DWORD PTR [esi+420], 0
  0002b	75 0d		 jne	 SHORT $LN49@OnProcess

; 154  : 		m_ShowAniState.ChangeState( SAT_END  );

  0002d	6a 07		 push	 7
  0002f	8d 8e a0 01 00
	00		 lea	 ecx, DWORD PTR [esi+416]
  00035	e8 00 00 00 00	 call	 ?ChangeState@FSMStateMgr@@QAEHH@Z ; FSMStateMgr::ChangeState
$LN49@OnProcess:

; 155  : 
; 156  : 	if( !g_GUIMgr.IsSkipUIByBlind() && m_ShowAniState.GetCurState() == SAT_START_ROUND )

  0003a	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  0003f	80 b8 e0 04 00
	00 00		 cmp	 BYTE PTR [eax+1248], 0
  00046	75 26		 jne	 SHORT $LN11@OnProcess
  00048	83 be a4 01 00
	00 01		 cmp	 DWORD PTR [esi+420], 1
  0004f	75 1d		 jne	 SHORT $LN11@OnProcess

; 157  : 	{
; 158  : 		if( g_TutorialMgr.IsShowSkillStep() )

  00051	e8 00 00 00 00	 call	 ?GetSingleton@ioTutorialManager@@SAAAV1@XZ ; ioTutorialManager::GetSingleton
  00056	8b c8		 mov	 ecx, eax
  00058	e8 00 00 00 00	 call	 ?IsShowSkillStep@ioTutorialManager@@QAE_NXZ ; ioTutorialManager::IsShowSkillStep
  0005d	84 c0		 test	 al, al
  0005f	74 0d		 je	 SHORT $LN11@OnProcess

; 159  : 		{
; 160  : 			m_ShowAniState.ChangeState( SAT_DELAY );

  00061	6a 02		 push	 2
  00063	8d 8e a0 01 00
	00		 lea	 ecx, DWORD PTR [esi+416]
  00069	e8 00 00 00 00	 call	 ?ChangeState@FSMStateMgr@@QAEHH@Z ; FSMStateMgr::ChangeState
$LN11@OnProcess:

; 161  : 		}
; 162  : 	}
; 163  : 
; 164  : 	if( g_GUIMgr.IsSkipUIByBlind() && m_ShowAniState.GetCurState() == SAT_END )

  0006e	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  00073	80 b8 e0 04 00
	00 00		 cmp	 BYTE PTR [eax+1248], 0
  0007a	74 16		 je	 SHORT $LN10@OnProcess
  0007c	83 be a4 01 00
	00 07		 cmp	 DWORD PTR [esi+420], 7
  00083	75 0d		 jne	 SHORT $LN10@OnProcess

; 165  : 		m_ShowAniState.ChangeState( SAT_NONE );

  00085	6a 00		 push	 0
  00087	8d 8e a0 01 00
	00		 lea	 ecx, DWORD PTR [esi+416]
  0008d	e8 00 00 00 00	 call	 ?ChangeState@FSMStateMgr@@QAEHH@Z ; FSMStateMgr::ChangeState
$LN10@OnProcess:

; 166  : 
; 167  : 	m_ShowAniState.UpdateTime();

  00092	57		 push	 edi
  00093	8d 8e a0 01 00
	00		 lea	 ecx, DWORD PTR [esi+416]
  00099	e8 00 00 00 00	 call	 ?UpdateTime@FSMStateMgr@@QAEXXZ ; FSMStateMgr::UpdateTime

; 168  : 
; 169  : 	if( m_ShowAniState.GetCurState() == SAT_UP )

  0009e	8b 86 a4 01 00
	00		 mov	 eax, DWORD PTR [esi+420]
  000a4	83 f8 03	 cmp	 eax, 3
  000a7	75 68		 jne	 SHORT $LN9@OnProcess

; 170  : 	{
; 171  : 		enum { PLUS_Y_POS = 75 };
; 172  : 		int iStartYPos = PLUS_Y_POS + ( Setting::Height() - ( m_iDefaultY + GetHeight() ) );

  000a9	53		 push	 ebx
  000aa	8b ce		 mov	 ecx, esi
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetHeight@ioWnd@@QBEHXZ
  000b2	6a 4b		 push	 75			; 0000004bH
  000b4	5b		 pop	 ebx
  000b5	2b 9e 98 01 00
	00		 sub	 ebx, DWORD PTR [esi+408]
  000bb	2b d8		 sub	 ebx, eax
  000bd	e8 00 00 00 00	 call	 ?Height@Setting@@SAHXZ	; Setting::Height

; 174  : 		SetWndPos( m_iDefaultX, iCurYpos );

  000c2	db 86 ac 01 00
	00		 fild	 DWORD PTR [esi+428]
  000c8	03 c3		 add	 eax, ebx
  000ca	89 45 fc	 mov	 DWORD PTR _iStartYPos$513023[ebp], eax
  000cd	8b 86 ac 01 00
	00		 mov	 eax, DWORD PTR [esi+428]
  000d3	85 c0		 test	 eax, eax
  000d5	79 06		 jns	 SHORT $LN50@OnProcess
  000d7	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@41f0000000000000
$LN50@OnProcess:

; 173  : 		int iCurYpos = m_iDefaultY + ( cos( (PI/2 * m_ShowAniState.GetCurTime()  ) / m_ShowAniState.GetDelay() ) * iStartYPos );	

  000dd	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3ff921fb54442d18

; 174  : 		SetWndPos( m_iDefaultX, iCurYpos );

  000e3	da b6 b0 01 00
	00		 fidiv	 DWORD PTR [esi+432]
  000e9	e8 00 00 00 00	 call	 __CIcos
  000ee	da 4d fc	 fimul	 DWORD PTR _iStartYPos$513023[ebp]
  000f1	da 86 98 01 00
	00		 fiadd	 DWORD PTR [esi+408]
  000f7	e8 00 00 00 00	 call	 __ftol2_sse
  000fc	50		 push	 eax
  000fd	ff b6 94 01 00
	00		 push	 DWORD PTR [esi+404]
  00103	8b ce		 mov	 ecx, esi
  00105	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetWndPos@ioWnd@@QAEXHH@Z
  0010b	5b		 pop	 ebx
  0010c	e9 a2 00 00 00	 jmp	 $LN3@OnProcess
$LN9@OnProcess:

; 175  : 	}
; 176  : 	else if( m_ShowAniState.GetCurState() == SAT_DOWN )

  00111	83 f8 04	 cmp	 eax, 4
  00114	75 29		 jne	 SHORT $LN7@OnProcess

; 180  : 		SetWndPos( m_iDefaultX, iCurYpos );

  00116	8b 86 ac 01 00
	00		 mov	 eax, DWORD PTR [esi+428]
  0011c	db 86 ac 01 00
	00		 fild	 DWORD PTR [esi+428]
  00122	85 c0		 test	 eax, eax
  00124	79 06		 jns	 SHORT $LN51@OnProcess
  00126	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@41f0000000000000
$LN51@OnProcess:

; 177  : 	{
; 178  : 		enum { MAX_OFFSET_YPOS = 11 };
; 179  : 		int iCurYpos = m_iDefaultY + ( sin( (PI/2 * m_ShowAniState.GetCurTime()  ) / m_ShowAniState.GetDelay() ) * MAX_OFFSET_YPOS );	

  0012c	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3ff921fb54442d18

; 180  : 		SetWndPos( m_iDefaultX, iCurYpos );

  00132	da b6 b0 01 00
	00		 fidiv	 DWORD PTR [esi+432]
  00138	e8 00 00 00 00	 call	 __CIsin
  0013d	eb 2c		 jmp	 SHORT $LN53@OnProcess
$LN7@OnProcess:

; 181  : 	}
; 182  : 	else if( m_ShowAniState.GetCurState() == SAT_UP_STOP )

  0013f	83 f8 05	 cmp	 eax, 5
  00142	75 49		 jne	 SHORT $LN5@OnProcess

; 186  : 		SetWndPos( m_iDefaultX, iCurYpos );

  00144	8b 86 ac 01 00
	00		 mov	 eax, DWORD PTR [esi+428]
  0014a	db 86 ac 01 00
	00		 fild	 DWORD PTR [esi+428]
  00150	85 c0		 test	 eax, eax
  00152	79 06		 jns	 SHORT $LN52@OnProcess
  00154	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@41f0000000000000
$LN52@OnProcess:

; 183  : 	{
; 184  : 		enum { MAX_OFFSET_YPOS = 11 };
; 185  : 		int iCurYpos = m_iDefaultY + ( cos( (PI/2 * m_ShowAniState.GetCurTime()  ) / m_ShowAniState.GetDelay() ) * MAX_OFFSET_YPOS );	

  0015a	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3ff921fb54442d18

; 186  : 		SetWndPos( m_iDefaultX, iCurYpos );

  00160	da b6 b0 01 00
	00		 fidiv	 DWORD PTR [esi+432]
  00166	e8 00 00 00 00	 call	 __CIcos
$LN53@OnProcess:
  0016b	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@4026000000000000
  00171	da 86 98 01 00
	00		 fiadd	 DWORD PTR [esi+408]
  00177	e8 00 00 00 00	 call	 __ftol2_sse
  0017c	50		 push	 eax
  0017d	ff b6 94 01 00
	00		 push	 DWORD PTR [esi+404]
  00183	8b ce		 mov	 ecx, esi
  00185	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetWndPos@ioWnd@@QAEXHH@Z
  0018b	eb 26		 jmp	 SHORT $LN3@OnProcess
$LN5@OnProcess:

; 187  : 	}
; 188  : 	else if( m_ShowAniState.GetCurState() == SAT_STOP )

  0018d	83 f8 06	 cmp	 eax, 6
  00190	75 21		 jne	 SHORT $LN3@OnProcess

; 189  : 	{
; 190  : 		SetWndPos( m_iDefaultX, m_iDefaultY );

  00192	ff b6 98 01 00
	00		 push	 DWORD PTR [esi+408]
  00198	8b ce		 mov	 ecx, esi
  0019a	ff b6 94 01 00
	00		 push	 DWORD PTR [esi+404]
  001a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetWndPos@ioWnd@@QAEXHH@Z

; 191  : 		m_ShowAniState.ChangeState( SAT_END );

  001a6	6a 07		 push	 7
  001a8	8d 8e a0 01 00
	00		 lea	 ecx, DWORD PTR [esi+416]
  001ae	e8 00 00 00 00	 call	 ?ChangeState@FSMStateMgr@@QAEHH@Z ; FSMStateMgr::ChangeState
$LN3@OnProcess:

; 192  : 	}
; 193  : 
; 194  : 	if( SkipRender() )

  001b3	8b ce		 mov	 ecx, esi
  001b5	e8 00 00 00 00	 call	 ?SkipRender@TrainingFuncMenuWnd@@IAE_NXZ ; TrainingFuncMenuWnd::SkipRender
  001ba	5f		 pop	 edi
  001bb	84 c0		 test	 al, al
  001bd	75 46		 jne	 SHORT $LN15@OnProcess

; 195  : 		return;
; 196  : 
; 197  : 	ioMovingWnd::OnProcess( fTimePerSec );

  001bf	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fTimePerSec$[ebp]
  001c4	51		 push	 ecx
  001c5	8b ce		 mov	 ecx, esi
  001c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?OnProcess@ioWnd@@MAEXM@Z

; 198  : 
; 199  : 	if( m_bChangeResolution )

  001d2	80 be 9c 01 00
	00 00		 cmp	 BYTE PTR [esi+412], 0
  001d9	74 0e		 je	 SHORT $LN1@OnProcess

; 200  : 	{
; 201  : 		m_bChangeResolution = false;
; 202  : 		ResetWindow();

  001db	8b ce		 mov	 ecx, esi
  001dd	c6 86 9c 01 00
	00 00		 mov	 BYTE PTR [esi+412], 0
  001e4	e8 00 00 00 00	 call	 ?ResetWindow@TrainingFuncMenuWnd@@QAEXXZ ; TrainingFuncMenuWnd::ResetWindow
$LN1@OnProcess:

; 203  : 	}
; 204  : 
; 205  : 	UpdateDefaultPos();

  001e9	8b ce		 mov	 ecx, esi
  001eb	e8 00 00 00 00	 call	 ?UpdateDefaultPos@TrainingFuncMenuWnd@@IAEXXZ ; TrainingFuncMenuWnd::UpdateDefaultPos

; 206  : 	UpdateHQButton();

  001f0	8b ce		 mov	 ecx, esi
  001f2	e8 00 00 00 00	 call	 ?UpdateHQButton@TrainingFuncMenuWnd@@IAEXXZ ; TrainingFuncMenuWnd::UpdateHQButton

; 207  : 	UpdateHomeButton();

  001f7	8b ce		 mov	 ecx, esi
  001f9	e8 00 00 00 00	 call	 ?UpdateHomeButton@TrainingFuncMenuWnd@@IAEXXZ ; TrainingFuncMenuWnd::UpdateHomeButton

; 208  : 	UpdateGuildHQButton();

  001fe	8b ce		 mov	 ecx, esi
  00200	e8 00 00 00 00	 call	 ?UpdateGuildHQButton@TrainingFuncMenuWnd@@IAEXXZ ; TrainingFuncMenuWnd::UpdateGuildHQButton
$LN15@OnProcess:
  00205	5e		 pop	 esi

; 209  : }

  00206	c9		 leave
  00207	c2 04 00	 ret	 4
?OnProcess@TrainingFuncMenuWnd@@MAEXM@Z ENDP		; TrainingFuncMenuWnd::OnProcess
_TEXT	ENDS
END
