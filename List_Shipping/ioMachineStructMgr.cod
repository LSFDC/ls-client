; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioMachineStructMgr.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
PUBLIC	?ms_Singleton@?$Singleton@VioMachineStructMgr@@@@1PAVioMachineStructMgr@@A ; Singleton<ioMachineStructMgr>::ms_Singleton
;	COMDAT ?ms_Singleton@?$Singleton@VioMachineStructMgr@@@@1PAVioMachineStructMgr@@A
_BSS	SEGMENT
?ms_Singleton@?$Singleton@VioMachineStructMgr@@@@1PAVioMachineStructMgr@@A DD 01H DUP (?) ; Singleton<ioMachineStructMgr>::ms_Singleton
_BSS	ENDS
;	COMDAT ?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB DD 01H ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
CONST	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1exception@std@@UAE@XZ
  00012	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00016	74 07		 je	 SHORT $LN1@scalar
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	59		 pop	 ecx
$LN1@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	return (_Where);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 58   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 62   : 	}

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?GetPlayStage@ioMachineStructMgr@@QAEPAVioPlayStage@@XZ ; ioMachineStructMgr::GetPlayStage
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomachinestructmgr.cpp
;	COMDAT ?GetPlayStage@ioMachineStructMgr@@QAEPAVioPlayStage@@XZ
_TEXT	SEGMENT
?GetPlayStage@ioMachineStructMgr@@QAEPAVioPlayStage@@XZ PROC ; ioMachineStructMgr::GetPlayStage, COMDAT
; _this$ = ecx

; 189  : 	return m_pPlayStage;

  00000	8b 81 24 03 00
	00		 mov	 eax, DWORD PTR [ecx+804]

; 190  : }

  00006	c3		 ret	 0
?GetPlayStage@ioMachineStructMgr@@QAEPAVioPlayStage@@XZ ENDP ; ioMachineStructMgr::GetPlayStage
_TEXT	ENDS
PUBLIC	??0?$Singleton@VioMachineStructMgr@@@@QAE@XZ	; Singleton<ioMachineStructMgr>::Singleton<ioMachineStructMgr>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
;	COMDAT ??0?$Singleton@VioMachineStructMgr@@@@QAE@XZ
_TEXT	SEGMENT
??0?$Singleton@VioMachineStructMgr@@@@QAE@XZ PROC	; Singleton<ioMachineStructMgr>::Singleton<ioMachineStructMgr>, COMDAT
; _this$ = ecx

; 27   : 	Singleton()

  00000	8b c1		 mov	 eax, ecx

; 28   : 	{
; 29   : 		assert( !ms_Singleton );
; 30   : 		int offset = (int)(T*)1 - (int)(Singleton <T>*)(T*)1;
; 31   : 		ms_Singleton = (T*)((int)this + offset);

  00002	8d 48 fc	 lea	 ecx, DWORD PTR [eax-4]
  00005	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioMachineStructMgr@@@@1PAVioMachineStructMgr@@A, ecx ; Singleton<ioMachineStructMgr>::ms_Singleton

; 32   : 	}

  0000b	c3		 ret	 0
??0?$Singleton@VioMachineStructMgr@@@@QAE@XZ ENDP	; Singleton<ioMachineStructMgr>::Singleton<ioMachineStructMgr>
_TEXT	ENDS
PUBLIC	??1?$Singleton@VioMachineStructMgr@@@@QAE@XZ	; Singleton<ioMachineStructMgr>::~Singleton<ioMachineStructMgr>
; Function compile flags: /Ogsp
;	COMDAT ??1?$Singleton@VioMachineStructMgr@@@@QAE@XZ
_TEXT	SEGMENT
??1?$Singleton@VioMachineStructMgr@@@@QAE@XZ PROC	; Singleton<ioMachineStructMgr>::~Singleton<ioMachineStructMgr>, COMDAT
; _this$ = ecx

; 36   : 		assert( ms_Singleton );
; 37   : 		ms_Singleton = 0;

  00000	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioMachineStructMgr@@@@1PAVioMachineStructMgr@@A, 0 ; Singleton<ioMachineStructMgr>::ms_Singleton

; 38   : 	}

  00007	c3		 ret	 0
??1?$Singleton@VioMachineStructMgr@@@@QAE@XZ ENDP	; Singleton<ioMachineStructMgr>::~Singleton<ioMachineStructMgr>
_TEXT	ENDS
PUBLIC	?GetSingleton@?$Singleton@VioMachineStructMgr@@@@SAAAVioMachineStructMgr@@XZ ; Singleton<ioMachineStructMgr>::GetSingleton
; Function compile flags: /Ogsp
;	COMDAT ?GetSingleton@?$Singleton@VioMachineStructMgr@@@@SAAAVioMachineStructMgr@@XZ
_TEXT	SEGMENT
?GetSingleton@?$Singleton@VioMachineStructMgr@@@@SAAAVioMachineStructMgr@@XZ PROC ; Singleton<ioMachineStructMgr>::GetSingleton, COMDAT

; 42   : 		assert( ms_Singleton );
; 43   : 		return (*ms_Singleton);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioMachineStructMgr@@@@1PAVioMachineStructMgr@@A ; Singleton<ioMachineStructMgr>::ms_Singleton

; 44   : 	}

  00005	c3		 ret	 0
?GetSingleton@?$Singleton@VioMachineStructMgr@@@@SAAAVioMachineStructMgr@@XZ ENDP ; Singleton<ioMachineStructMgr>::GetSingleton
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	??A?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAEAAPAVioMachineStruct@@I@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::operator[]
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??A?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAEAAPAVioMachineStruct@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAEAAPAVioMachineStruct@@I@Z PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00008	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAEAAPAVioMachineStruct@@I@Z ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::operator[]
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IBE_NPBQAVioMachineStruct@@@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Inside
; Function compile flags: /Ogsp
;	COMDAT ?_Inside@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IBE_NPBQAVioMachineStruct@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IBE_NPBQAVioMachineStruct@@@Z PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IBE_NPBQAVioMachineStruct@@@Z ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IBEXPAPAVioMachineStruct@@0@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IBEXPAPAVioMachineStruct@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IBEXPAPAVioMachineStruct@@0@Z PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IBEXPAPAVioMachineStruct@@0@Z ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE@XZ ; std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> >::~_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> >::~_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> >::~_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> >
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVioMachineStruct@@@std@@QAE@XZ	; std::allocator<ioMachineStruct *>::allocator<ioMachineStruct *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAVioMachineStruct@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAVioMachineStruct@@@std@@QAE@XZ PROC	; std::allocator<ioMachineStruct *>::allocator<ioMachineStruct *>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@PAVioMachineStruct@@@std@@QAE@XZ ENDP	; std::allocator<ioMachineStruct *>::allocator<ioMachineStruct *>
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBEABQAVioMachineStruct@@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBEABQAVioMachineStruct@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBEABQAVioMachineStruct@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::operator*, COMDAT
; _this$ = ecx

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 85   : 		}

  00002	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBEABQAVioMachineStruct@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::operator++, COMDAT
; _this$ = ecx

; 93   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 111  : 		return (*this);
; 112  : 		}

  00005	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::operator++
_TEXT	ENDS
PUBLIC	?capacity@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QBEIXZ ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::capacity
; Function compile flags: /Ogsp
;	COMDAT ?capacity@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QBEIXZ PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 778  : 		}

  00008	c3		 ret	 0
?capacity@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::capacity
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IBEXXZ ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IBEXXZ PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
  0000b	cc		 int	 3
?_Xlen@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IBEXXZ ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVioMachineStruct@@@std@@QAE@ABV01@@Z ; std::allocator<ioMachineStruct *>::allocator<ioMachineStruct *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAVioMachineStruct@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAVioMachineStruct@@@std@@QAE@ABV01@@Z PROC ; std::allocator<ioMachineStruct *>::allocator<ioMachineStruct *>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@PAVioMachineStruct@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<ioMachineStruct *>::allocator<ioMachineStruct *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVioMachineStruct@@@std@@QAEXPAPAVioMachineStruct@@I@Z ; std::allocator<ioMachineStruct *>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@PAVioMachineStruct@@@std@@QAEXPAPAVioMachineStruct@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVioMachineStruct@@@std@@QAEXPAPAVioMachineStruct@@I@Z PROC ; std::allocator<ioMachineStruct *>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVioMachineStruct@@@std@@QAEXPAPAVioMachineStruct@@I@Z ENDP ; std::allocator<ioMachineStruct *>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QAE@PAPAVioMachineStruct@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QAE@PAPAVioMachineStruct@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QAE@PAPAVioMachineStruct@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QAE@PAPAVioMachineStruct@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::_Compat
; Function compile flags: /Ogsp
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::_Compat
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVioMachineStruct@@@std@@QBEIXZ ; std::allocator<ioMachineStruct *>::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@PAVioMachineStruct@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAVioMachineStruct@@@std@@QBEIXZ PROC ; std::allocator<ioMachineStruct *>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@PAVioMachineStruct@@@std@@QBEIXZ ENDP ; std::allocator<ioMachineStruct *>::max_size
_TEXT	ENDS
PUBLIC	??$addressof@QAVioMachineStruct@@@std@@YAPBQAVioMachineStruct@@ABQAV1@@Z ; std::addressof<ioMachineStruct * const>
; Function compile flags: /Ogsp
;	COMDAT ??$addressof@QAVioMachineStruct@@@std@@YAPBQAVioMachineStruct@@ABQAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAVioMachineStruct@@@std@@YAPBQAVioMachineStruct@@ABQAV1@@Z PROC ; std::addressof<ioMachineStruct * const>, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@QAVioMachineStruct@@@std@@YAPBQAVioMachineStruct@@ABQAV1@@Z ENDP ; std::addressof<ioMachineStruct * const>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@PAVioMachineStruct@@@std@@YAPAPAVioMachineStruct@@IPAPAV1@@Z ; std::_Allocate<ioMachineStruct *>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@PAVioMachineStruct@@@std@@YAPAPAVioMachineStruct@@IPAPAV1@@Z
_TEXT	SEGMENT
$T532659 = -12						; size = 12
$T532664 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVioMachineStruct@@@std@@YAPAPAVioMachineStruct@@IPAPAV1@@Z PROC ; std::_Allocate<ioMachineStruct *>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3e		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate
  00017	8b c1		 mov	 eax, ecx
  00019	c1 e0 02	 shl	 eax, 2
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	59		 pop	 ecx
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 26		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	83 65 08 00	 and	 DWORD PTR $T532664[ebp], 0
  0002b	8d 45 08	 lea	 eax, DWORD PTR $T532664[ebp]
  0002e	50		 push	 eax
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T532659[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003d	8d 45 f4	 lea	 eax, DWORD PTR $T532659[ebp]
  00040	50		 push	 eax
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T532659[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  0004d	c9		 leave
  0004e	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@PAVioMachineStruct@@@std@@YAPAPAVioMachineStruct@@IPAPAV1@@Z ENDP ; std::_Allocate<ioMachineStruct *>
_TEXT	ENDS
PUBLIC	??$forward@AAPAVioMachineStruct@@@std@@YAAAPAVioMachineStruct@@AAPAV1@@Z ; std::forward<ioMachineStruct * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAPAVioMachineStruct@@@std@@YAAAPAVioMachineStruct@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVioMachineStruct@@@std@@YAAAPAVioMachineStruct@@AAPAV1@@Z PROC ; std::forward<ioMachineStruct * &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAVioMachineStruct@@@std@@YAAAPAVioMachineStruct@@AAPAV1@@Z ENDP ; std::forward<ioMachineStruct * &>
_TEXT	ENDS
PUBLIC	??$construct@AAPAVioMachineStruct@@@?$allocator@PAVioMachineStruct@@@std@@QAEXPAPAVioMachineStruct@@AAPAV2@@Z ; std::allocator<ioMachineStruct *>::construct<ioMachineStruct * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAPAVioMachineStruct@@@?$allocator@PAVioMachineStruct@@@std@@QAEXPAPAVioMachineStruct@@AAPAV2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAPAVioMachineStruct@@@?$allocator@PAVioMachineStruct@@@std@@QAEXPAPAVioMachineStruct@@AAPAV2@@Z PROC ; std::allocator<ioMachineStruct *>::construct<ioMachineStruct * &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@construct:

; 209  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
??$construct@AAPAVioMachineStruct@@@?$allocator@PAVioMachineStruct@@@std@@QAEXPAPAVioMachineStruct@@AAPAV2@@Z ENDP ; std::allocator<ioMachineStruct *>::construct<ioMachineStruct * &>
_TEXT	ENDS
PUBLIC	??$forward@ABQAVioMachineStruct@@@std@@YAABQAVioMachineStruct@@ABQAV1@@Z ; std::forward<ioMachineStruct * const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABQAVioMachineStruct@@@std@@YAABQAVioMachineStruct@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVioMachineStruct@@@std@@YAABQAVioMachineStruct@@ABQAV1@@Z PROC ; std::forward<ioMachineStruct * const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABQAVioMachineStruct@@@std@@YAABQAVioMachineStruct@@ABQAV1@@Z ENDP ; std::forward<ioMachineStruct * const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAVioMachineStruct@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioMachineStruct@@0@Z ; std::_Ptr_cat<ioMachineStruct *,ioMachineStruct *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAVioMachineStruct@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioMachineStruct@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVioMachineStruct@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioMachineStruct@@0@Z PROC ; std::_Ptr_cat<ioMachineStruct *,ioMachineStruct *>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@PAVioMachineStruct@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioMachineStruct@@0@Z ENDP ; std::_Ptr_cat<ioMachineStruct *,ioMachineStruct *>
_TEXT	ENDS
PUBLIC	??$_Move@PAPAVioMachineStruct@@PAPAV1@@std@@YAPAPAVioMachineStruct@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ioMachineStruct * *,ioMachineStruct * *>
EXTRN	__imp__memmove:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$_Move@PAPAVioMachineStruct@@PAPAV1@@std@@YAPAPAVioMachineStruct@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAPAVioMachineStruct@@PAPAV1@@std@@YAPAPAVioMachineStruct@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<ioMachineStruct * *,ioMachineStruct * *>, COMDAT

; 2522 : 	{	// move [_First, _Last) to [_Dest, ...), pointers to scalars

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2523 : 	ptrdiff_t _Count = _Last - _First;

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	57		 push	 edi

; 2524 : 	_CSTD memmove(&*_Dest, &*_First,
; 2525 : 		_Count * sizeof (*_First));

  0000b	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0000e	c1 fe 02	 sar	 esi, 2
  00011	c1 e6 02	 shl	 esi, 2
  00014	56		 push	 esi
  00015	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00018	57		 push	 edi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2526 : 	return (_Dest + _Count);

  00022	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 2527 : 	}

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Move@PAPAVioMachineStruct@@PAPAV1@@std@@YAPAPAVioMachineStruct@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<ioMachineStruct * *,ioMachineStruct * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVioMachineStruct@@@std@@@std@@YAXPAPAVioMachineStruct@@0AAV?$allocator@PAVioMachineStruct@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ioMachineStruct *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVioMachineStruct@@@std@@@std@@YAXPAPAVioMachineStruct@@0AAV?$allocator@PAVioMachineStruct@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAVioMachineStruct@@@std@@@std@@YAXPAPAVioMachineStruct@@0AAV?$allocator@PAVioMachineStruct@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ioMachineStruct *> >, COMDAT

; 105  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAVioMachineStruct@@@std@@@std@@YAXPAPAVioMachineStruct@@0AAV?$allocator@PAVioMachineStruct@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioMachineStruct *> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAVioMachineStruct@@ABQAV1@@std@@YAXPAPAVioMachineStruct@@ABQAV1@@Z ; std::_Construct<ioMachineStruct *,ioMachineStruct * const &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Construct@PAVioMachineStruct@@ABQAV1@@std@@YAXPAPAVioMachineStruct@@ABQAV1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAVioMachineStruct@@ABQAV1@@std@@YAXPAPAVioMachineStruct@@ABQAV1@@Z PROC ; std::_Construct<ioMachineStruct *,ioMachineStruct * const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@Construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@Construct:

; 49   : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Construct@PAVioMachineStruct@@ABQAV1@@std@@YAXPAPAVioMachineStruct@@ABQAV1@@Z ENDP ; std::_Construct<ioMachineStruct *,ioMachineStruct * const &>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAPAVioMachineStruct@@@std@@YAPAPAVioMachineStruct@@PAPAV1@@Z ; std::_Val_type<ioMachineStruct * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAPAVioMachineStruct@@@std@@YAPAPAVioMachineStruct@@PAPAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAVioMachineStruct@@@std@@YAPAPAVioMachineStruct@@PAPAV1@@Z PROC ; std::_Val_type<ioMachineStruct * *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAPAVioMachineStruct@@@std@@YAPAPAVioMachineStruct@@PAPAV1@@Z ENDP ; std::_Val_type<ioMachineStruct * *>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAVioMachineStruct@@PAV1@PAV1@@std@@YAPAPAVioMachineStruct@@PAPAV1@00AAV?$allocator@PAVioMachineStruct@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioMachineStruct *,ioMachineStruct *,ioMachineStruct *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@PAVioMachineStruct@@PAV1@PAV1@@std@@YAPAPAVioMachineStruct@@PAPAV1@00AAV?$allocator@PAVioMachineStruct@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVioMachineStruct@@PAV1@PAV1@@std@@YAPAPAVioMachineStruct@@PAPAV1@00AAV?$allocator@PAVioMachineStruct@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<ioMachineStruct *,ioMachineStruct *,ioMachineStruct *>, COMDAT

; 456  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 457  : 	_DEBUG_RANGE(_First, _Last);
; 458  : 	_DEBUG_POINTER(_Dest);
; 459  : 	size_t _Count = (size_t)(_Last - _First);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2

; 460  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 461  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 462  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninit_move@PAVioMachineStruct@@PAV1@PAV1@@std@@YAPAPAVioMachineStruct@@PAPAV1@00AAV?$allocator@PAVioMachineStruct@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<ioMachineStruct *,ioMachineStruct *,ioMachineStruct *>
_TEXT	ENDS
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.h
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 165  :     D3DXVECTOR3() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	??0D3DXQUATERNION@@QAE@XZ			; D3DXQUATERNION::D3DXQUATERNION
; Function compile flags: /Ogsp
;	COMDAT ??0D3DXQUATERNION@@QAE@XZ
_TEXT	SEGMENT
??0D3DXQUATERNION@@QAE@XZ PROC				; D3DXQUATERNION::D3DXQUATERNION, COMDAT
; _this$ = ecx

; 429  :     D3DXQUATERNION() {}

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXQUATERNION@@QAE@XZ ENDP				; D3DXQUATERNION::D3DXQUATERNION
_TEXT	ENDS
PUBLIC	??0D3DXVECTOR3@@QAE@MMM@Z			; D3DXVECTOR3::D3DXVECTOR3
EXTRN	__fltused:DWORD
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.inl
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_fz$ = 16						; size = 4
??0D3DXVECTOR3@@QAE@MMM@Z PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 303  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 304  :     x = fx;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00008	8b c1		 mov	 eax, ecx
  0000a	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 305  :     y = fy;

  0000e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00013	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 306  :     z = fz;

  00018	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fz$[ebp]
  0001d	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 307  : }

  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
??0D3DXVECTOR3@@QAE@MMM@Z ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z			; D3DXVECTOR3::operator-
; Function compile flags: /Ogsp
;	COMDAT ??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z PROC			; D3DXVECTOR3::operator-, COMDAT
; _this$ = ecx

; 386  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 387  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  00006	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0000a	f3 0f 10 0a	 movss	 xmm1, DWORD PTR [edx]
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	0f 5a c0	 cvtps2pd xmm0, xmm0
  00014	0f 5a c9	 cvtps2pd xmm1, xmm1
  00017	f2 0f 5c c1	 subsd	 xmm0, xmm1
  0001b	f3 0f 10 4a 04	 movss	 xmm1, DWORD PTR [edx+4]
  00020	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00024	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00028	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  0002d	0f 5a c0	 cvtps2pd xmm0, xmm0
  00030	0f 5a c9	 cvtps2pd xmm1, xmm1
  00033	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00037	f3 0f 10 4a 08	 movss	 xmm1, DWORD PTR [edx+8]
  0003c	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00040	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
  00045	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  0004a	0f 5a c0	 cvtps2pd xmm0, xmm0
  0004d	0f 5a c9	 cvtps2pd xmm1, xmm1
  00050	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00054	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00058	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 388  : }

  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator-
_TEXT	ENDS
PUBLIC	?D3DXVec3LengthSq@@YAMPBUD3DXVECTOR3@@@Z	; D3DXVec3LengthSq
; Function compile flags: /Ogsp
;	COMDAT ?D3DXVec3LengthSq@@YAMPBUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
tv165 = 8						; size = 4
_pV$ = 8						; size = 4
?D3DXVec3LengthSq@@YAMPBUD3DXVECTOR3@@@Z PROC		; D3DXVec3LengthSq, COMDAT

; 1725 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1726 : #ifdef D3DX_DEBUG
; 1727 :     if(!pV)
; 1728 :         return 0.0f;
; 1729 : #endif
; 1730 : 
; 1731 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00003	8b 45 08	 mov	 eax, DWORD PTR _pV$[ebp]
  00006	d9 40 04	 fld	 DWORD PTR [eax+4]
  00009	d9 00		 fld	 DWORD PTR [eax]
  0000b	d9 40 08	 fld	 DWORD PTR [eax+8]
  0000e	d9 c1		 fld	 ST(1)
  00010	de ca		 fmulp	 ST(2), ST(0)
  00012	d9 c2		 fld	 ST(2)
  00014	de cb		 fmulp	 ST(3), ST(0)
  00016	d9 c9		 fxch	 ST(1)
  00018	de c2		 faddp	 ST(2), ST(0)
  0001a	d9 c0		 fld	 ST(0)
  0001c	de c9		 fmulp	 ST(1), ST(0)
  0001e	de c1		 faddp	 ST(1), ST(0)
  00020	d9 5d 08	 fstp	 DWORD PTR tv165[ebp]
  00023	d9 45 08	 fld	 DWORD PTR tv165[ebp]

; 1732 : }

  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?D3DXVec3LengthSq@@YAMPBUD3DXVECTOR3@@@Z ENDP		; D3DXVec3LengthSq
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
PUBLIC	?GetHP@ioPlayEntity@@QAEAAUStatusValue@@XZ	; ioPlayEntity::GetHP
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioplayentity.h
;	COMDAT ?GetHP@ioPlayEntity@@QAEAAUStatusValue@@XZ
_TEXT	SEGMENT
?GetHP@ioPlayEntity@@QAEAAUStatusValue@@XZ PROC		; ioPlayEntity::GetHP, COMDAT
; _this$ = ecx

; 96   : 	inline StatusValue& GetHP() { return m_HP; }

  00000	8d 81 c0 00 00
	00		 lea	 eax, DWORD PTR [ecx+192]
  00006	c3		 ret	 0
?GetHP@ioPlayEntity@@QAEAAUStatusValue@@XZ ENDP		; ioPlayEntity::GetHP
_TEXT	ENDS
PUBLIC	?GetMachineArrayIdx@ioMachineStruct@@QBEHXZ	; ioMachineStruct::GetMachineArrayIdx
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomachinestruct.h
;	COMDAT ?GetMachineArrayIdx@ioMachineStruct@@QBEHXZ
_TEXT	SEGMENT
?GetMachineArrayIdx@ioMachineStruct@@QBEHXZ PROC	; ioMachineStruct::GetMachineArrayIdx, COMDAT
; _this$ = ecx

; 162  : 	inline int GetMachineArrayIdx() const { return m_iArrayIndex; }

  00000	8b 81 d0 01 00
	00		 mov	 eax, DWORD PTR [ecx+464]
  00006	c3		 ret	 0
?GetMachineArrayIdx@ioMachineStruct@@QBEHXZ ENDP	; ioMachineStruct::GetMachineArrayIdx
_TEXT	ENDS
PUBLIC	?GetTakeEnableRange@ioMachineStruct@@QBEMXZ	; ioMachineStruct::GetTakeEnableRange
; Function compile flags: /Ogsp
;	COMDAT ?GetTakeEnableRange@ioMachineStruct@@QBEMXZ
_TEXT	SEGMENT
?GetTakeEnableRange@ioMachineStruct@@QBEMXZ PROC	; ioMachineStruct::GetTakeEnableRange, COMDAT
; _this$ = ecx

; 166  : 	inline float GetTakeEnableRange() const { return m_fTakeEnableRange; }

  00000	d9 81 bc 02 00
	00		 fld	 DWORD PTR [ecx+700]
  00006	c3		 ret	 0
?GetTakeEnableRange@ioMachineStruct@@QBEMXZ ENDP	; ioMachineStruct::GetTakeEnableRange
_TEXT	ENDS
PUBLIC	?size@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QBEIXZ ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QBEIXZ PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::size
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	?GetSingleton@ioMachineStructMgr@@SAAAV1@XZ	; ioMachineStructMgr::GetSingleton
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomachinestructmgr.cpp
;	COMDAT ?GetSingleton@ioMachineStructMgr@@SAAAV1@XZ
_TEXT	SEGMENT
?GetSingleton@ioMachineStructMgr@@SAAAV1@XZ PROC	; ioMachineStructMgr::GetSingleton, COMDAT

; 34   : 	return Singleton< ioMachineStructMgr >::GetSingleton();

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioMachineStructMgr@@@@1PAVioMachineStructMgr@@A ; Singleton<ioMachineStructMgr>::ms_Singleton

; 35   : }

  00005	c3		 ret	 0
?GetSingleton@ioMachineStructMgr@@SAAAV1@XZ ENDP	; ioMachineStructMgr::GetSingleton
_TEXT	ENDS
PUBLIC	?GetMachineStructInfo@ioMachineStructMgr@@UAEXAAVSP2Packet@@@Z ; ioMachineStructMgr::GetMachineStructInfo
EXTRN	??6SP2Packet@@QAEAAV0@ABUD3DXQUATERNION@@@Z:PROC ; SP2Packet::operator<<
EXTRN	??6SP2Packet@@QAEAAV0@ABUD3DXVECTOR3@@@Z:PROC	; SP2Packet::operator<<
EXTRN	??6SP2Packet@@QAEAAV0@AAV?$CEncrypt@M@@@Z:PROC	; SP2Packet::operator<<
EXTRN	??6SP2Packet@@QAEAAV0@H@Z:PROC			; SP2Packet::operator<<
; Function compile flags: /Ogsp
;	COMDAT ?GetMachineStructInfo@ioMachineStructMgr@@UAEXAAVSP2Packet@@@Z
_TEXT	SEGMENT
_i$531016 = -4						; size = 4
_rkPacket$ = 8						; size = 4
?GetMachineStructInfo@ioMachineStructMgr@@UAEXAAVSP2Packet@@@Z PROC ; ioMachineStructMgr::GetMachineStructInfo, COMDAT
; _this$ = ecx

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 95   : 	int iMachineCnt = m_vMachineStructList.size();

  00008	8b 9e 18 03 00
	00		 mov	 ebx, DWORD PTR [esi+792]
  0000e	2b 9e 14 03 00
	00		 sub	 ebx, DWORD PTR [esi+788]

; 96   : 	rkPacket << iMachineCnt;

  00014	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	53		 push	 ebx
  0001b	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@H@Z ; SP2Packet::operator<<

; 97   : 	for( int i=0; i < iMachineCnt; i++ )

  00020	83 65 fc 00	 and	 DWORD PTR _i$531016[ebp], 0
  00024	85 db		 test	 ebx, ebx
  00026	0f 8e 82 00 00
	00		 jle	 $LN1@GetMachine
  0002c	57		 push	 edi
$LL26@GetMachine:

; 98   : 	{
; 99   : 		rkPacket << m_vMachineStructList[i]->GetMachineArrayIdx();

  0002d	8b 86 14 03 00
	00		 mov	 eax, DWORD PTR [esi+788]
  00033	8b 7d fc	 mov	 edi, DWORD PTR _i$531016[ebp]
  00036	8b 04 b8	 mov	 eax, DWORD PTR [eax+edi*4]
  00039	ff b0 d0 01 00
	00		 push	 DWORD PTR [eax+464]
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  00042	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@H@Z ; SP2Packet::operator<<

; 100  : 		rkPacket << m_vMachineStructList[i]->GetHP().m_fCurValue;

  00047	8b 86 14 03 00
	00		 mov	 eax, DWORD PTR [esi+788]
  0004d	8b 04 b8	 mov	 eax, DWORD PTR [eax+edi*4]
  00050	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  00053	05 c0 00 00 00	 add	 eax, 192		; 000000c0H
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@AAV?$CEncrypt@M@@@Z ; SP2Packet::operator<<

; 101  : 		rkPacket << m_vMachineStructList[i]->GetHP().m_fMaxValue;

  0005e	8b 86 14 03 00
	00		 mov	 eax, DWORD PTR [esi+788]
  00064	8b 04 b8	 mov	 eax, DWORD PTR [eax+edi*4]
  00067	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  0006a	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@AAV?$CEncrypt@M@@@Z ; SP2Packet::operator<<

; 102  : 		rkPacket << m_vMachineStructList[i]->GetWorldPosition();

  00075	8b 86 14 03 00
	00		 mov	 eax, DWORD PTR [esi+788]
  0007b	8b 0c b8	 mov	 ecx, DWORD PTR [eax+edi*4]
  0007e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00080	ff 50 70	 call	 DWORD PTR [eax+112]
  00083	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@ABUD3DXVECTOR3@@@Z ; SP2Packet::operator<<

; 103  : 		rkPacket << m_vMachineStructList[i]->GetWorldOrientation();

  0008c	8b 86 14 03 00
	00		 mov	 eax, DWORD PTR [esi+788]
  00092	8b 3c b8	 mov	 edi, DWORD PTR [eax+edi*4]
  00095	8b 07		 mov	 eax, DWORD PTR [edi]
  00097	8b cf		 mov	 ecx, edi
  00099	ff 50 74	 call	 DWORD PTR [eax+116]
  0009c	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@ABUD3DXQUATERNION@@@Z ; SP2Packet::operator<<
  000a5	ff 45 fc	 inc	 DWORD PTR _i$531016[ebp]
  000a8	39 5d fc	 cmp	 DWORD PTR _i$531016[ebp], ebx
  000ab	7c 80		 jl	 SHORT $LL26@GetMachine
  000ad	5f		 pop	 edi
$LN1@GetMachine:
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx

; 104  : 	}
; 105  : }

  000b0	c9		 leave
  000b1	c2 04 00	 ret	 4
?GetMachineStructInfo@ioMachineStructMgr@@UAEXAAVSP2Packet@@@Z ENDP ; ioMachineStructMgr::GetMachineStructInfo
_TEXT	ENDS
PUBLIC	?FindMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@H@Z ; ioMachineStructMgr::FindMachineStruct
; Function compile flags: /Ogsp
;	COMDAT ?FindMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@H@Z
_TEXT	SEGMENT
_iArray$ = 8						; size = 4
?FindMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@H@Z PROC ; ioMachineStructMgr::FindMachineStruct, COMDAT
; _this$ = ecx

; 133  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 134  : 	int iMachineCnt = m_vMachineStructList.size();

  00003	8b 81 18 03 00
	00		 mov	 eax, DWORD PTR [ecx+792]
  00009	2b 81 14 03 00
	00		 sub	 eax, DWORD PTR [ecx+788]
  0000f	56		 push	 esi
  00010	c1 f8 02	 sar	 eax, 2

; 135  : 	for( int i=0; i < iMachineCnt; i++ )

  00013	33 d2		 xor	 edx, edx
  00015	57		 push	 edi
  00016	85 c0		 test	 eax, eax
  00018	7e 1d		 jle	 SHORT $LN2@FindMachin

; 134  : 	int iMachineCnt = m_vMachineStructList.size();

  0001a	8b 89 14 03 00
	00		 mov	 ecx, DWORD PTR [ecx+788]
  00020	8b f1		 mov	 esi, ecx
$LL4@FindMachin:

; 136  : 	{
; 137  : 		if( m_vMachineStructList[i]->GetMachineArrayIdx() == iArray )

  00022	8b 3e		 mov	 edi, DWORD PTR [esi]
  00024	8b bf d0 01 00
	00		 mov	 edi, DWORD PTR [edi+464]
  0002a	3b 7d 08	 cmp	 edi, DWORD PTR _iArray$[ebp]
  0002d	74 10		 je	 SHORT $LN16@FindMachin

; 135  : 	for( int i=0; i < iMachineCnt; i++ )

  0002f	42		 inc	 edx
  00030	83 c6 04	 add	 esi, 4
  00033	3b d0		 cmp	 edx, eax
  00035	7c eb		 jl	 SHORT $LL4@FindMachin
$LN2@FindMachin:

; 139  : 	}
; 140  : 
; 141  : 	return NULL;

  00037	33 c0		 xor	 eax, eax
$LN5@FindMachin:
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi

; 142  : }

  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
$LN16@FindMachin:

; 138  : 			return m_vMachineStructList[i];

  0003f	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00042	eb f5		 jmp	 SHORT $LN5@FindMachin
?FindMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@H@Z ENDP ; ioMachineStructMgr::FindMachineStruct
_TEXT	ENDS
PUBLIC	?GetMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@H@Z ; ioMachineStructMgr::GetMachineStruct
; Function compile flags: /Ogsp
;	COMDAT ?GetMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@H@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?GetMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@H@Z PROC ; ioMachineStructMgr::GetMachineStruct, COMDAT
; _this$ = ecx

; 145  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 146  : 	if( (int)m_vMachineStructList.size() > iIndex )

  00003	8d 81 14 03 00
	00		 lea	 eax, DWORD PTR [ecx+788]
  00009	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0000c	2b 10		 sub	 edx, DWORD PTR [eax]
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00011	c1 fa 02	 sar	 edx, 2
  00014	3b d1		 cmp	 edx, ecx
  00016	7e 07		 jle	 SHORT $LN1@GetMachine@2

; 147  : 		return m_vMachineStructList[iIndex];

  00018	8b 00		 mov	 eax, DWORD PTR [eax]
  0001a	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  0001d	eb 02		 jmp	 SHORT $LN2@GetMachine@2
$LN1@GetMachine@2:

; 148  : 
; 149  : 	return NULL;

  0001f	33 c0		 xor	 eax, eax
$LN2@GetMachine@2:

; 150  : }

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?GetMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@H@Z ENDP ; ioMachineStructMgr::GetMachineStruct
_TEXT	ENDS
PUBLIC	?FindTakeEnableMachine@ioMachineStructMgr@@QAEPAVioMachineStruct@@PAVioBaseChar@@@Z ; ioMachineStructMgr::FindTakeEnableMachine
EXTRN	__imp_?infinity@?$numeric_limits@M@std@@SAMXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?FindTakeEnableMachine@ioMachineStructMgr@@QAEPAVioMachineStruct@@PAVioBaseChar@@@Z
_TEXT	SEGMENT
_vPos$ = -16						; size = 12
_pMachine$ = -4						; size = 4
_fCurDistance$ = 8					; size = 4
_pChar$ = 8						; size = 4
?FindTakeEnableMachine@ioMachineStructMgr@@QAEPAVioMachineStruct@@PAVioBaseChar@@@Z PROC ; ioMachineStructMgr::FindTakeEnableMachine, COMDAT
; _this$ = ecx

; 159  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx

; 160  : 	if( !pChar ) return NULL;

  00009	8b 4d 08	 mov	 ecx, DWORD PTR _pChar$[ebp]
  0000c	85 c9		 test	 ecx, ecx
  0000e	75 07		 jne	 SHORT $LN7@FindTakeEn
  00010	33 c0		 xor	 eax, eax
  00012	e9 29 01 00 00	 jmp	 $LN8@FindTakeEn
$LN7@FindTakeEn:

; 161  : 
; 162  : 	D3DXVECTOR3 vPos = pChar->GetWorldPosition();

  00017	8b 01		 mov	 eax, DWORD PTR [ecx]
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	ff 50 70	 call	 DWORD PTR [eax+112]
  0001e	8b f0		 mov	 esi, eax
  00020	8d 7d f0	 lea	 edi, DWORD PTR _vPos$[ebp]
  00023	a5		 movsd
  00024	a5		 movsd
  00025	a5		 movsd

; 163  : 	ioMachineStruct *pMachine = NULL;

  00026	33 ff		 xor	 edi, edi
  00028	89 7d fc	 mov	 DWORD PTR _pMachine$[ebp], edi

; 164  : 	float fCurDistance = std::numeric_limits<float>::infinity();

  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?infinity@?$numeric_limits@M@std@@SAMXZ

; 165  : 	for( int i=0; i < (int)m_vMachineStructList.size(); ++i )

  00031	8b 83 18 03 00
	00		 mov	 eax, DWORD PTR [ebx+792]
  00037	2b 83 14 03 00
	00		 sub	 eax, DWORD PTR [ebx+788]
  0003d	d9 5d 08	 fstp	 DWORD PTR _fCurDistance$[ebp]
  00040	a9 fc ff ff ff	 test	 eax, -4			; fffffffcH
  00045	0f 8e f0 00 00
	00		 jle	 $LN4@FindTakeEn
$LL6@FindTakeEn:

; 166  : 	{
; 167  : 		ioMachineStruct *pCheck = m_vMachineStructList[i];

  0004b	8b 83 14 03 00
	00		 mov	 eax, DWORD PTR [ebx+788]
  00051	8b 34 b8	 mov	 esi, DWORD PTR [eax+edi*4]

; 168  : 		if( !pCheck ) continue;

  00054	85 f6		 test	 esi, esi
  00056	0f 84 c7 00 00
	00		 je	 $LN5@FindTakeEn

; 169  : 
; 170  : 		if( !pCheck->IsTakeEnableState() )

  0005c	8b 06		 mov	 eax, DWORD PTR [esi]
  0005e	8b ce		 mov	 ecx, esi
  00060	ff 90 28 01 00
	00		 call	 DWORD PTR [eax+296]
  00066	84 c0		 test	 al, al
  00068	0f 84 b5 00 00
	00		 je	 $LN5@FindTakeEn

; 171  : 			continue;
; 172  : 
; 173  : 		D3DXVECTOR3 vDiff = vPos - pCheck->GetWorldPosition();

  0006e	8b 06		 mov	 eax, DWORD PTR [esi]
  00070	8b ce		 mov	 ecx, esi
  00072	ff 50 70	 call	 DWORD PTR [eax+112]
  00075	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _vPos$[ebp]
  0007a	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  0007e	f3 0f 10 50 04	 movss	 xmm2, DWORD PTR [eax+4]
  00083	f3 0f 10 58 08	 movss	 xmm3, DWORD PTR [eax+8]
  00088	0f 5a c0	 cvtps2pd xmm0, xmm0
  0008b	0f 5a c9	 cvtps2pd xmm1, xmm1
  0008e	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00092	0f 57 c9	 xorps	 xmm1, xmm1
  00095	f2 0f 5a c8	 cvtsd2ss xmm1, xmm0
  00099	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _vPos$[ebp+4]
  0009e	0f 5a c0	 cvtps2pd xmm0, xmm0
  000a1	0f 5a d2	 cvtps2pd xmm2, xmm2
  000a4	f2 0f 5c c2	 subsd	 xmm0, xmm2
  000a8	f3 0f 10 55 f8	 movss	 xmm2, DWORD PTR _vPos$[ebp+8]
  000ad	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b1	0f 5a d2	 cvtps2pd xmm2, xmm2

; 174  : 		float fGapDistance = D3DXVec3LengthSq( &vDiff );

  000b4	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000b8	f2 0f 59 c0	 mulsd	 xmm0, xmm0
  000bc	0f 5a c9	 cvtps2pd xmm1, xmm1
  000bf	f2 0f 59 c9	 mulsd	 xmm1, xmm1
  000c3	f2 0f 58 c8	 addsd	 xmm1, xmm0

; 175  : 
; 176  : 		float fTakeRangeSq = pCheck->GetTakeEnableRange() * pCheck->GetTakeEnableRange();

  000c7	f3 0f 10 86 bc
	02 00 00	 movss	 xmm0, DWORD PTR [esi+700]
  000cf	0f 5a db	 cvtps2pd xmm3, xmm3
  000d2	f2 0f 5c d3	 subsd	 xmm2, xmm3
  000d6	f2 0f 5a d2	 cvtsd2ss xmm2, xmm2
  000da	f3 0f 5a d2	 cvtss2sd xmm2, xmm2
  000de	f2 0f 59 d2	 mulsd	 xmm2, xmm2
  000e2	0f 5a c0	 cvtps2pd xmm0, xmm0
  000e5	f2 0f 58 ca	 addsd	 xmm1, xmm2
  000e9	f2 0f 59 c0	 mulsd	 xmm0, xmm0
  000ed	66 0f 5a c9	 cvtpd2ps xmm1, xmm1

; 177  : 		if( fGapDistance < fTakeRangeSq && fGapDistance < fCurDistance )

  000f1	0f 57 d2	 xorps	 xmm2, xmm2
  000f4	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  000f8	f3 0f 5a d1	 cvtss2sd xmm2, xmm1
  000fc	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00100	66 0f 2f c2	 comisd	 xmm0, xmm2
  00104	76 1d		 jbe	 SHORT $LN5@FindTakeEn
  00106	f3 0f 10 55 08	 movss	 xmm2, DWORD PTR _fCurDistance$[ebp]
  0010b	0f 57 c0	 xorps	 xmm0, xmm0
  0010e	f3 0f 5a c1	 cvtss2sd xmm0, xmm1
  00112	0f 5a d2	 cvtps2pd xmm2, xmm2
  00115	66 0f 2f d0	 comisd	 xmm2, xmm0
  00119	76 08		 jbe	 SHORT $LN5@FindTakeEn

; 178  : 		{
; 179  : 			pMachine = pCheck;

  0011b	89 75 fc	 mov	 DWORD PTR _pMachine$[ebp], esi

; 180  : 			fCurDistance = fGapDistance;

  0011e	f3 0f 11 4d 08	 movss	 DWORD PTR _fCurDistance$[ebp], xmm1
$LN5@FindTakeEn:

; 165  : 	for( int i=0; i < (int)m_vMachineStructList.size(); ++i )

  00123	8b 83 18 03 00
	00		 mov	 eax, DWORD PTR [ebx+792]
  00129	2b 83 14 03 00
	00		 sub	 eax, DWORD PTR [ebx+788]
  0012f	47		 inc	 edi
  00130	c1 f8 02	 sar	 eax, 2
  00133	3b f8		 cmp	 edi, eax
  00135	0f 8c 10 ff ff
	ff		 jl	 $LL6@FindTakeEn
$LN4@FindTakeEn:

; 181  : 		}
; 182  : 	}
; 183  : 
; 184  : 	return pMachine;

  0013b	8b 45 fc	 mov	 eax, DWORD PTR _pMachine$[ebp]
  0013e	5f		 pop	 edi
  0013f	5e		 pop	 esi
$LN8@FindTakeEn:
  00140	5b		 pop	 ebx

; 185  : }

  00141	c9		 leave
  00142	c2 04 00	 ret	 4
?FindTakeEnableMachine@ioMachineStructMgr@@QAEPAVioMachineStruct@@PAVioBaseChar@@@Z ENDP ; ioMachineStructMgr::FindTakeEnableMachine
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBEAAPAVioMachineStruct@@XZ ; std::_Vector_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBEAAPAVioMachineStruct@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBEAAPAVioMachineStruct@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::operator*, COMDAT
; _this$ = ecx

; 322  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 323  : 		}

  00002	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBEAAPAVioMachineStruct@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::operator++, COMDAT
; _this$ = ecx

; 331  : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 332  : 		++*(_Mybase *)this;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 333  : 		return (*this);
; 334  : 		}

  00005	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE@V?$allocator@PAVioMachineStruct@@@1@@Z ; std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE@V?$allocator@PAVioMachineStruct@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE@V?$allocator@PAVioMachineStruct@@@1@@Z PROC ; std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE@V?$allocator@PAVioMachineStruct@@@1@@Z ENDP ; std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QAE@PAPAVioMachineStruct@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::_Vector_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QAE@PAPAVioMachineStruct@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QAE@PAPAVioMachineStruct@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::_Vector_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QAE@PAPAVioMachineStruct@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::_Vector_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::operator==
_TEXT	ENDS
PUBLIC	?max_size@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QBEIXZ ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QBEIXZ PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IBEII@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IBEII@Z PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  00008	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  0000d	c1 f8 02	 sar	 eax, 2
  00010	8b c8		 mov	 ecx, eax
  00012	d1 e9		 shr	 ecx, 1
  00014	2b d1		 sub	 edx, ecx
  00016	3b d0		 cmp	 edx, eax
  00018	73 04		 jae	 SHORT $LN4@Grow_to
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 02		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  0001e	03 c1		 add	 eax, ecx
$LN5@Grow_to:

; 1279 : 		if (_Capacity < _Count)

  00020	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00023	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IBEII@Z ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Grow_to
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAVioMachineStruct@@@std@@QAEPAPAVioMachineStruct@@I@Z ; std::allocator<ioMachineStruct *>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@PAVioMachineStruct@@@std@@QAEPAPAVioMachineStruct@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVioMachineStruct@@@std@@QAEPAPAVioMachineStruct@@I@Z PROC ; std::allocator<ioMachineStruct *>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@PAVioMachineStruct@@@std@@YAPAPAVioMachineStruct@@IPAPAV1@@Z ; std::_Allocate<ioMachineStruct *>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@PAVioMachineStruct@@@std@@QAEPAPAVioMachineStruct@@I@Z ENDP ; std::allocator<ioMachineStruct *>::allocate
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$SetFileName_e@$0BO@@ioINILoader@@QAEXAAY0BO@$$CBD_N@Z ; ioINILoader::SetFileName_e<30>
EXTRN	__imp_?SetFileName@ioINILoader@@QAEXPBD_N@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$SetFileName_e@$0BO@@ioINILoader@@QAEXAAY0BO@$$CBD_N@Z
_TEXT	SEGMENT
__f$ = -40						; size = 30
__$ArrayPad$ = -4					; size = 4
_f$ = 8							; size = 4
_b$ = 12						; size = 1
??$SetFileName_e@$0BO@@ioINILoader@@QAEXAAY0BO@$$CBD_N@Z PROC ; ioINILoader::SetFileName_e<30>, COMDAT
; _this$ = ecx

; 196  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _f$[ebp]

; 197  : 		_ENCSTR(f, _f);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	84 d2		 test	 dl, dl
  0001b	0f 84 dd 02 00
	00		 je	 $LN96@SetFileNam
  00021	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00024	88 55 d8	 mov	 BYTE PTR __f$[ebp], dl
  00027	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0002a	84 d2		 test	 dl, dl
  0002c	0f 84 c6 02 00
	00		 je	 $LN95@SetFileNam
  00032	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00035	88 55 d9	 mov	 BYTE PTR __f$[ebp+1], dl
  00038	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003b	84 d2		 test	 dl, dl
  0003d	0f 84 af 02 00
	00		 je	 $LN94@SetFileNam
  00043	b1 eb		 mov	 cl, -21			; ffffffebH
  00045	32 d1		 xor	 dl, cl
  00047	88 55 da	 mov	 BYTE PTR __f$[ebp+2], dl
  0004a	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004d	84 d2		 test	 dl, dl
  0004f	0f 84 97 02 00
	00		 je	 $LN93@SetFileNam
  00055	b3 ea		 mov	 bl, -22			; ffffffeaH
  00057	32 d3		 xor	 dl, bl
  00059	88 55 db	 mov	 BYTE PTR __f$[ebp+3], dl
  0005c	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005f	84 d2		 test	 dl, dl
  00061	0f 84 7f 02 00
	00		 je	 $LN92@SetFileNam
  00067	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0006a	88 55 dc	 mov	 BYTE PTR __f$[ebp+4], dl
  0006d	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00070	84 d2		 test	 dl, dl
  00072	0f 84 68 02 00
	00		 je	 $LN91@SetFileNam
  00078	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0007b	88 55 dd	 mov	 BYTE PTR __f$[ebp+5], dl
  0007e	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00081	84 d2		 test	 dl, dl
  00083	0f 84 52 02 00
	00		 je	 $LN90@SetFileNam
  00089	32 d1		 xor	 dl, cl
  0008b	88 55 de	 mov	 BYTE PTR __f$[ebp+6], dl
  0008e	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00091	84 d2		 test	 dl, dl
  00093	0f 84 3d 02 00
	00		 je	 $LN89@SetFileNam
  00099	32 d3		 xor	 dl, bl
  0009b	88 55 df	 mov	 BYTE PTR __f$[ebp+7], dl
  0009e	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a1	84 d2		 test	 dl, dl
  000a3	0f 84 27 02 00
	00		 je	 $LN88@SetFileNam
  000a9	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ac	88 55 e0	 mov	 BYTE PTR __f$[ebp+8], dl
  000af	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b2	84 d2		 test	 dl, dl
  000b4	0f 84 10 02 00
	00		 je	 $LN87@SetFileNam
  000ba	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000bd	88 55 e1	 mov	 BYTE PTR __f$[ebp+9], dl
  000c0	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c3	84 d2		 test	 dl, dl
  000c5	0f 84 fa 01 00
	00		 je	 $LN86@SetFileNam
  000cb	32 d1		 xor	 dl, cl
  000cd	88 55 e2	 mov	 BYTE PTR __f$[ebp+10], dl
  000d0	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d3	84 d2		 test	 dl, dl
  000d5	0f 84 e5 01 00
	00		 je	 $LN85@SetFileNam
  000db	32 d3		 xor	 dl, bl
  000dd	88 55 e3	 mov	 BYTE PTR __f$[ebp+11], dl
  000e0	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e3	84 d2		 test	 dl, dl
  000e5	0f 84 cf 01 00
	00		 je	 $LN84@SetFileNam
  000eb	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ee	88 55 e4	 mov	 BYTE PTR __f$[ebp+12], dl
  000f1	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f4	84 d2		 test	 dl, dl
  000f6	0f 84 b8 01 00
	00		 je	 $LN83@SetFileNam
  000fc	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000ff	88 55 e5	 mov	 BYTE PTR __f$[ebp+13], dl
  00102	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  00105	84 d2		 test	 dl, dl
  00107	0f 84 a2 01 00
	00		 je	 $LN82@SetFileNam
  0010d	32 d1		 xor	 dl, cl
  0010f	88 55 e6	 mov	 BYTE PTR __f$[ebp+14], dl
  00112	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00115	84 d2		 test	 dl, dl
  00117	0f 84 8d 01 00
	00		 je	 $LN81@SetFileNam
  0011d	32 d3		 xor	 dl, bl
  0011f	88 55 e7	 mov	 BYTE PTR __f$[ebp+15], dl
  00122	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00125	84 d2		 test	 dl, dl
  00127	0f 84 77 01 00
	00		 je	 $LN80@SetFileNam
  0012d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00130	88 55 e8	 mov	 BYTE PTR __f$[ebp+16], dl
  00133	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00136	84 d2		 test	 dl, dl
  00138	0f 84 60 01 00
	00		 je	 $LN79@SetFileNam
  0013e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00141	88 55 e9	 mov	 BYTE PTR __f$[ebp+17], dl
  00144	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  00147	84 d2		 test	 dl, dl
  00149	0f 84 4a 01 00
	00		 je	 $LN78@SetFileNam
  0014f	32 d1		 xor	 dl, cl
  00151	88 55 ea	 mov	 BYTE PTR __f$[ebp+18], dl
  00154	8a 50 13	 mov	 dl, BYTE PTR [eax+19]
  00157	84 d2		 test	 dl, dl
  00159	0f 84 35 01 00
	00		 je	 $LN77@SetFileNam
  0015f	32 d3		 xor	 dl, bl
  00161	88 55 eb	 mov	 BYTE PTR __f$[ebp+19], dl
  00164	8a 50 14	 mov	 dl, BYTE PTR [eax+20]
  00167	84 d2		 test	 dl, dl
  00169	0f 84 1f 01 00
	00		 je	 $LN76@SetFileNam
  0016f	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00172	88 55 ec	 mov	 BYTE PTR __f$[ebp+20], dl
  00175	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00178	84 d2		 test	 dl, dl
  0017a	0f 84 08 01 00
	00		 je	 $LN75@SetFileNam
  00180	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00183	88 55 ed	 mov	 BYTE PTR __f$[ebp+21], dl
  00186	8a 50 16	 mov	 dl, BYTE PTR [eax+22]
  00189	84 d2		 test	 dl, dl
  0018b	0f 84 f2 00 00
	00		 je	 $LN74@SetFileNam
  00191	32 d1		 xor	 dl, cl
  00193	88 55 ee	 mov	 BYTE PTR __f$[ebp+22], dl
  00196	8a 50 17	 mov	 dl, BYTE PTR [eax+23]
  00199	84 d2		 test	 dl, dl
  0019b	0f 84 dd 00 00
	00		 je	 $LN73@SetFileNam
  001a1	32 d3		 xor	 dl, bl
  001a3	88 55 ef	 mov	 BYTE PTR __f$[ebp+23], dl
  001a6	8a 50 18	 mov	 dl, BYTE PTR [eax+24]
  001a9	84 d2		 test	 dl, dl
  001ab	0f 84 c4 00 00
	00		 je	 $LN72@SetFileNam
  001b1	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001b4	88 55 f0	 mov	 BYTE PTR __f$[ebp+24], dl
  001b7	8a 50 19	 mov	 dl, BYTE PTR [eax+25]
  001ba	84 d2		 test	 dl, dl
  001bc	0f 84 aa 00 00
	00		 je	 $LN71@SetFileNam
  001c2	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001c5	88 55 f1	 mov	 BYTE PTR __f$[ebp+25], dl
  001c8	8a 50 1a	 mov	 dl, BYTE PTR [eax+26]
  001cb	84 d2		 test	 dl, dl
  001cd	0f 84 91 00 00
	00		 je	 $LN70@SetFileNam
  001d3	32 d1		 xor	 dl, cl
  001d5	88 55 f2	 mov	 BYTE PTR __f$[ebp+26], dl
  001d8	8a 50 1b	 mov	 dl, BYTE PTR [eax+27]
  001db	84 d2		 test	 dl, dl
  001dd	74 7d		 je	 SHORT $LN69@SetFileNam
  001df	32 d3		 xor	 dl, bl
  001e1	88 55 f3	 mov	 BYTE PTR __f$[ebp+27], dl
  001e4	8a 50 1c	 mov	 dl, BYTE PTR [eax+28]
  001e7	84 d2		 test	 dl, dl
  001e9	74 68		 je	 SHORT $LN68@SetFileNam
  001eb	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001ee	80 78 1d 00	 cmp	 BYTE PTR [eax+29], 0
  001f2	88 55 f4	 mov	 BYTE PTR __f$[ebp+28], dl
  001f5	0f 84 07 01 00
	00		 je	 $LN1@SetFileNam
  001fb	8a 50 1e	 mov	 dl, BYTE PTR [eax+30]
  001fe	84 d2		 test	 dl, dl
  00200	74 49		 je	 SHORT $LN66@SetFileNam
  00202	32 d1		 xor	 dl, cl
  00204	88 55 f6	 mov	 BYTE PTR __f$[ebp+30], dl
  00207	8a 50 1f	 mov	 dl, BYTE PTR [eax+31]
  0020a	84 d2		 test	 dl, dl
  0020c	74 35		 je	 SHORT $LN65@SetFileNam
  0020e	32 d3		 xor	 dl, bl
  00210	88 55 f7	 mov	 BYTE PTR __f$[ebp+31], dl
  00213	8a 50 20	 mov	 dl, BYTE PTR [eax+32]
  00216	84 d2		 test	 dl, dl
  00218	74 20		 je	 SHORT $LN64@SetFileNam
  0021a	8a 40 21	 mov	 al, BYTE PTR [eax+33]
  0021d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00220	88 55 f8	 mov	 BYTE PTR __f$[ebp+32], dl
  00223	84 c0		 test	 al, al
  00225	74 0a		 je	 SHORT $LN63@SetFileNam
  00227	34 ec		 xor	 al, -20			; ffffffecH
  00229	88 45 f9	 mov	 BYTE PTR __f$[ebp+33], al
  0022c	e9 d1 00 00 00	 jmp	 $LN1@SetFileNam
$LN63@SetFileNam:
  00231	c6 45 f9 ec	 mov	 BYTE PTR __f$[ebp+33], -20 ; ffffffecH
  00235	e9 c8 00 00 00	 jmp	 $LN1@SetFileNam
$LN64@SetFileNam:
  0023a	c6 45 f8 ed	 mov	 BYTE PTR __f$[ebp+32], -19 ; ffffffedH
  0023e	e9 bf 00 00 00	 jmp	 $LN1@SetFileNam
$LN65@SetFileNam:
  00243	88 5d f7	 mov	 BYTE PTR __f$[ebp+31], bl
  00246	e9 b7 00 00 00	 jmp	 $LN1@SetFileNam
$LN66@SetFileNam:
  0024b	88 4d f6	 mov	 BYTE PTR __f$[ebp+30], cl
  0024e	e9 af 00 00 00	 jmp	 $LN1@SetFileNam
$LN68@SetFileNam:
  00253	c6 45 f4 ed	 mov	 BYTE PTR __f$[ebp+28], -19 ; ffffffedH
  00257	e9 a6 00 00 00	 jmp	 $LN1@SetFileNam
$LN69@SetFileNam:
  0025c	88 5d f3	 mov	 BYTE PTR __f$[ebp+27], bl
  0025f	e9 9e 00 00 00	 jmp	 $LN1@SetFileNam
$LN70@SetFileNam:
  00264	88 4d f2	 mov	 BYTE PTR __f$[ebp+26], cl
  00267	e9 96 00 00 00	 jmp	 $LN1@SetFileNam
$LN71@SetFileNam:
  0026c	c6 45 f1 ec	 mov	 BYTE PTR __f$[ebp+25], -20 ; ffffffecH
  00270	e9 8d 00 00 00	 jmp	 $LN1@SetFileNam
$LN72@SetFileNam:
  00275	c6 45 f0 ed	 mov	 BYTE PTR __f$[ebp+24], -19 ; ffffffedH
  00279	e9 84 00 00 00	 jmp	 $LN1@SetFileNam
$LN73@SetFileNam:
  0027e	88 5d ef	 mov	 BYTE PTR __f$[ebp+23], bl
  00281	eb 7f		 jmp	 SHORT $LN1@SetFileNam
$LN74@SetFileNam:
  00283	88 4d ee	 mov	 BYTE PTR __f$[ebp+22], cl
  00286	eb 7a		 jmp	 SHORT $LN1@SetFileNam
$LN75@SetFileNam:
  00288	c6 45 ed ec	 mov	 BYTE PTR __f$[ebp+21], -20 ; ffffffecH
  0028c	eb 74		 jmp	 SHORT $LN1@SetFileNam
$LN76@SetFileNam:
  0028e	c6 45 ec ed	 mov	 BYTE PTR __f$[ebp+20], -19 ; ffffffedH
  00292	eb 6e		 jmp	 SHORT $LN1@SetFileNam
$LN77@SetFileNam:
  00294	88 5d eb	 mov	 BYTE PTR __f$[ebp+19], bl
  00297	eb 69		 jmp	 SHORT $LN1@SetFileNam
$LN78@SetFileNam:
  00299	88 4d ea	 mov	 BYTE PTR __f$[ebp+18], cl
  0029c	eb 64		 jmp	 SHORT $LN1@SetFileNam
$LN79@SetFileNam:
  0029e	c6 45 e9 ec	 mov	 BYTE PTR __f$[ebp+17], -20 ; ffffffecH
  002a2	eb 5e		 jmp	 SHORT $LN1@SetFileNam
$LN80@SetFileNam:
  002a4	c6 45 e8 ed	 mov	 BYTE PTR __f$[ebp+16], -19 ; ffffffedH
  002a8	eb 58		 jmp	 SHORT $LN1@SetFileNam
$LN81@SetFileNam:
  002aa	88 5d e7	 mov	 BYTE PTR __f$[ebp+15], bl
  002ad	eb 53		 jmp	 SHORT $LN1@SetFileNam
$LN82@SetFileNam:
  002af	88 4d e6	 mov	 BYTE PTR __f$[ebp+14], cl
  002b2	eb 4e		 jmp	 SHORT $LN1@SetFileNam
$LN83@SetFileNam:
  002b4	c6 45 e5 ec	 mov	 BYTE PTR __f$[ebp+13], -20 ; ffffffecH
  002b8	eb 48		 jmp	 SHORT $LN1@SetFileNam
$LN84@SetFileNam:
  002ba	c6 45 e4 ed	 mov	 BYTE PTR __f$[ebp+12], -19 ; ffffffedH
  002be	eb 42		 jmp	 SHORT $LN1@SetFileNam
$LN85@SetFileNam:
  002c0	88 5d e3	 mov	 BYTE PTR __f$[ebp+11], bl
  002c3	eb 3d		 jmp	 SHORT $LN1@SetFileNam
$LN86@SetFileNam:
  002c5	88 4d e2	 mov	 BYTE PTR __f$[ebp+10], cl
  002c8	eb 38		 jmp	 SHORT $LN1@SetFileNam
$LN87@SetFileNam:
  002ca	c6 45 e1 ec	 mov	 BYTE PTR __f$[ebp+9], -20 ; ffffffecH
  002ce	eb 32		 jmp	 SHORT $LN1@SetFileNam
$LN88@SetFileNam:
  002d0	c6 45 e0 ed	 mov	 BYTE PTR __f$[ebp+8], -19 ; ffffffedH
  002d4	eb 2c		 jmp	 SHORT $LN1@SetFileNam
$LN89@SetFileNam:
  002d6	88 5d df	 mov	 BYTE PTR __f$[ebp+7], bl
  002d9	eb 27		 jmp	 SHORT $LN1@SetFileNam
$LN90@SetFileNam:
  002db	88 4d de	 mov	 BYTE PTR __f$[ebp+6], cl
  002de	eb 22		 jmp	 SHORT $LN1@SetFileNam
$LN91@SetFileNam:
  002e0	c6 45 dd ec	 mov	 BYTE PTR __f$[ebp+5], -20 ; ffffffecH
  002e4	eb 1c		 jmp	 SHORT $LN1@SetFileNam
$LN92@SetFileNam:
  002e6	c6 45 dc ed	 mov	 BYTE PTR __f$[ebp+4], -19 ; ffffffedH
  002ea	eb 16		 jmp	 SHORT $LN1@SetFileNam
$LN93@SetFileNam:
  002ec	c6 45 db ea	 mov	 BYTE PTR __f$[ebp+3], -22 ; ffffffeaH
  002f0	eb 10		 jmp	 SHORT $LN1@SetFileNam
$LN94@SetFileNam:
  002f2	c6 45 da eb	 mov	 BYTE PTR __f$[ebp+2], -21 ; ffffffebH
  002f6	eb 0a		 jmp	 SHORT $LN1@SetFileNam
$LN95@SetFileNam:
  002f8	c6 45 d9 ec	 mov	 BYTE PTR __f$[ebp+1], -20 ; ffffffecH
  002fc	eb 04		 jmp	 SHORT $LN1@SetFileNam
$LN96@SetFileNam:
  002fe	c6 45 d8 ed	 mov	 BYTE PTR __f$[ebp], -19	; ffffffedH
$LN1@SetFileNam:
  00302	6a 07		 push	 7
  00304	8d 45 d8	 lea	 eax, DWORD PTR __f$[ebp]
  00307	c6 45 f5 00	 mov	 BYTE PTR __f$[ebp+29], 0
  0030b	5a		 pop	 edx
$LL104@SetFileNam:
  0030c	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00312	83 c0 04	 add	 eax, 4
  00315	4a		 dec	 edx
  00316	75 f4		 jne	 SHORT $LL104@SetFileNam

; 198  : 		SetFileName(_f, b);

  00318	ff 75 0c	 push	 DWORD PTR _b$[ebp]
  0031b	80 75 f4 ed	 xor	 BYTE PTR __f$[ebp+28], -19 ; ffffffedH
  0031f	8d 45 d8	 lea	 eax, DWORD PTR __f$[ebp]
  00322	50		 push	 eax
  00323	8b ce		 mov	 ecx, esi
  00325	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetFileName@ioINILoader@@QAEXPBD_N@Z

; 199  : 	}

  0032b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0032e	5e		 pop	 esi
  0032f	33 cd		 xor	 ecx, ebp
  00331	5b		 pop	 ebx
  00332	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00337	c9		 leave
  00338	c2 08 00	 ret	 8
??$SetFileName_e@$0BO@@ioINILoader@@QAEXAAY0BO@$$CBD_N@Z ENDP ; ioINILoader::SetFileName_e<30>
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadString_e@$0P@@ioINILoader@@QAEXAAY0P@$$CBDAAY00$$CBDPADH@Z ; ioINILoader::LoadString_e<15>
EXTRN	__imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$LoadString_e@$0P@@ioINILoader@@QAEXAAY0P@$$CBDAAY00$$CBDPADH@Z
_TEXT	SEGMENT
_this$GSCopy$ = -28					; size = 4
__k$ = -24						; size = 15
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_d$ = 12						; size = 4
_b$ = 16						; size = 4
_i$ = 20						; size = 4
??$LoadString_e@$0P@@ioINILoader@@QAEXAAY0P@$$CBDAAY00$$CBDPADH@Z PROC ; ioINILoader::LoadString_e<15>, COMDAT
; _this$ = ecx

; 161  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 162  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b 75 0c	 mov	 esi, DWORD PTR _d$[ebp]
  00019	57		 push	 edi
  0001a	8b 7d 10	 mov	 edi, DWORD PTR _b$[ebp]
  0001d	89 4d e4	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  00020	84 d2		 test	 dl, dl
  00022	0f 84 75 01 00
	00		 je	 $LN96@LoadString
  00028	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0002b	88 55 e8	 mov	 BYTE PTR __k$[ebp], dl
  0002e	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00031	84 d2		 test	 dl, dl
  00033	0f 84 5e 01 00
	00		 je	 $LN95@LoadString
  00039	b1 ec		 mov	 cl, -20			; ffffffecH
  0003b	32 d1		 xor	 dl, cl
  0003d	88 55 e9	 mov	 BYTE PTR __k$[ebp+1], dl
  00040	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  00043	84 d2		 test	 dl, dl
  00045	0f 84 46 01 00
	00		 je	 $LN94@LoadString
  0004b	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0004e	88 55 ea	 mov	 BYTE PTR __k$[ebp+2], dl
  00051	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  00054	84 d2		 test	 dl, dl
  00056	0f 84 2f 01 00
	00		 je	 $LN93@LoadString
  0005c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0005f	88 55 eb	 mov	 BYTE PTR __k$[ebp+3], dl
  00062	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00065	84 d2		 test	 dl, dl
  00067	0f 84 18 01 00
	00		 je	 $LN92@LoadString
  0006d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00070	88 55 ec	 mov	 BYTE PTR __k$[ebp+4], dl
  00073	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00076	84 d2		 test	 dl, dl
  00078	0f 84 02 01 00
	00		 je	 $LN91@LoadString
  0007e	32 d1		 xor	 dl, cl
  00080	88 55 ed	 mov	 BYTE PTR __k$[ebp+5], dl
  00083	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00086	84 d2		 test	 dl, dl
  00088	0f 84 ec 00 00
	00		 je	 $LN90@LoadString
  0008e	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00091	88 55 ee	 mov	 BYTE PTR __k$[ebp+6], dl
  00094	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00097	84 d2		 test	 dl, dl
  00099	0f 84 d5 00 00
	00		 je	 $LN89@LoadString
  0009f	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000a2	88 55 ef	 mov	 BYTE PTR __k$[ebp+7], dl
  000a5	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a8	84 d2		 test	 dl, dl
  000aa	0f 84 be 00 00
	00		 je	 $LN88@LoadString
  000b0	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000b3	88 55 f0	 mov	 BYTE PTR __k$[ebp+8], dl
  000b6	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b9	84 d2		 test	 dl, dl
  000bb	0f 84 a8 00 00
	00		 je	 $LN87@LoadString
  000c1	32 d1		 xor	 dl, cl
  000c3	88 55 f1	 mov	 BYTE PTR __k$[ebp+9], dl
  000c6	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c9	84 d2		 test	 dl, dl
  000cb	0f 84 92 00 00
	00		 je	 $LN86@LoadString
  000d1	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000d4	88 55 f2	 mov	 BYTE PTR __k$[ebp+10], dl
  000d7	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000da	84 d2		 test	 dl, dl
  000dc	74 7f		 je	 SHORT $LN85@LoadString
  000de	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000e1	88 55 f3	 mov	 BYTE PTR __k$[ebp+11], dl
  000e4	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e7	84 d2		 test	 dl, dl
  000e9	74 6c		 je	 SHORT $LN84@LoadString
  000eb	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ee	88 55 f4	 mov	 BYTE PTR __k$[ebp+12], dl
  000f1	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f4	84 d2		 test	 dl, dl
  000f6	74 5a		 je	 SHORT $LN83@LoadString
  000f8	32 d1		 xor	 dl, cl
  000fa	80 78 0e 00	 cmp	 BYTE PTR [eax+14], 0
  000fe	88 55 f5	 mov	 BYTE PTR __k$[ebp+13], dl
  00101	0f 84 9a 00 00
	00		 je	 $LN111@LoadString
  00107	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  0010a	84 d2		 test	 dl, dl
  0010c	74 3e		 je	 SHORT $LN81@LoadString
  0010e	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00111	88 55 f7	 mov	 BYTE PTR __k$[ebp+15], dl
  00114	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00117	84 d2		 test	 dl, dl
  00119	74 2b		 je	 SHORT $LN80@LoadString
  0011b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0011e	88 55 f8	 mov	 BYTE PTR __k$[ebp+16], dl
  00121	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00124	84 d2		 test	 dl, dl
  00126	74 19		 je	 SHORT $LN79@LoadString
  00128	8a 40 12	 mov	 al, BYTE PTR [eax+18]
  0012b	32 d1		 xor	 dl, cl
  0012d	88 55 f9	 mov	 BYTE PTR __k$[ebp+17], dl
  00130	84 c0		 test	 al, al
  00132	74 07		 je	 SHORT $LN78@LoadString
  00134	34 eb		 xor	 al, -21			; ffffffebH
  00136	88 45 fa	 mov	 BYTE PTR __k$[ebp+18], al
  00139	eb 66		 jmp	 SHORT $LN111@LoadString
$LN78@LoadString:
  0013b	c6 45 fa eb	 mov	 BYTE PTR __k$[ebp+18], -21 ; ffffffebH
  0013f	eb 60		 jmp	 SHORT $LN111@LoadString
$LN79@LoadString:
  00141	88 4d f9	 mov	 BYTE PTR __k$[ebp+17], cl
  00144	eb 5b		 jmp	 SHORT $LN111@LoadString
$LN80@LoadString:
  00146	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  0014a	eb 55		 jmp	 SHORT $LN111@LoadString
$LN81@LoadString:
  0014c	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00150	eb 4f		 jmp	 SHORT $LN111@LoadString
$LN83@LoadString:
  00152	88 4d f5	 mov	 BYTE PTR __k$[ebp+13], cl
  00155	eb 4a		 jmp	 SHORT $LN111@LoadString
$LN84@LoadString:
  00157	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  0015b	eb 44		 jmp	 SHORT $LN111@LoadString
$LN85@LoadString:
  0015d	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00161	eb 3e		 jmp	 SHORT $LN111@LoadString
$LN86@LoadString:
  00163	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  00167	eb 38		 jmp	 SHORT $LN111@LoadString
$LN87@LoadString:
  00169	88 4d f1	 mov	 BYTE PTR __k$[ebp+9], cl
  0016c	eb 33		 jmp	 SHORT $LN111@LoadString
$LN88@LoadString:
  0016e	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00172	eb 2d		 jmp	 SHORT $LN111@LoadString
$LN89@LoadString:
  00174	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  00178	eb 27		 jmp	 SHORT $LN111@LoadString
$LN90@LoadString:
  0017a	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  0017e	eb 21		 jmp	 SHORT $LN111@LoadString
$LN91@LoadString:
  00180	88 4d ed	 mov	 BYTE PTR __k$[ebp+5], cl
  00183	eb 1c		 jmp	 SHORT $LN111@LoadString
$LN92@LoadString:
  00185	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00189	eb 16		 jmp	 SHORT $LN111@LoadString
$LN93@LoadString:
  0018b	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  0018f	eb 10		 jmp	 SHORT $LN111@LoadString
$LN94@LoadString:
  00191	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  00195	eb 0a		 jmp	 SHORT $LN111@LoadString
$LN95@LoadString:
  00197	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  0019b	eb 04		 jmp	 SHORT $LN111@LoadString
$LN96@LoadString:
  0019d	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN111@LoadString:
  001a1	6a 03		 push	 3
  001a3	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001a6	c6 45 f6 00	 mov	 BYTE PTR __k$[ebp+14], 0
  001aa	5a		 pop	 edx
$LL104@LoadString:
  001ab	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001b1	83 c0 04	 add	 eax, 4
  001b4	4a		 dec	 edx
  001b5	75 f4		 jne	 SHORT $LL104@LoadString
  001b7	6a 0c		 push	 12			; 0000000cH
  001b9	58		 pop	 eax
$LL101@LoadString:
  001ba	8b c8		 mov	 ecx, eax
  001bc	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  001c2	79 05		 jns	 SHORT $LN112@LoadString
  001c4	49		 dec	 ecx
  001c5	83 c9 fc	 or	 ecx, -4			; fffffffcH
  001c8	41		 inc	 ecx
$LN112@LoadString:
  001c9	b2 ed		 mov	 dl, -19			; ffffffedH
  001cb	2a d1		 sub	 dl, cl
  001cd	30 54 05 e8	 xor	 BYTE PTR __k$[ebp+eax], dl
  001d1	40		 inc	 eax
  001d2	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  001d5	7c e3		 jl	 SHORT $LL101@LoadString

; 163  : 		LoadString(_k, d, b, i);

  001d7	ff 75 14	 push	 DWORD PTR _i$[ebp]
  001da	8b 4d e4	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  001dd	57		 push	 edi
  001de	56		 push	 esi
  001df	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001e2	50		 push	 eax
  001e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z

; 164  : 	}

  001e9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ec	5f		 pop	 edi
  001ed	33 cd		 xor	 ecx, ebp
  001ef	5e		 pop	 esi
  001f0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f5	c9		 leave
  001f6	c2 10 00	 ret	 16			; 00000010H
??$LoadString_e@$0P@@ioINILoader@@QAEXAAY0P@$$CBDAAY00$$CBDPADH@Z ENDP ; ioINILoader::LoadString_e<15>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$0N@@ioINILoader@@QAEHAAY0N@$$CBDH@Z ; ioINILoader::LoadInt_e<13>
EXTRN	__imp_?LoadInt@ioINILoader@@QAEHPBDH@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$0N@@ioINILoader@@QAEHAAY0N@$$CBDH@Z
_TEXT	SEGMENT
__k$ = -24						; size = 13
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$0N@@ioINILoader@@QAEHAAY0N@$$CBDH@Z PROC	; ioINILoader::LoadInt_e<13>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 4d 01 00
	00		 je	 $LN96@LoadInt_e
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e8	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 36 01 00
	00		 je	 $LN95@LoadInt_e
  00031	b1 ec		 mov	 cl, -20			; ffffffecH
  00033	32 d1		 xor	 dl, cl
  00035	88 55 e9	 mov	 BYTE PTR __k$[ebp+1], dl
  00038	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003b	84 d2		 test	 dl, dl
  0003d	0f 84 1e 01 00
	00		 je	 $LN94@LoadInt_e
  00043	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00046	88 55 ea	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 07 01 00
	00		 je	 $LN93@LoadInt_e
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 eb	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 f0 00 00
	00		 je	 $LN92@LoadInt_e
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 ec	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 da 00 00
	00		 je	 $LN91@LoadInt_e
  00076	32 d1		 xor	 dl, cl
  00078	88 55 ed	 mov	 BYTE PTR __k$[ebp+5], dl
  0007b	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007e	84 d2		 test	 dl, dl
  00080	0f 84 c4 00 00
	00		 je	 $LN90@LoadInt_e
  00086	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00089	88 55 ee	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 ad 00 00
	00		 je	 $LN89@LoadInt_e
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 ef	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 96 00 00
	00		 je	 $LN88@LoadInt_e
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 f0	 mov	 BYTE PTR __k$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 80 00 00
	00		 je	 $LN87@LoadInt_e
  000b9	32 d1		 xor	 dl, cl
  000bb	88 55 f1	 mov	 BYTE PTR __k$[ebp+9], dl
  000be	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c1	84 d2		 test	 dl, dl
  000c3	74 6e		 je	 SHORT $LN86@LoadInt_e
  000c5	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000c8	88 55 f2	 mov	 BYTE PTR __k$[ebp+10], dl
  000cb	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000ce	84 d2		 test	 dl, dl
  000d0	74 5b		 je	 SHORT $LN85@LoadInt_e
  000d2	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  000d9	88 55 f3	 mov	 BYTE PTR __k$[ebp+11], dl
  000dc	0f 84 8f 00 00
	00		 je	 $LN1@LoadInt_e
  000e2	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000e5	84 d2		 test	 dl, dl
  000e7	74 3f		 je	 SHORT $LN83@LoadInt_e
  000e9	32 d1		 xor	 dl, cl
  000eb	88 55 f5	 mov	 BYTE PTR __k$[ebp+13], dl
  000ee	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000f1	84 d2		 test	 dl, dl
  000f3	74 2d		 je	 SHORT $LN82@LoadInt_e
  000f5	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000f8	88 55 f6	 mov	 BYTE PTR __k$[ebp+14], dl
  000fb	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  000fe	84 d2		 test	 dl, dl
  00100	74 1a		 je	 SHORT $LN81@LoadInt_e
  00102	8a 40 10	 mov	 al, BYTE PTR [eax+16]
  00105	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00108	88 55 f7	 mov	 BYTE PTR __k$[ebp+15], dl
  0010b	84 c0		 test	 al, al
  0010d	74 07		 je	 SHORT $LN80@LoadInt_e
  0010f	34 ed		 xor	 al, -19			; ffffffedH
  00111	88 45 f8	 mov	 BYTE PTR __k$[ebp+16], al
  00114	eb 5b		 jmp	 SHORT $LN1@LoadInt_e
$LN80@LoadInt_e:
  00116	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  0011a	eb 55		 jmp	 SHORT $LN1@LoadInt_e
$LN81@LoadInt_e:
  0011c	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00120	eb 4f		 jmp	 SHORT $LN1@LoadInt_e
$LN82@LoadInt_e:
  00122	c6 45 f6 eb	 mov	 BYTE PTR __k$[ebp+14], -21 ; ffffffebH
  00126	eb 49		 jmp	 SHORT $LN1@LoadInt_e
$LN83@LoadInt_e:
  00128	88 4d f5	 mov	 BYTE PTR __k$[ebp+13], cl
  0012b	eb 44		 jmp	 SHORT $LN1@LoadInt_e
$LN85@LoadInt_e:
  0012d	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00131	eb 3e		 jmp	 SHORT $LN1@LoadInt_e
$LN86@LoadInt_e:
  00133	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  00137	eb 38		 jmp	 SHORT $LN1@LoadInt_e
$LN87@LoadInt_e:
  00139	88 4d f1	 mov	 BYTE PTR __k$[ebp+9], cl
  0013c	eb 33		 jmp	 SHORT $LN1@LoadInt_e
$LN88@LoadInt_e:
  0013e	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00142	eb 2d		 jmp	 SHORT $LN1@LoadInt_e
$LN89@LoadInt_e:
  00144	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  00148	eb 27		 jmp	 SHORT $LN1@LoadInt_e
$LN90@LoadInt_e:
  0014a	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  0014e	eb 21		 jmp	 SHORT $LN1@LoadInt_e
$LN91@LoadInt_e:
  00150	88 4d ed	 mov	 BYTE PTR __k$[ebp+5], cl
  00153	eb 1c		 jmp	 SHORT $LN1@LoadInt_e
$LN92@LoadInt_e:
  00155	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00159	eb 16		 jmp	 SHORT $LN1@LoadInt_e
$LN93@LoadInt_e:
  0015b	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  0015f	eb 10		 jmp	 SHORT $LN1@LoadInt_e
$LN94@LoadInt_e:
  00161	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  00165	eb 0a		 jmp	 SHORT $LN1@LoadInt_e
$LN95@LoadInt_e:
  00167	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  0016b	eb 04		 jmp	 SHORT $LN1@LoadInt_e
$LN96@LoadInt_e:
  0016d	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e:
  00171	6a 03		 push	 3
  00173	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  00176	c6 45 f4 00	 mov	 BYTE PTR __k$[ebp+12], 0
  0017a	5a		 pop	 edx
$LL104@LoadInt_e:
  0017b	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00181	83 c0 04	 add	 eax, 4
  00184	4a		 dec	 edx
  00185	75 f4		 jne	 SHORT $LL104@LoadInt_e

; 120  : 		return LoadInt(_k, i);

  00187	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  0018a	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  0018d	50		 push	 eax
  0018e	8b ce		 mov	 ecx, esi
  00190	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  00196	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00199	33 cd		 xor	 ecx, ebp
  0019b	5e		 pop	 esi
  0019c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a1	c9		 leave
  001a2	c2 08 00	 ret	 8
??$LoadInt_e@$0N@@ioINILoader@@QAEHAAY0N@$$CBDH@Z ENDP	; ioINILoader::LoadInt_e<13>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVioMachineStruct@@@std@@PAVioMachineStruct@@AAPAV3@@std@@YAXAAV?$allocator@PAVioMachineStruct@@@0@PAPAVioMachineStruct@@AAPAV2@@Z ; std::_Cons_val<std::allocator<ioMachineStruct *>,ioMachineStruct *,ioMachineStruct * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@PAVioMachineStruct@@@std@@PAVioMachineStruct@@AAPAV3@@std@@YAXAAV?$allocator@PAVioMachineStruct@@@0@PAPAVioMachineStruct@@AAPAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVioMachineStruct@@@std@@PAVioMachineStruct@@AAPAV3@@std@@YAXAAV?$allocator@PAVioMachineStruct@@@0@PAPAVioMachineStruct@@AAPAV2@@Z PROC ; std::_Cons_val<std::allocator<ioMachineStruct *>,ioMachineStruct *,ioMachineStruct * &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN7@Cons_val
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@Cons_val:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@PAVioMachineStruct@@@std@@PAVioMachineStruct@@AAPAV3@@std@@YAXAAV?$allocator@PAVioMachineStruct@@@0@PAPAVioMachineStruct@@AAPAV2@@Z ENDP ; std::_Cons_val<std::allocator<ioMachineStruct *>,ioMachineStruct *,ioMachineStruct * &>
_TEXT	ENDS
PUBLIC	??$_Move@PAPAVioMachineStruct@@PAPAV1@@std@@YAPAPAVioMachineStruct@@PAPAV1@00@Z ; std::_Move<ioMachineStruct * *,ioMachineStruct * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAPAVioMachineStruct@@PAPAV1@@std@@YAPAPAVioMachineStruct@@PAPAV1@00@Z
_TEXT	SEGMENT
__Cat$533025 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAPAVioMachineStruct@@PAPAV1@@std@@YAPAPAVioMachineStruct@@PAPAV1@00@Z PROC ; std::_Move<ioMachineStruct * *,ioMachineStruct * *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$533025[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAPAVioMachineStruct@@PAPAV1@@std@@YAPAPAVioMachineStruct@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ioMachineStruct * *,ioMachineStruct * *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAPAVioMachineStruct@@PAPAV1@@std@@YAPAPAVioMachineStruct@@PAPAV1@00@Z ENDP ; std::_Move<ioMachineStruct * *,ioMachineStruct * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVioMachineStruct@@@std@@@std@@YAXPAPAVioMachineStruct@@0AAV?$allocator@PAVioMachineStruct@@@0@@Z ; std::_Destroy_range<std::allocator<ioMachineStruct *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVioMachineStruct@@@std@@@std@@YAXPAPAVioMachineStruct@@0AAV?$allocator@PAVioMachineStruct@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVioMachineStruct@@@std@@@std@@YAXPAPAVioMachineStruct@@0AAV?$allocator@PAVioMachineStruct@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ioMachineStruct *> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAVioMachineStruct@@@std@@@std@@YAXPAPAVioMachineStruct@@0AAV?$allocator@PAVioMachineStruct@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioMachineStruct *> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVioMachineStruct@@@std@@QAEXPAPAVioMachineStruct@@ABQAV3@@Z ; std::allocator<ioMachineStruct *>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@PAVioMachineStruct@@@std@@QAEXPAPAVioMachineStruct@@ABQAV3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVioMachineStruct@@@std@@QAEXPAPAVioMachineStruct@@ABQAV3@@Z PROC ; std::allocator<ioMachineStruct *>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN5@construct@2
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN5@construct@2:

; 198  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?construct@?$allocator@PAVioMachineStruct@@@std@@QAEXPAPAVioMachineStruct@@ABQAV3@@Z ENDP ; std::allocator<ioMachineStruct *>::construct
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAPAVioMachineStruct@@PAPAV1@V?$allocator@PAVioMachineStruct@@@std@@@std@@YAPAPAVioMachineStruct@@PAPAV1@00AAV?$allocator@PAVioMachineStruct@@@0@@Z ; std::_Uninitialized_move<ioMachineStruct * *,ioMachineStruct * *,std::allocator<ioMachineStruct *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAPAVioMachineStruct@@PAPAV1@V?$allocator@PAVioMachineStruct@@@std@@@std@@YAPAPAVioMachineStruct@@PAPAV1@00AAV?$allocator@PAVioMachineStruct@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVioMachineStruct@@PAPAV1@V?$allocator@PAVioMachineStruct@@@std@@@std@@YAPAPAVioMachineStruct@@PAPAV1@00AAV?$allocator@PAVioMachineStruct@@@0@@Z PROC ; std::_Uninitialized_move<ioMachineStruct * *,ioMachineStruct * *,std::allocator<ioMachineStruct *> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2
  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 472  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVioMachineStruct@@PAPAV1@V?$allocator@PAVioMachineStruct@@@std@@@std@@YAPAPAVioMachineStruct@@PAPAV1@00AAV?$allocator@PAVioMachineStruct@@@0@@Z ENDP ; std::_Uninitialized_move<ioMachineStruct * *,ioMachineStruct * *,std::allocator<ioMachineStruct *> >
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ApplyMachineStructInfo@ioMachineStructMgr@@UAEXAAVSP2Packet@@@Z ; ioMachineStructMgr::ApplyMachineStructInfo
EXTRN	??5SP2Packet@@QAEAAV0@AAUD3DXQUATERNION@@@Z:PROC ; SP2Packet::operator>>
EXTRN	??5SP2Packet@@QAEAAV0@AAUD3DXVECTOR3@@@Z:PROC	; SP2Packet::operator>>
EXTRN	??5SP2Packet@@QAEAAV0@AAM@Z:PROC		; SP2Packet::operator>>
EXTRN	??5SP2Packet@@QAEAAV0@AAH@Z:PROC		; SP2Packet::operator>>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomachinestructmgr.cpp
;	COMDAT ?ApplyMachineStructInfo@ioMachineStructMgr@@UAEXAAVSP2Packet@@@Z
_TEXT	SEGMENT
_qtRot$531033 = -52					; size = 16
_fCurHP$531030 = -36					; size = 4
_iArray$531029 = -32					; size = 4
_fMaxHP$531031 = -28					; size = 4
_iMachineCnt$ = -24					; size = 4
_i$531025 = -20						; size = 4
_vPos$531032 = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
_rkPacket$ = 8						; size = 4
?ApplyMachineStructInfo@ioMachineStructMgr@@UAEXAAVSP2Packet@@@Z PROC ; ioMachineStructMgr::ApplyMachineStructInfo, COMDAT
; _this$ = ecx

; 108  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _rkPacket$[ebp]

; 109  : 	int iMachineCnt;
; 110  : 	rkPacket >> iMachineCnt;

  00015	8d 45 e8	 lea	 eax, DWORD PTR _iMachineCnt$[ebp]
  00018	8b d9		 mov	 ebx, ecx
  0001a	50		 push	 eax
  0001b	8b ce		 mov	 ecx, esi
  0001d	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>

; 111  : 
; 112  : 	for( int i=0; i < iMachineCnt; i++ )

  00022	83 65 ec 00	 and	 DWORD PTR _i$531025[ebp], 0
  00026	83 7d e8 00	 cmp	 DWORD PTR _iMachineCnt$[ebp], 0
  0002a	0f 8e 8f 00 00
	00		 jle	 $LN2@ApplyMachi
  00030	57		 push	 edi
$LL4@ApplyMachi:

; 113  : 	{
; 114  : 		int iArray;
; 115  : 		rkPacket >> iArray;

  00031	8d 45 e0	 lea	 eax, DWORD PTR _iArray$531029[ebp]
  00034	50		 push	 eax
  00035	8b ce		 mov	 ecx, esi
  00037	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>

; 116  : 
; 117  : 		float fCurHP, fMaxHP;
; 118  : 		D3DXVECTOR3 vPos;
; 119  : 		D3DXQUATERNION qtRot;
; 120  : 		rkPacket >> fCurHP >> fMaxHP >> vPos >> qtRot;

  0003c	8d 45 cc	 lea	 eax, DWORD PTR _qtRot$531033[ebp]
  0003f	50		 push	 eax
  00040	8d 45 f0	 lea	 eax, DWORD PTR _vPos$531032[ebp]
  00043	50		 push	 eax
  00044	8d 45 e4	 lea	 eax, DWORD PTR _fMaxHP$531031[ebp]
  00047	50		 push	 eax
  00048	8d 45 dc	 lea	 eax, DWORD PTR _fCurHP$531030[ebp]
  0004b	50		 push	 eax
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAM@Z ; SP2Packet::operator>>
  00053	8b c8		 mov	 ecx, eax
  00055	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAM@Z ; SP2Packet::operator>>
  0005a	8b c8		 mov	 ecx, eax
  0005c	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAUD3DXVECTOR3@@@Z ; SP2Packet::operator>>
  00061	8b c8		 mov	 ecx, eax
  00063	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAUD3DXQUATERNION@@@Z ; SP2Packet::operator>>

; 121  : 
; 122  : 		ioMachineStruct *pMachine = FindMachineStruct( iArray );

  00068	ff 75 e0	 push	 DWORD PTR _iArray$531029[ebp]
  0006b	8b cb		 mov	 ecx, ebx
  0006d	e8 00 00 00 00	 call	 ?FindMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@H@Z ; ioMachineStructMgr::FindMachineStruct
  00072	8b f8		 mov	 edi, eax

; 123  : 		if( pMachine )

  00074	85 ff		 test	 edi, edi
  00076	74 37		 je	 SHORT $LN3@ApplyMachi

; 124  : 		{
; 125  : 			pMachine->SetHP( fCurHP, fMaxHP );

  00078	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _fMaxHP$531031[ebp]
  0007d	8b 07		 mov	 eax, DWORD PTR [edi]
  0007f	51		 push	 ecx
  00080	51		 push	 ecx
  00081	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00087	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _fCurHP$531030[ebp]
  0008c	8b cf		 mov	 ecx, edi
  0008e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00093	ff 90 f4 00 00
	00		 call	 DWORD PTR [eax+244]

; 126  : 			pMachine->SetWorldPosition( vPos );

  00099	8b 07		 mov	 eax, DWORD PTR [edi]
  0009b	8d 4d f0	 lea	 ecx, DWORD PTR _vPos$531032[ebp]
  0009e	51		 push	 ecx
  0009f	8b cf		 mov	 ecx, edi
  000a1	ff 50 44	 call	 DWORD PTR [eax+68]

; 127  : 			pMachine->SetWorldOrientation( qtRot );

  000a4	8b 07		 mov	 eax, DWORD PTR [edi]
  000a6	8d 4d cc	 lea	 ecx, DWORD PTR _qtRot$531033[ebp]
  000a9	51		 push	 ecx
  000aa	8b cf		 mov	 ecx, edi
  000ac	ff 50 48	 call	 DWORD PTR [eax+72]
$LN3@ApplyMachi:

; 111  : 
; 112  : 	for( int i=0; i < iMachineCnt; i++ )

  000af	ff 45 ec	 inc	 DWORD PTR _i$531025[ebp]
  000b2	8b 45 ec	 mov	 eax, DWORD PTR _i$531025[ebp]
  000b5	3b 45 e8	 cmp	 eax, DWORD PTR _iMachineCnt$[ebp]
  000b8	0f 8c 73 ff ff
	ff		 jl	 $LL4@ApplyMachi
  000be	5f		 pop	 edi
$LN2@ApplyMachi:

; 128  : 		}
; 129  : 	}
; 130  : }

  000bf	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c2	5e		 pop	 esi
  000c3	33 cd		 xor	 ecx, ebp
  000c5	5b		 pop	 ebx
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	c9		 leave
  000cc	c2 04 00	 ret	 4
?ApplyMachineStructInfo@ioMachineStructMgr@@UAEXAAVSP2Packet@@@Z ENDP ; ioMachineStructMgr::ApplyMachineStructInfo
_TEXT	ENDS
PUBLIC	??0?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE@XZ ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE@XZ PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@XZ ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@XZ PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@XZ ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@XZ ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@XZ PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@XZ ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::end
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioMachineStruct *,std::allocator<ioMachineStruct *> > >::operator!=
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@@Z PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@@Z ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Make_iter
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEXPAPAVioMachineStruct@@0@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEXPAPAVioMachineStruct@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEXPAPAVioMachineStruct@@0@Z PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEXPAPAVioMachineStruct@@0@Z ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEXXZ ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Tidy
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEXXZ PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN12@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN12@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEXXZ ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Tidy
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVioMachineStruct@@@std@@PAVioMachineStruct@@ABQAV3@@std@@YAXAAV?$allocator@PAVioMachineStruct@@@0@PAPAVioMachineStruct@@ABQAV2@@Z ; std::_Cons_val<std::allocator<ioMachineStruct *>,ioMachineStruct *,ioMachineStruct * const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@PAVioMachineStruct@@@std@@PAVioMachineStruct@@ABQAV3@@std@@YAXAAV?$allocator@PAVioMachineStruct@@@0@PAPAVioMachineStruct@@ABQAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVioMachineStruct@@@std@@PAVioMachineStruct@@ABQAV3@@std@@YAXAAV?$allocator@PAVioMachineStruct@@@0@PAPAVioMachineStruct@@ABQAV2@@Z PROC ; std::_Cons_val<std::allocator<ioMachineStruct *>,ioMachineStruct *,ioMachineStruct * const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN9@Cons_val@2
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN9@Cons_val@2:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@PAVioMachineStruct@@@std@@PAVioMachineStruct@@ABQAV3@@std@@YAXAAV?$allocator@PAVioMachineStruct@@@0@PAPAVioMachineStruct@@ABQAV2@@Z ENDP ; std::_Cons_val<std::allocator<ioMachineStruct *>,ioMachineStruct *,ioMachineStruct * const &>
_TEXT	ENDS
PUBLIC	??$_Umove@PAPAVioMachineStruct@@@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEPAPAVioMachineStruct@@PAPAV2@00@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Umove<ioMachineStruct * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??$_Umove@PAPAVioMachineStruct@@@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEPAPAVioMachineStruct@@PAPAV2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAVioMachineStruct@@@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEPAPAVioMachineStruct@@PAPAV2@00@Z PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Umove<ioMachineStruct * *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVioMachineStruct@@PAPAV1@V?$allocator@PAVioMachineStruct@@@std@@@std@@YAPAPAVioMachineStruct@@PAPAV1@00AAV?$allocator@PAVioMachineStruct@@@0@@Z ; std::_Uninitialized_move<ioMachineStruct * *,ioMachineStruct * *,std::allocator<ioMachineStruct *> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAPAVioMachineStruct@@@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEPAPAVioMachineStruct@@PAPAV2@00@Z ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Umove<ioMachineStruct * *>
_TEXT	ENDS
PUBLIC	??1?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE@XZ ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::~vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE@XZ PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::~vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEXXZ ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Tidy
??1?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::~vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cat$533286 = 12					; size = 1
__Where$ = 12						; size = 4
?erase@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@@Z PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::erase, COMDAT
; _this$ = ecx

; 1179 : 		{	// erase element at where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1180 : 		_Move(_VIPTR(_Where) + 1, this->_Mylast,
; 1181 : 			_VIPTR(_Where));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	56		 push	 esi
  00007	ff 75 0c	 push	 DWORD PTR __Cat$533286[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	ff 76 04	 push	 DWORD PTR [esi+4]
  00010	83 c0 04	 add	 eax, 4
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Move@PAPAVioMachineStruct@@PAPAV1@@std@@YAPAPAVioMachineStruct@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ioMachineStruct * *,ioMachineStruct * *>

; 1182 : 		_Destroy(this->_Mylast - 1, this->_Mylast);
; 1183 : 		--this->_Mylast;
; 1184 : 		return (_Make_iter(_Where));

  00019	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  0001f	83 c4 10	 add	 esp, 16			; 00000010H
  00022	83 46 04 fc	 add	 DWORD PTR [esi+4], -4	; fffffffcH
  00026	89 08		 mov	 DWORD PTR [eax], ecx
  00028	5e		 pop	 esi

; 1185 : 		}

  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?erase@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@@Z ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@0@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$533416 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@0@Z PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __First_arg$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	8b f1		 mov	 esi, ecx
  0000d	89 07		 mov	 DWORD PTR [edi], eax

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 45 10	 cmp	 eax, DWORD PTR __Last_arg$[ebp]
  00012	74 16		 je	 SHORT $LN1@erase

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	ff 75 10	 push	 DWORD PTR __Cat$533416[ebp]
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  0001f	e8 00 00 00 00	 call	 ??$_Move@PAPAVioMachineStruct@@PAPAV1@@std@@YAPAPAVioMachineStruct@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ioMachineStruct * *,ioMachineStruct * *>
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

  00027	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN1@erase:

; 1212 : 			}
; 1213 : 		return (_First);

  0002a	8b c7		 mov	 eax, edi
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi

; 1214 : 		}

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@0@Z ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::erase
_TEXT	ENDS
PUBLIC	?reserve@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAEXI@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::reserve
; Function compile flags: /Ogsp
;	COMDAT ?reserve@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?reserve@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAEXI@Z PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 747  : 		if (max_size() < _Count)

  00003	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	76 0b		 jbe	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN43@reserve:
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  0001a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0001d	2b 06		 sub	 eax, DWORD PTR [esi]
  0001f	c1 f8 02	 sar	 eax, 2
  00022	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00025	73 52		 jae	 SHORT $LN3@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00027	53		 push	 ebx
  00028	57		 push	 edi
  00029	6a 00		 push	 0
  0002b	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate@PAVioMachineStruct@@@std@@YAPAPAVioMachineStruct@@IPAPAV1@@Z ; std::_Allocate<ioMachineStruct *>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00033	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00035	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00038	52		 push	 edx
  00039	8b d8		 mov	 ebx, eax
  0003b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003e	53		 push	 ebx
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVioMachineStruct@@PAPAV1@V?$allocator@PAVioMachineStruct@@@std@@@std@@YAPAPAVioMachineStruct@@PAPAV1@00AAV?$allocator@PAVioMachineStruct@@@0@@Z ; std::_Uninitialized_move<ioMachineStruct * *,ioMachineStruct * *,std::allocator<ioMachineStruct *> >

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00046	8b 06		 mov	 eax, DWORD PTR [esi]
  00048	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0004b	2b f8		 sub	 edi, eax
  0004d	83 c4 18	 add	 esp, 24			; 00000018H
  00050	c1 ff 02	 sar	 edi, 2

; 761  : 			if (this->_Myfirst != 0)

  00053	85 c0		 test	 eax, eax
  00055	74 07		 je	 SHORT $LN39@reserve

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);
; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0005d	59		 pop	 ecx
$LN39@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  0005e	8b ce		 mov	 ecx, esi
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00066	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00069	8d 04 83	 lea	 eax, DWORD PTR [ebx+eax*4]
  0006c	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 770  : 			this->_Mylast = _Ptr + _Size;

  0006f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00072	5f		 pop	 edi

; 771  : 			this->_Myfirst = _Ptr;

  00073	89 1e		 mov	 DWORD PTR [esi], ebx
  00075	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00078	5b		 pop	 ebx
$LN3@reserve:
  00079	5e		 pop	 esi

; 772  : 			}
; 773  : 		}

  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
$LN42@reserve:
?reserve@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAEXI@Z ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::reserve
_TEXT	ENDS
PUBLIC	?ClearDeadStructList@ioMachineStructMgr@@QAEXXZ	; ioMachineStructMgr::ClearDeadStructList
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomachinestructmgr.cpp
;	COMDAT ?ClearDeadStructList@ioMachineStructMgr@@QAEXXZ
_TEXT	SEGMENT
$T533536 = -4						; size = 4
?ClearDeadStructList@ioMachineStructMgr@@QAEXXZ PROC	; ioMachineStructMgr::ClearDeadStructList, COMDAT
; _this$ = ecx

; 78   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx

; 79   : 	vMachineList::iterator iter = m_vMachineStructList.begin();

  00009	8b b7 14 03 00
	00		 mov	 esi, DWORD PTR [edi+788]
  0000f	eb 25		 jmp	 SHORT $LN39@ClearDeadS
$LL3@ClearDeadS:

; 82   : 	{
; 83   : 		if( !(*iter)->IsLive() )

  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	8b 01		 mov	 eax, DWORD PTR [ecx]
  00015	ff 90 e0 00 00
	00		 call	 DWORD PTR [eax+224]
  0001b	84 c0		 test	 al, al
  0001d	75 14		 jne	 SHORT $LN1@ClearDeadS

; 84   : 		{
; 85   : 			iter = m_vMachineStructList.erase( iter );

  0001f	56		 push	 esi
  00020	8d 45 fc	 lea	 eax, DWORD PTR $T533536[ebp]
  00023	50		 push	 eax
  00024	8d 8f 14 03 00
	00		 lea	 ecx, DWORD PTR [edi+788]
  0002a	e8 00 00 00 00	 call	 ?erase@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::erase
  0002f	8b 30		 mov	 esi, DWORD PTR [eax]

; 86   : 			continue;

  00031	eb 03		 jmp	 SHORT $LN39@ClearDeadS
$LN1@ClearDeadS:

; 87   : 		}
; 88   : 
; 89   : 		++iter;

  00033	83 c6 04	 add	 esi, 4
$LN39@ClearDeadS:

; 80   : 
; 81   : 	while( iter != m_vMachineStructList.end() )

  00036	3b b7 18 03 00
	00		 cmp	 esi, DWORD PTR [edi+792]
  0003c	75 d3		 jne	 SHORT $LL3@ClearDeadS
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx

; 90   : 	}
; 91   : }

  00041	c9		 leave
  00042	c3		 ret	 0
?ClearDeadStructList@ioMachineStructMgr@@QAEXXZ ENDP	; ioMachineStructMgr::ClearDeadStructList
_TEXT	ENDS
PUBLIC	?clear@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAEXXZ ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::clear
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?clear@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T533628 = -4						; size = 4
?clear@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAEXXZ PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T533628[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@0@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAEXXZ ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::clear
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEXI@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEXI@Z PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx

; 1292 : 		if (max_size() - _Count < _Size)

  0000d	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  00012	2b 55 08	 sub	 edx, DWORD PTR __Count$[ebp]
  00015	c1 f8 02	 sar	 eax, 2
  00018	3b d0		 cmp	 edx, eax
  0001a	73 0b		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve:
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  00027	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0002a	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0002d	2b d1		 sub	 edx, ecx
  0002f	c1 fa 02	 sar	 edx, 2
  00032	3b c2		 cmp	 eax, edx
  00034	76 10		 jbe	 SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  00036	50		 push	 eax
  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IBEII@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Grow_to
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?reserve@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAEXI@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::reserve
$LN1@Reserve:
  00046	5e		 pop	 esi

; 1298 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN20@Reserve:
?_Reserve@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEXI@Z ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Reserve
_TEXT	ENDS
PUBLIC	??_7ioMachineStructMgr@@6B@			; ioMachineStructMgr::`vftable'
PUBLIC	_this$GSCopy$
PUBLIC	??0ioMachineStructMgr@@QAE@PAVioPlayStage@@@Z	; ioMachineStructMgr::ioMachineStructMgr
PUBLIC	??_R4ioMachineStructMgr@@6B@			; ioMachineStructMgr::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioMachineStructMgr@@@8			; ioMachineStructMgr `RTTI Type Descriptor'
PUBLIC	??_R3ioMachineStructMgr@@8			; ioMachineStructMgr::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioMachineStructMgr@@8			; ioMachineStructMgr::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioMachineStructMgr@@8		; ioMachineStructMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@?$Singleton@VioMachineStructMgr@@@@8 ; Singleton<ioMachineStructMgr>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AV?$Singleton@VioMachineStructMgr@@@@@8	; Singleton<ioMachineStructMgr> `RTTI Type Descriptor'
PUBLIC	??_R3?$Singleton@VioMachineStructMgr@@@@8	; Singleton<ioMachineStructMgr>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$Singleton@VioMachineStructMgr@@@@8	; Singleton<ioMachineStructMgr>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$Singleton@VioMachineStructMgr@@@@8 ; Singleton<ioMachineStructMgr>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_??1ioINILoader@@QAE@XZ:PROC
EXTRN	__imp_??0ioINILoader@@QAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__EH_epilog3_GS:PROC
EXTRN	__EH_prolog3_GS:PROC
EXTRN	??_EioMachineStructMgr@@UAEPAXI@Z:PROC		; ioMachineStructMgr::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$Singleton@VioMachineStructMgr@@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
rdata$r	SEGMENT
??_R1A@?0A@EA@?$Singleton@VioMachineStructMgr@@@@8 DD FLAT:??_R0?AV?$Singleton@VioMachineStructMgr@@@@@8 ; Singleton<ioMachineStructMgr>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioMachineStructMgr@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$Singleton@VioMachineStructMgr@@@@8
rdata$r	SEGMENT
??_R2?$Singleton@VioMachineStructMgr@@@@8 DD FLAT:??_R1A@?0A@EA@?$Singleton@VioMachineStructMgr@@@@8 ; Singleton<ioMachineStructMgr>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$Singleton@VioMachineStructMgr@@@@8
rdata$r	SEGMENT
??_R3?$Singleton@VioMachineStructMgr@@@@8 DD 00H	; Singleton<ioMachineStructMgr>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$Singleton@VioMachineStructMgr@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$Singleton@VioMachineStructMgr@@@@@8
_DATA	SEGMENT
??_R0?AV?$Singleton@VioMachineStructMgr@@@@@8 DD FLAT:??_7type_info@@6B@ ; Singleton<ioMachineStructMgr> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$Singleton@VioMachineStructMgr@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@?$Singleton@VioMachineStructMgr@@@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$Singleton@VioMachineStructMgr@@@@8 DD FLAT:??_R0?AV?$Singleton@VioMachineStructMgr@@@@@8 ; Singleton<ioMachineStructMgr>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioMachineStructMgr@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioMachineStructMgr@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioMachineStructMgr@@8 DD FLAT:??_R0?AVioMachineStructMgr@@@8 ; ioMachineStructMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioMachineStructMgr@@8
rdata$r	ENDS
;	COMDAT ??_R2ioMachineStructMgr@@8
rdata$r	SEGMENT
??_R2ioMachineStructMgr@@8 DD FLAT:??_R1A@?0A@EA@ioMachineStructMgr@@8 ; ioMachineStructMgr::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@?$Singleton@VioMachineStructMgr@@@@8
rdata$r	ENDS
;	COMDAT ??_R3ioMachineStructMgr@@8
rdata$r	SEGMENT
??_R3ioMachineStructMgr@@8 DD 00H			; ioMachineStructMgr::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioMachineStructMgr@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioMachineStructMgr@@@8
_DATA	SEGMENT
??_R0?AVioMachineStructMgr@@@8 DD FLAT:??_7type_info@@6B@ ; ioMachineStructMgr `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioMachineStructMgr@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioMachineStructMgr@@6B@
rdata$r	SEGMENT
??_R4ioMachineStructMgr@@6B@ DD 00H			; ioMachineStructMgr::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioMachineStructMgr@@@8
	DD	FLAT:??_R3ioMachineStructMgr@@8
rdata$r	ENDS
;	COMDAT ??_7ioMachineStructMgr@@6B@
CONST	SEGMENT
??_7ioMachineStructMgr@@6B@ DD FLAT:??_R4ioMachineStructMgr@@6B@ ; ioMachineStructMgr::`vftable'
	DD	FLAT:?GetMachineStructInfo@ioMachineStructMgr@@UAEXAAVSP2Packet@@@Z
	DD	FLAT:?ApplyMachineStructInfo@ioMachineStructMgr@@UAEXAAVSP2Packet@@@Z
	DD	FLAT:??_EioMachineStructMgr@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ioMachineStructMgr@@QAE@PAVioPlayStage@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioMachineStructMgr@@QAE@PAVioPlayStage@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ioMachineStructMgr@@QAE@PAVioPlayStage@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0ioMachineStructMgr@@QAE@PAVioPlayStage@@@Z$2
__ehfuncinfo$??0ioMachineStructMgr@@QAE@PAVioPlayStage@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0ioMachineStructMgr@@QAE@PAVioPlayStage@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomachinestructmgr.cpp
xdata$x	ENDS
;	COMDAT ??0ioMachineStructMgr@@QAE@PAVioPlayStage@@@Z
_TEXT	SEGMENT
_this$GSCopy$ = -60					; size = 4
$T533809 = -56						; size = 4
__f$533901 = -52					; size = 30
__$EHRec$ = -12						; size = 12
_pStage$ = 8						; size = 4
??0ioMachineStructMgr@@QAE@PAVioPlayStage@@@Z PROC	; ioMachineStructMgr::ioMachineStructMgr, COMDAT
; _this$ = ecx

; 19   : {

  00000	6a 30		 push	 48			; 00000030H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioMachineStructMgr@@QAE@PAVioPlayStage@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000c	8b f1		 mov	 esi, ecx
  0000e	8b c6		 mov	 eax, esi
  00010	89 75 c4	 mov	 DWORD PTR _this$GSCopy$[ebp], esi
  00013	a3 00 00 00 00	 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioMachineStructMgr@@@@1PAVioMachineStructMgr@@A, eax ; Singleton<ioMachineStructMgr>::ms_Singleton
  00018	33 db		 xor	 ebx, ebx
  0001a	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0001d	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00020	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioMachineStructMgr@@6B@
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@XZ
  0002c	8d 8e 14 03 00
	00		 lea	 ecx, DWORD PTR [esi+788]
  00032	89 19		 mov	 DWORD PTR [ecx], ebx
  00034	89 59 04	 mov	 DWORD PTR [ecx+4], ebx
  00037	89 59 08	 mov	 DWORD PTR [ecx+8], ebx

; 20   : 	m_iLocalIndex = 0;
; 21   : 	m_pPlayStage = pStage;

  0003a	8b 45 08	 mov	 eax, DWORD PTR _pStage$[ebp]
  0003d	89 86 24 03 00
	00		 mov	 DWORD PTR [esi+804], eax
  00043	89 9e 28 03 00
	00		 mov	 DWORD PTR [esi+808], ebx

; 22   : 	m_vMachineStructList.clear();

  00049	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0004c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004e	50		 push	 eax
  0004f	52		 push	 edx
  00050	8d 45 c8	 lea	 eax, DWORD PTR $T533809[ebp]
  00053	50		 push	 eax
  00054	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00058	e8 00 00 00 00	 call	 ?erase@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@0@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::erase

; 23   : 
; 24   : 	m_IniLoader.SetFileName_e( "config/sp2_machine_struct.ini" );

  0005d	6a 07		 push	 7
  0005f	c7 45 cc 8e 83
	85 8c		 mov	 DWORD PTR __f$533901[ebp], -1937407090 ; 8c85838eH
  00066	c7 45 d0 84 8b
	c4 99		 mov	 DWORD PTR __f$533901[ebp+4], -1715172476 ; 99c48b84H
  0006d	c7 45 d4 9d de
	b4 87		 mov	 DWORD PTR __f$533901[ebp+8], -2018189667 ; 87b4de9dH
  00074	c7 45 d8 8c 8f
	83 83		 mov	 DWORD PTR __f$533901[ebp+12], -2088530036 ; 83838f8cH
  0007b	c7 45 dc 83 89
	b4 99		 mov	 DWORD PTR __f$533901[ebp+16], -1716221565 ; 99b48983H
  00082	c7 45 e0 99 9e
	9e 89		 mov	 DWORD PTR __f$533901[ebp+20], -1986093415 ; 899e9e99H
  00089	c7 45 e4 99 c2
	82 84		 mov	 DWORD PTR __f$533901[ebp+24], -2071805287 ; 8482c299H
  00090	8d 45 cc	 lea	 eax, DWORD PTR __f$533901[ebp]
  00093	66 c7 45 e8 84
	00		 mov	 WORD PTR __f$533901[ebp+28], 132 ; 00000084H
  00099	59		 pop	 ecx
$LL139@ioMachineS:
  0009a	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  000a0	83 c0 04	 add	 eax, 4
  000a3	49		 dec	 ecx
  000a4	75 f4		 jne	 SHORT $LL139@ioMachineS
  000a6	80 75 e8 ed	 xor	 BYTE PTR __f$533901[ebp+28], -19 ; ffffffedH
  000aa	6a 01		 push	 1
  000ac	8d 45 cc	 lea	 eax, DWORD PTR __f$533901[ebp]
  000af	50		 push	 eax
  000b0	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetFileName@ioINILoader@@QAEXPBD_N@Z

; 25   : }

  000b9	8b c6		 mov	 eax, esi
  000bb	e8 00 00 00 00	 call	 __EH_epilog3_GS
  000c0	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioMachineStructMgr@@QAE@PAVioPlayStage@@@Z$0:
  00000	8b 4d c4	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioMachineStructMgr@@@@QAE@XZ ; Singleton<ioMachineStructMgr>::~Singleton<ioMachineStructMgr>
__unwindfunclet$??0ioMachineStructMgr@@QAE@PAVioPlayStage@@@Z$1:
  0000b	8b 4d c4	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  0000e	83 c1 04	 add	 ecx, 4
  00011	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
__unwindfunclet$??0ioMachineStructMgr@@QAE@PAVioPlayStage@@@Z$2:
  00017	8b 4d c4	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  0001a	81 c1 14 03 00
	00		 add	 ecx, 788		; 00000314H
  00020	e9 00 00 00 00	 jmp	 ??1?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE@XZ ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::~vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >
__ehhandler$??0ioMachineStructMgr@@QAE@PAVioPlayStage@@@Z:
  00025	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00029	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002c	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  0002f	33 c8		 xor	 ecx, eax
  00031	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00036	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00039	33 c8		 xor	 ecx, eax
  0003b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00040	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioMachineStructMgr@@QAE@PAVioPlayStage@@@Z
  00045	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioMachineStructMgr@@QAE@PAVioPlayStage@@@Z ENDP	; ioMachineStructMgr::ioMachineStructMgr
PUBLIC	?DestroyMachineStructList@ioMachineStructMgr@@QAEXXZ ; ioMachineStructMgr::DestroyMachineStructList
EXTRN	?DestroyAllMachineStruct@ioPlayStage@@QAEXXZ:PROC ; ioPlayStage::DestroyAllMachineStruct
; Function compile flags: /Ogsp
;	COMDAT ?DestroyMachineStructList@ioMachineStructMgr@@QAEXXZ
_TEXT	SEGMENT
$T534030 = -4						; size = 4
?DestroyMachineStructList@ioMachineStructMgr@@QAEXXZ PROC ; ioMachineStructMgr::DestroyMachineStructList, COMDAT
; _this$ = ecx

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 154  : 	m_vMachineStructList.clear();

  00007	8d 8e 14 03 00
	00		 lea	 ecx, DWORD PTR [esi+788]
  0000d	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	50		 push	 eax
  00013	52		 push	 edx
  00014	8d 45 fc	 lea	 eax, DWORD PTR $T534030[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?erase@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@@2@0@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::erase

; 155  : 	m_pPlayStage->DestroyAllMachineStruct();

  0001d	8b 8e 24 03 00
	00		 mov	 ecx, DWORD PTR [esi+804]
  00023	e8 00 00 00 00	 call	 ?DestroyAllMachineStruct@ioPlayStage@@QAEXXZ ; ioPlayStage::DestroyAllMachineStruct
  00028	5e		 pop	 esi

; 156  : }

  00029	c9		 leave
  0002a	c3		 ret	 0
?DestroyMachineStructList@ioMachineStructMgr@@QAEXXZ ENDP ; ioMachineStructMgr::DestroyMachineStructList
_TEXT	ENDS
PUBLIC	?push_back@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAEXABQAVioMachineStruct@@@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::push_back
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?push_back@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAEXABQAVioMachineStruct@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAEXABQAVioMachineStruct@@@Z PROC ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f8		 cmp	 edi, eax
  0000f	73 27		 jae	 SHORT $LN4@push_back
  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	3b cf		 cmp	 ecx, edi
  00015	77 21		 ja	 SHORT $LN4@push_back

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	2b f9		 sub	 edi, ecx
  00019	c1 ff 02	 sar	 edi, 2

; 980  : 			if (this->_Mylast == this->_Myend)

  0001c	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0001f	75 09		 jne	 SHORT $LN3@push_back

; 981  : 				_Reserve(1);

  00021	6a 01		 push	 1
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEXI@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Reserve
$LN3@push_back:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	85 c0		 test	 eax, eax
  0002f	74 20		 je	 SHORT $LN39@push_back
  00031	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00033	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00036	eb 17		 jmp	 SHORT $LN46@push_back
$LN4@push_back:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00038	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0003b	75 09		 jne	 SHORT $LN1@push_back

; 991  : 				_Reserve(1);

  0003d	6a 01		 push	 1
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEXI@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Reserve
$LN1@push_back:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00046	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00049	85 c0		 test	 eax, eax
  0004b	74 04		 je	 SHORT $LN39@push_back
  0004d	8b 0f		 mov	 ecx, DWORD PTR [edi]
$LN46@push_back:
  0004f	89 08		 mov	 DWORD PTR [eax], ecx
$LN39@push_back:

; 996  : 			++this->_Mylast;

  00051	83 46 04 04	 add	 DWORD PTR [esi+4], 4
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
?push_back@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAEXABQAVioMachineStruct@@@Z ENDP ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::push_back
_TEXT	ENDS
PUBLIC	??1ioMachineStructMgr@@UAE@XZ			; ioMachineStructMgr::~ioMachineStructMgr
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
xdata$x	SEGMENT
__unwindtable$??1ioMachineStructMgr@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioMachineStructMgr@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ioMachineStructMgr@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1ioMachineStructMgr@@UAE@XZ$2
__ehfuncinfo$??1ioMachineStructMgr@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1ioMachineStructMgr@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomachinestructmgr.cpp
xdata$x	ENDS
;	COMDAT ??1ioMachineStructMgr@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioMachineStructMgr@@UAE@XZ PROC			; ioMachineStructMgr::~ioMachineStructMgr, COMDAT
; _this$ = ecx

; 28   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioMachineStructMgr@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioMachineStructMgr@@6B@
  00017	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2

; 29   : 	DestroyMachineStructList();

  0001e	e8 00 00 00 00	 call	 ?DestroyMachineStructList@ioMachineStructMgr@@QAEXXZ ; ioMachineStructMgr::DestroyMachineStructList

; 30   : }

  00023	8d 8e 14 03 00
	00		 lea	 ecx, DWORD PTR [esi+788]
  00029	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0002d	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@IAEXXZ ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::_Tidy
  00032	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00035	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
  0003f	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioMachineStructMgr@@@@1PAVioMachineStructMgr@@A, 0 ; Singleton<ioMachineStructMgr>::ms_Singleton
  00046	e8 00 00 00 00	 call	 __EH_epilog3
  0004b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioMachineStructMgr@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioMachineStructMgr@@@@QAE@XZ ; Singleton<ioMachineStructMgr>::~Singleton<ioMachineStructMgr>
__unwindfunclet$??1ioMachineStructMgr@@UAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 04	 add	 ecx, 4
  00011	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
__unwindfunclet$??1ioMachineStructMgr@@UAE@XZ$2:
  00017	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	81 c1 14 03 00
	00		 add	 ecx, 788		; 00000314H
  00020	e9 00 00 00 00	 jmp	 ??1?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAE@XZ ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::~vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >
__ehhandler$??1ioMachineStructMgr@@UAE@XZ:
  00025	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00029	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002c	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0002f	33 c8		 xor	 ecx, eax
  00031	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00036	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioMachineStructMgr@@UAE@XZ
  0003b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioMachineStructMgr@@UAE@XZ ENDP			; ioMachineStructMgr::~ioMachineStructMgr
PUBLIC	??_C@_0DD@BNOAODIM@ioMachineStructMgr?3?3CreateMachin@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	_pMode$GSCopy$
PUBLIC	?CreateMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@HPAVioPlayMode@@@Z ; ioMachineStructMgr::CreateMachineStruct
EXTRN	??0ioMachineCannon@@QAE@PAVioEntityGroup@@PAVioPlayMode@@@Z:PROC ; ioMachineCannon::ioMachineCannon
EXTRN	??0ioMachineCannon2@@QAE@PAVioEntityGroup@@PAVioPlayMode@@@Z:PROC ; ioMachineCannon2::ioMachineCannon2
EXTRN	??0ioMachineStruct@@QAE@PAVioEntityGroup@@PAVioPlayMode@@@Z:PROC ; ioMachineStruct::ioMachineStruct
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
EXTRN	__imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ:PROC
EXTRN	__imp_?LOG@@3VCLog@@A:BYTE
EXTRN	__imp_?c_str@ioHashString@@QBEPBDXZ:PROC
EXTRN	?CreateEntityGrpAndSceneNode@ioPlayStage@@QAEPAVioEntityGroup@@ABVioHashString@@_N@Z:PROC ; ioPlayStage::CreateEntityGrpAndSceneNode
EXTRN	__imp_??4ioHashString@@QAEAAV0@PBD@Z:PROC
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
EXTRN	__imp_?SetTitle@ioINILoader@@QAEXPBD@Z:PROC
EXTRN	__imp__wsprintfA:PROC
;	COMDAT ??_C@_0DD@BNOAODIM@ioMachineStructMgr?3?3CreateMachin@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
CONST	SEGMENT
??_C@_0DD@BNOAODIM@ioMachineStructMgr?3?3CreateMachin@ DB 'ioMachineStruc'
	DB	'tMgr::CreateMachineStruct - %s Fail!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@HPAVioPlayMode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@HPAVioPlayMode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CreateMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@HPAVioPlayMode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?CreateMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@HPAVioPlayMode@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?CreateMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@HPAVioPlayMode@@@Z$3
__ehfuncinfo$?CreateMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@HPAVioPlayMode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?CreateMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@HPAVioPlayMode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomachinestructmgr.cpp
xdata$x	ENDS
;	COMDAT ?CreateMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@HPAVioPlayMode@@@Z
_TEXT	SEGMENT
_szStructName$ = -604					; size = 16
$T534208 = -588						; size = 4
$T534204 = -588						; size = 4
$T534200 = -588						; size = 4
_eType$ = -588						; size = 4
_pMode$GSCopy$ = -584					; size = 4
_pMachine$ = -584					; size = 4
_szKey$ = -580						; size = 260
_szTitle$ = -320					; size = 260
__k$534368 = -60					; size = 13
__k$534243 = -40					; size = 15
___encStr$530660 = -40					; size = 17
__$EHRec$ = -12						; size = 12
_iMachineNum$ = 8					; size = 4
_pMode$ = 12						; size = 4
?CreateMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@HPAVioPlayMode@@@Z PROC ; ioMachineStructMgr::CreateMachineStruct, COMDAT
; _this$ = ecx

; 38   : {

  00000	68 50 02 00 00	 push	 592			; 00000250H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?CreateMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@HPAVioPlayMode@@@Z
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000f	8b 45 0c	 mov	 eax, DWORD PTR _pMode$[ebp]

; 39   : 	char szTitle[MAX_PATH], szKey[MAX_PATH];
; 40   : 
; 41   : 	wsprintf_e( szTitle, "machine_struct%d", iMachineNum );

  00012	33 db		 xor	 ebx, ebx
  00014	6a 04		 push	 4
  00016	8b f9		 mov	 edi, ecx

; 59   : 	{
; 60   : 	case MCT_CANNON:
; 61   : 		pMachine = new ioMachineCannon( pGrp, pMode );

  00018	89 85 b8 fd ff
	ff		 mov	 DWORD PTR _pMode$GSCopy$[ebp], eax
  0001e	c7 45 d8 80 8d
	88 82		 mov	 DWORD PTR ___encStr$530660[ebp], -2104980096 ; 82888d80H
  00025	c7 45 dc 84 82
	8e b5		 mov	 DWORD PTR ___encStr$530660[ebp+4], -1248951676 ; b58e8284H
  0002c	c7 45 e0 9e 98
	99 9f		 mov	 DWORD PTR ___encStr$530660[ebp+8], -1617323874 ; 9f99989eH
  00033	c7 45 e4 8e 98
	ce 8e		 mov	 DWORD PTR ___encStr$530660[ebp+12], -1899063154 ; 8ece988eH
  0003a	8d 45 d8	 lea	 eax, DWORD PTR ___encStr$530660[ebp]
  0003d	88 5d e8	 mov	 BYTE PTR ___encStr$530660[ebp+16], bl
  00040	59		 pop	 ecx
$LL123@CreateMach:

; 39   : 	char szTitle[MAX_PATH], szKey[MAX_PATH];
; 40   : 
; 41   : 	wsprintf_e( szTitle, "machine_struct%d", iMachineNum );

  00041	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00047	83 c0 04	 add	 eax, 4
  0004a	49		 dec	 ecx
  0004b	75 f4		 jne	 SHORT $LL123@CreateMach
  0004d	ff 75 08	 push	 DWORD PTR _iMachineNum$[ebp]
  00050	8d 45 d8	 lea	 eax, DWORD PTR ___encStr$530660[ebp]
  00053	50		 push	 eax
  00054	8d 85 c0 fe ff
	ff		 lea	 eax, DWORD PTR _szTitle$[ebp]
  0005a	50		 push	 eax
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  00061	83 c4 0c	 add	 esp, 12			; 0000000cH

; 42   : 	m_IniLoader.SetTitle( szTitle );

  00064	8d 85 c0 fe ff
	ff		 lea	 eax, DWORD PTR _szTitle$[ebp]
  0006a	50		 push	 eax
  0006b	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z
  00074	6a 03		 push	 3

; 43   : 	m_IniLoader.LoadString_e( "machine_struct", "", szKey, MAX_PATH );

  00076	c7 45 d8 80 8d
	88 82		 mov	 DWORD PTR __k$534243[ebp], -2104980096 ; 82888d80H
  0007d	c7 45 dc 84 82
	8e b5		 mov	 DWORD PTR __k$534243[ebp+4], -1248951676 ; b58e8284H
  00084	c7 45 e0 9e 98
	99 9f		 mov	 DWORD PTR __k$534243[ebp+8], -1617323874 ; 9f99989eH
  0008b	66 c7 45 e4 8e
	98		 mov	 WORD PTR __k$534243[ebp+12], 39054 ; 0000988eH
  00091	8d 45 d8	 lea	 eax, DWORD PTR __k$534243[ebp]
  00094	88 5d e6	 mov	 BYTE PTR __k$534243[ebp+14], bl
  00097	59		 pop	 ecx
$LL229@CreateMach:
  00098	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0009e	83 c0 04	 add	 eax, 4
  000a1	49		 dec	 ecx
  000a2	75 f4		 jne	 SHORT $LL229@CreateMach
  000a4	6a 0c		 push	 12			; 0000000cH
  000a6	58		 pop	 eax
$LL226@CreateMach:
  000a7	8b c8		 mov	 ecx, eax
  000a9	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  000af	79 05		 jns	 SHORT $LN352@CreateMach
  000b1	49		 dec	 ecx
  000b2	83 c9 fc	 or	 ecx, -4			; fffffffcH
  000b5	41		 inc	 ecx
$LN352@CreateMach:
  000b6	b2 ed		 mov	 dl, -19			; ffffffedH
  000b8	2a d1		 sub	 dl, cl
  000ba	30 54 05 d8	 xor	 BYTE PTR __k$534243[ebp+eax], dl
  000be	40		 inc	 eax
  000bf	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  000c2	7c e3		 jl	 SHORT $LL226@CreateMach
  000c4	68 04 01 00 00	 push	 260			; 00000104H
  000c9	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _szKey$[ebp]
  000cf	50		 push	 eax
  000d0	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  000d5	8d 45 d8	 lea	 eax, DWORD PTR __k$534243[ebp]
  000d8	50		 push	 eax
  000d9	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  000dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z
  000e2	6a 03		 push	 3

; 44   : 
; 45   : 	MachineStructType eType = (MachineStructType)m_IniLoader.LoadInt_e( "machine_type", MCT_NONE );

  000e4	c7 45 c4 80 8d
	88 82		 mov	 DWORD PTR __k$534368[ebp], -2104980096 ; 82888d80H
  000eb	c7 45 c8 84 82
	8e b5		 mov	 DWORD PTR __k$534368[ebp+4], -1248951676 ; b58e8284H
  000f2	c7 45 cc 99 95
	9b 8f		 mov	 DWORD PTR __k$534368[ebp+8], -1885629031 ; 8f9b9599H
  000f9	8d 45 c4	 lea	 eax, DWORD PTR __k$534368[ebp]
  000fc	88 5d d0	 mov	 BYTE PTR __k$534368[ebp+12], bl
  000ff	59		 pop	 ecx
$LL335@CreateMach:
  00100	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00106	83 c0 04	 add	 eax, 4
  00109	49		 dec	 ecx
  0010a	75 f4		 jne	 SHORT $LL335@CreateMach
  0010c	53		 push	 ebx
  0010d	8d 45 c4	 lea	 eax, DWORD PTR __k$534368[ebp]
  00110	50		 push	 eax
  00111	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00114	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 46   : 
; 47   : 	ioHashString szStructName;

  0011a	8d 8d a4 fd ff
	ff		 lea	 ecx, DWORD PTR _szStructName$[ebp]
  00120	89 85 b4 fd ff
	ff		 mov	 DWORD PTR _eType$[ebp], eax
  00126	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ

; 48   : 	szStructName = szKey;

  0012c	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _szKey$[ebp]
  00132	50		 push	 eax
  00133	8d 8d a4 fd ff
	ff		 lea	 ecx, DWORD PTR _szStructName$[ebp]
  00139	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  0013c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z

; 49   : 
; 50   : 	ioEntityGroup *pGrp = m_pPlayStage->CreateEntityGrpAndSceneNode( szStructName, true );

  00142	8b 8f 24 03 00
	00		 mov	 ecx, DWORD PTR [edi+804]
  00148	6a 01		 push	 1
  0014a	8d 85 a4 fd ff
	ff		 lea	 eax, DWORD PTR _szStructName$[ebp]
  00150	50		 push	 eax
  00151	e8 00 00 00 00	 call	 ?CreateEntityGrpAndSceneNode@ioPlayStage@@QAEPAVioEntityGroup@@ABVioHashString@@_N@Z ; ioPlayStage::CreateEntityGrpAndSceneNode
  00156	8b f0		 mov	 esi, eax

; 51   : 	if( !pGrp )

  00158	3b f3		 cmp	 esi, ebx
  0015a	75 3c		 jne	 SHORT $LN6@CreateMach

; 52   : 	{
; 53   : 		LOG.PrintTimeAndLog( 0, "ioMachineStructMgr::CreateMachineStruct - %s Fail!", szStructName.c_str() );

  0015c	8d 8d a4 fd ff
	ff		 lea	 ecx, DWORD PTR _szStructName$[ebp]
  00162	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  00168	50		 push	 eax
  00169	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@BNOAODIM@ioMachineStructMgr?3?3CreateMachin@
  0016e	53		 push	 ebx
  0016f	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  00175	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  0017b	83 c4 10	 add	 esp, 16			; 00000010H
$LN350@CreateMach:

; 54   : 		return NULL;

  0017e	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00182	8d 8d a4 fd ff
	ff		 lea	 ecx, DWORD PTR _szStructName$[ebp]
  00188	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  0018e	8b c3		 mov	 eax, ebx

; 73   : 
; 74   : 	return pMachine;
; 75   : }

  00190	e8 00 00 00 00	 call	 __EH_epilog3_GS
  00195	c2 08 00	 ret	 8
$LN6@CreateMach:

; 55   : 	}
; 56   : 
; 57   : 	ioMachineStruct* pMachine = NULL;
; 58   : 	switch( eType )

  00198	8b 85 b4 fd ff
	ff		 mov	 eax, DWORD PTR _eType$[ebp]
  0019e	48		 dec	 eax
  0019f	74 55		 je	 SHORT $LN3@CreateMach
  001a1	48		 dec	 eax
  001a2	74 29		 je	 SHORT $LN2@CreateMach

; 65   : 		break;
; 66   : 	default:
; 67   : 		pMachine = new ioMachineStruct( pGrp, pMode );

  001a4	68 d4 04 00 00	 push	 1236			; 000004d4H
  001a9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  001ae	59		 pop	 ecx
  001af	8b c8		 mov	 ecx, eax
  001b1	89 8d b4 fd ff
	ff		 mov	 DWORD PTR $T534208[ebp], ecx
  001b7	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  001bb	3b cb		 cmp	 ecx, ebx
  001bd	74 60		 je	 SHORT $LN108@CreateMach
  001bf	ff b5 b8 fd ff
	ff		 push	 DWORD PTR _pMode$GSCopy$[ebp]
  001c5	56		 push	 esi
  001c6	e8 00 00 00 00	 call	 ??0ioMachineStruct@@QAE@PAVioEntityGroup@@PAVioPlayMode@@@Z ; ioMachineStruct::ioMachineStruct
  001cb	eb 54		 jmp	 SHORT $LN109@CreateMach
$LN2@CreateMach:

; 62   : 		break;
; 63   : 	case MCT_CANNON2:
; 64   : 		pMachine = new ioMachineCannon2( pGrp, pMode );

  001cd	68 8c 06 00 00	 push	 1676			; 0000068cH
  001d2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  001d7	59		 pop	 ecx
  001d8	8b c8		 mov	 ecx, eax
  001da	89 8d b4 fd ff
	ff		 mov	 DWORD PTR $T534204[ebp], ecx
  001e0	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  001e4	3b cb		 cmp	 ecx, ebx
  001e6	74 37		 je	 SHORT $LN108@CreateMach
  001e8	ff b5 b8 fd ff
	ff		 push	 DWORD PTR _pMode$GSCopy$[ebp]
  001ee	56		 push	 esi
  001ef	e8 00 00 00 00	 call	 ??0ioMachineCannon2@@QAE@PAVioEntityGroup@@PAVioPlayMode@@@Z ; ioMachineCannon2::ioMachineCannon2
  001f4	eb 2b		 jmp	 SHORT $LN109@CreateMach
$LN3@CreateMach:

; 59   : 	{
; 60   : 	case MCT_CANNON:
; 61   : 		pMachine = new ioMachineCannon( pGrp, pMode );

  001f6	68 7c 06 00 00	 push	 1660			; 0000067cH
  001fb	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00200	59		 pop	 ecx
  00201	8b c8		 mov	 ecx, eax
  00203	89 8d b4 fd ff
	ff		 mov	 DWORD PTR $T534200[ebp], ecx
  00209	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0020d	3b cb		 cmp	 ecx, ebx
  0020f	74 0e		 je	 SHORT $LN108@CreateMach
  00211	ff b5 b8 fd ff
	ff		 push	 DWORD PTR _pMode$GSCopy$[ebp]
  00217	56		 push	 esi
  00218	e8 00 00 00 00	 call	 ??0ioMachineCannon@@QAE@PAVioEntityGroup@@PAVioPlayMode@@@Z ; ioMachineCannon::ioMachineCannon
  0021d	eb 02		 jmp	 SHORT $LN109@CreateMach
$LN108@CreateMach:
  0021f	33 c0		 xor	 eax, eax
$LN109@CreateMach:

; 68   : 		break;
; 69   : 	}
; 70   : 
; 71   : 	m_iLocalIndex++;

  00221	ff 87 28 03 00
	00		 inc	 DWORD PTR [edi+808]
  00227	89 85 b8 fd ff
	ff		 mov	 DWORD PTR _pMachine$[ebp], eax

; 72   : 	m_vMachineStructList.push_back( pMachine );

  0022d	8d 85 b8 fd ff
	ff		 lea	 eax, DWORD PTR _pMachine$[ebp]
  00233	50		 push	 eax
  00234	8d 8f 14 03 00
	00		 lea	 ecx, DWORD PTR [edi+788]
  0023a	88 5d fc	 mov	 BYTE PTR __$EHRec$[ebp+8], bl
  0023d	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVioMachineStruct@@V?$allocator@PAVioMachineStruct@@@std@@@std@@QAEXABQAVioMachineStruct@@@Z ; std::vector<ioMachineStruct *,std::allocator<ioMachineStruct *> >::push_back
  00242	8b 9d b8 fd ff
	ff		 mov	 ebx, DWORD PTR _pMachine$[ebp]
  00248	e9 31 ff ff ff	 jmp	 $LN350@CreateMach
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@HPAVioPlayMode@@@Z$0:
  00000	8d 8d a4 fd ff
	ff		 lea	 ecx, DWORD PTR _szStructName$[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?CreateMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@HPAVioPlayMode@@@Z$3:
  0000c	ff b5 b4 fd ff
	ff		 push	 DWORD PTR $T534208[ebp]
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
  00018	c3		 ret	 0
__unwindfunclet$?CreateMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@HPAVioPlayMode@@@Z$2:
  00019	ff b5 b4 fd ff
	ff		 push	 DWORD PTR $T534204[ebp]
  0001f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00024	59		 pop	 ecx
  00025	c3		 ret	 0
__unwindfunclet$?CreateMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@HPAVioPlayMode@@@Z$1:
  00026	ff b5 b4 fd ff
	ff		 push	 DWORD PTR $T534200[ebp]
  0002c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00031	59		 pop	 ecx
  00032	c3		 ret	 0
__ehhandler$?CreateMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@HPAVioPlayMode@@@Z:
  00033	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00037	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003a	8b 8a a0 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-608]
  00040	33 c8		 xor	 ecx, eax
  00042	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00047	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004a	33 c8		 xor	 ecx, eax
  0004c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00051	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@HPAVioPlayMode@@@Z
  00056	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateMachineStruct@ioMachineStructMgr@@QAEPAVioMachineStruct@@HPAVioPlayMode@@@Z ENDP ; ioMachineStructMgr::CreateMachineStruct
; Function compile flags: /Ogsp
;	COMDAT ??_GioMachineStructMgr@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioMachineStructMgr@@UAEPAXI@Z PROC			; ioMachineStructMgr::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioMachineStructMgr@@UAE@XZ ; ioMachineStructMgr::~ioMachineStructMgr
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@2
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@2:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioMachineStructMgr@@UAEPAXI@Z ENDP			; ioMachineStructMgr::`scalar deleting destructor'
_TEXT	ENDS
END
