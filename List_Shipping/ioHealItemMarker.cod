; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioHealItemMarker.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
;	COMDAT ?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB DD 01H ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
CONST	ENDS
PUBLIC	?return1@@YAIXZ					; return1
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
;	COMDAT ?return1@@YAIXZ
_TEXT	SEGMENT
?return1@@YAIXZ PROC					; return1, COMDAT

; 17   : 	__forceinline unsigned int return1() { __asm mov eax, 1 };

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?return1@@YAIXZ ENDP					; return1
_TEXT	ENDS
PUBLIC	?return5@@YAIXZ					; return5
; Function compile flags: /Ogsp
;	COMDAT ?return5@@YAIXZ
_TEXT	SEGMENT
?return5@@YAIXZ PROC					; return5, COMDAT

; 18   : 	__forceinline unsigned int return5() { __asm mov eax, 5 };

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?return5@@YAIXZ ENDP					; return5
_TEXT	ENDS
PUBLIC	?return10@@YAIXZ				; return10
; Function compile flags: /Ogsp
;	COMDAT ?return10@@YAIXZ
_TEXT	SEGMENT
?return10@@YAIXZ PROC					; return10, COMDAT

; 21   : 	__forceinline unsigned int return10() { __asm mov eax, 10 };

  00000	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  00005	c3		 ret	 0
?return10@@YAIXZ ENDP					; return10
_TEXT	ENDS
PUBLIC	?IsOwnerChar@ioBaseChar@@QBE_NXZ		; ioBaseChar::IsOwnerChar
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iobasechar.h
;	COMDAT ?IsOwnerChar@ioBaseChar@@QBE_NXZ
_TEXT	SEGMENT
?IsOwnerChar@ioBaseChar@@QBE_NXZ PROC			; ioBaseChar::IsOwnerChar, COMDAT
; _this$ = ecx

; 1467 : 	inline bool IsOwnerChar() const { return m_bOwnerChar; }

  00000	8a 81 84 13 00
	00		 mov	 al, BYTE PTR [ecx+4996]
  00006	c3		 ret	 0
?IsOwnerChar@ioBaseChar@@QBE_NXZ ENDP			; ioBaseChar::IsOwnerChar
_TEXT	ENDS
PUBLIC	?GetState@ioBaseChar@@QBE?AW4CharState@@XZ	; ioBaseChar::GetState
; Function compile flags: /Ogsp
;	COMDAT ?GetState@ioBaseChar@@QBE?AW4CharState@@XZ
_TEXT	SEGMENT
?GetState@ioBaseChar@@QBE?AW4CharState@@XZ PROC		; ioBaseChar::GetState, COMDAT
; _this$ = ecx

; 2156 : 	inline CharState GetState() const { return m_CharState; }	

  00000	8a 81 10 03 00
	00		 mov	 al, BYTE PTR [ecx+784]
  00006	c3		 ret	 0
?GetState@ioBaseChar@@QBE?AW4CharState@@XZ ENDP		; ioBaseChar::GetState
_TEXT	ENDS
PUBLIC	?GetTargetRot@ioBaseChar@@QBEABUD3DXQUATERNION@@XZ ; ioBaseChar::GetTargetRot
; Function compile flags: /Ogsp
;	COMDAT ?GetTargetRot@ioBaseChar@@QBEABUD3DXQUATERNION@@XZ
_TEXT	SEGMENT
?GetTargetRot@ioBaseChar@@QBEABUD3DXQUATERNION@@XZ PROC	; ioBaseChar::GetTargetRot, COMDAT
; _this$ = ecx

; 2599 : 	inline const D3DXQUATERNION& GetTargetRot() const { return m_qtTargetRot; }

  00000	8d 81 a4 06 00
	00		 lea	 eax, DWORD PTR [ecx+1700]
  00006	c3		 ret	 0
?GetTargetRot@ioBaseChar@@QBEABUD3DXQUATERNION@@XZ ENDP	; ioBaseChar::GetTargetRot
_TEXT	ENDS
PUBLIC	??_7ioHealItemMarker@@6B@			; ioHealItemMarker::`vftable'
PUBLIC	??0ioHealItemMarker@@QAE@PAVioBaseChar@@@Z	; ioHealItemMarker::ioHealItemMarker
PUBLIC	??_R4ioHealItemMarker@@6B@			; ioHealItemMarker::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioHealItemMarker@@@8			; ioHealItemMarker `RTTI Type Descriptor'
PUBLIC	??_R3ioHealItemMarker@@8			; ioHealItemMarker::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioHealItemMarker@@8			; ioHealItemMarker::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioHealItemMarker@@8		; ioHealItemMarker::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioTargetMarker@@8			; ioTargetMarker::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioTargetMarker@@@8			; ioTargetMarker `RTTI Type Descriptor'
PUBLIC	??_R3ioTargetMarker@@8				; ioTargetMarker::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioTargetMarker@@8				; ioTargetMarker::`RTTI Base Class Array'
PUBLIC	?SetMarkerState@ioHealItemMarker@@UAEXPAVioPlayStage@@W4MarkerState@ioTargetMarker@@@Z ; ioHealItemMarker::SetMarkerState
PUBLIC	?CreateEffect@ioHealItemMarker@@MAEKPAVioPlayStage@@ABVioHashString@@@Z ; ioHealItemMarker::CreateEffect
PUBLIC	?Update@ioHealItemMarker@@UAEXPAVioPlayStage@@@Z ; ioHealItemMarker::Update
PUBLIC	?GetMarkerType@ioHealItemMarker@@UBE?AW4MarkerType@ioTargetMarker@@XZ ; ioHealItemMarker::GetMarkerType
EXTRN	??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z:PROC	; ioTargetMarker::ioTargetMarker
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?SetTarget@ioTargetMarker@@UAEXABVioHashString@@_N@Z:PROC ; ioTargetMarker::SetTarget
EXTRN	?IsTarget@ioTargetMarker@@UAE_NXZ:PROC		; ioTargetMarker::IsTarget
EXTRN	??_EioHealItemMarker@@UAEPAXI@Z:PROC		; ioHealItemMarker::`vector deleting destructor'
;	COMDAT ??_R2ioTargetMarker@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iohealitemmarker.cpp
rdata$r	SEGMENT
??_R2ioTargetMarker@@8 DD FLAT:??_R1A@?0A@EA@ioTargetMarker@@8 ; ioTargetMarker::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioTargetMarker@@8
rdata$r	SEGMENT
??_R3ioTargetMarker@@8 DD 00H				; ioTargetMarker::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioTargetMarker@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioTargetMarker@@@8
_DATA	SEGMENT
??_R0?AVioTargetMarker@@@8 DD FLAT:??_7type_info@@6B@	; ioTargetMarker `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioTargetMarker@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioTargetMarker@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioTargetMarker@@8 DD FLAT:??_R0?AVioTargetMarker@@@8 ; ioTargetMarker::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioTargetMarker@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioHealItemMarker@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioHealItemMarker@@8 DD FLAT:??_R0?AVioHealItemMarker@@@8 ; ioHealItemMarker::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioHealItemMarker@@8
rdata$r	ENDS
;	COMDAT ??_R2ioHealItemMarker@@8
rdata$r	SEGMENT
??_R2ioHealItemMarker@@8 DD FLAT:??_R1A@?0A@EA@ioHealItemMarker@@8 ; ioHealItemMarker::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioTargetMarker@@8
rdata$r	ENDS
;	COMDAT ??_R3ioHealItemMarker@@8
rdata$r	SEGMENT
??_R3ioHealItemMarker@@8 DD 00H				; ioHealItemMarker::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioHealItemMarker@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioHealItemMarker@@@8
_DATA	SEGMENT
??_R0?AVioHealItemMarker@@@8 DD FLAT:??_7type_info@@6B@	; ioHealItemMarker `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioHealItemMarker@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioHealItemMarker@@6B@
rdata$r	SEGMENT
??_R4ioHealItemMarker@@6B@ DD 00H			; ioHealItemMarker::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioHealItemMarker@@@8
	DD	FLAT:??_R3ioHealItemMarker@@8
rdata$r	ENDS
;	COMDAT ??_7ioHealItemMarker@@6B@
CONST	SEGMENT
??_7ioHealItemMarker@@6B@ DD FLAT:??_R4ioHealItemMarker@@6B@ ; ioHealItemMarker::`vftable'
	DD	FLAT:?SetMarkerState@ioHealItemMarker@@UAEXPAVioPlayStage@@W4MarkerState@ioTargetMarker@@@Z
	DD	FLAT:?SetTarget@ioTargetMarker@@UAEXABVioHashString@@_N@Z
	DD	FLAT:?IsTarget@ioTargetMarker@@UAE_NXZ
	DD	FLAT:?CreateEffect@ioHealItemMarker@@MAEKPAVioPlayStage@@ABVioHashString@@@Z
	DD	FLAT:?Update@ioHealItemMarker@@UAEXPAVioPlayStage@@@Z
	DD	FLAT:?GetMarkerType@ioHealItemMarker@@UBE?AW4MarkerType@ioTargetMarker@@XZ
	DD	FLAT:??_EioHealItemMarker@@UAEPAXI@Z
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0ioHealItemMarker@@QAE@PAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
??0ioHealItemMarker@@QAE@PAVioBaseChar@@@Z PROC		; ioHealItemMarker::ioHealItemMarker, COMDAT
; _this$ = ecx

; 12   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR _pOwner$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 ??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z ; ioTargetMarker::ioTargetMarker
  0000e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioHealItemMarker@@6B@

; 13   : }

  00014	8b c6		 mov	 eax, esi
  00016	5e		 pop	 esi
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
??0ioHealItemMarker@@QAE@PAVioBaseChar@@@Z ENDP		; ioHealItemMarker::ioHealItemMarker
_TEXT	ENDS
PUBLIC	??1ioHealItemMarker@@UAE@XZ			; ioHealItemMarker::~ioHealItemMarker
EXTRN	??1ioTargetMarker@@UAE@XZ:PROC			; ioTargetMarker::~ioTargetMarker
; Function compile flags: /Ogsp
;	COMDAT ??1ioHealItemMarker@@UAE@XZ
_TEXT	SEGMENT
??1ioHealItemMarker@@UAE@XZ PROC			; ioHealItemMarker::~ioHealItemMarker, COMDAT
; _this$ = ecx

; 16   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ioHealItemMarker@@6B@

; 17   : }

  00006	e9 00 00 00 00	 jmp	 ??1ioTargetMarker@@UAE@XZ ; ioTargetMarker::~ioTargetMarker
??1ioHealItemMarker@@UAE@XZ ENDP			; ioHealItemMarker::~ioHealItemMarker
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?GetMarkerType@ioHealItemMarker@@UBE?AW4MarkerType@ioTargetMarker@@XZ
_TEXT	SEGMENT
?GetMarkerType@ioHealItemMarker@@UBE?AW4MarkerType@ioTargetMarker@@XZ PROC ; ioHealItemMarker::GetMarkerType, COMDAT
; _this$ = ecx

; 21   : 	return MT_HEAL_ITEM;

  00000	6a 04		 push	 4
  00002	58		 pop	 eax

; 22   : }

  00003	c3		 ret	 0
?GetMarkerType@ioHealItemMarker@@UBE?AW4MarkerType@ioTargetMarker@@XZ ENDP ; ioHealItemMarker::GetMarkerType
_TEXT	ENDS
EXTRN	?SetMarkerState@ioTargetMarker@@UAEXPAVioPlayStage@@W4MarkerState@1@@Z:PROC ; ioTargetMarker::SetMarkerState
; Function compile flags: /Ogsp
;	COMDAT ?SetMarkerState@ioHealItemMarker@@UAEXPAVioPlayStage@@W4MarkerState@ioTargetMarker@@@Z
_TEXT	SEGMENT
_pStage$ = 8						; size = 4
_eState$ = 12						; size = 4
?SetMarkerState@ioHealItemMarker@@UAEXPAVioPlayStage@@W4MarkerState@ioTargetMarker@@@Z PROC ; ioHealItemMarker::SetMarkerState, COMDAT
; _this$ = ecx

; 25   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 27   : }

  00003	5d		 pop	 ebp

; 26   : 	ioTargetMarker::SetMarkerState( pStage, eState );

  00004	e9 00 00 00 00	 jmp	 ?SetMarkerState@ioTargetMarker@@UAEXPAVioPlayStage@@W4MarkerState@1@@Z ; ioTargetMarker::SetMarkerState
?SetMarkerState@ioHealItemMarker@@UAEXPAVioPlayStage@@W4MarkerState@ioTargetMarker@@@Z ENDP ; ioHealItemMarker::SetMarkerState
_TEXT	ENDS
PUBLIC	??0D3DXVECTOR3@@QAE@MMM@Z			; D3DXVECTOR3::D3DXVECTOR3
EXTRN	__fltused:DWORD
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.inl
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_fz$ = 16						; size = 4
??0D3DXVECTOR3@@QAE@MMM@Z PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 303  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 304  :     x = fx;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00008	8b c1		 mov	 eax, ecx
  0000a	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 305  :     y = fy;

  0000e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00013	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 306  :     z = fz;

  00018	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fz$[ebp]
  0001d	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 307  : }

  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
??0D3DXVECTOR3@@QAE@MMM@Z ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	??YD3DXVECTOR3@@QAEAAU0@ABU0@@Z			; D3DXVECTOR3::operator+=
; Function compile flags: /Ogsp
;	COMDAT ??YD3DXVECTOR3@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??YD3DXVECTOR3@@QAEAAU0@ABU0@@Z PROC			; D3DXVECTOR3::operator+=, COMDAT
; _this$ = ecx

; 327  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 328  :     x += v.x;

  00005	8b 4d 08	 mov	 ecx, DWORD PTR _v$[ebp]
  00008	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0000c	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00010	0f 5a c0	 cvtps2pd xmm0, xmm0
  00013	0f 5a c9	 cvtps2pd xmm1, xmm1
  00016	f2 0f 58 c1	 addsd	 xmm0, xmm1

; 329  :     y += v.y;

  0001a	f3 0f 10 48 04	 movss	 xmm1, DWORD PTR [eax+4]
  0001f	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00023	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00027	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  0002c	0f 5a c0	 cvtps2pd xmm0, xmm0
  0002f	0f 5a c9	 cvtps2pd xmm1, xmm1
  00032	f2 0f 58 c1	 addsd	 xmm0, xmm1

; 330  :     z += v.z;

  00036	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  0003b	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0003f	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
  00044	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00049	0f 5a c0	 cvtps2pd xmm0, xmm0
  0004c	0f 5a c9	 cvtps2pd xmm1, xmm1
  0004f	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00053	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00057	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 331  :     return *this;
; 332  : }

  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
??YD3DXVECTOR3@@QAEAAU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator+=
_TEXT	ENDS
PUBLIC	??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z			; D3DXVECTOR3::operator+
; Function compile flags: /Ogsp
;	COMDAT ??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z PROC			; D3DXVECTOR3::operator+, COMDAT
; _this$ = ecx

; 380  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 381  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  00006	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  0000a	f3 0f 10 09	 movss	 xmm1, DWORD PTR [ecx]
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	0f 5a c0	 cvtps2pd xmm0, xmm0
  00014	0f 5a c9	 cvtps2pd xmm1, xmm1
  00017	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0001b	f3 0f 10 49 04	 movss	 xmm1, DWORD PTR [ecx+4]
  00020	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00024	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00028	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  0002d	0f 5a c0	 cvtps2pd xmm0, xmm0
  00030	0f 5a c9	 cvtps2pd xmm1, xmm1
  00033	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00037	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  0003c	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00040	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
  00045	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  0004a	0f 5a c0	 cvtps2pd xmm0, xmm0
  0004d	0f 5a c9	 cvtps2pd xmm1, xmm1
  00050	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00054	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00058	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 382  : }

  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator+
_TEXT	ENDS
PUBLIC	??DD3DXVECTOR3@@QBE?AU0@M@Z			; D3DXVECTOR3::operator*
; Function compile flags: /Ogsp
;	COMDAT ??DD3DXVECTOR3@@QBE?AU0@M@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_f$ = 12						; size = 4
??DD3DXVECTOR3@@QBE?AU0@M@Z PROC			; D3DXVECTOR3::operator*, COMDAT
; _this$ = ecx

; 392  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 393  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00003	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _f$[ebp]
  00008	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000f	0f 5a c0	 cvtps2pd xmm0, xmm0
  00012	0f 5a c9	 cvtps2pd xmm1, xmm1
  00015	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00019	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _f$[ebp]
  0001e	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00022	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00026	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  0002b	0f 5a c0	 cvtps2pd xmm0, xmm0
  0002e	0f 5a c9	 cvtps2pd xmm1, xmm1
  00031	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00035	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _f$[ebp]
  0003a	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0003e	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
  00043	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00048	0f 5a c0	 cvtps2pd xmm0, xmm0
  0004b	0f 5a c9	 cvtps2pd xmm1, xmm1
  0004e	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00052	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00056	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 394  : }

  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
??DD3DXVECTOR3@@QBE?AU0@M@Z ENDP			; D3DXVECTOR3::operator*
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GioHealItemMarker@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioHealItemMarker@@UAEPAXI@Z PROC			; ioHealItemMarker::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioHealItemMarker@@6B@
  0000c	e8 00 00 00 00	 call	 ??1ioTargetMarker@@UAE@XZ ; ioTargetMarker::~ioTargetMarker
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 07		 je	 SHORT $LN1@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001d	59		 pop	 ecx
$LN1@scalar:
  0001e	8b c6		 mov	 eax, esi
  00020	5e		 pop	 esi
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??_GioHealItemMarker@@UAEPAXI@Z ENDP			; ioHealItemMarker::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	__real@4f800000
PUBLIC	__real@4036000000000000
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?GetHealItemPoint@ioHealItemMarker@@IBE?AUD3DXVECTOR3@@XZ ; ioHealItemMarker::GetHealItemPoint
EXTRN	__imp_??D@YA?AUD3DXVECTOR3@@ABUD3DXQUATERNION@@ABU0@@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@4f800000
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
CONST	ENDS
;	COMDAT __real@4036000000000000
CONST	SEGMENT
__real@4036000000000000 DQ 04036000000000000r	; 22
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iohealitemmarker.cpp
CONST	ENDS
;	COMDAT ?GetHealItemPoint@ioHealItemMarker@@IBE?AUD3DXVECTOR3@@XZ
_TEXT	SEGMENT
_qtRotate$530480 = -64					; size = 16
tv491 = -48						; size = 4
___$ReturnUdt$GSCopy$ = -44				; size = 4
_vTargetPos$530479 = -40				; size = 12
_vDir$530481 = -28					; size = 12
$T530486 = -16						; size = 12
$T530483 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetHealItemPoint@ioHealItemMarker@@IBE?AUD3DXVECTOR3@@XZ PROC ; ioHealItemMarker::GetHealItemPoint, COMDAT
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00013	53		 push	 ebx
  00014	8b d9		 mov	 ebx, ecx

; 44   : 	if( m_pOwner )

  00016	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]

; 45   : 	{
; 46   : 		D3DXVECTOR3 vTargetPos( 0.0f, 22.0f + m_fMarkerYOffset, 0.0f );

  00019	89 45 d4	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], eax
  0001c	85 c9		 test	 ecx, ecx
  0001e	0f 84 6c 01 00
	00		 je	 $LN1@GetHealIte
  00024	f3 0f 10 83 88
	00 00 00	 movss	 xmm0, DWORD PTR [ebx+136]
  0002c	56		 push	 esi
  0002d	57		 push	 edi

; 47   : 		D3DXQUATERNION qtRotate = m_pOwner->GetTargetRot();

  0002e	8d b1 a4 06 00
	00		 lea	 esi, DWORD PTR [ecx+1700]
  00034	8d 7d c0	 lea	 edi, DWORD PTR _qtRotate$530480[ebp]
  00037	a5		 movsd
  00038	a5		 movsd
  00039	a5		 movsd
  0003a	0f 5a c0	 cvtps2pd xmm0, xmm0
  0003d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4036000000000000
  00045	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00049	f3 0f 11 45 dc	 movss	 DWORD PTR _vTargetPos$530479[ebp+4], xmm0
  0004e	a5		 movsd

; 48   : 		D3DXVECTOR3 vDir = qtRotate * D3DXVECTOR3( 0.0f, 0.0f, -FLOAT1 );

  0004f	b8 01 00 00 00	 mov	 eax, 1
  00054	0f 57 c0	 xorps	 xmm0, xmm0
  00057	89 45 d0	 mov	 DWORD PTR tv491[ebp], eax
  0005a	db 45 d0	 fild	 DWORD PTR tv491[ebp]
  0005d	f3 0f 11 45 f0	 movss	 DWORD PTR $T530483[ebp], xmm0
  00062	f3 0f 11 45 f4	 movss	 DWORD PTR $T530483[ebp+4], xmm0
  00067	85 c0		 test	 eax, eax
  00069	79 06		 jns	 SHORT $LN24@GetHealIte
  0006b	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN24@GetHealIte:
  00071	8d 45 f0	 lea	 eax, DWORD PTR $T530483[ebp]
  00074	d9 e0		 fchs
  00076	50		 push	 eax
  00077	d9 5d f8	 fstp	 DWORD PTR $T530483[ebp+8]
  0007a	8d 45 c0	 lea	 eax, DWORD PTR _qtRotate$530480[ebp]
  0007d	50		 push	 eax
  0007e	8d 45 e4	 lea	 eax, DWORD PTR _vDir$530481[ebp]
  00081	50		 push	 eax
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??D@YA?AUD3DXVECTOR3@@ABUD3DXQUATERNION@@ABU0@@Z

; 49   : 		vTargetPos = vTargetPos + vDir * m_fMarkerRange;

  00088	f3 0f 10 83 84
	00 00 00	 movss	 xmm0, DWORD PTR [ebx+132]
  00090	f3 0f 10 55 e4	 movss	 xmm2, DWORD PTR _vDir$530481[ebp]
  00095	0f 5a c8	 cvtps2pd xmm1, xmm0

; 50   : 		vTargetPos += m_pOwner->GetWorldPosition();

  00098	8b 5b 04	 mov	 ebx, DWORD PTR [ebx+4]
  0009b	0f 5a d2	 cvtps2pd xmm2, xmm2
  0009e	f2 0f 59 ca	 mulsd	 xmm1, xmm2
  000a2	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR _vDir$530481[ebp+4]
  000a7	66 0f 5a c9	 cvtpd2ps xmm1, xmm1
  000ab	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  000af	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@0000000000000000
  000b7	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b9	0f 5a d8	 cvtps2pd xmm3, xmm0
  000bc	66 0f 5a c9	 cvtpd2ps xmm1, xmm1
  000c0	f3 0f 11 4d f0	 movss	 DWORD PTR $T530486[ebp], xmm1
  000c5	0f 5a d2	 cvtps2pd xmm2, xmm2
  000c8	f2 0f 59 d3	 mulsd	 xmm2, xmm3
  000cc	f3 0f 10 5d ec	 movss	 xmm3, DWORD PTR _vDir$530481[ebp+8]
  000d1	0f 57 c9	 xorps	 xmm1, xmm1
  000d4	66 0f 5a d2	 cvtpd2ps xmm2, xmm2
  000d8	f3 0f 5a ca	 cvtss2sd xmm1, xmm2
  000dc	f3 0f 10 55 dc	 movss	 xmm2, DWORD PTR _vTargetPos$530479[ebp+4]
  000e1	0f 5a c0	 cvtps2pd xmm0, xmm0
  000e4	0f 5a d2	 cvtps2pd xmm2, xmm2
  000e7	f2 0f 58 ca	 addsd	 xmm1, xmm2
  000eb	66 0f 5a c9	 cvtpd2ps xmm1, xmm1
  000ef	f3 0f 11 4d f4	 movss	 DWORD PTR $T530486[ebp+4], xmm1
  000f4	0f 5a db	 cvtps2pd xmm3, xmm3
  000f7	f2 0f 59 d8	 mulsd	 xmm3, xmm0
  000fb	0f 57 c9	 xorps	 xmm1, xmm1
  000fe	66 0f 5a db	 cvtpd2ps xmm3, xmm3
  00102	f3 0f 5a cb	 cvtss2sd xmm1, xmm3
  00106	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@0000000000000000
  0010e	0f 57 c0	 xorps	 xmm0, xmm0
  00111	66 0f 5a c1	 cvtpd2ps xmm0, xmm1
  00115	f3 0f 11 45 f8	 movss	 DWORD PTR $T530486[ebp+8], xmm0
  0011a	8d 75 f0	 lea	 esi, DWORD PTR $T530486[ebp]
  0011d	8d 7d d8	 lea	 edi, DWORD PTR _vTargetPos$530479[ebp]
  00120	a5		 movsd
  00121	a5		 movsd
  00122	83 c4 0c	 add	 esp, 12			; 0000000cH
  00125	8b cb		 mov	 ecx, ebx
  00127	a5		 movsd
  00128	ff 50 70	 call	 DWORD PTR [eax+112]
  0012b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0012f	f3 0f 10 4d f0	 movss	 xmm1, DWORD PTR $T530486[ebp]
  00134	0f 5a c0	 cvtps2pd xmm0, xmm0
  00137	0f 5a c9	 cvtps2pd xmm1, xmm1
  0013a	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0013e	f3 0f 10 4d dc	 movss	 xmm1, DWORD PTR _vTargetPos$530479[ebp+4]
  00143	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00147	f3 0f 11 45 d8	 movss	 DWORD PTR _vTargetPos$530479[ebp], xmm0
  0014c	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00151	0f 5a c0	 cvtps2pd xmm0, xmm0
  00154	0f 5a c9	 cvtps2pd xmm1, xmm1
  00157	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0015b	f3 0f 10 4d e0	 movss	 xmm1, DWORD PTR _vTargetPos$530479[ebp+8]
  00160	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00164	f3 0f 11 45 dc	 movss	 DWORD PTR _vTargetPos$530479[ebp+4], xmm0
  00169	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]

; 51   : 		return vTargetPos;

  0016e	8b 45 d4	 mov	 eax, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
  00171	0f 5a c0	 cvtps2pd xmm0, xmm0
  00174	0f 5a c9	 cvtps2pd xmm1, xmm1
  00177	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0017b	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0017f	f3 0f 11 45 e0	 movss	 DWORD PTR _vTargetPos$530479[ebp+8], xmm0
  00184	8d 75 d8	 lea	 esi, DWORD PTR _vTargetPos$530479[ebp]
  00187	8b f8		 mov	 edi, eax
  00189	a5		 movsd
  0018a	a5		 movsd
  0018b	a5		 movsd
  0018c	5f		 pop	 edi
  0018d	5e		 pop	 esi
  0018e	eb 11		 jmp	 SHORT $LN2@GetHealIte
$LN1@GetHealIte:

; 52   : 	}
; 53   : 
; 54   : 	return D3DXVECTOR3( 0.0f, 0.0f, 0.0f );

  00190	0f 57 c0	 xorps	 xmm0, xmm0
  00193	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00197	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
  0019c	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
$LN2@GetHealIte:

; 55   : }

  001a1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a4	33 cd		 xor	 ecx, ebp
  001a6	5b		 pop	 ebx
  001a7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ac	c9		 leave
  001ad	c2 04 00	 ret	 4
?GetHealItemPoint@ioHealItemMarker@@IBE?AUD3DXVECTOR3@@XZ ENDP ; ioHealItemMarker::GetHealItemPoint
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?GetUniqueID@ioMapEffect@@QBEKXZ:PROC		; ioMapEffect::GetUniqueID
EXTRN	?CreateMapEffect@ioPlayStage@@QAEPAVioMapEffect@@ABVioHashString@@ABUD3DXVECTOR3@@1@Z:PROC ; ioPlayStage::CreateMapEffect
EXTRN	__imp_?IsEmpty@ioHashString@@QBE_NXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?CreateEffect@ioHealItemMarker@@MAEKPAVioPlayStage@@ABVioHashString@@@Z
_TEXT	SEGMENT
tv168 = -32						; size = 4
tv165 = -32						; size = 4
tv162 = -32						; size = 4
_vPos$ = -28						; size = 12
_vScale$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_pStage$ = 8						; size = 4
_szEffect$ = 12						; size = 4
?CreateEffect@ioHealItemMarker@@MAEKPAVioPlayStage@@ABVioHashString@@@Z PROC ; ioHealItemMarker::CreateEffect, COMDAT
; _this$ = ecx

; 59   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _pStage$[ebp]
  00015	57		 push	 edi
  00016	8b 7d 0c	 mov	 edi, DWORD PTR _szEffect$[ebp]
  00019	8b d9		 mov	 ebx, ecx

; 60   : 	if( !pStage ) return -1;

  0001b	85 f6		 test	 esi, esi
  0001d	0f 84 80 00 00
	00		 je	 $LN1@CreateEffe

; 61   : 	if( szEffect.IsEmpty() ) return -1;

  00023	8b cf		 mov	 ecx, edi
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@ioHashString@@QBE_NXZ
  0002b	84 c0		 test	 al, al
  0002d	75 74		 jne	 SHORT $LN1@CreateEffe

; 62   : 
; 63   : 	D3DXVECTOR3 vPos = GetHealItemPoint();

  0002f	8d 45 e4	 lea	 eax, DWORD PTR _vPos$[ebp]
  00032	50		 push	 eax
  00033	8b cb		 mov	 ecx, ebx
  00035	e8 00 00 00 00	 call	 ?GetHealItemPoint@ioHealItemMarker@@IBE?AUD3DXVECTOR3@@XZ ; ioHealItemMarker::GetHealItemPoint

; 64   : 	D3DXVECTOR3 vScale( FLOAT1, FLOAT1, FLOAT1 );

  0003a	b8 01 00 00 00	 mov	 eax, 1
  0003f	8b c8		 mov	 ecx, eax
  00041	b8 01 00 00 00	 mov	 eax, 1
  00046	8b d0		 mov	 edx, eax
  00048	b8 01 00 00 00	 mov	 eax, 1
  0004d	89 45 e0	 mov	 DWORD PTR tv168[ebp], eax
  00050	db 45 e0	 fild	 DWORD PTR tv168[ebp]
  00053	85 c0		 test	 eax, eax
  00055	79 06		 jns	 SHORT $LN14@CreateEffe
  00057	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN14@CreateEffe:
  0005d	89 55 e0	 mov	 DWORD PTR tv165[ebp], edx
  00060	d9 5d f0	 fstp	 DWORD PTR _vScale$[ebp]
  00063	db 45 e0	 fild	 DWORD PTR tv165[ebp]
  00066	85 d2		 test	 edx, edx
  00068	79 06		 jns	 SHORT $LN15@CreateEffe
  0006a	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN15@CreateEffe:
  00070	89 4d e0	 mov	 DWORD PTR tv162[ebp], ecx
  00073	d9 5d f4	 fstp	 DWORD PTR _vScale$[ebp+4]
  00076	db 45 e0	 fild	 DWORD PTR tv162[ebp]
  00079	85 c9		 test	 ecx, ecx
  0007b	79 06		 jns	 SHORT $LN16@CreateEffe
  0007d	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN16@CreateEffe:

; 65   : 
; 66   : 	ioMapEffect *pEff = pStage->CreateMapEffect( szEffect, vPos, vScale );

  00083	8d 45 f0	 lea	 eax, DWORD PTR _vScale$[ebp]
  00086	d9 5d f8	 fstp	 DWORD PTR _vScale$[ebp+8]
  00089	50		 push	 eax
  0008a	8d 45 e4	 lea	 eax, DWORD PTR _vPos$[ebp]
  0008d	50		 push	 eax
  0008e	57		 push	 edi
  0008f	8b ce		 mov	 ecx, esi
  00091	e8 00 00 00 00	 call	 ?CreateMapEffect@ioPlayStage@@QAEPAVioMapEffect@@ABVioHashString@@ABUD3DXVECTOR3@@1@Z ; ioPlayStage::CreateMapEffect

; 67   : 	if( pEff )

  00096	85 c0		 test	 eax, eax
  00098	74 09		 je	 SHORT $LN1@CreateEffe

; 68   : 	{
; 69   : 		return pEff->GetUniqueID();

  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ?GetUniqueID@ioMapEffect@@QBEKXZ ; ioMapEffect::GetUniqueID
  000a1	eb 03		 jmp	 SHORT $LN4@CreateEffe
$LN1@CreateEffe:

; 70   : 	}
; 71   : 
; 72   : 	return -1;

  000a3	83 c8 ff	 or	 eax, -1
$LN4@CreateEffe:

; 73   : }

  000a6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	33 cd		 xor	 ecx, ebp
  000ad	5b		 pop	 ebx
  000ae	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b3	c9		 leave
  000b4	c2 08 00	 ret	 8
?CreateEffect@ioHealItemMarker@@MAEKPAVioPlayStage@@ABVioHashString@@@Z ENDP ; ioHealItemMarker::CreateEffect
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?UpdateReadyState@ioHealItemMarker@@IAEXPAVioPlayStage@@@Z ; ioHealItemMarker::UpdateReadyState
EXTRN	?SetVisible@ioMapEffect@@QAEX_N@Z:PROC		; ioMapEffect::SetVisible
EXTRN	?SetWorldPosition@ioMapEffect@@QAEXABUD3DXVECTOR3@@@Z:PROC ; ioMapEffect::SetWorldPosition
EXTRN	?FindMapEffect@ioPlayStage@@QAEPAVioMapEffect@@K@Z:PROC ; ioPlayStage::FindMapEffect
; Function compile flags: /Ogsp
;	COMDAT ?UpdateReadyState@ioHealItemMarker@@IAEXPAVioPlayStage@@@Z
_TEXT	SEGMENT
_bVisible$ = -17					; size = 1
_vPos$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_pStage$ = 8						; size = 4
?UpdateReadyState@ioHealItemMarker@@IAEXPAVioPlayStage@@@Z PROC ; ioHealItemMarker::UpdateReadyState, COMDAT
; _this$ = ecx

; 76   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b 7d 08	 mov	 edi, DWORD PTR _pStage$[ebp]
  00015	8b f1		 mov	 esi, ecx

; 77   : 	if( !pStage ) return;

  00017	85 ff		 test	 edi, edi
  00019	74 6c		 je	 SHORT $LN1@UpdateRead

; 78   : 	if( m_ReadyID == -1 ) return;

  0001b	83 7e 6c ff	 cmp	 DWORD PTR [esi+108], -1
  0001f	74 66		 je	 SHORT $LN1@UpdateRead

; 79   : 
; 80   : 	bool bVisible = false;
; 81   : 	bool bDisable = false;
; 82   : 
; 83   : 	if( m_pOwner->GetState() != CS_ATTACK && m_pOwner->GetState() != CS_JUMP )

  00021	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00024	8a 88 10 03 00
	00		 mov	 cl, BYTE PTR [eax+784]
  0002a	53		 push	 ebx
  0002b	32 db		 xor	 bl, bl
  0002d	c6 45 ef 00	 mov	 BYTE PTR _bVisible$[ebp], 0
  00031	80 f9 05	 cmp	 cl, 5
  00034	74 07		 je	 SHORT $LN6@UpdateRead
  00036	80 f9 04	 cmp	 cl, 4
  00039	74 02		 je	 SHORT $LN6@UpdateRead

; 84   : 		bDisable = true;

  0003b	fe c3		 inc	 bl
$LN6@UpdateRead:

; 85   : 
; 86   : 	if( m_pOwner->IsOwnerChar() )

  0003d	80 b8 84 13 00
	00 00		 cmp	 BYTE PTR [eax+4996], 0
  00044	74 04		 je	 SHORT $LN5@UpdateRead

; 87   : 		bVisible = true;

  00046	c6 45 ef 01	 mov	 BYTE PTR _bVisible$[ebp], 1
$LN5@UpdateRead:

; 88   : 
; 89   : 	D3DXVECTOR3 vPos = GetHealItemPoint();

  0004a	8d 45 f0	 lea	 eax, DWORD PTR _vPos$[ebp]
  0004d	50		 push	 eax
  0004e	8b ce		 mov	 ecx, esi
  00050	e8 00 00 00 00	 call	 ?GetHealItemPoint@ioHealItemMarker@@IBE?AUD3DXVECTOR3@@XZ ; ioHealItemMarker::GetHealItemPoint

; 90   : 
; 91   : 	ioMapEffect *pEff = pStage->FindMapEffect( m_ReadyID );

  00055	ff 76 6c	 push	 DWORD PTR [esi+108]
  00058	8b cf		 mov	 ecx, edi
  0005a	e8 00 00 00 00	 call	 ?FindMapEffect@ioPlayStage@@QAEPAVioMapEffect@@K@Z ; ioPlayStage::FindMapEffect
  0005f	8b f0		 mov	 esi, eax

; 92   : 	if( pEff )

  00061	85 f6		 test	 esi, esi
  00063	74 21		 je	 SHORT $LN17@UpdateRead

; 93   : 	{
; 94   : 		pEff->SetWorldPosition( vPos );

  00065	8d 45 f0	 lea	 eax, DWORD PTR _vPos$[ebp]
  00068	50		 push	 eax
  00069	8b ce		 mov	 ecx, esi
  0006b	e8 00 00 00 00	 call	 ?SetWorldPosition@ioMapEffect@@QAEXABUD3DXVECTOR3@@@Z ; ioMapEffect::SetWorldPosition

; 95   : 
; 96   : 		if( bDisable || !bVisible )

  00070	84 db		 test	 bl, bl
  00072	75 09		 jne	 SHORT $LN2@UpdateRead
  00074	38 5d ef	 cmp	 BYTE PTR _bVisible$[ebp], bl
  00077	74 04		 je	 SHORT $LN2@UpdateRead

; 98   : 		else
; 99   : 			pEff->SetVisible( true );

  00079	6a 01		 push	 1
  0007b	eb 02		 jmp	 SHORT $LN18@UpdateRead
$LN2@UpdateRead:

; 97   : 			pEff->SetVisible( false );

  0007d	6a 00		 push	 0
$LN18@UpdateRead:
  0007f	8b ce		 mov	 ecx, esi
  00081	e8 00 00 00 00	 call	 ?SetVisible@ioMapEffect@@QAEX_N@Z ; ioMapEffect::SetVisible
$LN17@UpdateRead:
  00086	5b		 pop	 ebx
$LN1@UpdateRead:

; 100  : 	}
; 101  : }

  00087	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0008a	5f		 pop	 edi
  0008b	33 cd		 xor	 ecx, ebp
  0008d	5e		 pop	 esi
  0008e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00093	c9		 leave
  00094	c2 04 00	 ret	 4
?UpdateReadyState@ioHealItemMarker@@IAEXPAVioPlayStage@@@Z ENDP ; ioHealItemMarker::UpdateReadyState
_TEXT	ENDS
PUBLIC	_pStage$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?UpdateAimedState@ioHealItemMarker@@IAEXPAVioPlayStage@@@Z ; ioHealItemMarker::UpdateAimedState
EXTRN	?GetMidPositionByRate@ioGameEntity@@QBE?AUD3DXVECTOR3@@M@Z:PROC ; ioGameEntity::GetMidPositionByRate
EXTRN	?DestroyMarker@ioTargetMarker@@QAEXPAVioPlayStage@@@Z:PROC ; ioTargetMarker::DestroyMarker
EXTRN	?GetTargetChar@ioTargetMarker@@QBEPAVioBaseChar@@XZ:PROC ; ioTargetMarker::GetTargetChar
; Function compile flags: /Ogsp
;	COMDAT ?UpdateAimedState@ioHealItemMarker@@IAEXPAVioPlayStage@@@Z
_TEXT	SEGMENT
_pStage$GSCopy$ = -40					; size = 4
tv315 = -36						; size = 4
tv311 = -36						; size = 4
tv307 = -36						; size = 4
_bDisable$ = -30					; size = 1
_bVisible$ = -29					; size = 1
$T530536 = -28						; size = 12
_vPos$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_pStage$ = 8						; size = 4
?UpdateAimedState@ioHealItemMarker@@IAEXPAVioPlayStage@@@Z PROC ; ioHealItemMarker::UpdateAimedState, COMDAT
; _this$ = ecx

; 104  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	57		 push	 edi
  00012	8b 7d 08	 mov	 edi, DWORD PTR _pStage$[ebp]
  00015	8b d9		 mov	 ebx, ecx

; 128  : 
; 129  : 	ioMapEffect *pEff = pStage->FindMapEffect( m_AimedID );

  00017	89 7d d8	 mov	 DWORD PTR _pStage$GSCopy$[ebp], edi
  0001a	85 ff		 test	 edi, edi
  0001c	0f 84 0b 01 00
	00		 je	 $LN1@UpdateAime

; 105  : 	if( !pStage ) return;
; 106  : 
; 107  : 	bool bVisible = false;
; 108  : 	bool bDisable = false;
; 109  : 
; 110  : 	if( m_pOwner->GetState() != CS_ATTACK && m_pOwner->GetState() != CS_JUMP && m_pOwner->GetState() != CS_VEHICLE_DRIVER )

  00022	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00025	8a 80 10 03 00
	00		 mov	 al, BYTE PTR [eax+784]
  0002b	c6 45 e3 00	 mov	 BYTE PTR _bVisible$[ebp], 0
  0002f	c6 45 e2 00	 mov	 BYTE PTR _bDisable$[ebp], 0
  00033	3c 05		 cmp	 al, 5
  00035	74 0c		 je	 SHORT $LN10@UpdateAime
  00037	3c 04		 cmp	 al, 4
  00039	74 08		 je	 SHORT $LN10@UpdateAime
  0003b	3c 84		 cmp	 al, 132			; 00000084H
  0003d	74 04		 je	 SHORT $LN10@UpdateAime

; 111  : 		bDisable = true;

  0003f	c6 45 e2 01	 mov	 BYTE PTR _bDisable$[ebp], 1
$LN10@UpdateAime:
  00043	56		 push	 esi

; 112  : 
; 113  : 	ioBaseChar *pTarget = GetTargetChar();

  00044	e8 00 00 00 00	 call	 ?GetTargetChar@ioTargetMarker@@QBEPAVioBaseChar@@XZ ; ioTargetMarker::GetTargetChar
  00049	8b f0		 mov	 esi, eax

; 114  : 	if( m_pOwner->IsOwnerChar() || (pTarget && pTarget->IsOwnerChar()) )

  0004b	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0004e	80 b8 84 13 00
	00 00		 cmp	 BYTE PTR [eax+4996], 0
  00055	75 0d		 jne	 SHORT $LN8@UpdateAime
  00057	85 f6		 test	 esi, esi
  00059	74 0d		 je	 SHORT $LN9@UpdateAime
  0005b	80 be 84 13 00
	00 00		 cmp	 BYTE PTR [esi+4996], 0
  00062	74 04		 je	 SHORT $LN9@UpdateAime
$LN8@UpdateAime:

; 115  : 		bVisible = true;

  00064	c6 45 e3 01	 mov	 BYTE PTR _bVisible$[ebp], 1
$LN9@UpdateAime:

; 116  : 
; 117  : 	if( !m_bPreUseEnable && m_bUseEnable )

  00068	80 bb 92 00 00
	00 00		 cmp	 BYTE PTR [ebx+146], 0
  0006f	75 20		 jne	 SHORT $LN7@UpdateAime
  00071	80 bb 91 00 00
	00 00		 cmp	 BYTE PTR [ebx+145], 0
  00078	74 17		 je	 SHORT $LN7@UpdateAime

; 118  : 	{
; 119  : 		DestroyMarker( pStage );

  0007a	57		 push	 edi
  0007b	8b cb		 mov	 ecx, ebx
  0007d	e8 00 00 00 00	 call	 ?DestroyMarker@ioTargetMarker@@QAEXPAVioPlayStage@@@Z ; ioTargetMarker::DestroyMarker

; 120  : 		m_AimedID = CreateEffect( pStage, m_szAimedEffect );

  00082	8b 03		 mov	 eax, DWORD PTR [ebx]
  00084	8d 4b 3c	 lea	 ecx, DWORD PTR [ebx+60]
  00087	51		 push	 ecx
  00088	57		 push	 edi
  00089	8b cb		 mov	 ecx, ebx
  0008b	ff 50 0c	 call	 DWORD PTR [eax+12]
  0008e	89 43 74	 mov	 DWORD PTR [ebx+116], eax
$LN7@UpdateAime:

; 121  : 	}
; 122  : 
; 123  : 	if( m_AimedID == -1 ) return;

  00091	83 7b 74 ff	 cmp	 DWORD PTR [ebx+116], -1
  00095	0f 84 91 00 00
	00		 je	 $LN28@UpdateAime

; 124  : 
; 125  : 	D3DXVECTOR3 vPos = GetHealItemPoint();

  0009b	8d 45 f0	 lea	 eax, DWORD PTR _vPos$[ebp]
  0009e	50		 push	 eax
  0009f	8b cb		 mov	 ecx, ebx
  000a1	e8 00 00 00 00	 call	 ?GetHealItemPoint@ioHealItemMarker@@IBE?AUD3DXVECTOR3@@XZ ; ioHealItemMarker::GetHealItemPoint

; 126  : 	if( pTarget )

  000a6	85 f6		 test	 esi, esi
  000a8	74 4e		 je	 SHORT $LN5@UpdateAime

; 127  : 		vPos = pTarget->GetMidPositionByRate();

  000aa	b8 05 00 00 00	 mov	 eax, 5
  000af	8b c8		 mov	 ecx, eax
  000b1	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  000b6	89 4d dc	 mov	 DWORD PTR tv315[ebp], ecx
  000b9	db 45 dc	 fild	 DWORD PTR tv315[ebp]
  000bc	85 c9		 test	 ecx, ecx
  000be	79 06		 jns	 SHORT $LN29@UpdateAime
  000c0	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN29@UpdateAime:
  000c6	89 45 dc	 mov	 DWORD PTR tv311[ebp], eax
  000c9	db 45 dc	 fild	 DWORD PTR tv311[ebp]
  000cc	85 c0		 test	 eax, eax
  000ce	79 06		 jns	 SHORT $LN30@UpdateAime
  000d0	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN30@UpdateAime:
  000d6	de f9		 fdivp	 ST(1), ST(0)
  000d8	51		 push	 ecx
  000d9	8d 45 e4	 lea	 eax, DWORD PTR $T530536[ebp]
  000dc	8b ce		 mov	 ecx, esi
  000de	d9 5d dc	 fstp	 DWORD PTR tv307[ebp]
  000e1	d9 45 dc	 fld	 DWORD PTR tv307[ebp]
  000e4	d9 1c 24	 fstp	 DWORD PTR [esp]
  000e7	50		 push	 eax
  000e8	e8 00 00 00 00	 call	 ?GetMidPositionByRate@ioGameEntity@@QBE?AUD3DXVECTOR3@@M@Z ; ioGameEntity::GetMidPositionByRate
  000ed	8b f0		 mov	 esi, eax
  000ef	8d 7d f0	 lea	 edi, DWORD PTR _vPos$[ebp]
  000f2	a5		 movsd
  000f3	a5		 movsd
  000f4	a5		 movsd
  000f5	8b 7d d8	 mov	 edi, DWORD PTR _pStage$GSCopy$[ebp]
$LN5@UpdateAime:

; 128  : 
; 129  : 	ioMapEffect *pEff = pStage->FindMapEffect( m_AimedID );

  000f8	ff 73 74	 push	 DWORD PTR [ebx+116]
  000fb	8b cf		 mov	 ecx, edi
  000fd	e8 00 00 00 00	 call	 ?FindMapEffect@ioPlayStage@@QAEPAVioMapEffect@@K@Z ; ioPlayStage::FindMapEffect
  00102	8b f0		 mov	 esi, eax

; 130  : 	if( pEff )

  00104	85 f6		 test	 esi, esi
  00106	74 24		 je	 SHORT $LN28@UpdateAime

; 131  : 	{
; 132  : 		pEff->SetWorldPosition( vPos );

  00108	8d 45 f0	 lea	 eax, DWORD PTR _vPos$[ebp]
  0010b	50		 push	 eax
  0010c	8b ce		 mov	 ecx, esi
  0010e	e8 00 00 00 00	 call	 ?SetWorldPosition@ioMapEffect@@QAEXABUD3DXVECTOR3@@@Z ; ioMapEffect::SetWorldPosition

; 133  : 
; 134  : 		if( bDisable || !bVisible )

  00113	80 7d e2 00	 cmp	 BYTE PTR _bDisable$[ebp], 0
  00117	75 0a		 jne	 SHORT $LN2@UpdateAime
  00119	80 7d e3 00	 cmp	 BYTE PTR _bVisible$[ebp], 0
  0011d	74 04		 je	 SHORT $LN2@UpdateAime

; 136  : 		else
; 137  : 			pEff->SetVisible( true );

  0011f	6a 01		 push	 1
  00121	eb 02		 jmp	 SHORT $LN31@UpdateAime
$LN2@UpdateAime:

; 135  : 			pEff->SetVisible( false );

  00123	6a 00		 push	 0
$LN31@UpdateAime:
  00125	8b ce		 mov	 ecx, esi
  00127	e8 00 00 00 00	 call	 ?SetVisible@ioMapEffect@@QAEX_N@Z ; ioMapEffect::SetVisible
$LN28@UpdateAime:
  0012c	5e		 pop	 esi
$LN1@UpdateAime:

; 138  : 	}
; 139  : }

  0012d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00130	5f		 pop	 edi
  00131	33 cd		 xor	 ecx, ebp
  00133	5b		 pop	 ebx
  00134	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00139	c9		 leave
  0013a	c2 04 00	 ret	 4
?UpdateAimedState@ioHealItemMarker@@IAEXPAVioPlayStage@@@Z ENDP ; ioHealItemMarker::UpdateAimedState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?Update@ioHealItemMarker@@UAEXPAVioPlayStage@@@Z
_TEXT	SEGMENT
_pStage$ = 8						; size = 4
?Update@ioHealItemMarker@@UAEXPAVioPlayStage@@@Z PROC	; ioHealItemMarker::Update, COMDAT
; _this$ = ecx

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	switch( m_MarkerState )

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	48		 dec	 eax
  00007	74 0a		 je	 SHORT $LN2@Update
  00009	48		 dec	 eax
  0000a	48		 dec	 eax
  0000b	75 0c		 jne	 SHORT $LN3@Update

; 38   : 		break;
; 39   : 	}
; 40   : }

  0000d	5d		 pop	 ebp

; 35   : 		break;
; 36   : 	case MS_AIMED:
; 37   : 		UpdateAimedState( pStage );

  0000e	e9 00 00 00 00	 jmp	 ?UpdateAimedState@ioHealItemMarker@@IAEXPAVioPlayStage@@@Z ; ioHealItemMarker::UpdateAimedState
$LN2@Update:

; 38   : 		break;
; 39   : 	}
; 40   : }

  00013	5d		 pop	 ebp

; 32   : 	{
; 33   : 	case MS_READY:
; 34   : 		UpdateReadyState( pStage );

  00014	e9 00 00 00 00	 jmp	 ?UpdateReadyState@ioHealItemMarker@@IAEXPAVioPlayStage@@@Z ; ioHealItemMarker::UpdateReadyState
$LN3@Update:

; 38   : 		break;
; 39   : 	}
; 40   : }

  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?Update@ioHealItemMarker@@UAEXPAVioPlayStage@@@Z ENDP	; ioHealItemMarker::Update
_TEXT	ENDS
END
