; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioDrinkItem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?return1@@YAIXZ					; return1
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
;	COMDAT ?return1@@YAIXZ
_TEXT	SEGMENT
?return1@@YAIXZ PROC					; return1, COMDAT

; 17   : 	__forceinline unsigned int return1() { __asm mov eax, 1 };

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?return1@@YAIXZ ENDP					; return1
_TEXT	ENDS
PUBLIC	?return100@@YAIXZ				; return100
; Function compile flags: /Ogsp
;	COMDAT ?return100@@YAIXZ
_TEXT	SEGMENT
?return100@@YAIXZ PROC					; return100, COMDAT

; 25   : 	__forceinline unsigned int return100() { __asm mov eax, 100 };

  00000	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  00005	c3		 ret	 0
?return100@@YAIXZ ENDP					; return100
_TEXT	ENDS
PUBLIC	?GetActionStopTotalDelay@ioBaseChar@@QBEKXZ	; ioBaseChar::GetActionStopTotalDelay
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iobasechar.h
;	COMDAT ?GetActionStopTotalDelay@ioBaseChar@@QBEKXZ
_TEXT	SEGMENT
?GetActionStopTotalDelay@ioBaseChar@@QBEKXZ PROC	; ioBaseChar::GetActionStopTotalDelay, COMDAT
; _this$ = ecx

; 2399 : 	DWORD GetActionStopTotalDelay() const { return m_dwActionStopTotalDelay; }	// kaseton : action delay

  00000	8b 81 b8 15 00
	00		 mov	 eax, DWORD PTR [ecx+5560]
  00006	c3		 ret	 0
?GetActionStopTotalDelay@ioBaseChar@@QBEKXZ ENDP	; ioBaseChar::GetActionStopTotalDelay
_TEXT	ENDS
PUBLIC	?GetRandomSeed@ioBaseChar@@QBEKXZ		; ioBaseChar::GetRandomSeed
; Function compile flags: /Ogsp
;	COMDAT ?GetRandomSeed@ioBaseChar@@QBEKXZ
_TEXT	SEGMENT
?GetRandomSeed@ioBaseChar@@QBEKXZ PROC			; ioBaseChar::GetRandomSeed, COMDAT
; _this$ = ecx

; 3372 : 	inline DWORD GetRandomSeed() const { return m_dwRandomSeed; }

  00000	8b 81 74 16 00
	00		 mov	 eax, DWORD PTR [ecx+5748]
  00006	c3		 ret	 0
?GetRandomSeed@ioBaseChar@@QBEKXZ ENDP			; ioBaseChar::GetRandomSeed
_TEXT	ENDS
PUBLIC	??_7ioDrinkItem@@6B@				; ioDrinkItem::`vftable'
PUBLIC	??0ioDrinkItem@@QAE@XZ				; ioDrinkItem::ioDrinkItem
PUBLIC	??_R4ioDrinkItem@@6B@				; ioDrinkItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioDrinkItem@@@8				; ioDrinkItem `RTTI Type Descriptor'
PUBLIC	??_R3ioDrinkItem@@8				; ioDrinkItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioDrinkItem@@8				; ioDrinkItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioDrinkItem@@8			; ioDrinkItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioObjectItem@@8			; ioObjectItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioObjectItem@@@8			; ioObjectItem `RTTI Type Descriptor'
PUBLIC	??_R3ioObjectItem@@8				; ioObjectItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioObjectItem@@8				; ioObjectItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioWeaponItem@@8			; ioWeaponItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioWeaponItem@@@8			; ioWeaponItem `RTTI Type Descriptor'
PUBLIC	??_R3ioWeaponItem@@8				; ioWeaponItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioWeaponItem@@8				; ioWeaponItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioAttackableItem@@8		; ioAttackableItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioAttackableItem@@@8			; ioAttackableItem `RTTI Type Descriptor'
PUBLIC	??_R3ioAttackableItem@@8			; ioAttackableItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioAttackableItem@@8			; ioAttackableItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioItem@@8				; ioItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioItem@@@8				; ioItem `RTTI Type Descriptor'
PUBLIC	??_R3ioItem@@8					; ioItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioItem@@8					; ioItem::`RTTI Base Class Array'
PUBLIC	?LoadProperty@ioDrinkItem@@UAEXAAVioINILoader@@@Z ; ioDrinkItem::LoadProperty
PUBLIC	?Clone@ioDrinkItem@@UAEPAVioItem@@XZ		; ioDrinkItem::Clone
PUBLIC	?IsEnableExtraGauge@ioItem@@UAE_NPAVioBaseChar@@@Z ; ioItem::IsEnableExtraGauge
PUBLIC	?GetExtraGauge@ioItem@@UAEMXZ			; ioItem::GetExtraGauge
PUBLIC	?CheckOnHand@ioAttackableItem@@UAE_NXZ		; ioAttackableItem::CheckOnHand
PUBLIC	?CheckAimState@ioAttackableItem@@UAE_N_N@Z	; ioAttackableItem::CheckAimState
PUBLIC	?SetAimState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ; ioAttackableItem::SetAimState
PUBLIC	?CheckExtendDefenseEnable@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ; ioAttackableItem::CheckExtendDefenseEnable
PUBLIC	?IsChargeAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ; ioAttackableItem::IsChargeAttackState
PUBLIC	?IsMoveAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ; ioAttackableItem::IsMoveAttackState
PUBLIC	?IsNoGhostWalk@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ; ioAttackableItem::IsNoGhostWalk
PUBLIC	?IsEnableAttackDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z ; ioAttackableItem::IsEnableAttackDashCheck
PUBLIC	?IsEnableItemDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z ; ioAttackableItem::IsEnableItemDashCheck
PUBLIC	?IsEnableAttackRotateCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ; ioAttackableItem::IsEnableAttackRotateCheck
PUBLIC	?IsEnableChargeDefenseCheck@ioAttackableItem@@UAE_NXZ ; ioAttackableItem::IsEnableChargeDefenseCheck
PUBLIC	?IsUseDefenceCounterAttackEndDash@ioAttackableItem@@UAE_NXZ ; ioAttackableItem::IsUseDefenceCounterAttackEndDash
PUBLIC	?IsAutoTarget@ioAttackableItem@@UBE_NXZ		; ioAttackableItem::IsAutoTarget
PUBLIC	?IsWoundAfterUseExtendState@ioAttackableItem@@UAE_NXZ ; ioAttackableItem::IsWoundAfterUseExtendState
PUBLIC	?CheckWoundAfterUseExtendState@ioAttackableItem@@UAE_NPAVioBaseChar@@W4BlowTargetType@@@Z ; ioAttackableItem::CheckWoundAfterUseExtendState
PUBLIC	?IsCharSkipState@ioAttackableItem@@UAE_NPBVioBaseChar@@@Z ; ioAttackableItem::IsCharSkipState
PUBLIC	?GetObjectSubType@ioDrinkItem@@UBE?AW4ObjectSubType@ioObjectItem@@XZ ; ioDrinkItem::GetObjectSubType
PUBLIC	?OnProcessState@ioObjectItem@@UAEXPAVioPlayStage@@PAVioBaseChar@@@Z ; ioObjectItem::OnProcessState
PUBLIC	?SetObjectReleaseTCPSend@ioObjectItem@@UAEX_N@Z	; ioObjectItem::SetObjectReleaseTCPSend
PUBLIC	?IsObjectReleaseTCPSend@ioObjectItem@@UAE_NXZ	; ioObjectItem::IsObjectReleaseTCPSend
PUBLIC	?IsNormalAttackStop@ioObjectItem@@UAE_NXZ	; ioObjectItem::IsNormalAttackStop
EXTRN	??1ioObjectItem@@UAE@XZ:PROC			; ioObjectItem::~ioObjectItem
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
EXTRN	??0ioObjectItem@@QAE@XZ:PROC			; ioObjectItem::ioObjectItem
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?FindFieldEntityGrp@ioItem@@MBEABVioHashString@@XZ:PROC ; ioItem::FindFieldEntityGrp
EXTRN	?GetType@ioObjectItem@@UBE?AW4ItemType@ioItem@@XZ:PROC ; ioObjectItem::GetType
EXTRN	?UseCreateIndexItem@ioItem@@UBE_NXZ:PROC	; ioItem::UseCreateIndexItem
EXTRN	?GetSetFocusColor@ioItem@@UBEKXZ:PROC		; ioItem::GetSetFocusColor
EXTRN	?Initialize@ioItem@@UAEXABVioHashString@@PAVioPlayStage@@@Z:PROC ; ioItem::Initialize
EXTRN	?InitializeBeforeEquip@ioItem@@UAEXABVioHashString@@PAVioPlayStage@@@Z:PROC ; ioItem::InitializeBeforeEquip
EXTRN	?OnEquiped@ioObjectItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioObjectItem::OnEquiped
EXTRN	?OnReleased@ioObjectItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioObjectItem::OnReleased
EXTRN	?SetExtendEquipEffect@ioItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioItem::SetExtendEquipEffect
EXTRN	?ReleaseExtendEquipEffect@ioItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioItem::ReleaseExtendEquipEffect
EXTRN	?AddGlowLine@ioWeaponItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioWeaponItem::AddGlowLine
EXTRN	?RemoveGlowLine@ioWeaponItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioWeaponItem::RemoveGlowLine
EXTRN	?GetTargetName@ioItem@@UAE?AVioHashString@@XZ:PROC ; ioItem::GetTargetName
EXTRN	?ClearTarget@ioItem@@UAEXXZ:PROC		; ioItem::ClearTarget
EXTRN	?SetItemType@ioWeaponItem@@UAEXXZ:PROC		; ioWeaponItem::SetItemType
EXTRN	?UpdateExtraData@ioItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioItem::UpdateExtraData
EXTRN	?CheckWeaponDefenseState@ioItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioItem::CheckWeaponDefenseState
EXTRN	?CheckWoundedState@ioItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioItem::CheckWoundedState
EXTRN	?SetVisible@ioItem@@UAEXPAVioBaseChar@@_N@Z:PROC ; ioItem::SetVisible
EXTRN	?UpdateSkillGauge@ioItem@@UAEXPAVioBaseChar@@M_N@Z:PROC ; ioItem::UpdateSkillGauge
EXTRN	?ReduceNeedGauge@ioItem@@UAEXMPAVioBaseChar@@@Z:PROC ; ioItem::ReduceNeedGauge
EXTRN	?GetCurBullet@ioItem@@UAEHXZ:PROC		; ioItem::GetCurBullet
EXTRN	?GetMaxBullet@ioItem@@UAEHXZ:PROC		; ioItem::GetMaxBullet
EXTRN	?SetCurBullet@ioItem@@UAEXH@Z:PROC		; ioItem::SetCurBullet
EXTRN	?GetCurSecoundBullet@ioItem@@UAEHXZ:PROC	; ioItem::GetCurSecoundBullet
EXTRN	?GetMaxSecoundBullet@ioItem@@UAEHXZ:PROC	; ioItem::GetMaxSecoundBullet
EXTRN	?SetCurSecoundBullet@ioItem@@UAEXH@Z:PROC	; ioItem::SetCurSecoundBullet
EXTRN	?GetGrowthInfoNum@ioObjectItem@@UBEHH@Z:PROC	; ioObjectItem::GetGrowthInfoNum
EXTRN	?GetGrowthInfoNumByType@ioObjectItem@@UBEHHAAH@Z:PROC ; ioObjectItem::GetGrowthInfoNumByType
EXTRN	?ClearCurChargeRateForSkill@ioItem@@UAEXXZ:PROC	; ioItem::ClearCurChargeRateForSkill
EXTRN	?GetChargeDamageRateForSkill@ioItem@@UAEMXZ:PROC ; ioItem::GetChargeDamageRateForSkill
EXTRN	?GetChargeForceRateForSkill@ioItem@@UAEMXZ:PROC	; ioItem::GetChargeForceRateForSkill
EXTRN	?GetChargeBlowRateForSkill@ioItem@@UAEMXZ:PROC	; ioItem::GetChargeBlowRateForSkill
EXTRN	?GetChargeRangeRateForSkill@ioItem@@UAEMXZ:PROC	; ioItem::GetChargeRangeRateForSkill
EXTRN	?GetChargeSpeedRateForSkill@ioItem@@UAEMXZ:PROC	; ioItem::GetChargeSpeedRateForSkill
EXTRN	?GetChargeFloatRateForSkill@ioItem@@UAEMXZ:PROC	; ioItem::GetChargeFloatRateForSkill
EXTRN	?GetChargeScaleRateForSkill@ioItem@@UAEMXZ:PROC	; ioItem::GetChargeScaleRateForSkill
EXTRN	?GetChargeExplosionRateForSkill@ioItem@@UAEMXZ:PROC ; ioItem::GetChargeExplosionRateForSkill
EXTRN	?GetChargeWoundedTimeRateForSkill@ioItem@@UAEMXZ:PROC ; ioItem::GetChargeWoundedTimeRateForSkill
EXTRN	?SetCurEquipEffect@ioItem@@UAEX_N@Z:PROC	; ioItem::SetCurEquipEffect
EXTRN	?SetCostume@ioItem@@UAEXH_N@Z:PROC		; ioItem::SetCostume
EXTRN	??_EioDrinkItem@@UAEPAXI@Z:PROC			; ioDrinkItem::`vector deleting destructor'
EXTRN	?IsCanFire@ioAttackableItem@@UBE_NPBVioBaseChar@@H_N@Z:PROC ; ioAttackableItem::IsCanFire
EXTRN	?CallItemProcess@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CallItemProcess
EXTRN	?SetExtraInfoToWeapon@ioObjectItem@@UAEXPAVioWeapon@@_N@Z:PROC ; ioObjectItem::SetExtraInfoToWeapon
EXTRN	?CheckChargeInfo@ioAttackableItem@@UAEXPAVioWeapon@@_N@Z:PROC ; ioAttackableItem::CheckChargeInfo
EXTRN	?SetExtendDefenseState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetExtendDefenseState
EXTRN	?CheckExtendDefenseState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckExtendDefenseState
EXTRN	?CheckDefenseMoveAniState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckDefenseMoveAniState
EXTRN	?SetDodgeDefenseState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetDodgeDefenseState
EXTRN	?CheckDodgeDefenseState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckDodgeDefenseState
EXTRN	?ApplyDodgeDefenseState@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z:PROC ; ioAttackableItem::ApplyDodgeDefenseState
EXTRN	?SetDefenseAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetDefenseAttackState
EXTRN	?CheckDefenseAttackState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckDefenseAttackState
EXTRN	?ApplyDefenseAttackState@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z:PROC ; ioAttackableItem::ApplyDefenseAttackState
EXTRN	?SetExtendDashState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetExtendDashState
EXTRN	?CheckExtendDashState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckExtendDashState
EXTRN	?SetNormalAttack@ioAttackableItem@@UAEXPAVioBaseChar@@H@Z:PROC ; ioAttackableItem::SetNormalAttack
EXTRN	?CheckNormalAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckNormalAttack
EXTRN	?SetJumpAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@HMW4AttackType@@@Z:PROC ; ioAttackableItem::SetJumpAttack
EXTRN	?CheckJumpAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckJumpAttack
EXTRN	?SetJumpReloadState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetJumpReloadState
EXTRN	?SetJumpReload@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetJumpReload
EXTRN	?CheckJumpReloadState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckJumpReloadState
EXTRN	?CheckJumpReloadReserve@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckJumpReloadReserve
EXTRN	?ProcessJumpReloadState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::ProcessJumpReloadState
EXTRN	?ApplyJumpReload@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z:PROC ; ioAttackableItem::ApplyJumpReload
EXTRN	?OnItemGaugeOK@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z:PROC ; ioAttackableItem::OnItemGaugeOK
EXTRN	?OnItemGaugeCancel@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z:PROC ; ioAttackableItem::OnItemGaugeCancel
EXTRN	?OnEndExtendDefense@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::OnEndExtendDefense
EXTRN	?OnEndNormalAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::OnEndNormalAttack
EXTRN	?OnEndExtendAttack@ioAttackableItem@@UAEXPAVioBaseChar@@_N@Z:PROC ; ioAttackableItem::OnEndExtendAttack
EXTRN	?OnEndExtendJump@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::OnEndExtendJump
EXTRN	?FillNormalAttackExtraInfo@ioAttackableItem@@UAEXAAVSP2Packet@@@Z:PROC ; ioAttackableItem::FillNormalAttackExtraInfo
EXTRN	?ApplyNormalAttackExtraInfo@ioAttackableItem@@UAEXAAVSP2Packet@@@Z:PROC ; ioAttackableItem::ApplyNormalAttackExtraInfo
EXTRN	?CheckLanding@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckLanding
EXTRN	?SetNoneState@ioAttackableItem@@UAEXPAVioBaseChar@@H@Z:PROC ; ioAttackableItem::SetNoneState
EXTRN	?IsCanUpdateGauge@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::IsCanUpdateGauge
EXTRN	?CheckAimJumpState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckAimJumpState
EXTRN	?GetJumppingAnimation@ioAttackableItem@@UBEABVioHashString@@XZ:PROC ; ioAttackableItem::GetJumppingAnimation
EXTRN	?GetExtendJumppingAnimation@ioAttackableItem@@UBEABVioHashString@@XZ:PROC ; ioAttackableItem::GetExtendJumppingAnimation
EXTRN	?CheckRetreatState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckRetreatState
EXTRN	?SetNextItemState@ioAttackableItem@@UAEXPAVioBaseChar@@0PAVioWeapon@@_NM@Z:PROC ; ioAttackableItem::SetNextItemState
EXTRN	?WeaponWounded@ioWeaponItem@@UAEXPAVioWeapon@@PAVioBaseChar@@@Z:PROC ; ioWeaponItem::WeaponWounded
EXTRN	?WeaponMapColDead@ioAttackableItem@@UAEXPAVioWeapon@@@Z:PROC ; ioAttackableItem::WeaponMapColDead
EXTRN	?SetDefenceCounterState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetDefenceCounterState
EXTRN	?IsUseDefenceCounterAttack@ioAttackableItem@@UAE_NXZ:PROC ; ioAttackableItem::IsUseDefenceCounterAttack
EXTRN	?ProcessDefenceCounterAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::ProcessDefenceCounterAttack
EXTRN	?ProcessExtraJump@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::ProcessExtraJump
EXTRN	?SetEndGrappling@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetEndGrappling
EXTRN	?ClearKeyReserve@ioAttackableItem@@MAEXXZ:PROC	; ioAttackableItem::ClearKeyReserve
EXTRN	?CheckReserve@ioAttackableItem@@MAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckReserve
EXTRN	?ProcessReserveKeyInput@ioAttackableItem@@MAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::ProcessReserveKeyInput
EXTRN	?SetJumpState@ioAttackableItem@@UAEXXZ:PROC	; ioAttackableItem::SetJumpState
EXTRN	?SetJumpping@ioAttackableItem@@UAEXPAVioBaseChar@@_N@Z:PROC ; ioAttackableItem::SetJumpping
EXTRN	?ProcessJumpping@ioAttackableItem@@UAEXPAVioBaseChar@@M@Z:PROC ; ioAttackableItem::ProcessJumpping
EXTRN	?ProcessJumppingByNoNeedProcess@ioAttackableItem@@UAEXPAVioBaseChar@@M@Z:PROC ; ioAttackableItem::ProcessJumppingByNoNeedProcess
EXTRN	?ProcessLanding@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::ProcessLanding
EXTRN	?ProcessJumpAttack@ioAttackableItem@@UAEXPAVioBaseChar@@M@Z:PROC ; ioAttackableItem::ProcessJumpAttack
EXTRN	?ProcessAimJump@ioAttackableItem@@UAE_NPAVioBaseChar@@M@Z:PROC ; ioAttackableItem::ProcessAimJump
EXTRN	?ApplyJump@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z:PROC ; ioAttackableItem::ApplyJump
EXTRN	?ApplyDash@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z:PROC ; ioAttackableItem::ApplyDash
EXTRN	?ApplyCounterAttack@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z:PROC ; ioAttackableItem::ApplyCounterAttack
EXTRN	?CheckComboJumpAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckComboJumpAttack
EXTRN	?SetFlashJumpAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetFlashJumpAttack
EXTRN	?SetComboFlashAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetComboFlashAttack
EXTRN	?SetCollectJumpAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetCollectJumpAttack
EXTRN	?SetPowerChargeJumpAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetPowerChargeJumpAttack
EXTRN	?GetAttackSpeedRate@ioAttackableItem@@UBEMXZ:PROC ; ioAttackableItem::GetAttackSpeedRate
EXTRN	?GetExtraJumpSpeedRate@ioAttackableItem@@UBEMABUD3DXVECTOR3@@ABUD3DXQUATERNION@@@Z:PROC ; ioAttackableItem::GetExtraJumpSpeedRate
EXTRN	?IsEnableExtendJump@ioAttackableItem@@UAE_NXZ:PROC ; ioAttackableItem::IsEnableExtendJump
EXTRN	?RecevieExtendJumpUse@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::RecevieExtendJumpUse
EXTRN	?HasAniFile@ioAttackableItem@@UBE_NW4AttackType@@H@Z:PROC ; ioAttackableItem::HasAniFile
EXTRN	?HasEndAniFile@ioAttackableItem@@UBE_NW4AttackType@@H@Z:PROC ; ioAttackableItem::HasEndAniFile
EXTRN	?GetAttackAttribute@ioAttackableItem@@UBEPBUAttackAttribute@@W4AttackType@@H@Z:PROC ; ioAttackableItem::GetAttackAttribute
EXTRN	?GetAniFile@ioAttackableItem@@UBEABVioHashString@@W4AttackType@@H@Z:PROC ; ioAttackableItem::GetAniFile
EXTRN	?GetAttackAniRate@ioAttackableItem@@UBEMW4AttackType@@H@Z:PROC ; ioAttackableItem::GetAttackAniRate
EXTRN	?GetEndAniFile@ioAttackableItem@@UBEABVioHashString@@W4AttackType@@H@Z:PROC ; ioAttackableItem::GetEndAniFile
EXTRN	?GetAttackEndAniRate@ioAttackableItem@@UBEMW4AttackType@@H@Z:PROC ; ioAttackableItem::GetAttackEndAniRate
EXTRN	?GetAttackAttributeIdx@ioAttackableItem@@UBEABV?$vector@UWeaponInfo@@V?$allocator@UWeaponInfo@@@std@@@std@@W4AttackType@@H@Z:PROC ; ioAttackableItem::GetAttackAttributeIdx
EXTRN	?GetForceInfoList@ioAttackableItem@@UBEABV?$vector@UForceInfo@@V?$allocator@UForceInfo@@@std@@@std@@W4AttackType@@H@Z:PROC ; ioAttackableItem::GetForceInfoList
EXTRN	?GetAttackPreDelay@ioAttackableItem@@UBEKW4AttackType@@H@Z:PROC ; ioAttackableItem::GetAttackPreDelay
EXTRN	?GetAttackAnimationDelay@ioAttackableItem@@UBEKW4AttackType@@H@Z:PROC ; ioAttackableItem::GetAttackAnimationDelay
EXTRN	?GetMaxCombo@ioAttackableItem@@UBEHXZ:PROC	; ioAttackableItem::GetMaxCombo
EXTRN	?GetExtraDashAttackMax@ioAttackableItem@@UBEHXZ:PROC ; ioAttackableItem::GetExtraDashAttackMax
EXTRN	?HasJumpEndAnimation@ioAttackableItem@@UBE_N_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::HasJumpEndAnimation
EXTRN	?GetJumpEndAnimation@ioAttackableItem@@UBEABVioHashString@@_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::GetJumpEndAnimation
EXTRN	?ClearCancelInfo@ioAttackableItem@@MAEXXZ:PROC	; ioAttackableItem::ClearCancelInfo
EXTRN	?CheckCancelReserve@ioAttackableItem@@MAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckCancelReserve
EXTRN	?SetCurAttackAniForInputJump@ioAttackableItem@@MAEXABVioHashString@@M@Z:PROC ; ioAttackableItem::SetCurAttackAniForInputJump
EXTRN	?ProcessCancel@ioAttackableItem@@MAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::ProcessCancel
EXTRN	?ProcessCancelBySpeicalDash@ioAttackableItem@@MAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::ProcessCancelBySpeicalDash
EXTRN	?SetCurAttackAniForInputDashS@ioAttackableItem@@UAEXABVioHashString@@M@Z:PROC ; ioAttackableItem::SetCurAttackAniForInputDashS
EXTRN	?CheckCancelReserveByConditionalSpecialDash@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckCancelReserveByConditionalSpecialDash
EXTRN	?IsConditionalSpecialDashReserve@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::IsConditionalSpecialDashReserve
EXTRN	?SetChangeConditionalSpecialDash@ioAttackableItem@@UAEXPAVioBaseChar@@W4DirKeyInput@ioUserKeyInput@@H@Z:PROC ; ioAttackableItem::SetChangeConditionalSpecialDash
EXTRN	?CheckChangeWereWolfState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckChangeWereWolfState
EXTRN	?SetChangeWereWolfState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetChangeWereWolfState
EXTRN	?CheckReleaseWereWolfState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckReleaseWereWolfState
EXTRN	?ReleseWereWolfState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::ReleseWereWolfState
EXTRN	?ReleseWereWolfStateByOwner@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::ReleseWereWolfStateByOwner
EXTRN	?IncreaseChangeDamage@ioAttackableItem@@UAEXMH_N@Z:PROC ; ioAttackableItem::IncreaseChangeDamage
EXTRN	?IncreaseChangeDamageByWeapon@ioAttackableItem@@UAEXM@Z:PROC ; ioAttackableItem::IncreaseChangeDamageByWeapon
EXTRN	?CheckIncreaseChangeDamage@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckIncreaseChangeDamage
EXTRN	?DecreaseChangeDamage@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::DecreaseChangeDamage
EXTRN	?IsEnableActionStopDelay@ioAttackableItem@@UAE_NXZ:PROC ; ioAttackableItem::IsEnableActionStopDelay
EXTRN	?SetExtraGaugeTypeByWeapon@ioAttackableItem@@UAEXPAVioBaseChar@@HHM@Z:PROC ; ioAttackableItem::SetExtraGaugeTypeByWeapon
EXTRN	?SetUseExtraGauge@ioAttackableItem@@UAEXM@Z:PROC ; ioAttackableItem::SetUseExtraGauge
EXTRN	?InitExtraGauge@ioAttackableItem@@UAEXXZ:PROC	; ioAttackableItem::InitExtraGauge
EXTRN	?MaxExtraGauge@ioAttackableItem@@UAEXXZ:PROC	; ioAttackableItem::MaxExtraGauge
EXTRN	?GetMaxExtraGauge@ioAttackableItem@@UAEMXZ:PROC	; ioAttackableItem::GetMaxExtraGauge
EXTRN	?GetCurExtraGauge@ioAttackableItem@@UAEMXZ:PROC	; ioAttackableItem::GetCurExtraGauge
EXTRN	?SetCurExtraGauge@ioAttackableItem@@UAEXM@Z:PROC ; ioAttackableItem::SetCurExtraGauge
EXTRN	?GetAutoTargetValue@ioAttackableItem@@UAEXPAVioBaseChar@@AAM11W4AutoTargetType@@@Z:PROC ; ioAttackableItem::GetAutoTargetValue
EXTRN	?ClearAirJump@ioAttackableItem@@UAEXXZ:PROC	; ioAttackableItem::ClearAirJump
EXTRN	?SetAirJump@ioAttackableItem@@UAEXPAVioBaseChar@@HM@Z:PROC ; ioAttackableItem::SetAirJump
EXTRN	?CheckAirJump@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckAirJump
EXTRN	?EquipObjectItemByAttakable@ioAttackableItem@@UAEXPAVioBaseChar@@PAVioItem@@@Z:PROC ; ioAttackableItem::EquipObjectItemByAttakable
EXTRN	?ReleaseObjectItemByAttack@ioAttackableItem@@UAEXPAVioBaseChar@@PAVioItem@@@Z:PROC ; ioAttackableItem::ReleaseObjectItemByAttack
EXTRN	?IsBuffFlyChange@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::IsBuffFlyChange
EXTRN	?GetAttackStateText@ioAttackableItem@@UBEPBDXZ:PROC ; ioAttackableItem::GetAttackStateText
EXTRN	?SetJumpLandingExtraState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetJumpLandingExtraState
EXTRN	?ReleaseObjectState@ioWeaponItem@@UAEXPAVioBaseChar@@PAVioObjectItem@@@Z:PROC ; ioWeaponItem::ReleaseObjectState
EXTRN	?IsCmdCheckEnableTime@ioWeaponItem@@UAE_NXZ:PROC ; ioWeaponItem::IsCmdCheckEnableTime
EXTRN	?IsCmdSuccess@ioWeaponItem@@UAE_NXZ:PROC	; ioWeaponItem::IsCmdSuccess
EXTRN	?IsOneTimeWeaponItem@ioObjectItem@@UBE_NXZ:PROC	; ioObjectItem::IsOneTimeWeaponItem
EXTRN	?GetEquipMesh@ioObjectItem@@UBEABVioHashString@@PAVioBaseChar@@@Z:PROC ; ioObjectItem::GetEquipMesh
EXTRN	?IsCanSendControl@ioWeaponItem@@UBE_NXZ:PROC	; ioWeaponItem::IsCanSendControl
EXTRN	?GetSubType@ioObjectItem@@UBE?AW4WeaponSubType@ioWeaponItem@@XZ:PROC ; ioObjectItem::GetSubType
EXTRN	?IsEnableDash@ioObjectItem@@UBE_NXZ:PROC	; ioObjectItem::IsEnableDash
EXTRN	?IsEnableDefense@ioObjectItem@@UBE_NXZ:PROC	; ioObjectItem::IsEnableDefense
EXTRN	?IsProtectState@ioObjectItem@@UAE_NXZ:PROC	; ioObjectItem::IsProtectState
EXTRN	?EnableReduceGaugeOnSwitchBuff@ioObjectItem@@UAE_NXZ:PROC ; ioObjectItem::EnableReduceGaugeOnSwitchBuff
EXTRN	?CheckAttackCount@ioObjectItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioObjectItem::CheckAttackCount
EXTRN	?CheckActiveCount@ioObjectItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioObjectItem::CheckActiveCount
EXTRN	?IsAttackComboInit@ioObjectItem@@UBE_NXZ:PROC	; ioObjectItem::IsAttackComboInit
EXTRN	?CheckReleaseProcess@ioObjectItem@@UAE_NPAVioPlayStage@@PAVioBaseChar@@@Z:PROC ; ioObjectItem::CheckReleaseProcess
EXTRN	?CheckReleaseByNormalAttack@ioObjectItem@@UAE_NPAVioPlayStage@@PAVioBaseChar@@@Z:PROC ; ioObjectItem::CheckReleaseByNormalAttack
EXTRN	?CheckObjectReleaseSelectionBuff@ioObjectItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioObjectItem::CheckObjectReleaseSelectionBuff
;	COMDAT ??_R2ioItem@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iodrinkitem.cpp
rdata$r	SEGMENT
??_R2ioItem@@8 DD FLAT:??_R1A@?0A@EA@ioItem@@8		; ioItem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioItem@@8
rdata$r	SEGMENT
??_R3ioItem@@8 DD 00H					; ioItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioItem@@@8
_DATA	SEGMENT
??_R0?AVioItem@@@8 DD FLAT:??_7type_info@@6B@		; ioItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioItem@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioItem@@8 DD FLAT:??_R0?AVioItem@@@8	; ioItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioItem@@8
rdata$r	ENDS
;	COMDAT ??_R2ioAttackableItem@@8
rdata$r	SEGMENT
??_R2ioAttackableItem@@8 DD FLAT:??_R1A@?0A@EA@ioAttackableItem@@8 ; ioAttackableItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioItem@@8
rdata$r	ENDS
;	COMDAT ??_R3ioAttackableItem@@8
rdata$r	SEGMENT
??_R3ioAttackableItem@@8 DD 00H				; ioAttackableItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioAttackableItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioAttackableItem@@@8
_DATA	SEGMENT
??_R0?AVioAttackableItem@@@8 DD FLAT:??_7type_info@@6B@	; ioAttackableItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioAttackableItem@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioAttackableItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioAttackableItem@@8 DD FLAT:??_R0?AVioAttackableItem@@@8 ; ioAttackableItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioAttackableItem@@8
rdata$r	ENDS
;	COMDAT ??_R2ioWeaponItem@@8
rdata$r	SEGMENT
??_R2ioWeaponItem@@8 DD FLAT:??_R1A@?0A@EA@ioWeaponItem@@8 ; ioWeaponItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioAttackableItem@@8
	DD	FLAT:??_R1A@?0A@EA@ioItem@@8
rdata$r	ENDS
;	COMDAT ??_R3ioWeaponItem@@8
rdata$r	SEGMENT
??_R3ioWeaponItem@@8 DD 00H				; ioWeaponItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ioWeaponItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioWeaponItem@@@8
_DATA	SEGMENT
??_R0?AVioWeaponItem@@@8 DD FLAT:??_7type_info@@6B@	; ioWeaponItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWeaponItem@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioWeaponItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioWeaponItem@@8 DD FLAT:??_R0?AVioWeaponItem@@@8 ; ioWeaponItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioWeaponItem@@8
rdata$r	ENDS
;	COMDAT ??_R2ioObjectItem@@8
rdata$r	SEGMENT
??_R2ioObjectItem@@8 DD FLAT:??_R1A@?0A@EA@ioObjectItem@@8 ; ioObjectItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWeaponItem@@8
	DD	FLAT:??_R1A@?0A@EA@ioAttackableItem@@8
	DD	FLAT:??_R1A@?0A@EA@ioItem@@8
rdata$r	ENDS
;	COMDAT ??_R3ioObjectItem@@8
rdata$r	SEGMENT
??_R3ioObjectItem@@8 DD 00H				; ioObjectItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2ioObjectItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioObjectItem@@@8
_DATA	SEGMENT
??_R0?AVioObjectItem@@@8 DD FLAT:??_7type_info@@6B@	; ioObjectItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioObjectItem@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioObjectItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioObjectItem@@8 DD FLAT:??_R0?AVioObjectItem@@@8 ; ioObjectItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioObjectItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioDrinkItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioDrinkItem@@8 DD FLAT:??_R0?AVioDrinkItem@@@8 ; ioDrinkItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioDrinkItem@@8
rdata$r	ENDS
;	COMDAT ??_R2ioDrinkItem@@8
rdata$r	SEGMENT
??_R2ioDrinkItem@@8 DD FLAT:??_R1A@?0A@EA@ioDrinkItem@@8 ; ioDrinkItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioObjectItem@@8
	DD	FLAT:??_R1A@?0A@EA@ioWeaponItem@@8
	DD	FLAT:??_R1A@?0A@EA@ioAttackableItem@@8
	DD	FLAT:??_R1A@?0A@EA@ioItem@@8
rdata$r	ENDS
;	COMDAT ??_R3ioDrinkItem@@8
rdata$r	SEGMENT
??_R3ioDrinkItem@@8 DD 00H				; ioDrinkItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2ioDrinkItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioDrinkItem@@@8
_DATA	SEGMENT
??_R0?AVioDrinkItem@@@8 DD FLAT:??_7type_info@@6B@	; ioDrinkItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioDrinkItem@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioDrinkItem@@6B@
rdata$r	SEGMENT
??_R4ioDrinkItem@@6B@ DD 00H				; ioDrinkItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioDrinkItem@@@8
	DD	FLAT:??_R3ioDrinkItem@@8
rdata$r	ENDS
;	COMDAT ??_7ioDrinkItem@@6B@
CONST	SEGMENT
??_7ioDrinkItem@@6B@ DD FLAT:??_R4ioDrinkItem@@6B@	; ioDrinkItem::`vftable'
	DD	FLAT:?FindFieldEntityGrp@ioItem@@MBEABVioHashString@@XZ
	DD	FLAT:?LoadProperty@ioDrinkItem@@UAEXAAVioINILoader@@@Z
	DD	FLAT:?GetType@ioObjectItem@@UBE?AW4ItemType@ioItem@@XZ
	DD	FLAT:?Clone@ioDrinkItem@@UAEPAVioItem@@XZ
	DD	FLAT:?UseCreateIndexItem@ioItem@@UBE_NXZ
	DD	FLAT:?GetSetFocusColor@ioItem@@UBEKXZ
	DD	FLAT:?Initialize@ioItem@@UAEXABVioHashString@@PAVioPlayStage@@@Z
	DD	FLAT:?InitializeBeforeEquip@ioItem@@UAEXABVioHashString@@PAVioPlayStage@@@Z
	DD	FLAT:?OnEquiped@ioObjectItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?OnReleased@ioObjectItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetExtendEquipEffect@ioItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ReleaseExtendEquipEffect@ioItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?AddGlowLine@ioWeaponItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?RemoveGlowLine@ioWeaponItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?GetTargetName@ioItem@@UAE?AVioHashString@@XZ
	DD	FLAT:?ClearTarget@ioItem@@UAEXXZ
	DD	FLAT:?SetItemType@ioWeaponItem@@UAEXXZ
	DD	FLAT:?UpdateExtraData@ioItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?CheckWeaponDefenseState@ioItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?CheckWoundedState@ioItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetVisible@ioItem@@UAEXPAVioBaseChar@@_N@Z
	DD	FLAT:?UpdateSkillGauge@ioItem@@UAEXPAVioBaseChar@@M_N@Z
	DD	FLAT:?IsEnableExtraGauge@ioItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?GetExtraGauge@ioItem@@UAEMXZ
	DD	FLAT:?ReduceNeedGauge@ioItem@@UAEXMPAVioBaseChar@@@Z
	DD	FLAT:?GetCurBullet@ioItem@@UAEHXZ
	DD	FLAT:?GetMaxBullet@ioItem@@UAEHXZ
	DD	FLAT:?SetCurBullet@ioItem@@UAEXH@Z
	DD	FLAT:?GetCurSecoundBullet@ioItem@@UAEHXZ
	DD	FLAT:?GetMaxSecoundBullet@ioItem@@UAEHXZ
	DD	FLAT:?SetCurSecoundBullet@ioItem@@UAEXH@Z
	DD	FLAT:?GetGrowthInfoNum@ioObjectItem@@UBEHH@Z
	DD	FLAT:?GetGrowthInfoNumByType@ioObjectItem@@UBEHHAAH@Z
	DD	FLAT:?ClearCurChargeRateForSkill@ioItem@@UAEXXZ
	DD	FLAT:?GetChargeDamageRateForSkill@ioItem@@UAEMXZ
	DD	FLAT:?GetChargeForceRateForSkill@ioItem@@UAEMXZ
	DD	FLAT:?GetChargeBlowRateForSkill@ioItem@@UAEMXZ
	DD	FLAT:?GetChargeRangeRateForSkill@ioItem@@UAEMXZ
	DD	FLAT:?GetChargeSpeedRateForSkill@ioItem@@UAEMXZ
	DD	FLAT:?GetChargeFloatRateForSkill@ioItem@@UAEMXZ
	DD	FLAT:?GetChargeScaleRateForSkill@ioItem@@UAEMXZ
	DD	FLAT:?GetChargeExplosionRateForSkill@ioItem@@UAEMXZ
	DD	FLAT:?GetChargeWoundedTimeRateForSkill@ioItem@@UAEMXZ
	DD	FLAT:?SetCurEquipEffect@ioItem@@UAEX_N@Z
	DD	FLAT:?SetCostume@ioItem@@UAEXH_N@Z
	DD	FLAT:??_EioDrinkItem@@UAEPAXI@Z
	DD	FLAT:?IsCanFire@ioAttackableItem@@UBE_NPBVioBaseChar@@H_N@Z
	DD	FLAT:?CallItemProcess@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetExtraInfoToWeapon@ioObjectItem@@UAEXPAVioWeapon@@_N@Z
	DD	FLAT:?CheckChargeInfo@ioAttackableItem@@UAEXPAVioWeapon@@_N@Z
	DD	FLAT:?SetExtendDefenseState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?CheckExtendDefenseState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?CheckDefenseMoveAniState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetDodgeDefenseState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?CheckDodgeDefenseState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ApplyDodgeDefenseState@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?SetDefenseAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?CheckDefenseAttackState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ApplyDefenseAttackState@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?SetExtendDashState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?CheckExtendDashState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetNormalAttack@ioAttackableItem@@UAEXPAVioBaseChar@@H@Z
	DD	FLAT:?CheckNormalAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetJumpAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@HMW4AttackType@@@Z
	DD	FLAT:?CheckJumpAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetJumpReloadState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?SetJumpReload@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?CheckJumpReloadState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?CheckJumpReloadReserve@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ProcessJumpReloadState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ApplyJumpReload@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?OnItemGaugeOK@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?OnItemGaugeCancel@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?OnEndExtendDefense@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?OnEndNormalAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?OnEndExtendAttack@ioAttackableItem@@UAEXPAVioBaseChar@@_N@Z
	DD	FLAT:?OnEndExtendJump@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?FillNormalAttackExtraInfo@ioAttackableItem@@UAEXAAVSP2Packet@@@Z
	DD	FLAT:?ApplyNormalAttackExtraInfo@ioAttackableItem@@UAEXAAVSP2Packet@@@Z
	DD	FLAT:?CheckOnHand@ioAttackableItem@@UAE_NXZ
	DD	FLAT:?CheckAimState@ioAttackableItem@@UAE_N_N@Z
	DD	FLAT:?SetAimState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?CheckLanding@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?SetNoneState@ioAttackableItem@@UAEXPAVioBaseChar@@H@Z
	DD	FLAT:?CheckExtendDefenseEnable@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsChargeAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsMoveAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsCanUpdateGauge@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsNoGhostWalk@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsEnableAttackDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z
	DD	FLAT:?IsEnableItemDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z
	DD	FLAT:?IsEnableAttackRotateCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsEnableChargeDefenseCheck@ioAttackableItem@@UAE_NXZ
	DD	FLAT:?CheckAimJumpState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?GetJumppingAnimation@ioAttackableItem@@UBEABVioHashString@@XZ
	DD	FLAT:?GetExtendJumppingAnimation@ioAttackableItem@@UBEABVioHashString@@XZ
	DD	FLAT:?CheckRetreatState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetNextItemState@ioAttackableItem@@UAEXPAVioBaseChar@@0PAVioWeapon@@_NM@Z
	DD	FLAT:?WeaponWounded@ioWeaponItem@@UAEXPAVioWeapon@@PAVioBaseChar@@@Z
	DD	FLAT:?WeaponMapColDead@ioAttackableItem@@UAEXPAVioWeapon@@@Z
	DD	FLAT:?SetDefenceCounterState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?IsUseDefenceCounterAttack@ioAttackableItem@@UAE_NXZ
	DD	FLAT:?ProcessDefenceCounterAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?IsUseDefenceCounterAttackEndDash@ioAttackableItem@@UAE_NXZ
	DD	FLAT:?ProcessExtraJump@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetEndGrappling@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ClearKeyReserve@ioAttackableItem@@MAEXXZ
	DD	FLAT:?CheckReserve@ioAttackableItem@@MAEXPAVioBaseChar@@@Z
	DD	FLAT:?ProcessReserveKeyInput@ioAttackableItem@@MAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetJumpState@ioAttackableItem@@UAEXXZ
	DD	FLAT:?SetJumpping@ioAttackableItem@@UAEXPAVioBaseChar@@_N@Z
	DD	FLAT:?ProcessJumpping@ioAttackableItem@@UAEXPAVioBaseChar@@M@Z
	DD	FLAT:?ProcessJumppingByNoNeedProcess@ioAttackableItem@@UAEXPAVioBaseChar@@M@Z
	DD	FLAT:?ProcessLanding@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ProcessJumpAttack@ioAttackableItem@@UAEXPAVioBaseChar@@M@Z
	DD	FLAT:?ProcessAimJump@ioAttackableItem@@UAE_NPAVioBaseChar@@M@Z
	DD	FLAT:?ApplyJump@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?ApplyDash@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?ApplyCounterAttack@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?CheckComboJumpAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetFlashJumpAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?SetComboFlashAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?SetCollectJumpAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?SetPowerChargeJumpAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?GetAttackSpeedRate@ioAttackableItem@@UBEMXZ
	DD	FLAT:?GetExtraJumpSpeedRate@ioAttackableItem@@UBEMABUD3DXVECTOR3@@ABUD3DXQUATERNION@@@Z
	DD	FLAT:?IsEnableExtendJump@ioAttackableItem@@UAE_NXZ
	DD	FLAT:?RecevieExtendJumpUse@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?HasAniFile@ioAttackableItem@@UBE_NW4AttackType@@H@Z
	DD	FLAT:?HasEndAniFile@ioAttackableItem@@UBE_NW4AttackType@@H@Z
	DD	FLAT:?GetAttackAttribute@ioAttackableItem@@UBEPBUAttackAttribute@@W4AttackType@@H@Z
	DD	FLAT:?GetAniFile@ioAttackableItem@@UBEABVioHashString@@W4AttackType@@H@Z
	DD	FLAT:?GetAttackAniRate@ioAttackableItem@@UBEMW4AttackType@@H@Z
	DD	FLAT:?GetEndAniFile@ioAttackableItem@@UBEABVioHashString@@W4AttackType@@H@Z
	DD	FLAT:?GetAttackEndAniRate@ioAttackableItem@@UBEMW4AttackType@@H@Z
	DD	FLAT:?GetAttackAttributeIdx@ioAttackableItem@@UBEABV?$vector@UWeaponInfo@@V?$allocator@UWeaponInfo@@@std@@@std@@W4AttackType@@H@Z
	DD	FLAT:?GetForceInfoList@ioAttackableItem@@UBEABV?$vector@UForceInfo@@V?$allocator@UForceInfo@@@std@@@std@@W4AttackType@@H@Z
	DD	FLAT:?GetAttackPreDelay@ioAttackableItem@@UBEKW4AttackType@@H@Z
	DD	FLAT:?GetAttackAnimationDelay@ioAttackableItem@@UBEKW4AttackType@@H@Z
	DD	FLAT:?GetMaxCombo@ioAttackableItem@@UBEHXZ
	DD	FLAT:?GetExtraDashAttackMax@ioAttackableItem@@UBEHXZ
	DD	FLAT:?HasJumpEndAnimation@ioAttackableItem@@UBE_N_NPAVioBaseChar@@@Z
	DD	FLAT:?GetJumpEndAnimation@ioAttackableItem@@UBEABVioHashString@@_NPAVioBaseChar@@@Z
	DD	FLAT:?ClearCancelInfo@ioAttackableItem@@MAEXXZ
	DD	FLAT:?CheckCancelReserve@ioAttackableItem@@MAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetCurAttackAniForInputJump@ioAttackableItem@@MAEXABVioHashString@@M@Z
	DD	FLAT:?ProcessCancel@ioAttackableItem@@MAE_NPAVioBaseChar@@@Z
	DD	FLAT:?ProcessCancelBySpeicalDash@ioAttackableItem@@MAE_NPAVioBaseChar@@@Z
	DD	FLAT:?SetCurAttackAniForInputDashS@ioAttackableItem@@UAEXABVioHashString@@M@Z
	DD	FLAT:?CheckCancelReserveByConditionalSpecialDash@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?IsConditionalSpecialDashReserve@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?SetChangeConditionalSpecialDash@ioAttackableItem@@UAEXPAVioBaseChar@@W4DirKeyInput@ioUserKeyInput@@H@Z
	DD	FLAT:?CheckChangeWereWolfState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?SetChangeWereWolfState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?CheckReleaseWereWolfState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?ReleseWereWolfState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ReleseWereWolfStateByOwner@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?IncreaseChangeDamage@ioAttackableItem@@UAEXMH_N@Z
	DD	FLAT:?IncreaseChangeDamageByWeapon@ioAttackableItem@@UAEXM@Z
	DD	FLAT:?CheckIncreaseChangeDamage@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?DecreaseChangeDamage@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?IsEnableActionStopDelay@ioAttackableItem@@UAE_NXZ
	DD	FLAT:?SetExtraGaugeTypeByWeapon@ioAttackableItem@@UAEXPAVioBaseChar@@HHM@Z
	DD	FLAT:?SetUseExtraGauge@ioAttackableItem@@UAEXM@Z
	DD	FLAT:?InitExtraGauge@ioAttackableItem@@UAEXXZ
	DD	FLAT:?MaxExtraGauge@ioAttackableItem@@UAEXXZ
	DD	FLAT:?GetMaxExtraGauge@ioAttackableItem@@UAEMXZ
	DD	FLAT:?GetCurExtraGauge@ioAttackableItem@@UAEMXZ
	DD	FLAT:?SetCurExtraGauge@ioAttackableItem@@UAEXM@Z
	DD	FLAT:?GetAutoTargetValue@ioAttackableItem@@UAEXPAVioBaseChar@@AAM11W4AutoTargetType@@@Z
	DD	FLAT:?ClearAirJump@ioAttackableItem@@UAEXXZ
	DD	FLAT:?SetAirJump@ioAttackableItem@@UAEXPAVioBaseChar@@HM@Z
	DD	FLAT:?CheckAirJump@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?IsAutoTarget@ioAttackableItem@@UBE_NXZ
	DD	FLAT:?EquipObjectItemByAttakable@ioAttackableItem@@UAEXPAVioBaseChar@@PAVioItem@@@Z
	DD	FLAT:?ReleaseObjectItemByAttack@ioAttackableItem@@UAEXPAVioBaseChar@@PAVioItem@@@Z
	DD	FLAT:?IsBuffFlyChange@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?GetAttackStateText@ioAttackableItem@@UBEPBDXZ
	DD	FLAT:?SetJumpLandingExtraState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsWoundAfterUseExtendState@ioAttackableItem@@UAE_NXZ
	DD	FLAT:?CheckWoundAfterUseExtendState@ioAttackableItem@@UAE_NPAVioBaseChar@@W4BlowTargetType@@@Z
	DD	FLAT:?IsCharSkipState@ioAttackableItem@@UAE_NPBVioBaseChar@@@Z
	DD	FLAT:?ReleaseObjectState@ioWeaponItem@@UAEXPAVioBaseChar@@PAVioObjectItem@@@Z
	DD	FLAT:?IsCmdCheckEnableTime@ioWeaponItem@@UAE_NXZ
	DD	FLAT:?IsCmdSuccess@ioWeaponItem@@UAE_NXZ
	DD	FLAT:?IsOneTimeWeaponItem@ioObjectItem@@UBE_NXZ
	DD	FLAT:?GetEquipMesh@ioObjectItem@@UBEABVioHashString@@PAVioBaseChar@@@Z
	DD	FLAT:?IsCanSendControl@ioWeaponItem@@UBE_NXZ
	DD	FLAT:?GetSubType@ioObjectItem@@UBE?AW4WeaponSubType@ioWeaponItem@@XZ
	DD	FLAT:?IsEnableDash@ioObjectItem@@UBE_NXZ
	DD	FLAT:?IsEnableDefense@ioObjectItem@@UBE_NXZ
	DD	FLAT:?IsProtectState@ioObjectItem@@UAE_NXZ
	DD	FLAT:?EnableReduceGaugeOnSwitchBuff@ioObjectItem@@UAE_NXZ
	DD	FLAT:?GetObjectSubType@ioDrinkItem@@UBE?AW4ObjectSubType@ioObjectItem@@XZ
	DD	FLAT:?CheckAttackCount@ioObjectItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?CheckActiveCount@ioObjectItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?IsAttackComboInit@ioObjectItem@@UBE_NXZ
	DD	FLAT:?OnProcessState@ioObjectItem@@UAEXPAVioPlayStage@@PAVioBaseChar@@@Z
	DD	FLAT:?CheckReleaseProcess@ioObjectItem@@UAE_NPAVioPlayStage@@PAVioBaseChar@@@Z
	DD	FLAT:?CheckReleaseByNormalAttack@ioObjectItem@@UAE_NPAVioPlayStage@@PAVioBaseChar@@@Z
	DD	FLAT:?CheckObjectReleaseSelectionBuff@ioObjectItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?SetObjectReleaseTCPSend@ioObjectItem@@UAEX_N@Z
	DD	FLAT:?IsObjectReleaseTCPSend@ioObjectItem@@UAE_NXZ
	DD	FLAT:?IsNormalAttackStop@ioObjectItem@@UAE_NXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ioDrinkItem@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioDrinkItem@@QAE@XZ$0
__ehfuncinfo$??0ioDrinkItem@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ioDrinkItem@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0ioDrinkItem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ioDrinkItem@@QAE@XZ PROC				; ioDrinkItem::ioDrinkItem, COMDAT
; _this$ = ecx

; 11   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioDrinkItem@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	e8 00 00 00 00	 call	 ??0ioObjectItem@@QAE@XZ	; ioObjectItem::ioObjectItem
  00016	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001a	8d 8e 34 1b 00
	00		 lea	 ecx, DWORD PTR [esi+6964]
  00020	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioDrinkItem@@6B@
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ

; 12   : 	m_dwDrinkStartTime = 0;

  0002c	83 a6 4c 1b 00
	00 00		 and	 DWORD PTR [esi+6988], 0

; 13   : 	m_dwDrinkEndTime = 0;

  00033	83 a6 50 1b 00
	00 00		 and	 DWORD PTR [esi+6992], 0

; 14   : }

  0003a	8b c6		 mov	 eax, esi
  0003c	e8 00 00 00 00	 call	 __EH_epilog3
  00041	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioDrinkItem@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioObjectItem@@UAE@XZ	; ioObjectItem::~ioObjectItem
__ehhandler$??0ioDrinkItem@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioDrinkItem@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioDrinkItem@@QAE@XZ ENDP				; ioDrinkItem::ioDrinkItem
PUBLIC	??0ioDrinkItem@@QAE@ABV0@@Z			; ioDrinkItem::ioDrinkItem
EXTRN	__imp_??0ioHashString@@QAE@ABV0@@Z:PROC
EXTRN	??0ioObjectItem@@QAE@ABV0@@Z:PROC		; ioObjectItem::ioObjectItem
EXTRN	__fltused:DWORD
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ioDrinkItem@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioDrinkItem@@QAE@ABV0@@Z$0
__ehfuncinfo$??0ioDrinkItem@@QAE@ABV0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ioDrinkItem@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0ioDrinkItem@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_rhs$ = 8						; size = 4
??0ioDrinkItem@@QAE@ABV0@@Z PROC			; ioDrinkItem::ioDrinkItem, COMDAT
; _this$ = ecx

; 22   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioDrinkItem@@QAE@ABV0@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	8b 7d 08	 mov	 edi, DWORD PTR _rhs$[ebp]
  00014	57		 push	 edi
  00015	e8 00 00 00 00	 call	 ??0ioObjectItem@@QAE@ABV0@@Z ; ioObjectItem::ioObjectItem
  0001a	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001e	8d 87 34 1b 00
	00		 lea	 eax, DWORD PTR [edi+6964]
  00024	50		 push	 eax
  00025	8d 8e 34 1b 00
	00		 lea	 ecx, DWORD PTR [esi+6964]
  0002b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioDrinkItem@@6B@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  00037	d9 87 44 1b 00
	00		 fld	 DWORD PTR [edi+6980]
  0003d	d9 9e 44 1b 00
	00		 fstp	 DWORD PTR [esi+6980]
  00043	8b 87 48 1b 00
	00		 mov	 eax, DWORD PTR [edi+6984]
  00049	89 86 48 1b 00
	00		 mov	 DWORD PTR [esi+6984], eax
  0004f	8a 87 54 1b 00
	00		 mov	 al, BYTE PTR [edi+6996]

; 23   : 	m_dwDrinkStartTime = 0;

  00055	83 a6 4c 1b 00
	00 00		 and	 DWORD PTR [esi+6988], 0

; 24   : 	m_dwDrinkEndTime = 0;

  0005c	83 a6 50 1b 00
	00 00		 and	 DWORD PTR [esi+6992], 0
  00063	88 86 54 1b 00
	00		 mov	 BYTE PTR [esi+6996], al

; 25   : }

  00069	8b c6		 mov	 eax, esi
  0006b	e8 00 00 00 00	 call	 __EH_epilog3
  00070	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioDrinkItem@@QAE@ABV0@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioObjectItem@@UAE@XZ	; ioObjectItem::~ioObjectItem
__ehhandler$??0ioDrinkItem@@QAE@ABV0@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioDrinkItem@@QAE@ABV0@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioDrinkItem@@QAE@ABV0@@Z ENDP			; ioDrinkItem::ioDrinkItem
PUBLIC	??1ioDrinkItem@@UAE@XZ				; ioDrinkItem::~ioDrinkItem
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ioDrinkItem@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioDrinkItem@@UAE@XZ$0
__ehfuncinfo$??1ioDrinkItem@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ioDrinkItem@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1ioDrinkItem@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioDrinkItem@@UAE@XZ PROC				; ioDrinkItem::~ioDrinkItem, COMDAT
; _this$ = ecx

; 28   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioDrinkItem@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioDrinkItem@@6B@
  00017	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 29   : }

  0001b	8d 8e 34 1b 00
	00		 lea	 ecx, DWORD PTR [esi+6964]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00027	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ??1ioObjectItem@@UAE@XZ	; ioObjectItem::~ioObjectItem
  00032	e8 00 00 00 00	 call	 __EH_epilog3
  00037	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioDrinkItem@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioObjectItem@@UAE@XZ	; ioObjectItem::~ioObjectItem
__ehhandler$??1ioDrinkItem@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioDrinkItem@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioDrinkItem@@UAE@XZ ENDP				; ioDrinkItem::~ioDrinkItem
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clone@ioDrinkItem@@UAEPAVioItem@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clone@ioDrinkItem@@UAEPAVioItem@@XZ$0
__ehfuncinfo$?Clone@ioDrinkItem@@UAEPAVioItem@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Clone@ioDrinkItem@@UAEPAVioItem@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?Clone@ioDrinkItem@@UAEPAVioItem@@XZ
_TEXT	SEGMENT
$T542965 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Clone@ioDrinkItem@@UAEPAVioItem@@XZ PROC		; ioDrinkItem::Clone, COMDAT
; _this$ = ecx

; 46   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?Clone@ioDrinkItem@@UAEPAVioItem@@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 47   : 	return new ioDrinkItem( *this );

  0000e	68 58 1b 00 00	 push	 7000			; 00001b58H
  00013	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00018	59		 pop	 ecx
  00019	8b c8		 mov	 ecx, eax
  0001b	89 4d f0	 mov	 DWORD PTR $T542965[ebp], ecx
  0001e	33 c0		 xor	 eax, eax
  00020	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00023	3b c8		 cmp	 ecx, eax
  00025	74 06		 je	 SHORT $LN3@Clone
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 ??0ioDrinkItem@@QAE@ABV0@@Z ; ioDrinkItem::ioDrinkItem
$LN3@Clone:

; 48   : }

  0002d	e8 00 00 00 00	 call	 __EH_epilog3
  00032	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clone@ioDrinkItem@@UAEPAVioItem@@XZ$0:
  00000	ff 75 f0	 push	 DWORD PTR $T542965[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__ehhandler$?Clone@ioDrinkItem@@UAEPAVioItem@@XZ:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00011	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Clone@ioDrinkItem@@UAEPAVioItem@@XZ
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Clone@ioDrinkItem@@UAEPAVioItem@@XZ ENDP		; ioDrinkItem::Clone
; Function compile flags: /Ogsp
;	COMDAT ?GetObjectSubType@ioDrinkItem@@UBE?AW4ObjectSubType@ioObjectItem@@XZ
_TEXT	SEGMENT
?GetObjectSubType@ioDrinkItem@@UBE?AW4ObjectSubType@ioObjectItem@@XZ PROC ; ioDrinkItem::GetObjectSubType, COMDAT
; _this$ = ecx

; 52   : 	return OST_DRINK;

  00000	6a 02		 push	 2
  00002	58		 pop	 eax

; 53   : }

  00003	c3		 ret	 0
?GetObjectSubType@ioDrinkItem@@UBE?AW4ObjectSubType@ioObjectItem@@XZ ENDP ; ioDrinkItem::GetObjectSubType
_TEXT	ENDS
PUBLIC	?ProcessDrinkState@ioDrinkItem@@QAE_NPAVioBaseChar@@@Z ; ioDrinkItem::ProcessDrinkState
EXTRN	__imp_?GetLoopSec@ioFrameTimer@@QBEKXZ:PROC
EXTRN	__imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?ProcessDrinkState@ioDrinkItem@@QAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pChar$ = 8						; size = 4
?ProcessDrinkState@ioDrinkItem@@QAE_NPAVioBaseChar@@@Z PROC ; ioDrinkItem::ProcessDrinkState, COMDAT
; _this$ = ecx

; 101  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 102  : 	if( m_dwDrinkEndTime + pChar->GetActionStopTotalDelay() < FRAMEGETTIME() )

  00003	8b 45 08	 mov	 eax, DWORD PTR _pChar$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b b8 b8 15 00
	00		 mov	 edi, DWORD PTR [eax+5560]
  0000e	8b f1		 mov	 esi, ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00016	8b c8		 mov	 ecx, eax
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  0001e	8b 8e 50 1b 00
	00		 mov	 ecx, DWORD PTR [esi+6992]
  00024	03 cf		 add	 ecx, edi
  00026	3b c8		 cmp	 ecx, eax
  00028	5f		 pop	 edi
  00029	0f 92 c0	 setb	 al
  0002c	5e		 pop	 esi

; 103  : 		return true;
; 104  : 
; 105  : 	return false;
; 106  : }

  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?ProcessDrinkState@ioDrinkItem@@QAE_NPAVioBaseChar@@@Z ENDP ; ioDrinkItem::ProcessDrinkState
_TEXT	ENDS
PUBLIC	?empty@?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@QBE_NXZ ; std::vector<BuffInfoStruct,std::allocator<BuffInfoStruct> >::empty
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?empty@?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@QBE_NXZ PROC ; std::vector<BuffInfoStruct,std::allocator<BuffInfoStruct> >::empty, COMDAT
; _this$ = ecx

; 889  : 		return (this->_Myfirst == this->_Mylast);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00005	f7 d8		 neg	 eax
  00007	1b c0		 sbb	 eax, eax
  00009	40		 inc	 eax

; 890  : 		}

  0000a	c3		 ret	 0
?empty@?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@QBE_NXZ ENDP ; std::vector<BuffInfoStruct,std::allocator<BuffInfoStruct> >::empty
_TEXT	ENDS
PUBLIC	??A?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@QAEAAUBuffInfoStruct@@I@Z ; std::vector<BuffInfoStruct,std::allocator<BuffInfoStruct> >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@QAEAAUBuffInfoStruct@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@QAEAAUBuffInfoStruct@@I@Z PROC ; std::vector<BuffInfoStruct,std::allocator<BuffInfoStruct> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pos$[ebp]
  00006	6b c0 14	 imul	 eax, 20			; 00000014H
  00009	03 01		 add	 eax, DWORD PTR [ecx]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@QAEAAUBuffInfoStruct@@I@Z ENDP ; std::vector<BuffInfoStruct,std::allocator<BuffInfoStruct> >::operator[]
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
PUBLIC	?GetGroup@ioGameEntity@@QBEPAVioEntityGroup@@XZ	; ioGameEntity::GetGroup
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iogameentity.h
;	COMDAT ?GetGroup@ioGameEntity@@QBEPAVioEntityGroup@@XZ
_TEXT	SEGMENT
?GetGroup@ioGameEntity@@QBEPAVioEntityGroup@@XZ PROC	; ioGameEntity::GetGroup, COMDAT
; _this$ = ecx

; 166  : 	inline ioEntityGroup* GetGroup() const { return m_pGroup; }

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetGroup@ioGameEntity@@QBEPAVioEntityGroup@@XZ ENDP	; ioGameEntity::GetGroup
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioitem.h
_TEXT	ENDS
;	COMDAT ?IsEnableExtraGauge@ioItem@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pChar$ = 8						; size = 4
?IsEnableExtraGauge@ioItem@@UAE_NPAVioBaseChar@@@Z PROC	; ioItem::IsEnableExtraGauge, COMDAT
; _this$ = ecx

; 375  : 	virtual bool IsEnableExtraGauge( ioBaseChar *pChar ) { return true; }

  00000	b0 01		 mov	 al, 1
  00002	c2 04 00	 ret	 4
?IsEnableExtraGauge@ioItem@@UAE_NPAVioBaseChar@@@Z ENDP	; ioItem::IsEnableExtraGauge
_TEXT	ENDS
PUBLIC	__real@4f800000
;	COMDAT __real@4f800000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioitem.h
CONST	ENDS
;	COMDAT ?GetExtraGauge@ioItem@@UAEMXZ
_TEXT	SEGMENT
tv64 = -4						; size = 4
?GetExtraGauge@ioItem@@UAEMXZ PROC			; ioItem::GetExtraGauge, COMDAT
; _this$ = ecx

; 376  : 	virtual float GetExtraGauge() { return FLOAT1; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	b8 01 00 00 00	 mov	 eax, 1
  00009	89 45 fc	 mov	 DWORD PTR tv64[ebp], eax
  0000c	db 45 fc	 fild	 DWORD PTR tv64[ebp]
  0000f	85 c0		 test	 eax, eax
  00011	79 06		 jns	 SHORT $LN5@GetExtraGa
  00013	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN5@GetExtraGa:
  00019	c9		 leave
  0001a	c3		 ret	 0
?GetExtraGauge@ioItem@@UAEMXZ ENDP			; ioItem::GetExtraGauge
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioattackableitem.h
_TEXT	ENDS
;	COMDAT ?CheckOnHand@ioAttackableItem@@UAE_NXZ
_TEXT	SEGMENT
?CheckOnHand@ioAttackableItem@@UAE_NXZ PROC		; ioAttackableItem::CheckOnHand, COMDAT
; _this$ = ecx

; 429  : 	virtual bool CheckOnHand() { return false; }

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?CheckOnHand@ioAttackableItem@@UAE_NXZ ENDP		; ioAttackableItem::CheckOnHand
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?CheckAimState@ioAttackableItem@@UAE_N_N@Z
_TEXT	SEGMENT
_bAimMove$ = 8						; size = 1
?CheckAimState@ioAttackableItem@@UAE_N_N@Z PROC		; ioAttackableItem::CheckAimState, COMDAT
; _this$ = ecx

; 430  : 	virtual bool CheckAimState( bool bAimMove = false ) { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?CheckAimState@ioAttackableItem@@UAE_N_N@Z ENDP		; ioAttackableItem::CheckAimState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?SetAimState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pChar$ = 8						; size = 4
?SetAimState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z PROC ; ioAttackableItem::SetAimState, COMDAT
; _this$ = ecx

; 431  : 	virtual bool SetAimState( ioBaseChar *pChar ) { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?SetAimState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ENDP ; ioAttackableItem::SetAimState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?CheckExtendDefenseEnable@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pChar$ = 8						; size = 4
?CheckExtendDefenseEnable@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z PROC ; ioAttackableItem::CheckExtendDefenseEnable, COMDAT
; _this$ = ecx

; 434  : 	virtual bool CheckExtendDefenseEnable( ioBaseChar *pChar ) { return true; }

  00000	b0 01		 mov	 al, 1
  00002	c2 04 00	 ret	 4
?CheckExtendDefenseEnable@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ENDP ; ioAttackableItem::CheckExtendDefenseEnable
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsChargeAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?IsChargeAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z PROC ; ioAttackableItem::IsChargeAttackState, COMDAT
; _this$ = ecx

; 436  : 	virtual bool IsChargeAttackState( ioBaseChar *pOwner ) { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?IsChargeAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ENDP ; ioAttackableItem::IsChargeAttackState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsMoveAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?IsMoveAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z PROC ; ioAttackableItem::IsMoveAttackState, COMDAT
; _this$ = ecx

; 437  : 	virtual bool IsMoveAttackState( ioBaseChar *pOwner ) { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?IsMoveAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ENDP ; ioAttackableItem::IsMoveAttackState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsNoGhostWalk@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?IsNoGhostWalk@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z PROC ; ioAttackableItem::IsNoGhostWalk, COMDAT
; _this$ = ecx

; 439  : 	virtual bool IsNoGhostWalk( ioBaseChar *pOwner ) { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?IsNoGhostWalk@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ENDP ; ioAttackableItem::IsNoGhostWalk
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsEnableAttackDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_bCheck$ = 12						; size = 1
?IsEnableAttackDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z PROC ; ioAttackableItem::IsEnableAttackDashCheck, COMDAT
; _this$ = ecx

; 441  : 	virtual bool IsEnableAttackDashCheck( ioBaseChar *pOwner, bool bCheck ) { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 08 00	 ret	 8
?IsEnableAttackDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z ENDP ; ioAttackableItem::IsEnableAttackDashCheck
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsEnableItemDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_bCheck$ = 12						; size = 1
?IsEnableItemDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z PROC ; ioAttackableItem::IsEnableItemDashCheck, COMDAT
; _this$ = ecx

; 442  : 	virtual bool IsEnableItemDashCheck( ioBaseChar *pOwner, bool bCheck ) { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 08 00	 ret	 8
?IsEnableItemDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z ENDP ; ioAttackableItem::IsEnableItemDashCheck
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsEnableAttackRotateCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?IsEnableAttackRotateCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z PROC ; ioAttackableItem::IsEnableAttackRotateCheck, COMDAT
; _this$ = ecx

; 443  : 	virtual bool IsEnableAttackRotateCheck( ioBaseChar *pOwner ) { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?IsEnableAttackRotateCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ENDP ; ioAttackableItem::IsEnableAttackRotateCheck
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsEnableChargeDefenseCheck@ioAttackableItem@@UAE_NXZ
_TEXT	SEGMENT
?IsEnableChargeDefenseCheck@ioAttackableItem@@UAE_NXZ PROC ; ioAttackableItem::IsEnableChargeDefenseCheck, COMDAT
; _this$ = ecx

; 444  : 	virtual bool IsEnableChargeDefenseCheck() { return false; }

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?IsEnableChargeDefenseCheck@ioAttackableItem@@UAE_NXZ ENDP ; ioAttackableItem::IsEnableChargeDefenseCheck
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsUseDefenceCounterAttackEndDash@ioAttackableItem@@UAE_NXZ
_TEXT	SEGMENT
?IsUseDefenceCounterAttackEndDash@ioAttackableItem@@UAE_NXZ PROC ; ioAttackableItem::IsUseDefenceCounterAttackEndDash, COMDAT
; _this$ = ecx

; 464  : 	virtual bool IsUseDefenceCounterAttackEndDash() { return false; }

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?IsUseDefenceCounterAttackEndDash@ioAttackableItem@@UAE_NXZ ENDP ; ioAttackableItem::IsUseDefenceCounterAttackEndDash
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsAutoTarget@ioAttackableItem@@UBE_NXZ
_TEXT	SEGMENT
?IsAutoTarget@ioAttackableItem@@UBE_NXZ PROC		; ioAttackableItem::IsAutoTarget, COMDAT
; _this$ = ecx

; 707  : 	virtual bool IsAutoTarget() const { return true; }

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsAutoTarget@ioAttackableItem@@UBE_NXZ ENDP		; ioAttackableItem::IsAutoTarget
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsWoundAfterUseExtendState@ioAttackableItem@@UAE_NXZ
_TEXT	SEGMENT
?IsWoundAfterUseExtendState@ioAttackableItem@@UAE_NXZ PROC ; ioAttackableItem::IsWoundAfterUseExtendState, COMDAT
; _this$ = ecx

; 724  : 	virtual bool IsWoundAfterUseExtendState(){ return false; }

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?IsWoundAfterUseExtendState@ioAttackableItem@@UAE_NXZ ENDP ; ioAttackableItem::IsWoundAfterUseExtendState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?CheckWoundAfterUseExtendState@ioAttackableItem@@UAE_NPAVioBaseChar@@W4BlowTargetType@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_eType$ = 12						; size = 4
?CheckWoundAfterUseExtendState@ioAttackableItem@@UAE_NPAVioBaseChar@@W4BlowTargetType@@@Z PROC ; ioAttackableItem::CheckWoundAfterUseExtendState, COMDAT
; _this$ = ecx

; 725  : 	virtual bool CheckWoundAfterUseExtendState( ioBaseChar* pOwner, BlowTargetType eType ){ return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 08 00	 ret	 8
?CheckWoundAfterUseExtendState@ioAttackableItem@@UAE_NPAVioBaseChar@@W4BlowTargetType@@@Z ENDP ; ioAttackableItem::CheckWoundAfterUseExtendState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsCharSkipState@ioAttackableItem@@UAE_NPBVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?IsCharSkipState@ioAttackableItem@@UAE_NPBVioBaseChar@@@Z PROC ; ioAttackableItem::IsCharSkipState, COMDAT
; _this$ = ecx

; 728  : 	virtual bool IsCharSkipState( const ioBaseChar* pOwner ){ return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?IsCharSkipState@ioAttackableItem@@UAE_NPBVioBaseChar@@@Z ENDP ; ioAttackableItem::IsCharSkipState
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioobjectitem.h
_TEXT	ENDS
;	COMDAT ?OnProcessState@ioObjectItem@@UAEXPAVioPlayStage@@PAVioBaseChar@@@Z
_TEXT	SEGMENT
_pStage$ = 8						; size = 4
_pOwner$ = 12						; size = 4
?OnProcessState@ioObjectItem@@UAEXPAVioPlayStage@@PAVioBaseChar@@@Z PROC ; ioObjectItem::OnProcessState, COMDAT
; _this$ = ecx

; 156  : 	virtual void OnProcessState( ioPlayStage *pStage, ioBaseChar *pOwner ){};

  00000	c2 08 00	 ret	 8
?OnProcessState@ioObjectItem@@UAEXPAVioPlayStage@@PAVioBaseChar@@@Z ENDP ; ioObjectItem::OnProcessState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?SetObjectReleaseTCPSend@ioObjectItem@@UAEX_N@Z
_TEXT	SEGMENT
_bSend$ = 8						; size = 1
?SetObjectReleaseTCPSend@ioObjectItem@@UAEX_N@Z PROC	; ioObjectItem::SetObjectReleaseTCPSend, COMDAT
; _this$ = ecx

; 163  : 	virtual void SetObjectReleaseTCPSend( bool bSend ){ m_bObjectReleaseTCPSend = bSend; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8a 45 08	 mov	 al, BYTE PTR _bSend$[ebp]
  00006	88 81 8c 19 00
	00		 mov	 BYTE PTR [ecx+6540], al
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetObjectReleaseTCPSend@ioObjectItem@@UAEX_N@Z ENDP	; ioObjectItem::SetObjectReleaseTCPSend
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsObjectReleaseTCPSend@ioObjectItem@@UAE_NXZ
_TEXT	SEGMENT
?IsObjectReleaseTCPSend@ioObjectItem@@UAE_NXZ PROC	; ioObjectItem::IsObjectReleaseTCPSend, COMDAT
; _this$ = ecx

; 164  : 	virtual bool IsObjectReleaseTCPSend(){ return m_bObjectReleaseTCPSend; }

  00000	8a 81 8c 19 00
	00		 mov	 al, BYTE PTR [ecx+6540]
  00006	c3		 ret	 0
?IsObjectReleaseTCPSend@ioObjectItem@@UAE_NXZ ENDP	; ioObjectItem::IsObjectReleaseTCPSend
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsNormalAttackStop@ioObjectItem@@UAE_NXZ
_TEXT	SEGMENT
?IsNormalAttackStop@ioObjectItem@@UAE_NXZ PROC		; ioObjectItem::IsNormalAttackStop, COMDAT
; _this$ = ecx

; 167  : 	virtual bool IsNormalAttackStop(){ return false; }	

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?IsNormalAttackStop@ioObjectItem@@UAE_NXZ ENDP		; ioObjectItem::IsNormalAttackStop
_TEXT	ENDS
PUBLIC	?size@?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@QBEIXZ ; std::vector<BuffInfoStruct,std::allocator<BuffInfoStruct> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@QBEIXZ PROC ; std::vector<BuffInfoStruct,std::allocator<BuffInfoStruct> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 14		 push	 20			; 00000014H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 880  : 		}

  0000b	c3		 ret	 0
?size@?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@QBEIXZ ENDP ; std::vector<BuffInfoStruct,std::allocator<BuffInfoStruct> >::size
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GioDrinkItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioDrinkItem@@UAEPAXI@Z PROC				; ioDrinkItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioDrinkItem@@UAE@XZ	; ioDrinkItem::~ioDrinkItem
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioDrinkItem@@UAEPAXI@Z ENDP				; ioDrinkItem::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__real@41f0000000000000
PUBLIC	_pChar$GSCopy$
PUBLIC	?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z ; ioDrinkItem::SetDrinkState
EXTRN	??1IORandom@@UAE@XZ:PROC			; IORandom::~IORandom
EXTRN	?AddNewBuffWithAnimateTime@ioBaseChar@@QAEPAVioBuff@@ABVioHashString@@00PAVioSkill@@K_N@Z:PROC ; ioBaseChar::AddNewBuffWithAnimateTime
EXTRN	__imp_??0ioHashString@@QAE@PBD@Z:PROC
EXTRN	?Random@IORandom@@QAEII@Z:PROC			; IORandom::Random
EXTRN	?SetRandomSeed@IORandom@@QAEXI@Z:PROC		; IORandom::SetRandomSeed
EXTRN	??0IORandom@@QAE@XZ:PROC			; IORandom::IORandom
EXTRN	__imp_?GetAnimationFullTime@ioEntityGroup@@QAEMH@Z:PROC
EXTRN	__imp_?SetActionAni@ioEntityGroup@@QAE_NABVioHashString@@MMMMMM_N1@Z:PROC
EXTRN	__imp_?ClearAllLoopAni@ioEntityGroup@@QAEXM_N@Z:PROC
EXTRN	__imp_?ClearAllActionAni@ioEntityGroup@@QAEXM_N@Z:PROC
EXTRN	?SetState@ioBaseChar@@QAEXH_N@Z:PROC		; ioBaseChar::SetState
EXTRN	__imp_?GetAnimationIdx@ioEntityGroup@@QAEHABVioHashString@@@Z:PROC
EXTRN	__EH_epilog3_GS:PROC
EXTRN	__EH_prolog3_GS:PROC
EXTRN	__ftol2:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT __real@41f0000000000000
CONST	SEGMENT
__real@41f0000000000000 DQ 041f0000000000000r	; 4.29497e+009
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z$4
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iodrinkitem.cpp
xdata$x	ENDS
;	COMDAT ?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z
_TEXT	SEGMENT
$T543082 = -2572					; size = 16
$T543079 = -2572					; size = 16
$T543081 = -2556					; size = 16
$T543080 = -2556					; size = 16
_pChar$GSCopy$ = -2540					; size = 4
tv441 = -2536						; size = 4
$T543114 = -2536					; size = 4
tv391 = -2532						; size = 4
tv387 = -2532						; size = 4
_iRand$541349 = -2532					; size = 4
_iAniID$ = -2532					; size = 4
tv434 = -2528						; size = 4
tv429 = -2528						; size = 4
tv421 = -2528						; size = 4
tv418 = -2528						; size = 4
tv416 = -2528						; size = 4
tv413 = -2528						; size = 4
tv411 = -2528						; size = 4
tv304 = -2528						; size = 4
_random$541347 = -2524					; size = 2508
__$EHRec$ = -12						; size = 12
_pChar$ = 8						; size = 4
?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z PROC	; ioDrinkItem::SetDrinkState, COMDAT
; _this$ = ecx

; 56   : {

  00000	68 00 0a 00 00	 push	 2560			; 00000a00H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000f	8b 45 08	 mov	 eax, DWORD PTR _pChar$[ebp]

; 57   : 	ioEntityGroup *pGrp = pChar->GetGroup();

  00012	8b 58 04	 mov	 ebx, DWORD PTR [eax+4]
  00015	8b f1		 mov	 esi, ecx

; 93   : 		{
; 94   : 			pChar->AddNewBuffWithAnimateTime( m_OwnerBuffList[i].m_BuffName, "", "", NULL,
; 95   : 											  m_dwDrinkEndTime - m_dwDrinkStartTime );

  00017	89 85 14 f6 ff
	ff		 mov	 DWORD PTR _pChar$GSCopy$[ebp], eax
  0001d	8d 86 34 1b 00
	00		 lea	 eax, DWORD PTR [esi+6964]
  00023	50		 push	 eax
  00024	8b cb		 mov	 ecx, ebx
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetAnimationIdx@ioEntityGroup@@QAEHABVioHashString@@@Z
  0002c	89 85 1c f6 ff
	ff		 mov	 DWORD PTR _iAniID$[ebp], eax
  00032	83 f8 ff	 cmp	 eax, -1
  00035	0f 84 38 03 00
	00		 je	 $LN1@SetDrinkSt

; 58   : 	int iAniID = pGrp->GetAnimationIdx( m_DrinkAnimation );
; 59   : 	if( iAniID == -1 ) return;
; 60   : 
; 61   : 	if( m_OwnerBuffList.empty() )

  0003b	8b 86 58 19 00
	00		 mov	 eax, DWORD PTR [esi+6488]
  00041	3b 86 5c 19 00
	00		 cmp	 eax, DWORD PTR [esi+6492]
  00047	0f 84 26 03 00
	00		 je	 $LN1@SetDrinkSt

; 62   : 		return;
; 63   : 
; 64   : 	pChar->SetState( CS_DRINK );

  0004d	8b 8d 14 f6 ff
	ff		 mov	 ecx, DWORD PTR _pChar$GSCopy$[ebp]
  00053	33 ff		 xor	 edi, edi
  00055	47		 inc	 edi
  00056	57		 push	 edi
  00057	6a 19		 push	 25			; 00000019H
  00059	e8 00 00 00 00	 call	 ?SetState@ioBaseChar@@QAEXH_N@Z ; ioBaseChar::SetState

; 65   : 
; 66   : 	pGrp->ClearAllActionAni( FLOAT100, true );

  0005e	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  00063	89 85 20 f6 ff
	ff		 mov	 DWORD PTR tv434[ebp], eax
  00069	db 85 20 f6 ff
	ff		 fild	 DWORD PTR tv434[ebp]
  0006f	57		 push	 edi
  00070	85 c0		 test	 eax, eax
  00072	79 06		 jns	 SHORT $LN43@SetDrinkSt
  00074	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN43@SetDrinkSt:
  0007a	51		 push	 ecx
  0007b	8b cb		 mov	 ecx, ebx
  0007d	d9 1c 24	 fstp	 DWORD PTR [esp]
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ClearAllActionAni@ioEntityGroup@@QAEXM_N@Z

; 67   : 	pGrp->ClearAllLoopAni( FLOAT100, true );

  00086	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  0008b	89 85 20 f6 ff
	ff		 mov	 DWORD PTR tv429[ebp], eax
  00091	db 85 20 f6 ff
	ff		 fild	 DWORD PTR tv429[ebp]
  00097	57		 push	 edi
  00098	85 c0		 test	 eax, eax
  0009a	79 06		 jns	 SHORT $LN44@SetDrinkSt
  0009c	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN44@SetDrinkSt:
  000a2	51		 push	 ecx
  000a3	8b cb		 mov	 ecx, ebx
  000a5	d9 1c 24	 fstp	 DWORD PTR [esp]
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ClearAllLoopAni@ioEntityGroup@@QAEXM_N@Z

; 68   : 	pGrp->SetActionAni( m_DrinkAnimation, FLOAT100, FLOAT100, FLOAT1, FLOAT1/m_fDrinkAnimationRate );

  000ae	b8 01 00 00 00	 mov	 eax, 1
  000b3	8b c8		 mov	 ecx, eax
  000b5	b8 01 00 00 00	 mov	 eax, 1
  000ba	8b d0		 mov	 edx, eax
  000bc	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  000c1	89 85 18 f6 ff
	ff		 mov	 DWORD PTR $T543114[ebp], eax
  000c7	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  000cc	0f 57 c0	 xorps	 xmm0, xmm0
  000cf	57		 push	 edi
  000d0	6a 00		 push	 0
  000d2	83 ec 18	 sub	 esp, 24			; 00000018H
  000d5	89 8d 20 f6 ff
	ff		 mov	 DWORD PTR tv421[ebp], ecx
  000db	db 85 20 f6 ff
	ff		 fild	 DWORD PTR tv421[ebp]
  000e1	f3 0f 11 44 24
	14		 movss	 DWORD PTR [esp+20], xmm0
  000e7	f3 0f 11 44 24
	10		 movss	 DWORD PTR [esp+16], xmm0
  000ed	85 c9		 test	 ecx, ecx
  000ef	79 06		 jns	 SHORT $LN45@SetDrinkSt
  000f1	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN45@SetDrinkSt:
  000f7	d8 b6 44 1b 00
	00		 fdiv	 DWORD PTR [esi+6980]
  000fd	d9 9d 20 f6 ff
	ff		 fstp	 DWORD PTR tv418[ebp]
  00103	d9 85 20 f6 ff
	ff		 fld	 DWORD PTR tv418[ebp]
  00109	d9 5c 24 0c	 fstp	 DWORD PTR [esp+12]
  0010d	89 95 20 f6 ff
	ff		 mov	 DWORD PTR tv416[ebp], edx
  00113	db 85 20 f6 ff
	ff		 fild	 DWORD PTR tv416[ebp]
  00119	85 d2		 test	 edx, edx
  0011b	79 06		 jns	 SHORT $LN46@SetDrinkSt
  0011d	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN46@SetDrinkSt:
  00123	8b 8d 18 f6 ff
	ff		 mov	 ecx, DWORD PTR $T543114[ebp]
  00129	d9 5c 24 08	 fstp	 DWORD PTR [esp+8]
  0012d	db 85 18 f6 ff
	ff		 fild	 DWORD PTR $T543114[ebp]
  00133	85 c9		 test	 ecx, ecx
  00135	79 06		 jns	 SHORT $LN47@SetDrinkSt
  00137	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN47@SetDrinkSt:
  0013d	89 85 20 f6 ff
	ff		 mov	 DWORD PTR tv411[ebp], eax
  00143	d9 5c 24 04	 fstp	 DWORD PTR [esp+4]
  00147	db 85 20 f6 ff
	ff		 fild	 DWORD PTR tv411[ebp]
  0014d	85 c0		 test	 eax, eax
  0014f	79 06		 jns	 SHORT $LN48@SetDrinkSt
  00151	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN48@SetDrinkSt:
  00157	8d 86 34 1b 00
	00		 lea	 eax, DWORD PTR [esi+6964]
  0015d	d9 1c 24	 fstp	 DWORD PTR [esp]
  00160	50		 push	 eax
  00161	8b cb		 mov	 ecx, ebx
  00163	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetActionAni@ioEntityGroup@@QAE_NABVioHashString@@MMMMMM_N1@Z

; 69   : 
; 70   : 	m_dwDrinkStartTime = m_dwDrinkEndTime = FRAMEGETTIME();

  00169	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  0016f	8b c8		 mov	 ecx, eax
  00171	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ

; 71   : 	m_dwDrinkEndTime += pGrp->GetAnimationFullTime( iAniID ) * m_fDrinkAnimationRate + m_dwDrinkAnimationDelay;

  00177	ff b5 1c f6 ff
	ff		 push	 DWORD PTR _iAniID$[ebp]
  0017d	8b cb		 mov	 ecx, ebx
  0017f	89 86 50 1b 00
	00		 mov	 DWORD PTR [esi+6992], eax
  00185	89 86 4c 1b 00
	00		 mov	 DWORD PTR [esi+6988], eax
  0018b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetAnimationFullTime@ioEntityGroup@@QAEMH@Z
  00191	d8 8e 44 1b 00
	00		 fmul	 DWORD PTR [esi+6980]
  00197	8b 86 48 1b 00
	00		 mov	 eax, DWORD PTR [esi+6984]
  0019d	db 86 48 1b 00
	00		 fild	 DWORD PTR [esi+6984]
  001a3	85 c0		 test	 eax, eax
  001a5	79 06		 jns	 SHORT $LN49@SetDrinkSt
  001a7	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN49@SetDrinkSt:
  001ad	8b 86 50 1b 00
	00		 mov	 eax, DWORD PTR [esi+6992]
  001b3	de c1		 faddp	 ST(1), ST(0)
  001b5	db 86 50 1b 00
	00		 fild	 DWORD PTR [esi+6992]
  001bb	85 c0		 test	 eax, eax
  001bd	79 06		 jns	 SHORT $LN50@SetDrinkSt
  001bf	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@41f0000000000000
$LN50@SetDrinkSt:
  001c5	de c1		 faddp	 ST(1), ST(0)
  001c7	e8 00 00 00 00	 call	 __ftol2
  001cc	89 86 50 1b 00
	00		 mov	 DWORD PTR [esi+6992], eax

; 72   : 
; 73   : 	int iCnt = m_OwnerBuffList.size();

  001d2	8b 86 5c 19 00
	00		 mov	 eax, DWORD PTR [esi+6492]
  001d8	2b 86 58 19 00
	00		 sub	 eax, DWORD PTR [esi+6488]
  001de	6a 14		 push	 20			; 00000014H
  001e0	99		 cdq
  001e1	59		 pop	 ecx
  001e2	f7 f9		 idiv	 ecx

; 74   : 
; 75   : 	if( m_bRandom )

  001e4	80 be 54 1b 00
	00 00		 cmp	 BYTE PTR [esi+6996], 0
  001eb	8b d8		 mov	 ebx, eax
  001ed	0f 84 d7 00 00
	00		 je	 $LN6@SetDrinkSt

; 76   : 	{
; 77   : 		IORandom random;

  001f3	8d 8d 24 f6 ff
	ff		 lea	 ecx, DWORD PTR _random$541347[ebp]
  001f9	e8 00 00 00 00	 call	 ??0IORandom@@QAE@XZ	; IORandom::IORandom

; 78   : 		DWORD dwSeed = 0;
; 79   : 		int iRand = 0;
; 80   : 		dwSeed = pChar->GetRandomSeed();
; 81   : 		random.SetRandomSeed( dwSeed );

  001fe	8b 85 14 f6 ff
	ff		 mov	 eax, DWORD PTR _pChar$GSCopy$[ebp]
  00204	ff b0 74 16 00
	00		 push	 DWORD PTR [eax+5748]
  0020a	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0020e	8d 8d 24 f6 ff
	ff		 lea	 ecx, DWORD PTR _random$541347[ebp]
  00214	e8 00 00 00 00	 call	 ?SetRandomSeed@IORandom@@QAEXI@Z ; IORandom::SetRandomSeed

; 82   : 
; 83   : 		iRand = random.Random( iCnt );

  00219	53		 push	 ebx
  0021a	8d 8d 24 f6 ff
	ff		 lea	 ecx, DWORD PTR _random$541347[ebp]
  00220	e8 00 00 00 00	 call	 ?Random@IORandom@@QAEII@Z ; IORandom::Random
  00225	89 85 1c f6 ff
	ff		 mov	 DWORD PTR _iRand$541349[ebp], eax

; 84   : 		if( COMPARE( iRand, 0, iCnt ) )

  0022b	85 c0		 test	 eax, eax
  0022d	0f 88 83 00 00
	00		 js	 $LN5@SetDrinkSt
  00233	3b c3		 cmp	 eax, ebx
  00235	7d 7f		 jge	 SHORT $LN5@SetDrinkSt

; 85   : 		{
; 86   : 			pChar->AddNewBuffWithAnimateTime( m_OwnerBuffList[iRand].m_BuffName, "", "", NULL,
; 87   : 											  m_dwDrinkEndTime - m_dwDrinkStartTime );

  00237	bb 00 00 00 00	 mov	 ebx, OFFSET ??_C@_00CNPNBAHC@?$AA@
  0023c	53		 push	 ebx
  0023d	8d 8d f4 f5 ff
	ff		 lea	 ecx, DWORD PTR $T543079[ebp]
  00243	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00249	53		 push	 ebx
  0024a	8d 8d 04 f6 ff
	ff		 lea	 ecx, DWORD PTR $T543080[ebp]
  00250	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00254	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  0025a	8b 86 50 1b 00
	00		 mov	 eax, DWORD PTR [esi+6992]
  00260	2b 86 4c 1b 00
	00		 sub	 eax, DWORD PTR [esi+6988]
  00266	8b 8d 14 f6 ff
	ff		 mov	 ecx, DWORD PTR _pChar$GSCopy$[ebp]
  0026c	6a 00		 push	 0
  0026e	50		 push	 eax
  0026f	6a 00		 push	 0
  00271	8d 85 f4 f5 ff
	ff		 lea	 eax, DWORD PTR $T543079[ebp]
  00277	50		 push	 eax
  00278	8d 85 04 f6 ff
	ff		 lea	 eax, DWORD PTR $T543080[ebp]
  0027e	50		 push	 eax
  0027f	8b 85 1c f6 ff
	ff		 mov	 eax, DWORD PTR _iRand$541349[ebp]
  00285	6b c0 14	 imul	 eax, 20			; 00000014H
  00288	03 86 58 19 00
	00		 add	 eax, DWORD PTR [esi+6488]
  0028e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00292	50		 push	 eax
  00293	e8 00 00 00 00	 call	 ?AddNewBuffWithAnimateTime@ioBaseChar@@QAEPAVioBuff@@ABVioHashString@@00PAVioSkill@@K_N@Z ; ioBaseChar::AddNewBuffWithAnimateTime
  00298	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_??1ioHashString@@QAE@XZ
  0029e	8d 8d 04 f6 ff
	ff		 lea	 ecx, DWORD PTR $T543080[ebp]
  002a4	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  002a8	ff d6		 call	 esi
  002aa	8d 8d f4 f5 ff
	ff		 lea	 ecx, DWORD PTR $T543079[ebp]
  002b0	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  002b4	ff d6		 call	 esi
$LN5@SetDrinkSt:

; 88   : 		}
; 89   : 	}

  002b6	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  002ba	8d 8d 24 f6 ff
	ff		 lea	 ecx, DWORD PTR _random$541347[ebp]
  002c0	e8 00 00 00 00	 call	 ??1IORandom@@UAE@XZ	; IORandom::~IORandom

; 90   : 	else

  002c5	e9 a9 00 00 00	 jmp	 $LN1@SetDrinkSt
$LN6@SetDrinkSt:

; 91   : 	{
; 92   : 		for( int i=0; i < iCnt; ++i )

  002ca	85 db		 test	 ebx, ebx
  002cc	0f 8e a1 00 00
	00		 jle	 $LN1@SetDrinkSt
  002d2	83 a5 18 f6 ff
	ff 00		 and	 DWORD PTR tv441[ebp], 0
  002d9	89 9d 20 f6 ff
	ff		 mov	 DWORD PTR tv304[ebp], ebx
  002df	bb 00 00 00 00	 mov	 ebx, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LL3@SetDrinkSt:

; 93   : 		{
; 94   : 			pChar->AddNewBuffWithAnimateTime( m_OwnerBuffList[i].m_BuffName, "", "", NULL,
; 95   : 											  m_dwDrinkEndTime - m_dwDrinkStartTime );

  002e4	53		 push	 ebx
  002e5	8d 8d 04 f6 ff
	ff		 lea	 ecx, DWORD PTR $T543081[ebp]
  002eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  002f1	53		 push	 ebx
  002f2	8d 8d f4 f5 ff
	ff		 lea	 ecx, DWORD PTR $T543082[ebp]
  002f8	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  002ff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00305	8b 86 50 1b 00
	00		 mov	 eax, DWORD PTR [esi+6992]
  0030b	2b 86 4c 1b 00
	00		 sub	 eax, DWORD PTR [esi+6988]
  00311	8b 8d 14 f6 ff
	ff		 mov	 ecx, DWORD PTR _pChar$GSCopy$[ebp]
  00317	6a 00		 push	 0
  00319	50		 push	 eax
  0031a	6a 00		 push	 0
  0031c	8d 85 04 f6 ff
	ff		 lea	 eax, DWORD PTR $T543081[ebp]
  00322	50		 push	 eax
  00323	8d 85 f4 f5 ff
	ff		 lea	 eax, DWORD PTR $T543082[ebp]
  00329	50		 push	 eax
  0032a	8b 86 58 19 00
	00		 mov	 eax, DWORD PTR [esi+6488]
  00330	03 85 18 f6 ff
	ff		 add	 eax, DWORD PTR tv441[ebp]
  00336	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0033a	50		 push	 eax
  0033b	e8 00 00 00 00	 call	 ?AddNewBuffWithAnimateTime@ioBaseChar@@QAEPAVioBuff@@ABVioHashString@@00PAVioSkill@@K_N@Z ; ioBaseChar::AddNewBuffWithAnimateTime
  00340	8d 8d f4 f5 ff
	ff		 lea	 ecx, DWORD PTR $T543082[ebp]
  00346	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0034a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00350	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00354	8d 8d 04 f6 ff
	ff		 lea	 ecx, DWORD PTR $T543081[ebp]
  0035a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00360	83 85 18 f6 ff
	ff 14		 add	 DWORD PTR tv441[ebp], 20 ; 00000014H
  00367	ff 8d 20 f6 ff
	ff		 dec	 DWORD PTR tv304[ebp]
  0036d	0f 85 71 ff ff
	ff		 jne	 $LL3@SetDrinkSt
$LN1@SetDrinkSt:

; 96   : 		}
; 97   : 	}
; 98   : }

  00373	e8 00 00 00 00	 call	 __EH_epilog3_GS
  00378	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z$0:
  00000	8d 8d 24 f6 ff
	ff		 lea	 ecx, DWORD PTR _random$541347[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1IORandom@@UAE@XZ	; IORandom::~IORandom
__unwindfunclet$?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z$1:
  0000b	8d 8d f4 f5 ff
	ff		 lea	 ecx, DWORD PTR $T543079[ebp]
  00011	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z$2:
  00017	8d 8d 04 f6 ff
	ff		 lea	 ecx, DWORD PTR $T543080[ebp]
  0001d	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z$3:
  00023	8d 8d 04 f6 ff
	ff		 lea	 ecx, DWORD PTR $T543081[ebp]
  00029	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z$4:
  0002f	8d 8d f4 f5 ff
	ff		 lea	 ecx, DWORD PTR $T543082[ebp]
  00035	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z:
  0003b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00042	8b 8a f0 f5 ff
	ff		 mov	 ecx, DWORD PTR [edx-2576]
  00048	33 c8		 xor	 ecx, eax
  0004a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00052	33 c8		 xor	 ecx, eax
  00054	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00059	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z
  0005e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetDrinkState@ioDrinkItem@@QAEXPAVioBaseChar@@@Z ENDP	; ioDrinkItem::SetDrinkState
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadString_e@$0BA@@ioINILoader@@QAEXAAY0BA@$$CBDAAY00$$CBDPADH@Z ; ioINILoader::LoadString_e<16>
EXTRN	__imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$LoadString_e@$0BA@@ioINILoader@@QAEXAAY0BA@$$CBDAAY00$$CBDPADH@Z
_TEXT	SEGMENT
_this$GSCopy$ = -28					; size = 4
__k$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_d$ = 12						; size = 4
_b$ = 16						; size = 4
_i$ = 20						; size = 4
??$LoadString_e@$0BA@@ioINILoader@@QAEXAAY0BA@$$CBDAAY00$$CBDPADH@Z PROC ; ioINILoader::LoadString_e<16>, COMDAT
; _this$ = ecx

; 161  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 162  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b 75 0c	 mov	 esi, DWORD PTR _d$[ebp]
  00019	57		 push	 edi
  0001a	8b 7d 10	 mov	 edi, DWORD PTR _b$[ebp]
  0001d	89 4d e4	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  00020	84 d2		 test	 dl, dl
  00022	0f 84 8c 01 00
	00		 je	 $LN96@LoadString
  00028	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0002b	88 55 e8	 mov	 BYTE PTR __k$[ebp], dl
  0002e	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00031	84 d2		 test	 dl, dl
  00033	0f 84 75 01 00
	00		 je	 $LN95@LoadString
  00039	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0003c	88 55 e9	 mov	 BYTE PTR __k$[ebp+1], dl
  0003f	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  00042	84 d2		 test	 dl, dl
  00044	0f 84 5e 01 00
	00		 je	 $LN94@LoadString
  0004a	b1 eb		 mov	 cl, -21			; ffffffebH
  0004c	32 d1		 xor	 dl, cl
  0004e	88 55 ea	 mov	 BYTE PTR __k$[ebp+2], dl
  00051	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  00054	84 d2		 test	 dl, dl
  00056	0f 84 46 01 00
	00		 je	 $LN93@LoadString
  0005c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0005f	88 55 eb	 mov	 BYTE PTR __k$[ebp+3], dl
  00062	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00065	84 d2		 test	 dl, dl
  00067	0f 84 2f 01 00
	00		 je	 $LN92@LoadString
  0006d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00070	88 55 ec	 mov	 BYTE PTR __k$[ebp+4], dl
  00073	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00076	84 d2		 test	 dl, dl
  00078	0f 84 18 01 00
	00		 je	 $LN91@LoadString
  0007e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00081	88 55 ed	 mov	 BYTE PTR __k$[ebp+5], dl
  00084	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00087	84 d2		 test	 dl, dl
  00089	0f 84 02 01 00
	00		 je	 $LN90@LoadString
  0008f	32 d1		 xor	 dl, cl
  00091	88 55 ee	 mov	 BYTE PTR __k$[ebp+6], dl
  00094	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00097	84 d2		 test	 dl, dl
  00099	0f 84 ec 00 00
	00		 je	 $LN89@LoadString
  0009f	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000a2	88 55 ef	 mov	 BYTE PTR __k$[ebp+7], dl
  000a5	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a8	84 d2		 test	 dl, dl
  000aa	0f 84 d5 00 00
	00		 je	 $LN88@LoadString
  000b0	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000b3	88 55 f0	 mov	 BYTE PTR __k$[ebp+8], dl
  000b6	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b9	84 d2		 test	 dl, dl
  000bb	0f 84 be 00 00
	00		 je	 $LN87@LoadString
  000c1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000c4	88 55 f1	 mov	 BYTE PTR __k$[ebp+9], dl
  000c7	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000ca	84 d2		 test	 dl, dl
  000cc	0f 84 a8 00 00
	00		 je	 $LN86@LoadString
  000d2	32 d1		 xor	 dl, cl
  000d4	88 55 f2	 mov	 BYTE PTR __k$[ebp+10], dl
  000d7	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000da	84 d2		 test	 dl, dl
  000dc	0f 84 92 00 00
	00		 je	 $LN85@LoadString
  000e2	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000e5	88 55 f3	 mov	 BYTE PTR __k$[ebp+11], dl
  000e8	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000eb	84 d2		 test	 dl, dl
  000ed	74 7f		 je	 SHORT $LN84@LoadString
  000ef	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000f2	88 55 f4	 mov	 BYTE PTR __k$[ebp+12], dl
  000f5	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f8	84 d2		 test	 dl, dl
  000fa	74 6c		 je	 SHORT $LN83@LoadString
  000fc	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000ff	88 55 f5	 mov	 BYTE PTR __k$[ebp+13], dl
  00102	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  00105	84 d2		 test	 dl, dl
  00107	74 5a		 je	 SHORT $LN82@LoadString
  00109	32 d1		 xor	 dl, cl
  0010b	80 78 0f 00	 cmp	 BYTE PTR [eax+15], 0
  0010f	88 55 f6	 mov	 BYTE PTR __k$[ebp+14], dl
  00112	0f 84 a0 00 00
	00		 je	 $LN111@LoadString
  00118	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  0011b	84 d2		 test	 dl, dl
  0011d	74 3e		 je	 SHORT $LN80@LoadString
  0011f	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00122	88 55 f8	 mov	 BYTE PTR __k$[ebp+16], dl
  00125	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00128	84 d2		 test	 dl, dl
  0012a	74 2b		 je	 SHORT $LN79@LoadString
  0012c	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0012f	88 55 f9	 mov	 BYTE PTR __k$[ebp+17], dl
  00132	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  00135	84 d2		 test	 dl, dl
  00137	74 19		 je	 SHORT $LN78@LoadString
  00139	8a 40 13	 mov	 al, BYTE PTR [eax+19]
  0013c	32 d1		 xor	 dl, cl
  0013e	88 55 fa	 mov	 BYTE PTR __k$[ebp+18], dl
  00141	84 c0		 test	 al, al
  00143	74 07		 je	 SHORT $LN77@LoadString
  00145	34 ea		 xor	 al, -22			; ffffffeaH
  00147	88 45 fb	 mov	 BYTE PTR __k$[ebp+19], al
  0014a	eb 6c		 jmp	 SHORT $LN111@LoadString
$LN77@LoadString:
  0014c	c6 45 fb ea	 mov	 BYTE PTR __k$[ebp+19], -22 ; ffffffeaH
  00150	eb 66		 jmp	 SHORT $LN111@LoadString
$LN78@LoadString:
  00152	88 4d fa	 mov	 BYTE PTR __k$[ebp+18], cl
  00155	eb 61		 jmp	 SHORT $LN111@LoadString
$LN79@LoadString:
  00157	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+17], -20 ; ffffffecH
  0015b	eb 5b		 jmp	 SHORT $LN111@LoadString
$LN80@LoadString:
  0015d	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  00161	eb 55		 jmp	 SHORT $LN111@LoadString
$LN82@LoadString:
  00163	88 4d f6	 mov	 BYTE PTR __k$[ebp+14], cl
  00166	eb 50		 jmp	 SHORT $LN111@LoadString
$LN83@LoadString:
  00168	c6 45 f5 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  0016c	eb 4a		 jmp	 SHORT $LN111@LoadString
$LN84@LoadString:
  0016e	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00172	eb 44		 jmp	 SHORT $LN111@LoadString
$LN85@LoadString:
  00174	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00178	eb 3e		 jmp	 SHORT $LN111@LoadString
$LN86@LoadString:
  0017a	88 4d f2	 mov	 BYTE PTR __k$[ebp+10], cl
  0017d	eb 39		 jmp	 SHORT $LN111@LoadString
$LN87@LoadString:
  0017f	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  00183	eb 33		 jmp	 SHORT $LN111@LoadString
$LN88@LoadString:
  00185	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00189	eb 2d		 jmp	 SHORT $LN111@LoadString
$LN89@LoadString:
  0018b	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  0018f	eb 27		 jmp	 SHORT $LN111@LoadString
$LN90@LoadString:
  00191	88 4d ee	 mov	 BYTE PTR __k$[ebp+6], cl
  00194	eb 22		 jmp	 SHORT $LN111@LoadString
$LN91@LoadString:
  00196	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  0019a	eb 1c		 jmp	 SHORT $LN111@LoadString
$LN92@LoadString:
  0019c	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  001a0	eb 16		 jmp	 SHORT $LN111@LoadString
$LN93@LoadString:
  001a2	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  001a6	eb 10		 jmp	 SHORT $LN111@LoadString
$LN94@LoadString:
  001a8	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  001ac	eb 0a		 jmp	 SHORT $LN111@LoadString
$LN95@LoadString:
  001ae	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  001b2	eb 04		 jmp	 SHORT $LN111@LoadString
$LN96@LoadString:
  001b4	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN111@LoadString:
  001b8	6a 03		 push	 3
  001ba	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001bd	c6 45 f7 00	 mov	 BYTE PTR __k$[ebp+15], 0
  001c1	5a		 pop	 edx
$LL104@LoadString:
  001c2	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001c8	83 c0 04	 add	 eax, 4
  001cb	4a		 dec	 edx
  001cc	75 f4		 jne	 SHORT $LL104@LoadString
  001ce	6a 0c		 push	 12			; 0000000cH
  001d0	58		 pop	 eax
$LL101@LoadString:
  001d1	8b c8		 mov	 ecx, eax
  001d3	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  001d9	79 05		 jns	 SHORT $LN112@LoadString
  001db	49		 dec	 ecx
  001dc	83 c9 fc	 or	 ecx, -4			; fffffffcH
  001df	41		 inc	 ecx
$LN112@LoadString:
  001e0	b2 ed		 mov	 dl, -19			; ffffffedH
  001e2	2a d1		 sub	 dl, cl
  001e4	30 54 05 e8	 xor	 BYTE PTR __k$[ebp+eax], dl
  001e8	40		 inc	 eax
  001e9	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  001ec	7c e3		 jl	 SHORT $LL101@LoadString

; 163  : 		LoadString(_k, d, b, i);

  001ee	ff 75 14	 push	 DWORD PTR _i$[ebp]
  001f1	8b 4d e4	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  001f4	57		 push	 edi
  001f5	56		 push	 esi
  001f6	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001f9	50		 push	 eax
  001fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z

; 164  : 	}

  00200	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00203	5f		 pop	 edi
  00204	33 cd		 xor	 ecx, ebp
  00206	5e		 pop	 esi
  00207	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0020c	c9		 leave
  0020d	c2 10 00	 ret	 16			; 00000010H
??$LoadString_e@$0BA@@ioINILoader@@QAEXAAY0BA@$$CBDAAY00$$CBDPADH@Z ENDP ; ioINILoader::LoadString_e<16>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadFloat_e@$0BF@@ioINILoader@@QAEMAAY0BF@$$CBDM@Z ; ioINILoader::LoadFloat_e<21>
EXTRN	__imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$LoadFloat_e@$0BF@@ioINILoader@@QAEMAAY0BF@$$CBDM@Z
_TEXT	SEGMENT
__k$ = -32						; size = 21
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_f$ = 12						; size = 4
??$LoadFloat_e@$0BF@@ioINILoader@@QAEMAAY0BF@$$CBDM@Z PROC ; ioINILoader::LoadFloat_e<21>, COMDAT
; _this$ = ecx

; 135  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 136  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	84 d2		 test	 dl, dl
  0001b	0f 84 f7 01 00
	00		 je	 $LN96@LoadFloat_
  00021	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00024	88 55 e0	 mov	 BYTE PTR __k$[ebp], dl
  00027	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0002a	84 d2		 test	 dl, dl
  0002c	0f 84 e0 01 00
	00		 je	 $LN95@LoadFloat_
  00032	b1 ec		 mov	 cl, -20			; ffffffecH
  00034	32 d1		 xor	 dl, cl
  00036	88 55 e1	 mov	 BYTE PTR __k$[ebp+1], dl
  00039	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003c	84 d2		 test	 dl, dl
  0003e	0f 84 c8 01 00
	00		 je	 $LN94@LoadFloat_
  00044	b3 eb		 mov	 bl, -21			; ffffffebH
  00046	32 d3		 xor	 dl, bl
  00048	88 55 e2	 mov	 BYTE PTR __k$[ebp+2], dl
  0004b	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004e	84 d2		 test	 dl, dl
  00050	0f 84 b0 01 00
	00		 je	 $LN93@LoadFloat_
  00056	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00059	88 55 e3	 mov	 BYTE PTR __k$[ebp+3], dl
  0005c	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005f	84 d2		 test	 dl, dl
  00061	0f 84 99 01 00
	00		 je	 $LN92@LoadFloat_
  00067	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0006a	88 55 e4	 mov	 BYTE PTR __k$[ebp+4], dl
  0006d	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00070	84 d2		 test	 dl, dl
  00072	0f 84 83 01 00
	00		 je	 $LN91@LoadFloat_
  00078	32 d1		 xor	 dl, cl
  0007a	88 55 e5	 mov	 BYTE PTR __k$[ebp+5], dl
  0007d	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00080	84 d2		 test	 dl, dl
  00082	0f 84 6e 01 00
	00		 je	 $LN90@LoadFloat_
  00088	32 d3		 xor	 dl, bl
  0008a	88 55 e6	 mov	 BYTE PTR __k$[ebp+6], dl
  0008d	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00090	84 d2		 test	 dl, dl
  00092	0f 84 58 01 00
	00		 je	 $LN89@LoadFloat_
  00098	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009b	88 55 e7	 mov	 BYTE PTR __k$[ebp+7], dl
  0009e	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a1	84 d2		 test	 dl, dl
  000a3	0f 84 41 01 00
	00		 je	 $LN88@LoadFloat_
  000a9	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ac	88 55 e8	 mov	 BYTE PTR __k$[ebp+8], dl
  000af	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b2	84 d2		 test	 dl, dl
  000b4	0f 84 2b 01 00
	00		 je	 $LN87@LoadFloat_
  000ba	32 d1		 xor	 dl, cl
  000bc	88 55 e9	 mov	 BYTE PTR __k$[ebp+9], dl
  000bf	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c2	84 d2		 test	 dl, dl
  000c4	0f 84 16 01 00
	00		 je	 $LN86@LoadFloat_
  000ca	32 d3		 xor	 dl, bl
  000cc	88 55 ea	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	0f 84 00 01 00
	00		 je	 $LN85@LoadFloat_
  000da	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000dd	88 55 eb	 mov	 BYTE PTR __k$[ebp+11], dl
  000e0	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e3	84 d2		 test	 dl, dl
  000e5	0f 84 e9 00 00
	00		 je	 $LN84@LoadFloat_
  000eb	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ee	88 55 ec	 mov	 BYTE PTR __k$[ebp+12], dl
  000f1	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f4	84 d2		 test	 dl, dl
  000f6	0f 84 d3 00 00
	00		 je	 $LN83@LoadFloat_
  000fc	32 d1		 xor	 dl, cl
  000fe	88 55 ed	 mov	 BYTE PTR __k$[ebp+13], dl
  00101	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  00104	84 d2		 test	 dl, dl
  00106	0f 84 be 00 00
	00		 je	 $LN82@LoadFloat_
  0010c	32 d3		 xor	 dl, bl
  0010e	88 55 ee	 mov	 BYTE PTR __k$[ebp+14], dl
  00111	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00114	84 d2		 test	 dl, dl
  00116	0f 84 a8 00 00
	00		 je	 $LN81@LoadFloat_
  0011c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0011f	88 55 ef	 mov	 BYTE PTR __k$[ebp+15], dl
  00122	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00125	84 d2		 test	 dl, dl
  00127	0f 84 91 00 00
	00		 je	 $LN80@LoadFloat_
  0012d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00130	88 55 f0	 mov	 BYTE PTR __k$[ebp+16], dl
  00133	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00136	84 d2		 test	 dl, dl
  00138	74 7f		 je	 SHORT $LN79@LoadFloat_
  0013a	32 d1		 xor	 dl, cl
  0013c	88 55 f1	 mov	 BYTE PTR __k$[ebp+17], dl
  0013f	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  00142	84 d2		 test	 dl, dl
  00144	74 6e		 je	 SHORT $LN78@LoadFloat_
  00146	32 d3		 xor	 dl, bl
  00148	88 55 f2	 mov	 BYTE PTR __k$[ebp+18], dl
  0014b	8a 50 13	 mov	 dl, BYTE PTR [eax+19]
  0014e	84 d2		 test	 dl, dl
  00150	74 5c		 je	 SHORT $LN77@LoadFloat_
  00152	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00155	80 78 14 00	 cmp	 BYTE PTR [eax+20], 0
  00159	88 55 f3	 mov	 BYTE PTR __k$[ebp+19], dl
  0015c	0f 84 ba 00 00
	00		 je	 $LN1@LoadFloat_
  00162	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00165	84 d2		 test	 dl, dl
  00167	74 40		 je	 SHORT $LN75@LoadFloat_
  00169	32 d1		 xor	 dl, cl
  0016b	88 55 f5	 mov	 BYTE PTR __k$[ebp+21], dl
  0016e	8a 50 16	 mov	 dl, BYTE PTR [eax+22]
  00171	84 d2		 test	 dl, dl
  00173	74 2f		 je	 SHORT $LN74@LoadFloat_
  00175	32 d3		 xor	 dl, bl
  00177	88 55 f6	 mov	 BYTE PTR __k$[ebp+22], dl
  0017a	8a 50 17	 mov	 dl, BYTE PTR [eax+23]
  0017d	84 d2		 test	 dl, dl
  0017f	74 1d		 je	 SHORT $LN73@LoadFloat_
  00181	8a 40 18	 mov	 al, BYTE PTR [eax+24]
  00184	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00187	88 55 f7	 mov	 BYTE PTR __k$[ebp+23], dl
  0018a	84 c0		 test	 al, al
  0018c	74 0a		 je	 SHORT $LN72@LoadFloat_
  0018e	34 ed		 xor	 al, -19			; ffffffedH
  00190	88 45 f8	 mov	 BYTE PTR __k$[ebp+24], al
  00193	e9 84 00 00 00	 jmp	 $LN1@LoadFloat_
$LN72@LoadFloat_:
  00198	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+24], -19 ; ffffffedH
  0019c	eb 7e		 jmp	 SHORT $LN1@LoadFloat_
$LN73@LoadFloat_:
  0019e	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+23], -22 ; ffffffeaH
  001a2	eb 78		 jmp	 SHORT $LN1@LoadFloat_
$LN74@LoadFloat_:
  001a4	88 5d f6	 mov	 BYTE PTR __k$[ebp+22], bl
  001a7	eb 73		 jmp	 SHORT $LN1@LoadFloat_
$LN75@LoadFloat_:
  001a9	88 4d f5	 mov	 BYTE PTR __k$[ebp+21], cl
  001ac	eb 6e		 jmp	 SHORT $LN1@LoadFloat_
$LN77@LoadFloat_:
  001ae	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+19], -22 ; ffffffeaH
  001b2	eb 68		 jmp	 SHORT $LN1@LoadFloat_
$LN78@LoadFloat_:
  001b4	88 5d f2	 mov	 BYTE PTR __k$[ebp+18], bl
  001b7	eb 63		 jmp	 SHORT $LN1@LoadFloat_
$LN79@LoadFloat_:
  001b9	88 4d f1	 mov	 BYTE PTR __k$[ebp+17], cl
  001bc	eb 5e		 jmp	 SHORT $LN1@LoadFloat_
$LN80@LoadFloat_:
  001be	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  001c2	eb 58		 jmp	 SHORT $LN1@LoadFloat_
$LN81@LoadFloat_:
  001c4	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  001c8	eb 52		 jmp	 SHORT $LN1@LoadFloat_
$LN82@LoadFloat_:
  001ca	88 5d ee	 mov	 BYTE PTR __k$[ebp+14], bl
  001cd	eb 4d		 jmp	 SHORT $LN1@LoadFloat_
$LN83@LoadFloat_:
  001cf	88 4d ed	 mov	 BYTE PTR __k$[ebp+13], cl
  001d2	eb 48		 jmp	 SHORT $LN1@LoadFloat_
$LN84@LoadFloat_:
  001d4	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  001d8	eb 42		 jmp	 SHORT $LN1@LoadFloat_
$LN85@LoadFloat_:
  001da	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  001de	eb 3c		 jmp	 SHORT $LN1@LoadFloat_
$LN86@LoadFloat_:
  001e0	88 5d ea	 mov	 BYTE PTR __k$[ebp+10], bl
  001e3	eb 37		 jmp	 SHORT $LN1@LoadFloat_
$LN87@LoadFloat_:
  001e5	88 4d e9	 mov	 BYTE PTR __k$[ebp+9], cl
  001e8	eb 32		 jmp	 SHORT $LN1@LoadFloat_
$LN88@LoadFloat_:
  001ea	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  001ee	eb 2c		 jmp	 SHORT $LN1@LoadFloat_
$LN89@LoadFloat_:
  001f0	c6 45 e7 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  001f4	eb 26		 jmp	 SHORT $LN1@LoadFloat_
$LN90@LoadFloat_:
  001f6	88 5d e6	 mov	 BYTE PTR __k$[ebp+6], bl
  001f9	eb 21		 jmp	 SHORT $LN1@LoadFloat_
$LN91@LoadFloat_:
  001fb	88 4d e5	 mov	 BYTE PTR __k$[ebp+5], cl
  001fe	eb 1c		 jmp	 SHORT $LN1@LoadFloat_
$LN92@LoadFloat_:
  00200	c6 45 e4 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00204	eb 16		 jmp	 SHORT $LN1@LoadFloat_
$LN93@LoadFloat_:
  00206	c6 45 e3 ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  0020a	eb 10		 jmp	 SHORT $LN1@LoadFloat_
$LN94@LoadFloat_:
  0020c	c6 45 e2 eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  00210	eb 0a		 jmp	 SHORT $LN1@LoadFloat_
$LN95@LoadFloat_:
  00212	c6 45 e1 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00216	eb 04		 jmp	 SHORT $LN1@LoadFloat_
$LN96@LoadFloat_:
  00218	c6 45 e0 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadFloat_:
  0021c	6a 05		 push	 5
  0021e	8d 45 e0	 lea	 eax, DWORD PTR __k$[ebp]
  00221	c6 45 f4 00	 mov	 BYTE PTR __k$[ebp+20], 0
  00225	5a		 pop	 edx
$LL104@LoadFloat_:
  00226	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0022c	83 c0 04	 add	 eax, 4
  0022f	4a		 dec	 edx
  00230	75 f4		 jne	 SHORT $LL104@LoadFloat_

; 137  : 		return LoadFloat(_k, f);

  00232	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _f$[ebp]
  00237	51		 push	 ecx
  00238	8d 45 e0	 lea	 eax, DWORD PTR __k$[ebp]
  0023b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00240	50		 push	 eax
  00241	8b ce		 mov	 ecx, esi
  00243	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z

; 138  : 	}

  00249	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0024c	5e		 pop	 esi
  0024d	33 cd		 xor	 ecx, ebp
  0024f	5b		 pop	 ebx
  00250	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00255	c9		 leave
  00256	c2 08 00	 ret	 8
??$LoadFloat_e@$0BF@@ioINILoader@@QAEMAAY0BF@$$CBDM@Z ENDP ; ioINILoader::LoadFloat_e<21>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$0BG@@ioINILoader@@QAEHAAY0BG@$$CBDH@Z ; ioINILoader::LoadInt_e<22>
EXTRN	__imp_?LoadInt@ioINILoader@@QAEHPBDH@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$0BG@@ioINILoader@@QAEHAAY0BG@$$CBDH@Z
_TEXT	SEGMENT
__k$ = -32						; size = 22
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$0BG@@ioINILoader@@QAEHAAY0BG@$$CBDH@Z PROC ; ioINILoader::LoadInt_e<22>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	84 d2		 test	 dl, dl
  0001b	0f 84 15 02 00
	00		 je	 $LN96@LoadInt_e
  00021	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00024	88 55 e0	 mov	 BYTE PTR __k$[ebp], dl
  00027	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0002a	84 d2		 test	 dl, dl
  0002c	0f 84 fe 01 00
	00		 je	 $LN95@LoadInt_e
  00032	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00035	88 55 e1	 mov	 BYTE PTR __k$[ebp+1], dl
  00038	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003b	84 d2		 test	 dl, dl
  0003d	0f 84 e7 01 00
	00		 je	 $LN94@LoadInt_e
  00043	b1 eb		 mov	 cl, -21			; ffffffebH
  00045	32 d1		 xor	 dl, cl
  00047	88 55 e2	 mov	 BYTE PTR __k$[ebp+2], dl
  0004a	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004d	84 d2		 test	 dl, dl
  0004f	0f 84 cf 01 00
	00		 je	 $LN93@LoadInt_e
  00055	b3 ea		 mov	 bl, -22			; ffffffeaH
  00057	32 d3		 xor	 dl, bl
  00059	88 55 e3	 mov	 BYTE PTR __k$[ebp+3], dl
  0005c	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005f	84 d2		 test	 dl, dl
  00061	0f 84 b7 01 00
	00		 je	 $LN92@LoadInt_e
  00067	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0006a	88 55 e4	 mov	 BYTE PTR __k$[ebp+4], dl
  0006d	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00070	84 d2		 test	 dl, dl
  00072	0f 84 a0 01 00
	00		 je	 $LN91@LoadInt_e
  00078	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0007b	88 55 e5	 mov	 BYTE PTR __k$[ebp+5], dl
  0007e	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00081	84 d2		 test	 dl, dl
  00083	0f 84 8a 01 00
	00		 je	 $LN90@LoadInt_e
  00089	32 d1		 xor	 dl, cl
  0008b	88 55 e6	 mov	 BYTE PTR __k$[ebp+6], dl
  0008e	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00091	84 d2		 test	 dl, dl
  00093	0f 84 75 01 00
	00		 je	 $LN89@LoadInt_e
  00099	32 d3		 xor	 dl, bl
  0009b	88 55 e7	 mov	 BYTE PTR __k$[ebp+7], dl
  0009e	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a1	84 d2		 test	 dl, dl
  000a3	0f 84 5f 01 00
	00		 je	 $LN88@LoadInt_e
  000a9	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ac	88 55 e8	 mov	 BYTE PTR __k$[ebp+8], dl
  000af	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b2	84 d2		 test	 dl, dl
  000b4	0f 84 48 01 00
	00		 je	 $LN87@LoadInt_e
  000ba	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000bd	88 55 e9	 mov	 BYTE PTR __k$[ebp+9], dl
  000c0	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c3	84 d2		 test	 dl, dl
  000c5	0f 84 32 01 00
	00		 je	 $LN86@LoadInt_e
  000cb	32 d1		 xor	 dl, cl
  000cd	88 55 ea	 mov	 BYTE PTR __k$[ebp+10], dl
  000d0	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d3	84 d2		 test	 dl, dl
  000d5	0f 84 1d 01 00
	00		 je	 $LN85@LoadInt_e
  000db	32 d3		 xor	 dl, bl
  000dd	88 55 eb	 mov	 BYTE PTR __k$[ebp+11], dl
  000e0	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e3	84 d2		 test	 dl, dl
  000e5	0f 84 07 01 00
	00		 je	 $LN84@LoadInt_e
  000eb	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ee	88 55 ec	 mov	 BYTE PTR __k$[ebp+12], dl
  000f1	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f4	84 d2		 test	 dl, dl
  000f6	0f 84 f0 00 00
	00		 je	 $LN83@LoadInt_e
  000fc	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000ff	88 55 ed	 mov	 BYTE PTR __k$[ebp+13], dl
  00102	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  00105	84 d2		 test	 dl, dl
  00107	0f 84 da 00 00
	00		 je	 $LN82@LoadInt_e
  0010d	32 d1		 xor	 dl, cl
  0010f	88 55 ee	 mov	 BYTE PTR __k$[ebp+14], dl
  00112	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00115	84 d2		 test	 dl, dl
  00117	0f 84 c5 00 00
	00		 je	 $LN81@LoadInt_e
  0011d	32 d3		 xor	 dl, bl
  0011f	88 55 ef	 mov	 BYTE PTR __k$[ebp+15], dl
  00122	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00125	84 d2		 test	 dl, dl
  00127	0f 84 af 00 00
	00		 je	 $LN80@LoadInt_e
  0012d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00130	88 55 f0	 mov	 BYTE PTR __k$[ebp+16], dl
  00133	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00136	84 d2		 test	 dl, dl
  00138	0f 84 98 00 00
	00		 je	 $LN79@LoadInt_e
  0013e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00141	88 55 f1	 mov	 BYTE PTR __k$[ebp+17], dl
  00144	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  00147	84 d2		 test	 dl, dl
  00149	0f 84 82 00 00
	00		 je	 $LN78@LoadInt_e
  0014f	32 d1		 xor	 dl, cl
  00151	88 55 f2	 mov	 BYTE PTR __k$[ebp+18], dl
  00154	8a 50 13	 mov	 dl, BYTE PTR [eax+19]
  00157	84 d2		 test	 dl, dl
  00159	74 71		 je	 SHORT $LN77@LoadInt_e
  0015b	32 d3		 xor	 dl, bl
  0015d	88 55 f3	 mov	 BYTE PTR __k$[ebp+19], dl
  00160	8a 50 14	 mov	 dl, BYTE PTR [eax+20]
  00163	84 d2		 test	 dl, dl
  00165	74 5f		 je	 SHORT $LN76@LoadInt_e
  00167	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0016a	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0016e	88 55 f4	 mov	 BYTE PTR __k$[ebp+20], dl
  00171	0f 84 c3 00 00
	00		 je	 $LN1@LoadInt_e
  00177	8a 50 16	 mov	 dl, BYTE PTR [eax+22]
  0017a	84 d2		 test	 dl, dl
  0017c	74 43		 je	 SHORT $LN74@LoadInt_e
  0017e	32 d1		 xor	 dl, cl
  00180	88 55 f6	 mov	 BYTE PTR __k$[ebp+22], dl
  00183	8a 50 17	 mov	 dl, BYTE PTR [eax+23]
  00186	84 d2		 test	 dl, dl
  00188	74 32		 je	 SHORT $LN73@LoadInt_e
  0018a	32 d3		 xor	 dl, bl
  0018c	88 55 f7	 mov	 BYTE PTR __k$[ebp+23], dl
  0018f	8a 50 18	 mov	 dl, BYTE PTR [eax+24]
  00192	84 d2		 test	 dl, dl
  00194	74 20		 je	 SHORT $LN72@LoadInt_e
  00196	8a 40 19	 mov	 al, BYTE PTR [eax+25]
  00199	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0019c	88 55 f8	 mov	 BYTE PTR __k$[ebp+24], dl
  0019f	84 c0		 test	 al, al
  001a1	74 0a		 je	 SHORT $LN71@LoadInt_e
  001a3	34 ec		 xor	 al, -20			; ffffffecH
  001a5	88 45 f9	 mov	 BYTE PTR __k$[ebp+25], al
  001a8	e9 8d 00 00 00	 jmp	 $LN1@LoadInt_e
$LN71@LoadInt_e:
  001ad	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+25], -20 ; ffffffecH
  001b1	e9 84 00 00 00	 jmp	 $LN1@LoadInt_e
$LN72@LoadInt_e:
  001b6	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+24], -19 ; ffffffedH
  001ba	eb 7e		 jmp	 SHORT $LN1@LoadInt_e
$LN73@LoadInt_e:
  001bc	88 5d f7	 mov	 BYTE PTR __k$[ebp+23], bl
  001bf	eb 79		 jmp	 SHORT $LN1@LoadInt_e
$LN74@LoadInt_e:
  001c1	88 4d f6	 mov	 BYTE PTR __k$[ebp+22], cl
  001c4	eb 74		 jmp	 SHORT $LN1@LoadInt_e
$LN76@LoadInt_e:
  001c6	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+20], -19 ; ffffffedH
  001ca	eb 6e		 jmp	 SHORT $LN1@LoadInt_e
$LN77@LoadInt_e:
  001cc	88 5d f3	 mov	 BYTE PTR __k$[ebp+19], bl
  001cf	eb 69		 jmp	 SHORT $LN1@LoadInt_e
$LN78@LoadInt_e:
  001d1	88 4d f2	 mov	 BYTE PTR __k$[ebp+18], cl
  001d4	eb 64		 jmp	 SHORT $LN1@LoadInt_e
$LN79@LoadInt_e:
  001d6	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+17], -20 ; ffffffecH
  001da	eb 5e		 jmp	 SHORT $LN1@LoadInt_e
$LN80@LoadInt_e:
  001dc	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  001e0	eb 58		 jmp	 SHORT $LN1@LoadInt_e
$LN81@LoadInt_e:
  001e2	88 5d ef	 mov	 BYTE PTR __k$[ebp+15], bl
  001e5	eb 53		 jmp	 SHORT $LN1@LoadInt_e
$LN82@LoadInt_e:
  001e7	88 4d ee	 mov	 BYTE PTR __k$[ebp+14], cl
  001ea	eb 4e		 jmp	 SHORT $LN1@LoadInt_e
$LN83@LoadInt_e:
  001ec	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  001f0	eb 48		 jmp	 SHORT $LN1@LoadInt_e
$LN84@LoadInt_e:
  001f2	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  001f6	eb 42		 jmp	 SHORT $LN1@LoadInt_e
$LN85@LoadInt_e:
  001f8	88 5d eb	 mov	 BYTE PTR __k$[ebp+11], bl
  001fb	eb 3d		 jmp	 SHORT $LN1@LoadInt_e
$LN86@LoadInt_e:
  001fd	88 4d ea	 mov	 BYTE PTR __k$[ebp+10], cl
  00200	eb 38		 jmp	 SHORT $LN1@LoadInt_e
$LN87@LoadInt_e:
  00202	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  00206	eb 32		 jmp	 SHORT $LN1@LoadInt_e
$LN88@LoadInt_e:
  00208	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  0020c	eb 2c		 jmp	 SHORT $LN1@LoadInt_e
$LN89@LoadInt_e:
  0020e	88 5d e7	 mov	 BYTE PTR __k$[ebp+7], bl
  00211	eb 27		 jmp	 SHORT $LN1@LoadInt_e
$LN90@LoadInt_e:
  00213	88 4d e6	 mov	 BYTE PTR __k$[ebp+6], cl
  00216	eb 22		 jmp	 SHORT $LN1@LoadInt_e
$LN91@LoadInt_e:
  00218	c6 45 e5 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  0021c	eb 1c		 jmp	 SHORT $LN1@LoadInt_e
$LN92@LoadInt_e:
  0021e	c6 45 e4 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00222	eb 16		 jmp	 SHORT $LN1@LoadInt_e
$LN93@LoadInt_e:
  00224	c6 45 e3 ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00228	eb 10		 jmp	 SHORT $LN1@LoadInt_e
$LN94@LoadInt_e:
  0022a	c6 45 e2 eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0022e	eb 0a		 jmp	 SHORT $LN1@LoadInt_e
$LN95@LoadInt_e:
  00230	c6 45 e1 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00234	eb 04		 jmp	 SHORT $LN1@LoadInt_e
$LN96@LoadInt_e:
  00236	c6 45 e0 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e:
  0023a	6a 05		 push	 5
  0023c	8d 45 e0	 lea	 eax, DWORD PTR __k$[ebp]
  0023f	c6 45 f5 00	 mov	 BYTE PTR __k$[ebp+21], 0
  00243	5a		 pop	 edx
$LL104@LoadInt_e:
  00244	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0024a	83 c0 04	 add	 eax, 4
  0024d	4a		 dec	 edx
  0024e	75 f4		 jne	 SHORT $LL104@LoadInt_e

; 120  : 		return LoadInt(_k, i);

  00250	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  00253	80 75 f4 ed	 xor	 BYTE PTR __k$[ebp+20], -19 ; ffffffedH
  00257	8d 45 e0	 lea	 eax, DWORD PTR __k$[ebp]
  0025a	50		 push	 eax
  0025b	8b ce		 mov	 ecx, esi
  0025d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  00263	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00266	5e		 pop	 esi
  00267	33 cd		 xor	 ecx, ebp
  00269	5b		 pop	 ebx
  0026a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0026f	c9		 leave
  00270	c2 08 00	 ret	 8
??$LoadInt_e@$0BG@@ioINILoader@@QAEHAAY0BG@$$CBDH@Z ENDP ; ioINILoader::LoadInt_e<22>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadBool_e@$0P@@ioINILoader@@QAE_NAAY0P@$$CBD_N@Z ; ioINILoader::LoadBool_e<15>
EXTRN	__imp_?LoadBool@ioINILoader@@QAE_NPBD_N@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$LoadBool_e@$0P@@ioINILoader@@QAE_NAAY0P@$$CBD_N@Z
_TEXT	SEGMENT
__k$ = -24						; size = 15
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_b$ = 12						; size = 1
??$LoadBool_e@$0P@@ioINILoader@@QAE_NAAY0P@$$CBD_N@Z PROC ; ioINILoader::LoadBool_e<15>, COMDAT
; _this$ = ecx

; 101  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 102  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 75 01 00
	00		 je	 $LN96@LoadBool_e
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e8	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 5e 01 00
	00		 je	 $LN95@LoadBool_e
  00031	b1 ec		 mov	 cl, -20			; ffffffecH
  00033	32 d1		 xor	 dl, cl
  00035	88 55 e9	 mov	 BYTE PTR __k$[ebp+1], dl
  00038	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003b	84 d2		 test	 dl, dl
  0003d	0f 84 46 01 00
	00		 je	 $LN94@LoadBool_e
  00043	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00046	88 55 ea	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 2f 01 00
	00		 je	 $LN93@LoadBool_e
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 eb	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 18 01 00
	00		 je	 $LN92@LoadBool_e
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 ec	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 02 01 00
	00		 je	 $LN91@LoadBool_e
  00076	32 d1		 xor	 dl, cl
  00078	88 55 ed	 mov	 BYTE PTR __k$[ebp+5], dl
  0007b	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007e	84 d2		 test	 dl, dl
  00080	0f 84 ec 00 00
	00		 je	 $LN90@LoadBool_e
  00086	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00089	88 55 ee	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 d5 00 00
	00		 je	 $LN89@LoadBool_e
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 ef	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 be 00 00
	00		 je	 $LN88@LoadBool_e
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 f0	 mov	 BYTE PTR __k$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 a8 00 00
	00		 je	 $LN87@LoadBool_e
  000b9	32 d1		 xor	 dl, cl
  000bb	88 55 f1	 mov	 BYTE PTR __k$[ebp+9], dl
  000be	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c1	84 d2		 test	 dl, dl
  000c3	0f 84 92 00 00
	00		 je	 $LN86@LoadBool_e
  000c9	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000cc	88 55 f2	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	74 7f		 je	 SHORT $LN85@LoadBool_e
  000d6	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d9	88 55 f3	 mov	 BYTE PTR __k$[ebp+11], dl
  000dc	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000df	84 d2		 test	 dl, dl
  000e1	74 6c		 je	 SHORT $LN84@LoadBool_e
  000e3	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e6	88 55 f4	 mov	 BYTE PTR __k$[ebp+12], dl
  000e9	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000ec	84 d2		 test	 dl, dl
  000ee	74 5a		 je	 SHORT $LN83@LoadBool_e
  000f0	32 d1		 xor	 dl, cl
  000f2	80 78 0e 00	 cmp	 BYTE PTR [eax+14], 0
  000f6	88 55 f5	 mov	 BYTE PTR __k$[ebp+13], dl
  000f9	0f 84 9a 00 00
	00		 je	 $LN1@LoadBool_e
  000ff	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00102	84 d2		 test	 dl, dl
  00104	74 3e		 je	 SHORT $LN81@LoadBool_e
  00106	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00109	88 55 f7	 mov	 BYTE PTR __k$[ebp+15], dl
  0010c	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  0010f	84 d2		 test	 dl, dl
  00111	74 2b		 je	 SHORT $LN80@LoadBool_e
  00113	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00116	88 55 f8	 mov	 BYTE PTR __k$[ebp+16], dl
  00119	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  0011c	84 d2		 test	 dl, dl
  0011e	74 19		 je	 SHORT $LN79@LoadBool_e
  00120	8a 40 12	 mov	 al, BYTE PTR [eax+18]
  00123	32 d1		 xor	 dl, cl
  00125	88 55 f9	 mov	 BYTE PTR __k$[ebp+17], dl
  00128	84 c0		 test	 al, al
  0012a	74 07		 je	 SHORT $LN78@LoadBool_e
  0012c	34 eb		 xor	 al, -21			; ffffffebH
  0012e	88 45 fa	 mov	 BYTE PTR __k$[ebp+18], al
  00131	eb 66		 jmp	 SHORT $LN1@LoadBool_e
$LN78@LoadBool_e:
  00133	c6 45 fa eb	 mov	 BYTE PTR __k$[ebp+18], -21 ; ffffffebH
  00137	eb 60		 jmp	 SHORT $LN1@LoadBool_e
$LN79@LoadBool_e:
  00139	88 4d f9	 mov	 BYTE PTR __k$[ebp+17], cl
  0013c	eb 5b		 jmp	 SHORT $LN1@LoadBool_e
$LN80@LoadBool_e:
  0013e	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  00142	eb 55		 jmp	 SHORT $LN1@LoadBool_e
$LN81@LoadBool_e:
  00144	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00148	eb 4f		 jmp	 SHORT $LN1@LoadBool_e
$LN83@LoadBool_e:
  0014a	88 4d f5	 mov	 BYTE PTR __k$[ebp+13], cl
  0014d	eb 4a		 jmp	 SHORT $LN1@LoadBool_e
$LN84@LoadBool_e:
  0014f	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00153	eb 44		 jmp	 SHORT $LN1@LoadBool_e
$LN85@LoadBool_e:
  00155	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00159	eb 3e		 jmp	 SHORT $LN1@LoadBool_e
$LN86@LoadBool_e:
  0015b	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  0015f	eb 38		 jmp	 SHORT $LN1@LoadBool_e
$LN87@LoadBool_e:
  00161	88 4d f1	 mov	 BYTE PTR __k$[ebp+9], cl
  00164	eb 33		 jmp	 SHORT $LN1@LoadBool_e
$LN88@LoadBool_e:
  00166	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  0016a	eb 2d		 jmp	 SHORT $LN1@LoadBool_e
$LN89@LoadBool_e:
  0016c	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  00170	eb 27		 jmp	 SHORT $LN1@LoadBool_e
$LN90@LoadBool_e:
  00172	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  00176	eb 21		 jmp	 SHORT $LN1@LoadBool_e
$LN91@LoadBool_e:
  00178	88 4d ed	 mov	 BYTE PTR __k$[ebp+5], cl
  0017b	eb 1c		 jmp	 SHORT $LN1@LoadBool_e
$LN92@LoadBool_e:
  0017d	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00181	eb 16		 jmp	 SHORT $LN1@LoadBool_e
$LN93@LoadBool_e:
  00183	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00187	eb 10		 jmp	 SHORT $LN1@LoadBool_e
$LN94@LoadBool_e:
  00189	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0018d	eb 0a		 jmp	 SHORT $LN1@LoadBool_e
$LN95@LoadBool_e:
  0018f	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00193	eb 04		 jmp	 SHORT $LN1@LoadBool_e
$LN96@LoadBool_e:
  00195	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadBool_e:
  00199	6a 03		 push	 3
  0019b	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  0019e	c6 45 f6 00	 mov	 BYTE PTR __k$[ebp+14], 0
  001a2	5a		 pop	 edx
$LL104@LoadBool_e:
  001a3	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001a9	83 c0 04	 add	 eax, 4
  001ac	4a		 dec	 edx
  001ad	75 f4		 jne	 SHORT $LL104@LoadBool_e
  001af	6a 0c		 push	 12			; 0000000cH
  001b1	58		 pop	 eax
$LL101@LoadBool_e:
  001b2	8b c8		 mov	 ecx, eax
  001b4	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  001ba	79 05		 jns	 SHORT $LN111@LoadBool_e
  001bc	49		 dec	 ecx
  001bd	83 c9 fc	 or	 ecx, -4			; fffffffcH
  001c0	41		 inc	 ecx
$LN111@LoadBool_e:
  001c1	b2 ed		 mov	 dl, -19			; ffffffedH
  001c3	2a d1		 sub	 dl, cl
  001c5	30 54 05 e8	 xor	 BYTE PTR __k$[ebp+eax], dl
  001c9	40		 inc	 eax
  001ca	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  001cd	7c e3		 jl	 SHORT $LL101@LoadBool_e

; 103  : 		return LoadBool(_k, b);

  001cf	ff 75 0c	 push	 DWORD PTR _b$[ebp]
  001d2	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001d5	50		 push	 eax
  001d6	8b ce		 mov	 ecx, esi
  001d8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadBool@ioINILoader@@QAE_NPBD_N@Z

; 104  : 	}

  001de	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001e1	33 cd		 xor	 ecx, ebp
  001e3	5e		 pop	 esi
  001e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e9	c9		 leave
  001ea	c2 08 00	 ret	 8
??$LoadBool_e@$0P@@ioINILoader@@QAE_NAAY0P@$$CBD_N@Z ENDP ; ioINILoader::LoadBool_e<15>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??4ioHashString@@QAEAAV0@PBD@Z:PROC
EXTRN	?LoadProperty@ioObjectItem@@UAEXAAVioINILoader@@@Z:PROC ; ioObjectItem::LoadProperty
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iodrinkitem.cpp
;	COMDAT ?LoadProperty@ioDrinkItem@@UAEXAAVioINILoader@@@Z
_TEXT	SEGMENT
tv3799 = -296						; size = 4
_szBuf$ = -292						; size = 260
__k$543519 = -32					; size = 22
__k$543490 = -32					; size = 21
__k$543644 = -28					; size = 15
__k$543278 = -28					; size = 16
__$ArrayPad$ = -4					; size = 4
_rkLoader$ = 8						; size = 4
?LoadProperty@ioDrinkItem@@UAEXAAVioINILoader@@@Z PROC	; ioDrinkItem::LoadProperty, COMDAT
; _this$ = ecx

; 32   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 01 00
	00		 sub	 esp, 296		; 00000128H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b 7d 08	 mov	 edi, DWORD PTR _rkLoader$[ebp]

; 33   : 	ioObjectItem::LoadProperty( rkLoader );

  00019	57		 push	 edi
  0001a	8b f1		 mov	 esi, ecx
  0001c	e8 00 00 00 00	 call	 ?LoadProperty@ioObjectItem@@UAEXAAVioINILoader@@@Z ; ioObjectItem::LoadProperty

; 34   : 	
; 35   : 	char szBuf[MAX_PATH];
; 36   : 	rkLoader.LoadString_e( "drink_animation", "", szBuf, MAX_PATH );

  00021	6a 03		 push	 3
  00023	c7 45 e4 89 9e
	82 84		 mov	 DWORD PTR __k$543278[ebp], -2071814519 ; 84829e89H
  0002a	c7 45 e8 86 b3
	8a 84		 mov	 DWORD PTR __k$543278[ebp+4], -2071284858 ; 848ab386H
  00031	c7 45 ec 84 81
	8a 9e		 mov	 DWORD PTR __k$543278[ebp+8], -1635090044 ; 9e8a8184H
  00038	8d 45 e4	 lea	 eax, DWORD PTR __k$543278[ebp]
  0003b	33 db		 xor	 ebx, ebx
  0003d	c7 45 f0 84 83
	85 00		 mov	 DWORD PTR __k$543278[ebp+12], 8749956 ; 00858384H
  00044	59		 pop	 ecx
$LL106@LoadProper:
  00045	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0004b	83 c0 04	 add	 eax, 4
  0004e	49		 dec	 ecx
  0004f	75 f4		 jne	 SHORT $LL106@LoadProper
  00051	6a 0c		 push	 12			; 0000000cH
  00053	58		 pop	 eax
$LL103@LoadProper:
  00054	8b c8		 mov	 ecx, eax
  00056	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0005c	79 05		 jns	 SHORT $LN445@LoadProper
  0005e	49		 dec	 ecx
  0005f	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00062	41		 inc	 ecx
$LN445@LoadProper:
  00063	b2 ed		 mov	 dl, -19			; ffffffedH
  00065	2a d1		 sub	 dl, cl
  00067	30 54 05 e4	 xor	 BYTE PTR __k$543278[ebp+eax], dl
  0006b	40		 inc	 eax
  0006c	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  0006f	7c e3		 jl	 SHORT $LL103@LoadProper
  00071	68 04 01 00 00	 push	 260			; 00000104H
  00076	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0007c	50		 push	 eax
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00082	8d 45 e4	 lea	 eax, DWORD PTR __k$543278[ebp]
  00085	50		 push	 eax
  00086	8b cf		 mov	 ecx, edi
  00088	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z

; 37   : 	m_DrinkAnimation = szBuf;

  0008e	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00094	50		 push	 eax
  00095	8d 8e 34 1b 00
	00		 lea	 ecx, DWORD PTR [esi+6964]
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z

; 38   : 
; 39   : 	m_fDrinkAnimationRate = rkLoader.LoadFloat_e( "drink_animation_rate", FLOAT1 );

  000a1	b8 01 00 00 00	 mov	 eax, 1
  000a6	6a 05		 push	 5
  000a8	c7 45 e0 89 9e
	82 84		 mov	 DWORD PTR __k$543490[ebp], -2071814519 ; 84829e89H
  000af	c7 45 e4 86 b3
	8a 84		 mov	 DWORD PTR __k$543490[ebp+4], -2071284858 ; 848ab386H
  000b6	c7 45 e8 84 81
	8a 9e		 mov	 DWORD PTR __k$543490[ebp+8], -1635090044 ; 9e8a8184H
  000bd	c7 45 ec 84 83
	85 b5		 mov	 DWORD PTR __k$543490[ebp+12], -1249541244 ; b5858384H
  000c4	c7 45 f0 9f 8d
	9f 8f		 mov	 DWORD PTR __k$543490[ebp+16], -1885368929 ; 8f9f8d9fH
  000cb	8d 4d e0	 lea	 ecx, DWORD PTR __k$543490[ebp]
  000ce	88 5d f4	 mov	 BYTE PTR __k$543490[ebp+20], bl
  000d1	5a		 pop	 edx
$LL214@LoadProper:
  000d2	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  000d8	83 c1 04	 add	 ecx, 4
  000db	4a		 dec	 edx
  000dc	75 f4		 jne	 SHORT $LL214@LoadProper
  000de	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv3799[ebp], eax
  000e4	db 85 d8 fe ff
	ff		 fild	 DWORD PTR tv3799[ebp]
  000ea	85 c0		 test	 eax, eax
  000ec	79 06		 jns	 SHORT $LN446@LoadProper
  000ee	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN446@LoadProper:
  000f4	51		 push	 ecx
  000f5	8d 45 e0	 lea	 eax, DWORD PTR __k$543490[ebp]
  000f8	d9 1c 24	 fstp	 DWORD PTR [esp]
  000fb	50		 push	 eax
  000fc	8b cf		 mov	 ecx, edi
  000fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z
  00104	d9 9e 44 1b 00
	00		 fstp	 DWORD PTR [esi+6980]
  0010a	6a 05		 push	 5

; 40   : 	m_dwDrinkAnimationDelay = rkLoader.LoadInt_e( "drink_animation_delay", 0 );

  0010c	c7 45 e0 89 9e
	82 84		 mov	 DWORD PTR __k$543519[ebp], -2071814519 ; 84829e89H
  00113	c7 45 e4 86 b3
	8a 84		 mov	 DWORD PTR __k$543519[ebp+4], -2071284858 ; 848ab386H
  0011a	c7 45 e8 84 81
	8a 9e		 mov	 DWORD PTR __k$543519[ebp+8], -1635090044 ; 9e8a8184H
  00121	c7 45 ec 84 83
	85 b5		 mov	 DWORD PTR __k$543519[ebp+12], -1249541244 ; b5858384H
  00128	c7 45 f0 89 89
	87 8b		 mov	 DWORD PTR __k$543519[ebp+16], -1954051703 ; 8b878989H
  0012f	8d 45 e0	 lea	 eax, DWORD PTR __k$543519[ebp]
  00132	66 c7 45 f4 94
	00		 mov	 WORD PTR __k$543519[ebp+20], 148 ; 00000094H
  00138	59		 pop	 ecx
$LL320@LoadProper:
  00139	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0013f	83 c0 04	 add	 eax, 4
  00142	49		 dec	 ecx
  00143	75 f4		 jne	 SHORT $LL320@LoadProper
  00145	80 75 f4 ed	 xor	 BYTE PTR __k$543519[ebp+20], -19 ; ffffffedH
  00149	53		 push	 ebx
  0014a	8d 45 e0	 lea	 eax, DWORD PTR __k$543519[ebp]
  0014d	50		 push	 eax
  0014e	8b cf		 mov	 ecx, edi
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z
  00156	6a 03		 push	 3
  00158	89 86 48 1b 00
	00		 mov	 DWORD PTR [esi+6984], eax

; 41   : 
; 42   : 	m_bRandom = rkLoader.LoadBool_e( "owner_buff_rnd", false );

  0015e	c7 45 e4 82 9b
	85 8f		 mov	 DWORD PTR __k$543644[ebp], -1887069310 ; 8f859b82H
  00165	c7 45 e8 9f b3
	89 9f		 mov	 DWORD PTR __k$543644[ebp+4], -1618365537 ; 9f89b39fH
  0016c	c7 45 ec 8b 8a
	b4 98		 mov	 DWORD PTR __k$543644[ebp+8], -1732998517 ; 98b48a8bH
  00173	66 c7 45 f0 83
	88		 mov	 WORD PTR __k$543644[ebp+12], 34947 ; 00008883H
  00179	8d 45 e4	 lea	 eax, DWORD PTR __k$543644[ebp]
  0017c	88 5d f2	 mov	 BYTE PTR __k$543644[ebp+14], bl
  0017f	59		 pop	 ecx
$LL426@LoadProper:
  00180	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00186	83 c0 04	 add	 eax, 4
  00189	49		 dec	 ecx
  0018a	75 f4		 jne	 SHORT $LL426@LoadProper
  0018c	6a 0c		 push	 12			; 0000000cH
  0018e	58		 pop	 eax
$LL423@LoadProper:
  0018f	8b c8		 mov	 ecx, eax
  00191	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00197	79 05		 jns	 SHORT $LN447@LoadProper
  00199	49		 dec	 ecx
  0019a	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0019d	41		 inc	 ecx
$LN447@LoadProper:
  0019e	b2 ed		 mov	 dl, -19			; ffffffedH
  001a0	2a d1		 sub	 dl, cl
  001a2	30 54 05 e4	 xor	 BYTE PTR __k$543644[ebp+eax], dl
  001a6	40		 inc	 eax
  001a7	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  001aa	7c e3		 jl	 SHORT $LL423@LoadProper
  001ac	53		 push	 ebx
  001ad	8d 45 e4	 lea	 eax, DWORD PTR __k$543644[ebp]
  001b0	50		 push	 eax
  001b1	8b cf		 mov	 ecx, edi
  001b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadBool@ioINILoader@@QAE_NPBD_N@Z

; 43   : }

  001b9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001bc	5f		 pop	 edi
  001bd	88 86 54 1b 00
	00		 mov	 BYTE PTR [esi+6996], al
  001c3	5e		 pop	 esi
  001c4	33 cd		 xor	 ecx, ebp
  001c6	5b		 pop	 ebx
  001c7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001cc	c9		 leave
  001cd	c2 04 00	 ret	 4
?LoadProperty@ioDrinkItem@@UAEXAAVioINILoader@@@Z ENDP	; ioDrinkItem::LoadProperty
_TEXT	ENDS
END
