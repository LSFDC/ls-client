; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioGuildInfo.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?ms_Singleton@?$Singleton@VioGuildInfo@@@@1PAVioGuildInfo@@A ; Singleton<ioGuildInfo>::ms_Singleton
;	COMDAT ?ms_Singleton@?$Singleton@VioGuildInfo@@@@1PAVioGuildInfo@@A
_BSS	SEGMENT
?ms_Singleton@?$Singleton@VioGuildInfo@@@@1PAVioGuildInfo@@A DD 01H DUP (?) ; Singleton<ioGuildInfo>::ms_Singleton
_BSS	ENDS
PUBLIC	?return1@@YAIXZ					; return1
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
;	COMDAT ?return1@@YAIXZ
_TEXT	SEGMENT
?return1@@YAIXZ PROC					; return1, COMDAT

; 17   : 	__forceinline unsigned int return1() { __asm mov eax, 1 };

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?return1@@YAIXZ ENDP					; return1
_TEXT	ENDS
PUBLIC	?GetMaxReserveMarkIndex@ioGuildMarkMgr@@QAEHXZ	; ioGuildMarkMgr::GetMaxReserveMarkIndex
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildmarkmgr.h
;	COMDAT ?GetMaxReserveMarkIndex@ioGuildMarkMgr@@QAEHXZ
_TEXT	SEGMENT
?GetMaxReserveMarkIndex@ioGuildMarkMgr@@QAEHXZ PROC	; ioGuildMarkMgr::GetMaxReserveMarkIndex, COMDAT
; _this$ = ecx

; 91   : 	int GetMaxReserveMarkIndex(){ return m_iMaxReserveMarkIndex; }

  00000	8b 41 6c	 mov	 eax, DWORD PTR [ecx+108]
  00003	c3		 ret	 0
?GetMaxReserveMarkIndex@ioGuildMarkMgr@@QAEHXZ ENDP	; ioGuildMarkMgr::GetMaxReserveMarkIndex
_TEXT	ENDS
PUBLIC	?GetGuildMarkAppDir@ioGuildMarkMgr@@QAEABVioHashString@@XZ ; ioGuildMarkMgr::GetGuildMarkAppDir
; Function compile flags: /Ogsp
;	COMDAT ?GetGuildMarkAppDir@ioGuildMarkMgr@@QAEABVioHashString@@XZ
_TEXT	SEGMENT
?GetGuildMarkAppDir@ioGuildMarkMgr@@QAEABVioHashString@@XZ PROC ; ioGuildMarkMgr::GetGuildMarkAppDir, COMDAT
; _this$ = ecx

; 93   : 	const ioHashString &GetGuildMarkAppDir(){ return m_szAppDirectory; }

  00000	8d 81 a4 00 00
	00		 lea	 eax, DWORD PTR [ecx+164]
  00006	c3		 ret	 0
?GetGuildMarkAppDir@ioGuildMarkMgr@@QAEABVioHashString@@XZ ENDP ; ioGuildMarkMgr::GetGuildMarkAppDir
_TEXT	ENDS
PUBLIC	?return100@@YAIXZ				; return100
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
;	COMDAT ?return100@@YAIXZ
_TEXT	SEGMENT
?return100@@YAIXZ PROC					; return100, COMDAT

; 25   : 	__forceinline unsigned int return100() { __asm mov eax, 100 };

  00000	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  00005	c3		 ret	 0
?return100@@YAIXZ ENDP					; return100
_TEXT	ENDS
PUBLIC	?ChangeGuildUserList@LobbyGuildUserListWnd@@SAXXZ ; LobbyGuildUserListWnd::ChangeGuildUserList
EXTRN	?sg_bGuildUserListUpdate@LobbyGuildUserListWnd@@2_NA:BYTE ; LobbyGuildUserListWnd::sg_bGuildUserListUpdate
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\userlistwnd.h
;	COMDAT ?ChangeGuildUserList@LobbyGuildUserListWnd@@SAXXZ
_TEXT	SEGMENT
?ChangeGuildUserList@LobbyGuildUserListWnd@@SAXXZ PROC	; LobbyGuildUserListWnd::ChangeGuildUserList, COMDAT

; 428  : 	static void ChangeGuildUserList(){ sg_bGuildUserListUpdate = true; }

  00000	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?sg_bGuildUserListUpdate@LobbyGuildUserListWnd@@2_NA, 1 ; LobbyGuildUserListWnd::sg_bGuildUserListUpdate
  00007	c3		 ret	 0
?ChangeGuildUserList@LobbyGuildUserListWnd@@SAXXZ ENDP	; LobbyGuildUserListWnd::ChangeGuildUserList
_TEXT	ENDS
PUBLIC	?SetGuildIndex@ioGuildData@@QAEXK@Z		; ioGuildData::SetGuildIndex
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
;	COMDAT ?SetGuildIndex@ioGuildData@@QAEXK@Z
_TEXT	SEGMENT
_dwGuildIndex$ = 8					; size = 4
?SetGuildIndex@ioGuildData@@QAEXK@Z PROC		; ioGuildData::SetGuildIndex, COMDAT
; _this$ = ecx

; 40   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 41   : 	m_dwGuildIndex = dwGuildIndex;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwGuildIndex$[ebp]
  00006	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 42   : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetGuildIndex@ioGuildData@@QAEXK@Z ENDP		; ioGuildData::SetGuildIndex
_TEXT	ENDS
PUBLIC	??_C@_0P@NLKFMMCE@?$CFs?1?$CFd_?$CFd_l?4jpg?$AA@ ; `string'
PUBLIC	??_C@_0P@CJCFHMGK@?$CFs?1?$CFd_?$CFd_s?4jpg?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?SetGuildMark@ioGuildData@@QAEXK@Z		; ioGuildData::SetGuildMark
EXTRN	__imp__DeleteFileA@4:PROC
EXTRN	__imp__sprintf:PROC
EXTRN	__imp_?c_str@ioHashString@@QBEPBDXZ:PROC
EXTRN	?GetSingleton@ioGuildMarkMgr@@SAAAV1@XZ:PROC	; ioGuildMarkMgr::GetSingleton
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0P@NLKFMMCE@?$CFs?1?$CFd_?$CFd_l?4jpg?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildmarkmgr.h
CONST	SEGMENT
??_C@_0P@NLKFMMCE@?$CFs?1?$CFd_?$CFd_l?4jpg?$AA@ DB '%s/%d_%d_l.jpg', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CJCFHMGK@?$CFs?1?$CFd_?$CFd_s?4jpg?$AA@
CONST	SEGMENT
??_C@_0P@CJCFHMGK@?$CFs?1?$CFd_?$CFd_s?4jpg?$AA@ DB '%s/%d_%d_s.jpg', 00H ; `string'
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
CONST	ENDS
;	COMDAT ?SetGuildMark@ioGuildData@@QAEXK@Z
_TEXT	SEGMENT
_szBuf$507953 = -264					; size = 260
__$ArrayPad$ = -4					; size = 4
_dwGuildMark$ = 8					; size = 4
?SetGuildMark@ioGuildData@@QAEXK@Z PROC			; ioGuildData::SetGuildMark, COMDAT
; _this$ = ecx

; 45   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b f1		 mov	 esi, ecx

; 46   : 	if( dwGuildMark > m_dwGuildMark )         // 길드 마크는 변경되면 값이 항상 커진다.

  00016	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00019	39 45 08	 cmp	 DWORD PTR _dwGuildMark$[ebp], eax
  0001c	0f 86 b0 00 00
	00		 jbe	 $LN3@SetGuildMa

; 47   : 	{
; 48   : 		if( m_dwGuildMark != 0 )

  00022	85 c0		 test	 eax, eax
  00024	0f 84 a2 00 00
	00		 je	 $LN1@SetGuildMa

; 49   : 		{
; 50   : 			//길드마크가 변경되었다 기존 JPG를 삭제하라!!! 
; 51   : 			if( m_dwGuildMark > (DWORD)g_GuildMarkMgr.GetMaxReserveMarkIndex() )

  0002a	e8 00 00 00 00	 call	 ?GetSingleton@ioGuildMarkMgr@@SAAAV1@XZ ; ioGuildMarkMgr::GetSingleton
  0002f	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00032	3b 48 6c	 cmp	 ecx, DWORD PTR [eax+108]
  00035	0f 86 91 00 00
	00		 jbe	 $LN1@SetGuildMa

; 52   : 			{
; 53   : 				char szBuf[MAX_PATH] = "";

  0003b	53		 push	 ebx
  0003c	57		 push	 edi
  0003d	68 03 01 00 00	 push	 259			; 00000103H
  00042	8d 85 f9 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$507953[ebp+1]
  00048	6a 00		 push	 0
  0004a	50		 push	 eax
  0004b	c6 85 f8 fe ff
	ff 00		 mov	 BYTE PTR _szBuf$507953[ebp], 0
  00052	e8 00 00 00 00	 call	 _memset
  00057	83 c4 0c	 add	 esp, 12			; 0000000cH

; 54   : 				// 작은 마크 삭제
; 55   : 				sprintf( szBuf, "%s/%d_%d_s.jpg", g_GuildMarkMgr.GetGuildMarkAppDir().c_str() , m_dwGuildIndex, m_dwGuildMark );

  0005a	e8 00 00 00 00	 call	 ?GetSingleton@ioGuildMarkMgr@@SAAAV1@XZ ; ioGuildMarkMgr::GetSingleton
  0005f	ff 76 08	 push	 DWORD PTR [esi+8]
  00062	8d 88 a4 00 00
	00		 lea	 ecx, DWORD PTR [eax+164]
  00068	ff 76 04	 push	 DWORD PTR [esi+4]
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  00071	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__sprintf
  00077	50		 push	 eax
  00078	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$507953[ebp]
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CJCFHMGK@?$CFs?1?$CFd_?$CFd_s?4jpg?$AA@
  00083	50		 push	 eax
  00084	ff d7		 call	 edi

; 56   : 				::DeleteFile( szBuf );

  00086	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__DeleteFileA@4
  0008c	83 c4 14	 add	 esp, 20			; 00000014H
  0008f	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$507953[ebp]
  00095	50		 push	 eax
  00096	ff d3		 call	 ebx

; 57   : 
; 58   : 				// 큰 마크 삭제
; 59   : 				sprintf( szBuf, "%s/%d_%d_l.jpg", g_GuildMarkMgr.GetGuildMarkAppDir().c_str() , m_dwGuildIndex, m_dwGuildMark );

  00098	e8 00 00 00 00	 call	 ?GetSingleton@ioGuildMarkMgr@@SAAAV1@XZ ; ioGuildMarkMgr::GetSingleton
  0009d	ff 76 08	 push	 DWORD PTR [esi+8]
  000a0	8d 88 a4 00 00
	00		 lea	 ecx, DWORD PTR [eax+164]
  000a6	ff 76 04	 push	 DWORD PTR [esi+4]
  000a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  000af	50		 push	 eax
  000b0	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$507953[ebp]
  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_0P@NLKFMMCE@?$CFs?1?$CFd_?$CFd_l?4jpg?$AA@
  000bb	50		 push	 eax
  000bc	ff d7		 call	 edi
  000be	83 c4 14	 add	 esp, 20			; 00000014H

; 60   : 				::DeleteFile( szBuf );

  000c1	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$507953[ebp]
  000c7	50		 push	 eax
  000c8	ff d3		 call	 ebx
  000ca	5f		 pop	 edi
  000cb	5b		 pop	 ebx
$LN1@SetGuildMa:

; 61   : 			}
; 62   : 		}		
; 63   : 		m_dwGuildMark = dwGuildMark;

  000cc	8b 45 08	 mov	 eax, DWORD PTR _dwGuildMark$[ebp]
  000cf	89 46 08	 mov	 DWORD PTR [esi+8], eax
$LN3@SetGuildMa:

; 64   : 	}	
; 65   : }

  000d2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d5	33 cd		 xor	 ecx, ebp
  000d7	5e		 pop	 esi
  000d8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000dd	c9		 leave
  000de	c2 04 00	 ret	 4
?SetGuildMark@ioGuildData@@QAEXK@Z ENDP			; ioGuildData::SetGuildMark
_TEXT	ENDS
PUBLIC	?SetGuildRank@ioGuildData@@QAEXK@Z		; ioGuildData::SetGuildRank
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildRank@ioGuildData@@QAEXK@Z
_TEXT	SEGMENT
_dwGuildRank$ = 8					; size = 4
?SetGuildRank@ioGuildData@@QAEXK@Z PROC			; ioGuildData::SetGuildRank, COMDAT
; _this$ = ecx

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 69   : 	m_dwGuildRank = dwGuildRank;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwGuildRank$[ebp]
  00006	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 70   : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetGuildRank@ioGuildData@@QAEXK@Z ENDP			; ioGuildData::SetGuildRank
_TEXT	ENDS
PUBLIC	?SetGuildLevel@ioGuildData@@QAEXK@Z		; ioGuildData::SetGuildLevel
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildLevel@ioGuildData@@QAEXK@Z
_TEXT	SEGMENT
_dwGuildLevel$ = 8					; size = 4
?SetGuildLevel@ioGuildData@@QAEXK@Z PROC		; ioGuildData::SetGuildLevel, COMDAT
; _this$ = ecx

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 74   : 	m_dwGuildLevel = dwGuildLevel;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwGuildLevel$[ebp]
  00006	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 75   : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetGuildLevel@ioGuildData@@QAEXK@Z ENDP		; ioGuildData::SetGuildLevel
_TEXT	ENDS
PUBLIC	?SetGuildJoinUser@ioGuildData@@QAEXK@Z		; ioGuildData::SetGuildJoinUser
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildJoinUser@ioGuildData@@QAEXK@Z
_TEXT	SEGMENT
_dwGuildJoinUser$ = 8					; size = 4
?SetGuildJoinUser@ioGuildData@@QAEXK@Z PROC		; ioGuildData::SetGuildJoinUser, COMDAT
; _this$ = ecx

; 78   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	m_dwGuildJoinUser = dwGuildJoinUser;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwGuildJoinUser$[ebp]
  00006	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 80   : 	if( m_dwGuildMaxUser <= m_dwGuildJoinUser )

  00009	39 41 18	 cmp	 DWORD PTR [ecx+24], eax
  0000c	77 03		 ja	 SHORT $LN1@SetGuildJo

; 81   : 		m_dwGuildMaxUser = m_dwGuildJoinUser;

  0000e	89 41 18	 mov	 DWORD PTR [ecx+24], eax
$LN1@SetGuildJo:

; 82   : }

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?SetGuildJoinUser@ioGuildData@@QAEXK@Z ENDP		; ioGuildData::SetGuildJoinUser
_TEXT	ENDS
PUBLIC	?SetGuildMaxUser@ioGuildData@@QAEXK@Z		; ioGuildData::SetGuildMaxUser
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildMaxUser@ioGuildData@@QAEXK@Z
_TEXT	SEGMENT
_dwGuildMaxUser$ = 8					; size = 4
?SetGuildMaxUser@ioGuildData@@QAEXK@Z PROC		; ioGuildData::SetGuildMaxUser, COMDAT
; _this$ = ecx

; 85   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 86   : 	if( m_dwGuildMaxUser != dwGuildMaxUser )

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwGuildMaxUser$[ebp]
  00006	39 41 18	 cmp	 DWORD PTR [ecx+24], eax
  00009	74 04		 je	 SHORT $LN1@SetGuildMa@2

; 87   : 		m_bUserListUpdate = true;

  0000b	c6 41 74 01	 mov	 BYTE PTR [ecx+116], 1
$LN1@SetGuildMa@2:

; 88   : 	m_dwGuildMaxUser = dwGuildMaxUser;

  0000f	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 89   : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?SetGuildMaxUser@ioGuildData@@QAEXK@Z ENDP		; ioGuildData::SetGuildMaxUser
_TEXT	ENDS
PUBLIC	?SetGuildPoint@ioGuildData@@QAEXK@Z		; ioGuildData::SetGuildPoint
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildPoint@ioGuildData@@QAEXK@Z
_TEXT	SEGMENT
_dwGuildPoint$ = 8					; size = 4
?SetGuildPoint@ioGuildData@@QAEXK@Z PROC		; ioGuildData::SetGuildPoint, COMDAT
; _this$ = ecx

; 92   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 93   : 	m_dwGuildPoint = dwGuildPoint;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwGuildPoint$[ebp]
  00006	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 94   : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetGuildPoint@ioGuildData@@QAEXK@Z ENDP		; ioGuildData::SetGuildPoint
_TEXT	ENDS
PUBLIC	?SetGuildCurPoint@ioGuildData@@QAEXK@Z		; ioGuildData::SetGuildCurPoint
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildCurPoint@ioGuildData@@QAEXK@Z
_TEXT	SEGMENT
_dwCurGuildPoint$ = 8					; size = 4
?SetGuildCurPoint@ioGuildData@@QAEXK@Z PROC		; ioGuildData::SetGuildCurPoint, COMDAT
; _this$ = ecx

; 97   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 98   : 	m_dwCurGuildPoint = dwCurGuildPoint;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwCurGuildPoint$[ebp]
  00006	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 99   : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetGuildCurPoint@ioGuildData@@QAEXK@Z ENDP		; ioGuildData::SetGuildCurPoint
_TEXT	ENDS
PUBLIC	?SetGuildRegDate@ioGuildData@@QAEXK@Z		; ioGuildData::SetGuildRegDate
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildRegDate@ioGuildData@@QAEXK@Z
_TEXT	SEGMENT
_dwGuildRegDate$ = 8					; size = 4
?SetGuildRegDate@ioGuildData@@QAEXK@Z PROC		; ioGuildData::SetGuildRegDate, COMDAT
; _this$ = ecx

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 103  : 	m_dwGuildRegDate = dwGuildRegDate;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwGuildRegDate$[ebp]
  00006	89 41 24	 mov	 DWORD PTR [ecx+36], eax

; 104  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetGuildRegDate@ioGuildData@@QAEXK@Z ENDP		; ioGuildData::SetGuildRegDate
_TEXT	ENDS
PUBLIC	?SetGuildBonus@ioGuildData@@QAEXM@Z		; ioGuildData::SetGuildBonus
EXTRN	__fltused:DWORD
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildBonus@ioGuildData@@QAEXM@Z
_TEXT	SEGMENT
_fGuildBonus$ = 8					; size = 4
?SetGuildBonus@ioGuildData@@QAEXM@Z PROC		; ioGuildData::SetGuildBonus, COMDAT
; _this$ = ecx

; 107  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 108  : 	m_fGuildBonus = fGuildBonus;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fGuildBonus$[ebp]
  00008	f3 0f 11 41 28	 movss	 DWORD PTR [ecx+40], xmm0

; 109  : }

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?SetGuildBonus@ioGuildData@@QAEXM@Z ENDP		; ioGuildData::SetGuildBonus
_TEXT	ENDS
PUBLIC	?SetGuildName@ioGuildData@@QAEXABVioHashString@@@Z ; ioGuildData::SetGuildName
EXTRN	__imp_??4ioHashString@@QAEAAV0@ABV0@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildName@ioGuildData@@QAEXABVioHashString@@@Z
_TEXT	SEGMENT
_szGuildName$ = 8					; size = 4
?SetGuildName@ioGuildData@@QAEXABVioHashString@@@Z PROC	; ioGuildData::SetGuildName, COMDAT
; _this$ = ecx

; 112  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 113  : 	m_szGuildName = szGuildName;

  00003	83 c1 2c	 add	 ecx, 44			; 0000002cH

; 114  : }

  00006	5d		 pop	 ebp

; 113  : 	m_szGuildName = szGuildName;

  00007	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
?SetGuildName@ioGuildData@@QAEXABVioHashString@@@Z ENDP	; ioGuildData::SetGuildName
_TEXT	ENDS
PUBLIC	?SetGuildTitle@ioGuildData@@QAEXABVioHashString@@@Z ; ioGuildData::SetGuildTitle
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildTitle@ioGuildData@@QAEXABVioHashString@@@Z
_TEXT	SEGMENT
_szGuildTitle$ = 8					; size = 4
?SetGuildTitle@ioGuildData@@QAEXABVioHashString@@@Z PROC ; ioGuildData::SetGuildTitle, COMDAT
; _this$ = ecx

; 117  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 118  : 	m_szGuildTitle = szGuildTitle;

  00003	83 c1 3c	 add	 ecx, 60			; 0000003cH

; 119  : }

  00006	5d		 pop	 ebp

; 118  : 	m_szGuildTitle = szGuildTitle;

  00007	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
?SetGuildTitle@ioGuildData@@QAEXABVioHashString@@@Z ENDP ; ioGuildData::SetGuildTitle
_TEXT	ENDS
PUBLIC	?SetGuildRoomOpen@ioGuildData@@QAEXH@Z		; ioGuildData::SetGuildRoomOpen
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildRoomOpen@ioGuildData@@QAEXH@Z
_TEXT	SEGMENT
_bGuildRoomOpen$ = 8					; size = 4
?SetGuildRoomOpen@ioGuildData@@QAEXH@Z PROC		; ioGuildData::SetGuildRoomOpen, COMDAT
; _this$ = ecx

; 122  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 123  : 	m_bGuildRoomOpen = bGuildRoomOpen;

  00003	8b 45 08	 mov	 eax, DWORD PTR _bGuildRoomOpen$[ebp]
  00006	89 41 54	 mov	 DWORD PTR [ecx+84], eax

; 124  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetGuildRoomOpen@ioGuildData@@QAEXH@Z ENDP		; ioGuildData::SetGuildRoomOpen
_TEXT	ENDS
PUBLIC	??1GuildUser@ioGuildData@@QAE@XZ		; ioGuildData::GuildUser::~GuildUser
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1GuildUser@ioGuildData@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1GuildUser@ioGuildData@@QAE@XZ$0
__ehfuncinfo$??1GuildUser@ioGuildData@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1GuildUser@ioGuildData@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1GuildUser@ioGuildData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1GuildUser@ioGuildData@@QAE@XZ PROC			; ioGuildData::GuildUser::~GuildUser, COMDAT
; _this$ = ecx
  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1GuildUser@ioGuildData@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00011	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00017	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001b	8d 4f 24	 lea	 ecx, DWORD PTR [edi+36]
  0001e	ff d6		 call	 esi
  00020	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00024	8d 4f 14	 lea	 ecx, DWORD PTR [edi+20]
  00027	ff d6		 call	 esi
  00029	e8 00 00 00 00	 call	 __EH_epilog3
  0002e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1GuildUser@ioGuildData@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 14	 add	 ecx, 20			; 00000014H
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??1GuildUser@ioGuildData@@QAE@XZ:
  0000c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00010	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00013	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00016	33 c8		 xor	 ecx, eax
  00018	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1GuildUser@ioGuildData@@QAE@XZ
  00022	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1GuildUser@ioGuildData@@QAE@XZ ENDP			; ioGuildData::GuildUser::~GuildUser
PUBLIC	__$ArrayPad$
PUBLIC	?ProcessTitleSync@ioGuildData@@QAEXXZ		; ioGuildData::ProcessTitleSync
EXTRN	??1SP2Packet@@UAE@XZ:PROC			; SP2Packet::~SP2Packet
EXTRN	?SendToServer@TCPNetwork@@YAXAAVSP2Packet@@@Z:PROC ; TCPNetwork::SendToServer
EXTRN	??6SP2Packet@@QAEAAV0@K@Z:PROC			; SP2Packet::operator<<
EXTRN	??0SP2Packet@@QAE@K@Z:PROC			; SP2Packet::SP2Packet
EXTRN	__imp_?GetLoopSec@ioFrameTimer@@QBEKXZ:PROC
EXTRN	__imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ:PROC
EXTRN	__chkstk:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ProcessTitleSync@ioGuildData@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ProcessTitleSync@ioGuildData@@QAEXXZ$0
__ehfuncinfo$?ProcessTitleSync@ioGuildData@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ProcessTitleSync@ioGuildData@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?ProcessTitleSync@ioGuildData@@QAEXXZ
_TEXT	SEGMENT
_kPacket$508263 = -32808				; size = 32792
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?ProcessTitleSync@ioGuildData@@QAEXXZ PROC		; ioGuildData::ProcessTitleSync, COMDAT
; _this$ = ecx

; 317  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ProcessTitleSync@ioGuildData@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 1c 80 00 00	 mov	 eax, 32796		; 0000801cH
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	56		 push	 esi
  00026	57		 push	 edi
  00027	50		 push	 eax
  00028	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 318  : 	if( m_dwSyncTitleTime == 0 || 
; 319  : 		FRAMEGETTIME() - m_dwSyncTitleTime > 300000 )    //5분에 한번만 동기화

  00031	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00037	8b f1		 mov	 esi, ecx
  00039	83 7e 6c 00	 cmp	 DWORD PTR [esi+108], 0
  0003d	74 14		 je	 SHORT $LN1@ProcessTit
  0003f	ff d7		 call	 edi
  00041	8b c8		 mov	 ecx, eax
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00049	2b 46 6c	 sub	 eax, DWORD PTR [esi+108]
  0004c	3d e0 93 04 00	 cmp	 eax, 300000		; 000493e0H
  00051	76 4b		 jbe	 SHORT $LN2@ProcessTit
$LN1@ProcessTit:

; 320  : 	{
; 321  : 		m_dwSyncTitleTime = FRAMEGETTIME();

  00053	ff d7		 call	 edi
  00055	8b c8		 mov	 ecx, eax
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ

; 322  : 		SP2Packet kPacket( CTPK_GUILD_TITLE_SYNC );

  0005d	68 62 01 00 00	 push	 354			; 00000162H
  00062	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$508263[ebp]
  00068	89 46 6c	 mov	 DWORD PTR [esi+108], eax
  0006b	e8 00 00 00 00	 call	 ??0SP2Packet@@QAE@K@Z	; SP2Packet::SP2Packet

; 323  : 		kPacket << m_dwGuildIndex;

  00070	ff 76 04	 push	 DWORD PTR [esi+4]
  00073	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00077	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$508263[ebp]
  0007d	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@K@Z ; SP2Packet::operator<<

; 324  : 		TCPNetwork::SendToServer( kPacket );

  00082	8d 85 d8 7f ff
	ff		 lea	 eax, DWORD PTR _kPacket$508263[ebp]
  00088	50		 push	 eax
  00089	e8 00 00 00 00	 call	 ?SendToServer@TCPNetwork@@YAXAAVSP2Packet@@@Z ; TCPNetwork::SendToServer

; 325  : 	}

  0008e	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00092	59		 pop	 ecx
  00093	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$508263[ebp]
  00099	e8 00 00 00 00	 call	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
$LN2@ProcessTit:

; 326  : }

  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ae	33 cd		 xor	 ecx, ebp
  000b0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b5	c9		 leave
  000b6	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ProcessTitleSync@ioGuildData@@QAEXXZ$0:
  00000	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$508263[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
__ehhandler$?ProcessTitleSync@ioGuildData@@QAEXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a d8 7f ff
	ff		 mov	 ecx, DWORD PTR [edx-32808]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ProcessTitleSync@ioGuildData@@QAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ProcessTitleSync@ioGuildData@@QAEXXZ ENDP		; ioGuildData::ProcessTitleSync
PUBLIC	__$ArrayPad$
PUBLIC	?ProcessUserListSync@ioGuildData@@QAEXXZ	; ioGuildData::ProcessUserListSync
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ProcessUserListSync@ioGuildData@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ProcessUserListSync@ioGuildData@@QAEXXZ$0
__ehfuncinfo$?ProcessUserListSync@ioGuildData@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ProcessUserListSync@ioGuildData@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?ProcessUserListSync@ioGuildData@@QAEXXZ
_TEXT	SEGMENT
_kPacket$508269 = -32808				; size = 32792
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?ProcessUserListSync@ioGuildData@@QAEXXZ PROC		; ioGuildData::ProcessUserListSync, COMDAT
; _this$ = ecx

; 329  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ProcessUserListSync@ioGuildData@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 1c 80 00 00	 mov	 eax, 32796		; 0000801cH
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	56		 push	 esi
  00026	57		 push	 edi
  00027	50		 push	 eax
  00028	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 330  : 	if( m_dwSyncUserListTime == 0 ||
; 331  : 		FRAMEGETTIME() - m_dwSyncUserListTime > 300000 )    //5분에 한번만 동기화

  00031	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00037	8b f1		 mov	 esi, ecx
  00039	83 7e 70 00	 cmp	 DWORD PTR [esi+112], 0
  0003d	74 14		 je	 SHORT $LN1@ProcessUse
  0003f	ff d7		 call	 edi
  00041	8b c8		 mov	 ecx, eax
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00049	2b 46 70	 sub	 eax, DWORD PTR [esi+112]
  0004c	3d e0 93 04 00	 cmp	 eax, 300000		; 000493e0H
  00051	76 55		 jbe	 SHORT $LN2@ProcessUse
$LN1@ProcessUse:

; 332  : 	{
; 333  : 		m_dwSyncUserListTime = FRAMEGETTIME();

  00053	ff d7		 call	 edi
  00055	8b c8		 mov	 ecx, eax
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ

; 334  : 		SP2Packet kPacket( CTPK_GUILD_USER_LIST );

  0005d	68 71 01 00 00	 push	 369			; 00000171H
  00062	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$508269[ebp]
  00068	89 46 70	 mov	 DWORD PTR [esi+112], eax
  0006b	e8 00 00 00 00	 call	 ??0SP2Packet@@QAE@K@Z	; SP2Packet::SP2Packet

; 335  : 		kPacket << m_dwGuildIndex << m_dwGuildJoinUser;

  00070	ff 76 14	 push	 DWORD PTR [esi+20]
  00073	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00077	ff 76 04	 push	 DWORD PTR [esi+4]
  0007a	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$508269[ebp]
  00080	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@K@Z ; SP2Packet::operator<<
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@K@Z ; SP2Packet::operator<<

; 336  : 		TCPNetwork::SendToServer( kPacket );

  0008c	8d 85 d8 7f ff
	ff		 lea	 eax, DWORD PTR _kPacket$508269[ebp]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ?SendToServer@TCPNetwork@@YAXAAVSP2Packet@@@Z ; TCPNetwork::SendToServer

; 337  : 	}

  00098	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0009c	59		 pop	 ecx
  0009d	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$508269[ebp]
  000a3	e8 00 00 00 00	 call	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
$LN2@ProcessUse:

; 338  : }

  000a8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b2	59		 pop	 ecx
  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b8	33 cd		 xor	 ecx, ebp
  000ba	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bf	c9		 leave
  000c0	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ProcessUserListSync@ioGuildData@@QAEXXZ$0:
  00000	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$508269[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
__ehhandler$?ProcessUserListSync@ioGuildData@@QAEXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a d8 7f ff
	ff		 mov	 ecx, DWORD PTR [edx-32808]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ProcessUserListSync@ioGuildData@@QAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ProcessUserListSync@ioGuildData@@QAEXXZ ENDP		; ioGuildData::ProcessUserListSync
PUBLIC	?IsUserListUpdate@ioGuildData@@QAE_NXZ		; ioGuildData::IsUserListUpdate
; Function compile flags: /Ogsp
;	COMDAT ?IsUserListUpdate@ioGuildData@@QAE_NXZ
_TEXT	SEGMENT
?IsUserListUpdate@ioGuildData@@QAE_NXZ PROC		; ioGuildData::IsUserListUpdate, COMDAT
; _this$ = ecx

; 342  : 	bool bReturn = m_bUserListUpdate;

  00000	8a 41 74	 mov	 al, BYTE PTR [ecx+116]

; 343  : 	m_bUserListUpdate = false;

  00003	c6 41 74 00	 mov	 BYTE PTR [ecx+116], 0

; 344  : 	return bReturn;
; 345  : }

  00007	c3		 ret	 0
?IsUserListUpdate@ioGuildData@@QAE_NXZ ENDP		; ioGuildData::IsUserListUpdate
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1exception@std@@UAE@XZ
  00012	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00016	74 07		 je	 SHORT $LN1@scalar
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	59		 pop	 ecx
$LN1@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	return (_Where);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 58   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 62   : 	}

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 490  : 		{	// find length of null-terminated string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 491  : 		return (_CSTD strlen(_First));

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL3@length:
  00009	8a 08		 mov	 cl, BYTE PTR [eax]
  0000b	40		 inc	 eax
  0000c	84 c9		 test	 cl, cl
  0000e	75 f9		 jne	 SHORT $LL3@length
  00010	2b c2		 sub	 eax, edx

; 492  : 		}

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
EXTRN	_memcpy:PROC
; Function compile flags: /Ogsp
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 496  : 		{	// copy [_First1, _First1 + _Count) to [_First2, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 498  : 		}

  00003	5d		 pop	 ebp

; 497  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

  00004	e9 00 00 00 00	 jmp	 _memcpy
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
EXTRN	__imp__memmove:PROC
; Function compile flags: /Ogsp
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 516  : 		{	// copy [_First1, _First1 + _Count) to [_First2, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 518  : 		}

  00003	5d		 pop	 ebp

; 517  : 		return ((_Elem *)_CSTD memmove(_First1, _First2, _Count));

  00004	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp__memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogsp
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 526  : 		{	// assign an element

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 527  : 		_Left = _Right;

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	8a 00		 mov	 al, BYTE PTR [eax]
  00008	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000b	88 01		 mov	 BYTE PTR [ecx], al

; 528  : 		}

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	??1ioINILoader_e@@QAE@XZ			; ioINILoader_e::~ioINILoader_e
EXTRN	__imp_??1ioINILoader@@QAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1ioINILoader_e@@QAE@XZ
_TEXT	SEGMENT
??1ioINILoader_e@@QAE@XZ PROC				; ioINILoader_e::~ioINILoader_e, COMDAT
; _this$ = ecx
  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
??1ioINILoader_e@@QAE@XZ ENDP				; ioINILoader_e::~ioINILoader_e
_TEXT	ENDS
PUBLIC	?IsMyGuild@ioGuildInfo@@QAE_NK@Z		; ioGuildInfo::IsMyGuild
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
;	COMDAT ?IsMyGuild@ioGuildInfo@@QAE_NK@Z
_TEXT	SEGMENT
_dwGuildIndex$ = 8					; size = 4
?IsMyGuild@ioGuildInfo@@QAE_NK@Z PROC			; ioGuildInfo::IsMyGuild, COMDAT
; _this$ = ecx

; 925  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 926  : 	if( m_dwGuildIndex == dwGuildIndex )

  00003	8b 81 90 00 00
	00		 mov	 eax, DWORD PTR [ecx+144]
  00009	3b 45 08	 cmp	 eax, DWORD PTR _dwGuildIndex$[ebp]
  0000c	0f 94 c0	 sete	 al

; 927  : 		return true;
; 928  : 	return false;
; 929  : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?IsMyGuild@ioGuildInfo@@QAE_NK@Z ENDP			; ioGuildInfo::IsMyGuild
_TEXT	ENDS
PUBLIC	?IsGuild@ioGuildInfo@@QAE_NXZ			; ioGuildInfo::IsGuild
; Function compile flags: /Ogsp
;	COMDAT ?IsGuild@ioGuildInfo@@QAE_NXZ
_TEXT	SEGMENT
?IsGuild@ioGuildInfo@@QAE_NXZ PROC			; ioGuildInfo::IsGuild, COMDAT
; _this$ = ecx

; 944  : 	if( m_dwGuildIndex == 0 )

  00000	83 b9 90 00 00
	00 00		 cmp	 DWORD PTR [ecx+144], 0
  00007	0f 95 c0	 setne	 al

; 945  : 		return false;
; 946  : 	return true;
; 947  : }

  0000a	c3		 ret	 0
?IsGuild@ioGuildInfo@@QAE_NXZ ENDP			; ioGuildInfo::IsGuild
_TEXT	ENDS
PUBLIC	??1InvitationUser@ioGuildInfo@@QAE@XZ		; ioGuildInfo::InvitationUser::~InvitationUser
; Function compile flags: /Ogsp
;	COMDAT ??1InvitationUser@ioGuildInfo@@QAE@XZ
_TEXT	SEGMENT
??1InvitationUser@ioGuildInfo@@QAE@XZ PROC		; ioGuildInfo::InvitationUser::~InvitationUser, COMDAT
; _this$ = ecx
  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
??1InvitationUser@ioGuildInfo@@QAE@XZ ENDP		; ioGuildInfo::InvitationUser::~InvitationUser
_TEXT	ENDS
PUBLIC	?IsGuildMaster@ioGuildInfo@@QAE_NXZ		; ioGuildInfo::IsGuildMaster
EXTRN	__imp_??8ioHashString@@QBE_NABV0@@Z:PROC
EXTRN	__imp_??0ioHashString@@QAE@PBD@Z:PROC
EXTRN	?GetLocal@ioLocalManager@@QAEPAVioLocalParent@@W4LocalType@ioLocalManagerParent@@@Z:PROC ; ioLocalManager::GetLocal
EXTRN	?GetSingleton@ioLocalManager@@SAAAV1@XZ:PROC	; ioLocalManager::GetSingleton
EXTRN	__imp_?GetLocalType@ioLocalManagerParent@@SA?AW4LocalType@1@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?IsGuildMaster@ioGuildInfo@@QAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?IsGuildMaster@ioGuildInfo@@QAE_NXZ$0
__ehfuncinfo$?IsGuildMaster@ioGuildInfo@@QAE_NXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?IsGuildMaster@ioGuildInfo@@QAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?IsGuildMaster@ioGuildInfo@@QAE_NXZ
_TEXT	SEGMENT
$T518051 = -28						; size = 16
__$EHRec$ = -12						; size = 12
?IsGuildMaster@ioGuildInfo@@QAE_NXZ PROC		; ioGuildInfo::IsGuildMaster, COMDAT
; _this$ = ecx

; 1193 : {

  00000	6a 10		 push	 16			; 00000010H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?IsGuildMaster@ioGuildInfo@@QAE_NXZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 1194 : 	ioLocalParent *pLocal = g_LocalMgr.GetLocal( ioLocalManager::GetLocalType() );

  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLocalType@ioLocalManagerParent@@SA?AW4LocalType@1@XZ
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?GetSingleton@ioLocalManager@@SAAAV1@XZ ; ioLocalManager::GetSingleton
  0001a	8b c8		 mov	 ecx, eax
  0001c	e8 00 00 00 00	 call	 ?GetLocal@ioLocalManager@@QAEPAVioLocalParent@@W4LocalType@ioLocalManagerParent@@@Z ; ioLocalManager::GetLocal

; 1195 : 	if( pLocal )

  00021	85 c0		 test	 eax, eax
  00023	74 38		 je	 SHORT $LN1@IsGuildMas

; 1196 : 	{
; 1197 : 		return ( m_szGuildPosition == pLocal->GetGuildMasterPostion() );

  00025	8b 10		 mov	 edx, DWORD PTR [eax]
  00027	8b c8		 mov	 ecx, eax
  00029	ff 52 5c	 call	 DWORD PTR [edx+92]
  0002c	50		 push	 eax
  0002d	8d 4d e4	 lea	 ecx, DWORD PTR $T518051[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00036	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	8d 45 e4	 lea	 eax, DWORD PTR $T518051[ebp]
  0003d	50		 push	 eax
  0003e	8d 8e a4 00 00
	00		 lea	 ecx, DWORD PTR [esi+164]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  0004a	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8d 4d e4	 lea	 ecx, DWORD PTR $T518051[ebp]
  00051	8a d8		 mov	 bl, al
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00059	8a c3		 mov	 al, bl
  0005b	eb 02		 jmp	 SHORT $LN2@IsGuildMas
$LN1@IsGuildMas:

; 1198 : 	}
; 1199 : 
; 1200 : 	return false;

  0005d	32 c0		 xor	 al, al
$LN2@IsGuildMas:

; 1201 : }

  0005f	e8 00 00 00 00	 call	 __EH_epilog3
  00064	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?IsGuildMaster@ioGuildInfo@@QAE_NXZ$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR $T518051[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?IsGuildMaster@ioGuildInfo@@QAE_NXZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?IsGuildMaster@ioGuildInfo@@QAE_NXZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?IsGuildMaster@ioGuildInfo@@QAE_NXZ ENDP		; ioGuildInfo::IsGuildMaster
PUBLIC	?IsGuildSecondMaster@ioGuildInfo@@QAE_NXZ	; ioGuildInfo::IsGuildSecondMaster
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?IsGuildSecondMaster@ioGuildInfo@@QAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?IsGuildSecondMaster@ioGuildInfo@@QAE_NXZ$0
__ehfuncinfo$?IsGuildSecondMaster@ioGuildInfo@@QAE_NXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?IsGuildSecondMaster@ioGuildInfo@@QAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?IsGuildSecondMaster@ioGuildInfo@@QAE_NXZ
_TEXT	SEGMENT
$T518062 = -28						; size = 16
__$EHRec$ = -12						; size = 12
?IsGuildSecondMaster@ioGuildInfo@@QAE_NXZ PROC		; ioGuildInfo::IsGuildSecondMaster, COMDAT
; _this$ = ecx

; 1204 : {

  00000	6a 10		 push	 16			; 00000010H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?IsGuildSecondMaster@ioGuildInfo@@QAE_NXZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 1205 : 	ioLocalParent *pLocal = g_LocalMgr.GetLocal( ioLocalManager::GetLocalType() );

  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLocalType@ioLocalManagerParent@@SA?AW4LocalType@1@XZ
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?GetSingleton@ioLocalManager@@SAAAV1@XZ ; ioLocalManager::GetSingleton
  0001a	8b c8		 mov	 ecx, eax
  0001c	e8 00 00 00 00	 call	 ?GetLocal@ioLocalManager@@QAEPAVioLocalParent@@W4LocalType@ioLocalManagerParent@@@Z ; ioLocalManager::GetLocal

; 1206 : 	if( pLocal )

  00021	85 c0		 test	 eax, eax
  00023	74 38		 je	 SHORT $LN1@IsGuildSec

; 1207 : 	{
; 1208 : 		return ( m_szGuildPosition == pLocal->GetGuildSecondMasterPosition() );

  00025	8b 10		 mov	 edx, DWORD PTR [eax]
  00027	8b c8		 mov	 ecx, eax
  00029	ff 52 60	 call	 DWORD PTR [edx+96]
  0002c	50		 push	 eax
  0002d	8d 4d e4	 lea	 ecx, DWORD PTR $T518062[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00036	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	8d 45 e4	 lea	 eax, DWORD PTR $T518062[ebp]
  0003d	50		 push	 eax
  0003e	8d 8e a4 00 00
	00		 lea	 ecx, DWORD PTR [esi+164]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  0004a	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8d 4d e4	 lea	 ecx, DWORD PTR $T518062[ebp]
  00051	8a d8		 mov	 bl, al
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00059	8a c3		 mov	 al, bl
  0005b	eb 02		 jmp	 SHORT $LN2@IsGuildSec
$LN1@IsGuildSec:

; 1209 : 	}
; 1210 : 
; 1211 : 	return false;

  0005d	32 c0		 xor	 al, al
$LN2@IsGuildSec:

; 1212 : }

  0005f	e8 00 00 00 00	 call	 __EH_epilog3
  00064	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?IsGuildSecondMaster@ioGuildInfo@@QAE_NXZ$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR $T518062[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?IsGuildSecondMaster@ioGuildInfo@@QAE_NXZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?IsGuildSecondMaster@ioGuildInfo@@QAE_NXZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?IsGuildSecondMaster@ioGuildInfo@@QAE_NXZ ENDP		; ioGuildInfo::IsGuildSecondMaster
PUBLIC	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 1c		 push	 28			; 0000001cH
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 880  : 		}

  0000b	c3		 ret	 0
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
_TEXT	ENDS
PUBLIC	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pos$[ebp]
  00006	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00009	03 01		 add	 eax, DWORD PTR [ecx]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
_TEXT	ENDS
PUBLIC	?empty@?$vector@KV?$allocator@K@std@@@std@@QBE_NXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::empty
; Function compile flags: /Ogsp
;	COMDAT ?empty@?$vector@KV?$allocator@K@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@KV?$allocator@K@std@@@std@@QBE_NXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::empty, COMDAT
; _this$ = ecx

; 889  : 		return (this->_Myfirst == this->_Mylast);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00005	f7 d8		 neg	 eax
  00007	1b c0		 sbb	 eax, eax
  00009	40		 inc	 eax

; 890  : 		}

  0000a	c3		 ret	 0
?empty@?$vector@KV?$allocator@K@std@@@std@@QBE_NXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::empty
_TEXT	ENDS
PUBLIC	?empty@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBE_NXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::empty
; Function compile flags: /Ogsp
;	COMDAT ?empty@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBE_NXZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::empty, COMDAT
; _this$ = ecx

; 889  : 		return (this->_Myfirst == this->_Mylast);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00005	f7 d8		 neg	 eax
  00007	1b c0		 sbb	 eax, eax
  00009	40		 inc	 eax

; 890  : 		}

  0000a	c3		 ret	 0
?empty@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBE_NXZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::empty
_TEXT	ENDS
PUBLIC	?size@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBEIXZ ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::size
; Function compile flags: /Ogsp
;	COMDAT ?size@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBEIXZ PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 38		 push	 56			; 00000038H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 880  : 		}

  0000b	c3		 ret	 0
?size@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::size
_TEXT	ENDS
PUBLIC	?empty@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBE_NXZ ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::empty
; Function compile flags: /Ogsp
;	COMDAT ?empty@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBE_NXZ PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::empty, COMDAT
; _this$ = ecx

; 889  : 		return (this->_Myfirst == this->_Mylast);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00005	f7 d8		 neg	 eax
  00007	1b c0		 sbb	 eax, eax
  00009	40		 inc	 eax

; 890  : 		}

  0000a	c3		 ret	 0
?empty@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBE_NXZ ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::empty
_TEXT	ENDS
PUBLIC	??A?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEAAUGuildUser@ioGuildData@@I@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEAAUGuildUser@ioGuildData@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEAAUGuildUser@ioGuildData@@I@Z PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pos$[ebp]
  00006	6b c0 38	 imul	 eax, 56			; 00000038H
  00009	03 01		 add	 eax, DWORD PTR [ecx]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEAAUGuildUser@ioGuildData@@I@Z ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::operator[]
_TEXT	ENDS
PUBLIC	??0?$Singleton@VioGuildInfo@@@@QAE@XZ		; Singleton<ioGuildInfo>::Singleton<ioGuildInfo>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
;	COMDAT ??0?$Singleton@VioGuildInfo@@@@QAE@XZ
_TEXT	SEGMENT
??0?$Singleton@VioGuildInfo@@@@QAE@XZ PROC		; Singleton<ioGuildInfo>::Singleton<ioGuildInfo>, COMDAT
; _this$ = ecx

; 27   : 	Singleton()

  00000	8b c1		 mov	 eax, ecx

; 28   : 	{
; 29   : 		assert( !ms_Singleton );
; 30   : 		int offset = (int)(T*)1 - (int)(Singleton <T>*)(T*)1;
; 31   : 		ms_Singleton = (T*)((int)this + offset);

  00002	8d 48 fc	 lea	 ecx, DWORD PTR [eax-4]
  00005	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioGuildInfo@@@@1PAVioGuildInfo@@A, ecx ; Singleton<ioGuildInfo>::ms_Singleton

; 32   : 	}

  0000b	c3		 ret	 0
??0?$Singleton@VioGuildInfo@@@@QAE@XZ ENDP		; Singleton<ioGuildInfo>::Singleton<ioGuildInfo>
_TEXT	ENDS
PUBLIC	??1?$Singleton@VioGuildInfo@@@@QAE@XZ		; Singleton<ioGuildInfo>::~Singleton<ioGuildInfo>
; Function compile flags: /Ogsp
;	COMDAT ??1?$Singleton@VioGuildInfo@@@@QAE@XZ
_TEXT	SEGMENT
??1?$Singleton@VioGuildInfo@@@@QAE@XZ PROC		; Singleton<ioGuildInfo>::~Singleton<ioGuildInfo>, COMDAT
; _this$ = ecx

; 36   : 		assert( ms_Singleton );
; 37   : 		ms_Singleton = 0;

  00000	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioGuildInfo@@@@1PAVioGuildInfo@@A, 0 ; Singleton<ioGuildInfo>::ms_Singleton

; 38   : 	}

  00007	c3		 ret	 0
??1?$Singleton@VioGuildInfo@@@@QAE@XZ ENDP		; Singleton<ioGuildInfo>::~Singleton<ioGuildInfo>
_TEXT	ENDS
PUBLIC	?GetSingleton@?$Singleton@VioGuildInfo@@@@SAAAVioGuildInfo@@XZ ; Singleton<ioGuildInfo>::GetSingleton
; Function compile flags: /Ogsp
;	COMDAT ?GetSingleton@?$Singleton@VioGuildInfo@@@@SAAAVioGuildInfo@@XZ
_TEXT	SEGMENT
?GetSingleton@?$Singleton@VioGuildInfo@@@@SAAAVioGuildInfo@@XZ PROC ; Singleton<ioGuildInfo>::GetSingleton, COMDAT

; 42   : 		assert( ms_Singleton );
; 43   : 		return (*ms_Singleton);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioGuildInfo@@@@1PAVioGuildInfo@@A ; Singleton<ioGuildInfo>::ms_Singleton

; 44   : 	}

  00005	c3		 ret	 0
?GetSingleton@?$Singleton@VioGuildInfo@@@@SAAAVioGuildInfo@@XZ ENDP ; Singleton<ioGuildInfo>::GetSingleton
_TEXT	ENDS
PUBLIC	?size@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QBEIXZ ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QBEIXZ PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 14		 push	 20			; 00000014H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 880  : 		}

  0000b	c3		 ret	 0
?size@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEAAUInvitationUser@ioGuildInfo@@I@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEAAUInvitationUser@ioGuildInfo@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEAAUInvitationUser@ioGuildInfo@@I@Z PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pos$[ebp]
  00006	6b c0 14	 imul	 eax, 20			; 00000014H
  00009	03 01		 add	 eax, DWORD PTR [ecx]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEAAUInvitationUser@ioGuildInfo@@I@Z ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::operator[]
_TEXT	ENDS
PUBLIC	?size@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBEIXZ ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::size
; Function compile flags: /Ogsp
;	COMDAT ?size@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBEIXZ PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBEIXZ ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBEABQAUGuildAttendRwardInfo@@I@Z ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBEABQAUGuildAttendRwardInfo@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBEABQAUGuildAttendRwardInfo@@I@Z PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::operator[], COMDAT
; _this$ = ecx

; 912  : 		{	// subscript nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 913  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 914  : 		if (size() <= _Pos)
; 915  : 			{	// report error
; 916  : 			_DEBUG_ERROR("vector subscript out of range");
; 917  : 			_SCL_SECURE_OUT_OF_RANGE;
; 918  : 			}
; 919  : 
; 920  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 921  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 922  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 923  : 
; 924  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00008	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 925  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBEABQAUGuildAttendRwardInfo@@I@Z ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::operator[]
_TEXT	ENDS
PUBLIC	?size@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBEIXZ ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::size
; Function compile flags: /Ogsp
;	COMDAT ?size@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBEIXZ PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBEIXZ ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBEABQAUGuildRankRwardInfo@@I@Z ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBEABQAUGuildRankRwardInfo@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBEABQAUGuildRankRwardInfo@@I@Z PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::operator[], COMDAT
; _this$ = ecx

; 912  : 		{	// subscript nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 913  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 914  : 		if (size() <= _Pos)
; 915  : 			{	// report error
; 916  : 			_DEBUG_ERROR("vector subscript out of range");
; 917  : 			_SCL_SECURE_OUT_OF_RANGE;
; 918  : 			}
; 919  : 
; 920  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 921  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 922  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 923  : 
; 924  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00008	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 925  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBEABQAUGuildRankRwardInfo@@I@Z ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::operator[]
_TEXT	ENDS
PUBLIC	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	?capacity@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 14		 push	 20			; 00000014H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 778  : 		}

  0000b	c3		 ret	 0
?capacity@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::capacity
_TEXT	ENDS
PUBLIC	?size@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::size
; Function compile flags: /Ogsp
;	COMDAT ?size@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 14		 push	 20			; 00000014H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 880  : 		}

  0000b	c3		 ret	 0
?size@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::size
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IBE_NPBUGuildUser@ioGuildData@@@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Inside
; Function compile flags: /Ogsp
;	COMDAT ?_Inside@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IBE_NPBUGuildUser@ioGuildData@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IBE_NPBUGuildUser@ioGuildData@@@Z PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IBE_NPBUGuildUser@ioGuildData@@@Z ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IBEXPAUGuildUser@ioGuildData@@0@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IBEXPAUGuildUser@ioGuildData@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IBEXPAUGuildUser@ioGuildData@@0@Z PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IBEXPAUGuildUser@ioGuildData@@0@Z ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE@XZ ; std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::~_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::~_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::~_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UGuildUser@ioGuildData@@@std@@QAE@XZ ; std::allocator<ioGuildData::GuildUser>::allocator<ioGuildData::GuildUser>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UGuildUser@ioGuildData@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UGuildUser@ioGuildData@@@std@@QAE@XZ PROC ; std::allocator<ioGuildData::GuildUser>::allocator<ioGuildData::GuildUser>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@UGuildUser@ioGuildData@@@std@@QAE@XZ ENDP ; std::allocator<ioGuildData::GuildUser>::allocator<ioGuildData::GuildUser>
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IBE_NPBQAVioGuildData@@@Z ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IBE_NPBQAVioGuildData@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IBE_NPBQAVioGuildData@@@Z PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside@2
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside@2
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside@2
$LN3@Inside@2:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside@2:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IBE_NPBQAVioGuildData@@@Z ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IBEXPAPAVioGuildData@@0@Z ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IBEXPAPAVioGuildData@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IBEXPAPAVioGuildData@@0@Z PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IBEXPAPAVioGuildData@@0@Z ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE@XZ ; std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> >::~_Vector_val<ioGuildData *,std::allocator<ioGuildData *> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> >::~_Vector_val<ioGuildData *,std::allocator<ioGuildData *> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> >::~_Vector_val<ioGuildData *,std::allocator<ioGuildData *> >
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVioGuildData@@@std@@QAE@XZ	; std::allocator<ioGuildData *>::allocator<ioGuildData *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAVioGuildData@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAVioGuildData@@@std@@QAE@XZ PROC	; std::allocator<ioGuildData *>::allocator<ioGuildData *>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@PAVioGuildData@@@std@@QAE@XZ ENDP	; std::allocator<ioGuildData *>::allocator<ioGuildData *>
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IBE_NPBUInvitationUser@ioGuildInfo@@@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IBE_NPBUInvitationUser@ioGuildInfo@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IBE_NPBUInvitationUser@ioGuildInfo@@@Z PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside@3
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside@3
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside@3
$LN3@Inside@3:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside@3:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IBE_NPBUInvitationUser@ioGuildInfo@@@Z ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IBEXPAUInvitationUser@ioGuildInfo@@0@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IBEXPAUInvitationUser@ioGuildInfo@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IBEXPAUInvitationUser@ioGuildInfo@@0@Z PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IBEXPAUInvitationUser@ioGuildInfo@@0@Z ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE@XZ ; std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::~_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::~_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::~_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAE@XZ ; std::allocator<ioGuildInfo::InvitationUser>::allocator<ioGuildInfo::InvitationUser>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAE@XZ PROC ; std::allocator<ioGuildInfo::InvitationUser>::allocator<ioGuildInfo::InvitationUser>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAE@XZ ENDP ; std::allocator<ioGuildInfo::InvitationUser>::allocator<ioGuildInfo::InvitationUser>
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IBE_NPBQAUGuildAttendRwardInfo@@@Z ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IBE_NPBQAUGuildAttendRwardInfo@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IBE_NPBQAUGuildAttendRwardInfo@@@Z PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside@4
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside@4
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside@4
$LN3@Inside@4:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside@4:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IBE_NPBQAUGuildAttendRwardInfo@@@Z ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IBEXPAPAUGuildAttendRwardInfo@@0@Z ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IBEXPAPAUGuildAttendRwardInfo@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IBEXPAPAUGuildAttendRwardInfo@@0@Z PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IBEXPAPAUGuildAttendRwardInfo@@0@Z ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE@XZ ; std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::~_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::~_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::~_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >
_TEXT	ENDS
PUBLIC	??0?$allocator@PAUGuildAttendRwardInfo@@@std@@QAE@XZ ; std::allocator<GuildAttendRwardInfo *>::allocator<GuildAttendRwardInfo *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAUGuildAttendRwardInfo@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAUGuildAttendRwardInfo@@@std@@QAE@XZ PROC ; std::allocator<GuildAttendRwardInfo *>::allocator<GuildAttendRwardInfo *>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@PAUGuildAttendRwardInfo@@@std@@QAE@XZ ENDP ; std::allocator<GuildAttendRwardInfo *>::allocator<GuildAttendRwardInfo *>
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IBE_NPBQAUGuildRankRwardInfo@@@Z ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IBE_NPBQAUGuildRankRwardInfo@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IBE_NPBQAUGuildRankRwardInfo@@@Z PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside@5
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside@5
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside@5
$LN3@Inside@5:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside@5:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IBE_NPBQAUGuildRankRwardInfo@@@Z ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IBEXPAPAUGuildRankRwardInfo@@0@Z ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IBEXPAPAUGuildRankRwardInfo@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IBEXPAPAUGuildRankRwardInfo@@0@Z PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IBEXPAPAUGuildRankRwardInfo@@0@Z ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE@XZ ; std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::~_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::~_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::~_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >
_TEXT	ENDS
PUBLIC	??0?$allocator@PAUGuildRankRwardInfo@@@std@@QAE@XZ ; std::allocator<GuildRankRwardInfo *>::allocator<GuildRankRwardInfo *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAUGuildRankRwardInfo@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAUGuildRankRwardInfo@@@std@@QAE@XZ PROC	; std::allocator<GuildRankRwardInfo *>::allocator<GuildRankRwardInfo *>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@PAUGuildRankRwardInfo@@@std@@QAE@XZ ENDP	; std::allocator<GuildRankRwardInfo *>::allocator<GuildRankRwardInfo *>
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with null pointer

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0

; 41   : 		}

  00005	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEABUGuildUser@ioGuildData@@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEABUGuildUser@ioGuildData@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEABUGuildUser@ioGuildData@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator*, COMDAT
; _this$ = ecx

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 85   : 		}

  00002	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEABUGuildUser@ioGuildData@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator*
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with null pointer

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0

; 41   : 		}

  00005	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBEABQAVioGuildData@@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBEABQAVioGuildData@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBEABQAVioGuildData@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::operator*, COMDAT
; _this$ = ecx

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 85   : 		}

  00002	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBEABQAVioGuildData@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::operator++, COMDAT
; _this$ = ecx

; 93   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 111  : 		return (*this);
; 112  : 		}

  00005	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::operator++
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBEABQAUGuildRankRwardInfo@@XZ ; std::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBEABQAUGuildRankRwardInfo@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBEABQAUGuildRankRwardInfo@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::operator*, COMDAT
; _this$ = ecx

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 85   : 		}

  00002	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBEABQAUGuildRankRwardInfo@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::operator++, COMDAT
; _this$ = ecx

; 93   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 111  : 		return (*this);
; 112  : 		}

  00005	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::operator++
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBEABQAUGuildAttendRwardInfo@@XZ ; std::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBEABQAUGuildAttendRwardInfo@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBEABQAUGuildAttendRwardInfo@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::operator*, COMDAT
; _this$ = ecx

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 85   : 		}

  00002	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBEABQAUGuildAttendRwardInfo@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::operator++, COMDAT
; _this$ = ecx

; 93   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 111  : 		return (*this);
; 112  : 		}

  00005	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::operator++
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
  0000b	cc		 int	 3
?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Xlen
; Function compile flags: /Ogsp
;	COMDAT ?_Xlen@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBEXXZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@2:
$LN3@Xlen@2:
  0000b	cc		 int	 3
?_Xlen@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBEXXZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Xlen
_TEXT	ENDS
PUBLIC	?capacity@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBEIXZ ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::capacity
; Function compile flags: /Ogsp
;	COMDAT ?capacity@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBEIXZ PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 38		 push	 56			; 00000038H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 778  : 		}

  0000b	c3		 ret	 0
?capacity@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::capacity
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IBEXXZ ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Xlen
; Function compile flags: /Ogsp
;	COMDAT ?_Xlen@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IBEXXZ PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@3:
$LN3@Xlen@3:
  0000b	cc		 int	 3
?_Xlen@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IBEXXZ ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@UGuildUser@ioGuildData@@@std@@QAE@ABV01@@Z ; std::allocator<ioGuildData::GuildUser>::allocator<ioGuildData::GuildUser>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UGuildUser@ioGuildData@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UGuildUser@ioGuildData@@@std@@QAE@ABV01@@Z PROC ; std::allocator<ioGuildData::GuildUser>::allocator<ioGuildData::GuildUser>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@UGuildUser@ioGuildData@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<ioGuildData::GuildUser>::allocator<ioGuildData::GuildUser>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@I@Z ; std::allocator<ioGuildData::GuildUser>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@I@Z PROC ; std::allocator<ioGuildData::GuildUser>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@I@Z ENDP ; std::allocator<ioGuildData::GuildUser>::deallocate
_TEXT	ENDS
PUBLIC	?capacity@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QBEIXZ ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QBEIXZ PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 778  : 		}

  00008	c3		 ret	 0
?capacity@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::capacity
_TEXT	ENDS
PUBLIC	?size@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QBEIXZ ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::size
; Function compile flags: /Ogsp
;	COMDAT ?size@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QBEIXZ PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::size
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IBEXXZ ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Xlen
; Function compile flags: /Ogsp
;	COMDAT ?_Xlen@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IBEXXZ PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@4:
$LN3@Xlen@4:
  0000b	cc		 int	 3
?_Xlen@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IBEXXZ ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVioGuildData@@@std@@QAE@ABV01@@Z ; std::allocator<ioGuildData *>::allocator<ioGuildData *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAVioGuildData@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAVioGuildData@@@std@@QAE@ABV01@@Z PROC	; std::allocator<ioGuildData *>::allocator<ioGuildData *>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@PAVioGuildData@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<ioGuildData *>::allocator<ioGuildData *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVioGuildData@@@std@@QAEXPAPAVioGuildData@@I@Z ; std::allocator<ioGuildData *>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@PAVioGuildData@@@std@@QAEXPAPAVioGuildData@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVioGuildData@@@std@@QAEXPAPAVioGuildData@@I@Z PROC ; std::allocator<ioGuildData *>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVioGuildData@@@std@@QAEXPAPAVioGuildData@@I@Z ENDP ; std::allocator<ioGuildData *>::deallocate
_TEXT	ENDS
PUBLIC	?capacity@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QBEIXZ ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QBEIXZ PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 14		 push	 20			; 00000014H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 778  : 		}

  0000b	c3		 ret	 0
?capacity@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::capacity
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IBEXXZ ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Xlen
; Function compile flags: /Ogsp
;	COMDAT ?_Xlen@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IBEXXZ PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@5:
$LN3@Xlen@5:
  0000b	cc		 int	 3
?_Xlen@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IBEXXZ ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAE@ABV01@@Z ; std::allocator<ioGuildInfo::InvitationUser>::allocator<ioGuildInfo::InvitationUser>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAE@ABV01@@Z PROC ; std::allocator<ioGuildInfo::InvitationUser>::allocator<ioGuildInfo::InvitationUser>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<ioGuildInfo::InvitationUser>::allocator<ioGuildInfo::InvitationUser>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@I@Z ; std::allocator<ioGuildInfo::InvitationUser>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@I@Z PROC ; std::allocator<ioGuildInfo::InvitationUser>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@I@Z ENDP ; std::allocator<ioGuildInfo::InvitationUser>::deallocate
_TEXT	ENDS
PUBLIC	?capacity@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBEIXZ ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBEIXZ PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 778  : 		}

  00008	c3		 ret	 0
?capacity@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBEIXZ ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::capacity
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IBEXXZ ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Xlen
; Function compile flags: /Ogsp
;	COMDAT ?_Xlen@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IBEXXZ PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@6:
$LN3@Xlen@6:
  0000b	cc		 int	 3
?_Xlen@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IBEXXZ ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@PAUGuildAttendRwardInfo@@@std@@QAE@ABV01@@Z ; std::allocator<GuildAttendRwardInfo *>::allocator<GuildAttendRwardInfo *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAUGuildAttendRwardInfo@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAUGuildAttendRwardInfo@@@std@@QAE@ABV01@@Z PROC ; std::allocator<GuildAttendRwardInfo *>::allocator<GuildAttendRwardInfo *>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@PAUGuildAttendRwardInfo@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<GuildAttendRwardInfo *>::allocator<GuildAttendRwardInfo *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAUGuildAttendRwardInfo@@@std@@QAEXPAPAUGuildAttendRwardInfo@@I@Z ; std::allocator<GuildAttendRwardInfo *>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@PAUGuildAttendRwardInfo@@@std@@QAEXPAPAUGuildAttendRwardInfo@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAUGuildAttendRwardInfo@@@std@@QAEXPAPAUGuildAttendRwardInfo@@I@Z PROC ; std::allocator<GuildAttendRwardInfo *>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@PAUGuildAttendRwardInfo@@@std@@QAEXPAPAUGuildAttendRwardInfo@@I@Z ENDP ; std::allocator<GuildAttendRwardInfo *>::deallocate
_TEXT	ENDS
PUBLIC	?capacity@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBEIXZ ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBEIXZ PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 778  : 		}

  00008	c3		 ret	 0
?capacity@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBEIXZ ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::capacity
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IBEXXZ ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Xlen
; Function compile flags: /Ogsp
;	COMDAT ?_Xlen@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IBEXXZ PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@7:
$LN3@Xlen@7:
  0000b	cc		 int	 3
?_Xlen@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IBEXXZ ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@PAUGuildRankRwardInfo@@@std@@QAE@ABV01@@Z ; std::allocator<GuildRankRwardInfo *>::allocator<GuildRankRwardInfo *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAUGuildRankRwardInfo@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAUGuildRankRwardInfo@@@std@@QAE@ABV01@@Z PROC ; std::allocator<GuildRankRwardInfo *>::allocator<GuildRankRwardInfo *>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@PAUGuildRankRwardInfo@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<GuildRankRwardInfo *>::allocator<GuildRankRwardInfo *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAUGuildRankRwardInfo@@@std@@QAEXPAPAUGuildRankRwardInfo@@I@Z ; std::allocator<GuildRankRwardInfo *>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@PAUGuildRankRwardInfo@@@std@@QAEXPAPAUGuildRankRwardInfo@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAUGuildRankRwardInfo@@@std@@QAEXPAPAUGuildRankRwardInfo@@I@Z PROC ; std::allocator<GuildRankRwardInfo *>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@PAUGuildRankRwardInfo@@@std@@QAEXPAPAUGuildRankRwardInfo@@I@Z ENDP ; std::allocator<GuildRankRwardInfo *>::deallocate
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator+=
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator+=, COMDAT
; _this$ = ecx

; 151  : 		{	// increment by integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 152  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 153  : 		if (this->_Getcont() == 0
; 154  : 			|| this->_Ptr + _Off < ((_Myvec *)this->_Getcont())->_Myfirst
; 155  : 			|| ((_Myvec *)this->_Getcont())->_Mylast < this->_Ptr + _Off)
; 156  : 			{	// report error
; 157  : 			_DEBUG_ERROR("vector iterator + offset out of range");
; 158  : 			_SCL_SECURE_OUT_OF_RANGE;
; 159  : 			}
; 160  : 
; 161  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 162  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 163  : 		_SCL_SECURE_VALIDATE_RANGE(
; 164  : 			((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr + _Off
; 165  : 			&& this->_Ptr + _Off <= ((_Myvec *)this->_Getcont())->_Mylast);
; 166  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 167  : 
; 168  : 		_Ptr += _Off;

  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00008	c1 e1 02	 shl	 ecx, 2
  0000b	01 08		 add	 DWORD PTR [eax], ecx

; 169  : 		return (*this);
; 170  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
??Y?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator+=
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE@PAUGuildUser@ioGuildData@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE@PAUGuildUser@ioGuildData@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE@PAUGuildUser@ioGuildData@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE@PAUGuildUser@ioGuildData@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator++, COMDAT
; _this$ = ecx

; 93   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

  00002	83 00 38	 add	 DWORD PTR [eax], 56	; 00000038H

; 111  : 		return (*this);
; 112  : 		}

  00005	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator++
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator+=
; Function compile flags: /Ogsp
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator+=, COMDAT
; _this$ = ecx

; 151  : 		{	// increment by integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 152  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 153  : 		if (this->_Getcont() == 0
; 154  : 			|| this->_Ptr + _Off < ((_Myvec *)this->_Getcont())->_Myfirst
; 155  : 			|| ((_Myvec *)this->_Getcont())->_Mylast < this->_Ptr + _Off)
; 156  : 			{	// report error
; 157  : 			_DEBUG_ERROR("vector iterator + offset out of range");
; 158  : 			_SCL_SECURE_OUT_OF_RANGE;
; 159  : 			}
; 160  : 
; 161  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 162  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 163  : 		_SCL_SECURE_VALIDATE_RANGE(
; 164  : 			((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr + _Off
; 165  : 			&& this->_Ptr + _Off <= ((_Myvec *)this->_Getcont())->_Mylast);
; 166  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 167  : 
; 168  : 		_Ptr += _Off;

  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00008	6b c9 38	 imul	 ecx, 56			; 00000038H
  0000b	01 08		 add	 DWORD PTR [eax], ecx

; 169  : 		return (*this);
; 170  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
??Y?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator+=
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::_Compat
; Function compile flags: /Ogsp
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::_Compat
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAE@PAPAVioGuildData@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAE@PAPAVioGuildData@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAE@PAPAVioGuildData@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAE@PAPAVioGuildData@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::_Compat
; Function compile flags: /Ogsp
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::_Compat
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QAE@PAPAUGuildRankRwardInfo@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QAE@PAPAUGuildRankRwardInfo@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QAE@PAPAUGuildRankRwardInfo@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QAE@PAPAUGuildRankRwardInfo@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::_Compat
; Function compile flags: /Ogsp
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::_Compat
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QAE@PAPAUGuildAttendRwardInfo@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QAE@PAPAUGuildAttendRwardInfo@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QAE@PAPAUGuildAttendRwardInfo@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QAE@PAPAUGuildAttendRwardInfo@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::_Compat
; Function compile flags: /Ogsp
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::_Compat
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QAE@PAUInvitationUser@ioGuildInfo@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::_Vector_const_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QAE@PAUInvitationUser@ioGuildInfo@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QAE@PAUInvitationUser@ioGuildInfo@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::_Vector_const_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QAE@PAUInvitationUser@ioGuildInfo@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::_Vector_const_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::operator+=
; Function compile flags: /Ogsp
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::operator+=, COMDAT
; _this$ = ecx

; 151  : 		{	// increment by integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 152  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 153  : 		if (this->_Getcont() == 0
; 154  : 			|| this->_Ptr + _Off < ((_Myvec *)this->_Getcont())->_Myfirst
; 155  : 			|| ((_Myvec *)this->_Getcont())->_Mylast < this->_Ptr + _Off)
; 156  : 			{	// report error
; 157  : 			_DEBUG_ERROR("vector iterator + offset out of range");
; 158  : 			_SCL_SECURE_OUT_OF_RANGE;
; 159  : 			}
; 160  : 
; 161  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 162  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 163  : 		_SCL_SECURE_VALIDATE_RANGE(
; 164  : 			((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr + _Off
; 165  : 			&& this->_Ptr + _Off <= ((_Myvec *)this->_Getcont())->_Mylast);
; 166  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 167  : 
; 168  : 		_Ptr += _Off;

  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00008	6b c9 14	 imul	 ecx, 20			; 00000014H
  0000b	01 08		 add	 DWORD PTR [eax], ecx

; 169  : 		return (*this);
; 170  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
??Y?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::operator+=
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 49 92 24 09	 mov	 eax, 153391689		; 09249249H

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@VGashaponPresent@@@std@@QBEIXZ ; std::allocator<GashaponPresent>::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@VGashaponPresent@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@VGashaponPresent@@@std@@QBEIXZ PROC ; std::allocator<GashaponPresent>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@VGashaponPresent@@@std@@QBEIXZ ENDP ; std::allocator<GashaponPresent>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UGuildUser@ioGuildData@@@std@@QBEIXZ ; std::allocator<ioGuildData::GuildUser>::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@UGuildUser@ioGuildData@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@UGuildUser@ioGuildData@@@std@@QBEIXZ PROC ; std::allocator<ioGuildData::GuildUser>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 24 49 92 04	 mov	 eax, 76695844		; 04924924H

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@UGuildUser@ioGuildData@@@std@@QBEIXZ ENDP ; std::allocator<ioGuildData::GuildUser>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVioGuildData@@@std@@QBEIXZ ; std::allocator<ioGuildData *>::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@PAVioGuildData@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAVioGuildData@@@std@@QBEIXZ PROC	; std::allocator<ioGuildData *>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@PAVioGuildData@@@std@@QBEIXZ ENDP	; std::allocator<ioGuildData *>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QBEIXZ ; std::allocator<ioGuildInfo::InvitationUser>::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QBEIXZ PROC ; std::allocator<ioGuildInfo::InvitationUser>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QBEIXZ ENDP ; std::allocator<ioGuildInfo::InvitationUser>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAUGuildAttendRwardInfo@@@std@@QBEIXZ ; std::allocator<GuildAttendRwardInfo *>::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@PAUGuildAttendRwardInfo@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAUGuildAttendRwardInfo@@@std@@QBEIXZ PROC ; std::allocator<GuildAttendRwardInfo *>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@PAUGuildAttendRwardInfo@@@std@@QBEIXZ ENDP ; std::allocator<GuildAttendRwardInfo *>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAUGuildRankRwardInfo@@@std@@QBEIXZ ; std::allocator<GuildRankRwardInfo *>::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@PAUGuildRankRwardInfo@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAUGuildRankRwardInfo@@@std@@QBEIXZ PROC ; std::allocator<GuildRankRwardInfo *>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@PAUGuildRankRwardInfo@@@std@@QBEIXZ ENDP ; std::allocator<GuildRankRwardInfo *>::max_size
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::_Compat
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::_Compat
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QAE@PAVGashaponPresent@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QAE@PAVGashaponPresent@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QAE@PAVGashaponPresent@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QAE@PAVGashaponPresent@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::_Compat
; Function compile flags: /Ogsp
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::_Compat
_TEXT	ENDS
PUBLIC	??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ		; sprintf_s<260>
EXTRN	__imp__vsprintf_s:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\stdio.h
;	COMDAT ??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Format$ = 12						; size = 4
??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ PROC		; sprintf_s<260>, COMDAT

; 323  : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(int, sprintf_s, vsprintf_s, _Deref_post_z_ char, _Dest, _In_z_ _Printf_format_string_ const char *, _Format)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000a	68 04 01 00 00	 push	 260			; 00000104H
  0000f	ff 75 08	 push	 DWORD PTR __Dest$[ebp]
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__vsprintf_s
  00018	83 c4 10	 add	 esp, 16			; 00000010H
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ ENDP		; sprintf_s<260>
_TEXT	ENDS
PUBLIC	??$addressof@K@std@@YAPAKAAK@Z			; std::addressof<unsigned long>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@K@std@@YAPAKAAK@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@K@std@@YAPAKAAK@Z PROC			; std::addressof<unsigned long>, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@K@std@@YAPAKAAK@Z ENDP			; std::addressof<unsigned long>
_TEXT	ENDS
PUBLIC	??$forward@K@std@@YA$$QAKAAK@Z			; std::forward<unsigned long>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@K@std@@YA$$QAKAAK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@K@std@@YA$$QAKAAK@Z PROC			; std::forward<unsigned long>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@K@std@@YA$$QAKAAK@Z ENDP			; std::forward<unsigned long>
_TEXT	ENDS
PUBLIC	??$addressof@$$CBUGuildUser@ioGuildData@@@std@@YAPBUGuildUser@ioGuildData@@ABU12@@Z ; std::addressof<ioGuildData::GuildUser const >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@$$CBUGuildUser@ioGuildData@@@std@@YAPBUGuildUser@ioGuildData@@ABU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUGuildUser@ioGuildData@@@std@@YAPBUGuildUser@ioGuildData@@ABU12@@Z PROC ; std::addressof<ioGuildData::GuildUser const >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@$$CBUGuildUser@ioGuildData@@@std@@YAPBUGuildUser@ioGuildData@@ABU12@@Z ENDP ; std::addressof<ioGuildData::GuildUser const >
_TEXT	ENDS
PUBLIC	??$addressof@QAVioGuildData@@@std@@YAPBQAVioGuildData@@ABQAV1@@Z ; std::addressof<ioGuildData * const>
; Function compile flags: /Ogsp
;	COMDAT ??$addressof@QAVioGuildData@@@std@@YAPBQAVioGuildData@@ABQAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAVioGuildData@@@std@@YAPBQAVioGuildData@@ABQAV1@@Z PROC ; std::addressof<ioGuildData * const>, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@QAVioGuildData@@@std@@YAPBQAVioGuildData@@ABQAV1@@Z ENDP ; std::addressof<ioGuildData * const>
_TEXT	ENDS
PUBLIC	??$addressof@$$CBUInvitationUser@ioGuildInfo@@@std@@YAPBUInvitationUser@ioGuildInfo@@ABU12@@Z ; std::addressof<ioGuildInfo::InvitationUser const >
; Function compile flags: /Ogsp
;	COMDAT ??$addressof@$$CBUInvitationUser@ioGuildInfo@@@std@@YAPBUInvitationUser@ioGuildInfo@@ABU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUInvitationUser@ioGuildInfo@@@std@@YAPBUInvitationUser@ioGuildInfo@@ABU12@@Z PROC ; std::addressof<ioGuildInfo::InvitationUser const >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@$$CBUInvitationUser@ioGuildInfo@@@std@@YAPBUInvitationUser@ioGuildInfo@@ABU12@@Z ENDP ; std::addressof<ioGuildInfo::InvitationUser const >
_TEXT	ENDS
PUBLIC	??$addressof@QAUGuildAttendRwardInfo@@@std@@YAPBQAUGuildAttendRwardInfo@@ABQAU1@@Z ; std::addressof<GuildAttendRwardInfo * const>
; Function compile flags: /Ogsp
;	COMDAT ??$addressof@QAUGuildAttendRwardInfo@@@std@@YAPBQAUGuildAttendRwardInfo@@ABQAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAUGuildAttendRwardInfo@@@std@@YAPBQAUGuildAttendRwardInfo@@ABQAU1@@Z PROC ; std::addressof<GuildAttendRwardInfo * const>, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@QAUGuildAttendRwardInfo@@@std@@YAPBQAUGuildAttendRwardInfo@@ABQAU1@@Z ENDP ; std::addressof<GuildAttendRwardInfo * const>
_TEXT	ENDS
PUBLIC	??$addressof@QAUGuildRankRwardInfo@@@std@@YAPBQAUGuildRankRwardInfo@@ABQAU1@@Z ; std::addressof<GuildRankRwardInfo * const>
; Function compile flags: /Ogsp
;	COMDAT ??$addressof@QAUGuildRankRwardInfo@@@std@@YAPBQAUGuildRankRwardInfo@@ABQAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAUGuildRankRwardInfo@@@std@@YAPBQAUGuildRankRwardInfo@@ABQAU1@@Z PROC ; std::addressof<GuildRankRwardInfo * const>, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@QAUGuildRankRwardInfo@@@std@@YAPBQAUGuildRankRwardInfo@@ABQAU1@@Z ENDP ; std::addressof<GuildRankRwardInfo * const>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z
_TEXT	SEGMENT
$T518409 = -12						; size = 12
$T518414 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z PROC ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 49 92 24
	09		 cmp	 ecx, 153391689		; 09249249H
  00015	77 0e		 ja	 SHORT $LN1@Allocate
  00017	6b c9 1c	 imul	 ecx, 28			; 0000001cH
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T518414[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T518414[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T518409[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T518409[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T518409[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ENDP ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??$_Allocate@VGashaponPresent@@@std@@YAPAVGashaponPresent@@IPAV1@@Z ; std::_Allocate<GashaponPresent>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@VGashaponPresent@@@std@@YAPAVGashaponPresent@@IPAV1@@Z
_TEXT	SEGMENT
$T518419 = -12						; size = 12
$T518423 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@VGashaponPresent@@@std@@YAPAVGashaponPresent@@IPAV1@@Z PROC ; std::_Allocate<GashaponPresent>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate@2

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 cc cc cc
	0c		 cmp	 ecx, 214748364		; 0cccccccH
  00015	77 0e		 ja	 SHORT $LN1@Allocate@2
  00017	6b c9 14	 imul	 ecx, 20			; 00000014H
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T518423[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T518423[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T518419[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T518419[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T518419[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate@2:
??$_Allocate@VGashaponPresent@@@std@@YAPAVGashaponPresent@@IPAV1@@Z ENDP ; std::_Allocate<GashaponPresent>
_TEXT	ENDS
PUBLIC	??$_Allocate@UGuildUser@ioGuildData@@@std@@YAPAUGuildUser@ioGuildData@@IPAU12@@Z ; std::_Allocate<ioGuildData::GuildUser>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@UGuildUser@ioGuildData@@@std@@YAPAUGuildUser@ioGuildData@@IPAU12@@Z
_TEXT	SEGMENT
$T518428 = -12						; size = 12
$T518432 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UGuildUser@ioGuildData@@@std@@YAPAUGuildUser@ioGuildData@@IPAU12@@Z PROC ; std::_Allocate<ioGuildData::GuildUser>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate@3

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 24 49 92
	04		 cmp	 ecx, 76695844		; 04924924H
  00015	77 0e		 ja	 SHORT $LN1@Allocate@3
  00017	6b c9 38	 imul	 ecx, 56			; 00000038H
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate@3
$LN1@Allocate@3:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T518432[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T518432[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T518428[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T518428[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T518428[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@3:
$LN5@Allocate@3:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate@3:
??$_Allocate@UGuildUser@ioGuildData@@@std@@YAPAUGuildUser@ioGuildData@@IPAU12@@Z ENDP ; std::_Allocate<ioGuildData::GuildUser>
_TEXT	ENDS
PUBLIC	??$_Allocate@PAVioGuildData@@@std@@YAPAPAVioGuildData@@IPAPAV1@@Z ; std::_Allocate<ioGuildData *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@PAVioGuildData@@@std@@YAPAPAVioGuildData@@IPAPAV1@@Z
_TEXT	SEGMENT
$T518437 = -12						; size = 12
$T518441 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVioGuildData@@@std@@YAPAPAVioGuildData@@IPAPAV1@@Z PROC ; std::_Allocate<ioGuildData *>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3e		 je	 SHORT $LN5@Allocate@4

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate@4
  00017	8b c1		 mov	 eax, ecx
  00019	c1 e0 02	 shl	 eax, 2
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	59		 pop	 ecx
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 26		 jne	 SHORT $LN5@Allocate@4
$LN1@Allocate@4:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	83 65 08 00	 and	 DWORD PTR $T518441[ebp], 0
  0002b	8d 45 08	 lea	 eax, DWORD PTR $T518441[ebp]
  0002e	50		 push	 eax
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T518437[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003d	8d 45 f4	 lea	 eax, DWORD PTR $T518437[ebp]
  00040	50		 push	 eax
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T518437[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@4:
$LN5@Allocate@4:

; 40   : 	}

  0004d	c9		 leave
  0004e	c3		 ret	 0
$LN9@Allocate@4:
??$_Allocate@PAVioGuildData@@@std@@YAPAPAVioGuildData@@IPAPAV1@@Z ENDP ; std::_Allocate<ioGuildData *>
_TEXT	ENDS
PUBLIC	??$_Allocate@UInvitationUser@ioGuildInfo@@@std@@YAPAUInvitationUser@ioGuildInfo@@IPAU12@@Z ; std::_Allocate<ioGuildInfo::InvitationUser>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@UInvitationUser@ioGuildInfo@@@std@@YAPAUInvitationUser@ioGuildInfo@@IPAU12@@Z
_TEXT	SEGMENT
$T518446 = -12						; size = 12
$T518450 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UInvitationUser@ioGuildInfo@@@std@@YAPAUInvitationUser@ioGuildInfo@@IPAU12@@Z PROC ; std::_Allocate<ioGuildInfo::InvitationUser>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate@5

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 cc cc cc
	0c		 cmp	 ecx, 214748364		; 0cccccccH
  00015	77 0e		 ja	 SHORT $LN1@Allocate@5
  00017	6b c9 14	 imul	 ecx, 20			; 00000014H
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate@5
$LN1@Allocate@5:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T518450[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T518450[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T518446[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T518446[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T518446[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@5:
$LN5@Allocate@5:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate@5:
??$_Allocate@UInvitationUser@ioGuildInfo@@@std@@YAPAUInvitationUser@ioGuildInfo@@IPAU12@@Z ENDP ; std::_Allocate<ioGuildInfo::InvitationUser>
_TEXT	ENDS
PUBLIC	??$_Allocate@PAUGuildAttendRwardInfo@@@std@@YAPAPAUGuildAttendRwardInfo@@IPAPAU1@@Z ; std::_Allocate<GuildAttendRwardInfo *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@PAUGuildAttendRwardInfo@@@std@@YAPAPAUGuildAttendRwardInfo@@IPAPAU1@@Z
_TEXT	SEGMENT
$T518455 = -12						; size = 12
$T518459 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAUGuildAttendRwardInfo@@@std@@YAPAPAUGuildAttendRwardInfo@@IPAPAU1@@Z PROC ; std::_Allocate<GuildAttendRwardInfo *>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3e		 je	 SHORT $LN5@Allocate@6

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate@6
  00017	8b c1		 mov	 eax, ecx
  00019	c1 e0 02	 shl	 eax, 2
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	59		 pop	 ecx
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 26		 jne	 SHORT $LN5@Allocate@6
$LN1@Allocate@6:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	83 65 08 00	 and	 DWORD PTR $T518459[ebp], 0
  0002b	8d 45 08	 lea	 eax, DWORD PTR $T518459[ebp]
  0002e	50		 push	 eax
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T518455[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003d	8d 45 f4	 lea	 eax, DWORD PTR $T518455[ebp]
  00040	50		 push	 eax
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T518455[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@6:
$LN5@Allocate@6:

; 40   : 	}

  0004d	c9		 leave
  0004e	c3		 ret	 0
$LN9@Allocate@6:
??$_Allocate@PAUGuildAttendRwardInfo@@@std@@YAPAPAUGuildAttendRwardInfo@@IPAPAU1@@Z ENDP ; std::_Allocate<GuildAttendRwardInfo *>
_TEXT	ENDS
PUBLIC	??$_Allocate@PAUGuildRankRwardInfo@@@std@@YAPAPAUGuildRankRwardInfo@@IPAPAU1@@Z ; std::_Allocate<GuildRankRwardInfo *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@PAUGuildRankRwardInfo@@@std@@YAPAPAUGuildRankRwardInfo@@IPAPAU1@@Z
_TEXT	SEGMENT
$T518464 = -12						; size = 12
$T518468 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAUGuildRankRwardInfo@@@std@@YAPAPAUGuildRankRwardInfo@@IPAPAU1@@Z PROC ; std::_Allocate<GuildRankRwardInfo *>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3e		 je	 SHORT $LN5@Allocate@7

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate@7
  00017	8b c1		 mov	 eax, ecx
  00019	c1 e0 02	 shl	 eax, 2
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	59		 pop	 ecx
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 26		 jne	 SHORT $LN5@Allocate@7
$LN1@Allocate@7:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	83 65 08 00	 and	 DWORD PTR $T518468[ebp], 0
  0002b	8d 45 08	 lea	 eax, DWORD PTR $T518468[ebp]
  0002e	50		 push	 eax
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T518464[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003d	8d 45 f4	 lea	 eax, DWORD PTR $T518464[ebp]
  00040	50		 push	 eax
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T518464[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@7:
$LN5@Allocate@7:

; 40   : 	}

  0004d	c9		 leave
  0004e	c3		 ret	 0
$LN9@Allocate@7:
??$_Allocate@PAUGuildRankRwardInfo@@@std@@YAPAPAUGuildRankRwardInfo@@IPAPAU1@@Z ENDP ; std::_Allocate<GuildRankRwardInfo *>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@K@std@@QAEXPAK$$QAK@Z	; std::allocator<unsigned long>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@K@std@@QAEXPAK$$QAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@K@std@@QAEXPAK$$QAK@Z PROC	; std::allocator<unsigned long>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@construct:

; 203  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?construct@?$allocator@K@std@@QAEXPAK$$QAK@Z ENDP	; std::allocator<unsigned long>::construct
_TEXT	ENDS
PUBLIC	??G?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator-
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??G?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??G?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEHABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator-, COMDAT
; _this$ = ecx

; 190  : 		{	// return difference of iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 191  : 		_Compat(_Right);
; 192  : 		return (this->_Ptr - _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	6a 38		 push	 56			; 00000038H
  0000c	99		 cdq
  0000d	59		 pop	 ecx
  0000e	f7 f9		 idiv	 ecx

; 193  : 		}

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
??G?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEHABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator-
_TEXT	ENDS
PUBLIC	??$_Copy_impl@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<GashaponPresent *,GashaponPresent *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Copy_impl@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_impl@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Copy_impl<GashaponPresent *,GashaponPresent *>, COMDAT

; 2142 : 	{	// copy [_First, _Last) to [_Dest, ...), arbitrary iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2143 : 	for (; _First != _Last; ++_Dest, ++_First)

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00009	74 1a		 je	 SHORT $LN8@Copy_impl
  0000b	56		 push	 esi
  0000c	57		 push	 edi
$LL3@Copy_impl:

; 2144 : 		*_Dest = *_First;

  0000d	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  00010	83 45 10 14	 add	 DWORD PTR __Dest$[ebp], 20 ; 00000014H
  00014	8b f0		 mov	 esi, eax
  00016	6a 05		 push	 5
  00018	83 c0 14	 add	 eax, 20			; 00000014H
  0001b	59		 pop	 ecx
  0001c	f3 a5		 rep movsd
  0001e	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00021	75 ea		 jne	 SHORT $LL3@Copy_impl
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
$LN8@Copy_impl:

; 2145 : 	return (_Dest);

  00025	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 2146 : 	}

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$_Copy_impl@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_impl<GashaponPresent *,GashaponPresent *>
_TEXT	ENDS
PUBLIC	??$forward@AAUGuildUser@ioGuildData@@@std@@YAAAUGuildUser@ioGuildData@@AAU12@@Z ; std::forward<ioGuildData::GuildUser &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAUGuildUser@ioGuildData@@@std@@YAAAUGuildUser@ioGuildData@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUGuildUser@ioGuildData@@@std@@YAAAUGuildUser@ioGuildData@@AAU12@@Z PROC ; std::forward<ioGuildData::GuildUser &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAUGuildUser@ioGuildData@@@std@@YAAAUGuildUser@ioGuildData@@AAU12@@Z ENDP ; std::forward<ioGuildData::GuildUser &>
_TEXT	ENDS
PUBLIC	??$forward@ABUGuildUser@ioGuildData@@@std@@YAABUGuildUser@ioGuildData@@ABU12@@Z ; std::forward<ioGuildData::GuildUser const &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@ABUGuildUser@ioGuildData@@@std@@YAABUGuildUser@ioGuildData@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUGuildUser@ioGuildData@@@std@@YAABUGuildUser@ioGuildData@@ABU12@@Z PROC ; std::forward<ioGuildData::GuildUser const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABUGuildUser@ioGuildData@@@std@@YAABUGuildUser@ioGuildData@@ABU12@@Z ENDP ; std::forward<ioGuildData::GuildUser const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@UGuildUser@ioGuildData@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGuildUser@ioGuildData@@0@Z ; std::_Ptr_cat<ioGuildData::GuildUser,ioGuildData::GuildUser>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@UGuildUser@ioGuildData@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGuildUser@ioGuildData@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UGuildUser@ioGuildData@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGuildUser@ioGuildData@@0@Z PROC ; std::_Ptr_cat<ioGuildData::GuildUser,ioGuildData::GuildUser>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@UGuildUser@ioGuildData@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGuildUser@ioGuildData@@0@Z ENDP ; std::_Ptr_cat<ioGuildData::GuildUser,ioGuildData::GuildUser>
_TEXT	ENDS
PUBLIC	??$forward@AAPAVioGuildData@@@std@@YAAAPAVioGuildData@@AAPAV1@@Z ; std::forward<ioGuildData * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAPAVioGuildData@@@std@@YAAAPAVioGuildData@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVioGuildData@@@std@@YAAAPAVioGuildData@@AAPAV1@@Z PROC ; std::forward<ioGuildData * &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAVioGuildData@@@std@@YAAAPAVioGuildData@@AAPAV1@@Z ENDP ; std::forward<ioGuildData * &>
_TEXT	ENDS
PUBLIC	??$construct@AAPAVioGuildData@@@?$allocator@PAVioGuildData@@@std@@QAEXPAPAVioGuildData@@AAPAV2@@Z ; std::allocator<ioGuildData *>::construct<ioGuildData * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAPAVioGuildData@@@?$allocator@PAVioGuildData@@@std@@QAEXPAPAVioGuildData@@AAPAV2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAPAVioGuildData@@@?$allocator@PAVioGuildData@@@std@@QAEXPAPAVioGuildData@@AAPAV2@@Z PROC ; std::allocator<ioGuildData *>::construct<ioGuildData * &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@construct@2
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@construct@2:

; 209  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
??$construct@AAPAVioGuildData@@@?$allocator@PAVioGuildData@@@std@@QAEXPAPAVioGuildData@@AAPAV2@@Z ENDP ; std::allocator<ioGuildData *>::construct<ioGuildData * &>
_TEXT	ENDS
PUBLIC	??$forward@ABQAVioGuildData@@@std@@YAABQAVioGuildData@@ABQAV1@@Z ; std::forward<ioGuildData * const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABQAVioGuildData@@@std@@YAABQAVioGuildData@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVioGuildData@@@std@@YAABQAVioGuildData@@ABQAV1@@Z PROC ; std::forward<ioGuildData * const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABQAVioGuildData@@@std@@YAABQAVioGuildData@@ABQAV1@@Z ENDP ; std::forward<ioGuildData * const &>
_TEXT	ENDS
PUBLIC	??$forward@AAUInvitationUser@ioGuildInfo@@@std@@YAAAUInvitationUser@ioGuildInfo@@AAU12@@Z ; std::forward<ioGuildInfo::InvitationUser &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@AAUInvitationUser@ioGuildInfo@@@std@@YAAAUInvitationUser@ioGuildInfo@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUInvitationUser@ioGuildInfo@@@std@@YAAAUInvitationUser@ioGuildInfo@@AAU12@@Z PROC ; std::forward<ioGuildInfo::InvitationUser &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAUInvitationUser@ioGuildInfo@@@std@@YAAAUInvitationUser@ioGuildInfo@@AAU12@@Z ENDP ; std::forward<ioGuildInfo::InvitationUser &>
_TEXT	ENDS
PUBLIC	??$forward@ABUInvitationUser@ioGuildInfo@@@std@@YAABUInvitationUser@ioGuildInfo@@ABU12@@Z ; std::forward<ioGuildInfo::InvitationUser const &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@ABUInvitationUser@ioGuildInfo@@@std@@YAABUInvitationUser@ioGuildInfo@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUInvitationUser@ioGuildInfo@@@std@@YAABUInvitationUser@ioGuildInfo@@ABU12@@Z PROC ; std::forward<ioGuildInfo::InvitationUser const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABUInvitationUser@ioGuildInfo@@@std@@YAABUInvitationUser@ioGuildInfo@@ABU12@@Z ENDP ; std::forward<ioGuildInfo::InvitationUser const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@UInvitationUser@ioGuildInfo@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUInvitationUser@ioGuildInfo@@0@Z ; std::_Ptr_cat<ioGuildInfo::InvitationUser,ioGuildInfo::InvitationUser>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@UInvitationUser@ioGuildInfo@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUInvitationUser@ioGuildInfo@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UInvitationUser@ioGuildInfo@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUInvitationUser@ioGuildInfo@@0@Z PROC ; std::_Ptr_cat<ioGuildInfo::InvitationUser,ioGuildInfo::InvitationUser>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@UInvitationUser@ioGuildInfo@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUInvitationUser@ioGuildInfo@@0@Z ENDP ; std::_Ptr_cat<ioGuildInfo::InvitationUser,ioGuildInfo::InvitationUser>
_TEXT	ENDS
PUBLIC	??$forward@AAPAUGuildAttendRwardInfo@@@std@@YAAAPAUGuildAttendRwardInfo@@AAPAU1@@Z ; std::forward<GuildAttendRwardInfo * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAPAUGuildAttendRwardInfo@@@std@@YAAAPAUGuildAttendRwardInfo@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAUGuildAttendRwardInfo@@@std@@YAAAPAUGuildAttendRwardInfo@@AAPAU1@@Z PROC ; std::forward<GuildAttendRwardInfo * &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAUGuildAttendRwardInfo@@@std@@YAAAPAUGuildAttendRwardInfo@@AAPAU1@@Z ENDP ; std::forward<GuildAttendRwardInfo * &>
_TEXT	ENDS
PUBLIC	??$construct@AAPAUGuildAttendRwardInfo@@@?$allocator@PAUGuildAttendRwardInfo@@@std@@QAEXPAPAUGuildAttendRwardInfo@@AAPAU2@@Z ; std::allocator<GuildAttendRwardInfo *>::construct<GuildAttendRwardInfo * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAPAUGuildAttendRwardInfo@@@?$allocator@PAUGuildAttendRwardInfo@@@std@@QAEXPAPAUGuildAttendRwardInfo@@AAPAU2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAPAUGuildAttendRwardInfo@@@?$allocator@PAUGuildAttendRwardInfo@@@std@@QAEXPAPAUGuildAttendRwardInfo@@AAPAU2@@Z PROC ; std::allocator<GuildAttendRwardInfo *>::construct<GuildAttendRwardInfo * &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@construct@3
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@construct@3:

; 209  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
??$construct@AAPAUGuildAttendRwardInfo@@@?$allocator@PAUGuildAttendRwardInfo@@@std@@QAEXPAPAUGuildAttendRwardInfo@@AAPAU2@@Z ENDP ; std::allocator<GuildAttendRwardInfo *>::construct<GuildAttendRwardInfo * &>
_TEXT	ENDS
PUBLIC	??$forward@ABQAUGuildAttendRwardInfo@@@std@@YAABQAUGuildAttendRwardInfo@@ABQAU1@@Z ; std::forward<GuildAttendRwardInfo * const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABQAUGuildAttendRwardInfo@@@std@@YAABQAUGuildAttendRwardInfo@@ABQAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAUGuildAttendRwardInfo@@@std@@YAABQAUGuildAttendRwardInfo@@ABQAU1@@Z PROC ; std::forward<GuildAttendRwardInfo * const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABQAUGuildAttendRwardInfo@@@std@@YAABQAUGuildAttendRwardInfo@@ABQAU1@@Z ENDP ; std::forward<GuildAttendRwardInfo * const &>
_TEXT	ENDS
PUBLIC	??$forward@AAPAUGuildRankRwardInfo@@@std@@YAAAPAUGuildRankRwardInfo@@AAPAU1@@Z ; std::forward<GuildRankRwardInfo * &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@AAPAUGuildRankRwardInfo@@@std@@YAAAPAUGuildRankRwardInfo@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAUGuildRankRwardInfo@@@std@@YAAAPAUGuildRankRwardInfo@@AAPAU1@@Z PROC ; std::forward<GuildRankRwardInfo * &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAUGuildRankRwardInfo@@@std@@YAAAPAUGuildRankRwardInfo@@AAPAU1@@Z ENDP ; std::forward<GuildRankRwardInfo * &>
_TEXT	ENDS
PUBLIC	??$construct@AAPAUGuildRankRwardInfo@@@?$allocator@PAUGuildRankRwardInfo@@@std@@QAEXPAPAUGuildRankRwardInfo@@AAPAU2@@Z ; std::allocator<GuildRankRwardInfo *>::construct<GuildRankRwardInfo * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAPAUGuildRankRwardInfo@@@?$allocator@PAUGuildRankRwardInfo@@@std@@QAEXPAPAUGuildRankRwardInfo@@AAPAU2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAPAUGuildRankRwardInfo@@@?$allocator@PAUGuildRankRwardInfo@@@std@@QAEXPAPAUGuildRankRwardInfo@@AAPAU2@@Z PROC ; std::allocator<GuildRankRwardInfo *>::construct<GuildRankRwardInfo * &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@construct@4
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@construct@4:

; 209  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
??$construct@AAPAUGuildRankRwardInfo@@@?$allocator@PAUGuildRankRwardInfo@@@std@@QAEXPAPAUGuildRankRwardInfo@@AAPAU2@@Z ENDP ; std::allocator<GuildRankRwardInfo *>::construct<GuildRankRwardInfo * &>
_TEXT	ENDS
PUBLIC	??$forward@ABQAUGuildRankRwardInfo@@@std@@YAABQAUGuildRankRwardInfo@@ABQAU1@@Z ; std::forward<GuildRankRwardInfo * const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABQAUGuildRankRwardInfo@@@std@@YAABQAUGuildRankRwardInfo@@ABQAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAUGuildRankRwardInfo@@@std@@YAABQAUGuildRankRwardInfo@@ABQAU1@@Z PROC ; std::forward<GuildRankRwardInfo * const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABQAUGuildRankRwardInfo@@@std@@YAABQAUGuildRankRwardInfo@@ABQAU1@@Z ENDP ; std::forward<GuildRankRwardInfo * const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAVioGuildData@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioGuildData@@0@Z ; std::_Ptr_cat<ioGuildData *,ioGuildData *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAVioGuildData@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioGuildData@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVioGuildData@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioGuildData@@0@Z PROC ; std::_Ptr_cat<ioGuildData *,ioGuildData *>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@PAVioGuildData@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioGuildData@@0@Z ENDP ; std::_Ptr_cat<ioGuildData *,ioGuildData *>
_TEXT	ENDS
PUBLIC	??$_Move@PAPAVioGuildData@@PAPAV1@@std@@YAPAPAVioGuildData@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ioGuildData * *,ioGuildData * *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Move@PAPAVioGuildData@@PAPAV1@@std@@YAPAPAVioGuildData@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAPAVioGuildData@@PAPAV1@@std@@YAPAPAVioGuildData@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<ioGuildData * *,ioGuildData * *>, COMDAT

; 2522 : 	{	// move [_First, _Last) to [_Dest, ...), pointers to scalars

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2523 : 	ptrdiff_t _Count = _Last - _First;

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	57		 push	 edi

; 2524 : 	_CSTD memmove(&*_Dest, &*_First,
; 2525 : 		_Count * sizeof (*_First));

  0000b	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0000e	c1 fe 02	 sar	 esi, 2
  00011	c1 e6 02	 shl	 esi, 2
  00014	56		 push	 esi
  00015	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00018	57		 push	 edi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2526 : 	return (_Dest + _Count);

  00022	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 2527 : 	}

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Move@PAPAVioGuildData@@PAPAV1@@std@@YAPAPAVioGuildData@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<ioGuildData * *,ioGuildData * *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAUGuildAttendRwardInfo@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUGuildAttendRwardInfo@@0@Z ; std::_Ptr_cat<GuildAttendRwardInfo *,GuildAttendRwardInfo *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Ptr_cat@PAUGuildAttendRwardInfo@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUGuildAttendRwardInfo@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUGuildAttendRwardInfo@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUGuildAttendRwardInfo@@0@Z PROC ; std::_Ptr_cat<GuildAttendRwardInfo *,GuildAttendRwardInfo *>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@PAUGuildAttendRwardInfo@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUGuildAttendRwardInfo@@0@Z ENDP ; std::_Ptr_cat<GuildAttendRwardInfo *,GuildAttendRwardInfo *>
_TEXT	ENDS
PUBLIC	??$_Move@PAPAUGuildAttendRwardInfo@@PAPAU1@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<GuildAttendRwardInfo * *,GuildAttendRwardInfo * *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Move@PAPAUGuildAttendRwardInfo@@PAPAU1@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAPAUGuildAttendRwardInfo@@PAPAU1@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<GuildAttendRwardInfo * *,GuildAttendRwardInfo * *>, COMDAT

; 2522 : 	{	// move [_First, _Last) to [_Dest, ...), pointers to scalars

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2523 : 	ptrdiff_t _Count = _Last - _First;

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	57		 push	 edi

; 2524 : 	_CSTD memmove(&*_Dest, &*_First,
; 2525 : 		_Count * sizeof (*_First));

  0000b	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0000e	c1 fe 02	 sar	 esi, 2
  00011	c1 e6 02	 shl	 esi, 2
  00014	56		 push	 esi
  00015	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00018	57		 push	 edi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2526 : 	return (_Dest + _Count);

  00022	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 2527 : 	}

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Move@PAPAUGuildAttendRwardInfo@@PAPAU1@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<GuildAttendRwardInfo * *,GuildAttendRwardInfo * *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAUGuildRankRwardInfo@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUGuildRankRwardInfo@@0@Z ; std::_Ptr_cat<GuildRankRwardInfo *,GuildRankRwardInfo *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Ptr_cat@PAUGuildRankRwardInfo@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUGuildRankRwardInfo@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUGuildRankRwardInfo@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUGuildRankRwardInfo@@0@Z PROC ; std::_Ptr_cat<GuildRankRwardInfo *,GuildRankRwardInfo *>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@PAUGuildRankRwardInfo@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUGuildRankRwardInfo@@0@Z ENDP ; std::_Ptr_cat<GuildRankRwardInfo *,GuildRankRwardInfo *>
_TEXT	ENDS
PUBLIC	??$_Move@PAPAUGuildRankRwardInfo@@PAPAU1@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<GuildRankRwardInfo * *,GuildRankRwardInfo * *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Move@PAPAUGuildRankRwardInfo@@PAPAU1@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAPAUGuildRankRwardInfo@@PAPAU1@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<GuildRankRwardInfo * *,GuildRankRwardInfo * *>, COMDAT

; 2522 : 	{	// move [_First, _Last) to [_Dest, ...), pointers to scalars

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2523 : 	ptrdiff_t _Count = _Last - _First;

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	57		 push	 edi

; 2524 : 	_CSTD memmove(&*_Dest, &*_First,
; 2525 : 		_Count * sizeof (*_First));

  0000b	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0000e	c1 fe 02	 sar	 esi, 2
  00011	c1 e6 02	 shl	 esi, 2
  00014	56		 push	 esi
  00015	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00018	57		 push	 edi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2526 : 	return (_Dest + _Count);

  00022	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 2527 : 	}

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Move@PAPAUGuildRankRwardInfo@@PAPAU1@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<GuildRankRwardInfo * *,GuildRankRwardInfo * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVioGuildData@@@std@@@std@@YAXPAPAVioGuildData@@0AAV?$allocator@PAVioGuildData@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ioGuildData *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVioGuildData@@@std@@@std@@YAXPAPAVioGuildData@@0AAV?$allocator@PAVioGuildData@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAVioGuildData@@@std@@@std@@YAXPAPAVioGuildData@@0AAV?$allocator@PAVioGuildData@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ioGuildData *> >, COMDAT

; 105  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAVioGuildData@@@std@@@std@@YAXPAPAVioGuildData@@0AAV?$allocator@PAVioGuildData@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioGuildData *> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@YAXPAPAUGuildAttendRwardInfo@@0AAV?$allocator@PAUGuildAttendRwardInfo@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<GuildAttendRwardInfo *> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy_range@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@YAXPAPAUGuildAttendRwardInfo@@0AAV?$allocator@PAUGuildAttendRwardInfo@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@YAXPAPAUGuildAttendRwardInfo@@0AAV?$allocator@PAUGuildAttendRwardInfo@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<GuildAttendRwardInfo *> >, COMDAT

; 105  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@YAXPAPAUGuildAttendRwardInfo@@0AAV?$allocator@PAUGuildAttendRwardInfo@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<GuildAttendRwardInfo *> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@YAXPAPAUGuildRankRwardInfo@@0AAV?$allocator@PAUGuildRankRwardInfo@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<GuildRankRwardInfo *> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy_range@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@YAXPAPAUGuildRankRwardInfo@@0AAV?$allocator@PAUGuildRankRwardInfo@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@YAXPAPAUGuildRankRwardInfo@@0AAV?$allocator@PAUGuildRankRwardInfo@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<GuildRankRwardInfo *> >, COMDAT

; 105  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@YAXPAPAUGuildRankRwardInfo@@0AAV?$allocator@PAUGuildRankRwardInfo@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<GuildRankRwardInfo *> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAVioGuildData@@ABQAV1@@std@@YAXPAPAVioGuildData@@ABQAV1@@Z ; std::_Construct<ioGuildData *,ioGuildData * const &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Construct@PAVioGuildData@@ABQAV1@@std@@YAXPAPAVioGuildData@@ABQAV1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAVioGuildData@@ABQAV1@@std@@YAXPAPAVioGuildData@@ABQAV1@@Z PROC ; std::_Construct<ioGuildData *,ioGuildData * const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@Construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@Construct:

; 49   : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Construct@PAVioGuildData@@ABQAV1@@std@@YAXPAPAVioGuildData@@ABQAV1@@Z ENDP ; std::_Construct<ioGuildData *,ioGuildData * const &>
_TEXT	ENDS
PUBLIC	??$_Construct@PAUGuildAttendRwardInfo@@ABQAU1@@std@@YAXPAPAUGuildAttendRwardInfo@@ABQAU1@@Z ; std::_Construct<GuildAttendRwardInfo *,GuildAttendRwardInfo * const &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Construct@PAUGuildAttendRwardInfo@@ABQAU1@@std@@YAXPAPAUGuildAttendRwardInfo@@ABQAU1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAUGuildAttendRwardInfo@@ABQAU1@@std@@YAXPAPAUGuildAttendRwardInfo@@ABQAU1@@Z PROC ; std::_Construct<GuildAttendRwardInfo *,GuildAttendRwardInfo * const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@Construct@2
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@Construct@2:

; 49   : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Construct@PAUGuildAttendRwardInfo@@ABQAU1@@std@@YAXPAPAUGuildAttendRwardInfo@@ABQAU1@@Z ENDP ; std::_Construct<GuildAttendRwardInfo *,GuildAttendRwardInfo * const &>
_TEXT	ENDS
PUBLIC	??$_Construct@PAUGuildRankRwardInfo@@ABQAU1@@std@@YAXPAPAUGuildRankRwardInfo@@ABQAU1@@Z ; std::_Construct<GuildRankRwardInfo *,GuildRankRwardInfo * const &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Construct@PAUGuildRankRwardInfo@@ABQAU1@@std@@YAXPAPAUGuildRankRwardInfo@@ABQAU1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAUGuildRankRwardInfo@@ABQAU1@@std@@YAXPAPAUGuildRankRwardInfo@@ABQAU1@@Z PROC ; std::_Construct<GuildRankRwardInfo *,GuildRankRwardInfo * const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@Construct@3
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@Construct@3:

; 49   : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Construct@PAUGuildRankRwardInfo@@ABQAU1@@std@@YAXPAPAUGuildRankRwardInfo@@ABQAU1@@Z ENDP ; std::_Construct<GuildRankRwardInfo *,GuildRankRwardInfo * const &>
_TEXT	ENDS
PUBLIC	??0GuildUser@ioGuildData@@QAE@ABU01@@Z		; ioGuildData::GuildUser::GuildUser
EXTRN	__imp_??0ioHashString@@QAE@ABV0@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0GuildUser@ioGuildData@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0GuildUser@ioGuildData@@QAE@ABU01@@Z$0
__ehfuncinfo$??0GuildUser@ioGuildData@@QAE@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0GuildUser@ioGuildData@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0GuildUser@ioGuildData@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0GuildUser@ioGuildData@@QAE@ABU01@@Z PROC		; ioGuildData::GuildUser::GuildUser, COMDAT
; _this$ = ecx
  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0GuildUser@ioGuildData@@QAE@ABU01@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	8b 7d 08	 mov	 edi, DWORD PTR ___that$[ebp]
  00014	8b 07		 mov	 eax, DWORD PTR [edi]
  00016	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  0001c	89 06		 mov	 DWORD PTR [esi], eax
  0001e	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00021	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00024	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00027	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002a	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  0002d	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  00030	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00033	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00036	8d 47 14	 lea	 eax, DWORD PTR [edi+20]
  00039	50		 push	 eax
  0003a	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  0003d	ff d3		 call	 ebx
  0003f	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00043	8d 47 24	 lea	 eax, DWORD PTR [edi+36]
  00046	50		 push	 eax
  00047	8d 4e 24	 lea	 ecx, DWORD PTR [esi+36]
  0004a	ff d3		 call	 ebx
  0004c	8a 47 34	 mov	 al, BYTE PTR [edi+52]
  0004f	88 46 34	 mov	 BYTE PTR [esi+52], al
  00052	8a 47 35	 mov	 al, BYTE PTR [edi+53]
  00055	88 46 35	 mov	 BYTE PTR [esi+53], al
  00058	8a 47 36	 mov	 al, BYTE PTR [edi+54]
  0005b	88 46 36	 mov	 BYTE PTR [esi+54], al
  0005e	8b c6		 mov	 eax, esi
  00060	e8 00 00 00 00	 call	 __EH_epilog3
  00065	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0GuildUser@ioGuildData@@QAE@ABU01@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 14	 add	 ecx, 20			; 00000014H
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??0GuildUser@ioGuildData@@QAE@ABU01@@Z:
  0000c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00010	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00013	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00016	33 c8		 xor	 ecx, eax
  00018	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0GuildUser@ioGuildData@@QAE@ABU01@@Z
  00022	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0GuildUser@ioGuildData@@QAE@ABU01@@Z ENDP		; ioGuildData::GuildUser::GuildUser
PUBLIC	??4GuildUser@ioGuildData@@QAEAAU01@ABU01@@Z	; ioGuildData::GuildUser::operator=
; Function compile flags: /Ogsp
;	COMDAT ??4GuildUser@ioGuildData@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4GuildUser@ioGuildData@@QAEAAU01@ABU01@@Z PROC	; ioGuildData::GuildUser::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 7d 08	 mov	 edi, DWORD PTR ___that$[ebp]
  00011	8b 07		 mov	 eax, DWORD PTR [edi]
  00013	89 06		 mov	 DWORD PTR [esi], eax
  00015	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00018	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0001b	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0001e	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00021	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00024	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  00027	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002a	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0002d	8d 47 14	 lea	 eax, DWORD PTR [edi+20]
  00030	50		 push	 eax
  00031	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00034	ff d3		 call	 ebx
  00036	8d 47 24	 lea	 eax, DWORD PTR [edi+36]
  00039	50		 push	 eax
  0003a	8d 4e 24	 lea	 ecx, DWORD PTR [esi+36]
  0003d	ff d3		 call	 ebx
  0003f	8a 47 34	 mov	 al, BYTE PTR [edi+52]
  00042	88 46 34	 mov	 BYTE PTR [esi+52], al
  00045	8a 47 35	 mov	 al, BYTE PTR [edi+53]
  00048	88 46 35	 mov	 BYTE PTR [esi+53], al
  0004b	8a 47 36	 mov	 al, BYTE PTR [edi+54]
  0004e	88 46 36	 mov	 BYTE PTR [esi+54], al
  00051	5f		 pop	 edi
  00052	8b c6		 mov	 eax, esi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??4GuildUser@ioGuildData@@QAEAAU01@ABU01@@Z ENDP	; ioGuildData::GuildUser::operator=
_TEXT	ENDS
PUBLIC	??0InvitationUser@ioGuildInfo@@QAE@ABU01@@Z	; ioGuildInfo::InvitationUser::InvitationUser
; Function compile flags: /Ogsp
;	COMDAT ??0InvitationUser@ioGuildInfo@@QAE@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0InvitationUser@ioGuildInfo@@QAE@ABU01@@Z PROC	; ioGuildInfo::InvitationUser::InvitationUser, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b 7d 08	 mov	 edi, DWORD PTR ___that$[ebp]
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  00011	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00014	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00017	5f		 pop	 edi
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??0InvitationUser@ioGuildInfo@@QAE@ABU01@@Z ENDP	; ioGuildInfo::InvitationUser::InvitationUser
_TEXT	ENDS
PUBLIC	??4InvitationUser@ioGuildInfo@@QAEAAU01@ABU01@@Z ; ioGuildInfo::InvitationUser::operator=
; Function compile flags: /Ogsp
;	COMDAT ??4InvitationUser@ioGuildInfo@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4InvitationUser@ioGuildInfo@@QAEAAU01@ABU01@@Z PROC	; ioGuildInfo::InvitationUser::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b 7d 08	 mov	 edi, DWORD PTR ___that$[ebp]
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
  00011	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00014	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00017	5f		 pop	 edi
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??4InvitationUser@ioGuildInfo@@QAEAAU01@ABU01@@Z ENDP	; ioGuildInfo::InvitationUser::operator=
_TEXT	ENDS
PUBLIC	?_Unchecked@?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEPAUGuildUser@ioGuildData@@XZ ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::_Unchecked
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Unchecked@?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEPAUGuildUser@ioGuildData@@XZ
_TEXT	SEGMENT
?_Unchecked@?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEPAUGuildUser@ioGuildData@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::_Unchecked, COMDAT
; _this$ = ecx

; 317  : 		return (_Unchecked_type(this->_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 318  : 		}

  00002	c3		 ret	 0
?_Unchecked@?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEPAUGuildUser@ioGuildData@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::_Unchecked
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 485  : 	{	// return pointer category from arbitrary arguments

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 486  : 	_Nonscalar_ptr_iterator_tag _Cat;
; 487  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 488  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
PUBLIC	??$move@AAUGuildUser@ioGuildData@@@std@@YA$$QAUGuildUser@ioGuildData@@AAU12@@Z ; std::move<ioGuildData::GuildUser &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAUGuildUser@ioGuildData@@@std@@YA$$QAUGuildUser@ioGuildData@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUGuildUser@ioGuildData@@@std@@YA$$QAUGuildUser@ioGuildData@@AAU12@@Z PROC ; std::move<ioGuildData::GuildUser &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAUGuildUser@ioGuildData@@@std@@YA$$QAUGuildUser@ioGuildData@@AAU12@@Z ENDP ; std::move<ioGuildData::GuildUser &>
_TEXT	ENDS
PUBLIC	??$move@AAUInvitationUser@ioGuildInfo@@@std@@YA$$QAUInvitationUser@ioGuildInfo@@AAU12@@Z ; std::move<ioGuildInfo::InvitationUser &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@AAUInvitationUser@ioGuildInfo@@@std@@YA$$QAUInvitationUser@ioGuildInfo@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUInvitationUser@ioGuildInfo@@@std@@YA$$QAUInvitationUser@ioGuildInfo@@AAU12@@Z PROC ; std::move<ioGuildInfo::InvitationUser &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAUInvitationUser@ioGuildInfo@@@std@@YA$$QAUInvitationUser@ioGuildInfo@@AAU12@@Z ENDP ; std::move<ioGuildInfo::InvitationUser &>
_TEXT	ENDS
PUBLIC	??$move@AAVGashaponPresent@@@std@@YA$$QAVGashaponPresent@@AAV1@@Z ; std::move<GashaponPresent &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@AAVGashaponPresent@@@std@@YA$$QAVGashaponPresent@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAVGashaponPresent@@@std@@YA$$QAVGashaponPresent@@AAV1@@Z PROC ; std::move<GashaponPresent &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAVGashaponPresent@@@std@@YA$$QAVGashaponPresent@@AAV1@@Z ENDP ; std::move<GashaponPresent &>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAUGuildUser@ioGuildData@@@std@@YAPAUGuildUser@ioGuildData@@PAU12@@Z ; std::_Val_type<ioGuildData::GuildUser *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAUGuildUser@ioGuildData@@@std@@YAPAUGuildUser@ioGuildData@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUGuildUser@ioGuildData@@@std@@YAPAUGuildUser@ioGuildData@@PAU12@@Z PROC ; std::_Val_type<ioGuildData::GuildUser *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAUGuildUser@ioGuildData@@@std@@YAPAUGuildUser@ioGuildData@@PAU12@@Z ENDP ; std::_Val_type<ioGuildData::GuildUser *>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAPAVioGuildData@@@std@@YAPAPAVioGuildData@@PAPAV1@@Z ; std::_Val_type<ioGuildData * *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Val_type@PAPAVioGuildData@@@std@@YAPAPAVioGuildData@@PAPAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAVioGuildData@@@std@@YAPAPAVioGuildData@@PAPAV1@@Z PROC ; std::_Val_type<ioGuildData * *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAPAVioGuildData@@@std@@YAPAPAVioGuildData@@PAPAV1@@Z ENDP ; std::_Val_type<ioGuildData * *>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAVioGuildData@@PAV1@PAV1@@std@@YAPAPAVioGuildData@@PAPAV1@00AAV?$allocator@PAVioGuildData@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioGuildData *,ioGuildData *,ioGuildData *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@PAVioGuildData@@PAV1@PAV1@@std@@YAPAPAVioGuildData@@PAPAV1@00AAV?$allocator@PAVioGuildData@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVioGuildData@@PAV1@PAV1@@std@@YAPAPAVioGuildData@@PAPAV1@00AAV?$allocator@PAVioGuildData@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<ioGuildData *,ioGuildData *,ioGuildData *>, COMDAT

; 456  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 457  : 	_DEBUG_RANGE(_First, _Last);
; 458  : 	_DEBUG_POINTER(_Dest);
; 459  : 	size_t _Count = (size_t)(_Last - _First);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2

; 460  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 461  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 462  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninit_move@PAVioGuildData@@PAV1@PAV1@@std@@YAPAPAVioGuildData@@PAPAV1@00AAV?$allocator@PAVioGuildData@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<ioGuildData *,ioGuildData *,ioGuildData *>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAUInvitationUser@ioGuildInfo@@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@@Z ; std::_Val_type<ioGuildInfo::InvitationUser *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAUInvitationUser@ioGuildInfo@@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUInvitationUser@ioGuildInfo@@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@@Z PROC ; std::_Val_type<ioGuildInfo::InvitationUser *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAUInvitationUser@ioGuildInfo@@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@@Z ENDP ; std::_Val_type<ioGuildInfo::InvitationUser *>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAPAUGuildAttendRwardInfo@@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@@Z ; std::_Val_type<GuildAttendRwardInfo * *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Val_type@PAPAUGuildAttendRwardInfo@@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAUGuildAttendRwardInfo@@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@@Z PROC ; std::_Val_type<GuildAttendRwardInfo * *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAPAUGuildAttendRwardInfo@@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@@Z ENDP ; std::_Val_type<GuildAttendRwardInfo * *>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAUGuildAttendRwardInfo@@PAU1@PAU1@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildAttendRwardInfo@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<GuildAttendRwardInfo *,GuildAttendRwardInfo *,GuildAttendRwardInfo *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@PAUGuildAttendRwardInfo@@PAU1@PAU1@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildAttendRwardInfo@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUGuildAttendRwardInfo@@PAU1@PAU1@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildAttendRwardInfo@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<GuildAttendRwardInfo *,GuildAttendRwardInfo *,GuildAttendRwardInfo *>, COMDAT

; 456  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 457  : 	_DEBUG_RANGE(_First, _Last);
; 458  : 	_DEBUG_POINTER(_Dest);
; 459  : 	size_t _Count = (size_t)(_Last - _First);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2

; 460  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 461  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 462  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninit_move@PAUGuildAttendRwardInfo@@PAU1@PAU1@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildAttendRwardInfo@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<GuildAttendRwardInfo *,GuildAttendRwardInfo *,GuildAttendRwardInfo *>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAPAUGuildRankRwardInfo@@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@@Z ; std::_Val_type<GuildRankRwardInfo * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAPAUGuildRankRwardInfo@@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAUGuildRankRwardInfo@@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@@Z PROC ; std::_Val_type<GuildRankRwardInfo * *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAPAUGuildRankRwardInfo@@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@@Z ENDP ; std::_Val_type<GuildRankRwardInfo * *>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAUGuildRankRwardInfo@@PAU1@PAU1@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildRankRwardInfo@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<GuildRankRwardInfo *,GuildRankRwardInfo *,GuildRankRwardInfo *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@PAUGuildRankRwardInfo@@PAU1@PAU1@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildRankRwardInfo@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUGuildRankRwardInfo@@PAU1@PAU1@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildRankRwardInfo@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<GuildRankRwardInfo *,GuildRankRwardInfo *,GuildRankRwardInfo *>, COMDAT

; 456  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 457  : 	_DEBUG_RANGE(_First, _Last);
; 458  : 	_DEBUG_POINTER(_Dest);
; 459  : 	size_t _Count = (size_t)(_Last - _First);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2

; 460  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 461  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 462  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninit_move@PAUGuildRankRwardInfo@@PAU1@PAU1@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildRankRwardInfo@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<GuildRankRwardInfo *,GuildRankRwardInfo *,GuildRankRwardInfo *>
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*, COMDAT
; _this$ = ecx

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 85   : 		}

  00002	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++, COMDAT
; _this$ = ecx

; 93   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

  00002	83 00 1c	 add	 DWORD PTR [eax], 28	; 0000001cH

; 111  : 		return (*this);
; 112  : 		}

  00005	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat
; Function compile flags: /Ogsp
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat
_TEXT	ENDS
PUBLIC	??$_Unchecked@PAUGuildUser@ioGuildData@@@std@@YAPAUGuildUser@ioGuildData@@PAU12@@Z ; std::_Unchecked<ioGuildData::GuildUser *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Unchecked@PAUGuildUser@ioGuildData@@@std@@YAPAUGuildUser@ioGuildData@@PAU12@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAUGuildUser@ioGuildData@@@std@@YAPAUGuildUser@ioGuildData@@PAU12@@Z PROC ; std::_Unchecked<ioGuildData::GuildUser *>, COMDAT

; 266  : 	{	// construct unchecked from checked, generic

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 267  : 	return (_Src);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]

; 268  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Unchecked@PAUGuildUser@ioGuildData@@@std@@YAPAUGuildUser@ioGuildData@@PAU12@@Z ENDP ; std::_Unchecked<ioGuildData::GuildUser *>
_TEXT	ENDS
PUBLIC	??$_Dist_type@PAUGuildUser@ioGuildData@@@std@@YAPAHPAUGuildUser@ioGuildData@@@Z ; std::_Dist_type<ioGuildData::GuildUser *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Dist_type@PAUGuildUser@ioGuildData@@@std@@YAPAHPAUGuildUser@ioGuildData@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Dist_type@PAUGuildUser@ioGuildData@@@std@@YAPAHPAUGuildUser@ioGuildData@@@Z PROC ; std::_Dist_type<ioGuildData::GuildUser *>, COMDAT

; 850  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 851  : 	}

  00002	c3		 ret	 0
??$_Dist_type@PAUGuildUser@ioGuildData@@@std@@YAPAHPAUGuildUser@ioGuildData@@@Z ENDP ; std::_Dist_type<ioGuildData::GuildUser *>
_TEXT	ENDS
PUBLIC	??_GGuildUser@ioGuildData@@QAEPAXI@Z		; ioGuildData::GuildUser::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_GGuildUser@ioGuildData@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GGuildUser@ioGuildData@@QAEPAXI@Z PROC		; ioGuildData::GuildUser::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1GuildUser@ioGuildData@@QAE@XZ
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@2
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@2:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GGuildUser@ioGuildData@@QAEPAXI@Z ENDP		; ioGuildData::GuildUser::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GInvitationUser@ioGuildInfo@@QAEPAXI@Z	; ioGuildInfo::InvitationUser::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_GInvitationUser@ioGuildInfo@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GInvitationUser@ioGuildInfo@@QAEPAXI@Z PROC		; ioGuildInfo::InvitationUser::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  0000c	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00010	74 07		 je	 SHORT $LN1@scalar@3
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	59		 pop	 ecx
$LN1@scalar@3:
  00019	8b c6		 mov	 eax, esi
  0001b	5e		 pop	 esi
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??_GInvitationUser@ioGuildInfo@@QAEPAXI@Z ENDP		; ioGuildInfo::InvitationUser::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$forward@AAPAUGuildUser@ioGuildData@@@std@@YAAAPAUGuildUser@ioGuildData@@AAPAU12@@Z ; std::forward<ioGuildData::GuildUser * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAPAUGuildUser@ioGuildData@@@std@@YAAAPAUGuildUser@ioGuildData@@AAPAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAUGuildUser@ioGuildData@@@std@@YAAAPAUGuildUser@ioGuildData@@AAPAU12@@Z PROC ; std::forward<ioGuildData::GuildUser * &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAUGuildUser@ioGuildData@@@std@@YAAAPAUGuildUser@ioGuildData@@AAPAU12@@Z ENDP ; std::forward<ioGuildData::GuildUser * &>
_TEXT	ENDS
PUBLIC	??$?0AAPAUGuildUser@ioGuildData@@AAPAU01@@?$_Pair_base@PAUGuildUser@ioGuildData@@PAU12@@std@@QAE@AAPAUGuildUser@ioGuildData@@0@Z ; std::_Pair_base<ioGuildData::GuildUser *,ioGuildData::GuildUser *>::_Pair_base<ioGuildData::GuildUser *,ioGuildData::GuildUser *><ioGuildData::GuildUser * &,ioGuildData::GuildUser * &>
; Function compile flags: /Ogsp
;	COMDAT ??$?0AAPAUGuildUser@ioGuildData@@AAPAU01@@?$_Pair_base@PAUGuildUser@ioGuildData@@PAU12@@std@@QAE@AAPAUGuildUser@ioGuildData@@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAPAUGuildUser@ioGuildData@@AAPAU01@@?$_Pair_base@PAUGuildUser@ioGuildData@@PAU12@@std@@QAE@AAPAUGuildUser@ioGuildData@@0@Z PROC ; std::_Pair_base<ioGuildData::GuildUser *,ioGuildData::GuildUser *>::_Pair_base<ioGuildData::GuildUser *,ioGuildData::GuildUser *><ioGuildData::GuildUser * &,ioGuildData::GuildUser * &>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00011	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 164  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAPAUGuildUser@ioGuildData@@AAPAU01@@?$_Pair_base@PAUGuildUser@ioGuildData@@PAU12@@std@@QAE@AAPAUGuildUser@ioGuildData@@0@Z ENDP ; std::_Pair_base<ioGuildData::GuildUser *,ioGuildData::GuildUser *>::_Pair_base<ioGuildData::GuildUser *,ioGuildData::GuildUser *><ioGuildData::GuildUser * &,ioGuildData::GuildUser * &>
_TEXT	ENDS
PUBLIC	??$_Move@AAUGuildUser@ioGuildData@@@std@@YA$$QAUGuildUser@ioGuildData@@AAU12@@Z ; std::_Move<ioGuildData::GuildUser &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Move@AAUGuildUser@ioGuildData@@@std@@YA$$QAUGuildUser@ioGuildData@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAUGuildUser@ioGuildData@@@std@@YA$$QAUGuildUser@ioGuildData@@AAU12@@Z PROC ; std::_Move<ioGuildData::GuildUser &>, COMDAT

; 94   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 95   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 96   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Move@AAUGuildUser@ioGuildData@@@std@@YA$$QAUGuildUser@ioGuildData@@AAU12@@Z ENDP ; std::_Move<ioGuildData::GuildUser &>
_TEXT	ENDS
PUBLIC	??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
PUBLIC	??$forward@AAVGashaponPresent@@@std@@YAAAVGashaponPresent@@AAV1@@Z ; std::forward<GashaponPresent &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@AAVGashaponPresent@@@std@@YAAAVGashaponPresent@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAVGashaponPresent@@@std@@YAAAVGashaponPresent@@AAV1@@Z PROC ; std::forward<GashaponPresent &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAVGashaponPresent@@@std@@YAAAVGashaponPresent@@AAV1@@Z ENDP ; std::forward<GashaponPresent &>
_TEXT	ENDS
PUBLIC	??$construct@AAVGashaponPresent@@@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@AAV2@@Z ; std::allocator<GashaponPresent>::construct<GashaponPresent &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAVGashaponPresent@@@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@AAV2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAVGashaponPresent@@@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@AAV2@@Z PROC ; std::allocator<GashaponPresent>::construct<GashaponPresent &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN3@construct@5
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	6a 05		 push	 5
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN3@construct@5:
  00015	5f		 pop	 edi

; 209  : 		}

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
??$construct@AAVGashaponPresent@@@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@AAV2@@Z ENDP ; std::allocator<GashaponPresent>::construct<GashaponPresent &>
_TEXT	ENDS
PUBLIC	??$forward@UGuildUser@ioGuildData@@@std@@YA$$QAUGuildUser@ioGuildData@@AAU12@@Z ; std::forward<ioGuildData::GuildUser>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@UGuildUser@ioGuildData@@@std@@YA$$QAUGuildUser@ioGuildData@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UGuildUser@ioGuildData@@@std@@YA$$QAUGuildUser@ioGuildData@@AAU12@@Z PROC ; std::forward<ioGuildData::GuildUser>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@UGuildUser@ioGuildData@@@std@@YA$$QAUGuildUser@ioGuildData@@AAU12@@Z ENDP ; std::forward<ioGuildData::GuildUser>
_TEXT	ENDS
PUBLIC	??$forward@UInvitationUser@ioGuildInfo@@@std@@YA$$QAUInvitationUser@ioGuildInfo@@AAU12@@Z ; std::forward<ioGuildInfo::InvitationUser>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@UInvitationUser@ioGuildInfo@@@std@@YA$$QAUInvitationUser@ioGuildInfo@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UInvitationUser@ioGuildInfo@@@std@@YA$$QAUInvitationUser@ioGuildInfo@@AAU12@@Z PROC ; std::forward<ioGuildInfo::InvitationUser>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@UInvitationUser@ioGuildInfo@@@std@@YA$$QAUInvitationUser@ioGuildInfo@@AAU12@@Z ENDP ; std::forward<ioGuildInfo::InvitationUser>
_TEXT	ENDS
PUBLIC	??$_Move_backward@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move_backward<ioGuildData::GuildUser *,ioGuildData::GuildUser *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move_backward@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move_backward@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move_backward<ioGuildData::GuildUser *,ioGuildData::GuildUser *>, COMDAT

; 2617 : 	{	// move [_First, _Last) backwards to [..., _Dest), arbitrary iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2618 : 	while (_First != _Last)

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	39 75 08	 cmp	 DWORD PTR __First$[ebp], esi
  0000a	74 15		 je	 SHORT $LN9@Move_backw
$LL2@Move_backw:

; 2619 : 		*--_Dest = _STD move(*--_Last);

  0000c	83 6d 10 38	 sub	 DWORD PTR __Dest$[ebp], 56 ; 00000038H
  00010	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00013	83 ee 38	 sub	 esi, 56			; 00000038H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??4GuildUser@ioGuildData@@QAEAAU01@ABU01@@Z
  0001c	3b 75 08	 cmp	 esi, DWORD PTR __First$[ebp]
  0001f	75 eb		 jne	 SHORT $LL2@Move_backw
$LN9@Move_backw:

; 2620 : 	return (_Dest);

  00021	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00024	5e		 pop	 esi

; 2621 : 	}

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Move_backward@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move_backward<ioGuildData::GuildUser *,ioGuildData::GuildUser *>
_TEXT	ENDS
PUBLIC	??0CAtlException@ATL@@QAE@J@Z			; ATL::CAtlException::CAtlException
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlexcept.h
;	COMDAT ??0CAtlException@ATL@@QAE@J@Z
_TEXT	SEGMENT
_hr$ = 8						; size = 4
??0CAtlException@ATL@@QAE@J@Z PROC			; ATL::CAtlException::CAtlException, COMDAT
; _this$ = ecx

; 44   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR _hr$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 45   : 	}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
??0CAtlException@ATL@@QAE@J@Z ENDP			; ATL::CAtlException::CAtlException
_TEXT	ENDS
PUBLIC	__TI1?AVCAtlException@ATL@@
PUBLIC	?AtlThrowImpl@ATL@@YGXJ@Z			; ATL::AtlThrowImpl
PUBLIC	__CTA1?AVCAtlException@ATL@@
PUBLIC	__CT??_R0?AVCAtlException@ATL@@@84
PUBLIC	??_R0?AVCAtlException@ATL@@@8			; ATL::CAtlException `RTTI Type Descriptor'
;	COMDAT ??_R0?AVCAtlException@ATL@@@8
_DATA	SEGMENT
??_R0?AVCAtlException@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CAtlException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAtlException@ATL@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVCAtlException@ATL@@@84
xdata$x	SEGMENT
__CT??_R0?AVCAtlException@ATL@@@84 DD 00H
	DD	FLAT:??_R0?AVCAtlException@ATL@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT __CTA1?AVCAtlException@ATL@@
xdata$x	SEGMENT
__CTA1?AVCAtlException@ATL@@ DD 01H
	DD	FLAT:__CT??_R0?AVCAtlException@ATL@@@84
xdata$x	ENDS
;	COMDAT __TI1?AVCAtlException@ATL@@
xdata$x	SEGMENT
__TI1?AVCAtlException@ATL@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1?AVCAtlException@ATL@@
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?AtlThrowImpl@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T518733 = 8						; size = 4
_hr$ = 8						; size = 4
?AtlThrowImpl@ATL@@YGXJ@Z PROC				; ATL::AtlThrowImpl, COMDAT

; 65   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 66   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );
; 67   : #ifdef _AFX
; 68   : 	if( hr == E_OUTOFMEMORY )
; 69   : 	{
; 70   : 		AfxThrowMemoryException();
; 71   : 	}
; 72   : 	else
; 73   : 	{
; 74   : 		AfxThrowOleException( hr );
; 75   : 	}
; 76   : #else
; 77   : 	throw CAtlException( hr );

  00003	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]
  00006	89 45 08	 mov	 DWORD PTR $T518733[ebp], eax
  00009	68 00 00 00 00	 push	 OFFSET __TI1?AVCAtlException@ATL@@
  0000e	8d 45 08	 lea	 eax, DWORD PTR $T518733[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN6@AtlThrowIm:
$LN5@AtlThrowIm:
  00017	cc		 int	 3
?AtlThrowImpl@ATL@@YGXJ@Z ENDP				; ATL::AtlThrowImpl
_TEXT	ENDS
PUBLIC	??0CTimeSpan@ATL@@QAE@_J@Z			; ATL::CTimeSpan::CTimeSpan
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atltime.inl
;	COMDAT ??0CTimeSpan@ATL@@QAE@_J@Z
_TEXT	SEGMENT
_time$ = 8						; size = 8
??0CTimeSpan@ATL@@QAE@_J@Z PROC				; ATL::CTimeSpan::CTimeSpan, COMDAT
; _this$ = ecx

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR _time$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR _time$[ebp+4]
  0000d	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 34   : }

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
??0CTimeSpan@ATL@@QAE@_J@Z ENDP				; ATL::CTimeSpan::CTimeSpan
_TEXT	ENDS
PUBLIC	?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ		; ATL::CTimeSpan::GetTimeSpan
; Function compile flags: /Ogsp
;	COMDAT ?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ
_TEXT	SEGMENT
?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ PROC		; ATL::CTimeSpan::GetTimeSpan, COMDAT
; _this$ = ecx

; 82   : 	return( m_timeSpan );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]

; 83   : }

  00005	c3		 ret	 0
?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ ENDP		; ATL::CTimeSpan::GetTimeSpan
_TEXT	ENDS
PUBLIC	??0CTime@ATL@@QAE@_J@Z				; ATL::CTime::CTime
; Function compile flags: /Ogsp
;	COMDAT ??0CTime@ATL@@QAE@_J@Z
_TEXT	SEGMENT
_time$ = 8						; size = 8
??0CTime@ATL@@QAE@_J@Z PROC				; ATL::CTime::CTime, COMDAT
; _this$ = ecx

; 171  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR _time$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR _time$[ebp+4]
  0000d	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 172  : }

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
??0CTime@ATL@@QAE@_J@Z ENDP				; ATL::CTime::CTime
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??0CTime@ATL@@QAE@HHHHHHH@Z			; ATL::CTime::CTime
EXTRN	__imp___mktime64:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0CTime@ATL@@QAE@HHHHHHH@Z
_TEXT	SEGMENT
_atm$ = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
_nYear$ = 8						; size = 4
_nMonth$ = 12						; size = 4
_nDay$ = 16						; size = 4
_nHour$ = 20						; size = 4
_nMin$ = 24						; size = 4
_nSec$ = 28						; size = 4
_nDST$ = 32						; size = 4
??0CTime@ATL@@QAE@HHHHHHH@Z PROC			; ATL::CTime::CTime, COMDAT
; _this$ = ecx

; 182  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 183  : #pragma warning (push)
; 184  : #pragma warning (disable: 4127)  // conditional expression constant
; 185  : 
; 186  : 	ATLENSURE( nYear >= 1900 );

  00010	81 7d 08 6c 07
	00 00		 cmp	 DWORD PTR _nYear$[ebp], 1900 ; 0000076cH
  00017	56		 push	 esi
  00018	8b f1		 mov	 esi, ecx
  0001a	7d 0a		 jge	 SHORT $LN66@CTime
$LN81@CTime:
  0001c	68 05 40 00 80	 push	 -2147467259		; 80004005H
$LN82@CTime:
  00021	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN83@CTime:
$LN66@CTime:
  00026	53		 push	 ebx

; 187  : 	ATLENSURE( nMonth >= 1 && nMonth <= 12 );

  00027	8b 5d 0c	 mov	 ebx, DWORD PTR _nMonth$[ebp]
  0002a	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]
  0002d	57		 push	 edi
  0002e	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  00031	77 e9		 ja	 SHORT $LN81@CTime

; 188  : 	ATLENSURE( nDay >= 1 && nDay <= 31 );

  00033	8b 55 10	 mov	 edx, DWORD PTR _nDay$[ebp]
  00036	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  00039	83 f8 1e	 cmp	 eax, 30			; 0000001eH
  0003c	77 de		 ja	 SHORT $LN81@CTime

; 189  : 	ATLENSURE( nHour >= 0 && nHour <= 23 );

  0003e	8b 7d 14	 mov	 edi, DWORD PTR _nHour$[ebp]
  00041	83 ff 17	 cmp	 edi, 23			; 00000017H
  00044	77 d6		 ja	 SHORT $LN81@CTime

; 190  : 	ATLENSURE( nMin >= 0 && nMin <= 59 );

  00046	8b 4d 18	 mov	 ecx, DWORD PTR _nMin$[ebp]
  00049	83 f9 3b	 cmp	 ecx, 59			; 0000003bH
  0004c	77 ce		 ja	 SHORT $LN81@CTime

; 191  : 	ATLENSURE( nSec >= 0 && nSec <= 59 );

  0004e	8b 45 1c	 mov	 eax, DWORD PTR _nSec$[ebp]
  00051	83 f8 3b	 cmp	 eax, 59			; 0000003bH
  00054	77 c6		 ja	 SHORT $LN81@CTime

; 192  : 
; 193  : #pragma warning (pop)
; 194  : 
; 195  : 	struct tm atm;
; 196  : 
; 197  : 	atm.tm_sec = nSec;

  00056	89 45 d8	 mov	 DWORD PTR _atm$[ebp], eax

; 198  : 	atm.tm_min = nMin;
; 199  : 	atm.tm_hour = nHour;
; 200  : 	atm.tm_mday = nDay;
; 201  : 	atm.tm_mon = nMonth - 1;        // tm_mon is 0 based
; 202  : 	atm.tm_year = nYear - 1900;     // tm_year is 1900 based

  00059	8b 45 08	 mov	 eax, DWORD PTR _nYear$[ebp]
  0005c	05 94 f8 ff ff	 add	 eax, -1900		; fffff894H
  00061	89 45 ec	 mov	 DWORD PTR _atm$[ebp+20], eax

; 203  : 	atm.tm_isdst = nDST;

  00064	8b 45 20	 mov	 eax, DWORD PTR _nDST$[ebp]
  00067	89 45 f8	 mov	 DWORD PTR _atm$[ebp+32], eax

; 204  : 
; 205  : 	m_time = _mktime64(&atm);

  0006a	8d 45 d8	 lea	 eax, DWORD PTR _atm$[ebp]
  0006d	4b		 dec	 ebx
  0006e	50		 push	 eax
  0006f	89 4d dc	 mov	 DWORD PTR _atm$[ebp+4], ecx
  00072	89 7d e0	 mov	 DWORD PTR _atm$[ebp+8], edi
  00075	89 55 e4	 mov	 DWORD PTR _atm$[ebp+12], edx
  00078	89 5d e8	 mov	 DWORD PTR _atm$[ebp+16], ebx
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mktime64
  00081	59		 pop	 ecx
  00082	89 06		 mov	 DWORD PTR [esi], eax

; 206  : 	ATLASSUME(m_time != -1);       // indicates an illegal input time
; 207  : 	if(m_time == -1)

  00084	23 c2		 and	 eax, edx
  00086	5f		 pop	 edi
  00087	89 56 04	 mov	 DWORD PTR [esi+4], edx
  0008a	5b		 pop	 ebx
  0008b	83 f8 ff	 cmp	 eax, -1
  0008e	75 07		 jne	 SHORT $LN1@CTime

; 208  : 	{
; 209  : 		AtlThrow(E_INVALIDARG);

  00090	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00095	eb 8a		 jmp	 SHORT $LN82@CTime
$LN1@CTime:

; 210  : 	}
; 211  : }

  00097	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009a	8b c6		 mov	 eax, esi
  0009c	33 cd		 xor	 ecx, ebp
  0009e	5e		 pop	 esi
  0009f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a4	c9		 leave
  000a5	c2 1c 00	 ret	 28			; 0000001cH
$LN80@CTime:
??0CTime@ATL@@QAE@HHHHHHH@Z ENDP			; ATL::CTime::CTime
_TEXT	ENDS
PUBLIC	??4CTime@ATL@@QAEAAV01@_J@Z			; ATL::CTime::operator=
; Function compile flags: /Ogsp
;	COMDAT ??4CTime@ATL@@QAEAAV01@_J@Z
_TEXT	SEGMENT
_time$ = 8						; size = 8
??4CTime@ATL@@QAEAAV01@_J@Z PROC			; ATL::CTime::operator=, COMDAT
; _this$ = ecx

; 283  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 284  : 	m_time = time;

  00005	8b 4d 08	 mov	 ecx, DWORD PTR _time$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR _time$[ebp+4]
  0000d	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 285  : 
; 286  : 	return( *this );
; 287  : }

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
??4CTime@ATL@@QAEAAV01@_J@Z ENDP			; ATL::CTime::operator=
_TEXT	ENDS
PUBLIC	??GCTime@ATL@@QBE?AVCTimeSpan@1@V01@@Z		; ATL::CTime::operator-
; Function compile flags: /Ogsp
;	COMDAT ??GCTime@ATL@@QBE?AVCTimeSpan@1@V01@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_time$ = 12						; size = 8
??GCTime@ATL@@QBE?AVCTimeSpan@1@V01@@Z PROC		; ATL::CTime::operator-, COMDAT
; _this$ = ecx

; 304  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 305  : 	return( CTimeSpan( m_time-time.m_time ) );

  00003	8b 11		 mov	 edx, DWORD PTR [ecx]
  00005	2b 55 0c	 sub	 edx, DWORD PTR _time$[ebp]
  00008	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000b	1b 4d 10	 sbb	 ecx, DWORD PTR _time$[ebp+4]
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	89 10		 mov	 DWORD PTR [eax], edx
  00013	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 306  : }

  00016	5d		 pop	 ebp
  00017	c2 0c 00	 ret	 12			; 0000000cH
??GCTime@ATL@@QBE?AVCTimeSpan@1@V01@@Z ENDP		; ATL::CTime::operator-
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z	; ATL::CTime::GetLocalTm
EXTRN	__imp___localtime64_s:PROC
; Function compile flags: /Ogsp
;	COMDAT ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z
_TEXT	SEGMENT
_ptmTemp$210365 = -40					; size = 36
__$ArrayPad$ = -4					; size = 4
_ptm$ = 8						; size = 4
?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z PROC		; ATL::CTime::GetLocalTm, COMDAT
; _this$ = ecx

; 369  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _ptm$[ebp]

; 370  : 	// Ensure ptm is valid
; 371  : 	ATLENSURE( ptm != NULL );

  00014	85 db		 test	 ebx, ebx
  00016	75 0a		 jne	 SHORT $LN15@GetLocalTm
  00018	68 05 40 00 80	 push	 -2147467259		; 80004005H
  0001d	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN17@GetLocalTm:
$LN15@GetLocalTm:

; 372  : 
; 373  : 	if (ptm != NULL)
; 374  : 	{
; 375  : 		struct tm ptmTemp;
; 376  : 		errno_t err = _localtime64_s(&ptmTemp, &m_time);

  00022	51		 push	 ecx
  00023	8d 45 d8	 lea	 eax, DWORD PTR _ptmTemp$210365[ebp]
  00026	50		 push	 eax
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___localtime64_s
  0002d	59		 pop	 ecx
  0002e	59		 pop	 ecx

; 377  : 
; 378  : 		if (err != 0)

  0002f	85 c0		 test	 eax, eax
  00031	74 04		 je	 SHORT $LN1@GetLocalTm

; 379  : 		{
; 380  : 			return NULL;    // indicates that m_time was not initialized!

  00033	33 c0		 xor	 eax, eax
  00035	eb 10		 jmp	 SHORT $LN13@GetLocalTm
$LN1@GetLocalTm:
  00037	56		 push	 esi
  00038	57		 push	 edi

; 381  : 		}
; 382  : 
; 383  : 		*ptm = ptmTemp;

  00039	6a 09		 push	 9
  0003b	59		 pop	 ecx
  0003c	8d 75 d8	 lea	 esi, DWORD PTR _ptmTemp$210365[ebp]
  0003f	8b fb		 mov	 edi, ebx
  00041	f3 a5		 rep movsd
  00043	5f		 pop	 edi

; 384  : 		return ptm;

  00044	8b c3		 mov	 eax, ebx
  00046	5e		 pop	 esi
$LN13@GetLocalTm:

; 385  : 	}
; 386  : 
; 387  : 	return NULL;
; 388  : }

  00047	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0004a	33 cd		 xor	 ecx, ebp
  0004c	5b		 pop	 ebx
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	c9		 leave
  00053	c2 04 00	 ret	 4
$LN16@GetLocalTm:
?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ENDP		; ATL::CTime::GetLocalTm
_TEXT	ENDS
PUBLIC	?GetTime@CTime@ATL@@QBE_JXZ			; ATL::CTime::GetTime
; Function compile flags: /Ogsp
;	COMDAT ?GetTime@CTime@ATL@@QBE_JXZ
_TEXT	SEGMENT
?GetTime@CTime@ATL@@QBE_JXZ PROC			; ATL::CTime::GetTime, COMDAT
; _this$ = ecx

; 415  : 	return( m_time );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]

; 416  : }

  00005	c3		 ret	 0
?GetTime@CTime@ATL@@QBE_JXZ ENDP			; ATL::CTime::GetTime
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GetYear@CTime@ATL@@QBEHXZ			; ATL::CTime::GetYear
; Function compile flags: /Ogsp
;	COMDAT ?GetYear@CTime@ATL@@QBEHXZ
_TEXT	SEGMENT
_ttm$ = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
?GetYear@CTime@ATL@@QBEHXZ PROC				; ATL::CTime::GetYear, COMDAT
; _this$ = ecx

; 419  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 420  : 	struct tm ttm;
; 421  : 	struct tm * ptm;
; 422  : 
; 423  : 	ptm = GetLocalTm(&ttm);

  00010	8d 45 d8	 lea	 eax, DWORD PTR _ttm$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm

; 424  : 	return ptm ? (ptm->tm_year) + 1900 : 0 ;

  00019	85 c0		 test	 eax, eax
  0001b	74 0a		 je	 SHORT $LN3@GetYear
  0001d	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00020	05 6c 07 00 00	 add	 eax, 1900		; 0000076cH
  00025	eb 02		 jmp	 SHORT $LN4@GetYear
$LN3@GetYear:
  00027	33 c0		 xor	 eax, eax
$LN4@GetYear:

; 425  : }

  00029	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0002c	33 cd		 xor	 ecx, ebp
  0002e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00033	c9		 leave
  00034	c3		 ret	 0
?GetYear@CTime@ATL@@QBEHXZ ENDP				; ATL::CTime::GetYear
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GetMonth@CTime@ATL@@QBEHXZ			; ATL::CTime::GetMonth
; Function compile flags: /Ogsp
;	COMDAT ?GetMonth@CTime@ATL@@QBEHXZ
_TEXT	SEGMENT
_ttm$ = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
?GetMonth@CTime@ATL@@QBEHXZ PROC			; ATL::CTime::GetMonth, COMDAT
; _this$ = ecx

; 428  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 429  : 	struct tm ttm;
; 430  : 	struct tm * ptm;
; 431  : 
; 432  : 	ptm = GetLocalTm(&ttm);

  00010	8d 45 d8	 lea	 eax, DWORD PTR _ttm$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm

; 433  : 	return ptm ? ptm->tm_mon + 1 : 0;

  00019	85 c0		 test	 eax, eax
  0001b	74 06		 je	 SHORT $LN3@GetMonth
  0001d	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00020	40		 inc	 eax
  00021	eb 02		 jmp	 SHORT $LN4@GetMonth
$LN3@GetMonth:
  00023	33 c0		 xor	 eax, eax
$LN4@GetMonth:

; 434  : }

  00025	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00028	33 cd		 xor	 ecx, ebp
  0002a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002f	c9		 leave
  00030	c3		 ret	 0
?GetMonth@CTime@ATL@@QBEHXZ ENDP			; ATL::CTime::GetMonth
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GetDay@CTime@ATL@@QBEHXZ			; ATL::CTime::GetDay
; Function compile flags: /Ogsp
;	COMDAT ?GetDay@CTime@ATL@@QBEHXZ
_TEXT	SEGMENT
_ttm$ = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
?GetDay@CTime@ATL@@QBEHXZ PROC				; ATL::CTime::GetDay, COMDAT
; _this$ = ecx

; 437  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 438  : 	struct tm ttm;
; 439  : 	struct tm * ptm;
; 440  : 
; 441  : 	ptm = GetLocalTm(&ttm);

  00010	8d 45 d8	 lea	 eax, DWORD PTR _ttm$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm

; 442  : 	return ptm ? ptm->tm_mday : 0 ;

  00019	85 c0		 test	 eax, eax
  0001b	74 05		 je	 SHORT $LN3@GetDay
  0001d	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00020	eb 02		 jmp	 SHORT $LN4@GetDay
$LN3@GetDay:
  00022	33 c0		 xor	 eax, eax
$LN4@GetDay:

; 443  : }

  00024	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00027	33 cd		 xor	 ecx, ebp
  00029	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002e	c9		 leave
  0002f	c3		 ret	 0
?GetDay@CTime@ATL@@QBEHXZ ENDP				; ATL::CTime::GetDay
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GetHour@CTime@ATL@@QBEHXZ			; ATL::CTime::GetHour
; Function compile flags: /Ogsp
;	COMDAT ?GetHour@CTime@ATL@@QBEHXZ
_TEXT	SEGMENT
_ttm$ = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
?GetHour@CTime@ATL@@QBEHXZ PROC				; ATL::CTime::GetHour, COMDAT
; _this$ = ecx

; 446  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 447  : 	struct tm ttm;
; 448  : 	struct tm * ptm;
; 449  : 
; 450  : 	ptm = GetLocalTm(&ttm);

  00010	8d 45 d8	 lea	 eax, DWORD PTR _ttm$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm

; 451  : 	return ptm ? ptm->tm_hour : -1 ;

  00019	85 c0		 test	 eax, eax
  0001b	74 05		 je	 SHORT $LN3@GetHour
  0001d	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00020	eb 03		 jmp	 SHORT $LN4@GetHour
$LN3@GetHour:
  00022	83 c8 ff	 or	 eax, -1
$LN4@GetHour:

; 452  : }

  00025	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00028	33 cd		 xor	 ecx, ebp
  0002a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002f	c9		 leave
  00030	c3		 ret	 0
?GetHour@CTime@ATL@@QBEHXZ ENDP				; ATL::CTime::GetHour
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
PUBLIC	?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ	; ioMyInfo::GetPublicID
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomyinfo.h
;	COMDAT ?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ
_TEXT	SEGMENT
?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ PROC	; ioMyInfo::GetPublicID, COMDAT
; _this$ = ecx

; 517  : 	const ioHashString& GetPublicID() const { return m_user_data.m_public_id; }    

  00000	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  00003	c3		 ret	 0
?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ ENDP	; ioMyInfo::GetPublicID
_TEXT	ENDS
PUBLIC	??0GuildUser@ioGuildData@@QAE@XZ		; ioGuildData::GuildUser::GuildUser
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.h
xdata$x	SEGMENT
__unwindtable$??0GuildUser@ioGuildData@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0GuildUser@ioGuildData@@QAE@XZ$0
__ehfuncinfo$??0GuildUser@ioGuildData@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0GuildUser@ioGuildData@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0GuildUser@ioGuildData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0GuildUser@ioGuildData@@QAE@XZ PROC			; ioGuildData::GuildUser::GuildUser, COMDAT
; _this$ = ecx

; 47   : 		GuildUser()

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0GuildUser@ioGuildData@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??0ioHashString@@QAE@XZ
  00017	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  0001a	ff d7		 call	 edi
  0001c	33 db		 xor	 ebx, ebx
  0001e	8d 4e 24	 lea	 ecx, DWORD PTR [esi+36]
  00021	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00024	ff d7		 call	 edi

; 48   : 		{
; 49   : 			m_dwTableIndex			= 0;

  00026	89 1e		 mov	 DWORD PTR [esi], ebx

; 50   : 			m_dwUserIndex			= 0;

  00028	89 5e 04	 mov	 DWORD PTR [esi+4], ebx

; 51   : 			m_iUserLevel			= 0;

  0002b	89 5e 08	 mov	 DWORD PTR [esi+8], ebx

; 52   : 			m_iSortPoint			= 0;

  0002e	89 5e 10	 mov	 DWORD PTR [esi+16], ebx

; 53   : 			m_iUserPos				= 1;

  00031	c7 46 0c 01 00
	00 00		 mov	 DWORD PTR [esi+12], 1

; 54   : 
; 55   : 			m_bOnline				= false;

  00038	66 89 5e 34	 mov	 WORD PTR [esi+52], bx

; 56   : 
; 57   : 			m_bAttendedYesterday	= false;
; 58   : 			m_bAttendedToday		= false;			

  0003c	88 5e 36	 mov	 BYTE PTR [esi+54], bl

; 59   : 		}

  0003f	8b c6		 mov	 eax, esi
  00041	e8 00 00 00 00	 call	 __EH_epilog3
  00046	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0GuildUser@ioGuildData@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 14	 add	 ecx, 20			; 00000014H
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??0GuildUser@ioGuildData@@QAE@XZ:
  0000c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00010	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00013	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00016	33 c8		 xor	 ecx, eax
  00018	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0GuildUser@ioGuildData@@QAE@XZ
  00022	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0GuildUser@ioGuildData@@QAE@XZ ENDP			; ioGuildData::GuildUser::GuildUser
PUBLIC	??RGuildUserSort@ioGuildData@@QBE_NABUGuildUser@1@0@Z ; ioGuildData::GuildUserSort::operator()
; Function compile flags: /Ogsp
;	COMDAT ??RGuildUserSort@ioGuildData@@QBE_NABUGuildUser@1@0@Z
_TEXT	SEGMENT
_lhs$ = 8						; size = 4
_rhs$ = 12						; size = 4
??RGuildUserSort@ioGuildData@@QBE_NABUGuildUser@1@0@Z PROC ; ioGuildData::GuildUserSort::operator(), COMDAT
; _this$ = ecx

; 65   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 66   : 			if( lhs.m_iSortPoint > rhs.m_iSortPoint )

  00003	8b 55 08	 mov	 edx, DWORD PTR _lhs$[ebp]
  00006	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00009	56		 push	 esi
  0000a	8b 75 0c	 mov	 esi, DWORD PTR _rhs$[ebp]
  0000d	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00010	3b c1		 cmp	 eax, ecx
  00012	7e 04		 jle	 SHORT $LN7@operator
$LN8@operator:

; 67   : 			{
; 68   : 				return true;

  00014	b0 01		 mov	 al, 1
  00016	eb 0a		 jmp	 SHORT $LN5@operator
$LN7@operator:

; 69   : 			}
; 70   : 			else if( lhs.m_iSortPoint == rhs.m_iSortPoint )

  00018	75 06		 jne	 SHORT $LN1@operator

; 71   : 			{
; 72   : 				if( lhs.m_dwTableIndex < rhs.m_dwTableIndex )

  0001a	8b 02		 mov	 eax, DWORD PTR [edx]
  0001c	3b 06		 cmp	 eax, DWORD PTR [esi]

; 73   : 				{
; 74   : 						return true;

  0001e	72 f4		 jb	 SHORT $LN8@operator
$LN1@operator:

; 75   : 				}
; 76   : 			}
; 77   : 			return false;

  00020	32 c0		 xor	 al, al
$LN5@operator:
  00022	5e		 pop	 esi

; 78   : 		}

  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
??RGuildUserSort@ioGuildData@@QBE_NABUGuildUser@1@0@Z ENDP ; ioGuildData::GuildUserSort::operator()
_TEXT	ENDS
PUBLIC	?GetGuildIndex@ioGuildData@@QAEKXZ		; ioGuildData::GetGuildIndex
; Function compile flags: /Ogsp
;	COMDAT ?GetGuildIndex@ioGuildData@@QAEKXZ
_TEXT	SEGMENT
?GetGuildIndex@ioGuildData@@QAEKXZ PROC			; ioGuildData::GetGuildIndex, COMDAT
; _this$ = ecx

; 90   : 	inline DWORD GetGuildIndex(){ return m_dwGuildIndex; }

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetGuildIndex@ioGuildData@@QAEKXZ ENDP			; ioGuildData::GetGuildIndex
_TEXT	ENDS
PUBLIC	?GetGuildLevel@ioGuildData@@QAEKXZ		; ioGuildData::GetGuildLevel
; Function compile flags: /Ogsp
;	COMDAT ?GetGuildLevel@ioGuildData@@QAEKXZ
_TEXT	SEGMENT
?GetGuildLevel@ioGuildData@@QAEKXZ PROC			; ioGuildData::GetGuildLevel, COMDAT
; _this$ = ecx

; 93   : 	inline DWORD GetGuildLevel(){ return m_dwGuildLevel; }

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00003	c3		 ret	 0
?GetGuildLevel@ioGuildData@@QAEKXZ ENDP			; ioGuildData::GetGuildLevel
_TEXT	ENDS
PUBLIC	?GetGuildJoinUser@ioGuildData@@QAEKXZ		; ioGuildData::GetGuildJoinUser
; Function compile flags: /Ogsp
;	COMDAT ?GetGuildJoinUser@ioGuildData@@QAEKXZ
_TEXT	SEGMENT
?GetGuildJoinUser@ioGuildData@@QAEKXZ PROC		; ioGuildData::GetGuildJoinUser, COMDAT
; _this$ = ecx

; 94   : 	inline DWORD GetGuildJoinUser(){ return m_dwGuildJoinUser; }

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00003	c3		 ret	 0
?GetGuildJoinUser@ioGuildData@@QAEKXZ ENDP		; ioGuildData::GetGuildJoinUser
_TEXT	ENDS
PUBLIC	?GetGuildMaxUser@ioGuildData@@QAEKXZ		; ioGuildData::GetGuildMaxUser
; Function compile flags: /Ogsp
;	COMDAT ?GetGuildMaxUser@ioGuildData@@QAEKXZ
_TEXT	SEGMENT
?GetGuildMaxUser@ioGuildData@@QAEKXZ PROC		; ioGuildData::GetGuildMaxUser, COMDAT
; _this$ = ecx

; 95   : 	inline DWORD GetGuildMaxUser(){ return m_dwGuildMaxUser; }

  00000	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00003	c3		 ret	 0
?GetGuildMaxUser@ioGuildData@@QAEKXZ ENDP		; ioGuildData::GetGuildMaxUser
_TEXT	ENDS
PUBLIC	?GetGuildName@ioGuildData@@QAE?AVioHashString@@XZ ; ioGuildData::GetGuildName
; Function compile flags: /Ogsp
;	COMDAT ?GetGuildName@ioGuildData@@QAE?AVioHashString@@XZ
_TEXT	SEGMENT
$T518848 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetGuildName@ioGuildData@@QAE?AVioHashString@@XZ PROC	; ioGuildData::GetGuildName, COMDAT
; _this$ = ecx

; 102  : 	inline ioHashString GetGuildName(){ return m_szGuildName; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	83 65 fc 00	 and	 DWORD PTR $T518848[ebp], 0
  00008	83 c1 2c	 add	 ecx, 44			; 0000002cH
  0000b	51		 push	 ecx
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  00015	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00018	c9		 leave
  00019	c2 04 00	 ret	 4
?GetGuildName@ioGuildData@@QAE?AVioHashString@@XZ ENDP	; ioGuildData::GetGuildName
_TEXT	ENDS
PUBLIC	?InitSyncTimer@ioGuildData@@QAEXXZ		; ioGuildData::InitSyncTimer
; Function compile flags: /Ogsp
;	COMDAT ?InitSyncTimer@ioGuildData@@QAEXXZ
_TEXT	SEGMENT
?InitSyncTimer@ioGuildData@@QAEXXZ PROC			; ioGuildData::InitSyncTimer, COMDAT
; _this$ = ecx

; 167  : 	void InitSyncTimer(){ m_dwSyncTime = 0; }

  00000	83 61 68 00	 and	 DWORD PTR [ecx+104], 0
  00004	c3		 ret	 0
?InitSyncTimer@ioGuildData@@QAEXXZ ENDP			; ioGuildData::InitSyncTimer
_TEXT	ENDS
PUBLIC	?Sync@ioGuildData@@QAEXXZ			; ioGuildData::Sync
; Function compile flags: /Ogsp
;	COMDAT ?Sync@ioGuildData@@QAEXXZ
_TEXT	SEGMENT
?Sync@ioGuildData@@QAEXXZ PROC				; ioGuildData::Sync, COMDAT
; _this$ = ecx

; 173  : 	void Sync(){ m_bSync = true; }

  00000	c6 41 75 01	 mov	 BYTE PTR [ecx+117], 1
  00004	c3		 ret	 0
?Sync@ioGuildData@@QAEXXZ ENDP				; ioGuildData::Sync
_TEXT	ENDS
PUBLIC	??0GuildRewardItemInfo@@QAE@XZ			; GuildRewardItemInfo::GuildRewardItemInfo
; Function compile flags: /Ogsp
;	COMDAT ??0GuildRewardItemInfo@@QAE@XZ
_TEXT	SEGMENT
??0GuildRewardItemInfo@@QAE@XZ PROC			; GuildRewardItemInfo::GuildRewardItemInfo, COMDAT
; _this$ = ecx

; 192  : 	GuildRewardItemInfo()

  00000	8b c1		 mov	 eax, ecx

; 193  : 	{
; 194  : 		m_iPresentType = m_iValue1 = m_iValue2 = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00007	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0000a	89 08		 mov	 DWORD PTR [eax], ecx

; 195  : 	}

  0000c	c3		 ret	 0
??0GuildRewardItemInfo@@QAE@XZ ENDP			; GuildRewardItemInfo::GuildRewardItemInfo
_TEXT	ENDS
PUBLIC	??0InvitationUser@ioGuildInfo@@QAE@XZ		; ioGuildInfo::InvitationUser::InvitationUser
; Function compile flags: /Ogsp
;	COMDAT ??0InvitationUser@ioGuildInfo@@QAE@XZ
_TEXT	SEGMENT
??0InvitationUser@ioGuildInfo@@QAE@XZ PROC		; ioGuildInfo::InvitationUser::InvitationUser, COMDAT
; _this$ = ecx

; 263  : 		InvitationUser()

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ

; 264  : 		{
; 265  : 			m_dwInvitationTimer = 0;

  00009	83 66 10 00	 and	 DWORD PTR [esi+16], 0

; 266  : 		}

  0000d	8b c6		 mov	 eax, esi
  0000f	5e		 pop	 esi
  00010	c3		 ret	 0
??0InvitationUser@ioGuildInfo@@QAE@XZ ENDP		; ioGuildInfo::InvitationUser::InvitationUser
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1512 : 		return (this->_Mysize);

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 1513 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	??_7?$CEncrypt@H@@6B@				; CEncrypt<int>::`vftable'
PUBLIC	??1?$CEncrypt@H@@UAE@XZ				; CEncrypt<int>::~CEncrypt<int>
PUBLIC	??_R4?$CEncrypt@H@@6B@				; CEncrypt<int>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CEncrypt@H@@@8			; CEncrypt<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$CEncrypt@H@@8				; CEncrypt<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CEncrypt@H@@8				; CEncrypt<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CEncrypt@H@@8			; CEncrypt<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??1ccddaabb@@UAE@XZ:PROC			; ccddaabb::~ccddaabb
EXTRN	??_E?$CEncrypt@H@@UAEPAXI@Z:PROC		; CEncrypt<int>::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$CEncrypt@H@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CEncrypt@H@@8 DD FLAT:??_R0?AV?$CEncrypt@H@@@8 ; CEncrypt<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CEncrypt@H@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CEncrypt@H@@8
rdata$r	SEGMENT
??_R2?$CEncrypt@H@@8 DD FLAT:??_R1A@?0A@EA@?$CEncrypt@H@@8 ; CEncrypt<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CEncrypt@H@@8
rdata$r	SEGMENT
??_R3?$CEncrypt@H@@8 DD 00H				; CEncrypt<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CEncrypt@H@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CEncrypt@H@@@8
_DATA	SEGMENT
??_R0?AV?$CEncrypt@H@@@8 DD FLAT:??_7type_info@@6B@	; CEncrypt<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CEncrypt@H@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$CEncrypt@H@@6B@
rdata$r	SEGMENT
??_R4?$CEncrypt@H@@6B@ DD 00H				; CEncrypt<int>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CEncrypt@H@@@8
	DD	FLAT:??_R3?$CEncrypt@H@@8
rdata$r	ENDS
;	COMDAT ??_7?$CEncrypt@H@@6B@
CONST	SEGMENT
??_7?$CEncrypt@H@@6B@ DD FLAT:??_R4?$CEncrypt@H@@6B@	; CEncrypt<int>::`vftable'
	DD	FLAT:??_E?$CEncrypt@H@@UAEPAXI@Z
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??1?$CEncrypt@H@@UAE@XZ
_TEXT	SEGMENT
??1?$CEncrypt@H@@UAE@XZ PROC				; CEncrypt<int>::~CEncrypt<int>, COMDAT
; _this$ = ecx

; 127  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CEncrypt@H@@6B@

; 128  : 	}

  00006	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00009	e9 00 00 00 00	 jmp	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
??1?$CEncrypt@H@@UAE@XZ ENDP				; CEncrypt<int>::~CEncrypt<int>
_TEXT	ENDS
PUBLIC	?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00008	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::operator[]
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_G?$CEncrypt@H@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CEncrypt@H@@UAEPAXI@Z PROC			; CEncrypt<int>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CEncrypt@H@@6B@
  0000f	e8 00 00 00 00	 call	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
  00014	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00018	74 07		 je	 SHORT $LN1@scalar@4
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	59		 pop	 ecx
$LN1@scalar@4:
  00021	8b c6		 mov	 eax, esi
  00023	5e		 pop	 esi
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??_G?$CEncrypt@H@@UAEPAXI@Z ENDP			; CEncrypt<int>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2010 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2011 : 			: this->_Bx._Buf);

  00000	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  00004	72 03		 jb	 SHORT $LN3@Myptr
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]

; 2012 : 		}

  00008	c3		 ret	 0
$LN3@Myptr:

; 2010 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2011 : 			: this->_Bx._Buf);

  00009	8b c1		 mov	 eax, ecx

; 2012 : 		}

  0000b	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 459  : 		}

  00000	c3		 ret	 0
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogsp
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z	; CEncrypt<int>::EncryptValueToPool
EXTRN	?EncryptByte@ccddaabb@@QAEXPBDPADH@Z:PROC	; ccddaabb::EncryptByte
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
;	COMDAT ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z PROC	; CEncrypt<int>::EncryptValueToPool, COMDAT
; _this$ = ecx

; 67   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 		m_RC5.EncryptByte( value, m_MemPool, max(m_ValueSize, DEFAULT_ENCRYPT) );

  00003	0f b7 41 06	 movzx	 eax, WORD PTR [ecx+6]
  00007	83 f8 04	 cmp	 eax, 4
  0000a	77 03		 ja	 SHORT $LN4@EncryptVal
  0000c	6a 04		 push	 4
  0000e	58		 pop	 eax
$LN4@EncryptVal:
  0000f	50		 push	 eax
  00010	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  00013	50		 push	 eax
  00014	ff 75 08	 push	 DWORD PTR _value$[ebp]
  00017	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0001a	e8 00 00 00 00	 call	 ?EncryptByte@ccddaabb@@QAEXPBDPADH@Z ; ccddaabb::EncryptByte

; 69   : 		
; 70   : 	}

  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ENDP	; CEncrypt<int>::EncryptValueToPool
_TEXT	ENDS
PUBLIC	?Init@?$CEncrypt@H@@AAEXXZ			; CEncrypt<int>::Init
EXTRN	?Setup@ccddaabb@@QAEXPBDHH@Z:PROC		; ccddaabb::Setup
EXTRN	__imp__rand:PROC
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	__imp__GetCurrentProcessId@0:PROC
; Function compile flags: /Ogsp
;	COMDAT ?Init@?$CEncrypt@H@@AAEXXZ
_TEXT	SEGMENT
_pid$ = -8						; size = 4
_tick$ = -4						; size = 4
?Init@?$CEncrypt@H@@AAEXXZ PROC				; CEncrypt<int>::Init, COMDAT
; _this$ = ecx

; 73   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	53		 push	 ebx
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f1		 mov	 esi, ecx

; 74   : 		DWORD pid = GetCurrentProcessId();

  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentProcessId@0
  00010	89 45 f8	 mov	 DWORD PTR _pid$[ebp], eax

; 75   : 		DWORD tick = timeGetTime();

  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0

; 76   : 		m_ValueSize    = sizeof(type);
; 77   : 		m_MemPoolPos   = (unsigned short)( rand()+pid+tick )%(MAX_MEM_POOL-m_ValueSize);

  00019	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__rand
  0001f	89 45 fc	 mov	 DWORD PTR _tick$[ebp], eax
  00022	6a 04		 push	 4
  00024	58		 pop	 eax
  00025	66 89 46 06	 mov	 WORD PTR [esi+6], ax
  00029	ff d7		 call	 edi
  0002b	03 45 f8	 add	 eax, DWORD PTR _pid$[ebp]
  0002e	0f b7 4e 06	 movzx	 ecx, WORD PTR [esi+6]
  00032	03 45 fc	 add	 eax, DWORD PTR _tick$[ebp]
  00035	6a 0c		 push	 12			; 0000000cH
  00037	0f b7 c0	 movzx	 eax, ax
  0003a	5b		 pop	 ebx
  0003b	99		 cdq
  0003c	2b d9		 sub	 ebx, ecx
  0003e	f7 fb		 idiv	 ebx
  00040	66 89 56 04	 mov	 WORD PTR [esi+4], dx

; 78   : 		m_EncryptSeed  = (char)( rand()+pid+tick )%256;

  00044	ff d7		 call	 edi
  00046	02 45 f8	 add	 al, BYTE PTR _pid$[ebp]
  00049	02 45 fc	 add	 al, BYTE PTR _tick$[ebp]
  0004c	0f be c0	 movsx	 eax, al
  0004f	25 ff 00 00 80	 and	 eax, -2147483393	; 800000ffH
  00054	79 07		 jns	 SHORT $LN8@Init
  00056	48		 dec	 eax
  00057	0d 00 ff ff ff	 or	 eax, -256		; ffffff00H
  0005c	40		 inc	 eax
$LN8@Init:
  0005d	88 46 08	 mov	 BYTE PTR [esi+8], al

; 79   : 
; 80   : 		for (int i = 0; i < MAX_MEM_POOL ; i++)

  00060	33 db		 xor	 ebx, ebx
$LL3@Init:

; 81   : 			m_MemPool[i] = (char)( rand()+pid+tick )%256; // 더미

  00062	ff d7		 call	 edi
  00064	02 45 f8	 add	 al, BYTE PTR _pid$[ebp]
  00067	02 45 fc	 add	 al, BYTE PTR _tick$[ebp]
  0006a	0f be c0	 movsx	 eax, al
  0006d	25 ff 00 00 80	 and	 eax, -2147483393	; 800000ffH
  00072	79 07		 jns	 SHORT $LN9@Init
  00074	48		 dec	 eax
  00075	0d 00 ff ff ff	 or	 eax, -256		; ffffff00H
  0007a	40		 inc	 eax
$LN9@Init:
  0007b	88 44 1e 1c	 mov	 BYTE PTR [esi+ebx+28], al
  0007f	43		 inc	 ebx
  00080	83 fb 0c	 cmp	 ebx, 12			; 0000000cH
  00083	7c dd		 jl	 SHORT $LL3@Init

; 82   : 
; 83   : 		//UJ 130913, 최적화: szKey 사용안하도록 간략화
; 84   : 		//char szKey[ccddaabb::KEY_SIZE];//="";
; 85   : 		//for (int i = 0; i < ccddaabb::KEY_SIZE  ; i++)
; 86   : 		//	szKey[i] = (char)( rand()+pid+tick )%256; // 더미
; 87   : 		m_RC5.Setup( NULL, pid, tick );

  00085	ff 75 fc	 push	 DWORD PTR _tick$[ebp]
  00088	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0008b	ff 75 f8	 push	 DWORD PTR _pid$[ebp]
  0008e	6a 00		 push	 0
  00090	e8 00 00 00 00	 call	 ?Setup@ccddaabb@@QAEXPBDHH@Z ; ccddaabb::Setup
  00095	5f		 pop	 edi
  00096	5e		 pop	 esi
  00097	5b		 pop	 ebx

; 88   : 
; 89   : #ifdef _NOTUSE
; 90   : 		m_value        = 0;
; 91   : 		EncryptValueToPool((char*)&m_value);
; 92   : 		Debug();
; 93   : #endif
; 94   : 	}

  00098	c9		 leave
  00099	c3		 ret	 0
?Init@?$CEncrypt@H@@AAEXXZ ENDP				; CEncrypt<int>::Init
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@KV?$allocator@K@std@@@std@@IBE_NPBK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@KV?$allocator@K@std@@@std@@IBE_NPBK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@KV?$allocator@K@std@@@std@@IBE_NPBK@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside@6
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside@6
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside@6
$LN3@Inside@6:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside@6:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@KV?$allocator@K@std@@@std@@IBE_NPBK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@IBEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@IBEXPAK0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@IBEXPAK0@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@IBEXPAK0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@XZ ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::~_Vector_val<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::~_Vector_val<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::~_Vector_val<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??0?$allocator@K@std@@QAE@XZ			; std::allocator<unsigned long>::allocator<unsigned long>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@K@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@K@std@@QAE@XZ PROC			; std::allocator<unsigned long>::allocator<unsigned long>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@K@std@@QAE@XZ ENDP			; std::allocator<unsigned long>::allocator<unsigned long>
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ ; std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >::~_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >::~_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >::~_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >
_TEXT	ENDS
PUBLIC	??0?$allocator@VGashaponPresent@@@std@@QAE@XZ	; std::allocator<GashaponPresent>::allocator<GashaponPresent>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@VGashaponPresent@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@VGashaponPresent@@@std@@QAE@XZ PROC	; std::allocator<GashaponPresent>::allocator<GashaponPresent>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@VGashaponPresent@@@std@@QAE@XZ ENDP	; std::allocator<GashaponPresent>::allocator<GashaponPresent>
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2004 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2005 : 			: this->_Bx._Buf);

  00000	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  00004	72 03		 jb	 SHORT $LN3@Myptr@2
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]

; 2006 : 		}

  00008	c3		 ret	 0
$LN3@Myptr@2:

; 2004 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2005 : 			: this->_Bx._Buf);

  00009	8b c1		 mov	 eax, ecx

; 2006 : 		}

  0000b	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2016 : 		_Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@8:
$LN3@Xlen@8:
  0000b	cc		 int	 3
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2021 : 		_Xout_of_range("invalid string position");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN4@Xran:
$LN3@Xran:
  0000b	cc		 int	 3
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 778  : 		}

  00008	c3		 ret	 0
?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
; Function compile flags: /Ogsp
;	COMDAT ?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@9:
$LN3@Xlen@9:
  0000b	cc		 int	 3
?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@K@std@@QAE@ABV01@@Z		; std::allocator<unsigned long>::allocator<unsigned long>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@K@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@K@std@@QAE@ABV01@@Z PROC			; std::allocator<unsigned long>::allocator<unsigned long>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@K@std@@QAE@ABV01@@Z ENDP			; std::allocator<unsigned long>::allocator<unsigned long>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@K@std@@QAEXPAKI@Z	; std::allocator<unsigned long>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@K@std@@QAEXPAKI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@K@std@@QAEXPAKI@Z PROC		; std::allocator<unsigned long>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@K@std@@QAEXPAKI@Z ENDP		; std::allocator<unsigned long>::deallocate
_TEXT	ENDS
PUBLIC	??0?$allocator@VGashaponPresent@@@std@@QAE@ABV01@@Z ; std::allocator<GashaponPresent>::allocator<GashaponPresent>
; Function compile flags: /Ogsp
;	COMDAT ??0?$allocator@VGashaponPresent@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@VGashaponPresent@@@std@@QAE@ABV01@@Z PROC ; std::allocator<GashaponPresent>::allocator<GashaponPresent>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@VGashaponPresent@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<GashaponPresent>::allocator<GashaponPresent>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@I@Z ; std::allocator<GashaponPresent>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@I@Z PROC ; std::allocator<GashaponPresent>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@I@Z ENDP ; std::allocator<GashaponPresent>::deallocate
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1973 : 		{	// test if _Ptr points inside string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1974 : 		if (_Ptr == 0 || _Ptr < _Myptr() || _Myptr() + this->_Mysize <= _Ptr)

  00003	83 7d 08 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00007	74 2c		 je	 SHORT $LN2@Inside@7
  00009	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0000c	83 fa 10	 cmp	 edx, 16			; 00000010H
  0000f	72 04		 jb	 SHORT $LN8@Inside@7
  00011	8b 01		 mov	 eax, DWORD PTR [ecx]
  00013	eb 02		 jmp	 SHORT $LN9@Inside@7
$LN8@Inside@7:
  00015	8b c1		 mov	 eax, ecx
$LN9@Inside@7:
  00017	39 45 08	 cmp	 DWORD PTR __Ptr$[ebp], eax
  0001a	72 19		 jb	 SHORT $LN2@Inside@7
  0001c	83 fa 10	 cmp	 edx, 16			; 00000010H
  0001f	72 04		 jb	 SHORT $LN12@Inside@7
  00021	8b 01		 mov	 eax, DWORD PTR [ecx]
  00023	eb 02		 jmp	 SHORT $LN13@Inside@7
$LN12@Inside@7:
  00025	8b c1		 mov	 eax, ecx
$LN13@Inside@7:
  00027	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  0002a	03 c8		 add	 ecx, eax
  0002c	3b 4d 08	 cmp	 ecx, DWORD PTR __Ptr$[ebp]
  0002f	76 04		 jbe	 SHORT $LN2@Inside@7

; 1976 : 		else
; 1977 : 			return (true);

  00031	b0 01		 mov	 al, 1
  00033	eb 02		 jmp	 SHORT $LN1@Inside@7
$LN2@Inside@7:

; 1975 : 			return (false);	// don't ask

  00035	32 c0		 xor	 al, al
$LN1@Inside@7:

; 1978 : 		}

  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@K@std@@QBEIXZ		; std::allocator<unsigned long>::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@K@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@K@std@@QBEIXZ PROC		; std::allocator<unsigned long>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@K@std@@QBEIXZ ENDP		; std::allocator<unsigned long>::max_size
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 220  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::_Compat
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::_Compat
_TEXT	ENDS
PUBLIC	??$addressof@$$CBK@std@@YAPBKABK@Z		; std::addressof<unsigned long const >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@$$CBK@std@@YAPBKABK@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBK@std@@YAPBKABK@Z PROC			; std::addressof<unsigned long const >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@$$CBK@std@@YAPBKABK@Z ENDP			; std::addressof<unsigned long const >
_TEXT	ENDS
PUBLIC	??$_Allocate@K@std@@YAPAKIPAK@Z			; std::_Allocate<unsigned long>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@K@std@@YAPAKIPAK@Z
_TEXT	SEGMENT
$T518998 = -12						; size = 12
$T519002 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@K@std@@YAPAKIPAK@Z PROC			; std::_Allocate<unsigned long>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3e		 je	 SHORT $LN5@Allocate@8

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate@8
  00017	8b c1		 mov	 eax, ecx
  00019	c1 e0 02	 shl	 eax, 2
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	59		 pop	 ecx
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 26		 jne	 SHORT $LN5@Allocate@8
$LN1@Allocate@8:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	83 65 08 00	 and	 DWORD PTR $T519002[ebp], 0
  0002b	8d 45 08	 lea	 eax, DWORD PTR $T519002[ebp]
  0002e	50		 push	 eax
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T518998[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003d	8d 45 f4	 lea	 eax, DWORD PTR $T518998[ebp]
  00040	50		 push	 eax
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T518998[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@8:
$LN5@Allocate@8:

; 40   : 	}

  0004d	c9		 leave
  0004e	c3		 ret	 0
$LN9@Allocate@8:
??$_Allocate@K@std@@YAPAKIPAK@Z ENDP			; std::_Allocate<unsigned long>
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
$T519007 = -12						; size = 12
$T519011 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;

  00003	33 c0		 xor	 eax, eax
  00005	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 32   : 
; 33   : 	if (_Count <= 0)

  00008	39 45 08	 cmp	 DWORD PTR __Count$[ebp], eax

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000b	76 39		 jbe	 SHORT $LN5@Allocate@9

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000d	83 7d 08 ff	 cmp	 DWORD PTR __Count$[ebp], -1
  00011	77 0d		 ja	 SHORT $LN1@Allocate@9
  00013	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00016	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001b	59		 pop	 ecx
  0001c	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  0001e	75 26		 jne	 SHORT $LN5@Allocate@9
$LN1@Allocate@9:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00020	83 65 08 00	 and	 DWORD PTR $T519011[ebp], 0
  00024	8d 45 08	 lea	 eax, DWORD PTR $T519011[ebp]
  00027	50		 push	 eax
  00028	8d 4d f4	 lea	 ecx, DWORD PTR $T519007[ebp]
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00031	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00036	8d 45 f4	 lea	 eax, DWORD PTR $T519007[ebp]
  00039	50		 push	 eax
  0003a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T519007[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00041	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@9:
$LN5@Allocate@9:

; 40   : 	}

  00046	c9		 leave
  00047	c3		 ret	 0
$LN9@Allocate@9:
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$forward@AAK@std@@YAAAKAAK@Z			; std::forward<unsigned long &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAK@std@@YAAAKAAK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAK@std@@YAAAKAAK@Z PROC			; std::forward<unsigned long &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAK@std@@YAAAKAAK@Z ENDP			; std::forward<unsigned long &>
_TEXT	ENDS
PUBLIC	??$construct@AAK@?$allocator@K@std@@QAEXPAKAAK@Z ; std::allocator<unsigned long>::construct<unsigned long &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAK@?$allocator@K@std@@QAEXPAKAAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAK@?$allocator@K@std@@QAEXPAKAAK@Z PROC	; std::allocator<unsigned long>::construct<unsigned long &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@construct@6
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@construct@6:

; 209  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
??$construct@AAK@?$allocator@K@std@@QAEXPAKAAK@Z ENDP	; std::allocator<unsigned long>::construct<unsigned long &>
_TEXT	ENDS
PUBLIC	??$forward@ABK@std@@YAABKABK@Z			; std::forward<unsigned long const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABK@std@@YAABKABK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABK@std@@YAABKABK@Z PROC			; std::forward<unsigned long const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABK@std@@YAABKABK@Z ENDP			; std::forward<unsigned long const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z ; std::_Ptr_cat<unsigned long,unsigned long>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z PROC ; std::_Ptr_cat<unsigned long,unsigned long>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z ENDP ; std::_Ptr_cat<unsigned long,unsigned long>
_TEXT	ENDS
PUBLIC	??$_Move@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<unsigned long *,unsigned long *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Move@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<unsigned long *,unsigned long *>, COMDAT

; 2522 : 	{	// move [_First, _Last) to [_Dest, ...), pointers to scalars

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2523 : 	ptrdiff_t _Count = _Last - _First;

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	57		 push	 edi

; 2524 : 	_CSTD memmove(&*_Dest, &*_First,
; 2525 : 		_Count * sizeof (*_First));

  0000b	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0000e	c1 fe 02	 sar	 esi, 2
  00011	c1 e6 02	 shl	 esi, 2
  00014	56		 push	 esi
  00015	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00018	57		 push	 edi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2526 : 	return (_Dest + _Count);

  00022	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 2527 : 	}

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Move@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<unsigned long *,unsigned long *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<unsigned long> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned long> >, COMDAT

; 105  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@VGashaponPresent@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVGashaponPresent@@0@Z ; std::_Ptr_cat<GashaponPresent,GashaponPresent>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@VGashaponPresent@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVGashaponPresent@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@VGashaponPresent@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVGashaponPresent@@0@Z PROC ; std::_Ptr_cat<GashaponPresent,GashaponPresent>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@VGashaponPresent@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVGashaponPresent@@0@Z ENDP ; std::_Ptr_cat<GashaponPresent,GashaponPresent>
_TEXT	ENDS
PUBLIC	??$_Construct@KABK@std@@YAXPAKABK@Z		; std::_Construct<unsigned long,unsigned long const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Construct@KABK@std@@YAXPAKABK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@KABK@std@@YAXPAKABK@Z PROC		; std::_Construct<unsigned long,unsigned long const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@Construct@4
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@Construct@4:

; 49   : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Construct@KABK@std@@YAXPAKABK@Z ENDP		; std::_Construct<unsigned long,unsigned long const &>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAK@std@@YAPAKPAK@Z		; std::_Val_type<unsigned long *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAK@std@@YAPAKPAK@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAK@std@@YAPAKPAK@Z PROC			; std::_Val_type<unsigned long *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAK@std@@YAPAKPAK@Z ENDP			; std::_Val_type<unsigned long *>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@KKK@std@@YAPAKPAK00AAV?$allocator@K@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<unsigned long,unsigned long,unsigned long>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@KKK@std@@YAPAKPAK00AAV?$allocator@K@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@KKK@std@@YAPAKPAK00AAV?$allocator@K@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<unsigned long,unsigned long,unsigned long>, COMDAT

; 456  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 457  : 	_DEBUG_RANGE(_First, _Last);
; 458  : 	_DEBUG_POINTER(_Dest);
; 459  : 	size_t _Count = (size_t)(_Last - _First);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2

; 460  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 461  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 462  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninit_move@KKK@std@@YAPAKPAK00AAV?$allocator@K@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<unsigned long,unsigned long,unsigned long>
_TEXT	ENDS
PUBLIC	??_GGashaponPresent@@QAEPAXI@Z			; GashaponPresent::`scalar deleting destructor'
EXTRN	??1GashaponPresent@@QAE@XZ:PROC			; GashaponPresent::~GashaponPresent
; Function compile flags: /Ogsp
;	COMDAT ??_GGashaponPresent@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GGashaponPresent@@QAEPAXI@Z PROC			; GashaponPresent::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1GashaponPresent@@QAE@XZ ; GashaponPresent::~GashaponPresent
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@5
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@5:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GGashaponPresent@@QAEPAXI@Z ENDP			; GashaponPresent::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	?SetGuildInfo@ioGuildData@@QAEXAAVSP2Packet@@@Z	; ioGuildData::SetGuildInfo
EXTRN	??5SP2Packet@@QAEAAV0@AAVioHashString@@@Z:PROC	; SP2Packet::operator>>
EXTRN	??5SP2Packet@@QAEAAV0@AAM@Z:PROC		; SP2Packet::operator>>
EXTRN	??5SP2Packet@@QAEAAV0@AAK@Z:PROC		; SP2Packet::operator>>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
;	COMDAT ?SetGuildInfo@ioGuildData@@QAEXAAVSP2Packet@@@Z
_TEXT	SEGMENT
_dwGuildMark$ = -4					; size = 4
_rkPacket$ = 8						; size = 4
?SetGuildInfo@ioGuildData@@QAEXAAVSP2Packet@@@Z PROC	; ioGuildData::SetGuildInfo, COMDAT
; _this$ = ecx

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 128  : 	DWORD dwGuildMark;
; 129  : 	rkPacket >> dwGuildMark >> m_dwGuildRank >> m_dwGuildLevel >> m_dwGuildJoinUser >> m_dwGuildMaxUser >> m_dwGuildPoint >> m_dwGuildRegDate >> m_fGuildBonus;

  00007	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  0000a	57		 push	 edi
  0000b	8d 46 28	 lea	 eax, DWORD PTR [esi+40]
  0000e	50		 push	 eax
  0000f	8d 46 24	 lea	 eax, DWORD PTR [esi+36]
  00012	50		 push	 eax
  00013	8d 7e 1c	 lea	 edi, DWORD PTR [esi+28]
  00016	57		 push	 edi
  00017	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
  0001a	50		 push	 eax
  0001b	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  0001e	50		 push	 eax
  0001f	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00022	50		 push	 eax
  00023	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00026	50		 push	 eax
  00027	8d 45 fc	 lea	 eax, DWORD PTR _dwGuildMark$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>
  00030	8b c8		 mov	 ecx, eax
  00032	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>
  00037	8b c8		 mov	 ecx, eax
  00039	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>
  0003e	8b c8		 mov	 ecx, eax
  00040	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>
  00045	8b c8		 mov	 ecx, eax
  00047	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>
  0004c	8b c8		 mov	 ecx, eax
  0004e	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>
  00053	8b c8		 mov	 ecx, eax
  00055	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>
  0005a	8b c8		 mov	 ecx, eax
  0005c	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAM@Z ; SP2Packet::operator>>

; 130  : 	rkPacket >> m_szGuildName >> m_szGuildTitle >> m_dwGuildPoint >> m_dwCurGuildPoint;

  00061	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  00064	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  00067	50		 push	 eax
  00068	57		 push	 edi
  00069	8d 46 3c	 lea	 eax, DWORD PTR [esi+60]
  0006c	50		 push	 eax
  0006d	8d 46 2c	 lea	 eax, DWORD PTR [esi+44]
  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAVioHashString@@@Z ; SP2Packet::operator>>
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAVioHashString@@@Z ; SP2Packet::operator>>
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>

; 131  : 	SetGuildMark( dwGuildMark );

  0008b	ff 75 fc	 push	 DWORD PTR _dwGuildMark$[ebp]
  0008e	8b ce		 mov	 ecx, esi
  00090	e8 00 00 00 00	 call	 ?SetGuildMark@ioGuildData@@QAEXK@Z ; ioGuildData::SetGuildMark
  00095	5f		 pop	 edi

; 132  : 	Sync();

  00096	c6 46 75 01	 mov	 BYTE PTR [esi+117], 1
  0009a	5e		 pop	 esi

; 133  : }

  0009b	c9		 leave
  0009c	c2 04 00	 ret	 4
?SetGuildInfo@ioGuildData@@QAEXAAVSP2Packet@@@Z ENDP	; ioGuildData::SetGuildInfo
_TEXT	ENDS
PUBLIC	?SetGuildUserLogIn@ioGuildData@@QAEXABVioHashString@@@Z ; ioGuildData::SetGuildUserLogIn
EXTRN	?sg_bUserListUpdate@UserListWnd@@2_NA:BYTE	; UserListWnd::sg_bUserListUpdate
EXTRN	?SetSyncTime@ioUserInfoMgr@@QAEXABVioHashString@@K@Z:PROC ; ioUserInfoMgr::SetSyncTime
EXTRN	?GetSingleton@ioUserInfoMgr@@SAAAV1@XZ:PROC	; ioUserInfoMgr::GetSingleton
EXTRN	?OnLoginUser@ioGuildChatMgr@@QAEXVioHashString@@@Z:PROC ; ioGuildChatMgr::OnLoginUser
EXTRN	?GetSingleton@ioGuildChatMgr@@SAAAV1@XZ:PROC	; ioGuildChatMgr::GetSingleton
EXTRN	?ShowLoginPopup@ioSP2GUIManager@@QAEXVioHashString@@@Z:PROC ; ioSP2GUIManager::ShowLoginPopup
EXTRN	?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ:PROC	; ioSP2GUIManager::GetSingleton
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\userlistwnd.h
xdata$x	SEGMENT
__unwindtable$?SetGuildUserLogIn@ioGuildData@@QAEXABVioHashString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetGuildUserLogIn@ioGuildData@@QAEXABVioHashString@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SetGuildUserLogIn@ioGuildData@@QAEXABVioHashString@@@Z$1
__ehfuncinfo$?SetGuildUserLogIn@ioGuildData@@QAEXABVioHashString@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetGuildUserLogIn@ioGuildData@@QAEXABVioHashString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?SetGuildUserLogIn@ioGuildData@@QAEXABVioHashString@@@Z
_TEXT	SEGMENT
_iSize$ = -24						; size = 4
_i$508012 = -20						; size = 4
tv246 = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T519078 = 8						; size = 4
$T519077 = 8						; size = 4
_szUserID$ = 8						; size = 4
?SetGuildUserLogIn@ioGuildData@@QAEXABVioHashString@@@Z PROC ; ioGuildData::SetGuildUserLogIn, COMDAT
; _this$ = ecx

; 136  : {

  00000	6a 0c		 push	 12			; 0000000cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?SetGuildUserLogIn@ioGuildData@@QAEXABVioHashString@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx

; 137  : 	int iSize = m_vUserList.size();

  0000e	8b 47 5c	 mov	 eax, DWORD PTR [edi+92]
  00011	2b 47 58	 sub	 eax, DWORD PTR [edi+88]
  00014	6a 38		 push	 56			; 00000038H
  00016	99		 cdq
  00017	59		 pop	 ecx
  00018	f7 f9		 idiv	 ecx

; 138  : 	for(int i = 0;i < iSize;i++)

  0001a	83 65 ec 00	 and	 DWORD PTR _i$508012[ebp], 0
  0001e	89 45 e8	 mov	 DWORD PTR _iSize$[ebp], eax
  00021	85 c0		 test	 eax, eax
  00023	0f 8e 9a 00 00
	00		 jle	 $LN3@SetGuildUs

; 137  : 	int iSize = m_vUserList.size();

  00029	83 65 f0 00	 and	 DWORD PTR tv246[ebp], 0
  0002d	8b 5d 08	 mov	 ebx, DWORD PTR _szUserID$[ebp]
$LN5@SetGuildUs:

; 139  : 	{
; 140  : 		GuildUser &kUserInfo = m_vUserList[i];

  00030	8b 77 58	 mov	 esi, DWORD PTR [edi+88]
  00033	03 75 f0	 add	 esi, DWORD PTR tv246[ebp]

; 141  : 		{
; 142  : 			if( kUserInfo.m_szUserID == szUserID )

  00036	53		 push	 ebx
  00037	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00040	84 c0		 test	 al, al
  00042	75 11		 jne	 SHORT $LN17@SetGuildUs

; 138  : 	for(int i = 0;i < iSize;i++)

  00044	ff 45 ec	 inc	 DWORD PTR _i$508012[ebp]
  00047	8b 45 ec	 mov	 eax, DWORD PTR _i$508012[ebp]
  0004a	83 45 f0 38	 add	 DWORD PTR tv246[ebp], 56 ; 00000038H
  0004e	3b 45 e8	 cmp	 eax, DWORD PTR _iSize$[ebp]
  00051	7c dd		 jl	 SHORT $LN5@SetGuildUs

; 141  : 		{
; 142  : 			if( kUserInfo.m_szUserID == szUserID )

  00053	eb 6e		 jmp	 SHORT $LN3@SetGuildUs
$LN17@SetGuildUs:

; 143  : 			{
; 144  : 				if( !kUserInfo.m_bOnline )

  00055	80 7e 34 00	 cmp	 BYTE PTR [esi+52], 0
  00059	75 47		 jne	 SHORT $LN1@SetGuildUs

; 145  : 				{
; 146  : 					g_GUIMgr.ShowLoginPopup( szUserID );

  0005b	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  00061	83 ec 10	 sub	 esp, 16			; 00000010H
  00064	8b cc		 mov	 ecx, esp
  00066	89 65 08	 mov	 DWORD PTR $T519077[ebp], esp
  00069	53		 push	 ebx
  0006a	ff d7		 call	 edi
  0006c	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00070	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  00075	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ?ShowLoginPopup@ioSP2GUIManager@@QAEXVioHashString@@@Z ; ioSP2GUIManager::ShowLoginPopup

; 147  : 					g_GuildChatMgr.OnLoginUser( szUserID );

  00080	83 ec 10	 sub	 esp, 16			; 00000010H
  00083	8b cc		 mov	 ecx, esp
  00085	89 65 08	 mov	 DWORD PTR $T519078[ebp], esp
  00088	53		 push	 ebx
  00089	ff d7		 call	 edi
  0008b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00092	e8 00 00 00 00	 call	 ?GetSingleton@ioGuildChatMgr@@SAAAV1@XZ ; ioGuildChatMgr::GetSingleton
  00097	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0009b	8b c8		 mov	 ecx, eax
  0009d	e8 00 00 00 00	 call	 ?OnLoginUser@ioGuildChatMgr@@QAEXVioHashString@@@Z ; ioGuildChatMgr::OnLoginUser
$LN1@SetGuildUs:

; 148  : 				}
; 149  : 				g_UserInfoMgr.SetSyncTime( szUserID, 0 );

  000a2	6a 00		 push	 0
  000a4	53		 push	 ebx
  000a5	e8 00 00 00 00	 call	 ?GetSingleton@ioUserInfoMgr@@SAAAV1@XZ ; ioUserInfoMgr::GetSingleton
  000aa	8b c8		 mov	 ecx, eax
  000ac	e8 00 00 00 00	 call	 ?SetSyncTime@ioUserInfoMgr@@QAEXABVioHashString@@K@Z ; ioUserInfoMgr::SetSyncTime

; 150  : 
; 151  : 				kUserInfo.m_bOnline = true;

  000b1	c6 46 34 01	 mov	 BYTE PTR [esi+52], 1

; 152  : 				UserListWnd::sg_bUserListUpdate =  true;

  000b5	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?sg_bUserListUpdate@UserListWnd@@2_NA, 1 ; UserListWnd::sg_bUserListUpdate

; 153  : 				LobbyGuildUserListWnd::ChangeGuildUserList();

  000bc	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?sg_bGuildUserListUpdate@LobbyGuildUserListWnd@@2_NA, 1 ; LobbyGuildUserListWnd::sg_bGuildUserListUpdate
$LN3@SetGuildUs:

; 154  : 				return;
; 155  : 			}
; 156  : 		}
; 157  : 	}
; 158  : }

  000c3	e8 00 00 00 00	 call	 __EH_epilog3
  000c8	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetGuildUserLogIn@ioGuildData@@QAEXABVioHashString@@@Z$0:
  00000	8b 4d 08	 mov	 ecx, DWORD PTR $T519077[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?SetGuildUserLogIn@ioGuildData@@QAEXABVioHashString@@@Z$1:
  00009	8b 4d 08	 mov	 ecx, DWORD PTR $T519078[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?SetGuildUserLogIn@ioGuildData@@QAEXABVioHashString@@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetGuildUserLogIn@ioGuildData@@QAEXABVioHashString@@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetGuildUserLogIn@ioGuildData@@QAEXABVioHashString@@@Z ENDP ; ioGuildData::SetGuildUserLogIn
PUBLIC	?SetGuildUserLogOut@ioGuildData@@QAEXABVioHashString@@@Z ; ioGuildData::SetGuildUserLogOut
EXTRN	?OnLogOutUser@ioGuildChatMgr@@QAEXVioHashString@@@Z:PROC ; ioGuildChatMgr::OnLogOutUser
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\userlistwnd.h
xdata$x	SEGMENT
__unwindtable$?SetGuildUserLogOut@ioGuildData@@QAEXABVioHashString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetGuildUserLogOut@ioGuildData@@QAEXABVioHashString@@@Z$0
__ehfuncinfo$?SetGuildUserLogOut@ioGuildData@@QAEXABVioHashString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetGuildUserLogOut@ioGuildData@@QAEXABVioHashString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?SetGuildUserLogOut@ioGuildData@@QAEXABVioHashString@@@Z
_TEXT	SEGMENT
$T519103 = -20						; size = 4
_iSize$ = -20						; size = 4
_i$508026 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_szUserID$ = 8						; size = 4
?SetGuildUserLogOut@ioGuildData@@QAEXABVioHashString@@@Z PROC ; ioGuildData::SetGuildUserLogOut, COMDAT
; _this$ = ecx

; 161  : {

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?SetGuildUserLogOut@ioGuildData@@QAEXABVioHashString@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx

; 162  : 	int iSize = m_vUserList.size();

  0000e	8b 47 5c	 mov	 eax, DWORD PTR [edi+92]
  00011	2b 47 58	 sub	 eax, DWORD PTR [edi+88]
  00014	6a 38		 push	 56			; 00000038H
  00016	99		 cdq
  00017	59		 pop	 ecx
  00018	f7 f9		 idiv	 ecx

; 163  : 	for(int i = 0;i < iSize;i++)

  0001a	33 db		 xor	 ebx, ebx
  0001c	89 5d f0	 mov	 DWORD PTR _i$508026[ebp], ebx
  0001f	89 45 ec	 mov	 DWORD PTR _iSize$[ebp], eax
  00022	3b c3		 cmp	 eax, ebx
  00024	7e 63		 jle	 SHORT $LN3@SetGuildUs@2
$LL5@SetGuildUs@2:

; 164  : 	{
; 165  : 		GuildUser &kUserInfo = m_vUserList[i];

  00026	8b 77 58	 mov	 esi, DWORD PTR [edi+88]

; 166  : 		{
; 167  : 			if( kUserInfo.m_szUserID == szUserID )

  00029	ff 75 08	 push	 DWORD PTR _szUserID$[ebp]
  0002c	8d 4c 1e 14	 lea	 ecx, DWORD PTR [esi+ebx+20]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00036	84 c0		 test	 al, al
  00038	75 10		 jne	 SHORT $LN16@SetGuildUs@2

; 163  : 	for(int i = 0;i < iSize;i++)

  0003a	ff 45 f0	 inc	 DWORD PTR _i$508026[ebp]
  0003d	8b 45 f0	 mov	 eax, DWORD PTR _i$508026[ebp]
  00040	83 c3 38	 add	 ebx, 56			; 00000038H
  00043	3b 45 ec	 cmp	 eax, DWORD PTR _iSize$[ebp]
  00046	7c de		 jl	 SHORT $LL5@SetGuildUs@2

; 166  : 		{
; 167  : 			if( kUserInfo.m_szUserID == szUserID )

  00048	eb 3f		 jmp	 SHORT $LN3@SetGuildUs@2
$LN16@SetGuildUs@2:

; 168  : 			{
; 169  : 				if( kUserInfo.m_bOnline )

  0004a	80 7c 1e 34 00	 cmp	 BYTE PTR [esi+ebx+52], 0
  0004f	74 25		 je	 SHORT $LN1@SetGuildUs@2

; 170  : 					g_GuildChatMgr.OnLogOutUser( szUserID );

  00051	83 ec 10	 sub	 esp, 16			; 00000010H
  00054	8b cc		 mov	 ecx, esp
  00056	89 65 ec	 mov	 DWORD PTR $T519103[ebp], esp
  00059	ff 75 08	 push	 DWORD PTR _szUserID$[ebp]
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  00062	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00066	e8 00 00 00 00	 call	 ?GetSingleton@ioGuildChatMgr@@SAAAV1@XZ ; ioGuildChatMgr::GetSingleton
  0006b	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ?OnLogOutUser@ioGuildChatMgr@@QAEXVioHashString@@@Z ; ioGuildChatMgr::OnLogOutUser
$LN1@SetGuildUs@2:

; 171  : 
; 172  : 				kUserInfo.m_bOnline = false;

  00076	c6 44 1e 34 00	 mov	 BYTE PTR [esi+ebx+52], 0

; 173  : 				UserListWnd::sg_bUserListUpdate =  true;

  0007b	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?sg_bUserListUpdate@UserListWnd@@2_NA, 1 ; UserListWnd::sg_bUserListUpdate

; 174  : 				LobbyGuildUserListWnd::ChangeGuildUserList();

  00082	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?sg_bGuildUserListUpdate@LobbyGuildUserListWnd@@2_NA, 1 ; LobbyGuildUserListWnd::sg_bGuildUserListUpdate
$LN3@SetGuildUs@2:

; 175  : 				return;
; 176  : 			}
; 177  : 		}
; 178  : 	}
; 179  : }

  00089	e8 00 00 00 00	 call	 __EH_epilog3
  0008e	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetGuildUserLogOut@ioGuildData@@QAEXABVioHashString@@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR $T519103[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?SetGuildUserLogOut@ioGuildData@@QAEXABVioHashString@@@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetGuildUserLogOut@ioGuildData@@QAEXABVioHashString@@@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetGuildUserLogOut@ioGuildData@@QAEXABVioHashString@@@Z ENDP ; ioGuildData::SetGuildUserLogOut
PUBLIC	?SetGuildUserPos@ioGuildData@@QAEXABVioHashString@@HH@Z ; ioGuildData::SetGuildUserPos
EXTRN	?SetGrade@ioUserInfoMgr@@QAEXABVioHashString@@H@Z:PROC ; ioUserInfoMgr::SetGrade
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildUserPos@ioGuildData@@QAEXABVioHashString@@HH@Z
_TEXT	SEGMENT
_iSize$ = -8						; size = 4
_i$508041 = -4						; size = 4
_szUserID$ = 8						; size = 4
_iUserPos$ = 12						; size = 4
_iUserLevel$ = 16					; size = 4
?SetGuildUserPos@ioGuildData@@QAEXABVioHashString@@HH@Z PROC ; ioGuildData::SetGuildUserPos, COMDAT
; _this$ = ecx

; 182  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	53		 push	 ebx
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx

; 183  : 	int iSize = m_vUserList.size();

  00009	8b 47 5c	 mov	 eax, DWORD PTR [edi+92]
  0000c	2b 47 58	 sub	 eax, DWORD PTR [edi+88]
  0000f	6a 38		 push	 56			; 00000038H
  00011	99		 cdq
  00012	59		 pop	 ecx
  00013	f7 f9		 idiv	 ecx

; 184  : 	for(int i = 0;i < iSize;i++)

  00015	33 db		 xor	 ebx, ebx
  00017	89 5d fc	 mov	 DWORD PTR _i$508041[ebp], ebx
  0001a	89 45 f8	 mov	 DWORD PTR _iSize$[ebp], eax
  0001d	3b c3		 cmp	 eax, ebx
  0001f	7e 57		 jle	 SHORT $LN3@SetGuildUs@3
  00021	56		 push	 esi
$LL5@SetGuildUs@3:

; 185  : 	{
; 186  : 		GuildUser &kUserInfo = m_vUserList[i];

  00022	8b 77 58	 mov	 esi, DWORD PTR [edi+88]

; 187  : 		{
; 188  : 			if( kUserInfo.m_szUserID == szUserID )

  00025	ff 75 08	 push	 DWORD PTR _szUserID$[ebp]
  00028	8d 4c 1e 14	 lea	 ecx, DWORD PTR [esi+ebx+20]
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00032	84 c0		 test	 al, al
  00034	75 10		 jne	 SHORT $LN15@SetGuildUs@3

; 184  : 	for(int i = 0;i < iSize;i++)

  00036	ff 45 fc	 inc	 DWORD PTR _i$508041[ebp]
  00039	8b 45 fc	 mov	 eax, DWORD PTR _i$508041[ebp]
  0003c	83 c3 38	 add	 ebx, 56			; 00000038H
  0003f	3b 45 f8	 cmp	 eax, DWORD PTR _iSize$[ebp]
  00042	7c de		 jl	 SHORT $LL5@SetGuildUs@3

; 187  : 		{
; 188  : 			if( kUserInfo.m_szUserID == szUserID )

  00044	eb 31		 jmp	 SHORT $LN17@SetGuildUs@3
$LN15@SetGuildUs@3:

; 189  : 			{
; 190  : 				kUserInfo.m_iUserPos   = iUserPos;

  00046	8b 45 0c	 mov	 eax, DWORD PTR _iUserPos$[ebp]
  00049	89 44 1e 0c	 mov	 DWORD PTR [esi+ebx+12], eax

; 191  : 				if( iUserLevel != -1 )

  0004d	8b 45 10	 mov	 eax, DWORD PTR _iUserLevel$[ebp]
  00050	83 f8 ff	 cmp	 eax, -1
  00053	74 14		 je	 SHORT $LN1@SetGuildUs@3

; 192  : 				{
; 193  : 					kUserInfo.m_iUserLevel = iUserLevel;
; 194  : 					g_UserInfoMgr.SetGrade( szUserID, iUserLevel );

  00055	50		 push	 eax
  00056	ff 75 08	 push	 DWORD PTR _szUserID$[ebp]
  00059	89 44 1e 08	 mov	 DWORD PTR [esi+ebx+8], eax
  0005d	e8 00 00 00 00	 call	 ?GetSingleton@ioUserInfoMgr@@SAAAV1@XZ ; ioUserInfoMgr::GetSingleton
  00062	8b c8		 mov	 ecx, eax
  00064	e8 00 00 00 00	 call	 ?SetGrade@ioUserInfoMgr@@QAEXABVioHashString@@H@Z ; ioUserInfoMgr::SetGrade
$LN1@SetGuildUs@3:

; 195  : 				}
; 196  : 				UserListWnd::sg_bUserListUpdate =  true;

  00069	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?sg_bUserListUpdate@UserListWnd@@2_NA, 1 ; UserListWnd::sg_bUserListUpdate

; 197  : 				LobbyGuildUserListWnd::ChangeGuildUserList();

  00070	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?sg_bGuildUserListUpdate@LobbyGuildUserListWnd@@2_NA, 1 ; LobbyGuildUserListWnd::sg_bGuildUserListUpdate
$LN17@SetGuildUs@3:
  00077	5e		 pop	 esi
$LN3@SetGuildUs@3:
  00078	5f		 pop	 edi
  00079	5b		 pop	 ebx

; 198  : 				return;
; 199  : 			}
; 200  : 		}
; 201  : 	}
; 202  : }

  0007a	c9		 leave
  0007b	c2 0c 00	 ret	 12			; 0000000cH
?SetGuildUserPos@ioGuildData@@QAEXABVioHashString@@HH@Z ENDP ; ioGuildData::SetGuildUserPos
_TEXT	ENDS
PUBLIC	?GetUserInfo@ioGuildData@@QAEXHAAK0AAHAAVioHashString@@2@Z ; ioGuildData::GetUserInfo
; Function compile flags: /Ogsp
;	COMDAT ?GetUserInfo@ioGuildData@@QAEXHAAK0AAHAAVioHashString@@2@Z
_TEXT	SEGMENT
_iUserArray$ = 8					; size = 4
_dwTableIndex$ = 12					; size = 4
_dwUserIndex$ = 16					; size = 4
_iUserLevel$ = 20					; size = 4
_szUserID$ = 24						; size = 4
_szUserPos$ = 28					; size = 4
?GetUserInfo@ioGuildData@@QAEXHAAK0AAHAAVioHashString@@2@Z PROC ; ioGuildData::GetUserInfo, COMDAT
; _this$ = ecx

; 408  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 409  : 	if( !COMPARE( iUserArray, 0, (int)m_vUserList.size() ) )

  00004	8b 75 08	 mov	 esi, DWORD PTR _iUserArray$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	78 47		 js	 SHORT $LN1@GetUserInf
  0000b	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]
  0000e	2b 41 58	 sub	 eax, DWORD PTR [ecx+88]
  00011	57		 push	 edi
  00012	6a 38		 push	 56			; 00000038H
  00014	99		 cdq
  00015	5f		 pop	 edi
  00016	f7 ff		 idiv	 edi
  00018	3b f0		 cmp	 esi, eax
  0001a	7d 35		 jge	 SHORT $LN9@GetUserInf

; 410  : 		return;
; 411  : 	
; 412  : 	GuildUser &kUserInfo = m_vUserList[iUserArray];
; 413  : 	dwTableIndex = kUserInfo.m_dwTableIndex;
; 414  : 	dwUserIndex  = kUserInfo.m_dwUserIndex;
; 415  : 	iUserLevel   = kUserInfo.m_iUserLevel;
; 416  : 	szUserID     = kUserInfo.m_szUserID;

  0001c	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
  00022	6b f6 38	 imul	 esi, 56			; 00000038H
  00025	03 71 58	 add	 esi, DWORD PTR [ecx+88]
  00028	8b 4d 0c	 mov	 ecx, DWORD PTR _dwTableIndex$[ebp]
  0002b	8b 06		 mov	 eax, DWORD PTR [esi]
  0002d	89 01		 mov	 DWORD PTR [ecx], eax
  0002f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00032	8b 4d 10	 mov	 ecx, DWORD PTR _dwUserIndex$[ebp]
  00035	89 01		 mov	 DWORD PTR [ecx], eax
  00037	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0003a	8b 4d 14	 mov	 ecx, DWORD PTR _iUserLevel$[ebp]
  0003d	89 01		 mov	 DWORD PTR [ecx], eax
  0003f	8b 4d 18	 mov	 ecx, DWORD PTR _szUserID$[ebp]
  00042	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00045	50		 push	 eax
  00046	ff d7		 call	 edi

; 417  : 	szUserPos    = kUserInfo.m_szUserPos;

  00048	8b 4d 1c	 mov	 ecx, DWORD PTR _szUserPos$[ebp]
  0004b	83 c6 24	 add	 esi, 36			; 00000024H
  0004e	56		 push	 esi
  0004f	ff d7		 call	 edi
$LN9@GetUserInf:
  00051	5f		 pop	 edi
$LN1@GetUserInf:
  00052	5e		 pop	 esi

; 418  : }

  00053	5d		 pop	 ebp
  00054	c2 18 00	 ret	 24			; 00000018H
?GetUserInfo@ioGuildData@@QAEXHAAK0AAHAAVioHashString@@2@Z ENDP ; ioGuildData::GetUserInfo
_TEXT	ENDS
PUBLIC	?GetUserInfo@ioGuildData@@QAEXHAAVioHashString@@AAH1AA_N@Z ; ioGuildData::GetUserInfo
; Function compile flags: /Ogsp
;	COMDAT ?GetUserInfo@ioGuildData@@QAEXHAAVioHashString@@AAH1AA_N@Z
_TEXT	SEGMENT
_iUserArray$ = 8					; size = 4
_szUserID$ = 12						; size = 4
_iUserLevel$ = 16					; size = 4
_iUserPos$ = 20						; size = 4
_bOnline$ = 24						; size = 4
?GetUserInfo@ioGuildData@@QAEXHAAVioHashString@@AAH1AA_N@Z PROC ; ioGuildData::GetUserInfo, COMDAT
; _this$ = ecx

; 421  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 422  : 	if( !COMPARE( iUserArray, 0, (int)m_vUserList.size() ) )

  00004	8b 75 08	 mov	 esi, DWORD PTR _iUserArray$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	78 3d		 js	 SHORT $LN1@GetUserInf@2
  0000b	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]
  0000e	2b 41 58	 sub	 eax, DWORD PTR [ecx+88]
  00011	57		 push	 edi
  00012	6a 38		 push	 56			; 00000038H
  00014	99		 cdq
  00015	5f		 pop	 edi
  00016	f7 ff		 idiv	 edi
  00018	5f		 pop	 edi
  00019	3b f0		 cmp	 esi, eax
  0001b	7d 2b		 jge	 SHORT $LN1@GetUserInf@2

; 423  : 		return;
; 424  : 
; 425  : 	GuildUser &kUserInfo = m_vUserList[iUserArray];

  0001d	6b f6 38	 imul	 esi, 56			; 00000038H
  00020	03 71 58	 add	 esi, DWORD PTR [ecx+88]

; 426  : 	szUserID     = kUserInfo.m_szUserID;

  00023	8b 4d 0c	 mov	 ecx, DWORD PTR _szUserID$[ebp]
  00026	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00029	50		 push	 eax
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z

; 427  : 	iUserLevel   = kUserInfo.m_iUserLevel;

  00030	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00033	8b 4d 10	 mov	 ecx, DWORD PTR _iUserLevel$[ebp]
  00036	89 01		 mov	 DWORD PTR [ecx], eax

; 428  : 	iUserPos     = kUserInfo.m_iUserPos;

  00038	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0003b	8b 4d 14	 mov	 ecx, DWORD PTR _iUserPos$[ebp]
  0003e	89 01		 mov	 DWORD PTR [ecx], eax

; 429  : 	bOnline		 = kUserInfo.m_bOnline;

  00040	8a 46 34	 mov	 al, BYTE PTR [esi+52]
  00043	8b 4d 18	 mov	 ecx, DWORD PTR _bOnline$[ebp]
  00046	88 01		 mov	 BYTE PTR [ecx], al
$LN1@GetUserInf@2:
  00048	5e		 pop	 esi

; 430  : }

  00049	5d		 pop	 ebp
  0004a	c2 14 00	 ret	 20			; 00000014H
?GetUserInfo@ioGuildData@@QAEXHAAVioHashString@@AAH1AA_N@Z ENDP ; ioGuildData::GetUserInfo
_TEXT	ENDS
PUBLIC	?GetUserInfo@ioGuildData@@QAEXHAAVioHashString@@AA_N@Z ; ioGuildData::GetUserInfo
; Function compile flags: /Ogsp
;	COMDAT ?GetUserInfo@ioGuildData@@QAEXHAAVioHashString@@AA_N@Z
_TEXT	SEGMENT
_iUserArray$ = 8					; size = 4
_szUserID$ = 12						; size = 4
_bOnline$ = 16						; size = 4
?GetUserInfo@ioGuildData@@QAEXHAAVioHashString@@AA_N@Z PROC ; ioGuildData::GetUserInfo, COMDAT
; _this$ = ecx

; 433  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 434  : 	if( !COMPARE( iUserArray, 0, (int)m_vUserList.size() ) )

  00004	8b 75 08	 mov	 esi, DWORD PTR _iUserArray$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	78 2d		 js	 SHORT $LN1@GetUserInf@3
  0000b	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]
  0000e	2b 41 58	 sub	 eax, DWORD PTR [ecx+88]
  00011	57		 push	 edi
  00012	6a 38		 push	 56			; 00000038H
  00014	99		 cdq
  00015	5f		 pop	 edi
  00016	f7 ff		 idiv	 edi
  00018	5f		 pop	 edi
  00019	3b f0		 cmp	 esi, eax
  0001b	7d 1b		 jge	 SHORT $LN1@GetUserInf@3

; 435  : 		return;
; 436  : 
; 437  : 	GuildUser &kUserInfo = m_vUserList[iUserArray];

  0001d	6b f6 38	 imul	 esi, 56			; 00000038H
  00020	03 71 58	 add	 esi, DWORD PTR [ecx+88]

; 438  : 	szUserID     = kUserInfo.m_szUserID;

  00023	8b 4d 0c	 mov	 ecx, DWORD PTR _szUserID$[ebp]
  00026	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00029	50		 push	 eax
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z

; 439  : 	bOnline      = kUserInfo.m_bOnline;

  00030	8a 46 34	 mov	 al, BYTE PTR [esi+52]
  00033	8b 4d 10	 mov	 ecx, DWORD PTR _bOnline$[ebp]
  00036	88 01		 mov	 BYTE PTR [ecx], al
$LN1@GetUserInf@3:
  00038	5e		 pop	 esi

; 440  : }

  00039	5d		 pop	 ebp
  0003a	c2 0c 00	 ret	 12			; 0000000cH
?GetUserInfo@ioGuildData@@QAEXHAAVioHashString@@AA_N@Z ENDP ; ioGuildData::GetUserInfo
_TEXT	ENDS
PUBLIC	?GetUserInfo@ioGuildData@@QAEXHAAVioHashString@@AAHAA_N2@Z ; ioGuildData::GetUserInfo
EXTRN	__imp_?Clear@ioHashString@@QAEXXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?GetUserInfo@ioGuildData@@QAEXHAAVioHashString@@AAHAA_N2@Z
_TEXT	SEGMENT
_iUserArray$ = 8					; size = 4
_szUserID$ = 12						; size = 4
_iUserLevel$ = 16					; size = 4
_bAttendYesterday$ = 20					; size = 4
_bAttendToday$ = 24					; size = 4
?GetUserInfo@ioGuildData@@QAEXHAAVioHashString@@AAHAA_N2@Z PROC ; ioGuildData::GetUserInfo, COMDAT
; _this$ = ecx

; 443  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 444  : 	szUserID.Clear();

  00006	8b 4d 0c	 mov	 ecx, DWORD PTR _szUserID$[ebp]
  00009	57		 push	 edi
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Clear@ioHashString@@QAEXXZ

; 445  : 	iUserLevel = -1;

  00010	8b 7d 10	 mov	 edi, DWORD PTR _iUserLevel$[ebp]
  00013	83 0f ff	 or	 DWORD PTR [edi], -1

; 446  : 	bAttendYesterday = false;

  00016	8b 45 14	 mov	 eax, DWORD PTR _bAttendYesterday$[ebp]

; 447  : 	bAttendToday = false;
; 448  : 	if( !COMPARE( iUserArray, 0, (int)m_vUserList.size() ) )

  00019	8b 4d 08	 mov	 ecx, DWORD PTR _iUserArray$[ebp]
  0001c	c6 00 00	 mov	 BYTE PTR [eax], 0
  0001f	8b 45 18	 mov	 eax, DWORD PTR _bAttendToday$[ebp]
  00022	c6 00 00	 mov	 BYTE PTR [eax], 0
  00025	85 c9		 test	 ecx, ecx
  00027	78 3c		 js	 SHORT $LN1@GetUserInf@4
  00029	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  0002c	2b 46 58	 sub	 eax, DWORD PTR [esi+88]
  0002f	53		 push	 ebx
  00030	6a 38		 push	 56			; 00000038H
  00032	99		 cdq
  00033	5b		 pop	 ebx
  00034	f7 fb		 idiv	 ebx
  00036	5b		 pop	 ebx
  00037	3b c8		 cmp	 ecx, eax
  00039	7d 2a		 jge	 SHORT $LN1@GetUserInf@4

; 449  : 		return;
; 450  : 
; 451  : 	GuildUser &kUserInfo = m_vUserList[iUserArray];

  0003b	6b c9 38	 imul	 ecx, 56			; 00000038H
  0003e	03 4e 58	 add	 ecx, DWORD PTR [esi+88]
  00041	8b f1		 mov	 esi, ecx

; 452  : 	szUserID			= kUserInfo.m_szUserID;

  00043	8b 4d 0c	 mov	 ecx, DWORD PTR _szUserID$[ebp]
  00046	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00049	50		 push	 eax
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z

; 453  : 	iUserLevel			= kUserInfo.m_iUserLevel;

  00050	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 454  : 	bAttendYesterday	= kUserInfo.m_bAttendedYesterday;

  00053	8b 4d 14	 mov	 ecx, DWORD PTR _bAttendYesterday$[ebp]
  00056	89 07		 mov	 DWORD PTR [edi], eax
  00058	8a 46 35	 mov	 al, BYTE PTR [esi+53]
  0005b	88 01		 mov	 BYTE PTR [ecx], al

; 455  : 	bAttendToday		= kUserInfo.m_bAttendedToday;

  0005d	8a 46 36	 mov	 al, BYTE PTR [esi+54]
  00060	8b 4d 18	 mov	 ecx, DWORD PTR _bAttendToday$[ebp]
  00063	88 01		 mov	 BYTE PTR [ecx], al
$LN1@GetUserInf@4:
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi

; 456  : }

  00067	5d		 pop	 ebp
  00068	c2 14 00	 ret	 20			; 00000014H
?GetUserInfo@ioGuildData@@QAEXHAAVioHashString@@AAHAA_N2@Z ENDP ; ioGuildData::GetUserInfo
_TEXT	ENDS
PUBLIC	?GetUserPos@ioGuildData@@QAEXKAAVioHashString@@@Z ; ioGuildData::GetUserPos
; Function compile flags: /Ogsp
;	COMDAT ?GetUserPos@ioGuildData@@QAEXKAAVioHashString@@@Z
_TEXT	SEGMENT
_dwUserIndex$ = 8					; size = 4
_szUserPos$ = 12					; size = 4
?GetUserPos@ioGuildData@@QAEXKAAVioHashString@@@Z PROC	; ioGuildData::GetUserPos, COMDAT
; _this$ = ecx

; 459  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 460  : 	for( int i = 0; i <  (int)m_vUserList.size(); ++i )

  00007	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  0000a	2b 46 58	 sub	 eax, DWORD PTR [esi+88]
  0000d	6a 38		 push	 56			; 00000038H
  0000f	99		 cdq
  00010	59		 pop	 ecx
  00011	f7 f9		 idiv	 ecx
  00013	33 db		 xor	 ebx, ebx
  00015	85 c0		 test	 eax, eax
  00017	7e 32		 jle	 SHORT $LN2@GetUserPos
  00019	57		 push	 edi
  0001a	33 ff		 xor	 edi, edi
$LL13@GetUserPos:

; 461  : 	{
; 462  : 		GuildUser &kUserInfo = m_vUserList[i];

  0001c	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
  0001f	03 c7		 add	 eax, edi

; 463  : 		if( kUserInfo.m_dwUserIndex == dwUserIndex )

  00021	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00024	3b 4d 08	 cmp	 ecx, DWORD PTR _dwUserIndex$[ebp]
  00027	75 0d		 jne	 SHORT $LN3@GetUserPos

; 464  : 		{
; 465  : 			szUserPos = kUserInfo.m_szUserPos;

  00029	8b 4d 0c	 mov	 ecx, DWORD PTR _szUserPos$[ebp]
  0002c	83 c0 24	 add	 eax, 36			; 00000024H
  0002f	50		 push	 eax
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
$LN3@GetUserPos:

; 460  : 	for( int i = 0; i <  (int)m_vUserList.size(); ++i )

  00036	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  00039	2b 46 58	 sub	 eax, DWORD PTR [esi+88]
  0003c	6a 38		 push	 56			; 00000038H
  0003e	99		 cdq
  0003f	59		 pop	 ecx
  00040	f7 f9		 idiv	 ecx
  00042	43		 inc	 ebx
  00043	83 c7 38	 add	 edi, 56			; 00000038H
  00046	3b d8		 cmp	 ebx, eax
  00048	7c d2		 jl	 SHORT $LL13@GetUserPos
  0004a	5f		 pop	 edi
$LN2@GetUserPos:
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx

; 466  : 		}
; 467  : 	}
; 468  : }

  0004d	5d		 pop	 ebp
  0004e	c2 08 00	 ret	 8
?GetUserPos@ioGuildData@@QAEXKAAVioHashString@@@Z ENDP	; ioGuildData::GetUserPos
_TEXT	ENDS
PUBLIC	?FillUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z	; ioGuildData::FillUserList
EXTRN	??6SP2Packet@@QAEAAV0@H@Z:PROC			; SP2Packet::operator<<
; Function compile flags: /Ogsp
;	COMDAT ?FillUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z
_TEXT	SEGMENT
_rkPacket$ = 8						; size = 4
?FillUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z PROC	; ioGuildData::FillUserList, COMDAT
; _this$ = ecx

; 471  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 472  : 	int iSize = m_vUserList.size();

  00007	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  0000a	2b 46 58	 sub	 eax, DWORD PTR [esi+88]
  0000d	6a 38		 push	 56			; 00000038H
  0000f	59		 pop	 ecx
  00010	99		 cdq
  00011	f7 f9		 idiv	 ecx

; 473  : 	rkPacket << iSize;

  00013	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  00016	8b d8		 mov	 ebx, eax
  00018	53		 push	 ebx
  00019	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@H@Z ; SP2Packet::operator<<

; 474  : 	for(int i = 0;i < iSize;i++)

  0001e	85 db		 test	 ebx, ebx
  00020	7e 19		 jle	 SHORT $LN1@FillUserLi

; 472  : 	int iSize = m_vUserList.size();

  00022	57		 push	 edi
  00023	33 ff		 xor	 edi, edi
$LL3@FillUserLi:

; 475  : 	{
; 476  : 		GuildUser &kUserInfo = m_vUserList[i];
; 477  : 		{
; 478  : 			rkPacket << kUserInfo.m_dwUserIndex;

  00025	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
  00028	ff 74 07 04	 push	 DWORD PTR [edi+eax+4]
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  0002f	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@K@Z ; SP2Packet::operator<<
  00034	83 c7 38	 add	 edi, 56			; 00000038H
  00037	4b		 dec	 ebx
  00038	75 eb		 jne	 SHORT $LL3@FillUserLi
  0003a	5f		 pop	 edi
$LN1@FillUserLi:
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx

; 479  : 		}
; 480  : 	}
; 481  : }

  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
?FillUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z ENDP	; ioGuildData::FillUserList
_TEXT	ENDS
PUBLIC	?InitGuildTodayAttendedMember@ioGuildData@@IAEXXZ ; ioGuildData::InitGuildTodayAttendedMember
; Function compile flags: /Ogsp
;	COMDAT ?InitGuildTodayAttendedMember@ioGuildData@@IAEXXZ
_TEXT	SEGMENT
?InitGuildTodayAttendedMember@ioGuildData@@IAEXXZ PROC	; ioGuildData::InitGuildTodayAttendedMember, COMDAT
; _this$ = ecx

; 642  : 	for ( int i=0 ; i<(int)m_vUserList.size() ; ++i )

  00000	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]
  00003	2b 41 58	 sub	 eax, DWORD PTR [ecx+88]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	6a 38		 push	 56			; 00000038H
  0000a	99		 cdq
  0000b	5e		 pop	 esi
  0000c	f7 fe		 idiv	 esi
  0000e	33 ff		 xor	 edi, edi
  00010	85 c0		 test	 eax, eax
  00012	7e 20		 jle	 SHORT $LN1@InitGuildT
  00014	33 f6		 xor	 esi, esi
  00016	53		 push	 ebx
$LL12@InitGuildT:

; 643  : 		m_vUserList[i].m_bAttendedToday = false;

  00017	8b 41 58	 mov	 eax, DWORD PTR [ecx+88]
  0001a	c6 44 06 36 00	 mov	 BYTE PTR [esi+eax+54], 0
  0001f	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]
  00022	2b 41 58	 sub	 eax, DWORD PTR [ecx+88]
  00025	6a 38		 push	 56			; 00000038H
  00027	99		 cdq
  00028	5b		 pop	 ebx
  00029	f7 fb		 idiv	 ebx
  0002b	47		 inc	 edi
  0002c	83 c6 38	 add	 esi, 56			; 00000038H
  0002f	3b f8		 cmp	 edi, eax
  00031	7c e4		 jl	 SHORT $LL12@InitGuildT
  00033	5b		 pop	 ebx
$LN1@InitGuildT:
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi

; 644  : }

  00036	c3		 ret	 0
?InitGuildTodayAttendedMember@ioGuildData@@IAEXXZ ENDP	; ioGuildData::InitGuildTodayAttendedMember
_TEXT	ENDS
PUBLIC	?InitGuildYesterdayAttendedMember@ioGuildData@@IAEXXZ ; ioGuildData::InitGuildYesterdayAttendedMember
; Function compile flags: /Ogsp
;	COMDAT ?InitGuildYesterdayAttendedMember@ioGuildData@@IAEXXZ
_TEXT	SEGMENT
?InitGuildYesterdayAttendedMember@ioGuildData@@IAEXXZ PROC ; ioGuildData::InitGuildYesterdayAttendedMember, COMDAT
; _this$ = ecx

; 648  : 	for ( int i=0 ; i<(int)m_vUserList.size() ; ++i )

  00000	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]
  00003	2b 41 58	 sub	 eax, DWORD PTR [ecx+88]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	6a 38		 push	 56			; 00000038H
  0000a	99		 cdq
  0000b	5e		 pop	 esi
  0000c	f7 fe		 idiv	 esi
  0000e	33 ff		 xor	 edi, edi
  00010	85 c0		 test	 eax, eax
  00012	7e 20		 jle	 SHORT $LN1@InitGuildY
  00014	33 f6		 xor	 esi, esi
  00016	53		 push	 ebx
$LL12@InitGuildY:

; 649  : 		m_vUserList[i].m_bAttendedYesterday = false;

  00017	8b 41 58	 mov	 eax, DWORD PTR [ecx+88]
  0001a	c6 44 06 35 00	 mov	 BYTE PTR [esi+eax+53], 0
  0001f	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]
  00022	2b 41 58	 sub	 eax, DWORD PTR [ecx+88]
  00025	6a 38		 push	 56			; 00000038H
  00027	99		 cdq
  00028	5b		 pop	 ebx
  00029	f7 fb		 idiv	 ebx
  0002b	47		 inc	 edi
  0002c	83 c6 38	 add	 esi, 56			; 00000038H
  0002f	3b f8		 cmp	 edi, eax
  00031	7c e4		 jl	 SHORT $LL12@InitGuildY
  00033	5b		 pop	 ebx
$LN1@InitGuildY:
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi

; 650  : }

  00036	c3		 ret	 0
?InitGuildYesterdayAttendedMember@ioGuildData@@IAEXXZ ENDP ; ioGuildData::InitGuildYesterdayAttendedMember
_TEXT	ENDS
PUBLIC	?SetGuildTodayAttendedUser@ioGuildData@@QAEXK@Z	; ioGuildData::SetGuildTodayAttendedUser
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildTodayAttendedUser@ioGuildData@@QAEXK@Z
_TEXT	SEGMENT
_dwUserIndex$ = 8					; size = 4
?SetGuildTodayAttendedUser@ioGuildData@@QAEXK@Z PROC	; ioGuildData::SetGuildTodayAttendedUser, COMDAT
; _this$ = ecx

; 703  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 704  : 	for ( int i=0 ; i<(int)m_vUserList.size() ; ++i )

  00003	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]
  00006	2b 41 58	 sub	 eax, DWORD PTR [ecx+88]
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	6a 38		 push	 56			; 00000038H
  0000d	99		 cdq
  0000e	5f		 pop	 edi
  0000f	f7 ff		 idiv	 edi
  00011	33 f6		 xor	 esi, esi
  00013	85 c0		 test	 eax, eax
  00015	7e 2a		 jle	 SHORT $LN3@SetGuildTo
  00017	8b 79 58	 mov	 edi, DWORD PTR [ecx+88]
  0001a	8d 57 36	 lea	 edx, DWORD PTR [edi+54]
  0001d	53		 push	 ebx
$LL5@SetGuildTo:

; 705  : 	{
; 706  : 		if( m_vUserList[i].m_dwUserIndex == dwUserIndex )

  0001e	8b 5a ce	 mov	 ebx, DWORD PTR [edx-50]
  00021	3b 5d 08	 cmp	 ebx, DWORD PTR _dwUserIndex$[ebp]
  00024	75 05		 jne	 SHORT $LN4@SetGuildTo

; 707  : 		{
; 708  : 			//중복출석인지 체크
; 709  : 			if ( !m_vUserList[i].m_bAttendedToday )

  00026	80 3a 00	 cmp	 BYTE PTR [edx], 0
  00029	74 0a		 je	 SHORT $LN17@SetGuildTo
$LN4@SetGuildTo:

; 704  : 	for ( int i=0 ; i<(int)m_vUserList.size() ; ++i )

  0002b	46		 inc	 esi
  0002c	83 c2 38	 add	 edx, 56			; 00000038H
  0002f	3b f0		 cmp	 esi, eax
  00031	7c eb		 jl	 SHORT $LL5@SetGuildTo

; 707  : 		{
; 708  : 			//중복출석인지 체크
; 709  : 			if ( !m_vUserList[i].m_bAttendedToday )

  00033	eb 0b		 jmp	 SHORT $LN19@SetGuildTo
$LN17@SetGuildTo:

; 710  : 			{
; 711  : 				m_vUserList[i].m_bAttendedToday = true;

  00035	6b f6 38	 imul	 esi, 56			; 00000038H
  00038	c6 44 3e 36 01	 mov	 BYTE PTR [esi+edi+54], 1

; 712  : 				m_iGuildTodayAttendCount++;

  0003d	ff 41 50	 inc	 DWORD PTR [ecx+80]
$LN19@SetGuildTo:
  00040	5b		 pop	 ebx
$LN3@SetGuildTo:
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi

; 713  : 				return;
; 714  : 			}
; 715  : 		}
; 716  : 	}
; 717  : }

  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?SetGuildTodayAttendedUser@ioGuildData@@QAEXK@Z ENDP	; ioGuildData::SetGuildTodayAttendedUser
_TEXT	ENDS
PUBLIC	?SetGuildYesterdayAttendedUser@ioGuildData@@QAEXK@Z ; ioGuildData::SetGuildYesterdayAttendedUser
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildYesterdayAttendedUser@ioGuildData@@QAEXK@Z
_TEXT	SEGMENT
_dwUserIndex$ = 8					; size = 4
?SetGuildYesterdayAttendedUser@ioGuildData@@QAEXK@Z PROC ; ioGuildData::SetGuildYesterdayAttendedUser, COMDAT
; _this$ = ecx

; 720  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 721  : 	for ( int i=0 ; i<(int)m_vUserList.size() ; ++i )

  00003	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]
  00006	2b 41 58	 sub	 eax, DWORD PTR [ecx+88]
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	6a 38		 push	 56			; 00000038H
  0000d	99		 cdq
  0000e	5f		 pop	 edi
  0000f	f7 ff		 idiv	 edi
  00011	33 f6		 xor	 esi, esi
  00013	85 c0		 test	 eax, eax
  00015	7e 25		 jle	 SHORT $LN3@SetGuildYe
  00017	8b 49 58	 mov	 ecx, DWORD PTR [ecx+88]
  0001a	8d 51 35	 lea	 edx, DWORD PTR [ecx+53]
$LL5@SetGuildYe:

; 722  : 	{
; 723  : 		if( m_vUserList[i].m_dwUserIndex == dwUserIndex )

  0001d	8b 7a cf	 mov	 edi, DWORD PTR [edx-49]
  00020	3b 7d 08	 cmp	 edi, DWORD PTR _dwUserIndex$[ebp]
  00023	75 05		 jne	 SHORT $LN4@SetGuildYe

; 724  : 		{
; 725  : 			if ( !m_vUserList[i].m_bAttendedYesterday )

  00025	80 3a 00	 cmp	 BYTE PTR [edx], 0
  00028	74 0a		 je	 SHORT $LN17@SetGuildYe
$LN4@SetGuildYe:

; 721  : 	for ( int i=0 ; i<(int)m_vUserList.size() ; ++i )

  0002a	46		 inc	 esi
  0002b	83 c2 38	 add	 edx, 56			; 00000038H
  0002e	3b f0		 cmp	 esi, eax
  00030	7c eb		 jl	 SHORT $LL5@SetGuildYe

; 724  : 		{
; 725  : 			if ( !m_vUserList[i].m_bAttendedYesterday )

  00032	eb 08		 jmp	 SHORT $LN3@SetGuildYe
$LN17@SetGuildYe:

; 726  : 			{
; 727  : 				m_vUserList[i].m_bAttendedYesterday = true;

  00034	6b f6 38	 imul	 esi, 56			; 00000038H
  00037	c6 44 0e 35 01	 mov	 BYTE PTR [esi+ecx+53], 1
$LN3@SetGuildYe:
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi

; 728  : 				return;
; 729  : 			}
; 730  : 		}
; 731  : 	}
; 732  : }

  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
?SetGuildYesterdayAttendedUser@ioGuildData@@QAEXK@Z ENDP ; ioGuildData::SetGuildYesterdayAttendedUser
_TEXT	ENDS
PUBLIC	?GetSingleton@ioGuildInfo@@SAAAV1@XZ		; ioGuildInfo::GetSingleton
; Function compile flags: /Ogsp
;	COMDAT ?GetSingleton@ioGuildInfo@@SAAAV1@XZ
_TEXT	SEGMENT
?GetSingleton@ioGuildInfo@@SAAAV1@XZ PROC		; ioGuildInfo::GetSingleton, COMDAT

; 769  : 	return Singleton< ioGuildInfo >::GetSingleton();

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioGuildInfo@@@@1PAVioGuildInfo@@A ; Singleton<ioGuildInfo>::ms_Singleton

; 770  : }

  00005	c3		 ret	 0
?GetSingleton@ioGuildInfo@@SAAAV1@XZ ENDP		; ioGuildInfo::GetSingleton
_TEXT	ENDS
PUBLIC	?GetGuildLevelToMaxEntry@ioGuildInfo@@QAEKK@Z	; ioGuildInfo::GetGuildLevelToMaxEntry
; Function compile flags: /Ogsp
;	COMDAT ?GetGuildLevelToMaxEntry@ioGuildInfo@@QAEKK@Z
_TEXT	SEGMENT
_dwGuildLevel$ = 8					; size = 4
?GetGuildLevelToMaxEntry@ioGuildInfo@@QAEKK@Z PROC	; ioGuildInfo::GetGuildLevelToMaxEntry, COMDAT
; _this$ = ecx

; 803  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 804  : 	if( dwGuildLevel >= m_dwLevelToEntryCount.size() )

  00003	8b 51 74	 mov	 edx, DWORD PTR [ecx+116]
  00006	2b 51 70	 sub	 edx, DWORD PTR [ecx+112]
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwGuildLevel$[ebp]
  0000c	c1 fa 02	 sar	 edx, 2
  0000f	3b c2		 cmp	 eax, edx
  00011	72 04		 jb	 SHORT $LN1@GetGuildLe

; 805  : 		return 0;

  00013	33 c0		 xor	 eax, eax
  00015	eb 06		 jmp	 SHORT $LN2@GetGuildLe
$LN1@GetGuildLe:

; 806  : 
; 807  : 	return m_dwLevelToEntryCount[dwGuildLevel];

  00017	8b 49 70	 mov	 ecx, DWORD PTR [ecx+112]
  0001a	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
$LN2@GetGuildLe:

; 808  : }

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?GetGuildLevelToMaxEntry@ioGuildInfo@@QAEKK@Z ENDP	; ioGuildInfo::GetGuildLevelToMaxEntry
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?InitMyGuildData@ioGuildInfo@@QAEXXZ		; ioGuildInfo::InitMyGuildData
EXTRN	?CloseGuildMarkPage@ioApplication@@QAEXXZ:PROC	; ioApplication::CloseGuildMarkPage
EXTRN	?GetSingleton@ioApplication@@SAAAV1@XZ:PROC	; ioApplication::GetSingleton
EXTRN	?SendToAllPlayingUser@P2PNetwork@@YAXAAVSP2Packet@@PAVioBaseChar@@@Z:PROC ; P2PNetwork::SendToAllPlayingUser
EXTRN	??6SP2Packet@@QAEAAV0@ABVioHashString@@@Z:PROC	; SP2Packet::operator<<
EXTRN	?SetGuildIndex@ioUserInfoMgr@@QAEXABVioHashString@@K@Z:PROC ; ioUserInfoMgr::SetGuildIndex
EXTRN	?GetSingleton@ioMyInfo@@SAAAV1@XZ:PROC		; ioMyInfo::GetSingleton
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\userlistwnd.h
xdata$x	SEGMENT
__unwindtable$?InitMyGuildData@ioGuildInfo@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitMyGuildData@ioGuildInfo@@QAEXXZ$0
__ehfuncinfo$?InitMyGuildData@ioGuildInfo@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InitMyGuildData@ioGuildInfo@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?InitMyGuildData@ioGuildInfo@@QAEXXZ
_TEXT	SEGMENT
_kPacket$ = -32808					; size = 32792
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?InitMyGuildData@ioGuildInfo@@QAEXXZ PROC		; ioGuildInfo::InitMyGuildData, COMDAT
; _this$ = ecx

; 811  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InitMyGuildData@ioGuildInfo@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 1c 80 00 00	 mov	 eax, 32796		; 0000801cH
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	53		 push	 ebx
  00026	56		 push	 esi
  00027	57		 push	 edi
  00028	50		 push	 eax
  00029	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 812  : 	m_dwGuildIndex	  = 0;
; 813  : 	m_szGuildName.Clear();

  00032	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_?Clear@ioHashString@@QAEXXZ
  00038	8b f1		 mov	 esi, ecx
  0003a	33 ff		 xor	 edi, edi
  0003c	8d 8e 94 00 00
	00		 lea	 ecx, DWORD PTR [esi+148]
  00042	89 be 90 00 00
	00		 mov	 DWORD PTR [esi+144], edi
  00048	ff d3		 call	 ebx

; 814  : 	m_szGuildPosition.Clear();

  0004a	8d 8e a4 00 00
	00		 lea	 ecx, DWORD PTR [esi+164]
  00050	ff d3		 call	 ebx

; 815  : 	g_UserInfoMgr.SetGuildIndex( g_MyInfo.GetPublicID(), 0 );

  00052	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00057	83 c0 1c	 add	 eax, 28			; 0000001cH
  0005a	57		 push	 edi
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?GetSingleton@ioUserInfoMgr@@SAAAV1@XZ ; ioUserInfoMgr::GetSingleton
  00061	8b c8		 mov	 ecx, eax
  00063	e8 00 00 00 00	 call	 ?SetGuildIndex@ioUserInfoMgr@@QAEXABVioHashString@@K@Z ; ioUserInfoMgr::SetGuildIndex

; 816  : 
; 817  : 	m_GuildCreatedTime				= 0;

  00068	89 be fc 00 00
	00		 mov	 DWORD PTR [esi+252], edi
  0006e	89 be 00 01 00
	00		 mov	 DWORD PTR [esi+256], edi

; 818  : 	m_EnableAttendTime				= 0;

  00074	89 be 04 01 00
	00		 mov	 DWORD PTR [esi+260], edi
  0007a	89 be 08 01 00
	00		 mov	 DWORD PTR [esi+264], edi

; 819  : 	m_EnableRewardTime				= 0;

  00080	89 be 0c 01 00
	00		 mov	 DWORD PTR [esi+268], edi
  00086	89 be 10 01 00
	00		 mov	 DWORD PTR [esi+272], edi

; 820  : 	m_LoginTime						= 0;

  0008c	89 be 14 01 00
	00		 mov	 DWORD PTR [esi+276], edi
  00092	89 be 18 01 00
	00		 mov	 DWORD PTR [esi+280], edi

; 821  : 	m_MemberAttendInfoRequestTime	= 0;
; 822  : 
; 823  : 	// 방안 유저들 동기화
; 824  : 	SP2Packet kPacket( CUPK_GUILD_INFO_CHANGE );

  00098	68 65 41 00 00	 push	 16741			; 00004165H
  0009d	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$[ebp]
  000a3	89 be 1c 01 00
	00		 mov	 DWORD PTR [esi+284], edi
  000a9	89 be 20 01 00
	00		 mov	 DWORD PTR [esi+288], edi
  000af	e8 00 00 00 00	 call	 ??0SP2Packet@@QAE@K@Z	; SP2Packet::SP2Packet
  000b4	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi

; 825  : 	kPacket << g_MyInfo.GetPublicID() << 0 << 0;

  000b7	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  000bc	57		 push	 edi
  000bd	57		 push	 edi
  000be	83 c0 1c	 add	 eax, 28			; 0000001cH
  000c1	50		 push	 eax
  000c2	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$[ebp]
  000c8	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@ABVioHashString@@@Z ; SP2Packet::operator<<
  000cd	8b c8		 mov	 ecx, eax
  000cf	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@H@Z ; SP2Packet::operator<<
  000d4	8b c8		 mov	 ecx, eax
  000d6	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@H@Z ; SP2Packet::operator<<

; 826  : 	P2PNetwork::SendToAllPlayingUser( kPacket );

  000db	8d 85 d8 7f ff
	ff		 lea	 eax, DWORD PTR _kPacket$[ebp]
  000e1	57		 push	 edi
  000e2	50		 push	 eax
  000e3	e8 00 00 00 00	 call	 ?SendToAllPlayingUser@P2PNetwork@@YAXAAVSP2Packet@@PAVioBaseChar@@@Z ; P2PNetwork::SendToAllPlayingUser
  000e8	59		 pop	 ecx
  000e9	59		 pop	 ecx

; 827  : 	g_App.CloseGuildMarkPage();

  000ea	e8 00 00 00 00	 call	 ?GetSingleton@ioApplication@@SAAAV1@XZ ; ioApplication::GetSingleton
  000ef	8b c8		 mov	 ecx, eax
  000f1	e8 00 00 00 00	 call	 ?CloseGuildMarkPage@ioApplication@@QAEXXZ ; ioApplication::CloseGuildMarkPage

; 828  : 
; 829  : 	UserListWnd::sg_bUserListUpdate =  true;
; 830  : 	LobbyGuildUserListWnd::ChangeGuildUserList();
; 831  : }

  000f6	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000fa	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$[ebp]
  00100	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?sg_bUserListUpdate@UserListWnd@@2_NA, 1 ; UserListWnd::sg_bUserListUpdate
  00107	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?sg_bGuildUserListUpdate@LobbyGuildUserListWnd@@2_NA, 1 ; LobbyGuildUserListWnd::sg_bGuildUserListUpdate
  0010e	e8 00 00 00 00	 call	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
  00113	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00116	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011d	59		 pop	 ecx
  0011e	5f		 pop	 edi
  0011f	5e		 pop	 esi
  00120	5b		 pop	 ebx
  00121	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00124	33 cd		 xor	 ecx, ebp
  00126	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0012b	c9		 leave
  0012c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InitMyGuildData@ioGuildInfo@@QAEXXZ$0:
  00000	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
__ehhandler$?InitMyGuildData@ioGuildInfo@@QAEXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a d4 7f ff
	ff		 mov	 ecx, DWORD PTR [edx-32812]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InitMyGuildData@ioGuildInfo@@QAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InitMyGuildData@ioGuildInfo@@QAEXXZ ENDP		; ioGuildInfo::InitMyGuildData
PUBLIC	?IsGuildEntryDelay@ioGuildInfo@@QAE_NK@Z	; ioGuildInfo::IsGuildEntryDelay
; Function compile flags: /Ogsp
;	COMDAT ?IsGuildEntryDelay@ioGuildInfo@@QAE_NK@Z
_TEXT	SEGMENT
_dwGuildIndex$ = 8					; size = 4
?IsGuildEntryDelay@ioGuildInfo@@QAE_NK@Z PROC		; ioGuildInfo::IsGuildEntryDelay, COMDAT
; _this$ = ecx

; 950  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 951  : 	if( m_dwEntryDelayGuildList.empty( )) return false;

  00003	8b 91 80 00 00
	00		 mov	 edx, DWORD PTR [ecx+128]
  00009	8b 81 84 00 00
	00		 mov	 eax, DWORD PTR [ecx+132]
  0000f	3b d0		 cmp	 edx, eax
  00011	75 04		 jne	 SHORT $LN5@IsGuildEnt
  00013	32 c0		 xor	 al, al
  00015	eb 24		 jmp	 SHORT $LN6@IsGuildEnt
$LN5@IsGuildEnt:

; 952  : 	
; 953  : 	int iMaxSize = m_dwEntryDelayGuildList.size();

  00017	2b c2		 sub	 eax, edx
  00019	c1 f8 02	 sar	 eax, 2

; 954  : 	for(int i = 0;i < iMaxSize;i++)

  0001c	33 d2		 xor	 edx, edx
  0001e	56		 push	 esi
  0001f	85 c0		 test	 eax, eax
  00021	7e 15		 jle	 SHORT $LN2@IsGuildEnt

; 952  : 	
; 953  : 	int iMaxSize = m_dwEntryDelayGuildList.size();

  00023	8b 89 80 00 00
	00		 mov	 ecx, DWORD PTR [ecx+128]
$LL4@IsGuildEnt:

; 955  : 	{
; 956  : 		if( m_dwEntryDelayGuildList[i] == dwGuildIndex )

  00029	8b 31		 mov	 esi, DWORD PTR [ecx]
  0002b	3b 75 08	 cmp	 esi, DWORD PTR _dwGuildIndex$[ebp]
  0002e	74 0f		 je	 SHORT $LN15@IsGuildEnt

; 954  : 	for(int i = 0;i < iMaxSize;i++)

  00030	42		 inc	 edx
  00031	83 c1 04	 add	 ecx, 4
  00034	3b d0		 cmp	 edx, eax
  00036	7c f1		 jl	 SHORT $LL4@IsGuildEnt
$LN2@IsGuildEnt:

; 958  : 	}
; 959  : 	return false;

  00038	32 c0		 xor	 al, al
$LN17@IsGuildEnt:
  0003a	5e		 pop	 esi
$LN6@IsGuildEnt:

; 960  : }

  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
$LN15@IsGuildEnt:

; 957  : 			return true;

  0003f	b0 01		 mov	 al, 1
  00041	eb f7		 jmp	 SHORT $LN17@IsGuildEnt
?IsGuildEntryDelay@ioGuildInfo@@QAE_NK@Z ENDP		; ioGuildInfo::IsGuildEntryDelay
_TEXT	ENDS
PUBLIC	?GetAttendRewardSize@ioGuildInfo@@QAEHXZ	; ioGuildInfo::GetAttendRewardSize
; Function compile flags: /Ogsp
;	COMDAT ?GetAttendRewardSize@ioGuildInfo@@QAEHXZ
_TEXT	SEGMENT
?GetAttendRewardSize@ioGuildInfo@@QAEHXZ PROC		; ioGuildInfo::GetAttendRewardSize, COMDAT
; _this$ = ecx

; 1348 : 	return m_AttendRewardVec.size();

  00000	8b 81 e0 00 00
	00		 mov	 eax, DWORD PTR [ecx+224]
  00006	2b 81 dc 00 00
	00		 sub	 eax, DWORD PTR [ecx+220]
  0000c	c1 f8 02	 sar	 eax, 2

; 1349 : }

  0000f	c3		 ret	 0
?GetAttendRewardSize@ioGuildInfo@@QAEHXZ ENDP		; ioGuildInfo::GetAttendRewardSize
_TEXT	ENDS
PUBLIC	?GetRankRewardSize@ioGuildInfo@@QAEHXZ		; ioGuildInfo::GetRankRewardSize
; Function compile flags: /Ogsp
;	COMDAT ?GetRankRewardSize@ioGuildInfo@@QAEHXZ
_TEXT	SEGMENT
?GetRankRewardSize@ioGuildInfo@@QAEHXZ PROC		; ioGuildInfo::GetRankRewardSize, COMDAT
; _this$ = ecx

; 1353 : 	return m_RankRewardVec.size();

  00000	8b 81 f0 00 00
	00		 mov	 eax, DWORD PTR [ecx+240]
  00006	2b 81 ec 00 00
	00		 sub	 eax, DWORD PTR [ecx+236]
  0000c	c1 f8 02	 sar	 eax, 2

; 1354 : }

  0000f	c3		 ret	 0
?GetRankRewardSize@ioGuildInfo@@QAEHXZ ENDP		; ioGuildInfo::GetRankRewardSize
_TEXT	ENDS
PUBLIC	?GetAttendRewardInfo@ioGuildInfo@@QBEQBUGuildAttendRwardInfo@@H@Z ; ioGuildInfo::GetAttendRewardInfo
; Function compile flags: /Ogsp
;	COMDAT ?GetAttendRewardInfo@ioGuildInfo@@QBEQBUGuildAttendRwardInfo@@H@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?GetAttendRewardInfo@ioGuildInfo@@QBEQBUGuildAttendRwardInfo@@H@Z PROC ; ioGuildInfo::GetAttendRewardInfo, COMDAT
; _this$ = ecx

; 1357 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1358 : 	if ( !COMPARE( iIndex, 0, (int)m_AttendRewardVec.size() ) )

  00003	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	78 19		 js	 SHORT $LN1@GetAttendR
  0000a	8d 81 dc 00 00
	00		 lea	 eax, DWORD PTR [ecx+220]
  00010	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00013	2b 08		 sub	 ecx, DWORD PTR [eax]
  00015	c1 f9 02	 sar	 ecx, 2
  00018	3b d1		 cmp	 edx, ecx
  0001a	7d 07		 jge	 SHORT $LN1@GetAttendR

; 1360 : 
; 1361 : 	return m_AttendRewardVec[iIndex];

  0001c	8b 00		 mov	 eax, DWORD PTR [eax]
  0001e	8b 04 90	 mov	 eax, DWORD PTR [eax+edx*4]
  00021	eb 02		 jmp	 SHORT $LN3@GetAttendR
$LN1@GetAttendR:

; 1359 : 		return NULL;

  00023	33 c0		 xor	 eax, eax
$LN3@GetAttendR:

; 1362 : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?GetAttendRewardInfo@ioGuildInfo@@QBEQBUGuildAttendRwardInfo@@H@Z ENDP ; ioGuildInfo::GetAttendRewardInfo
_TEXT	ENDS
PUBLIC	?GetRankRewardInfo@ioGuildInfo@@QBEQBUGuildRankRwardInfo@@H@Z ; ioGuildInfo::GetRankRewardInfo
; Function compile flags: /Ogsp
;	COMDAT ?GetRankRewardInfo@ioGuildInfo@@QBEQBUGuildRankRwardInfo@@H@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?GetRankRewardInfo@ioGuildInfo@@QBEQBUGuildRankRwardInfo@@H@Z PROC ; ioGuildInfo::GetRankRewardInfo, COMDAT
; _this$ = ecx

; 1365 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1366 : 	if ( !COMPARE( iIndex, 0, (int)m_RankRewardVec.size() ) )

  00003	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	78 19		 js	 SHORT $LN1@GetRankRew
  0000a	8d 81 ec 00 00
	00		 lea	 eax, DWORD PTR [ecx+236]
  00010	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00013	2b 08		 sub	 ecx, DWORD PTR [eax]
  00015	c1 f9 02	 sar	 ecx, 2
  00018	3b d1		 cmp	 edx, ecx
  0001a	7d 07		 jge	 SHORT $LN1@GetRankRew

; 1368 : 
; 1369 : 	return m_RankRewardVec[iIndex];

  0001c	8b 00		 mov	 eax, DWORD PTR [eax]
  0001e	8b 04 90	 mov	 eax, DWORD PTR [eax+edx*4]
  00021	eb 02		 jmp	 SHORT $LN3@GetRankRew
$LN1@GetRankRew:

; 1367 : 		return NULL;

  00023	33 c0		 xor	 eax, eax
$LN3@GetRankRew:

; 1370 : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?GetRankRewardInfo@ioGuildInfo@@QBEQBUGuildRankRwardInfo@@H@Z ENDP ; ioGuildInfo::GetRankRewardInfo
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SetAttendRewardTime@ioGuildInfo@@IAEXVCTime@ATL@@@Z ; ioGuildInfo::SetAttendRewardTime
EXTRN	?IncreaseDay@DateHelp@@YAXAAH00@Z:PROC		; DateHelp::IncreaseDay
; Function compile flags: /Ogsp
;	COMDAT ?SetAttendRewardTime@ioGuildInfo@@IAEXVCTime@ATL@@@Z
_TEXT	SEGMENT
$T519374 = -60						; size = 8
$T519372 = -60						; size = 8
_iYear$510667 = -52					; size = 4
_iYear$510653 = -52					; size = 4
_iDay$510669 = -48					; size = 4
_iMonth$510654 = -48					; size = 4
_iMonth$510668 = -44					; size = 4
_iDay$510655 = -44					; size = 4
_ttm$519432 = -40					; size = 36
_ttm$519421 = -40					; size = 36
_ttm$519410 = -40					; size = 36
__$ArrayPad$ = -4					; size = 4
_RecievedTime$ = 8					; size = 8
?SetAttendRewardTime@ioGuildInfo@@IAEXVCTime@ATL@@@Z PROC ; ioGuildInfo::SetAttendRewardTime, COMDAT
; _this$ = ecx

; 1393 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1394 : 	//dwRecievedTime이 0인 경우 ( 로그인 했을 시 출석보상을 안받은 경우) or ( 길드 처음 생성 및 가입한 경우 )
; 1395 : 	if ( RecievedTime.GetTime() == 0 )

  00010	8b 45 08	 mov	 eax, DWORD PTR _RecievedTime$[ebp]
  00013	0b 45 0c	 or	 eax, DWORD PTR _RecievedTime$[ebp+4]
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b f1		 mov	 esi, ecx
  0001a	0f 85 d0 00 00
	00		 jne	 $LN9@SetAttendR

; 1396 : 	{
; 1397 : 		if ( m_GuildCreatedTime.GetTime() == 0 )

  00020	8b 86 fc 00 00
	00		 mov	 eax, DWORD PTR [esi+252]
  00026	0b 86 00 01 00
	00		 or	 eax, DWORD PTR [esi+256]
  0002c	0f 84 6d 01 00
	00		 je	 $LN1@SetAttendR

; 1398 : 			return;
; 1399 : 		// 가입 날짜 체크 ( 가입 후 갱신 시간이 지나야 보상 받기 가능 )
; 1400 : 		CTime EnableTimeByCreated = 0;
; 1401 : 		int iYear = m_GuildCreatedTime.GetYear();

  00032	8d 8e fc 00 00
	00		 lea	 ecx, DWORD PTR [esi+252]
  00038	e8 00 00 00 00	 call	 ?GetYear@CTime@ATL@@QBEHXZ ; ATL::CTime::GetYear

; 1402 : 		int iMonth = m_GuildCreatedTime.GetMonth();

  0003d	8d 8e fc 00 00
	00		 lea	 ecx, DWORD PTR [esi+252]
  00043	89 45 cc	 mov	 DWORD PTR _iYear$510653[ebp], eax
  00046	e8 00 00 00 00	 call	 ?GetMonth@CTime@ATL@@QBEHXZ ; ATL::CTime::GetMonth

; 1403 : 		int iDay = m_GuildCreatedTime.GetDay();

  0004b	8d 8e fc 00 00
	00		 lea	 ecx, DWORD PTR [esi+252]
  00051	89 45 d0	 mov	 DWORD PTR _iMonth$510654[ebp], eax
  00054	e8 00 00 00 00	 call	 ?GetDay@CTime@ATL@@QBEHXZ ; ATL::CTime::GetDay

; 1404 : 		int iHour = m_GuildCreatedTime.GetHour();

  00059	8d 8e fc 00 00
	00		 lea	 ecx, DWORD PTR [esi+252]
  0005f	89 45 d4	 mov	 DWORD PTR _iDay$510655[ebp], eax
  00062	e8 00 00 00 00	 call	 ?GetHour@CTime@ATL@@QBEHXZ ; ATL::CTime::GetHour

; 1405 : 		//가입 날짜 시간과 갱신 시간 체크
; 1406 : 		if ( iHour >= m_iAttendRenewalHour )

  00067	8b 8e d8 00 00
	00		 mov	 ecx, DWORD PTR [esi+216]
  0006d	3b c1		 cmp	 eax, ecx
  0006f	7c 22		 jl	 SHORT $LN7@SetAttendR

; 1407 : 		{ 
; 1408 : 			DateHelp::IncreaseDay( iYear, iMonth, iDay );

  00071	8d 45 d4	 lea	 eax, DWORD PTR _iDay$510655[ebp]
  00074	50		 push	 eax
  00075	8d 45 d0	 lea	 eax, DWORD PTR _iMonth$510654[ebp]
  00078	50		 push	 eax
  00079	8d 45 cc	 lea	 eax, DWORD PTR _iYear$510653[ebp]
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ?IncreaseDay@DateHelp@@YAXAAH00@Z ; DateHelp::IncreaseDay
  00082	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1409 : 			EnableTimeByCreated = CTime( iYear, iMonth, iDay, m_iAttendRenewalHour, 1, 0 );

  00085	6a ff		 push	 -1
  00087	6a 00		 push	 0
  00089	6a 01		 push	 1
  0008b	ff b6 d8 00 00
	00		 push	 DWORD PTR [esi+216]

; 1410 : 		}
; 1411 : 		else

  00091	eb 07		 jmp	 SHORT $LN39@SetAttendR
$LN7@SetAttendR:

; 1412 : 		{
; 1413 : 			EnableTimeByCreated = CTime( iYear, iMonth, iDay, m_iAttendRenewalHour, 1, 0 );

  00093	6a ff		 push	 -1
  00095	6a 00		 push	 0
  00097	6a 01		 push	 1
  00099	51		 push	 ecx
$LN39@SetAttendR:
  0009a	ff 75 d4	 push	 DWORD PTR _iDay$510655[ebp]
  0009d	8d 4d c4	 lea	 ecx, DWORD PTR $T519372[ebp]
  000a0	ff 75 d0	 push	 DWORD PTR _iMonth$510654[ebp]
  000a3	ff 75 cc	 push	 DWORD PTR _iYear$510653[ebp]
  000a6	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@HHHHHHH@Z ; ATL::CTime::CTime
  000ab	8b 10		 mov	 edx, DWORD PTR [eax]
  000ad	8b 78 04	 mov	 edi, DWORD PTR [eax+4]

; 1414 : 		}
; 1415 : 
; 1416 : 		CTimeSpan TimeGap = EnableTimeByCreated - m_LoginTime;

  000b0	8b ca		 mov	 ecx, edx
  000b2	2b 8e 14 01 00
	00		 sub	 ecx, DWORD PTR [esi+276]
  000b8	8b c7		 mov	 eax, edi
  000ba	1b 86 18 01 00
	00		 sbb	 eax, DWORD PTR [esi+280]
  000c0	53		 push	 ebx
  000c1	5b		 pop	 ebx

; 1417 : 		LONGLONG iSpan = TimeGap.GetTimeSpan();
; 1418 : 		if ( iSpan <= 0 )

  000c2	85 c0		 test	 eax, eax
  000c4	7f 19		 jg	 SHORT $LN5@SetAttendR
  000c6	7c 04		 jl	 SHORT $LN38@SetAttendR
  000c8	85 c9		 test	 ecx, ecx
  000ca	75 13		 jne	 SHORT $LN5@SetAttendR
$LN38@SetAttendR:

; 1419 : 			m_EnableRewardTime = 0;

  000cc	83 a6 0c 01 00
	00 00		 and	 DWORD PTR [esi+268], 0
  000d3	83 a6 10 01 00
	00 00		 and	 DWORD PTR [esi+272], 0

; 1420 : 		else

  000da	e9 c0 00 00 00	 jmp	 $LN1@SetAttendR
$LN5@SetAttendR:

; 1421 : 			m_EnableRewardTime = EnableTimeByCreated;

  000df	89 96 0c 01 00
	00		 mov	 DWORD PTR [esi+268], edx
  000e5	89 be 10 01 00
	00		 mov	 DWORD PTR [esi+272], edi

; 1422 : 	}
; 1423 : 	// 보상을 이미 받았다면 길드 생성날짜를 체크할 필요가 없기 때문에 다음 날짜로 갱신
; 1424 : 	else

  000eb	e9 af 00 00 00	 jmp	 $LN1@SetAttendR
$LN9@SetAttendR:

; 1425 : 	{
; 1426 : 		int iYear = RecievedTime.GetYear();

  000f0	8d 4d 08	 lea	 ecx, DWORD PTR _RecievedTime$[ebp]
  000f3	e8 00 00 00 00	 call	 ?GetYear@CTime@ATL@@QBEHXZ ; ATL::CTime::GetYear
  000f8	89 45 cc	 mov	 DWORD PTR _iYear$510667[ebp], eax

; 1427 : 		int iMonth = RecievedTime.GetMonth();

  000fb	8d 45 d8	 lea	 eax, DWORD PTR _ttm$519410[ebp]
  000fe	50		 push	 eax
  000ff	8d 4d 08	 lea	 ecx, DWORD PTR _RecievedTime$[ebp]
  00102	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm
  00107	33 ff		 xor	 edi, edi
  00109	3b c7		 cmp	 eax, edi
  0010b	74 09		 je	 SHORT $LN28@SetAttendR
  0010d	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00110	40		 inc	 eax
  00111	89 45 d4	 mov	 DWORD PTR _iMonth$510668[ebp], eax
  00114	eb 03		 jmp	 SHORT $LN29@SetAttendR
$LN28@SetAttendR:
  00116	89 7d d4	 mov	 DWORD PTR _iMonth$510668[ebp], edi
$LN29@SetAttendR:

; 1428 : 		int iDay = RecievedTime.GetDay();

  00119	8d 45 d8	 lea	 eax, DWORD PTR _ttm$519421[ebp]
  0011c	50		 push	 eax
  0011d	8d 4d 08	 lea	 ecx, DWORD PTR _RecievedTime$[ebp]
  00120	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm
  00125	3b c7		 cmp	 eax, edi
  00127	74 08		 je	 SHORT $LN32@SetAttendR
  00129	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0012c	89 45 d0	 mov	 DWORD PTR _iDay$510669[ebp], eax
  0012f	eb 03		 jmp	 SHORT $LN33@SetAttendR
$LN32@SetAttendR:
  00131	89 7d d0	 mov	 DWORD PTR _iDay$510669[ebp], edi
$LN33@SetAttendR:

; 1429 : 		int iHour = RecievedTime.GetHour();

  00134	8d 45 d8	 lea	 eax, DWORD PTR _ttm$519432[ebp]
  00137	50		 push	 eax
  00138	8d 4d 08	 lea	 ecx, DWORD PTR _RecievedTime$[ebp]
  0013b	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm
  00140	3b c7		 cmp	 eax, edi
  00142	74 05		 je	 SHORT $LN36@SetAttendR
  00144	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00147	eb 03		 jmp	 SHORT $LN37@SetAttendR
$LN36@SetAttendR:
  00149	83 c9 ff	 or	 ecx, -1
$LN37@SetAttendR:

; 1430 : 		if ( iHour >= m_iAttendRenewalHour )

  0014c	8b 86 d8 00 00
	00		 mov	 eax, DWORD PTR [esi+216]
  00152	3b c8		 cmp	 ecx, eax
  00154	7c 21		 jl	 SHORT $LN2@SetAttendR

; 1431 : 		{
; 1432 : 			DateHelp::IncreaseDay( iYear, iMonth, iDay );

  00156	8d 45 d0	 lea	 eax, DWORD PTR _iDay$510669[ebp]
  00159	50		 push	 eax
  0015a	8d 45 d4	 lea	 eax, DWORD PTR _iMonth$510668[ebp]
  0015d	50		 push	 eax
  0015e	8d 45 cc	 lea	 eax, DWORD PTR _iYear$510667[ebp]
  00161	50		 push	 eax
  00162	e8 00 00 00 00	 call	 ?IncreaseDay@DateHelp@@YAXAAH00@Z ; DateHelp::IncreaseDay
  00167	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1433 : 			m_EnableRewardTime = CTime( iYear, iMonth, iDay, m_iAttendRenewalHour, 1, 0 );

  0016a	6a ff		 push	 -1
  0016c	57		 push	 edi
  0016d	6a 01		 push	 1
  0016f	ff b6 d8 00 00
	00		 push	 DWORD PTR [esi+216]

; 1434 : 		}
; 1435 : 		else

  00175	eb 06		 jmp	 SHORT $LN40@SetAttendR
$LN2@SetAttendR:

; 1436 : 		{
; 1437 : 			m_EnableRewardTime = CTime( iYear, iMonth, iDay, m_iAttendRenewalHour, 1, 0 );

  00177	6a ff		 push	 -1
  00179	57		 push	 edi
  0017a	6a 01		 push	 1
  0017c	50		 push	 eax
$LN40@SetAttendR:
  0017d	ff 75 d0	 push	 DWORD PTR _iDay$510669[ebp]
  00180	8d 4d c4	 lea	 ecx, DWORD PTR $T519374[ebp]
  00183	ff 75 d4	 push	 DWORD PTR _iMonth$510668[ebp]
  00186	ff 75 cc	 push	 DWORD PTR _iYear$510667[ebp]
  00189	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@HHHHHHH@Z ; ATL::CTime::CTime
  0018e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00190	89 8e 0c 01 00
	00		 mov	 DWORD PTR [esi+268], ecx
  00196	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00199	89 86 10 01 00
	00		 mov	 DWORD PTR [esi+272], eax
$LN1@SetAttendR:

; 1438 : 		}
; 1439 : 	}
; 1440 : }

  0019f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a2	5f		 pop	 edi
  001a3	33 cd		 xor	 ecx, ebp
  001a5	5e		 pop	 esi
  001a6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ab	c9		 leave
  001ac	c2 08 00	 ret	 8
?SetAttendRewardTime@ioGuildInfo@@IAEXVCTime@ATL@@@Z ENDP ; ioGuildInfo::SetAttendRewardTime
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SetAttendTime@ioGuildInfo@@IAEXVCTime@ATL@@@Z	; ioGuildInfo::SetAttendTime
; Function compile flags: /Ogsp
;	COMDAT ?SetAttendTime@ioGuildInfo@@IAEXVCTime@ATL@@@Z
_TEXT	SEGMENT
$T519443 = -60						; size = 8
$T519441 = -60						; size = 8
_iYear$510749 = -52					; size = 4
_iYear$510735 = -52					; size = 4
_iDay$510751 = -48					; size = 4
_iMonth$510736 = -48					; size = 4
_iMonth$510750 = -44					; size = 4
_iDay$510737 = -44					; size = 4
_ttm$519501 = -40					; size = 36
_ttm$519490 = -40					; size = 36
_ttm$519479 = -40					; size = 36
__$ArrayPad$ = -4					; size = 4
_AttendedTime$ = 8					; size = 8
?SetAttendTime@ioGuildInfo@@IAEXVCTime@ATL@@@Z PROC	; ioGuildInfo::SetAttendTime, COMDAT
; _this$ = ecx

; 1539 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1540 : 	// dwRecievedTime이 0인 경우 ( 로그인 했을 시 출석보상을 안받은 경우) or ( 길드 처음 생성 및 가입한 경우 )
; 1541 : 	if ( AttendedTime.GetTime() == 0 )

  00010	8b 45 08	 mov	 eax, DWORD PTR _AttendedTime$[ebp]
  00013	0b 45 0c	 or	 eax, DWORD PTR _AttendedTime$[ebp+4]
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b f1		 mov	 esi, ecx
  0001a	0f 85 d0 00 00
	00		 jne	 $LN9@SetAttendT

; 1542 : 	{
; 1543 : 		if ( m_GuildCreatedTime.GetTime() == 0 )

  00020	8b 86 fc 00 00
	00		 mov	 eax, DWORD PTR [esi+252]
  00026	0b 86 00 01 00
	00		 or	 eax, DWORD PTR [esi+256]
  0002c	0f 84 6d 01 00
	00		 je	 $LN1@SetAttendT

; 1544 : 			return;
; 1545 : 		// 가입 날짜 체크 ( 가입 후 갱신 시간이 지나야 출석체크 가능 )
; 1546 : 		CTime EnableTimeByCreated = 0;
; 1547 : 		int iYear = m_GuildCreatedTime.GetYear();

  00032	8d 8e fc 00 00
	00		 lea	 ecx, DWORD PTR [esi+252]
  00038	e8 00 00 00 00	 call	 ?GetYear@CTime@ATL@@QBEHXZ ; ATL::CTime::GetYear

; 1548 : 		int iMonth = m_GuildCreatedTime.GetMonth();

  0003d	8d 8e fc 00 00
	00		 lea	 ecx, DWORD PTR [esi+252]
  00043	89 45 cc	 mov	 DWORD PTR _iYear$510735[ebp], eax
  00046	e8 00 00 00 00	 call	 ?GetMonth@CTime@ATL@@QBEHXZ ; ATL::CTime::GetMonth

; 1549 : 		int iDay = m_GuildCreatedTime.GetDay();

  0004b	8d 8e fc 00 00
	00		 lea	 ecx, DWORD PTR [esi+252]
  00051	89 45 d0	 mov	 DWORD PTR _iMonth$510736[ebp], eax
  00054	e8 00 00 00 00	 call	 ?GetDay@CTime@ATL@@QBEHXZ ; ATL::CTime::GetDay

; 1550 : 		int iHour = m_GuildCreatedTime.GetHour();

  00059	8d 8e fc 00 00
	00		 lea	 ecx, DWORD PTR [esi+252]
  0005f	89 45 d4	 mov	 DWORD PTR _iDay$510737[ebp], eax
  00062	e8 00 00 00 00	 call	 ?GetHour@CTime@ATL@@QBEHXZ ; ATL::CTime::GetHour

; 1551 : 		//가입 날짜 시간과 갱신 시간 체크
; 1552 : 		if ( iHour >= m_iAttendRenewalHour )

  00067	8b 8e d8 00 00
	00		 mov	 ecx, DWORD PTR [esi+216]
  0006d	3b c1		 cmp	 eax, ecx
  0006f	7c 22		 jl	 SHORT $LN7@SetAttendT

; 1553 : 		{
; 1554 : 			DateHelp::IncreaseDay( iYear, iMonth, iDay );

  00071	8d 45 d4	 lea	 eax, DWORD PTR _iDay$510737[ebp]
  00074	50		 push	 eax
  00075	8d 45 d0	 lea	 eax, DWORD PTR _iMonth$510736[ebp]
  00078	50		 push	 eax
  00079	8d 45 cc	 lea	 eax, DWORD PTR _iYear$510735[ebp]
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ?IncreaseDay@DateHelp@@YAXAAH00@Z ; DateHelp::IncreaseDay
  00082	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1555 : 			EnableTimeByCreated = CTime( iYear, iMonth, iDay, m_iAttendRenewalHour, 1, 0 );

  00085	6a ff		 push	 -1
  00087	6a 00		 push	 0
  00089	6a 01		 push	 1
  0008b	ff b6 d8 00 00
	00		 push	 DWORD PTR [esi+216]

; 1556 : 		}
; 1557 : 		else

  00091	eb 07		 jmp	 SHORT $LN39@SetAttendT
$LN7@SetAttendT:

; 1558 : 		{
; 1559 : 			EnableTimeByCreated = CTime( iYear, iMonth, iDay, m_iAttendRenewalHour, 1, 0 );

  00093	6a ff		 push	 -1
  00095	6a 00		 push	 0
  00097	6a 01		 push	 1
  00099	51		 push	 ecx
$LN39@SetAttendT:
  0009a	ff 75 d4	 push	 DWORD PTR _iDay$510737[ebp]
  0009d	8d 4d c4	 lea	 ecx, DWORD PTR $T519441[ebp]
  000a0	ff 75 d0	 push	 DWORD PTR _iMonth$510736[ebp]
  000a3	ff 75 cc	 push	 DWORD PTR _iYear$510735[ebp]
  000a6	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@HHHHHHH@Z ; ATL::CTime::CTime
  000ab	8b 10		 mov	 edx, DWORD PTR [eax]
  000ad	8b 78 04	 mov	 edi, DWORD PTR [eax+4]

; 1560 : 		}
; 1561 : 
; 1562 : 		CTimeSpan TimeGap = EnableTimeByCreated - m_LoginTime;

  000b0	8b ca		 mov	 ecx, edx
  000b2	2b 8e 14 01 00
	00		 sub	 ecx, DWORD PTR [esi+276]
  000b8	8b c7		 mov	 eax, edi
  000ba	1b 86 18 01 00
	00		 sbb	 eax, DWORD PTR [esi+280]
  000c0	53		 push	 ebx
  000c1	5b		 pop	 ebx

; 1563 : 		LONGLONG iSpan = TimeGap.GetTimeSpan();
; 1564 : 		if ( iSpan <= 0 )

  000c2	85 c0		 test	 eax, eax
  000c4	7f 19		 jg	 SHORT $LN5@SetAttendT
  000c6	7c 04		 jl	 SHORT $LN38@SetAttendT
  000c8	85 c9		 test	 ecx, ecx
  000ca	75 13		 jne	 SHORT $LN5@SetAttendT
$LN38@SetAttendT:

; 1565 : 			m_EnableAttendTime = 0;

  000cc	83 a6 04 01 00
	00 00		 and	 DWORD PTR [esi+260], 0
  000d3	83 a6 08 01 00
	00 00		 and	 DWORD PTR [esi+264], 0

; 1566 : 		else

  000da	e9 c0 00 00 00	 jmp	 $LN1@SetAttendT
$LN5@SetAttendT:

; 1567 : 			m_EnableAttendTime = EnableTimeByCreated;

  000df	89 96 04 01 00
	00		 mov	 DWORD PTR [esi+260], edx
  000e5	89 be 08 01 00
	00		 mov	 DWORD PTR [esi+264], edi

; 1568 : 	}
; 1569 : 	//출석을 이미 했다면 길드 생성날짜를 체크할 필요가 없기 때문에 다음 날짜로 갱신
; 1570 : 	else

  000eb	e9 af 00 00 00	 jmp	 $LN1@SetAttendT
$LN9@SetAttendT:

; 1571 : 	{
; 1572 : 		int iYear = AttendedTime.GetYear();

  000f0	8d 4d 08	 lea	 ecx, DWORD PTR _AttendedTime$[ebp]
  000f3	e8 00 00 00 00	 call	 ?GetYear@CTime@ATL@@QBEHXZ ; ATL::CTime::GetYear
  000f8	89 45 cc	 mov	 DWORD PTR _iYear$510749[ebp], eax

; 1573 : 		int iMonth = AttendedTime.GetMonth();

  000fb	8d 45 d8	 lea	 eax, DWORD PTR _ttm$519479[ebp]
  000fe	50		 push	 eax
  000ff	8d 4d 08	 lea	 ecx, DWORD PTR _AttendedTime$[ebp]
  00102	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm
  00107	33 ff		 xor	 edi, edi
  00109	3b c7		 cmp	 eax, edi
  0010b	74 09		 je	 SHORT $LN28@SetAttendT
  0010d	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00110	40		 inc	 eax
  00111	89 45 d4	 mov	 DWORD PTR _iMonth$510750[ebp], eax
  00114	eb 03		 jmp	 SHORT $LN29@SetAttendT
$LN28@SetAttendT:
  00116	89 7d d4	 mov	 DWORD PTR _iMonth$510750[ebp], edi
$LN29@SetAttendT:

; 1574 : 		int iDay = AttendedTime.GetDay();

  00119	8d 45 d8	 lea	 eax, DWORD PTR _ttm$519490[ebp]
  0011c	50		 push	 eax
  0011d	8d 4d 08	 lea	 ecx, DWORD PTR _AttendedTime$[ebp]
  00120	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm
  00125	3b c7		 cmp	 eax, edi
  00127	74 08		 je	 SHORT $LN32@SetAttendT
  00129	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0012c	89 45 d0	 mov	 DWORD PTR _iDay$510751[ebp], eax
  0012f	eb 03		 jmp	 SHORT $LN33@SetAttendT
$LN32@SetAttendT:
  00131	89 7d d0	 mov	 DWORD PTR _iDay$510751[ebp], edi
$LN33@SetAttendT:

; 1575 : 		int iHour = AttendedTime.GetHour();

  00134	8d 45 d8	 lea	 eax, DWORD PTR _ttm$519501[ebp]
  00137	50		 push	 eax
  00138	8d 4d 08	 lea	 ecx, DWORD PTR _AttendedTime$[ebp]
  0013b	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm
  00140	3b c7		 cmp	 eax, edi
  00142	74 05		 je	 SHORT $LN36@SetAttendT
  00144	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00147	eb 03		 jmp	 SHORT $LN37@SetAttendT
$LN36@SetAttendT:
  00149	83 c9 ff	 or	 ecx, -1
$LN37@SetAttendT:

; 1576 : 		if ( iHour >= m_iAttendRenewalHour )

  0014c	8b 86 d8 00 00
	00		 mov	 eax, DWORD PTR [esi+216]
  00152	3b c8		 cmp	 ecx, eax
  00154	7c 21		 jl	 SHORT $LN2@SetAttendT

; 1577 : 		{
; 1578 : 			DateHelp::IncreaseDay( iYear, iMonth, iDay );

  00156	8d 45 d0	 lea	 eax, DWORD PTR _iDay$510751[ebp]
  00159	50		 push	 eax
  0015a	8d 45 d4	 lea	 eax, DWORD PTR _iMonth$510750[ebp]
  0015d	50		 push	 eax
  0015e	8d 45 cc	 lea	 eax, DWORD PTR _iYear$510749[ebp]
  00161	50		 push	 eax
  00162	e8 00 00 00 00	 call	 ?IncreaseDay@DateHelp@@YAXAAH00@Z ; DateHelp::IncreaseDay
  00167	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1579 : 			m_EnableAttendTime = CTime( iYear, iMonth, iDay, m_iAttendRenewalHour, 1, 0 );

  0016a	6a ff		 push	 -1
  0016c	57		 push	 edi
  0016d	6a 01		 push	 1
  0016f	ff b6 d8 00 00
	00		 push	 DWORD PTR [esi+216]

; 1580 : 		}
; 1581 : 		else

  00175	eb 06		 jmp	 SHORT $LN40@SetAttendT
$LN2@SetAttendT:

; 1582 : 		{
; 1583 : 			m_EnableAttendTime = CTime( iYear, iMonth, iDay, m_iAttendRenewalHour, 1, 0 );

  00177	6a ff		 push	 -1
  00179	57		 push	 edi
  0017a	6a 01		 push	 1
  0017c	50		 push	 eax
$LN40@SetAttendT:
  0017d	ff 75 d0	 push	 DWORD PTR _iDay$510751[ebp]
  00180	8d 4d c4	 lea	 ecx, DWORD PTR $T519443[ebp]
  00183	ff 75 d4	 push	 DWORD PTR _iMonth$510750[ebp]
  00186	ff 75 cc	 push	 DWORD PTR _iYear$510749[ebp]
  00189	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@HHHHHHH@Z ; ATL::CTime::CTime
  0018e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00190	89 8e 04 01 00
	00		 mov	 DWORD PTR [esi+260], ecx
  00196	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00199	89 86 08 01 00
	00		 mov	 DWORD PTR [esi+264], eax
$LN1@SetAttendT:

; 1584 : 		}
; 1585 : 	}
; 1586 : }

  0019f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a2	5f		 pop	 edi
  001a3	33 cd		 xor	 ecx, ebp
  001a5	5e		 pop	 esi
  001a6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ab	c9		 leave
  001ac	c2 08 00	 ret	 8
?SetAttendTime@ioGuildInfo@@IAEXVCTime@ATL@@@Z ENDP	; ioGuildInfo::SetAttendTime
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?CheckGuildCreatedTime@ioGuildInfo@@QAE_NXZ	; ioGuildInfo::CheckGuildCreatedTime
EXTRN	?GetServerTime@ioMyInfo@@QAEXAAU_SYSTEMTIME@@@Z:PROC ; ioMyInfo::GetServerTime
; Function compile flags: /Ogsp
;	COMDAT ?CheckGuildCreatedTime@ioGuildInfo@@QAE_NXZ
_TEXT	SEGMENT
_ServerTime$ = -40					; size = 8
$T519511 = -40						; size = 8
_iDay$ = -32						; size = 4
_iMonth$ = -28						; size = 4
_iYear$ = -24						; size = 4
_rkServerTime$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
?CheckGuildCreatedTime@ioGuildInfo@@QAE_NXZ PROC	; ioGuildInfo::CheckGuildCreatedTime, COMDAT
; _this$ = ecx

; 1590 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b f1		 mov	 esi, ecx

; 1591 : 	if ( m_GuildCreatedTime.GetTime() == 0 )

  00013	8b 86 fc 00 00
	00		 mov	 eax, DWORD PTR [esi+252]
  00019	0b 86 00 01 00
	00		 or	 eax, DWORD PTR [esi+256]
  0001f	57		 push	 edi

; 1592 : 		return false;

  00020	0f 84 ce 00 00
	00		 je	 $LN1@CheckGuild

; 1593 : 	CTime EnableTimeByCreated = 0;
; 1594 : 	int iYear = m_GuildCreatedTime.GetYear();

  00026	8d 8e fc 00 00
	00		 lea	 ecx, DWORD PTR [esi+252]
  0002c	e8 00 00 00 00	 call	 ?GetYear@CTime@ATL@@QBEHXZ ; ATL::CTime::GetYear

; 1595 : 	int iMonth = m_GuildCreatedTime.GetMonth();

  00031	8d 8e fc 00 00
	00		 lea	 ecx, DWORD PTR [esi+252]
  00037	89 45 e8	 mov	 DWORD PTR _iYear$[ebp], eax
  0003a	e8 00 00 00 00	 call	 ?GetMonth@CTime@ATL@@QBEHXZ ; ATL::CTime::GetMonth

; 1596 : 	int iDay = m_GuildCreatedTime.GetDay();

  0003f	8d 8e fc 00 00
	00		 lea	 ecx, DWORD PTR [esi+252]
  00045	89 45 e4	 mov	 DWORD PTR _iMonth$[ebp], eax
  00048	e8 00 00 00 00	 call	 ?GetDay@CTime@ATL@@QBEHXZ ; ATL::CTime::GetDay

; 1597 : 	int iHour = m_GuildCreatedTime.GetHour();

  0004d	8d 8e fc 00 00
	00		 lea	 ecx, DWORD PTR [esi+252]
  00053	89 45 e0	 mov	 DWORD PTR _iDay$[ebp], eax
  00056	e8 00 00 00 00	 call	 ?GetHour@CTime@ATL@@QBEHXZ ; ATL::CTime::GetHour

; 1598 : 	//가입 날짜 시간과 갱신 시간 체크
; 1599 : 	if ( iHour >= m_iAttendRenewalHour )

  0005b	8b 8e d8 00 00
	00		 mov	 ecx, DWORD PTR [esi+216]
  00061	3b c1		 cmp	 eax, ecx
  00063	7c 22		 jl	 SHORT $LN3@CheckGuild

; 1600 : 	{
; 1601 : 		DateHelp::IncreaseDay( iYear, iMonth, iDay );

  00065	8d 45 e0	 lea	 eax, DWORD PTR _iDay$[ebp]
  00068	50		 push	 eax
  00069	8d 45 e4	 lea	 eax, DWORD PTR _iMonth$[ebp]
  0006c	50		 push	 eax
  0006d	8d 45 e8	 lea	 eax, DWORD PTR _iYear$[ebp]
  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 ?IncreaseDay@DateHelp@@YAXAAH00@Z ; DateHelp::IncreaseDay
  00076	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1602 : 		EnableTimeByCreated = CTime( iYear, iMonth, iDay, m_iAttendRenewalHour, 1, 0 );

  00079	6a ff		 push	 -1
  0007b	6a 00		 push	 0
  0007d	6a 01		 push	 1
  0007f	ff b6 d8 00 00
	00		 push	 DWORD PTR [esi+216]

; 1603 : 	}
; 1604 : 	else

  00085	eb 07		 jmp	 SHORT $LN18@CheckGuild
$LN3@CheckGuild:

; 1605 : 		EnableTimeByCreated = CTime( iYear, iMonth, iDay, m_iAttendRenewalHour, 1, 0 );

  00087	6a ff		 push	 -1
  00089	6a 00		 push	 0
  0008b	6a 01		 push	 1
  0008d	51		 push	 ecx
$LN18@CheckGuild:
  0008e	ff 75 e0	 push	 DWORD PTR _iDay$[ebp]
  00091	8d 4d d8	 lea	 ecx, DWORD PTR $T519511[ebp]
  00094	ff 75 e4	 push	 DWORD PTR _iMonth$[ebp]
  00097	ff 75 e8	 push	 DWORD PTR _iYear$[ebp]
  0009a	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@HHHHHHH@Z ; ATL::CTime::CTime
  0009f	8b 78 04	 mov	 edi, DWORD PTR [eax+4]
  000a2	8b 30		 mov	 esi, DWORD PTR [eax]

; 1606 : 
; 1607 : 	SYSTEMTIME rkServerTime;
; 1608 : 	g_MyInfo.GetServerTime( rkServerTime );

  000a4	8d 45 ec	 lea	 eax, DWORD PTR _rkServerTime$[ebp]
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  000ad	8b c8		 mov	 ecx, eax
  000af	e8 00 00 00 00	 call	 ?GetServerTime@ioMyInfo@@QAEXAAU_SYSTEMTIME@@@Z ; ioMyInfo::GetServerTime

; 1609 : 	CTime ServerTime( rkServerTime.wYear, rkServerTime.wMonth, rkServerTime.wDay, rkServerTime.wHour, rkServerTime.wMinute, rkServerTime.wSecond );

  000b4	0f b7 45 f8	 movzx	 eax, WORD PTR _rkServerTime$[ebp+12]
  000b8	6a ff		 push	 -1
  000ba	50		 push	 eax
  000bb	0f b7 45 f6	 movzx	 eax, WORD PTR _rkServerTime$[ebp+10]
  000bf	50		 push	 eax
  000c0	0f b7 45 f4	 movzx	 eax, WORD PTR _rkServerTime$[ebp+8]
  000c4	50		 push	 eax
  000c5	0f b7 45 f2	 movzx	 eax, WORD PTR _rkServerTime$[ebp+6]
  000c9	50		 push	 eax
  000ca	0f b7 45 ee	 movzx	 eax, WORD PTR _rkServerTime$[ebp+2]
  000ce	50		 push	 eax
  000cf	0f b7 45 ec	 movzx	 eax, WORD PTR _rkServerTime$[ebp]
  000d3	50		 push	 eax
  000d4	8d 4d d8	 lea	 ecx, DWORD PTR _ServerTime$[ebp]
  000d7	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@HHHHHHH@Z ; ATL::CTime::CTime

; 1610 : 	CTimeSpan TimeGap = ServerTime - EnableTimeByCreated;

  000dc	8b 4d d8	 mov	 ecx, DWORD PTR _ServerTime$[ebp]
  000df	8b 45 dc	 mov	 eax, DWORD PTR _ServerTime$[ebp+4]
  000e2	2b ce		 sub	 ecx, esi
  000e4	1b c7		 sbb	 eax, edi

; 1611 : 	LONGLONG iSpan = TimeGap.GetTimeSpan();
; 1612 : 	if ( iSpan <= 0 )

  000e6	85 c0		 test	 eax, eax
  000e8	7f 0a		 jg	 SHORT $LN1@CheckGuild
  000ea	7c 04		 jl	 SHORT $LN17@CheckGuild
  000ec	85 c9		 test	 ecx, ecx
  000ee	75 04		 jne	 SHORT $LN1@CheckGuild
$LN17@CheckGuild:

; 1613 : 		return true;

  000f0	b0 01		 mov	 al, 1
  000f2	eb 02		 jmp	 SHORT $LN5@CheckGuild
$LN1@CheckGuild:

; 1614 : 
; 1615 : 	return false;

  000f4	32 c0		 xor	 al, al
$LN5@CheckGuild:

; 1616 : }

  000f6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f9	5f		 pop	 edi
  000fa	33 cd		 xor	 ecx, ebp
  000fc	5e		 pop	 esi
  000fd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00102	c9		 leave
  00103	c3		 ret	 0
?CheckGuildCreatedTime@ioGuildInfo@@QAE_NXZ ENDP	; ioGuildInfo::CheckGuildCreatedTime
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?CheckEnableAttendTime@ioGuildInfo@@QAE_NXZ	; ioGuildInfo::CheckEnableAttendTime
; Function compile flags: /Ogsp
;	COMDAT ?CheckEnableAttendTime@ioGuildInfo@@QAE_NXZ
_TEXT	SEGMENT
_ServerTime$ = -28					; size = 8
_rkServerTime$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
?CheckEnableAttendTime@ioGuildInfo@@QAE_NXZ PROC	; ioGuildInfo::CheckEnableAttendTime, COMDAT
; _this$ = ecx

; 1620 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi

; 1621 : 	SYSTEMTIME rkServerTime;
; 1622 : 	g_MyInfo.GetServerTime( rkServerTime );

  00011	8d 45 ec	 lea	 eax, DWORD PTR _rkServerTime$[ebp]
  00014	50		 push	 eax
  00015	8b f1		 mov	 esi, ecx
  00017	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?GetServerTime@ioMyInfo@@QAEXAAU_SYSTEMTIME@@@Z ; ioMyInfo::GetServerTime

; 1623 : 	CTime ServerTime( rkServerTime.wYear, rkServerTime.wMonth, rkServerTime.wDay, rkServerTime.wHour, rkServerTime.wMinute, rkServerTime.wSecond );

  00023	0f b7 45 f8	 movzx	 eax, WORD PTR _rkServerTime$[ebp+12]
  00027	6a ff		 push	 -1
  00029	50		 push	 eax
  0002a	0f b7 45 f6	 movzx	 eax, WORD PTR _rkServerTime$[ebp+10]
  0002e	50		 push	 eax
  0002f	0f b7 45 f4	 movzx	 eax, WORD PTR _rkServerTime$[ebp+8]
  00033	50		 push	 eax
  00034	0f b7 45 f2	 movzx	 eax, WORD PTR _rkServerTime$[ebp+6]
  00038	50		 push	 eax
  00039	0f b7 45 ee	 movzx	 eax, WORD PTR _rkServerTime$[ebp+2]
  0003d	50		 push	 eax
  0003e	0f b7 45 ec	 movzx	 eax, WORD PTR _rkServerTime$[ebp]
  00042	50		 push	 eax
  00043	8d 4d e4	 lea	 ecx, DWORD PTR _ServerTime$[ebp]
  00046	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@HHHHHHH@Z ; ATL::CTime::CTime

; 1624 : 	//다음 갱신 시간 - 현재 시간 <=0 이면 갱신 요청
; 1625 : 	CTimeSpan TimeGap = m_EnableAttendTime - ServerTime;

  0004b	8b 8e 04 01 00
	00		 mov	 ecx, DWORD PTR [esi+260]
  00051	2b 4d e4	 sub	 ecx, DWORD PTR _ServerTime$[ebp]
  00054	8b 86 08 01 00
	00		 mov	 eax, DWORD PTR [esi+264]
  0005a	1b 45 e8	 sbb	 eax, DWORD PTR _ServerTime$[ebp+4]
  0005d	5e		 pop	 esi

; 1626 : 	LONGLONG iSpan = TimeGap.GetTimeSpan();
; 1627 : 	if ( iSpan <= 0 )

  0005e	85 c0		 test	 eax, eax
  00060	7f 0a		 jg	 SHORT $LN1@CheckEnabl
  00062	7c 04		 jl	 SHORT $LN10@CheckEnabl
  00064	85 c9		 test	 ecx, ecx
  00066	75 04		 jne	 SHORT $LN1@CheckEnabl
$LN10@CheckEnabl:

; 1628 : 		return true;

  00068	b0 01		 mov	 al, 1
  0006a	eb 02		 jmp	 SHORT $LN2@CheckEnabl
$LN1@CheckEnabl:

; 1629 : 
; 1630 : 	return false;

  0006c	32 c0		 xor	 al, al
$LN2@CheckEnabl:

; 1631 : }

  0006e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00071	33 cd		 xor	 ecx, ebp
  00073	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00078	c9		 leave
  00079	c3		 ret	 0
?CheckEnableAttendTime@ioGuildInfo@@QAE_NXZ ENDP	; ioGuildInfo::CheckEnableAttendTime
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?CheckEnableAttendRewardTime@ioGuildInfo@@QAE_NXZ ; ioGuildInfo::CheckEnableAttendRewardTime
; Function compile flags: /Ogsp
;	COMDAT ?CheckEnableAttendRewardTime@ioGuildInfo@@QAE_NXZ
_TEXT	SEGMENT
_ServerTime$ = -28					; size = 8
_rkServerTime$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
?CheckEnableAttendRewardTime@ioGuildInfo@@QAE_NXZ PROC	; ioGuildInfo::CheckEnableAttendRewardTime, COMDAT
; _this$ = ecx

; 1635 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi

; 1636 : 	SYSTEMTIME rkServerTime;
; 1637 : 	g_MyInfo.GetServerTime( rkServerTime );

  00011	8d 45 ec	 lea	 eax, DWORD PTR _rkServerTime$[ebp]
  00014	50		 push	 eax
  00015	8b f1		 mov	 esi, ecx
  00017	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?GetServerTime@ioMyInfo@@QAEXAAU_SYSTEMTIME@@@Z ; ioMyInfo::GetServerTime

; 1638 : 	CTime ServerTime( rkServerTime.wYear, rkServerTime.wMonth, rkServerTime.wDay, rkServerTime.wHour, rkServerTime.wMinute, rkServerTime.wSecond );

  00023	0f b7 45 f8	 movzx	 eax, WORD PTR _rkServerTime$[ebp+12]
  00027	6a ff		 push	 -1
  00029	50		 push	 eax
  0002a	0f b7 45 f6	 movzx	 eax, WORD PTR _rkServerTime$[ebp+10]
  0002e	50		 push	 eax
  0002f	0f b7 45 f4	 movzx	 eax, WORD PTR _rkServerTime$[ebp+8]
  00033	50		 push	 eax
  00034	0f b7 45 f2	 movzx	 eax, WORD PTR _rkServerTime$[ebp+6]
  00038	50		 push	 eax
  00039	0f b7 45 ee	 movzx	 eax, WORD PTR _rkServerTime$[ebp+2]
  0003d	50		 push	 eax
  0003e	0f b7 45 ec	 movzx	 eax, WORD PTR _rkServerTime$[ebp]
  00042	50		 push	 eax
  00043	8d 4d e4	 lea	 ecx, DWORD PTR _ServerTime$[ebp]
  00046	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@HHHHHHH@Z ; ATL::CTime::CTime

; 1639 : 	//다음 갱신 시간 - 현재 시간 <=0 이면 갱신 요청
; 1640 : 	CTimeSpan TimeGap = m_EnableRewardTime - ServerTime;

  0004b	8b 8e 0c 01 00
	00		 mov	 ecx, DWORD PTR [esi+268]
  00051	2b 4d e4	 sub	 ecx, DWORD PTR _ServerTime$[ebp]
  00054	8b 86 10 01 00
	00		 mov	 eax, DWORD PTR [esi+272]
  0005a	1b 45 e8	 sbb	 eax, DWORD PTR _ServerTime$[ebp+4]
  0005d	5e		 pop	 esi

; 1641 : 	LONGLONG iSpan = TimeGap.GetTimeSpan();
; 1642 : 	if ( iSpan <= 0 )

  0005e	85 c0		 test	 eax, eax
  00060	7f 0a		 jg	 SHORT $LN1@CheckEnabl@2
  00062	7c 04		 jl	 SHORT $LN10@CheckEnabl@2
  00064	85 c9		 test	 ecx, ecx
  00066	75 04		 jne	 SHORT $LN1@CheckEnabl@2
$LN10@CheckEnabl@2:

; 1643 : 		return true;

  00068	b0 01		 mov	 al, 1
  0006a	eb 02		 jmp	 SHORT $LN2@CheckEnabl@2
$LN1@CheckEnabl@2:

; 1644 : 
; 1645 : 	return false;

  0006c	32 c0		 xor	 al, al
$LN2@CheckEnabl@2:

; 1646 : }

  0006e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00071	33 cd		 xor	 ecx, ebp
  00073	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00078	c9		 leave
  00079	c3		 ret	 0
?CheckEnableAttendRewardTime@ioGuildInfo@@QAE_NXZ ENDP	; ioGuildInfo::CheckEnableAttendRewardTime
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?CheckMemberAttendInfoRequestTime@ioGuildInfo@@QAE_NXZ ; ioGuildInfo::CheckMemberAttendInfoRequestTime
; Function compile flags: /Ogsp
;	COMDAT ?CheckMemberAttendInfoRequestTime@ioGuildInfo@@QAE_NXZ
_TEXT	SEGMENT
_ServerTime$ = -28					; size = 8
_rkServerTime$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
?CheckMemberAttendInfoRequestTime@ioGuildInfo@@QAE_NXZ PROC ; ioGuildInfo::CheckMemberAttendInfoRequestTime, COMDAT
; _this$ = ecx

; 1650 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b f1		 mov	 esi, ecx

; 1651 : 	if ( m_MemberAttendInfoRequestTime.GetTime() <= 0 )

  00013	83 be 20 01 00
	00 00		 cmp	 DWORD PTR [esi+288], 0
  0001a	7f 0b		 jg	 SHORT $LN2@CheckMembe
  0001c	7c 61		 jl	 SHORT $LN1@CheckMembe
  0001e	83 be 1c 01 00
	00 00		 cmp	 DWORD PTR [esi+284], 0

; 1652 : 		return false;

  00025	76 58		 jbe	 SHORT $LN1@CheckMembe
$LN2@CheckMembe:

; 1653 : 	SYSTEMTIME rkServerTime;
; 1654 : 	g_MyInfo.GetServerTime( rkServerTime );

  00027	8d 45 ec	 lea	 eax, DWORD PTR _rkServerTime$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00030	8b c8		 mov	 ecx, eax
  00032	e8 00 00 00 00	 call	 ?GetServerTime@ioMyInfo@@QAEXAAU_SYSTEMTIME@@@Z ; ioMyInfo::GetServerTime

; 1655 : 	CTime ServerTime( rkServerTime.wYear, rkServerTime.wMonth, rkServerTime.wDay, rkServerTime.wHour, rkServerTime.wMinute, rkServerTime.wSecond );

  00037	0f b7 45 f8	 movzx	 eax, WORD PTR _rkServerTime$[ebp+12]
  0003b	6a ff		 push	 -1
  0003d	50		 push	 eax
  0003e	0f b7 45 f6	 movzx	 eax, WORD PTR _rkServerTime$[ebp+10]
  00042	50		 push	 eax
  00043	0f b7 45 f4	 movzx	 eax, WORD PTR _rkServerTime$[ebp+8]
  00047	50		 push	 eax
  00048	0f b7 45 f2	 movzx	 eax, WORD PTR _rkServerTime$[ebp+6]
  0004c	50		 push	 eax
  0004d	0f b7 45 ee	 movzx	 eax, WORD PTR _rkServerTime$[ebp+2]
  00051	50		 push	 eax
  00052	0f b7 45 ec	 movzx	 eax, WORD PTR _rkServerTime$[ebp]
  00056	50		 push	 eax
  00057	8d 4d e4	 lea	 ecx, DWORD PTR _ServerTime$[ebp]
  0005a	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@HHHHHHH@Z ; ATL::CTime::CTime

; 1656 : 	//다음 갱신 시간 - 현재 시간 <=0 이면 갱신 요청
; 1657 : 	CTimeSpan TimeGap = m_MemberAttendInfoRequestTime - ServerTime;

  0005f	8b 8e 1c 01 00
	00		 mov	 ecx, DWORD PTR [esi+284]
  00065	2b 4d e4	 sub	 ecx, DWORD PTR _ServerTime$[ebp]
  00068	8b 86 20 01 00
	00		 mov	 eax, DWORD PTR [esi+288]
  0006e	1b 45 e8	 sbb	 eax, DWORD PTR _ServerTime$[ebp+4]

; 1658 : 	LONGLONG iSpan = TimeGap.GetTimeSpan();
; 1659 : 	if ( iSpan <= 0 )

  00071	85 c0		 test	 eax, eax
  00073	7f 0a		 jg	 SHORT $LN1@CheckMembe
  00075	7c 04		 jl	 SHORT $LN14@CheckMembe
  00077	85 c9		 test	 ecx, ecx
  00079	75 04		 jne	 SHORT $LN1@CheckMembe
$LN14@CheckMembe:

; 1660 : 		return true;

  0007b	b0 01		 mov	 al, 1
  0007d	eb 02		 jmp	 SHORT $LN3@CheckMembe
$LN1@CheckMembe:

; 1661 : 
; 1662 : 	return false;

  0007f	32 c0		 xor	 al, al
$LN3@CheckMembe:

; 1663 : }

  00081	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00084	33 cd		 xor	 ecx, ebp
  00086	5e		 pop	 esi
  00087	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008c	c9		 leave
  0008d	c3		 ret	 0
?CheckMemberAttendInfoRequestTime@ioGuildInfo@@QAE_NXZ ENDP ; ioGuildInfo::CheckMemberAttendInfoRequestTime
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >, COMDAT
; _this$ = ecx

; 298  : 	_Vector_iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0

; 299  : 		{	// construct with null vector pointer
; 300  : 		}

  00005	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEAAUGuildUser@ioGuildData@@XZ ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEAAUGuildUser@ioGuildData@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEAAUGuildUser@ioGuildData@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator*, COMDAT
; _this$ = ecx

; 322  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 323  : 		}

  00002	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEAAUGuildUser@ioGuildData@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator*
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::_Vector_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::_Vector_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >, COMDAT
; _this$ = ecx

; 298  : 	_Vector_iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0

; 299  : 		{	// construct with null vector pointer
; 300  : 		}

  00005	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::_Vector_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBEAAPAVioGuildData@@XZ ; std::_Vector_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBEAAPAVioGuildData@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBEAAPAVioGuildData@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::operator*, COMDAT
; _this$ = ecx

; 322  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 323  : 		}

  00002	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBEAAPAVioGuildData@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::operator++, COMDAT
; _this$ = ecx

; 331  : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 332  : 		++*(_Mybase *)this;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 333  : 		return (*this);
; 334  : 		}

  00005	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::operator++
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBEAAPAUGuildRankRwardInfo@@XZ ; std::_Vector_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBEAAPAUGuildRankRwardInfo@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBEAAPAUGuildRankRwardInfo@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::operator*, COMDAT
; _this$ = ecx

; 322  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 323  : 		}

  00002	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBEAAPAUGuildRankRwardInfo@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::operator++, COMDAT
; _this$ = ecx

; 331  : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 332  : 		++*(_Mybase *)this;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 333  : 		return (*this);
; 334  : 		}

  00005	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::operator++
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBEAAPAUGuildAttendRwardInfo@@XZ ; std::_Vector_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBEAAPAUGuildAttendRwardInfo@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBEAAPAUGuildAttendRwardInfo@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::operator*, COMDAT
; _this$ = ecx

; 322  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 323  : 		}

  00002	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBEAAPAUGuildAttendRwardInfo@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::operator++, COMDAT
; _this$ = ecx

; 331  : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 332  : 		++*(_Mybase *)this;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 333  : 		return (*this);
; 334  : 		}

  00005	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::operator++
_TEXT	ENDS
PUBLIC	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin, COMDAT
; _this$ = ecx

; 786  : 		{	// return iterator for beginning of nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 787  : 		return (const_iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 788  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end, COMDAT
; _this$ = ecx

; 796  : 		{	// return iterator for end of nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 797  : 		return (const_iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 798  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE@V?$allocator@UGuildUser@ioGuildData@@@1@@Z ; std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE@V?$allocator@UGuildUser@ioGuildData@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE@V?$allocator@UGuildUser@ioGuildData@@@1@@Z PROC ; std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE@V?$allocator@UGuildUser@ioGuildData@@@1@@Z ENDP ; std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE@V?$allocator@PAVioGuildData@@@1@@Z ; std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> >::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE@V?$allocator@PAVioGuildData@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE@V?$allocator@PAVioGuildData@@@1@@Z PROC ; std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> >::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE@V?$allocator@PAVioGuildData@@@1@@Z ENDP ; std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> >::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE@V?$allocator@UInvitationUser@ioGuildInfo@@@1@@Z ; std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE@V?$allocator@UInvitationUser@ioGuildInfo@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE@V?$allocator@UInvitationUser@ioGuildInfo@@@1@@Z PROC ; std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE@V?$allocator@UInvitationUser@ioGuildInfo@@@1@@Z ENDP ; std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE@V?$allocator@PAUGuildAttendRwardInfo@@@1@@Z ; std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE@V?$allocator@PAUGuildAttendRwardInfo@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE@V?$allocator@PAUGuildAttendRwardInfo@@@1@@Z PROC ; std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE@V?$allocator@PAUGuildAttendRwardInfo@@@1@@Z ENDP ; std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE@V?$allocator@PAUGuildRankRwardInfo@@@1@@Z ; std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE@V?$allocator@PAUGuildRankRwardInfo@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE@V?$allocator@PAUGuildRankRwardInfo@@@1@@Z PROC ; std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE@V?$allocator@PAUGuildRankRwardInfo@@@1@@Z ENDP ; std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator+=
; Function compile flags: /Ogsp
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator+=, COMDAT
; _this$ = ecx

; 357  : 		{	// increment by integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 358  : 		*(_Mybase *)this += _Off;

  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00008	c1 e1 02	 shl	 ecx, 2
  0000b	01 08		 add	 DWORD PTR [eax], ecx

; 359  : 		return (*this);
; 360  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
??Y?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator+=
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE@PAUGuildUser@ioGuildData@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE@PAUGuildUser@ioGuildData@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE@PAUGuildUser@ioGuildData@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE@PAUGuildUser@ioGuildData@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator++, COMDAT
; _this$ = ecx

; 331  : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 332  : 		++*(_Mybase *)this;

  00002	83 00 38	 add	 DWORD PTR [eax], 56	; 00000038H

; 333  : 		return (*this);
; 334  : 		}

  00005	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator++
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator+=
; Function compile flags: /Ogsp
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator+=, COMDAT
; _this$ = ecx

; 357  : 		{	// increment by integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 358  : 		*(_Mybase *)this += _Off;

  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00008	6b c9 38	 imul	 ecx, 56			; 00000038H
  0000b	01 08		 add	 DWORD PTR [eax], ecx

; 359  : 		return (*this);
; 360  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
??Y?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator+=
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator==
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAE@PAPAVioGuildData@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::_Vector_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAE@PAPAVioGuildData@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAE@PAPAVioGuildData@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::_Vector_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QAE@PAPAVioGuildData@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::_Vector_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::operator==
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QAE@PAPAUGuildRankRwardInfo@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::_Vector_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QAE@PAPAUGuildRankRwardInfo@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QAE@PAPAUGuildRankRwardInfo@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::_Vector_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QAE@PAPAUGuildRankRwardInfo@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::_Vector_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::operator==
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QAE@PAPAUGuildAttendRwardInfo@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::_Vector_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QAE@PAPAUGuildAttendRwardInfo@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QAE@PAPAUGuildAttendRwardInfo@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::_Vector_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QAE@PAPAUGuildAttendRwardInfo@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::_Vector_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::operator==
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QAE@PAUInvitationUser@ioGuildInfo@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::_Vector_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QAE@PAUInvitationUser@ioGuildInfo@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QAE@PAUInvitationUser@ioGuildInfo@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::_Vector_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QAE@PAUInvitationUser@ioGuildInfo@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::_Vector_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::operator+=
; Function compile flags: /Ogsp
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::operator+=, COMDAT
; _this$ = ecx

; 357  : 		{	// increment by integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 358  : 		*(_Mybase *)this += _Off;

  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00008	6b c9 14	 imul	 ecx, 20			; 00000014H
  0000b	01 08		 add	 DWORD PTR [eax], ecx

; 359  : 		return (*this);
; 360  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
??Y?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::operator+=
_TEXT	ENDS
PUBLIC	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 49 92 24 09	 mov	 eax, 153391689		; 09249249H

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
_TEXT	ENDS
PUBLIC	?max_size@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?max_size@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@VGashaponPresent@@@std@@QAEPAVGashaponPresent@@I@Z ; std::allocator<GashaponPresent>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@VGashaponPresent@@@std@@QAEPAVGashaponPresent@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@VGashaponPresent@@@std@@QAEPAVGashaponPresent@@I@Z PROC ; std::allocator<GashaponPresent>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@VGashaponPresent@@@std@@YAPAVGashaponPresent@@IPAV1@@Z ; std::_Allocate<GashaponPresent>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@VGashaponPresent@@@std@@QAEPAVGashaponPresent@@I@Z ENDP ; std::allocator<GashaponPresent>::allocate
_TEXT	ENDS
PUBLIC	?max_size@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBEIXZ ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?max_size@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBEIXZ PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 24 49 92 04	 mov	 eax, 76695844		; 04924924H

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IBEII@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IBEII@Z PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	6a 38		 push	 56			; 00000038H
  0000a	99		 cdq
  0000b	59		 pop	 ecx
  0000c	f7 f9		 idiv	 ecx

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0000e	ba 24 49 92 04	 mov	 edx, 76695844		; 04924924H
  00013	8b c8		 mov	 ecx, eax
  00015	d1 e9		 shr	 ecx, 1
  00017	2b d1		 sub	 edx, ecx
  00019	3b d0		 cmp	 edx, eax
  0001b	73 04		 jae	 SHORT $LN4@Grow_to
  0001d	33 c0		 xor	 eax, eax
  0001f	eb 02		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00021	03 c1		 add	 eax, ecx
$LN5@Grow_to:

; 1279 : 		if (_Capacity < _Count)

  00023	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00026	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?_Grow_to@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IBEII@Z ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Grow_to
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@@Z ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@@Z PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@@Z ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Make_iter
_TEXT	ENDS
PUBLIC	?max_size@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QBEIXZ ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QBEIXZ PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IBEII@Z ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IBEII@Z PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  00008	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  0000d	c1 f8 02	 sar	 eax, 2
  00010	8b c8		 mov	 ecx, eax
  00012	d1 e9		 shr	 ecx, 1
  00014	2b d1		 sub	 edx, ecx
  00016	3b d0		 cmp	 edx, eax
  00018	73 04		 jae	 SHORT $LN4@Grow_to@2
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 02		 jmp	 SHORT $LN5@Grow_to@2
$LN4@Grow_to@2:
  0001e	03 c1		 add	 eax, ecx
$LN5@Grow_to@2:

; 1279 : 		if (_Capacity < _Count)

  00020	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00023	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IBEII@Z ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Grow_to
_TEXT	ENDS
PUBLIC	?max_size@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QBEIXZ ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QBEIXZ PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IBEII@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IBEII@Z PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	6a 14		 push	 20			; 00000014H
  0000a	99		 cdq
  0000b	59		 pop	 ecx
  0000c	f7 f9		 idiv	 ecx

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0000e	ba cc cc cc 0c	 mov	 edx, 214748364		; 0cccccccH
  00013	8b c8		 mov	 ecx, eax
  00015	d1 e9		 shr	 ecx, 1
  00017	2b d1		 sub	 edx, ecx
  00019	3b d0		 cmp	 edx, eax
  0001b	73 04		 jae	 SHORT $LN4@Grow_to@3
  0001d	33 c0		 xor	 eax, eax
  0001f	eb 02		 jmp	 SHORT $LN5@Grow_to@3
$LN4@Grow_to@3:
  00021	03 c1		 add	 eax, ecx
$LN5@Grow_to@3:

; 1279 : 		if (_Capacity < _Count)

  00023	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00026	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?_Grow_to@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IBEII@Z ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Grow_to
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@@Z ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@@Z PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@@Z ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Make_iter
_TEXT	ENDS
PUBLIC	?max_size@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBEIXZ ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBEIXZ PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QBEIXZ ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IBEII@Z ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IBEII@Z PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  00008	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  0000d	c1 f8 02	 sar	 eax, 2
  00010	8b c8		 mov	 ecx, eax
  00012	d1 e9		 shr	 ecx, 1
  00014	2b d1		 sub	 edx, ecx
  00016	3b d0		 cmp	 edx, eax
  00018	73 04		 jae	 SHORT $LN4@Grow_to@4
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 02		 jmp	 SHORT $LN5@Grow_to@4
$LN4@Grow_to@4:
  0001e	03 c1		 add	 eax, ecx
$LN5@Grow_to@4:

; 1279 : 		if (_Capacity < _Count)

  00020	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00023	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IBEII@Z ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Grow_to
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@@Z ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@@Z PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@@Z ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Make_iter
_TEXT	ENDS
PUBLIC	?max_size@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBEIXZ ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBEIXZ PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QBEIXZ ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IBEII@Z ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IBEII@Z PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  00008	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  0000d	c1 f8 02	 sar	 eax, 2
  00010	8b c8		 mov	 ecx, eax
  00012	d1 e9		 shr	 ecx, 1
  00014	2b d1		 sub	 edx, ecx
  00016	3b d0		 cmp	 edx, eax
  00018	73 04		 jae	 SHORT $LN4@Grow_to@5
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 02		 jmp	 SHORT $LN5@Grow_to@5
$LN4@Grow_to@5:
  0001e	03 c1		 add	 eax, ecx
$LN5@Grow_to@5:

; 1279 : 		if (_Capacity < _Count)

  00020	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00023	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IBEII@Z ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Grow_to
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@UGuildUser@ioGuildData@@@std@@QAEPAUGuildUser@ioGuildData@@I@Z ; std::allocator<ioGuildData::GuildUser>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@UGuildUser@ioGuildData@@@std@@QAEPAUGuildUser@ioGuildData@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@UGuildUser@ioGuildData@@@std@@QAEPAUGuildUser@ioGuildData@@I@Z PROC ; std::allocator<ioGuildData::GuildUser>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@UGuildUser@ioGuildData@@@std@@YAPAUGuildUser@ioGuildData@@IPAU12@@Z ; std::_Allocate<ioGuildData::GuildUser>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@UGuildUser@ioGuildData@@@std@@QAEPAUGuildUser@ioGuildData@@I@Z ENDP ; std::allocator<ioGuildData::GuildUser>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAVioGuildData@@@std@@QAEPAPAVioGuildData@@I@Z ; std::allocator<ioGuildData *>::allocate
; Function compile flags: /Ogsp
;	COMDAT ?allocate@?$allocator@PAVioGuildData@@@std@@QAEPAPAVioGuildData@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVioGuildData@@@std@@QAEPAPAVioGuildData@@I@Z PROC ; std::allocator<ioGuildData *>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@PAVioGuildData@@@std@@YAPAPAVioGuildData@@IPAPAV1@@Z ; std::_Allocate<ioGuildData *>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@PAVioGuildData@@@std@@QAEPAPAVioGuildData@@I@Z ENDP ; std::allocator<ioGuildData *>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEPAUInvitationUser@ioGuildInfo@@I@Z ; std::allocator<ioGuildInfo::InvitationUser>::allocate
; Function compile flags: /Ogsp
;	COMDAT ?allocate@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEPAUInvitationUser@ioGuildInfo@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEPAUInvitationUser@ioGuildInfo@@I@Z PROC ; std::allocator<ioGuildInfo::InvitationUser>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@UInvitationUser@ioGuildInfo@@@std@@YAPAUInvitationUser@ioGuildInfo@@IPAU12@@Z ; std::_Allocate<ioGuildInfo::InvitationUser>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEPAUInvitationUser@ioGuildInfo@@I@Z ENDP ; std::allocator<ioGuildInfo::InvitationUser>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAUGuildAttendRwardInfo@@@std@@QAEPAPAUGuildAttendRwardInfo@@I@Z ; std::allocator<GuildAttendRwardInfo *>::allocate
; Function compile flags: /Ogsp
;	COMDAT ?allocate@?$allocator@PAUGuildAttendRwardInfo@@@std@@QAEPAPAUGuildAttendRwardInfo@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@PAUGuildAttendRwardInfo@@@std@@QAEPAPAUGuildAttendRwardInfo@@I@Z PROC ; std::allocator<GuildAttendRwardInfo *>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@PAUGuildAttendRwardInfo@@@std@@YAPAPAUGuildAttendRwardInfo@@IPAPAU1@@Z ; std::_Allocate<GuildAttendRwardInfo *>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@PAUGuildAttendRwardInfo@@@std@@QAEPAPAUGuildAttendRwardInfo@@I@Z ENDP ; std::allocator<GuildAttendRwardInfo *>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAUGuildRankRwardInfo@@@std@@QAEPAPAUGuildRankRwardInfo@@I@Z ; std::allocator<GuildRankRwardInfo *>::allocate
; Function compile flags: /Ogsp
;	COMDAT ?allocate@?$allocator@PAUGuildRankRwardInfo@@@std@@QAEPAPAUGuildRankRwardInfo@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@PAUGuildRankRwardInfo@@@std@@QAEPAPAUGuildRankRwardInfo@@I@Z PROC ; std::allocator<GuildRankRwardInfo *>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@PAUGuildRankRwardInfo@@@std@@YAPAPAUGuildRankRwardInfo@@IPAPAU1@@Z ; std::_Allocate<GuildRankRwardInfo *>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@PAUGuildRankRwardInfo@@@std@@QAEPAPAUGuildRankRwardInfo@@I@Z ENDP ; std::allocator<GuildRankRwardInfo *>::allocate
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::operator==
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::operator==
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QAE@PAVGashaponPresent@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::_Vector_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QAE@PAVGashaponPresent@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QAE@PAVGashaponPresent@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::_Vector_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QAE@PAVGashaponPresent@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::_Vector_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::operator==
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$SetTitle_e@$04@ioINILoader@@QAEXAAY04$$CBD@Z	; ioINILoader::SetTitle_e<5>
EXTRN	__imp_?SetTitle@ioINILoader@@QAEXPBD@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$SetTitle_e@$04@ioINILoader@@QAEXAAY04$$CBD@Z
_TEXT	SEGMENT
__t$ = -16						; size = 5
__$ArrayPad$ = -4					; size = 4
_t$ = 8							; size = 4
??$SetTitle_e@$04@ioINILoader@@QAEXAAY04$$CBD@Z PROC	; ioINILoader::SetTitle_e<5>, COMDAT
; _this$ = ecx

; 188  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]

; 189  : 		_ENCSTR(t, _t);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	84 d2		 test	 dl, dl
  00017	0f 84 92 00 00
	00		 je	 $LN96@SetTitle_e
  0001d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00020	88 55 f0	 mov	 BYTE PTR __t$[ebp], dl
  00023	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00026	84 d2		 test	 dl, dl
  00028	74 7f		 je	 SHORT $LN95@SetTitle_e
  0002a	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0002d	88 55 f1	 mov	 BYTE PTR __t$[ebp+1], dl
  00030	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  00033	84 d2		 test	 dl, dl
  00035	74 6c		 je	 SHORT $LN94@SetTitle_e
  00037	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0003a	88 55 f2	 mov	 BYTE PTR __t$[ebp+2], dl
  0003d	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  00040	84 d2		 test	 dl, dl
  00042	74 59		 je	 SHORT $LN93@SetTitle_e
  00044	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00047	80 78 04 00	 cmp	 BYTE PTR [eax+4], 0
  0004b	88 55 f3	 mov	 BYTE PTR __t$[ebp+3], dl
  0004e	74 63		 je	 SHORT $LN1@SetTitle_e
  00050	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00053	84 d2		 test	 dl, dl
  00055	74 40		 je	 SHORT $LN91@SetTitle_e
  00057	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0005a	88 55 f5	 mov	 BYTE PTR __t$[ebp+5], dl
  0005d	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00060	84 d2		 test	 dl, dl
  00062	74 2d		 je	 SHORT $LN90@SetTitle_e
  00064	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00067	88 55 f6	 mov	 BYTE PTR __t$[ebp+6], dl
  0006a	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0006d	84 d2		 test	 dl, dl
  0006f	74 1a		 je	 SHORT $LN89@SetTitle_e
  00071	8a 40 08	 mov	 al, BYTE PTR [eax+8]
  00074	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00077	88 55 f7	 mov	 BYTE PTR __t$[ebp+7], dl
  0007a	84 c0		 test	 al, al
  0007c	74 07		 je	 SHORT $LN88@SetTitle_e
  0007e	34 ed		 xor	 al, -19			; ffffffedH
  00080	88 45 f8	 mov	 BYTE PTR __t$[ebp+8], al
  00083	eb 2e		 jmp	 SHORT $LN1@SetTitle_e
$LN88@SetTitle_e:
  00085	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  00089	eb 28		 jmp	 SHORT $LN1@SetTitle_e
$LN89@SetTitle_e:
  0008b	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  0008f	eb 22		 jmp	 SHORT $LN1@SetTitle_e
$LN90@SetTitle_e:
  00091	c6 45 f6 eb	 mov	 BYTE PTR __t$[ebp+6], -21 ; ffffffebH
  00095	eb 1c		 jmp	 SHORT $LN1@SetTitle_e
$LN91@SetTitle_e:
  00097	c6 45 f5 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  0009b	eb 16		 jmp	 SHORT $LN1@SetTitle_e
$LN93@SetTitle_e:
  0009d	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  000a1	eb 10		 jmp	 SHORT $LN1@SetTitle_e
$LN94@SetTitle_e:
  000a3	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  000a7	eb 0a		 jmp	 SHORT $LN1@SetTitle_e
$LN95@SetTitle_e:
  000a9	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  000ad	eb 04		 jmp	 SHORT $LN1@SetTitle_e
$LN96@SetTitle_e:
  000af	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@SetTitle_e:
  000b3	81 75 f0 ed ec
	eb ea		 xor	 DWORD PTR __t$[ebp], -353637139 ; eaebecedH

; 190  : 		SetTitle(_t);

  000ba	8d 45 f0	 lea	 eax, DWORD PTR __t$[ebp]
  000bd	50		 push	 eax
  000be	c6 45 f4 00	 mov	 BYTE PTR __t$[ebp+4], 0
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 191  : 	}

  000c8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cb	33 cd		 xor	 ecx, ebp
  000cd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d2	c9		 leave
  000d3	c2 04 00	 ret	 4
??$SetTitle_e@$04@ioINILoader@@QAEXAAY04$$CBD@Z ENDP	; ioINILoader::SetTitle_e<5>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$0BC@@ioINILoader@@QAEHAAY0BC@$$CBDH@Z ; ioINILoader::LoadInt_e<18>
EXTRN	__imp_?LoadInt@ioINILoader@@QAEHPBDH@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$0BC@@ioINILoader@@QAEHAAY0BC@$$CBDH@Z
_TEXT	SEGMENT
__k$ = -28						; size = 18
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$0BC@@ioINILoader@@QAEHAAY0BC@$$CBDH@Z PROC ; ioINILoader::LoadInt_e<18>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 be 01 00
	00		 je	 $LN96@LoadInt_e
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e4	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 a7 01 00
	00		 je	 $LN95@LoadInt_e
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 e5	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 90 01 00
	00		 je	 $LN94@LoadInt_e
  00042	b1 eb		 mov	 cl, -21			; ffffffebH
  00044	32 d1		 xor	 dl, cl
  00046	88 55 e6	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 78 01 00
	00		 je	 $LN93@LoadInt_e
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 e7	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 61 01 00
	00		 je	 $LN92@LoadInt_e
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 e8	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 4a 01 00
	00		 je	 $LN91@LoadInt_e
  00076	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00079	88 55 e9	 mov	 BYTE PTR __k$[ebp+5], dl
  0007c	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007f	84 d2		 test	 dl, dl
  00081	0f 84 34 01 00
	00		 je	 $LN90@LoadInt_e
  00087	32 d1		 xor	 dl, cl
  00089	88 55 ea	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 1e 01 00
	00		 je	 $LN89@LoadInt_e
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 eb	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 07 01 00
	00		 je	 $LN88@LoadInt_e
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 ec	 mov	 BYTE PTR __k$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 f0 00 00
	00		 je	 $LN87@LoadInt_e
  000b9	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000bc	88 55 ed	 mov	 BYTE PTR __k$[ebp+9], dl
  000bf	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c2	84 d2		 test	 dl, dl
  000c4	0f 84 da 00 00
	00		 je	 $LN86@LoadInt_e
  000ca	32 d1		 xor	 dl, cl
  000cc	88 55 ee	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	0f 84 c4 00 00
	00		 je	 $LN85@LoadInt_e
  000da	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000dd	88 55 ef	 mov	 BYTE PTR __k$[ebp+11], dl
  000e0	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e3	84 d2		 test	 dl, dl
  000e5	0f 84 ad 00 00
	00		 je	 $LN84@LoadInt_e
  000eb	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ee	88 55 f0	 mov	 BYTE PTR __k$[ebp+12], dl
  000f1	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f4	84 d2		 test	 dl, dl
  000f6	0f 84 96 00 00
	00		 je	 $LN83@LoadInt_e
  000fc	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000ff	88 55 f1	 mov	 BYTE PTR __k$[ebp+13], dl
  00102	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  00105	84 d2		 test	 dl, dl
  00107	0f 84 80 00 00
	00		 je	 $LN82@LoadInt_e
  0010d	32 d1		 xor	 dl, cl
  0010f	88 55 f2	 mov	 BYTE PTR __k$[ebp+14], dl
  00112	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00115	84 d2		 test	 dl, dl
  00117	74 6e		 je	 SHORT $LN81@LoadInt_e
  00119	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0011c	88 55 f3	 mov	 BYTE PTR __k$[ebp+15], dl
  0011f	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00122	84 d2		 test	 dl, dl
  00124	74 5b		 je	 SHORT $LN80@LoadInt_e
  00126	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00129	80 78 11 00	 cmp	 BYTE PTR [eax+17], 0
  0012d	88 55 f4	 mov	 BYTE PTR __k$[ebp+16], dl
  00130	0f 84 ac 00 00
	00		 je	 $LN1@LoadInt_e
  00136	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  00139	84 d2		 test	 dl, dl
  0013b	74 3f		 je	 SHORT $LN78@LoadInt_e
  0013d	32 d1		 xor	 dl, cl
  0013f	88 55 f6	 mov	 BYTE PTR __k$[ebp+18], dl
  00142	8a 50 13	 mov	 dl, BYTE PTR [eax+19]
  00145	84 d2		 test	 dl, dl
  00147	74 2d		 je	 SHORT $LN77@LoadInt_e
  00149	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0014c	88 55 f7	 mov	 BYTE PTR __k$[ebp+19], dl
  0014f	8a 50 14	 mov	 dl, BYTE PTR [eax+20]
  00152	84 d2		 test	 dl, dl
  00154	74 1a		 je	 SHORT $LN76@LoadInt_e
  00156	8a 40 15	 mov	 al, BYTE PTR [eax+21]
  00159	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0015c	88 55 f8	 mov	 BYTE PTR __k$[ebp+20], dl
  0015f	84 c0		 test	 al, al
  00161	74 07		 je	 SHORT $LN75@LoadInt_e
  00163	34 ec		 xor	 al, -20			; ffffffecH
  00165	88 45 f9	 mov	 BYTE PTR __k$[ebp+21], al
  00168	eb 78		 jmp	 SHORT $LN1@LoadInt_e
$LN75@LoadInt_e:
  0016a	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+21], -20 ; ffffffecH
  0016e	eb 72		 jmp	 SHORT $LN1@LoadInt_e
$LN76@LoadInt_e:
  00170	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+20], -19 ; ffffffedH
  00174	eb 6c		 jmp	 SHORT $LN1@LoadInt_e
$LN77@LoadInt_e:
  00176	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+19], -22 ; ffffffeaH
  0017a	eb 66		 jmp	 SHORT $LN1@LoadInt_e
$LN78@LoadInt_e:
  0017c	88 4d f6	 mov	 BYTE PTR __k$[ebp+18], cl
  0017f	eb 61		 jmp	 SHORT $LN1@LoadInt_e
$LN80@LoadInt_e:
  00181	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  00185	eb 5b		 jmp	 SHORT $LN1@LoadInt_e
$LN81@LoadInt_e:
  00187	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  0018b	eb 55		 jmp	 SHORT $LN1@LoadInt_e
$LN82@LoadInt_e:
  0018d	88 4d f2	 mov	 BYTE PTR __k$[ebp+14], cl
  00190	eb 50		 jmp	 SHORT $LN1@LoadInt_e
$LN83@LoadInt_e:
  00192	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  00196	eb 4a		 jmp	 SHORT $LN1@LoadInt_e
$LN84@LoadInt_e:
  00198	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  0019c	eb 44		 jmp	 SHORT $LN1@LoadInt_e
$LN85@LoadInt_e:
  0019e	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  001a2	eb 3e		 jmp	 SHORT $LN1@LoadInt_e
$LN86@LoadInt_e:
  001a4	88 4d ee	 mov	 BYTE PTR __k$[ebp+10], cl
  001a7	eb 39		 jmp	 SHORT $LN1@LoadInt_e
$LN87@LoadInt_e:
  001a9	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  001ad	eb 33		 jmp	 SHORT $LN1@LoadInt_e
$LN88@LoadInt_e:
  001af	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  001b3	eb 2d		 jmp	 SHORT $LN1@LoadInt_e
$LN89@LoadInt_e:
  001b5	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  001b9	eb 27		 jmp	 SHORT $LN1@LoadInt_e
$LN90@LoadInt_e:
  001bb	88 4d ea	 mov	 BYTE PTR __k$[ebp+6], cl
  001be	eb 22		 jmp	 SHORT $LN1@LoadInt_e
$LN91@LoadInt_e:
  001c0	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  001c4	eb 1c		 jmp	 SHORT $LN1@LoadInt_e
$LN92@LoadInt_e:
  001c6	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  001ca	eb 16		 jmp	 SHORT $LN1@LoadInt_e
$LN93@LoadInt_e:
  001cc	c6 45 e7 ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  001d0	eb 10		 jmp	 SHORT $LN1@LoadInt_e
$LN94@LoadInt_e:
  001d2	c6 45 e6 eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  001d6	eb 0a		 jmp	 SHORT $LN1@LoadInt_e
$LN95@LoadInt_e:
  001d8	c6 45 e5 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  001dc	eb 04		 jmp	 SHORT $LN1@LoadInt_e
$LN96@LoadInt_e:
  001de	c6 45 e4 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e:
  001e2	6a 04		 push	 4
  001e4	8d 45 e4	 lea	 eax, DWORD PTR __k$[ebp]
  001e7	c6 45 f5 00	 mov	 BYTE PTR __k$[ebp+17], 0
  001eb	5a		 pop	 edx
$LL104@LoadInt_e:
  001ec	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001f2	83 c0 04	 add	 eax, 4
  001f5	4a		 dec	 edx
  001f6	75 f4		 jne	 SHORT $LL104@LoadInt_e

; 120  : 		return LoadInt(_k, i);

  001f8	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  001fb	80 75 f4 ed	 xor	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  001ff	8d 45 e4	 lea	 eax, DWORD PTR __k$[ebp]
  00202	50		 push	 eax
  00203	8b ce		 mov	 ecx, esi
  00205	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  0020b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0020e	33 cd		 xor	 ecx, ebp
  00210	5e		 pop	 esi
  00211	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00216	c9		 leave
  00217	c2 08 00	 ret	 8
??$LoadInt_e@$0BC@@ioINILoader@@QAEHAAY0BC@$$CBDH@Z ENDP ; ioINILoader::LoadInt_e<18>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$0BH@@ioINILoader@@QAEHAAY0BH@$$CBDH@Z ; ioINILoader::LoadInt_e<23>
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$0BH@@ioINILoader@@QAEHAAY0BH@$$CBDH@Z
_TEXT	SEGMENT
__k$ = -32						; size = 23
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$0BH@@ioINILoader@@QAEHAAY0BH@$$CBDH@Z PROC ; ioINILoader::LoadInt_e<23>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	84 d2		 test	 dl, dl
  0001b	0f 84 2d 02 00
	00		 je	 $LN96@LoadInt_e@2
  00021	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00024	88 55 e0	 mov	 BYTE PTR __k$[ebp], dl
  00027	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0002a	84 d2		 test	 dl, dl
  0002c	0f 84 16 02 00
	00		 je	 $LN95@LoadInt_e@2
  00032	b1 ec		 mov	 cl, -20			; ffffffecH
  00034	32 d1		 xor	 dl, cl
  00036	88 55 e1	 mov	 BYTE PTR __k$[ebp+1], dl
  00039	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003c	84 d2		 test	 dl, dl
  0003e	0f 84 fe 01 00
	00		 je	 $LN94@LoadInt_e@2
  00044	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00047	88 55 e2	 mov	 BYTE PTR __k$[ebp+2], dl
  0004a	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004d	84 d2		 test	 dl, dl
  0004f	0f 84 e7 01 00
	00		 je	 $LN93@LoadInt_e@2
  00055	b3 ea		 mov	 bl, -22			; ffffffeaH
  00057	32 d3		 xor	 dl, bl
  00059	88 55 e3	 mov	 BYTE PTR __k$[ebp+3], dl
  0005c	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005f	84 d2		 test	 dl, dl
  00061	0f 84 cf 01 00
	00		 je	 $LN92@LoadInt_e@2
  00067	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0006a	88 55 e4	 mov	 BYTE PTR __k$[ebp+4], dl
  0006d	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00070	84 d2		 test	 dl, dl
  00072	0f 84 b9 01 00
	00		 je	 $LN91@LoadInt_e@2
  00078	32 d1		 xor	 dl, cl
  0007a	88 55 e5	 mov	 BYTE PTR __k$[ebp+5], dl
  0007d	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00080	84 d2		 test	 dl, dl
  00082	0f 84 a3 01 00
	00		 je	 $LN90@LoadInt_e@2
  00088	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0008b	88 55 e6	 mov	 BYTE PTR __k$[ebp+6], dl
  0008e	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00091	84 d2		 test	 dl, dl
  00093	0f 84 8d 01 00
	00		 je	 $LN89@LoadInt_e@2
  00099	32 d3		 xor	 dl, bl
  0009b	88 55 e7	 mov	 BYTE PTR __k$[ebp+7], dl
  0009e	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a1	84 d2		 test	 dl, dl
  000a3	0f 84 77 01 00
	00		 je	 $LN88@LoadInt_e@2
  000a9	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ac	88 55 e8	 mov	 BYTE PTR __k$[ebp+8], dl
  000af	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b2	84 d2		 test	 dl, dl
  000b4	0f 84 61 01 00
	00		 je	 $LN87@LoadInt_e@2
  000ba	32 d1		 xor	 dl, cl
  000bc	88 55 e9	 mov	 BYTE PTR __k$[ebp+9], dl
  000bf	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c2	84 d2		 test	 dl, dl
  000c4	0f 84 4b 01 00
	00		 je	 $LN86@LoadInt_e@2
  000ca	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000cd	88 55 ea	 mov	 BYTE PTR __k$[ebp+10], dl
  000d0	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d3	84 d2		 test	 dl, dl
  000d5	0f 84 35 01 00
	00		 je	 $LN85@LoadInt_e@2
  000db	32 d3		 xor	 dl, bl
  000dd	88 55 eb	 mov	 BYTE PTR __k$[ebp+11], dl
  000e0	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e3	84 d2		 test	 dl, dl
  000e5	0f 84 1f 01 00
	00		 je	 $LN84@LoadInt_e@2
  000eb	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ee	88 55 ec	 mov	 BYTE PTR __k$[ebp+12], dl
  000f1	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f4	84 d2		 test	 dl, dl
  000f6	0f 84 09 01 00
	00		 je	 $LN83@LoadInt_e@2
  000fc	32 d1		 xor	 dl, cl
  000fe	88 55 ed	 mov	 BYTE PTR __k$[ebp+13], dl
  00101	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  00104	84 d2		 test	 dl, dl
  00106	0f 84 f3 00 00
	00		 je	 $LN82@LoadInt_e@2
  0010c	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0010f	88 55 ee	 mov	 BYTE PTR __k$[ebp+14], dl
  00112	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00115	84 d2		 test	 dl, dl
  00117	0f 84 dd 00 00
	00		 je	 $LN81@LoadInt_e@2
  0011d	32 d3		 xor	 dl, bl
  0011f	88 55 ef	 mov	 BYTE PTR __k$[ebp+15], dl
  00122	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00125	84 d2		 test	 dl, dl
  00127	0f 84 c7 00 00
	00		 je	 $LN80@LoadInt_e@2
  0012d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00130	88 55 f0	 mov	 BYTE PTR __k$[ebp+16], dl
  00133	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00136	84 d2		 test	 dl, dl
  00138	0f 84 b1 00 00
	00		 je	 $LN79@LoadInt_e@2
  0013e	32 d1		 xor	 dl, cl
  00140	88 55 f1	 mov	 BYTE PTR __k$[ebp+17], dl
  00143	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  00146	84 d2		 test	 dl, dl
  00148	0f 84 9b 00 00
	00		 je	 $LN78@LoadInt_e@2
  0014e	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00151	88 55 f2	 mov	 BYTE PTR __k$[ebp+18], dl
  00154	8a 50 13	 mov	 dl, BYTE PTR [eax+19]
  00157	84 d2		 test	 dl, dl
  00159	0f 84 85 00 00
	00		 je	 $LN77@LoadInt_e@2
  0015f	32 d3		 xor	 dl, bl
  00161	88 55 f3	 mov	 BYTE PTR __k$[ebp+19], dl
  00164	8a 50 14	 mov	 dl, BYTE PTR [eax+20]
  00167	84 d2		 test	 dl, dl
  00169	74 73		 je	 SHORT $LN76@LoadInt_e@2
  0016b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0016e	88 55 f4	 mov	 BYTE PTR __k$[ebp+20], dl
  00171	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00174	84 d2		 test	 dl, dl
  00176	74 61		 je	 SHORT $LN75@LoadInt_e@2
  00178	32 d1		 xor	 dl, cl
  0017a	80 78 16 00	 cmp	 BYTE PTR [eax+22], 0
  0017e	88 55 f5	 mov	 BYTE PTR __k$[ebp+21], dl
  00181	0f 84 cb 00 00
	00		 je	 $LN1@LoadInt_e@2
  00187	8a 50 17	 mov	 dl, BYTE PTR [eax+23]
  0018a	84 d2		 test	 dl, dl
  0018c	74 46		 je	 SHORT $LN73@LoadInt_e@2
  0018e	32 d3		 xor	 dl, bl
  00190	88 55 f7	 mov	 BYTE PTR __k$[ebp+23], dl
  00193	8a 50 18	 mov	 dl, BYTE PTR [eax+24]
  00196	84 d2		 test	 dl, dl
  00198	74 34		 je	 SHORT $LN72@LoadInt_e@2
  0019a	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0019d	88 55 f8	 mov	 BYTE PTR __k$[ebp+24], dl
  001a0	8a 50 19	 mov	 dl, BYTE PTR [eax+25]
  001a3	84 d2		 test	 dl, dl
  001a5	74 1f		 je	 SHORT $LN71@LoadInt_e@2
  001a7	8a 40 1a	 mov	 al, BYTE PTR [eax+26]
  001aa	32 d1		 xor	 dl, cl
  001ac	88 55 f9	 mov	 BYTE PTR __k$[ebp+25], dl
  001af	84 c0		 test	 al, al
  001b1	74 0a		 je	 SHORT $LN70@LoadInt_e@2
  001b3	34 eb		 xor	 al, -21			; ffffffebH
  001b5	88 45 fa	 mov	 BYTE PTR __k$[ebp+26], al
  001b8	e9 95 00 00 00	 jmp	 $LN1@LoadInt_e@2
$LN70@LoadInt_e@2:
  001bd	c6 45 fa eb	 mov	 BYTE PTR __k$[ebp+26], -21 ; ffffffebH
  001c1	e9 8c 00 00 00	 jmp	 $LN1@LoadInt_e@2
$LN71@LoadInt_e@2:
  001c6	88 4d f9	 mov	 BYTE PTR __k$[ebp+25], cl
  001c9	e9 84 00 00 00	 jmp	 $LN1@LoadInt_e@2
$LN72@LoadInt_e@2:
  001ce	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+24], -19 ; ffffffedH
  001d2	eb 7e		 jmp	 SHORT $LN1@LoadInt_e@2
$LN73@LoadInt_e@2:
  001d4	88 5d f7	 mov	 BYTE PTR __k$[ebp+23], bl
  001d7	eb 79		 jmp	 SHORT $LN1@LoadInt_e@2
$LN75@LoadInt_e@2:
  001d9	88 4d f5	 mov	 BYTE PTR __k$[ebp+21], cl
  001dc	eb 74		 jmp	 SHORT $LN1@LoadInt_e@2
$LN76@LoadInt_e@2:
  001de	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+20], -19 ; ffffffedH
  001e2	eb 6e		 jmp	 SHORT $LN1@LoadInt_e@2
$LN77@LoadInt_e@2:
  001e4	88 5d f3	 mov	 BYTE PTR __k$[ebp+19], bl
  001e7	eb 69		 jmp	 SHORT $LN1@LoadInt_e@2
$LN78@LoadInt_e@2:
  001e9	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+18], -21 ; ffffffebH
  001ed	eb 63		 jmp	 SHORT $LN1@LoadInt_e@2
$LN79@LoadInt_e@2:
  001ef	88 4d f1	 mov	 BYTE PTR __k$[ebp+17], cl
  001f2	eb 5e		 jmp	 SHORT $LN1@LoadInt_e@2
$LN80@LoadInt_e@2:
  001f4	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  001f8	eb 58		 jmp	 SHORT $LN1@LoadInt_e@2
$LN81@LoadInt_e@2:
  001fa	88 5d ef	 mov	 BYTE PTR __k$[ebp+15], bl
  001fd	eb 53		 jmp	 SHORT $LN1@LoadInt_e@2
$LN82@LoadInt_e@2:
  001ff	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+14], -21 ; ffffffebH
  00203	eb 4d		 jmp	 SHORT $LN1@LoadInt_e@2
$LN83@LoadInt_e@2:
  00205	88 4d ed	 mov	 BYTE PTR __k$[ebp+13], cl
  00208	eb 48		 jmp	 SHORT $LN1@LoadInt_e@2
$LN84@LoadInt_e@2:
  0020a	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  0020e	eb 42		 jmp	 SHORT $LN1@LoadInt_e@2
$LN85@LoadInt_e@2:
  00210	88 5d eb	 mov	 BYTE PTR __k$[ebp+11], bl
  00213	eb 3d		 jmp	 SHORT $LN1@LoadInt_e@2
$LN86@LoadInt_e@2:
  00215	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  00219	eb 37		 jmp	 SHORT $LN1@LoadInt_e@2
$LN87@LoadInt_e@2:
  0021b	88 4d e9	 mov	 BYTE PTR __k$[ebp+9], cl
  0021e	eb 32		 jmp	 SHORT $LN1@LoadInt_e@2
$LN88@LoadInt_e@2:
  00220	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00224	eb 2c		 jmp	 SHORT $LN1@LoadInt_e@2
$LN89@LoadInt_e@2:
  00226	88 5d e7	 mov	 BYTE PTR __k$[ebp+7], bl
  00229	eb 27		 jmp	 SHORT $LN1@LoadInt_e@2
$LN90@LoadInt_e@2:
  0022b	c6 45 e6 eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  0022f	eb 21		 jmp	 SHORT $LN1@LoadInt_e@2
$LN91@LoadInt_e@2:
  00231	88 4d e5	 mov	 BYTE PTR __k$[ebp+5], cl
  00234	eb 1c		 jmp	 SHORT $LN1@LoadInt_e@2
$LN92@LoadInt_e@2:
  00236	c6 45 e4 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  0023a	eb 16		 jmp	 SHORT $LN1@LoadInt_e@2
$LN93@LoadInt_e@2:
  0023c	c6 45 e3 ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00240	eb 10		 jmp	 SHORT $LN1@LoadInt_e@2
$LN94@LoadInt_e@2:
  00242	c6 45 e2 eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  00246	eb 0a		 jmp	 SHORT $LN1@LoadInt_e@2
$LN95@LoadInt_e@2:
  00248	c6 45 e1 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  0024c	eb 04		 jmp	 SHORT $LN1@LoadInt_e@2
$LN96@LoadInt_e@2:
  0024e	c6 45 e0 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e@2:
  00252	6a 05		 push	 5
  00254	8d 45 e0	 lea	 eax, DWORD PTR __k$[ebp]
  00257	c6 45 f6 00	 mov	 BYTE PTR __k$[ebp+22], 0
  0025b	5a		 pop	 edx
$LL104@LoadInt_e@2:
  0025c	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00262	83 c0 04	 add	 eax, 4
  00265	4a		 dec	 edx
  00266	75 f4		 jne	 SHORT $LL104@LoadInt_e@2
  00268	6a 14		 push	 20			; 00000014H
  0026a	58		 pop	 eax
$LL101@LoadInt_e@2:
  0026b	8b c8		 mov	 ecx, eax
  0026d	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00273	79 05		 jns	 SHORT $LN111@LoadInt_e@2
  00275	49		 dec	 ecx
  00276	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00279	41		 inc	 ecx
$LN111@LoadInt_e@2:
  0027a	b2 ed		 mov	 dl, -19			; ffffffedH
  0027c	2a d1		 sub	 dl, cl
  0027e	30 54 05 e0	 xor	 BYTE PTR __k$[ebp+eax], dl
  00282	40		 inc	 eax
  00283	83 f8 16	 cmp	 eax, 22			; 00000016H
  00286	7c e3		 jl	 SHORT $LL101@LoadInt_e@2

; 120  : 		return LoadInt(_k, i);

  00288	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  0028b	8d 45 e0	 lea	 eax, DWORD PTR __k$[ebp]
  0028e	50		 push	 eax
  0028f	8b ce		 mov	 ecx, esi
  00291	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  00297	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0029a	5e		 pop	 esi
  0029b	33 cd		 xor	 ecx, ebp
  0029d	5b		 pop	 ebx
  0029e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002a3	c9		 leave
  002a4	c2 08 00	 ret	 8
??$LoadInt_e@$0BH@@ioINILoader@@QAEHAAY0BH@$$CBDH@Z ENDP ; ioINILoader::LoadInt_e<23>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$0BJ@@ioINILoader@@QAEHAAY0BJ@$$CBDH@Z ; ioINILoader::LoadInt_e<25>
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$0BJ@@ioINILoader@@QAEHAAY0BJ@$$CBDH@Z
_TEXT	SEGMENT
__k$ = -36						; size = 25
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$0BJ@@ioINILoader@@QAEHAAY0BJ@$$CBDH@Z PROC ; ioINILoader::LoadInt_e<25>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	84 d2		 test	 dl, dl
  0001b	0f 84 5f 02 00
	00		 je	 $LN96@LoadInt_e@3
  00021	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00024	88 55 dc	 mov	 BYTE PTR __k$[ebp], dl
  00027	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0002a	84 d2		 test	 dl, dl
  0002c	0f 84 48 02 00
	00		 je	 $LN95@LoadInt_e@3
  00032	b1 ec		 mov	 cl, -20			; ffffffecH
  00034	32 d1		 xor	 dl, cl
  00036	88 55 dd	 mov	 BYTE PTR __k$[ebp+1], dl
  00039	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003c	84 d2		 test	 dl, dl
  0003e	0f 84 30 02 00
	00		 je	 $LN94@LoadInt_e@3
  00044	b3 eb		 mov	 bl, -21			; ffffffebH
  00046	32 d3		 xor	 dl, bl
  00048	88 55 de	 mov	 BYTE PTR __k$[ebp+2], dl
  0004b	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004e	84 d2		 test	 dl, dl
  00050	0f 84 18 02 00
	00		 je	 $LN93@LoadInt_e@3
  00056	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00059	88 55 df	 mov	 BYTE PTR __k$[ebp+3], dl
  0005c	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005f	84 d2		 test	 dl, dl
  00061	0f 84 01 02 00
	00		 je	 $LN92@LoadInt_e@3
  00067	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0006a	88 55 e0	 mov	 BYTE PTR __k$[ebp+4], dl
  0006d	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00070	84 d2		 test	 dl, dl
  00072	0f 84 eb 01 00
	00		 je	 $LN91@LoadInt_e@3
  00078	32 d1		 xor	 dl, cl
  0007a	88 55 e1	 mov	 BYTE PTR __k$[ebp+5], dl
  0007d	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00080	84 d2		 test	 dl, dl
  00082	0f 84 d6 01 00
	00		 je	 $LN90@LoadInt_e@3
  00088	32 d3		 xor	 dl, bl
  0008a	88 55 e2	 mov	 BYTE PTR __k$[ebp+6], dl
  0008d	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00090	84 d2		 test	 dl, dl
  00092	0f 84 c0 01 00
	00		 je	 $LN89@LoadInt_e@3
  00098	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009b	88 55 e3	 mov	 BYTE PTR __k$[ebp+7], dl
  0009e	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a1	84 d2		 test	 dl, dl
  000a3	0f 84 a9 01 00
	00		 je	 $LN88@LoadInt_e@3
  000a9	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ac	88 55 e4	 mov	 BYTE PTR __k$[ebp+8], dl
  000af	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b2	84 d2		 test	 dl, dl
  000b4	0f 84 93 01 00
	00		 je	 $LN87@LoadInt_e@3
  000ba	32 d1		 xor	 dl, cl
  000bc	88 55 e5	 mov	 BYTE PTR __k$[ebp+9], dl
  000bf	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c2	84 d2		 test	 dl, dl
  000c4	0f 84 7e 01 00
	00		 je	 $LN86@LoadInt_e@3
  000ca	32 d3		 xor	 dl, bl
  000cc	88 55 e6	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	0f 84 68 01 00
	00		 je	 $LN85@LoadInt_e@3
  000da	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000dd	88 55 e7	 mov	 BYTE PTR __k$[ebp+11], dl
  000e0	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e3	84 d2		 test	 dl, dl
  000e5	0f 84 51 01 00
	00		 je	 $LN84@LoadInt_e@3
  000eb	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ee	88 55 e8	 mov	 BYTE PTR __k$[ebp+12], dl
  000f1	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f4	84 d2		 test	 dl, dl
  000f6	0f 84 3b 01 00
	00		 je	 $LN83@LoadInt_e@3
  000fc	32 d1		 xor	 dl, cl
  000fe	88 55 e9	 mov	 BYTE PTR __k$[ebp+13], dl
  00101	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  00104	84 d2		 test	 dl, dl
  00106	0f 84 26 01 00
	00		 je	 $LN82@LoadInt_e@3
  0010c	32 d3		 xor	 dl, bl
  0010e	88 55 ea	 mov	 BYTE PTR __k$[ebp+14], dl
  00111	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00114	84 d2		 test	 dl, dl
  00116	0f 84 10 01 00
	00		 je	 $LN81@LoadInt_e@3
  0011c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0011f	88 55 eb	 mov	 BYTE PTR __k$[ebp+15], dl
  00122	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00125	84 d2		 test	 dl, dl
  00127	0f 84 f9 00 00
	00		 je	 $LN80@LoadInt_e@3
  0012d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00130	88 55 ec	 mov	 BYTE PTR __k$[ebp+16], dl
  00133	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00136	84 d2		 test	 dl, dl
  00138	0f 84 e3 00 00
	00		 je	 $LN79@LoadInt_e@3
  0013e	32 d1		 xor	 dl, cl
  00140	88 55 ed	 mov	 BYTE PTR __k$[ebp+17], dl
  00143	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  00146	84 d2		 test	 dl, dl
  00148	0f 84 ce 00 00
	00		 je	 $LN78@LoadInt_e@3
  0014e	32 d3		 xor	 dl, bl
  00150	88 55 ee	 mov	 BYTE PTR __k$[ebp+18], dl
  00153	8a 50 13	 mov	 dl, BYTE PTR [eax+19]
  00156	84 d2		 test	 dl, dl
  00158	0f 84 b8 00 00
	00		 je	 $LN77@LoadInt_e@3
  0015e	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00161	88 55 ef	 mov	 BYTE PTR __k$[ebp+19], dl
  00164	8a 50 14	 mov	 dl, BYTE PTR [eax+20]
  00167	84 d2		 test	 dl, dl
  00169	0f 84 a1 00 00
	00		 je	 $LN76@LoadInt_e@3
  0016f	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00172	88 55 f0	 mov	 BYTE PTR __k$[ebp+20], dl
  00175	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00178	84 d2		 test	 dl, dl
  0017a	0f 84 8b 00 00
	00		 je	 $LN75@LoadInt_e@3
  00180	32 d1		 xor	 dl, cl
  00182	88 55 f1	 mov	 BYTE PTR __k$[ebp+21], dl
  00185	8a 50 16	 mov	 dl, BYTE PTR [eax+22]
  00188	84 d2		 test	 dl, dl
  0018a	74 7a		 je	 SHORT $LN74@LoadInt_e@3
  0018c	32 d3		 xor	 dl, bl
  0018e	88 55 f2	 mov	 BYTE PTR __k$[ebp+22], dl
  00191	8a 50 17	 mov	 dl, BYTE PTR [eax+23]
  00194	84 d2		 test	 dl, dl
  00196	74 68		 je	 SHORT $LN73@LoadInt_e@3
  00198	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0019b	80 78 18 00	 cmp	 BYTE PTR [eax+24], 0
  0019f	88 55 f3	 mov	 BYTE PTR __k$[ebp+23], dl
  001a2	0f 84 dc 00 00
	00		 je	 $LN1@LoadInt_e@3
  001a8	8a 50 19	 mov	 dl, BYTE PTR [eax+25]
  001ab	84 d2		 test	 dl, dl
  001ad	74 49		 je	 SHORT $LN71@LoadInt_e@3
  001af	32 d1		 xor	 dl, cl
  001b1	88 55 f5	 mov	 BYTE PTR __k$[ebp+25], dl
  001b4	8a 50 1a	 mov	 dl, BYTE PTR [eax+26]
  001b7	84 d2		 test	 dl, dl
  001b9	74 35		 je	 SHORT $LN70@LoadInt_e@3
  001bb	32 d3		 xor	 dl, bl
  001bd	88 55 f6	 mov	 BYTE PTR __k$[ebp+26], dl
  001c0	8a 50 1b	 mov	 dl, BYTE PTR [eax+27]
  001c3	84 d2		 test	 dl, dl
  001c5	74 20		 je	 SHORT $LN69@LoadInt_e@3
  001c7	8a 40 1c	 mov	 al, BYTE PTR [eax+28]
  001ca	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001cd	88 55 f7	 mov	 BYTE PTR __k$[ebp+27], dl
  001d0	84 c0		 test	 al, al
  001d2	74 0a		 je	 SHORT $LN68@LoadInt_e@3
  001d4	34 ed		 xor	 al, -19			; ffffffedH
  001d6	88 45 f8	 mov	 BYTE PTR __k$[ebp+28], al
  001d9	e9 a6 00 00 00	 jmp	 $LN1@LoadInt_e@3
$LN68@LoadInt_e@3:
  001de	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+28], -19 ; ffffffedH
  001e2	e9 9d 00 00 00	 jmp	 $LN1@LoadInt_e@3
$LN69@LoadInt_e@3:
  001e7	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+27], -22 ; ffffffeaH
  001eb	e9 94 00 00 00	 jmp	 $LN1@LoadInt_e@3
$LN70@LoadInt_e@3:
  001f0	88 5d f6	 mov	 BYTE PTR __k$[ebp+26], bl
  001f3	e9 8c 00 00 00	 jmp	 $LN1@LoadInt_e@3
$LN71@LoadInt_e@3:
  001f8	88 4d f5	 mov	 BYTE PTR __k$[ebp+25], cl
  001fb	e9 84 00 00 00	 jmp	 $LN1@LoadInt_e@3
$LN73@LoadInt_e@3:
  00200	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+23], -22 ; ffffffeaH
  00204	eb 7e		 jmp	 SHORT $LN1@LoadInt_e@3
$LN74@LoadInt_e@3:
  00206	88 5d f2	 mov	 BYTE PTR __k$[ebp+22], bl
  00209	eb 79		 jmp	 SHORT $LN1@LoadInt_e@3
$LN75@LoadInt_e@3:
  0020b	88 4d f1	 mov	 BYTE PTR __k$[ebp+21], cl
  0020e	eb 74		 jmp	 SHORT $LN1@LoadInt_e@3
$LN76@LoadInt_e@3:
  00210	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+20], -19 ; ffffffedH
  00214	eb 6e		 jmp	 SHORT $LN1@LoadInt_e@3
$LN77@LoadInt_e@3:
  00216	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+19], -22 ; ffffffeaH
  0021a	eb 68		 jmp	 SHORT $LN1@LoadInt_e@3
$LN78@LoadInt_e@3:
  0021c	88 5d ee	 mov	 BYTE PTR __k$[ebp+18], bl
  0021f	eb 63		 jmp	 SHORT $LN1@LoadInt_e@3
$LN79@LoadInt_e@3:
  00221	88 4d ed	 mov	 BYTE PTR __k$[ebp+17], cl
  00224	eb 5e		 jmp	 SHORT $LN1@LoadInt_e@3
$LN80@LoadInt_e@3:
  00226	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  0022a	eb 58		 jmp	 SHORT $LN1@LoadInt_e@3
$LN81@LoadInt_e@3:
  0022c	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00230	eb 52		 jmp	 SHORT $LN1@LoadInt_e@3
$LN82@LoadInt_e@3:
  00232	88 5d ea	 mov	 BYTE PTR __k$[ebp+14], bl
  00235	eb 4d		 jmp	 SHORT $LN1@LoadInt_e@3
$LN83@LoadInt_e@3:
  00237	88 4d e9	 mov	 BYTE PTR __k$[ebp+13], cl
  0023a	eb 48		 jmp	 SHORT $LN1@LoadInt_e@3
$LN84@LoadInt_e@3:
  0023c	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00240	eb 42		 jmp	 SHORT $LN1@LoadInt_e@3
$LN85@LoadInt_e@3:
  00242	c6 45 e7 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00246	eb 3c		 jmp	 SHORT $LN1@LoadInt_e@3
$LN86@LoadInt_e@3:
  00248	88 5d e6	 mov	 BYTE PTR __k$[ebp+10], bl
  0024b	eb 37		 jmp	 SHORT $LN1@LoadInt_e@3
$LN87@LoadInt_e@3:
  0024d	88 4d e5	 mov	 BYTE PTR __k$[ebp+9], cl
  00250	eb 32		 jmp	 SHORT $LN1@LoadInt_e@3
$LN88@LoadInt_e@3:
  00252	c6 45 e4 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00256	eb 2c		 jmp	 SHORT $LN1@LoadInt_e@3
$LN89@LoadInt_e@3:
  00258	c6 45 e3 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  0025c	eb 26		 jmp	 SHORT $LN1@LoadInt_e@3
$LN90@LoadInt_e@3:
  0025e	88 5d e2	 mov	 BYTE PTR __k$[ebp+6], bl
  00261	eb 21		 jmp	 SHORT $LN1@LoadInt_e@3
$LN91@LoadInt_e@3:
  00263	88 4d e1	 mov	 BYTE PTR __k$[ebp+5], cl
  00266	eb 1c		 jmp	 SHORT $LN1@LoadInt_e@3
$LN92@LoadInt_e@3:
  00268	c6 45 e0 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  0026c	eb 16		 jmp	 SHORT $LN1@LoadInt_e@3
$LN93@LoadInt_e@3:
  0026e	c6 45 df ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00272	eb 10		 jmp	 SHORT $LN1@LoadInt_e@3
$LN94@LoadInt_e@3:
  00274	c6 45 de eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  00278	eb 0a		 jmp	 SHORT $LN1@LoadInt_e@3
$LN95@LoadInt_e@3:
  0027a	c6 45 dd ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  0027e	eb 04		 jmp	 SHORT $LN1@LoadInt_e@3
$LN96@LoadInt_e@3:
  00280	c6 45 dc ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e@3:
  00284	6a 06		 push	 6
  00286	8d 45 dc	 lea	 eax, DWORD PTR __k$[ebp]
  00289	c6 45 f4 00	 mov	 BYTE PTR __k$[ebp+24], 0
  0028d	5a		 pop	 edx
$LL104@LoadInt_e@3:
  0028e	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00294	83 c0 04	 add	 eax, 4
  00297	4a		 dec	 edx
  00298	75 f4		 jne	 SHORT $LL104@LoadInt_e@3

; 120  : 		return LoadInt(_k, i);

  0029a	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  0029d	8d 45 dc	 lea	 eax, DWORD PTR __k$[ebp]
  002a0	50		 push	 eax
  002a1	8b ce		 mov	 ecx, esi
  002a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  002a9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002ac	5e		 pop	 esi
  002ad	33 cd		 xor	 ecx, ebp
  002af	5b		 pop	 ebx
  002b0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002b5	c9		 leave
  002b6	c2 08 00	 ret	 8
??$LoadInt_e@$0BJ@@ioINILoader@@QAEHAAY0BJ@$$CBDH@Z ENDP ; ioINILoader::LoadInt_e<25>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$0BE@@ioINILoader@@QAEHAAY0BE@$$CBDH@Z ; ioINILoader::LoadInt_e<20>
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$0BE@@ioINILoader@@QAEHAAY0BE@$$CBDH@Z
_TEXT	SEGMENT
__k$ = -28						; size = 20
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$0BE@@ioINILoader@@QAEHAAY0BE@$$CBDH@Z PROC ; ioINILoader::LoadInt_e<20>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	84 d2		 test	 dl, dl
  0001b	0f 84 dd 01 00
	00		 je	 $LN96@LoadInt_e@4
  00021	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00024	88 55 e4	 mov	 BYTE PTR __k$[ebp], dl
  00027	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0002a	84 d2		 test	 dl, dl
  0002c	0f 84 c6 01 00
	00		 je	 $LN95@LoadInt_e@4
  00032	b3 ec		 mov	 bl, -20			; ffffffecH
  00034	32 d3		 xor	 dl, bl
  00036	88 55 e5	 mov	 BYTE PTR __k$[ebp+1], dl
  00039	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003c	84 d2		 test	 dl, dl
  0003e	0f 84 ae 01 00
	00		 je	 $LN94@LoadInt_e@4
  00044	b1 eb		 mov	 cl, -21			; ffffffebH
  00046	32 d1		 xor	 dl, cl
  00048	88 55 e6	 mov	 BYTE PTR __k$[ebp+2], dl
  0004b	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004e	84 d2		 test	 dl, dl
  00050	0f 84 96 01 00
	00		 je	 $LN93@LoadInt_e@4
  00056	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00059	88 55 e7	 mov	 BYTE PTR __k$[ebp+3], dl
  0005c	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005f	84 d2		 test	 dl, dl
  00061	0f 84 7f 01 00
	00		 je	 $LN92@LoadInt_e@4
  00067	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0006a	88 55 e8	 mov	 BYTE PTR __k$[ebp+4], dl
  0006d	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00070	84 d2		 test	 dl, dl
  00072	0f 84 69 01 00
	00		 je	 $LN91@LoadInt_e@4
  00078	32 d3		 xor	 dl, bl
  0007a	88 55 e9	 mov	 BYTE PTR __k$[ebp+5], dl
  0007d	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00080	84 d2		 test	 dl, dl
  00082	0f 84 54 01 00
	00		 je	 $LN90@LoadInt_e@4
  00088	32 d1		 xor	 dl, cl
  0008a	88 55 ea	 mov	 BYTE PTR __k$[ebp+6], dl
  0008d	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00090	84 d2		 test	 dl, dl
  00092	0f 84 3e 01 00
	00		 je	 $LN89@LoadInt_e@4
  00098	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009b	88 55 eb	 mov	 BYTE PTR __k$[ebp+7], dl
  0009e	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a1	84 d2		 test	 dl, dl
  000a3	0f 84 27 01 00
	00		 je	 $LN88@LoadInt_e@4
  000a9	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ac	88 55 ec	 mov	 BYTE PTR __k$[ebp+8], dl
  000af	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b2	84 d2		 test	 dl, dl
  000b4	0f 84 11 01 00
	00		 je	 $LN87@LoadInt_e@4
  000ba	32 d3		 xor	 dl, bl
  000bc	88 55 ed	 mov	 BYTE PTR __k$[ebp+9], dl
  000bf	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c2	84 d2		 test	 dl, dl
  000c4	0f 84 fc 00 00
	00		 je	 $LN86@LoadInt_e@4
  000ca	32 d1		 xor	 dl, cl
  000cc	88 55 ee	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	0f 84 e6 00 00
	00		 je	 $LN85@LoadInt_e@4
  000da	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000dd	88 55 ef	 mov	 BYTE PTR __k$[ebp+11], dl
  000e0	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e3	84 d2		 test	 dl, dl
  000e5	0f 84 cf 00 00
	00		 je	 $LN84@LoadInt_e@4
  000eb	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ee	88 55 f0	 mov	 BYTE PTR __k$[ebp+12], dl
  000f1	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f4	84 d2		 test	 dl, dl
  000f6	0f 84 b9 00 00
	00		 je	 $LN83@LoadInt_e@4
  000fc	32 d3		 xor	 dl, bl
  000fe	88 55 f1	 mov	 BYTE PTR __k$[ebp+13], dl
  00101	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  00104	84 d2		 test	 dl, dl
  00106	0f 84 a4 00 00
	00		 je	 $LN82@LoadInt_e@4
  0010c	32 d1		 xor	 dl, cl
  0010e	88 55 f2	 mov	 BYTE PTR __k$[ebp+14], dl
  00111	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00114	84 d2		 test	 dl, dl
  00116	0f 84 8e 00 00
	00		 je	 $LN81@LoadInt_e@4
  0011c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0011f	88 55 f3	 mov	 BYTE PTR __k$[ebp+15], dl
  00122	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00125	84 d2		 test	 dl, dl
  00127	74 7b		 je	 SHORT $LN80@LoadInt_e@4
  00129	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0012c	88 55 f4	 mov	 BYTE PTR __k$[ebp+16], dl
  0012f	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00132	84 d2		 test	 dl, dl
  00134	74 69		 je	 SHORT $LN79@LoadInt_e@4
  00136	32 d3		 xor	 dl, bl
  00138	88 55 f5	 mov	 BYTE PTR __k$[ebp+17], dl
  0013b	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  0013e	84 d2		 test	 dl, dl
  00140	74 58		 je	 SHORT $LN78@LoadInt_e@4
  00142	32 d1		 xor	 dl, cl
  00144	80 78 13 00	 cmp	 BYTE PTR [eax+19], 0
  00148	88 55 f6	 mov	 BYTE PTR __k$[ebp+18], dl
  0014b	0f 84 b1 00 00
	00		 je	 $LN1@LoadInt_e@4
  00151	8a 50 14	 mov	 dl, BYTE PTR [eax+20]
  00154	84 d2		 test	 dl, dl
  00156	74 3c		 je	 SHORT $LN76@LoadInt_e@4
  00158	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0015b	88 55 f8	 mov	 BYTE PTR __k$[ebp+20], dl
  0015e	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00161	84 d2		 test	 dl, dl
  00163	74 2a		 je	 SHORT $LN75@LoadInt_e@4
  00165	32 d3		 xor	 dl, bl
  00167	88 55 f9	 mov	 BYTE PTR __k$[ebp+21], dl
  0016a	8a 50 16	 mov	 dl, BYTE PTR [eax+22]
  0016d	84 d2		 test	 dl, dl
  0016f	74 19		 je	 SHORT $LN74@LoadInt_e@4
  00171	8a 40 17	 mov	 al, BYTE PTR [eax+23]
  00174	32 d1		 xor	 dl, cl
  00176	88 55 fa	 mov	 BYTE PTR __k$[ebp+22], dl
  00179	84 c0		 test	 al, al
  0017b	74 07		 je	 SHORT $LN73@LoadInt_e@4
  0017d	34 ea		 xor	 al, -22			; ffffffeaH
  0017f	88 45 fb	 mov	 BYTE PTR __k$[ebp+23], al
  00182	eb 7e		 jmp	 SHORT $LN1@LoadInt_e@4
$LN73@LoadInt_e@4:
  00184	c6 45 fb ea	 mov	 BYTE PTR __k$[ebp+23], -22 ; ffffffeaH
  00188	eb 78		 jmp	 SHORT $LN1@LoadInt_e@4
$LN74@LoadInt_e@4:
  0018a	88 4d fa	 mov	 BYTE PTR __k$[ebp+22], cl
  0018d	eb 73		 jmp	 SHORT $LN1@LoadInt_e@4
$LN75@LoadInt_e@4:
  0018f	88 5d f9	 mov	 BYTE PTR __k$[ebp+21], bl
  00192	eb 6e		 jmp	 SHORT $LN1@LoadInt_e@4
$LN76@LoadInt_e@4:
  00194	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+20], -19 ; ffffffedH
  00198	eb 68		 jmp	 SHORT $LN1@LoadInt_e@4
$LN78@LoadInt_e@4:
  0019a	88 4d f6	 mov	 BYTE PTR __k$[ebp+18], cl
  0019d	eb 63		 jmp	 SHORT $LN1@LoadInt_e@4
$LN79@LoadInt_e@4:
  0019f	88 5d f5	 mov	 BYTE PTR __k$[ebp+17], bl
  001a2	eb 5e		 jmp	 SHORT $LN1@LoadInt_e@4
$LN80@LoadInt_e@4:
  001a4	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  001a8	eb 58		 jmp	 SHORT $LN1@LoadInt_e@4
$LN81@LoadInt_e@4:
  001aa	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  001ae	eb 52		 jmp	 SHORT $LN1@LoadInt_e@4
$LN82@LoadInt_e@4:
  001b0	88 4d f2	 mov	 BYTE PTR __k$[ebp+14], cl
  001b3	eb 4d		 jmp	 SHORT $LN1@LoadInt_e@4
$LN83@LoadInt_e@4:
  001b5	88 5d f1	 mov	 BYTE PTR __k$[ebp+13], bl
  001b8	eb 48		 jmp	 SHORT $LN1@LoadInt_e@4
$LN84@LoadInt_e@4:
  001ba	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  001be	eb 42		 jmp	 SHORT $LN1@LoadInt_e@4
$LN85@LoadInt_e@4:
  001c0	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  001c4	eb 3c		 jmp	 SHORT $LN1@LoadInt_e@4
$LN86@LoadInt_e@4:
  001c6	88 4d ee	 mov	 BYTE PTR __k$[ebp+10], cl
  001c9	eb 37		 jmp	 SHORT $LN1@LoadInt_e@4
$LN87@LoadInt_e@4:
  001cb	88 5d ed	 mov	 BYTE PTR __k$[ebp+9], bl
  001ce	eb 32		 jmp	 SHORT $LN1@LoadInt_e@4
$LN88@LoadInt_e@4:
  001d0	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  001d4	eb 2c		 jmp	 SHORT $LN1@LoadInt_e@4
$LN89@LoadInt_e@4:
  001d6	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  001da	eb 26		 jmp	 SHORT $LN1@LoadInt_e@4
$LN90@LoadInt_e@4:
  001dc	88 4d ea	 mov	 BYTE PTR __k$[ebp+6], cl
  001df	eb 21		 jmp	 SHORT $LN1@LoadInt_e@4
$LN91@LoadInt_e@4:
  001e1	88 5d e9	 mov	 BYTE PTR __k$[ebp+5], bl
  001e4	eb 1c		 jmp	 SHORT $LN1@LoadInt_e@4
$LN92@LoadInt_e@4:
  001e6	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  001ea	eb 16		 jmp	 SHORT $LN1@LoadInt_e@4
$LN93@LoadInt_e@4:
  001ec	c6 45 e7 ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  001f0	eb 10		 jmp	 SHORT $LN1@LoadInt_e@4
$LN94@LoadInt_e@4:
  001f2	c6 45 e6 eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  001f6	eb 0a		 jmp	 SHORT $LN1@LoadInt_e@4
$LN95@LoadInt_e@4:
  001f8	c6 45 e5 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  001fc	eb 04		 jmp	 SHORT $LN1@LoadInt_e@4
$LN96@LoadInt_e@4:
  001fe	c6 45 e4 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e@4:
  00202	6a 04		 push	 4
  00204	8d 45 e4	 lea	 eax, DWORD PTR __k$[ebp]
  00207	c6 45 f7 00	 mov	 BYTE PTR __k$[ebp+19], 0
  0020b	5a		 pop	 edx
$LL104@LoadInt_e@4:
  0020c	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00212	83 c0 04	 add	 eax, 4
  00215	4a		 dec	 edx
  00216	75 f4		 jne	 SHORT $LL104@LoadInt_e@4
  00218	6a 10		 push	 16			; 00000010H
  0021a	58		 pop	 eax
$LL101@LoadInt_e@4:
  0021b	8b c8		 mov	 ecx, eax
  0021d	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00223	79 05		 jns	 SHORT $LN111@LoadInt_e@4
  00225	49		 dec	 ecx
  00226	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00229	41		 inc	 ecx
$LN111@LoadInt_e@4:
  0022a	b2 ed		 mov	 dl, -19			; ffffffedH
  0022c	2a d1		 sub	 dl, cl
  0022e	30 54 05 e4	 xor	 BYTE PTR __k$[ebp+eax], dl
  00232	40		 inc	 eax
  00233	83 f8 13	 cmp	 eax, 19			; 00000013H
  00236	7c e3		 jl	 SHORT $LL101@LoadInt_e@4

; 120  : 		return LoadInt(_k, i);

  00238	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  0023b	8d 45 e4	 lea	 eax, DWORD PTR __k$[ebp]
  0023e	50		 push	 eax
  0023f	8b ce		 mov	 ecx, esi
  00241	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  00247	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0024a	5e		 pop	 esi
  0024b	33 cd		 xor	 ecx, ebp
  0024d	5b		 pop	 ebx
  0024e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00253	c9		 leave
  00254	c2 08 00	 ret	 8
??$LoadInt_e@$0BE@@ioINILoader@@QAEHAAY0BE@$$CBDH@Z ENDP ; ioINILoader::LoadInt_e<20>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$0BB@@ioINILoader@@QAEHAAY0BB@$$CBDH@Z ; ioINILoader::LoadInt_e<17>
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$0BB@@ioINILoader@@QAEHAAY0BB@$$CBDH@Z
_TEXT	SEGMENT
__k$ = -28						; size = 17
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$0BB@@ioINILoader@@QAEHAAY0BB@$$CBDH@Z PROC ; ioINILoader::LoadInt_e<17>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 a7 01 00
	00		 je	 $LN96@LoadInt_e@5
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e4	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 90 01 00
	00		 je	 $LN95@LoadInt_e@5
  00031	b1 ec		 mov	 cl, -20			; ffffffecH
  00033	32 d1		 xor	 dl, cl
  00035	88 55 e5	 mov	 BYTE PTR __k$[ebp+1], dl
  00038	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003b	84 d2		 test	 dl, dl
  0003d	0f 84 78 01 00
	00		 je	 $LN94@LoadInt_e@5
  00043	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00046	88 55 e6	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 61 01 00
	00		 je	 $LN93@LoadInt_e@5
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 e7	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 4a 01 00
	00		 je	 $LN92@LoadInt_e@5
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 e8	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 34 01 00
	00		 je	 $LN91@LoadInt_e@5
  00076	32 d1		 xor	 dl, cl
  00078	88 55 e9	 mov	 BYTE PTR __k$[ebp+5], dl
  0007b	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007e	84 d2		 test	 dl, dl
  00080	0f 84 1e 01 00
	00		 je	 $LN90@LoadInt_e@5
  00086	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00089	88 55 ea	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 07 01 00
	00		 je	 $LN89@LoadInt_e@5
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 eb	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 f0 00 00
	00		 je	 $LN88@LoadInt_e@5
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 ec	 mov	 BYTE PTR __k$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 da 00 00
	00		 je	 $LN87@LoadInt_e@5
  000b9	32 d1		 xor	 dl, cl
  000bb	88 55 ed	 mov	 BYTE PTR __k$[ebp+9], dl
  000be	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c1	84 d2		 test	 dl, dl
  000c3	0f 84 c4 00 00
	00		 je	 $LN86@LoadInt_e@5
  000c9	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000cc	88 55 ee	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	0f 84 ad 00 00
	00		 je	 $LN85@LoadInt_e@5
  000da	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000dd	88 55 ef	 mov	 BYTE PTR __k$[ebp+11], dl
  000e0	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e3	84 d2		 test	 dl, dl
  000e5	0f 84 96 00 00
	00		 je	 $LN84@LoadInt_e@5
  000eb	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ee	88 55 f0	 mov	 BYTE PTR __k$[ebp+12], dl
  000f1	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f4	84 d2		 test	 dl, dl
  000f6	0f 84 80 00 00
	00		 je	 $LN83@LoadInt_e@5
  000fc	32 d1		 xor	 dl, cl
  000fe	88 55 f1	 mov	 BYTE PTR __k$[ebp+13], dl
  00101	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  00104	84 d2		 test	 dl, dl
  00106	74 6e		 je	 SHORT $LN82@LoadInt_e@5
  00108	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0010b	88 55 f2	 mov	 BYTE PTR __k$[ebp+14], dl
  0010e	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00111	84 d2		 test	 dl, dl
  00113	74 5b		 je	 SHORT $LN81@LoadInt_e@5
  00115	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00118	80 78 10 00	 cmp	 BYTE PTR [eax+16], 0
  0011c	88 55 f3	 mov	 BYTE PTR __k$[ebp+15], dl
  0011f	0f 84 a6 00 00
	00		 je	 $LN1@LoadInt_e@5
  00125	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00128	84 d2		 test	 dl, dl
  0012a	74 3f		 je	 SHORT $LN79@LoadInt_e@5
  0012c	32 d1		 xor	 dl, cl
  0012e	88 55 f5	 mov	 BYTE PTR __k$[ebp+17], dl
  00131	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  00134	84 d2		 test	 dl, dl
  00136	74 2d		 je	 SHORT $LN78@LoadInt_e@5
  00138	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0013b	88 55 f6	 mov	 BYTE PTR __k$[ebp+18], dl
  0013e	8a 50 13	 mov	 dl, BYTE PTR [eax+19]
  00141	84 d2		 test	 dl, dl
  00143	74 1a		 je	 SHORT $LN77@LoadInt_e@5
  00145	8a 40 14	 mov	 al, BYTE PTR [eax+20]
  00148	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0014b	88 55 f7	 mov	 BYTE PTR __k$[ebp+19], dl
  0014e	84 c0		 test	 al, al
  00150	74 07		 je	 SHORT $LN76@LoadInt_e@5
  00152	34 ed		 xor	 al, -19			; ffffffedH
  00154	88 45 f8	 mov	 BYTE PTR __k$[ebp+20], al
  00157	eb 72		 jmp	 SHORT $LN1@LoadInt_e@5
$LN76@LoadInt_e@5:
  00159	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+20], -19 ; ffffffedH
  0015d	eb 6c		 jmp	 SHORT $LN1@LoadInt_e@5
$LN77@LoadInt_e@5:
  0015f	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+19], -22 ; ffffffeaH
  00163	eb 66		 jmp	 SHORT $LN1@LoadInt_e@5
$LN78@LoadInt_e@5:
  00165	c6 45 f6 eb	 mov	 BYTE PTR __k$[ebp+18], -21 ; ffffffebH
  00169	eb 60		 jmp	 SHORT $LN1@LoadInt_e@5
$LN79@LoadInt_e@5:
  0016b	88 4d f5	 mov	 BYTE PTR __k$[ebp+17], cl
  0016e	eb 5b		 jmp	 SHORT $LN1@LoadInt_e@5
$LN81@LoadInt_e@5:
  00170	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00174	eb 55		 jmp	 SHORT $LN1@LoadInt_e@5
$LN82@LoadInt_e@5:
  00176	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+14], -21 ; ffffffebH
  0017a	eb 4f		 jmp	 SHORT $LN1@LoadInt_e@5
$LN83@LoadInt_e@5:
  0017c	88 4d f1	 mov	 BYTE PTR __k$[ebp+13], cl
  0017f	eb 4a		 jmp	 SHORT $LN1@LoadInt_e@5
$LN84@LoadInt_e@5:
  00181	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00185	eb 44		 jmp	 SHORT $LN1@LoadInt_e@5
$LN85@LoadInt_e@5:
  00187	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  0018b	eb 3e		 jmp	 SHORT $LN1@LoadInt_e@5
$LN86@LoadInt_e@5:
  0018d	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  00191	eb 38		 jmp	 SHORT $LN1@LoadInt_e@5
$LN87@LoadInt_e@5:
  00193	88 4d ed	 mov	 BYTE PTR __k$[ebp+9], cl
  00196	eb 33		 jmp	 SHORT $LN1@LoadInt_e@5
$LN88@LoadInt_e@5:
  00198	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  0019c	eb 2d		 jmp	 SHORT $LN1@LoadInt_e@5
$LN89@LoadInt_e@5:
  0019e	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  001a2	eb 27		 jmp	 SHORT $LN1@LoadInt_e@5
$LN90@LoadInt_e@5:
  001a4	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  001a8	eb 21		 jmp	 SHORT $LN1@LoadInt_e@5
$LN91@LoadInt_e@5:
  001aa	88 4d e9	 mov	 BYTE PTR __k$[ebp+5], cl
  001ad	eb 1c		 jmp	 SHORT $LN1@LoadInt_e@5
$LN92@LoadInt_e@5:
  001af	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  001b3	eb 16		 jmp	 SHORT $LN1@LoadInt_e@5
$LN93@LoadInt_e@5:
  001b5	c6 45 e7 ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  001b9	eb 10		 jmp	 SHORT $LN1@LoadInt_e@5
$LN94@LoadInt_e@5:
  001bb	c6 45 e6 eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  001bf	eb 0a		 jmp	 SHORT $LN1@LoadInt_e@5
$LN95@LoadInt_e@5:
  001c1	c6 45 e5 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  001c5	eb 04		 jmp	 SHORT $LN1@LoadInt_e@5
$LN96@LoadInt_e@5:
  001c7	c6 45 e4 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e@5:
  001cb	6a 04		 push	 4
  001cd	8d 45 e4	 lea	 eax, DWORD PTR __k$[ebp]
  001d0	c6 45 f4 00	 mov	 BYTE PTR __k$[ebp+16], 0
  001d4	5a		 pop	 edx
$LL104@LoadInt_e@5:
  001d5	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001db	83 c0 04	 add	 eax, 4
  001de	4a		 dec	 edx
  001df	75 f4		 jne	 SHORT $LL104@LoadInt_e@5

; 120  : 		return LoadInt(_k, i);

  001e1	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  001e4	8d 45 e4	 lea	 eax, DWORD PTR __k$[ebp]
  001e7	50		 push	 eax
  001e8	8b ce		 mov	 ecx, esi
  001ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  001f0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001f3	33 cd		 xor	 ecx, ebp
  001f5	5e		 pop	 esi
  001f6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001fb	c9		 leave
  001fc	c2 08 00	 ret	 8
??$LoadInt_e@$0BB@@ioINILoader@@QAEHAAY0BB@$$CBDH@Z ENDP ; ioINILoader::LoadInt_e<17>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$SetTitle_e@$0M@@ioINILoader@@QAEXAAY0M@$$CBD@Z ; ioINILoader::SetTitle_e<12>
; Function compile flags: /Ogsp
;	COMDAT ??$SetTitle_e@$0M@@ioINILoader@@QAEXAAY0M@$$CBD@Z
_TEXT	SEGMENT
__t$ = -20						; size = 12
__$ArrayPad$ = -4					; size = 4
_t$ = 8							; size = 4
??$SetTitle_e@$0M@@ioINILoader@@QAEXAAY0M@$$CBD@Z PROC	; ioINILoader::SetTitle_e<12>, COMDAT
; _this$ = ecx

; 188  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]

; 189  : 		_ENCSTR(t, _t);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 32 01 00
	00		 je	 $LN96@SetTitle_e@2
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 ec	 mov	 BYTE PTR __t$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 1b 01 00
	00		 je	 $LN95@SetTitle_e@2
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 ed	 mov	 BYTE PTR __t$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 04 01 00
	00		 je	 $LN94@SetTitle_e@2
  00042	b1 eb		 mov	 cl, -21			; ffffffebH
  00044	32 d1		 xor	 dl, cl
  00046	88 55 ee	 mov	 BYTE PTR __t$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 ec 00 00
	00		 je	 $LN93@SetTitle_e@2
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 ef	 mov	 BYTE PTR __t$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 d5 00 00
	00		 je	 $LN92@SetTitle_e@2
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 f0	 mov	 BYTE PTR __t$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 be 00 00
	00		 je	 $LN91@SetTitle_e@2
  00076	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00079	88 55 f1	 mov	 BYTE PTR __t$[ebp+5], dl
  0007c	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007f	84 d2		 test	 dl, dl
  00081	0f 84 a8 00 00
	00		 je	 $LN90@SetTitle_e@2
  00087	32 d1		 xor	 dl, cl
  00089	88 55 f2	 mov	 BYTE PTR __t$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 92 00 00
	00		 je	 $LN89@SetTitle_e@2
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 f3	 mov	 BYTE PTR __t$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	74 7f		 je	 SHORT $LN88@SetTitle_e@2
  000a4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a7	88 55 f4	 mov	 BYTE PTR __t$[ebp+8], dl
  000aa	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000ad	84 d2		 test	 dl, dl
  000af	74 6c		 je	 SHORT $LN87@SetTitle_e@2
  000b1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b4	88 55 f5	 mov	 BYTE PTR __t$[ebp+9], dl
  000b7	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000ba	84 d2		 test	 dl, dl
  000bc	74 5a		 je	 SHORT $LN86@SetTitle_e@2
  000be	32 d1		 xor	 dl, cl
  000c0	80 78 0b 00	 cmp	 BYTE PTR [eax+11], 0
  000c4	88 55 f6	 mov	 BYTE PTR __t$[ebp+10], dl
  000c7	0f 84 89 00 00
	00		 je	 $LN1@SetTitle_e@2
  000cd	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000d0	84 d2		 test	 dl, dl
  000d2	74 3e		 je	 SHORT $LN84@SetTitle_e@2
  000d4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000d7	88 55 f8	 mov	 BYTE PTR __t$[ebp+12], dl
  000da	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000dd	84 d2		 test	 dl, dl
  000df	74 2b		 je	 SHORT $LN83@SetTitle_e@2
  000e1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000e4	88 55 f9	 mov	 BYTE PTR __t$[ebp+13], dl
  000e7	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000ea	84 d2		 test	 dl, dl
  000ec	74 19		 je	 SHORT $LN82@SetTitle_e@2
  000ee	8a 40 0f	 mov	 al, BYTE PTR [eax+15]
  000f1	32 d1		 xor	 dl, cl
  000f3	88 55 fa	 mov	 BYTE PTR __t$[ebp+14], dl
  000f6	84 c0		 test	 al, al
  000f8	74 07		 je	 SHORT $LN81@SetTitle_e@2
  000fa	34 ea		 xor	 al, -22			; ffffffeaH
  000fc	88 45 fb	 mov	 BYTE PTR __t$[ebp+15], al
  000ff	eb 55		 jmp	 SHORT $LN1@SetTitle_e@2
$LN81@SetTitle_e@2:
  00101	c6 45 fb ea	 mov	 BYTE PTR __t$[ebp+15], -22 ; ffffffeaH
  00105	eb 4f		 jmp	 SHORT $LN1@SetTitle_e@2
$LN82@SetTitle_e@2:
  00107	88 4d fa	 mov	 BYTE PTR __t$[ebp+14], cl
  0010a	eb 4a		 jmp	 SHORT $LN1@SetTitle_e@2
$LN83@SetTitle_e@2:
  0010c	c6 45 f9 ec	 mov	 BYTE PTR __t$[ebp+13], -20 ; ffffffecH
  00110	eb 44		 jmp	 SHORT $LN1@SetTitle_e@2
$LN84@SetTitle_e@2:
  00112	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+12], -19 ; ffffffedH
  00116	eb 3e		 jmp	 SHORT $LN1@SetTitle_e@2
$LN86@SetTitle_e@2:
  00118	88 4d f6	 mov	 BYTE PTR __t$[ebp+10], cl
  0011b	eb 39		 jmp	 SHORT $LN1@SetTitle_e@2
$LN87@SetTitle_e@2:
  0011d	c6 45 f5 ec	 mov	 BYTE PTR __t$[ebp+9], -20 ; ffffffecH
  00121	eb 33		 jmp	 SHORT $LN1@SetTitle_e@2
$LN88@SetTitle_e@2:
  00123	c6 45 f4 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  00127	eb 2d		 jmp	 SHORT $LN1@SetTitle_e@2
$LN89@SetTitle_e@2:
  00129	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  0012d	eb 27		 jmp	 SHORT $LN1@SetTitle_e@2
$LN90@SetTitle_e@2:
  0012f	88 4d f2	 mov	 BYTE PTR __t$[ebp+6], cl
  00132	eb 22		 jmp	 SHORT $LN1@SetTitle_e@2
$LN91@SetTitle_e@2:
  00134	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  00138	eb 1c		 jmp	 SHORT $LN1@SetTitle_e@2
$LN92@SetTitle_e@2:
  0013a	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  0013e	eb 16		 jmp	 SHORT $LN1@SetTitle_e@2
$LN93@SetTitle_e@2:
  00140	c6 45 ef ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  00144	eb 10		 jmp	 SHORT $LN1@SetTitle_e@2
$LN94@SetTitle_e@2:
  00146	c6 45 ee eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  0014a	eb 0a		 jmp	 SHORT $LN1@SetTitle_e@2
$LN95@SetTitle_e@2:
  0014c	c6 45 ed ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  00150	eb 04		 jmp	 SHORT $LN1@SetTitle_e@2
$LN96@SetTitle_e@2:
  00152	c6 45 ec ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@SetTitle_e@2:
  00156	6a 02		 push	 2
  00158	8d 45 ec	 lea	 eax, DWORD PTR __t$[ebp]
  0015b	c6 45 f7 00	 mov	 BYTE PTR __t$[ebp+11], 0
  0015f	5a		 pop	 edx
$LL104@SetTitle_e@2:
  00160	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00166	83 c0 04	 add	 eax, 4
  00169	4a		 dec	 edx
  0016a	75 f4		 jne	 SHORT $LL104@SetTitle_e@2
  0016c	6a 08		 push	 8
  0016e	58		 pop	 eax
$LL101@SetTitle_e@2:
  0016f	8b c8		 mov	 ecx, eax
  00171	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00177	79 05		 jns	 SHORT $LN111@SetTitle_e@2
  00179	49		 dec	 ecx
  0017a	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0017d	41		 inc	 ecx
$LN111@SetTitle_e@2:
  0017e	b2 ed		 mov	 dl, -19			; ffffffedH
  00180	2a d1		 sub	 dl, cl
  00182	30 54 05 ec	 xor	 BYTE PTR __t$[ebp+eax], dl
  00186	40		 inc	 eax
  00187	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  0018a	7c e3		 jl	 SHORT $LL101@SetTitle_e@2

; 190  : 		SetTitle(_t);

  0018c	8d 45 ec	 lea	 eax, DWORD PTR __t$[ebp]
  0018f	50		 push	 eax
  00190	8b ce		 mov	 ecx, esi
  00192	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 191  : 	}

  00198	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0019b	33 cd		 xor	 ecx, ebp
  0019d	5e		 pop	 esi
  0019e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a3	c9		 leave
  001a4	c2 04 00	 ret	 4
??$SetTitle_e@$0M@@ioINILoader@@QAEXAAY0M@$$CBD@Z ENDP	; ioINILoader::SetTitle_e<12>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$0M@@ioINILoader@@QAEHAAY0M@$$CBDH@Z ; ioINILoader::LoadInt_e<12>
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$0M@@ioINILoader@@QAEHAAY0M@$$CBDH@Z
_TEXT	SEGMENT
__k$ = -20						; size = 12
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$0M@@ioINILoader@@QAEHAAY0M@$$CBDH@Z PROC	; ioINILoader::LoadInt_e<12>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 32 01 00
	00		 je	 $LN96@LoadInt_e@6
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 ec	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 1b 01 00
	00		 je	 $LN95@LoadInt_e@6
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 ed	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 04 01 00
	00		 je	 $LN94@LoadInt_e@6
  00042	b1 eb		 mov	 cl, -21			; ffffffebH
  00044	32 d1		 xor	 dl, cl
  00046	88 55 ee	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 ec 00 00
	00		 je	 $LN93@LoadInt_e@6
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 ef	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 d5 00 00
	00		 je	 $LN92@LoadInt_e@6
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 f0	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 be 00 00
	00		 je	 $LN91@LoadInt_e@6
  00076	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00079	88 55 f1	 mov	 BYTE PTR __k$[ebp+5], dl
  0007c	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007f	84 d2		 test	 dl, dl
  00081	0f 84 a8 00 00
	00		 je	 $LN90@LoadInt_e@6
  00087	32 d1		 xor	 dl, cl
  00089	88 55 f2	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 92 00 00
	00		 je	 $LN89@LoadInt_e@6
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 f3	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	74 7f		 je	 SHORT $LN88@LoadInt_e@6
  000a4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a7	88 55 f4	 mov	 BYTE PTR __k$[ebp+8], dl
  000aa	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000ad	84 d2		 test	 dl, dl
  000af	74 6c		 je	 SHORT $LN87@LoadInt_e@6
  000b1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b4	88 55 f5	 mov	 BYTE PTR __k$[ebp+9], dl
  000b7	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000ba	84 d2		 test	 dl, dl
  000bc	74 5a		 je	 SHORT $LN86@LoadInt_e@6
  000be	32 d1		 xor	 dl, cl
  000c0	80 78 0b 00	 cmp	 BYTE PTR [eax+11], 0
  000c4	88 55 f6	 mov	 BYTE PTR __k$[ebp+10], dl
  000c7	0f 84 89 00 00
	00		 je	 $LN1@LoadInt_e@6
  000cd	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000d0	84 d2		 test	 dl, dl
  000d2	74 3e		 je	 SHORT $LN84@LoadInt_e@6
  000d4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000d7	88 55 f8	 mov	 BYTE PTR __k$[ebp+12], dl
  000da	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000dd	84 d2		 test	 dl, dl
  000df	74 2b		 je	 SHORT $LN83@LoadInt_e@6
  000e1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000e4	88 55 f9	 mov	 BYTE PTR __k$[ebp+13], dl
  000e7	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000ea	84 d2		 test	 dl, dl
  000ec	74 19		 je	 SHORT $LN82@LoadInt_e@6
  000ee	8a 40 0f	 mov	 al, BYTE PTR [eax+15]
  000f1	32 d1		 xor	 dl, cl
  000f3	88 55 fa	 mov	 BYTE PTR __k$[ebp+14], dl
  000f6	84 c0		 test	 al, al
  000f8	74 07		 je	 SHORT $LN81@LoadInt_e@6
  000fa	34 ea		 xor	 al, -22			; ffffffeaH
  000fc	88 45 fb	 mov	 BYTE PTR __k$[ebp+15], al
  000ff	eb 55		 jmp	 SHORT $LN1@LoadInt_e@6
$LN81@LoadInt_e@6:
  00101	c6 45 fb ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00105	eb 4f		 jmp	 SHORT $LN1@LoadInt_e@6
$LN82@LoadInt_e@6:
  00107	88 4d fa	 mov	 BYTE PTR __k$[ebp+14], cl
  0010a	eb 4a		 jmp	 SHORT $LN1@LoadInt_e@6
$LN83@LoadInt_e@6:
  0010c	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  00110	eb 44		 jmp	 SHORT $LN1@LoadInt_e@6
$LN84@LoadInt_e@6:
  00112	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00116	eb 3e		 jmp	 SHORT $LN1@LoadInt_e@6
$LN86@LoadInt_e@6:
  00118	88 4d f6	 mov	 BYTE PTR __k$[ebp+10], cl
  0011b	eb 39		 jmp	 SHORT $LN1@LoadInt_e@6
$LN87@LoadInt_e@6:
  0011d	c6 45 f5 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  00121	eb 33		 jmp	 SHORT $LN1@LoadInt_e@6
$LN88@LoadInt_e@6:
  00123	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00127	eb 2d		 jmp	 SHORT $LN1@LoadInt_e@6
$LN89@LoadInt_e@6:
  00129	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  0012d	eb 27		 jmp	 SHORT $LN1@LoadInt_e@6
$LN90@LoadInt_e@6:
  0012f	88 4d f2	 mov	 BYTE PTR __k$[ebp+6], cl
  00132	eb 22		 jmp	 SHORT $LN1@LoadInt_e@6
$LN91@LoadInt_e@6:
  00134	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  00138	eb 1c		 jmp	 SHORT $LN1@LoadInt_e@6
$LN92@LoadInt_e@6:
  0013a	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  0013e	eb 16		 jmp	 SHORT $LN1@LoadInt_e@6
$LN93@LoadInt_e@6:
  00140	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00144	eb 10		 jmp	 SHORT $LN1@LoadInt_e@6
$LN94@LoadInt_e@6:
  00146	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0014a	eb 0a		 jmp	 SHORT $LN1@LoadInt_e@6
$LN95@LoadInt_e@6:
  0014c	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00150	eb 04		 jmp	 SHORT $LN1@LoadInt_e@6
$LN96@LoadInt_e@6:
  00152	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e@6:
  00156	6a 02		 push	 2
  00158	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  0015b	c6 45 f7 00	 mov	 BYTE PTR __k$[ebp+11], 0
  0015f	5a		 pop	 edx
$LL104@LoadInt_e@6:
  00160	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00166	83 c0 04	 add	 eax, 4
  00169	4a		 dec	 edx
  0016a	75 f4		 jne	 SHORT $LL104@LoadInt_e@6
  0016c	6a 08		 push	 8
  0016e	58		 pop	 eax
$LL101@LoadInt_e@6:
  0016f	8b c8		 mov	 ecx, eax
  00171	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00177	79 05		 jns	 SHORT $LN111@LoadInt_e@6
  00179	49		 dec	 ecx
  0017a	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0017d	41		 inc	 ecx
$LN111@LoadInt_e@6:
  0017e	b2 ed		 mov	 dl, -19			; ffffffedH
  00180	2a d1		 sub	 dl, cl
  00182	30 54 05 ec	 xor	 BYTE PTR __k$[ebp+eax], dl
  00186	40		 inc	 eax
  00187	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  0018a	7c e3		 jl	 SHORT $LL101@LoadInt_e@6

; 120  : 		return LoadInt(_k, i);

  0018c	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  0018f	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  00192	50		 push	 eax
  00193	8b ce		 mov	 ecx, esi
  00195	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  0019b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0019e	33 cd		 xor	 ecx, ebp
  001a0	5e		 pop	 esi
  001a1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a6	c9		 leave
  001a7	c2 08 00	 ret	 8
??$LoadInt_e@$0M@@ioINILoader@@QAEHAAY0M@$$CBDH@Z ENDP	; ioINILoader::LoadInt_e<12>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$SetTitle_e@$06@ioINILoader@@QAEXAAY06$$CBD@Z	; ioINILoader::SetTitle_e<7>
; Function compile flags: /Ogsp
;	COMDAT ??$SetTitle_e@$06@ioINILoader@@QAEXAAY06$$CBD@Z
_TEXT	SEGMENT
__t$ = -16						; size = 7
__$ArrayPad$ = -4					; size = 4
_t$ = 8							; size = 4
??$SetTitle_e@$06@ioINILoader@@QAEXAAY06$$CBD@Z PROC	; ioINILoader::SetTitle_e<7>, COMDAT
; _this$ = ecx

; 188  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]

; 189  : 		_ENCSTR(t, _t);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 c0 00 00
	00		 je	 $LN96@SetTitle_e@3
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 f0	 mov	 BYTE PTR __t$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 a9 00 00
	00		 je	 $LN95@SetTitle_e@3
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 f1	 mov	 BYTE PTR __t$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 92 00 00
	00		 je	 $LN94@SetTitle_e@3
  00042	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00045	88 55 f2	 mov	 BYTE PTR __t$[ebp+2], dl
  00048	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004b	84 d2		 test	 dl, dl
  0004d	74 7f		 je	 SHORT $LN93@SetTitle_e@3
  0004f	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00052	88 55 f3	 mov	 BYTE PTR __t$[ebp+3], dl
  00055	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00058	84 d2		 test	 dl, dl
  0005a	74 6c		 je	 SHORT $LN92@SetTitle_e@3
  0005c	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0005f	88 55 f4	 mov	 BYTE PTR __t$[ebp+4], dl
  00062	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00065	84 d2		 test	 dl, dl
  00067	74 59		 je	 SHORT $LN91@SetTitle_e@3
  00069	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0006c	80 78 06 00	 cmp	 BYTE PTR [eax+6], 0
  00070	88 55 f5	 mov	 BYTE PTR __t$[ebp+5], dl
  00073	74 6f		 je	 SHORT $LN1@SetTitle_e@3
  00075	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00078	84 d2		 test	 dl, dl
  0007a	74 40		 je	 SHORT $LN89@SetTitle_e@3
  0007c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0007f	88 55 f7	 mov	 BYTE PTR __t$[ebp+7], dl
  00082	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  00085	84 d2		 test	 dl, dl
  00087	74 2d		 je	 SHORT $LN88@SetTitle_e@3
  00089	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0008c	88 55 f8	 mov	 BYTE PTR __t$[ebp+8], dl
  0008f	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  00092	84 d2		 test	 dl, dl
  00094	74 1a		 je	 SHORT $LN87@SetTitle_e@3
  00096	8a 40 0a	 mov	 al, BYTE PTR [eax+10]
  00099	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0009c	88 55 f9	 mov	 BYTE PTR __t$[ebp+9], dl
  0009f	84 c0		 test	 al, al
  000a1	74 07		 je	 SHORT $LN86@SetTitle_e@3
  000a3	34 eb		 xor	 al, -21			; ffffffebH
  000a5	88 45 fa	 mov	 BYTE PTR __t$[ebp+10], al
  000a8	eb 3a		 jmp	 SHORT $LN1@SetTitle_e@3
$LN86@SetTitle_e@3:
  000aa	c6 45 fa eb	 mov	 BYTE PTR __t$[ebp+10], -21 ; ffffffebH
  000ae	eb 34		 jmp	 SHORT $LN1@SetTitle_e@3
$LN87@SetTitle_e@3:
  000b0	c6 45 f9 ec	 mov	 BYTE PTR __t$[ebp+9], -20 ; ffffffecH
  000b4	eb 2e		 jmp	 SHORT $LN1@SetTitle_e@3
$LN88@SetTitle_e@3:
  000b6	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  000ba	eb 28		 jmp	 SHORT $LN1@SetTitle_e@3
$LN89@SetTitle_e@3:
  000bc	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  000c0	eb 22		 jmp	 SHORT $LN1@SetTitle_e@3
$LN91@SetTitle_e@3:
  000c2	c6 45 f5 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  000c6	eb 1c		 jmp	 SHORT $LN1@SetTitle_e@3
$LN92@SetTitle_e@3:
  000c8	c6 45 f4 ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  000cc	eb 16		 jmp	 SHORT $LN1@SetTitle_e@3
$LN93@SetTitle_e@3:
  000ce	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  000d2	eb 10		 jmp	 SHORT $LN1@SetTitle_e@3
$LN94@SetTitle_e@3:
  000d4	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  000d8	eb 0a		 jmp	 SHORT $LN1@SetTitle_e@3
$LN95@SetTitle_e@3:
  000da	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  000de	eb 04		 jmp	 SHORT $LN1@SetTitle_e@3
$LN96@SetTitle_e@3:
  000e0	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@SetTitle_e@3:
  000e4	81 75 f0 ed ec
	eb ea		 xor	 DWORD PTR __t$[ebp], -353637139 ; eaebecedH
  000eb	6a 04		 push	 4
  000ed	c6 45 f6 00	 mov	 BYTE PTR __t$[ebp+6], 0
  000f1	58		 pop	 eax
$LL101@SetTitle_e@3:
  000f2	8b c8		 mov	 ecx, eax
  000f4	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  000fa	79 05		 jns	 SHORT $LN111@SetTitle_e@3
  000fc	49		 dec	 ecx
  000fd	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00100	41		 inc	 ecx
$LN111@SetTitle_e@3:
  00101	b2 ed		 mov	 dl, -19			; ffffffedH
  00103	2a d1		 sub	 dl, cl
  00105	30 54 05 f0	 xor	 BYTE PTR __t$[ebp+eax], dl
  00109	40		 inc	 eax
  0010a	83 f8 06	 cmp	 eax, 6
  0010d	7c e3		 jl	 SHORT $LL101@SetTitle_e@3

; 190  : 		SetTitle(_t);

  0010f	8d 45 f0	 lea	 eax, DWORD PTR __t$[ebp]
  00112	50		 push	 eax
  00113	8b ce		 mov	 ecx, esi
  00115	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 191  : 	}

  0011b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0011e	33 cd		 xor	 ecx, ebp
  00120	5e		 pop	 esi
  00121	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00126	c9		 leave
  00127	c2 04 00	 ret	 4
??$SetTitle_e@$06@ioINILoader@@QAEXAAY06$$CBD@Z ENDP	; ioINILoader::SetTitle_e<7>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$SetTitle_e@$0BC@@ioINILoader@@QAEXAAY0BC@$$CBD@Z ; ioINILoader::SetTitle_e<18>
; Function compile flags: /Ogsp
;	COMDAT ??$SetTitle_e@$0BC@@ioINILoader@@QAEXAAY0BC@$$CBD@Z
_TEXT	SEGMENT
__t$ = -28						; size = 18
__$ArrayPad$ = -4					; size = 4
_t$ = 8							; size = 4
??$SetTitle_e@$0BC@@ioINILoader@@QAEXAAY0BC@$$CBD@Z PROC ; ioINILoader::SetTitle_e<18>, COMDAT
; _this$ = ecx

; 188  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]

; 189  : 		_ENCSTR(t, _t);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 be 01 00
	00		 je	 $LN96@SetTitle_e@4
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e4	 mov	 BYTE PTR __t$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 a7 01 00
	00		 je	 $LN95@SetTitle_e@4
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 e5	 mov	 BYTE PTR __t$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 90 01 00
	00		 je	 $LN94@SetTitle_e@4
  00042	b1 eb		 mov	 cl, -21			; ffffffebH
  00044	32 d1		 xor	 dl, cl
  00046	88 55 e6	 mov	 BYTE PTR __t$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 78 01 00
	00		 je	 $LN93@SetTitle_e@4
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 e7	 mov	 BYTE PTR __t$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 61 01 00
	00		 je	 $LN92@SetTitle_e@4
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 e8	 mov	 BYTE PTR __t$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 4a 01 00
	00		 je	 $LN91@SetTitle_e@4
  00076	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00079	88 55 e9	 mov	 BYTE PTR __t$[ebp+5], dl
  0007c	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007f	84 d2		 test	 dl, dl
  00081	0f 84 34 01 00
	00		 je	 $LN90@SetTitle_e@4
  00087	32 d1		 xor	 dl, cl
  00089	88 55 ea	 mov	 BYTE PTR __t$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 1e 01 00
	00		 je	 $LN89@SetTitle_e@4
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 eb	 mov	 BYTE PTR __t$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 07 01 00
	00		 je	 $LN88@SetTitle_e@4
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 ec	 mov	 BYTE PTR __t$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 f0 00 00
	00		 je	 $LN87@SetTitle_e@4
  000b9	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000bc	88 55 ed	 mov	 BYTE PTR __t$[ebp+9], dl
  000bf	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c2	84 d2		 test	 dl, dl
  000c4	0f 84 da 00 00
	00		 je	 $LN86@SetTitle_e@4
  000ca	32 d1		 xor	 dl, cl
  000cc	88 55 ee	 mov	 BYTE PTR __t$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	0f 84 c4 00 00
	00		 je	 $LN85@SetTitle_e@4
  000da	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000dd	88 55 ef	 mov	 BYTE PTR __t$[ebp+11], dl
  000e0	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e3	84 d2		 test	 dl, dl
  000e5	0f 84 ad 00 00
	00		 je	 $LN84@SetTitle_e@4
  000eb	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ee	88 55 f0	 mov	 BYTE PTR __t$[ebp+12], dl
  000f1	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f4	84 d2		 test	 dl, dl
  000f6	0f 84 96 00 00
	00		 je	 $LN83@SetTitle_e@4
  000fc	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000ff	88 55 f1	 mov	 BYTE PTR __t$[ebp+13], dl
  00102	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  00105	84 d2		 test	 dl, dl
  00107	0f 84 80 00 00
	00		 je	 $LN82@SetTitle_e@4
  0010d	32 d1		 xor	 dl, cl
  0010f	88 55 f2	 mov	 BYTE PTR __t$[ebp+14], dl
  00112	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00115	84 d2		 test	 dl, dl
  00117	74 6e		 je	 SHORT $LN81@SetTitle_e@4
  00119	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0011c	88 55 f3	 mov	 BYTE PTR __t$[ebp+15], dl
  0011f	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00122	84 d2		 test	 dl, dl
  00124	74 5b		 je	 SHORT $LN80@SetTitle_e@4
  00126	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00129	80 78 11 00	 cmp	 BYTE PTR [eax+17], 0
  0012d	88 55 f4	 mov	 BYTE PTR __t$[ebp+16], dl
  00130	0f 84 ac 00 00
	00		 je	 $LN1@SetTitle_e@4
  00136	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  00139	84 d2		 test	 dl, dl
  0013b	74 3f		 je	 SHORT $LN78@SetTitle_e@4
  0013d	32 d1		 xor	 dl, cl
  0013f	88 55 f6	 mov	 BYTE PTR __t$[ebp+18], dl
  00142	8a 50 13	 mov	 dl, BYTE PTR [eax+19]
  00145	84 d2		 test	 dl, dl
  00147	74 2d		 je	 SHORT $LN77@SetTitle_e@4
  00149	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0014c	88 55 f7	 mov	 BYTE PTR __t$[ebp+19], dl
  0014f	8a 50 14	 mov	 dl, BYTE PTR [eax+20]
  00152	84 d2		 test	 dl, dl
  00154	74 1a		 je	 SHORT $LN76@SetTitle_e@4
  00156	8a 40 15	 mov	 al, BYTE PTR [eax+21]
  00159	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0015c	88 55 f8	 mov	 BYTE PTR __t$[ebp+20], dl
  0015f	84 c0		 test	 al, al
  00161	74 07		 je	 SHORT $LN75@SetTitle_e@4
  00163	34 ec		 xor	 al, -20			; ffffffecH
  00165	88 45 f9	 mov	 BYTE PTR __t$[ebp+21], al
  00168	eb 78		 jmp	 SHORT $LN1@SetTitle_e@4
$LN75@SetTitle_e@4:
  0016a	c6 45 f9 ec	 mov	 BYTE PTR __t$[ebp+21], -20 ; ffffffecH
  0016e	eb 72		 jmp	 SHORT $LN1@SetTitle_e@4
$LN76@SetTitle_e@4:
  00170	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+20], -19 ; ffffffedH
  00174	eb 6c		 jmp	 SHORT $LN1@SetTitle_e@4
$LN77@SetTitle_e@4:
  00176	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+19], -22 ; ffffffeaH
  0017a	eb 66		 jmp	 SHORT $LN1@SetTitle_e@4
$LN78@SetTitle_e@4:
  0017c	88 4d f6	 mov	 BYTE PTR __t$[ebp+18], cl
  0017f	eb 61		 jmp	 SHORT $LN1@SetTitle_e@4
$LN80@SetTitle_e@4:
  00181	c6 45 f4 ed	 mov	 BYTE PTR __t$[ebp+16], -19 ; ffffffedH
  00185	eb 5b		 jmp	 SHORT $LN1@SetTitle_e@4
$LN81@SetTitle_e@4:
  00187	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+15], -22 ; ffffffeaH
  0018b	eb 55		 jmp	 SHORT $LN1@SetTitle_e@4
$LN82@SetTitle_e@4:
  0018d	88 4d f2	 mov	 BYTE PTR __t$[ebp+14], cl
  00190	eb 50		 jmp	 SHORT $LN1@SetTitle_e@4
$LN83@SetTitle_e@4:
  00192	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+13], -20 ; ffffffecH
  00196	eb 4a		 jmp	 SHORT $LN1@SetTitle_e@4
$LN84@SetTitle_e@4:
  00198	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp+12], -19 ; ffffffedH
  0019c	eb 44		 jmp	 SHORT $LN1@SetTitle_e@4
$LN85@SetTitle_e@4:
  0019e	c6 45 ef ea	 mov	 BYTE PTR __t$[ebp+11], -22 ; ffffffeaH
  001a2	eb 3e		 jmp	 SHORT $LN1@SetTitle_e@4
$LN86@SetTitle_e@4:
  001a4	88 4d ee	 mov	 BYTE PTR __t$[ebp+10], cl
  001a7	eb 39		 jmp	 SHORT $LN1@SetTitle_e@4
$LN87@SetTitle_e@4:
  001a9	c6 45 ed ec	 mov	 BYTE PTR __t$[ebp+9], -20 ; ffffffecH
  001ad	eb 33		 jmp	 SHORT $LN1@SetTitle_e@4
$LN88@SetTitle_e@4:
  001af	c6 45 ec ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  001b3	eb 2d		 jmp	 SHORT $LN1@SetTitle_e@4
$LN89@SetTitle_e@4:
  001b5	c6 45 eb ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  001b9	eb 27		 jmp	 SHORT $LN1@SetTitle_e@4
$LN90@SetTitle_e@4:
  001bb	88 4d ea	 mov	 BYTE PTR __t$[ebp+6], cl
  001be	eb 22		 jmp	 SHORT $LN1@SetTitle_e@4
$LN91@SetTitle_e@4:
  001c0	c6 45 e9 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  001c4	eb 1c		 jmp	 SHORT $LN1@SetTitle_e@4
$LN92@SetTitle_e@4:
  001c6	c6 45 e8 ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  001ca	eb 16		 jmp	 SHORT $LN1@SetTitle_e@4
$LN93@SetTitle_e@4:
  001cc	c6 45 e7 ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  001d0	eb 10		 jmp	 SHORT $LN1@SetTitle_e@4
$LN94@SetTitle_e@4:
  001d2	c6 45 e6 eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  001d6	eb 0a		 jmp	 SHORT $LN1@SetTitle_e@4
$LN95@SetTitle_e@4:
  001d8	c6 45 e5 ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  001dc	eb 04		 jmp	 SHORT $LN1@SetTitle_e@4
$LN96@SetTitle_e@4:
  001de	c6 45 e4 ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@SetTitle_e@4:
  001e2	6a 04		 push	 4
  001e4	8d 45 e4	 lea	 eax, DWORD PTR __t$[ebp]
  001e7	c6 45 f5 00	 mov	 BYTE PTR __t$[ebp+17], 0
  001eb	5a		 pop	 edx
$LL104@SetTitle_e@4:
  001ec	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001f2	83 c0 04	 add	 eax, 4
  001f5	4a		 dec	 edx
  001f6	75 f4		 jne	 SHORT $LL104@SetTitle_e@4
  001f8	80 75 f4 ed	 xor	 BYTE PTR __t$[ebp+16], -19 ; ffffffedH

; 190  : 		SetTitle(_t);

  001fc	8d 45 e4	 lea	 eax, DWORD PTR __t$[ebp]
  001ff	50		 push	 eax
  00200	8b ce		 mov	 ecx, esi
  00202	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 191  : 	}

  00208	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0020b	33 cd		 xor	 ecx, ebp
  0020d	5e		 pop	 esi
  0020e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00213	c9		 leave
  00214	c2 04 00	 ret	 4
??$SetTitle_e@$0BC@@ioINILoader@@QAEXAAY0BC@$$CBD@Z ENDP ; ioINILoader::SetTitle_e<18>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@K@std@@KK@std@@YAXAAV?$allocator@K@0@PAK$$QAK@Z ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@K@std@@KK@std@@YAXAAV?$allocator@K@0@PAK$$QAK@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@K@std@@KK@std@@YAXAAV?$allocator@K@0@PAK$$QAK@Z PROC ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN7@Cons_val
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@Cons_val:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@K@std@@KK@std@@YAXAAV?$allocator@K@0@PAK$$QAK@Z ENDP ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long>
_TEXT	ENDS
PUBLIC	??$_Copy_impl@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00@Z ; std::_Copy_impl<GashaponPresent *,GashaponPresent *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Copy_impl@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00@Z
_TEXT	SEGMENT
__Cat$520316 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_impl@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00@Z PROC ; std::_Copy_impl<GashaponPresent *,GashaponPresent *>, COMDAT

; 2163 : 	{	// copy [_First, _Last) to [_Dest, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2164 : 	return (_Copy_impl(_First, _Last,
; 2165 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$520316[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_impl@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<GashaponPresent *,GashaponPresent *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2166 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Copy_impl@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00@Z ENDP ; std::_Copy_impl<GashaponPresent *,GashaponPresent *>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVioGuildData@@@std@@PAVioGuildData@@AAPAV3@@std@@YAXAAV?$allocator@PAVioGuildData@@@0@PAPAVioGuildData@@AAPAV2@@Z ; std::_Cons_val<std::allocator<ioGuildData *>,ioGuildData *,ioGuildData * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@PAVioGuildData@@@std@@PAVioGuildData@@AAPAV3@@std@@YAXAAV?$allocator@PAVioGuildData@@@0@PAPAVioGuildData@@AAPAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVioGuildData@@@std@@PAVioGuildData@@AAPAV3@@std@@YAXAAV?$allocator@PAVioGuildData@@@0@PAPAVioGuildData@@AAPAV2@@Z PROC ; std::_Cons_val<std::allocator<ioGuildData *>,ioGuildData *,ioGuildData * &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN7@Cons_val@2
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@Cons_val@2:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@PAVioGuildData@@@std@@PAVioGuildData@@AAPAV3@@std@@YAXAAV?$allocator@PAVioGuildData@@@0@PAPAVioGuildData@@AAPAV2@@Z ENDP ; std::_Cons_val<std::allocator<ioGuildData *>,ioGuildData *,ioGuildData * &>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAUGuildAttendRwardInfo@@@std@@PAUGuildAttendRwardInfo@@AAPAU3@@std@@YAXAAV?$allocator@PAUGuildAttendRwardInfo@@@0@PAPAUGuildAttendRwardInfo@@AAPAU2@@Z ; std::_Cons_val<std::allocator<GuildAttendRwardInfo *>,GuildAttendRwardInfo *,GuildAttendRwardInfo * &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@PAUGuildAttendRwardInfo@@@std@@PAUGuildAttendRwardInfo@@AAPAU3@@std@@YAXAAV?$allocator@PAUGuildAttendRwardInfo@@@0@PAPAUGuildAttendRwardInfo@@AAPAU2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAUGuildAttendRwardInfo@@@std@@PAUGuildAttendRwardInfo@@AAPAU3@@std@@YAXAAV?$allocator@PAUGuildAttendRwardInfo@@@0@PAPAUGuildAttendRwardInfo@@AAPAU2@@Z PROC ; std::_Cons_val<std::allocator<GuildAttendRwardInfo *>,GuildAttendRwardInfo *,GuildAttendRwardInfo * &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN7@Cons_val@3
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@Cons_val@3:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@PAUGuildAttendRwardInfo@@@std@@PAUGuildAttendRwardInfo@@AAPAU3@@std@@YAXAAV?$allocator@PAUGuildAttendRwardInfo@@@0@PAPAUGuildAttendRwardInfo@@AAPAU2@@Z ENDP ; std::_Cons_val<std::allocator<GuildAttendRwardInfo *>,GuildAttendRwardInfo *,GuildAttendRwardInfo * &>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAUGuildRankRwardInfo@@@std@@PAUGuildRankRwardInfo@@AAPAU3@@std@@YAXAAV?$allocator@PAUGuildRankRwardInfo@@@0@PAPAUGuildRankRwardInfo@@AAPAU2@@Z ; std::_Cons_val<std::allocator<GuildRankRwardInfo *>,GuildRankRwardInfo *,GuildRankRwardInfo * &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@PAUGuildRankRwardInfo@@@std@@PAUGuildRankRwardInfo@@AAPAU3@@std@@YAXAAV?$allocator@PAUGuildRankRwardInfo@@@0@PAPAUGuildRankRwardInfo@@AAPAU2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAUGuildRankRwardInfo@@@std@@PAUGuildRankRwardInfo@@AAPAU3@@std@@YAXAAV?$allocator@PAUGuildRankRwardInfo@@@0@PAPAUGuildRankRwardInfo@@AAPAU2@@Z PROC ; std::_Cons_val<std::allocator<GuildRankRwardInfo *>,GuildRankRwardInfo *,GuildRankRwardInfo * &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN7@Cons_val@4
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@Cons_val@4:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@PAUGuildRankRwardInfo@@@std@@PAUGuildRankRwardInfo@@AAPAU3@@std@@YAXAAV?$allocator@PAUGuildRankRwardInfo@@@0@PAPAUGuildRankRwardInfo@@AAPAU2@@Z ENDP ; std::_Cons_val<std::allocator<GuildRankRwardInfo *>,GuildRankRwardInfo *,GuildRankRwardInfo * &>
_TEXT	ENDS
PUBLIC	??$_Move@PAPAVioGuildData@@PAPAV1@@std@@YAPAPAVioGuildData@@PAPAV1@00@Z ; std::_Move<ioGuildData * *,ioGuildData * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAPAVioGuildData@@PAPAV1@@std@@YAPAPAVioGuildData@@PAPAV1@00@Z
_TEXT	SEGMENT
__Cat$520400 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAPAVioGuildData@@PAPAV1@@std@@YAPAPAVioGuildData@@PAPAV1@00@Z PROC ; std::_Move<ioGuildData * *,ioGuildData * *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$520400[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAPAVioGuildData@@PAPAV1@@std@@YAPAPAVioGuildData@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ioGuildData * *,ioGuildData * *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAPAVioGuildData@@PAPAV1@@std@@YAPAPAVioGuildData@@PAPAV1@00@Z ENDP ; std::_Move<ioGuildData * *,ioGuildData * *>
_TEXT	ENDS
PUBLIC	??$_Move@PAPAUGuildAttendRwardInfo@@PAPAU1@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00@Z ; std::_Move<GuildAttendRwardInfo * *,GuildAttendRwardInfo * *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Move@PAPAUGuildAttendRwardInfo@@PAPAU1@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00@Z
_TEXT	SEGMENT
__Cat$520408 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAPAUGuildAttendRwardInfo@@PAPAU1@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00@Z PROC ; std::_Move<GuildAttendRwardInfo * *,GuildAttendRwardInfo * *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$520408[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAPAUGuildAttendRwardInfo@@PAPAU1@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<GuildAttendRwardInfo * *,GuildAttendRwardInfo * *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAPAUGuildAttendRwardInfo@@PAPAU1@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00@Z ENDP ; std::_Move<GuildAttendRwardInfo * *,GuildAttendRwardInfo * *>
_TEXT	ENDS
PUBLIC	??$_Move@PAPAUGuildRankRwardInfo@@PAPAU1@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00@Z ; std::_Move<GuildRankRwardInfo * *,GuildRankRwardInfo * *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Move@PAPAUGuildRankRwardInfo@@PAPAU1@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00@Z
_TEXT	SEGMENT
__Cat$520415 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAPAUGuildRankRwardInfo@@PAPAU1@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00@Z PROC ; std::_Move<GuildRankRwardInfo * *,GuildRankRwardInfo * *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$520415[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAPAUGuildRankRwardInfo@@PAPAU1@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<GuildRankRwardInfo * *,GuildRankRwardInfo * *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAPAUGuildRankRwardInfo@@PAPAU1@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00@Z ENDP ; std::_Move<GuildRankRwardInfo * *,GuildRankRwardInfo * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVioGuildData@@@std@@@std@@YAXPAPAVioGuildData@@0AAV?$allocator@PAVioGuildData@@@0@@Z ; std::_Destroy_range<std::allocator<ioGuildData *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVioGuildData@@@std@@@std@@YAXPAPAVioGuildData@@0AAV?$allocator@PAVioGuildData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVioGuildData@@@std@@@std@@YAXPAPAVioGuildData@@0AAV?$allocator@PAVioGuildData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ioGuildData *> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAVioGuildData@@@std@@@std@@YAXPAPAVioGuildData@@0AAV?$allocator@PAVioGuildData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioGuildData *> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@YAXPAPAUGuildAttendRwardInfo@@0AAV?$allocator@PAUGuildAttendRwardInfo@@@0@@Z ; std::_Destroy_range<std::allocator<GuildAttendRwardInfo *> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy_range@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@YAXPAPAUGuildAttendRwardInfo@@0AAV?$allocator@PAUGuildAttendRwardInfo@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@YAXPAPAUGuildAttendRwardInfo@@0AAV?$allocator@PAUGuildAttendRwardInfo@@@0@@Z PROC ; std::_Destroy_range<std::allocator<GuildAttendRwardInfo *> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@YAXPAPAUGuildAttendRwardInfo@@0AAV?$allocator@PAUGuildAttendRwardInfo@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<GuildAttendRwardInfo *> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@YAXPAPAUGuildRankRwardInfo@@0AAV?$allocator@PAUGuildRankRwardInfo@@@0@@Z ; std::_Destroy_range<std::allocator<GuildRankRwardInfo *> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy_range@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@YAXPAPAUGuildRankRwardInfo@@0AAV?$allocator@PAUGuildRankRwardInfo@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@YAXPAPAUGuildRankRwardInfo@@0AAV?$allocator@PAUGuildRankRwardInfo@@@0@@Z PROC ; std::_Destroy_range<std::allocator<GuildRankRwardInfo *> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@YAXPAPAUGuildRankRwardInfo@@0AAV?$allocator@PAUGuildRankRwardInfo@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<GuildRankRwardInfo *> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVioGuildData@@@std@@QAEXPAPAVioGuildData@@ABQAV3@@Z ; std::allocator<ioGuildData *>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@PAVioGuildData@@@std@@QAEXPAPAVioGuildData@@ABQAV3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVioGuildData@@@std@@QAEXPAPAVioGuildData@@ABQAV3@@Z PROC ; std::allocator<ioGuildData *>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN5@construct@7
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN5@construct@7:

; 198  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?construct@?$allocator@PAVioGuildData@@@std@@QAEXPAPAVioGuildData@@ABQAV3@@Z ENDP ; std::allocator<ioGuildData *>::construct
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAUGuildAttendRwardInfo@@@std@@QAEXPAPAUGuildAttendRwardInfo@@ABQAU3@@Z ; std::allocator<GuildAttendRwardInfo *>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@PAUGuildAttendRwardInfo@@@std@@QAEXPAPAUGuildAttendRwardInfo@@ABQAU3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAUGuildAttendRwardInfo@@@std@@QAEXPAPAUGuildAttendRwardInfo@@ABQAU3@@Z PROC ; std::allocator<GuildAttendRwardInfo *>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN5@construct@8
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN5@construct@8:

; 198  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?construct@?$allocator@PAUGuildAttendRwardInfo@@@std@@QAEXPAPAUGuildAttendRwardInfo@@ABQAU3@@Z ENDP ; std::allocator<GuildAttendRwardInfo *>::construct
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAUGuildRankRwardInfo@@@std@@QAEXPAPAUGuildRankRwardInfo@@ABQAU3@@Z ; std::allocator<GuildRankRwardInfo *>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@PAUGuildRankRwardInfo@@@std@@QAEXPAPAUGuildRankRwardInfo@@ABQAU3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAUGuildRankRwardInfo@@@std@@QAEXPAPAUGuildRankRwardInfo@@ABQAU3@@Z PROC ; std::allocator<GuildRankRwardInfo *>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN5@construct@9
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN5@construct@9:

; 198  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?construct@?$allocator@PAUGuildRankRwardInfo@@@std@@QAEXPAPAUGuildRankRwardInfo@@ABQAU3@@Z ENDP ; std::allocator<GuildRankRwardInfo *>::construct
_TEXT	ENDS
PUBLIC	??G?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEHABV?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@1@@Z ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator-
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??G?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEHABV?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??G?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEHABV?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator-, COMDAT
; _this$ = ecx

; 380  : 		{	// return difference of iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 381  : 		return (*(_Mybase *)this - _Right);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	6a 38		 push	 56			; 00000038H
  0000c	99		 cdq
  0000d	59		 pop	 ecx
  0000e	f7 f9		 idiv	 ecx

; 382  : 		}

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
??G?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBEHABV?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator-
_TEXT	ENDS
PUBLIC	??$_Unchecked@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@YAPAUGuildUser@ioGuildData@@V?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >
; Function compile flags: /Ogsp
;	COMDAT ??$_Unchecked@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@YAPAUGuildUser@ioGuildData@@V?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Iter$ = 8						; size = 4
??$_Unchecked@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@YAPAUGuildUser@ioGuildData@@V?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@0@@Z PROC ; std::_Unchecked<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >, COMDAT

; 393  : 	{	// convert to unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 394  : 	return (_Iter._Unchecked());

  00003	8b 45 08	 mov	 eax, DWORD PTR __Iter$[ebp]

; 395  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Unchecked@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@YAPAUGuildUser@ioGuildData@@V?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@0@@Z ENDP ; std::_Unchecked<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >
_TEXT	ENDS
PUBLIC	??$encodeString@$0BF@@ioINILoader_e@@AAEPADAAY0BF@$$CBDPAD@Z ; ioINILoader_e::encodeString<21>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$encodeString@$0BF@@ioINILoader_e@@AAEPADAAY0BF@$$CBDPAD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_e$ = 12						; size = 4
??$encodeString@$0BF@@ioINILoader_e@@AAEPADAAY0BF@$$CBDPAD@Z PROC ; ioINILoader_e::encodeString<21>, COMDAT
; _this$ = ecx

; 215  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 216  : 		__ENCSTR(s, e);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _s$[ebp]
  00006	8a 11		 mov	 dl, BYTE PTR [ecx]
  00008	8b 45 0c	 mov	 eax, DWORD PTR _e$[ebp]
  0000b	53		 push	 ebx
  0000c	84 d2		 test	 dl, dl
  0000e	0f 84 6a 04 00
	00		 je	 $LN96@encodeStri
  00014	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00017	88 10		 mov	 BYTE PTR [eax], dl
  00019	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  0001c	84 d2		 test	 dl, dl
  0001e	0f 84 54 04 00
	00		 je	 $LN95@encodeStri
  00024	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00027	88 50 01	 mov	 BYTE PTR [eax+1], dl
  0002a	8a 51 02	 mov	 dl, BYTE PTR [ecx+2]
  0002d	84 d2		 test	 dl, dl
  0002f	0f 84 3d 04 00
	00		 je	 $LN94@encodeStri
  00035	b3 eb		 mov	 bl, -21			; ffffffebH
  00037	32 d3		 xor	 dl, bl
  00039	88 50 02	 mov	 BYTE PTR [eax+2], dl
  0003c	8a 51 03	 mov	 dl, BYTE PTR [ecx+3]
  0003f	84 d2		 test	 dl, dl
  00041	0f 84 25 04 00
	00		 je	 $LN93@encodeStri
  00047	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0004a	88 50 03	 mov	 BYTE PTR [eax+3], dl
  0004d	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  00050	84 d2		 test	 dl, dl
  00052	0f 84 0e 04 00
	00		 je	 $LN92@encodeStri
  00058	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0005b	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0005e	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  00061	84 d2		 test	 dl, dl
  00063	0f 84 f7 03 00
	00		 je	 $LN91@encodeStri
  00069	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0006c	88 50 05	 mov	 BYTE PTR [eax+5], dl
  0006f	8a 51 06	 mov	 dl, BYTE PTR [ecx+6]
  00072	84 d2		 test	 dl, dl
  00074	0f 84 e1 03 00
	00		 je	 $LN90@encodeStri
  0007a	32 d3		 xor	 dl, bl
  0007c	88 50 06	 mov	 BYTE PTR [eax+6], dl
  0007f	8a 51 07	 mov	 dl, BYTE PTR [ecx+7]
  00082	84 d2		 test	 dl, dl
  00084	0f 84 cb 03 00
	00		 je	 $LN89@encodeStri
  0008a	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0008d	88 50 07	 mov	 BYTE PTR [eax+7], dl
  00090	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  00093	84 d2		 test	 dl, dl
  00095	0f 84 b4 03 00
	00		 je	 $LN88@encodeStri
  0009b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0009e	88 50 08	 mov	 BYTE PTR [eax+8], dl
  000a1	8a 51 09	 mov	 dl, BYTE PTR [ecx+9]
  000a4	84 d2		 test	 dl, dl
  000a6	0f 84 9d 03 00
	00		 je	 $LN87@encodeStri
  000ac	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000af	88 50 09	 mov	 BYTE PTR [eax+9], dl
  000b2	8a 51 0a	 mov	 dl, BYTE PTR [ecx+10]
  000b5	84 d2		 test	 dl, dl
  000b7	0f 84 87 03 00
	00		 je	 $LN86@encodeStri
  000bd	32 d3		 xor	 dl, bl
  000bf	88 50 0a	 mov	 BYTE PTR [eax+10], dl
  000c2	8a 51 0b	 mov	 dl, BYTE PTR [ecx+11]
  000c5	84 d2		 test	 dl, dl
  000c7	0f 84 71 03 00
	00		 je	 $LN85@encodeStri
  000cd	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d0	88 50 0b	 mov	 BYTE PTR [eax+11], dl
  000d3	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
  000d6	84 d2		 test	 dl, dl
  000d8	0f 84 5a 03 00
	00		 je	 $LN84@encodeStri
  000de	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e1	88 50 0c	 mov	 BYTE PTR [eax+12], dl
  000e4	8a 51 0d	 mov	 dl, BYTE PTR [ecx+13]
  000e7	84 d2		 test	 dl, dl
  000e9	0f 84 43 03 00
	00		 je	 $LN83@encodeStri
  000ef	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000f2	88 50 0d	 mov	 BYTE PTR [eax+13], dl
  000f5	8a 51 0e	 mov	 dl, BYTE PTR [ecx+14]
  000f8	84 d2		 test	 dl, dl
  000fa	0f 84 2d 03 00
	00		 je	 $LN82@encodeStri
  00100	32 d3		 xor	 dl, bl
  00102	88 50 0e	 mov	 BYTE PTR [eax+14], dl
  00105	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  00108	84 d2		 test	 dl, dl
  0010a	0f 84 17 03 00
	00		 je	 $LN81@encodeStri
  00110	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00113	88 50 0f	 mov	 BYTE PTR [eax+15], dl
  00116	8a 51 10	 mov	 dl, BYTE PTR [ecx+16]
  00119	84 d2		 test	 dl, dl
  0011b	0f 84 00 03 00
	00		 je	 $LN80@encodeStri
  00121	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00124	88 50 10	 mov	 BYTE PTR [eax+16], dl
  00127	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  0012a	84 d2		 test	 dl, dl
  0012c	0f 84 e9 02 00
	00		 je	 $LN79@encodeStri
  00132	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00135	88 50 11	 mov	 BYTE PTR [eax+17], dl
  00138	8a 51 12	 mov	 dl, BYTE PTR [ecx+18]
  0013b	84 d2		 test	 dl, dl
  0013d	0f 84 d3 02 00
	00		 je	 $LN78@encodeStri
  00143	32 d3		 xor	 dl, bl
  00145	88 50 12	 mov	 BYTE PTR [eax+18], dl
  00148	8a 51 13	 mov	 dl, BYTE PTR [ecx+19]
  0014b	84 d2		 test	 dl, dl
  0014d	0f 84 bd 02 00
	00		 je	 $LN77@encodeStri
  00153	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00156	88 50 13	 mov	 BYTE PTR [eax+19], dl
  00159	8a 51 14	 mov	 dl, BYTE PTR [ecx+20]
  0015c	84 d2		 test	 dl, dl
  0015e	0f 84 a6 02 00
	00		 je	 $LN76@encodeStri
  00164	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00167	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0016a	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0016d	84 d2		 test	 dl, dl
  0016f	0f 84 8f 02 00
	00		 je	 $LN75@encodeStri
  00175	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00178	88 50 15	 mov	 BYTE PTR [eax+21], dl
  0017b	8a 51 16	 mov	 dl, BYTE PTR [ecx+22]
  0017e	84 d2		 test	 dl, dl
  00180	0f 84 79 02 00
	00		 je	 $LN74@encodeStri
  00186	32 d3		 xor	 dl, bl
  00188	88 50 16	 mov	 BYTE PTR [eax+22], dl
  0018b	8a 51 17	 mov	 dl, BYTE PTR [ecx+23]
  0018e	84 d2		 test	 dl, dl
  00190	0f 84 60 02 00
	00		 je	 $LN73@encodeStri
  00196	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00199	88 50 17	 mov	 BYTE PTR [eax+23], dl
  0019c	8a 51 18	 mov	 dl, BYTE PTR [ecx+24]
  0019f	84 d2		 test	 dl, dl
  001a1	0f 84 46 02 00
	00		 je	 $LN72@encodeStri
  001a7	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001aa	88 50 18	 mov	 BYTE PTR [eax+24], dl
  001ad	8a 51 19	 mov	 dl, BYTE PTR [ecx+25]
  001b0	84 d2		 test	 dl, dl
  001b2	0f 84 2c 02 00
	00		 je	 $LN71@encodeStri
  001b8	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001bb	88 50 19	 mov	 BYTE PTR [eax+25], dl
  001be	8a 51 1a	 mov	 dl, BYTE PTR [ecx+26]
  001c1	84 d2		 test	 dl, dl
  001c3	0f 84 13 02 00
	00		 je	 $LN70@encodeStri
  001c9	32 d3		 xor	 dl, bl
  001cb	88 50 1a	 mov	 BYTE PTR [eax+26], dl
  001ce	8a 51 1b	 mov	 dl, BYTE PTR [ecx+27]
  001d1	84 d2		 test	 dl, dl
  001d3	0f 84 fa 01 00
	00		 je	 $LN69@encodeStri
  001d9	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001dc	88 50 1b	 mov	 BYTE PTR [eax+27], dl
  001df	8a 51 1c	 mov	 dl, BYTE PTR [ecx+28]
  001e2	84 d2		 test	 dl, dl
  001e4	0f 84 e0 01 00
	00		 je	 $LN68@encodeStri
  001ea	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001ed	88 50 1c	 mov	 BYTE PTR [eax+28], dl
  001f0	8a 51 1d	 mov	 dl, BYTE PTR [ecx+29]
  001f3	84 d2		 test	 dl, dl
  001f5	0f 84 c6 01 00
	00		 je	 $LN67@encodeStri
  001fb	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001fe	88 50 1d	 mov	 BYTE PTR [eax+29], dl
  00201	8a 51 1e	 mov	 dl, BYTE PTR [ecx+30]
  00204	84 d2		 test	 dl, dl
  00206	0f 84 ad 01 00
	00		 je	 $LN66@encodeStri
  0020c	32 d3		 xor	 dl, bl
  0020e	88 50 1e	 mov	 BYTE PTR [eax+30], dl
  00211	8a 51 1f	 mov	 dl, BYTE PTR [ecx+31]
  00214	84 d2		 test	 dl, dl
  00216	0f 84 94 01 00
	00		 je	 $LN65@encodeStri
  0021c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0021f	88 50 1f	 mov	 BYTE PTR [eax+31], dl
  00222	8a 51 20	 mov	 dl, BYTE PTR [ecx+32]
  00225	84 d2		 test	 dl, dl
  00227	0f 84 7a 01 00
	00		 je	 $LN64@encodeStri
  0022d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00230	88 50 20	 mov	 BYTE PTR [eax+32], dl
  00233	8a 51 21	 mov	 dl, BYTE PTR [ecx+33]
  00236	84 d2		 test	 dl, dl
  00238	0f 84 60 01 00
	00		 je	 $LN63@encodeStri
  0023e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00241	88 50 21	 mov	 BYTE PTR [eax+33], dl
  00244	8a 51 22	 mov	 dl, BYTE PTR [ecx+34]
  00247	84 d2		 test	 dl, dl
  00249	0f 84 47 01 00
	00		 je	 $LN62@encodeStri
  0024f	32 d3		 xor	 dl, bl
  00251	88 50 22	 mov	 BYTE PTR [eax+34], dl
  00254	8a 51 23	 mov	 dl, BYTE PTR [ecx+35]
  00257	84 d2		 test	 dl, dl
  00259	0f 84 2e 01 00
	00		 je	 $LN61@encodeStri
  0025f	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00262	88 50 23	 mov	 BYTE PTR [eax+35], dl
  00265	8a 51 24	 mov	 dl, BYTE PTR [ecx+36]
  00268	84 d2		 test	 dl, dl
  0026a	0f 84 14 01 00
	00		 je	 $LN60@encodeStri
  00270	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00273	88 50 24	 mov	 BYTE PTR [eax+36], dl
  00276	8a 51 25	 mov	 dl, BYTE PTR [ecx+37]
  00279	84 d2		 test	 dl, dl
  0027b	0f 84 fa 00 00
	00		 je	 $LN59@encodeStri
  00281	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00284	88 50 25	 mov	 BYTE PTR [eax+37], dl
  00287	8a 51 26	 mov	 dl, BYTE PTR [ecx+38]
  0028a	84 d2		 test	 dl, dl
  0028c	0f 84 e1 00 00
	00		 je	 $LN58@encodeStri
  00292	32 d3		 xor	 dl, bl
  00294	88 50 26	 mov	 BYTE PTR [eax+38], dl
  00297	8a 51 27	 mov	 dl, BYTE PTR [ecx+39]
  0029a	84 d2		 test	 dl, dl
  0029c	0f 84 c8 00 00
	00		 je	 $LN57@encodeStri
  002a2	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002a5	88 50 27	 mov	 BYTE PTR [eax+39], dl
  002a8	8a 51 28	 mov	 dl, BYTE PTR [ecx+40]
  002ab	84 d2		 test	 dl, dl
  002ad	0f 84 ae 00 00
	00		 je	 $LN56@encodeStri
  002b3	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002b6	88 50 28	 mov	 BYTE PTR [eax+40], dl
  002b9	8a 51 29	 mov	 dl, BYTE PTR [ecx+41]
  002bc	84 d2		 test	 dl, dl
  002be	0f 84 94 00 00
	00		 je	 $LN55@encodeStri
  002c4	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002c7	88 50 29	 mov	 BYTE PTR [eax+41], dl
  002ca	8a 51 2a	 mov	 dl, BYTE PTR [ecx+42]
  002cd	84 d2		 test	 dl, dl
  002cf	74 7f		 je	 SHORT $LN54@encodeStri
  002d1	32 d3		 xor	 dl, bl
  002d3	88 50 2a	 mov	 BYTE PTR [eax+42], dl
  002d6	8a 51 2b	 mov	 dl, BYTE PTR [ecx+43]
  002d9	84 d2		 test	 dl, dl
  002db	74 6a		 je	 SHORT $LN53@encodeStri
  002dd	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002e0	88 50 2b	 mov	 BYTE PTR [eax+43], dl
  002e3	8a 51 2c	 mov	 dl, BYTE PTR [ecx+44]
  002e6	84 d2		 test	 dl, dl
  002e8	74 54		 je	 SHORT $LN52@encodeStri
  002ea	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002ed	88 50 2c	 mov	 BYTE PTR [eax+44], dl
  002f0	8a 51 2d	 mov	 dl, BYTE PTR [ecx+45]
  002f3	84 d2		 test	 dl, dl
  002f5	74 3e		 je	 SHORT $LN51@encodeStri
  002f7	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002fa	88 50 2d	 mov	 BYTE PTR [eax+45], dl
  002fd	8a 51 2e	 mov	 dl, BYTE PTR [ecx+46]
  00300	84 d2		 test	 dl, dl
  00302	74 29		 je	 SHORT $LN50@encodeStri
  00304	32 d3		 xor	 dl, bl
  00306	88 50 2e	 mov	 BYTE PTR [eax+46], dl
  00309	8a 51 2f	 mov	 dl, BYTE PTR [ecx+47]
  0030c	84 d2		 test	 dl, dl
  0030e	74 14		 je	 SHORT $LN49@encodeStri
  00310	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00313	88 50 2f	 mov	 BYTE PTR [eax+47], dl
  00316	8a 49 30	 mov	 cl, BYTE PTR [ecx+48]
  00319	80 f1 ed	 xor	 cl, -19			; ffffffedH
  0031c	88 48 30	 mov	 BYTE PTR [eax+48], cl
  0031f	e9 5d 01 00 00	 jmp	 $LN1@encodeStri
$LN49@encodeStri:
  00324	c6 40 2f ea	 mov	 BYTE PTR [eax+47], -22	; ffffffeaH
  00328	e9 54 01 00 00	 jmp	 $LN1@encodeStri
$LN50@encodeStri:
  0032d	88 58 2e	 mov	 BYTE PTR [eax+46], bl
  00330	e9 4c 01 00 00	 jmp	 $LN1@encodeStri
$LN51@encodeStri:
  00335	c6 40 2d ec	 mov	 BYTE PTR [eax+45], -20	; ffffffecH
  00339	e9 43 01 00 00	 jmp	 $LN1@encodeStri
$LN52@encodeStri:
  0033e	c6 40 2c ed	 mov	 BYTE PTR [eax+44], -19	; ffffffedH
  00342	e9 3a 01 00 00	 jmp	 $LN1@encodeStri
$LN53@encodeStri:
  00347	c6 40 2b ea	 mov	 BYTE PTR [eax+43], -22	; ffffffeaH
  0034b	e9 31 01 00 00	 jmp	 $LN1@encodeStri
$LN54@encodeStri:
  00350	88 58 2a	 mov	 BYTE PTR [eax+42], bl
  00353	e9 29 01 00 00	 jmp	 $LN1@encodeStri
$LN55@encodeStri:
  00358	c6 40 29 ec	 mov	 BYTE PTR [eax+41], -20	; ffffffecH
  0035c	e9 20 01 00 00	 jmp	 $LN1@encodeStri
$LN56@encodeStri:
  00361	c6 40 28 ed	 mov	 BYTE PTR [eax+40], -19	; ffffffedH
  00365	e9 17 01 00 00	 jmp	 $LN1@encodeStri
$LN57@encodeStri:
  0036a	c6 40 27 ea	 mov	 BYTE PTR [eax+39], -22	; ffffffeaH
  0036e	e9 0e 01 00 00	 jmp	 $LN1@encodeStri
$LN58@encodeStri:
  00373	88 58 26	 mov	 BYTE PTR [eax+38], bl
  00376	e9 06 01 00 00	 jmp	 $LN1@encodeStri
$LN59@encodeStri:
  0037b	c6 40 25 ec	 mov	 BYTE PTR [eax+37], -20	; ffffffecH
  0037f	e9 fd 00 00 00	 jmp	 $LN1@encodeStri
$LN60@encodeStri:
  00384	c6 40 24 ed	 mov	 BYTE PTR [eax+36], -19	; ffffffedH
  00388	e9 f4 00 00 00	 jmp	 $LN1@encodeStri
$LN61@encodeStri:
  0038d	c6 40 23 ea	 mov	 BYTE PTR [eax+35], -22	; ffffffeaH
  00391	e9 eb 00 00 00	 jmp	 $LN1@encodeStri
$LN62@encodeStri:
  00396	88 58 22	 mov	 BYTE PTR [eax+34], bl
  00399	e9 e3 00 00 00	 jmp	 $LN1@encodeStri
$LN63@encodeStri:
  0039e	c6 40 21 ec	 mov	 BYTE PTR [eax+33], -20	; ffffffecH
  003a2	e9 da 00 00 00	 jmp	 $LN1@encodeStri
$LN64@encodeStri:
  003a7	c6 40 20 ed	 mov	 BYTE PTR [eax+32], -19	; ffffffedH
  003ab	e9 d1 00 00 00	 jmp	 $LN1@encodeStri
$LN65@encodeStri:
  003b0	c6 40 1f ea	 mov	 BYTE PTR [eax+31], -22	; ffffffeaH
  003b4	e9 c8 00 00 00	 jmp	 $LN1@encodeStri
$LN66@encodeStri:
  003b9	88 58 1e	 mov	 BYTE PTR [eax+30], bl
  003bc	e9 c0 00 00 00	 jmp	 $LN1@encodeStri
$LN67@encodeStri:
  003c1	c6 40 1d ec	 mov	 BYTE PTR [eax+29], -20	; ffffffecH
  003c5	e9 b7 00 00 00	 jmp	 $LN1@encodeStri
$LN68@encodeStri:
  003ca	c6 40 1c ed	 mov	 BYTE PTR [eax+28], -19	; ffffffedH
  003ce	e9 ae 00 00 00	 jmp	 $LN1@encodeStri
$LN69@encodeStri:
  003d3	c6 40 1b ea	 mov	 BYTE PTR [eax+27], -22	; ffffffeaH
  003d7	e9 a5 00 00 00	 jmp	 $LN1@encodeStri
$LN70@encodeStri:
  003dc	88 58 1a	 mov	 BYTE PTR [eax+26], bl
  003df	e9 9d 00 00 00	 jmp	 $LN1@encodeStri
$LN71@encodeStri:
  003e4	c6 40 19 ec	 mov	 BYTE PTR [eax+25], -20	; ffffffecH
  003e8	e9 94 00 00 00	 jmp	 $LN1@encodeStri
$LN72@encodeStri:
  003ed	c6 40 18 ed	 mov	 BYTE PTR [eax+24], -19	; ffffffedH
  003f1	e9 8b 00 00 00	 jmp	 $LN1@encodeStri
$LN73@encodeStri:
  003f6	c6 40 17 ea	 mov	 BYTE PTR [eax+23], -22	; ffffffeaH
  003fa	e9 82 00 00 00	 jmp	 $LN1@encodeStri
$LN74@encodeStri:
  003ff	88 58 16	 mov	 BYTE PTR [eax+22], bl
  00402	eb 7d		 jmp	 SHORT $LN1@encodeStri
$LN75@encodeStri:
  00404	c6 40 15 ec	 mov	 BYTE PTR [eax+21], -20	; ffffffecH
  00408	eb 77		 jmp	 SHORT $LN1@encodeStri
$LN76@encodeStri:
  0040a	c6 40 14 ed	 mov	 BYTE PTR [eax+20], -19	; ffffffedH
  0040e	eb 71		 jmp	 SHORT $LN1@encodeStri
$LN77@encodeStri:
  00410	c6 40 13 ea	 mov	 BYTE PTR [eax+19], -22	; ffffffeaH
  00414	eb 6b		 jmp	 SHORT $LN1@encodeStri
$LN78@encodeStri:
  00416	88 58 12	 mov	 BYTE PTR [eax+18], bl
  00419	eb 66		 jmp	 SHORT $LN1@encodeStri
$LN79@encodeStri:
  0041b	c6 40 11 ec	 mov	 BYTE PTR [eax+17], -20	; ffffffecH
  0041f	eb 60		 jmp	 SHORT $LN1@encodeStri
$LN80@encodeStri:
  00421	c6 40 10 ed	 mov	 BYTE PTR [eax+16], -19	; ffffffedH
  00425	eb 5a		 jmp	 SHORT $LN1@encodeStri
$LN81@encodeStri:
  00427	c6 40 0f ea	 mov	 BYTE PTR [eax+15], -22	; ffffffeaH
  0042b	eb 54		 jmp	 SHORT $LN1@encodeStri
$LN82@encodeStri:
  0042d	88 58 0e	 mov	 BYTE PTR [eax+14], bl
  00430	eb 4f		 jmp	 SHORT $LN1@encodeStri
$LN83@encodeStri:
  00432	c6 40 0d ec	 mov	 BYTE PTR [eax+13], -20	; ffffffecH
  00436	eb 49		 jmp	 SHORT $LN1@encodeStri
$LN84@encodeStri:
  00438	c6 40 0c ed	 mov	 BYTE PTR [eax+12], -19	; ffffffedH
  0043c	eb 43		 jmp	 SHORT $LN1@encodeStri
$LN85@encodeStri:
  0043e	c6 40 0b ea	 mov	 BYTE PTR [eax+11], -22	; ffffffeaH
  00442	eb 3d		 jmp	 SHORT $LN1@encodeStri
$LN86@encodeStri:
  00444	88 58 0a	 mov	 BYTE PTR [eax+10], bl
  00447	eb 38		 jmp	 SHORT $LN1@encodeStri
$LN87@encodeStri:
  00449	c6 40 09 ec	 mov	 BYTE PTR [eax+9], -20	; ffffffecH
  0044d	eb 32		 jmp	 SHORT $LN1@encodeStri
$LN88@encodeStri:
  0044f	c6 40 08 ed	 mov	 BYTE PTR [eax+8], -19	; ffffffedH
  00453	eb 2c		 jmp	 SHORT $LN1@encodeStri
$LN89@encodeStri:
  00455	c6 40 07 ea	 mov	 BYTE PTR [eax+7], -22	; ffffffeaH
  00459	eb 26		 jmp	 SHORT $LN1@encodeStri
$LN90@encodeStri:
  0045b	88 58 06	 mov	 BYTE PTR [eax+6], bl
  0045e	eb 21		 jmp	 SHORT $LN1@encodeStri
$LN91@encodeStri:
  00460	c6 40 05 ec	 mov	 BYTE PTR [eax+5], -20	; ffffffecH
  00464	eb 1b		 jmp	 SHORT $LN1@encodeStri
$LN92@encodeStri:
  00466	c6 40 04 ed	 mov	 BYTE PTR [eax+4], -19	; ffffffedH
  0046a	eb 15		 jmp	 SHORT $LN1@encodeStri
$LN93@encodeStri:
  0046c	c6 40 03 ea	 mov	 BYTE PTR [eax+3], -22	; ffffffeaH
  00470	eb 0f		 jmp	 SHORT $LN1@encodeStri
$LN94@encodeStri:
  00472	c6 40 02 eb	 mov	 BYTE PTR [eax+2], -21	; ffffffebH
  00476	eb 09		 jmp	 SHORT $LN1@encodeStri
$LN95@encodeStri:
  00478	c6 40 01 ec	 mov	 BYTE PTR [eax+1], -20	; ffffffecH
  0047c	eb 03		 jmp	 SHORT $LN1@encodeStri
$LN96@encodeStri:
  0047e	c6 00 ed	 mov	 BYTE PTR [eax], -19	; ffffffedH
$LN1@encodeStri:
  00481	6a 05		 push	 5
  00483	5a		 pop	 edx
  00484	8b c8		 mov	 ecx, eax
  00486	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  0048a	5b		 pop	 ebx
$LL104@encodeStri:
  0048b	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  00491	83 c1 04	 add	 ecx, 4
  00494	4a		 dec	 edx
  00495	75 f4		 jne	 SHORT $LL104@encodeStri

; 217  : 		return e;
; 218  : 	}

  00497	5d		 pop	 ebp
  00498	c2 08 00	 ret	 8
??$encodeString@$0BF@@ioINILoader_e@@AAEPADAAY0BF@$$CBDPAD@Z ENDP ; ioINILoader_e::encodeString<21>
_TEXT	ENDS
PUBLIC	??$encodeString@$0BM@@ioINILoader_e@@AAEPADAAY0BM@$$CBDPAD@Z ; ioINILoader_e::encodeString<28>
; Function compile flags: /Ogsp
;	COMDAT ??$encodeString@$0BM@@ioINILoader_e@@AAEPADAAY0BM@$$CBDPAD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_e$ = 12						; size = 4
??$encodeString@$0BM@@ioINILoader_e@@AAEPADAAY0BM@$$CBDPAD@Z PROC ; ioINILoader_e::encodeString<28>, COMDAT
; _this$ = ecx

; 215  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 216  : 		__ENCSTR(s, e);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _s$[ebp]
  00006	8a 11		 mov	 dl, BYTE PTR [ecx]
  00008	8b 45 0c	 mov	 eax, DWORD PTR _e$[ebp]
  0000b	53		 push	 ebx
  0000c	84 d2		 test	 dl, dl
  0000e	0f 84 6a 04 00
	00		 je	 $LN96@encodeStri@2
  00014	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00017	88 10		 mov	 BYTE PTR [eax], dl
  00019	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  0001c	84 d2		 test	 dl, dl
  0001e	0f 84 54 04 00
	00		 je	 $LN95@encodeStri@2
  00024	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00027	88 50 01	 mov	 BYTE PTR [eax+1], dl
  0002a	8a 51 02	 mov	 dl, BYTE PTR [ecx+2]
  0002d	84 d2		 test	 dl, dl
  0002f	0f 84 3d 04 00
	00		 je	 $LN94@encodeStri@2
  00035	b3 eb		 mov	 bl, -21			; ffffffebH
  00037	32 d3		 xor	 dl, bl
  00039	88 50 02	 mov	 BYTE PTR [eax+2], dl
  0003c	8a 51 03	 mov	 dl, BYTE PTR [ecx+3]
  0003f	84 d2		 test	 dl, dl
  00041	0f 84 25 04 00
	00		 je	 $LN93@encodeStri@2
  00047	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0004a	88 50 03	 mov	 BYTE PTR [eax+3], dl
  0004d	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  00050	84 d2		 test	 dl, dl
  00052	0f 84 0e 04 00
	00		 je	 $LN92@encodeStri@2
  00058	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0005b	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0005e	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  00061	84 d2		 test	 dl, dl
  00063	0f 84 f7 03 00
	00		 je	 $LN91@encodeStri@2
  00069	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0006c	88 50 05	 mov	 BYTE PTR [eax+5], dl
  0006f	8a 51 06	 mov	 dl, BYTE PTR [ecx+6]
  00072	84 d2		 test	 dl, dl
  00074	0f 84 e1 03 00
	00		 je	 $LN90@encodeStri@2
  0007a	32 d3		 xor	 dl, bl
  0007c	88 50 06	 mov	 BYTE PTR [eax+6], dl
  0007f	8a 51 07	 mov	 dl, BYTE PTR [ecx+7]
  00082	84 d2		 test	 dl, dl
  00084	0f 84 cb 03 00
	00		 je	 $LN89@encodeStri@2
  0008a	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0008d	88 50 07	 mov	 BYTE PTR [eax+7], dl
  00090	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  00093	84 d2		 test	 dl, dl
  00095	0f 84 b4 03 00
	00		 je	 $LN88@encodeStri@2
  0009b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0009e	88 50 08	 mov	 BYTE PTR [eax+8], dl
  000a1	8a 51 09	 mov	 dl, BYTE PTR [ecx+9]
  000a4	84 d2		 test	 dl, dl
  000a6	0f 84 9d 03 00
	00		 je	 $LN87@encodeStri@2
  000ac	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000af	88 50 09	 mov	 BYTE PTR [eax+9], dl
  000b2	8a 51 0a	 mov	 dl, BYTE PTR [ecx+10]
  000b5	84 d2		 test	 dl, dl
  000b7	0f 84 87 03 00
	00		 je	 $LN86@encodeStri@2
  000bd	32 d3		 xor	 dl, bl
  000bf	88 50 0a	 mov	 BYTE PTR [eax+10], dl
  000c2	8a 51 0b	 mov	 dl, BYTE PTR [ecx+11]
  000c5	84 d2		 test	 dl, dl
  000c7	0f 84 71 03 00
	00		 je	 $LN85@encodeStri@2
  000cd	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d0	88 50 0b	 mov	 BYTE PTR [eax+11], dl
  000d3	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
  000d6	84 d2		 test	 dl, dl
  000d8	0f 84 5a 03 00
	00		 je	 $LN84@encodeStri@2
  000de	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e1	88 50 0c	 mov	 BYTE PTR [eax+12], dl
  000e4	8a 51 0d	 mov	 dl, BYTE PTR [ecx+13]
  000e7	84 d2		 test	 dl, dl
  000e9	0f 84 43 03 00
	00		 je	 $LN83@encodeStri@2
  000ef	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000f2	88 50 0d	 mov	 BYTE PTR [eax+13], dl
  000f5	8a 51 0e	 mov	 dl, BYTE PTR [ecx+14]
  000f8	84 d2		 test	 dl, dl
  000fa	0f 84 2d 03 00
	00		 je	 $LN82@encodeStri@2
  00100	32 d3		 xor	 dl, bl
  00102	88 50 0e	 mov	 BYTE PTR [eax+14], dl
  00105	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  00108	84 d2		 test	 dl, dl
  0010a	0f 84 17 03 00
	00		 je	 $LN81@encodeStri@2
  00110	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00113	88 50 0f	 mov	 BYTE PTR [eax+15], dl
  00116	8a 51 10	 mov	 dl, BYTE PTR [ecx+16]
  00119	84 d2		 test	 dl, dl
  0011b	0f 84 00 03 00
	00		 je	 $LN80@encodeStri@2
  00121	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00124	88 50 10	 mov	 BYTE PTR [eax+16], dl
  00127	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  0012a	84 d2		 test	 dl, dl
  0012c	0f 84 e9 02 00
	00		 je	 $LN79@encodeStri@2
  00132	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00135	88 50 11	 mov	 BYTE PTR [eax+17], dl
  00138	8a 51 12	 mov	 dl, BYTE PTR [ecx+18]
  0013b	84 d2		 test	 dl, dl
  0013d	0f 84 d3 02 00
	00		 je	 $LN78@encodeStri@2
  00143	32 d3		 xor	 dl, bl
  00145	88 50 12	 mov	 BYTE PTR [eax+18], dl
  00148	8a 51 13	 mov	 dl, BYTE PTR [ecx+19]
  0014b	84 d2		 test	 dl, dl
  0014d	0f 84 bd 02 00
	00		 je	 $LN77@encodeStri@2
  00153	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00156	88 50 13	 mov	 BYTE PTR [eax+19], dl
  00159	8a 51 14	 mov	 dl, BYTE PTR [ecx+20]
  0015c	84 d2		 test	 dl, dl
  0015e	0f 84 a6 02 00
	00		 je	 $LN76@encodeStri@2
  00164	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00167	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0016a	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0016d	84 d2		 test	 dl, dl
  0016f	0f 84 8f 02 00
	00		 je	 $LN75@encodeStri@2
  00175	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00178	88 50 15	 mov	 BYTE PTR [eax+21], dl
  0017b	8a 51 16	 mov	 dl, BYTE PTR [ecx+22]
  0017e	84 d2		 test	 dl, dl
  00180	0f 84 79 02 00
	00		 je	 $LN74@encodeStri@2
  00186	32 d3		 xor	 dl, bl
  00188	88 50 16	 mov	 BYTE PTR [eax+22], dl
  0018b	8a 51 17	 mov	 dl, BYTE PTR [ecx+23]
  0018e	84 d2		 test	 dl, dl
  00190	0f 84 60 02 00
	00		 je	 $LN73@encodeStri@2
  00196	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00199	88 50 17	 mov	 BYTE PTR [eax+23], dl
  0019c	8a 51 18	 mov	 dl, BYTE PTR [ecx+24]
  0019f	84 d2		 test	 dl, dl
  001a1	0f 84 46 02 00
	00		 je	 $LN72@encodeStri@2
  001a7	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001aa	88 50 18	 mov	 BYTE PTR [eax+24], dl
  001ad	8a 51 19	 mov	 dl, BYTE PTR [ecx+25]
  001b0	84 d2		 test	 dl, dl
  001b2	0f 84 2c 02 00
	00		 je	 $LN71@encodeStri@2
  001b8	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001bb	88 50 19	 mov	 BYTE PTR [eax+25], dl
  001be	8a 51 1a	 mov	 dl, BYTE PTR [ecx+26]
  001c1	84 d2		 test	 dl, dl
  001c3	0f 84 13 02 00
	00		 je	 $LN70@encodeStri@2
  001c9	32 d3		 xor	 dl, bl
  001cb	88 50 1a	 mov	 BYTE PTR [eax+26], dl
  001ce	8a 51 1b	 mov	 dl, BYTE PTR [ecx+27]
  001d1	84 d2		 test	 dl, dl
  001d3	0f 84 fa 01 00
	00		 je	 $LN69@encodeStri@2
  001d9	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001dc	88 50 1b	 mov	 BYTE PTR [eax+27], dl
  001df	8a 51 1c	 mov	 dl, BYTE PTR [ecx+28]
  001e2	84 d2		 test	 dl, dl
  001e4	0f 84 e0 01 00
	00		 je	 $LN68@encodeStri@2
  001ea	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001ed	88 50 1c	 mov	 BYTE PTR [eax+28], dl
  001f0	8a 51 1d	 mov	 dl, BYTE PTR [ecx+29]
  001f3	84 d2		 test	 dl, dl
  001f5	0f 84 c6 01 00
	00		 je	 $LN67@encodeStri@2
  001fb	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001fe	88 50 1d	 mov	 BYTE PTR [eax+29], dl
  00201	8a 51 1e	 mov	 dl, BYTE PTR [ecx+30]
  00204	84 d2		 test	 dl, dl
  00206	0f 84 ad 01 00
	00		 je	 $LN66@encodeStri@2
  0020c	32 d3		 xor	 dl, bl
  0020e	88 50 1e	 mov	 BYTE PTR [eax+30], dl
  00211	8a 51 1f	 mov	 dl, BYTE PTR [ecx+31]
  00214	84 d2		 test	 dl, dl
  00216	0f 84 94 01 00
	00		 je	 $LN65@encodeStri@2
  0021c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0021f	88 50 1f	 mov	 BYTE PTR [eax+31], dl
  00222	8a 51 20	 mov	 dl, BYTE PTR [ecx+32]
  00225	84 d2		 test	 dl, dl
  00227	0f 84 7a 01 00
	00		 je	 $LN64@encodeStri@2
  0022d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00230	88 50 20	 mov	 BYTE PTR [eax+32], dl
  00233	8a 51 21	 mov	 dl, BYTE PTR [ecx+33]
  00236	84 d2		 test	 dl, dl
  00238	0f 84 60 01 00
	00		 je	 $LN63@encodeStri@2
  0023e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00241	88 50 21	 mov	 BYTE PTR [eax+33], dl
  00244	8a 51 22	 mov	 dl, BYTE PTR [ecx+34]
  00247	84 d2		 test	 dl, dl
  00249	0f 84 47 01 00
	00		 je	 $LN62@encodeStri@2
  0024f	32 d3		 xor	 dl, bl
  00251	88 50 22	 mov	 BYTE PTR [eax+34], dl
  00254	8a 51 23	 mov	 dl, BYTE PTR [ecx+35]
  00257	84 d2		 test	 dl, dl
  00259	0f 84 2e 01 00
	00		 je	 $LN61@encodeStri@2
  0025f	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00262	88 50 23	 mov	 BYTE PTR [eax+35], dl
  00265	8a 51 24	 mov	 dl, BYTE PTR [ecx+36]
  00268	84 d2		 test	 dl, dl
  0026a	0f 84 14 01 00
	00		 je	 $LN60@encodeStri@2
  00270	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00273	88 50 24	 mov	 BYTE PTR [eax+36], dl
  00276	8a 51 25	 mov	 dl, BYTE PTR [ecx+37]
  00279	84 d2		 test	 dl, dl
  0027b	0f 84 fa 00 00
	00		 je	 $LN59@encodeStri@2
  00281	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00284	88 50 25	 mov	 BYTE PTR [eax+37], dl
  00287	8a 51 26	 mov	 dl, BYTE PTR [ecx+38]
  0028a	84 d2		 test	 dl, dl
  0028c	0f 84 e1 00 00
	00		 je	 $LN58@encodeStri@2
  00292	32 d3		 xor	 dl, bl
  00294	88 50 26	 mov	 BYTE PTR [eax+38], dl
  00297	8a 51 27	 mov	 dl, BYTE PTR [ecx+39]
  0029a	84 d2		 test	 dl, dl
  0029c	0f 84 c8 00 00
	00		 je	 $LN57@encodeStri@2
  002a2	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002a5	88 50 27	 mov	 BYTE PTR [eax+39], dl
  002a8	8a 51 28	 mov	 dl, BYTE PTR [ecx+40]
  002ab	84 d2		 test	 dl, dl
  002ad	0f 84 ae 00 00
	00		 je	 $LN56@encodeStri@2
  002b3	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002b6	88 50 28	 mov	 BYTE PTR [eax+40], dl
  002b9	8a 51 29	 mov	 dl, BYTE PTR [ecx+41]
  002bc	84 d2		 test	 dl, dl
  002be	0f 84 94 00 00
	00		 je	 $LN55@encodeStri@2
  002c4	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002c7	88 50 29	 mov	 BYTE PTR [eax+41], dl
  002ca	8a 51 2a	 mov	 dl, BYTE PTR [ecx+42]
  002cd	84 d2		 test	 dl, dl
  002cf	74 7f		 je	 SHORT $LN54@encodeStri@2
  002d1	32 d3		 xor	 dl, bl
  002d3	88 50 2a	 mov	 BYTE PTR [eax+42], dl
  002d6	8a 51 2b	 mov	 dl, BYTE PTR [ecx+43]
  002d9	84 d2		 test	 dl, dl
  002db	74 6a		 je	 SHORT $LN53@encodeStri@2
  002dd	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002e0	88 50 2b	 mov	 BYTE PTR [eax+43], dl
  002e3	8a 51 2c	 mov	 dl, BYTE PTR [ecx+44]
  002e6	84 d2		 test	 dl, dl
  002e8	74 54		 je	 SHORT $LN52@encodeStri@2
  002ea	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002ed	88 50 2c	 mov	 BYTE PTR [eax+44], dl
  002f0	8a 51 2d	 mov	 dl, BYTE PTR [ecx+45]
  002f3	84 d2		 test	 dl, dl
  002f5	74 3e		 je	 SHORT $LN51@encodeStri@2
  002f7	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002fa	88 50 2d	 mov	 BYTE PTR [eax+45], dl
  002fd	8a 51 2e	 mov	 dl, BYTE PTR [ecx+46]
  00300	84 d2		 test	 dl, dl
  00302	74 29		 je	 SHORT $LN50@encodeStri@2
  00304	32 d3		 xor	 dl, bl
  00306	88 50 2e	 mov	 BYTE PTR [eax+46], dl
  00309	8a 51 2f	 mov	 dl, BYTE PTR [ecx+47]
  0030c	84 d2		 test	 dl, dl
  0030e	74 14		 je	 SHORT $LN49@encodeStri@2
  00310	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00313	88 50 2f	 mov	 BYTE PTR [eax+47], dl
  00316	8a 49 30	 mov	 cl, BYTE PTR [ecx+48]
  00319	80 f1 ed	 xor	 cl, -19			; ffffffedH
  0031c	88 48 30	 mov	 BYTE PTR [eax+48], cl
  0031f	e9 5d 01 00 00	 jmp	 $LN1@encodeStri@2
$LN49@encodeStri@2:
  00324	c6 40 2f ea	 mov	 BYTE PTR [eax+47], -22	; ffffffeaH
  00328	e9 54 01 00 00	 jmp	 $LN1@encodeStri@2
$LN50@encodeStri@2:
  0032d	88 58 2e	 mov	 BYTE PTR [eax+46], bl
  00330	e9 4c 01 00 00	 jmp	 $LN1@encodeStri@2
$LN51@encodeStri@2:
  00335	c6 40 2d ec	 mov	 BYTE PTR [eax+45], -20	; ffffffecH
  00339	e9 43 01 00 00	 jmp	 $LN1@encodeStri@2
$LN52@encodeStri@2:
  0033e	c6 40 2c ed	 mov	 BYTE PTR [eax+44], -19	; ffffffedH
  00342	e9 3a 01 00 00	 jmp	 $LN1@encodeStri@2
$LN53@encodeStri@2:
  00347	c6 40 2b ea	 mov	 BYTE PTR [eax+43], -22	; ffffffeaH
  0034b	e9 31 01 00 00	 jmp	 $LN1@encodeStri@2
$LN54@encodeStri@2:
  00350	88 58 2a	 mov	 BYTE PTR [eax+42], bl
  00353	e9 29 01 00 00	 jmp	 $LN1@encodeStri@2
$LN55@encodeStri@2:
  00358	c6 40 29 ec	 mov	 BYTE PTR [eax+41], -20	; ffffffecH
  0035c	e9 20 01 00 00	 jmp	 $LN1@encodeStri@2
$LN56@encodeStri@2:
  00361	c6 40 28 ed	 mov	 BYTE PTR [eax+40], -19	; ffffffedH
  00365	e9 17 01 00 00	 jmp	 $LN1@encodeStri@2
$LN57@encodeStri@2:
  0036a	c6 40 27 ea	 mov	 BYTE PTR [eax+39], -22	; ffffffeaH
  0036e	e9 0e 01 00 00	 jmp	 $LN1@encodeStri@2
$LN58@encodeStri@2:
  00373	88 58 26	 mov	 BYTE PTR [eax+38], bl
  00376	e9 06 01 00 00	 jmp	 $LN1@encodeStri@2
$LN59@encodeStri@2:
  0037b	c6 40 25 ec	 mov	 BYTE PTR [eax+37], -20	; ffffffecH
  0037f	e9 fd 00 00 00	 jmp	 $LN1@encodeStri@2
$LN60@encodeStri@2:
  00384	c6 40 24 ed	 mov	 BYTE PTR [eax+36], -19	; ffffffedH
  00388	e9 f4 00 00 00	 jmp	 $LN1@encodeStri@2
$LN61@encodeStri@2:
  0038d	c6 40 23 ea	 mov	 BYTE PTR [eax+35], -22	; ffffffeaH
  00391	e9 eb 00 00 00	 jmp	 $LN1@encodeStri@2
$LN62@encodeStri@2:
  00396	88 58 22	 mov	 BYTE PTR [eax+34], bl
  00399	e9 e3 00 00 00	 jmp	 $LN1@encodeStri@2
$LN63@encodeStri@2:
  0039e	c6 40 21 ec	 mov	 BYTE PTR [eax+33], -20	; ffffffecH
  003a2	e9 da 00 00 00	 jmp	 $LN1@encodeStri@2
$LN64@encodeStri@2:
  003a7	c6 40 20 ed	 mov	 BYTE PTR [eax+32], -19	; ffffffedH
  003ab	e9 d1 00 00 00	 jmp	 $LN1@encodeStri@2
$LN65@encodeStri@2:
  003b0	c6 40 1f ea	 mov	 BYTE PTR [eax+31], -22	; ffffffeaH
  003b4	e9 c8 00 00 00	 jmp	 $LN1@encodeStri@2
$LN66@encodeStri@2:
  003b9	88 58 1e	 mov	 BYTE PTR [eax+30], bl
  003bc	e9 c0 00 00 00	 jmp	 $LN1@encodeStri@2
$LN67@encodeStri@2:
  003c1	c6 40 1d ec	 mov	 BYTE PTR [eax+29], -20	; ffffffecH
  003c5	e9 b7 00 00 00	 jmp	 $LN1@encodeStri@2
$LN68@encodeStri@2:
  003ca	c6 40 1c ed	 mov	 BYTE PTR [eax+28], -19	; ffffffedH
  003ce	e9 ae 00 00 00	 jmp	 $LN1@encodeStri@2
$LN69@encodeStri@2:
  003d3	c6 40 1b ea	 mov	 BYTE PTR [eax+27], -22	; ffffffeaH
  003d7	e9 a5 00 00 00	 jmp	 $LN1@encodeStri@2
$LN70@encodeStri@2:
  003dc	88 58 1a	 mov	 BYTE PTR [eax+26], bl
  003df	e9 9d 00 00 00	 jmp	 $LN1@encodeStri@2
$LN71@encodeStri@2:
  003e4	c6 40 19 ec	 mov	 BYTE PTR [eax+25], -20	; ffffffecH
  003e8	e9 94 00 00 00	 jmp	 $LN1@encodeStri@2
$LN72@encodeStri@2:
  003ed	c6 40 18 ed	 mov	 BYTE PTR [eax+24], -19	; ffffffedH
  003f1	e9 8b 00 00 00	 jmp	 $LN1@encodeStri@2
$LN73@encodeStri@2:
  003f6	c6 40 17 ea	 mov	 BYTE PTR [eax+23], -22	; ffffffeaH
  003fa	e9 82 00 00 00	 jmp	 $LN1@encodeStri@2
$LN74@encodeStri@2:
  003ff	88 58 16	 mov	 BYTE PTR [eax+22], bl
  00402	eb 7d		 jmp	 SHORT $LN1@encodeStri@2
$LN75@encodeStri@2:
  00404	c6 40 15 ec	 mov	 BYTE PTR [eax+21], -20	; ffffffecH
  00408	eb 77		 jmp	 SHORT $LN1@encodeStri@2
$LN76@encodeStri@2:
  0040a	c6 40 14 ed	 mov	 BYTE PTR [eax+20], -19	; ffffffedH
  0040e	eb 71		 jmp	 SHORT $LN1@encodeStri@2
$LN77@encodeStri@2:
  00410	c6 40 13 ea	 mov	 BYTE PTR [eax+19], -22	; ffffffeaH
  00414	eb 6b		 jmp	 SHORT $LN1@encodeStri@2
$LN78@encodeStri@2:
  00416	88 58 12	 mov	 BYTE PTR [eax+18], bl
  00419	eb 66		 jmp	 SHORT $LN1@encodeStri@2
$LN79@encodeStri@2:
  0041b	c6 40 11 ec	 mov	 BYTE PTR [eax+17], -20	; ffffffecH
  0041f	eb 60		 jmp	 SHORT $LN1@encodeStri@2
$LN80@encodeStri@2:
  00421	c6 40 10 ed	 mov	 BYTE PTR [eax+16], -19	; ffffffedH
  00425	eb 5a		 jmp	 SHORT $LN1@encodeStri@2
$LN81@encodeStri@2:
  00427	c6 40 0f ea	 mov	 BYTE PTR [eax+15], -22	; ffffffeaH
  0042b	eb 54		 jmp	 SHORT $LN1@encodeStri@2
$LN82@encodeStri@2:
  0042d	88 58 0e	 mov	 BYTE PTR [eax+14], bl
  00430	eb 4f		 jmp	 SHORT $LN1@encodeStri@2
$LN83@encodeStri@2:
  00432	c6 40 0d ec	 mov	 BYTE PTR [eax+13], -20	; ffffffecH
  00436	eb 49		 jmp	 SHORT $LN1@encodeStri@2
$LN84@encodeStri@2:
  00438	c6 40 0c ed	 mov	 BYTE PTR [eax+12], -19	; ffffffedH
  0043c	eb 43		 jmp	 SHORT $LN1@encodeStri@2
$LN85@encodeStri@2:
  0043e	c6 40 0b ea	 mov	 BYTE PTR [eax+11], -22	; ffffffeaH
  00442	eb 3d		 jmp	 SHORT $LN1@encodeStri@2
$LN86@encodeStri@2:
  00444	88 58 0a	 mov	 BYTE PTR [eax+10], bl
  00447	eb 38		 jmp	 SHORT $LN1@encodeStri@2
$LN87@encodeStri@2:
  00449	c6 40 09 ec	 mov	 BYTE PTR [eax+9], -20	; ffffffecH
  0044d	eb 32		 jmp	 SHORT $LN1@encodeStri@2
$LN88@encodeStri@2:
  0044f	c6 40 08 ed	 mov	 BYTE PTR [eax+8], -19	; ffffffedH
  00453	eb 2c		 jmp	 SHORT $LN1@encodeStri@2
$LN89@encodeStri@2:
  00455	c6 40 07 ea	 mov	 BYTE PTR [eax+7], -22	; ffffffeaH
  00459	eb 26		 jmp	 SHORT $LN1@encodeStri@2
$LN90@encodeStri@2:
  0045b	88 58 06	 mov	 BYTE PTR [eax+6], bl
  0045e	eb 21		 jmp	 SHORT $LN1@encodeStri@2
$LN91@encodeStri@2:
  00460	c6 40 05 ec	 mov	 BYTE PTR [eax+5], -20	; ffffffecH
  00464	eb 1b		 jmp	 SHORT $LN1@encodeStri@2
$LN92@encodeStri@2:
  00466	c6 40 04 ed	 mov	 BYTE PTR [eax+4], -19	; ffffffedH
  0046a	eb 15		 jmp	 SHORT $LN1@encodeStri@2
$LN93@encodeStri@2:
  0046c	c6 40 03 ea	 mov	 BYTE PTR [eax+3], -22	; ffffffeaH
  00470	eb 0f		 jmp	 SHORT $LN1@encodeStri@2
$LN94@encodeStri@2:
  00472	c6 40 02 eb	 mov	 BYTE PTR [eax+2], -21	; ffffffebH
  00476	eb 09		 jmp	 SHORT $LN1@encodeStri@2
$LN95@encodeStri@2:
  00478	c6 40 01 ec	 mov	 BYTE PTR [eax+1], -20	; ffffffecH
  0047c	eb 03		 jmp	 SHORT $LN1@encodeStri@2
$LN96@encodeStri@2:
  0047e	c6 00 ed	 mov	 BYTE PTR [eax], -19	; ffffffedH
$LN1@encodeStri@2:
  00481	6a 06		 push	 6
  00483	5a		 pop	 edx
  00484	8b c8		 mov	 ecx, eax
  00486	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0
  0048a	5b		 pop	 ebx
$LL104@encodeStri@2:
  0048b	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  00491	83 c1 04	 add	 ecx, 4
  00494	4a		 dec	 edx
  00495	75 f4		 jne	 SHORT $LL104@encodeStri@2
  00497	56		 push	 esi
  00498	6a 18		 push	 24			; 00000018H
  0049a	5e		 pop	 esi
$LL101@encodeStri@2:
  0049b	8b ce		 mov	 ecx, esi
  0049d	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  004a3	79 05		 jns	 SHORT $LN111@encodeStri@2
  004a5	49		 dec	 ecx
  004a6	83 c9 fc	 or	 ecx, -4			; fffffffcH
  004a9	41		 inc	 ecx
$LN111@encodeStri@2:
  004aa	b2 ed		 mov	 dl, -19			; ffffffedH
  004ac	2a d1		 sub	 dl, cl
  004ae	30 14 06	 xor	 BYTE PTR [esi+eax], dl
  004b1	46		 inc	 esi
  004b2	83 fe 1b	 cmp	 esi, 27			; 0000001bH
  004b5	7c e4		 jl	 SHORT $LL101@encodeStri@2
  004b7	5e		 pop	 esi

; 217  : 		return e;
; 218  : 	}

  004b8	5d		 pop	 ebp
  004b9	c2 08 00	 ret	 8
??$encodeString@$0BM@@ioINILoader_e@@AAEPADAAY0BM@$$CBDPAD@Z ENDP ; ioINILoader_e::encodeString<28>
_TEXT	ENDS
PUBLIC	??$construct@AAUGuildUser@ioGuildData@@@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@AAU23@@Z ; std::allocator<ioGuildData::GuildUser>::construct<ioGuildData::GuildUser &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$construct@AAUGuildUser@ioGuildData@@@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@AAU23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAUGuildUser@ioGuildData@@@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@AAU23@@Z$0
__ehfuncinfo$??$construct@AAUGuildUser@ioGuildData@@@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@AAU23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAUGuildUser@ioGuildData@@@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@AAU23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$construct@AAUGuildUser@ioGuildData@@@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@AAU23@@Z
_TEXT	SEGMENT
$T520577 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUGuildUser@ioGuildData@@@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@AAU23@@Z PROC ; std::allocator<ioGuildData::GuildUser>::construct<ioGuildData::GuildUser &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$construct@AAUGuildUser@ioGuildData@@@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@AAU23@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0000f	89 4d f0	 mov	 DWORD PTR $T520577[ebp], ecx
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 c9		 test	 ecx, ecx
  00018	74 08		 je	 SHORT $LN3@construct@10
  0001a	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0GuildUser@ioGuildData@@QAE@ABU01@@Z
$LN3@construct@10:

; 209  : 		}

  00022	e8 00 00 00 00	 call	 __EH_epilog3
  00027	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAUGuildUser@ioGuildData@@@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@AAU23@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T520577[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$??$construct@AAUGuildUser@ioGuildData@@@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@AAU23@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@AAUGuildUser@ioGuildData@@@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@AAU23@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@AAUGuildUser@ioGuildData@@@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@AAU23@@Z ENDP ; std::allocator<ioGuildData::GuildUser>::construct<ioGuildData::GuildUser &>
PUBLIC	??$_Move@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioGuildData::GuildUser *,ioGuildData::GuildUser *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<ioGuildData::GuildUser *,ioGuildData::GuildUser *>, COMDAT

; 2512 : 	{	// move [_First, _Last) to [_Dest, ...), arbitrary iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 10		 jmp	 SHORT $LN11@Move
$LL3@Move:

; 2514 : 		*_Dest = _STD move(*_First);

  00009	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 ??4GuildUser@ioGuildData@@QAEAAU01@ABU01@@Z
  00012	83 45 10 38	 add	 DWORD PTR __Dest$[ebp], 56 ; 00000038H
  00016	83 c6 38	 add	 esi, 56			; 00000038H
$LN11@Move:

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

  00019	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  0001c	75 eb		 jne	 SHORT $LL3@Move

; 2515 : 	return (_Dest);

  0001e	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	5e		 pop	 esi

; 2516 : 	}

  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??$_Move@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<ioGuildData::GuildUser *,ioGuildData::GuildUser *>
_TEXT	ENDS
PUBLIC	??$construct@AAUInvitationUser@ioGuildInfo@@@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@AAU23@@Z ; std::allocator<ioGuildInfo::InvitationUser>::construct<ioGuildInfo::InvitationUser &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??$construct@AAUInvitationUser@ioGuildInfo@@@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@AAU23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAUInvitationUser@ioGuildInfo@@@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@AAU23@@Z$0
__ehfuncinfo$??$construct@AAUInvitationUser@ioGuildInfo@@@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@AAU23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAUInvitationUser@ioGuildInfo@@@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@AAU23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$construct@AAUInvitationUser@ioGuildInfo@@@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@AAU23@@Z
_TEXT	SEGMENT
$T520605 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUInvitationUser@ioGuildInfo@@@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@AAU23@@Z PROC ; std::allocator<ioGuildInfo::InvitationUser>::construct<ioGuildInfo::InvitationUser &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$construct@AAUInvitationUser@ioGuildInfo@@@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@AAU23@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  0000c	8b 75 08	 mov	 esi, DWORD PTR __Ptr$[ebp]
  0000f	89 75 f0	 mov	 DWORD PTR $T520605[ebp], esi
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 f6		 test	 esi, esi
  00018	74 12		 je	 SHORT $LN3@construct@11
  0001a	8b 7d 0c	 mov	 edi, DWORD PTR __Val$[ebp]
  0001d	57		 push	 edi
  0001e	8b ce		 mov	 ecx, esi
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  00026	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00029	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN3@construct@11:

; 209  : 		}

  0002c	e8 00 00 00 00	 call	 __EH_epilog3
  00031	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAUInvitationUser@ioGuildInfo@@@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@AAU23@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T520605[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$??$construct@AAUInvitationUser@ioGuildInfo@@@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@AAU23@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@AAUInvitationUser@ioGuildInfo@@@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@AAU23@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@AAUInvitationUser@ioGuildInfo@@@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@AAU23@@Z ENDP ; std::allocator<ioGuildInfo::InvitationUser>::construct<ioGuildInfo::InvitationUser &>
PUBLIC	??$_Move@PAUInvitationUser@ioGuildInfo@@PAU12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioGuildInfo::InvitationUser *,ioGuildInfo::InvitationUser *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAUInvitationUser@ioGuildInfo@@PAU12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAUInvitationUser@ioGuildInfo@@PAU12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<ioGuildInfo::InvitationUser *,ioGuildInfo::InvitationUser *>, COMDAT

; 2512 : 	{	// move [_First, _Last) to [_Dest, ...), arbitrary iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 1a		 jmp	 SHORT $LN13@Move@2
$LL3@Move@2:

; 2514 : 		*_Dest = _STD move(*_First);

  00009	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000c	56		 push	 esi
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
  00013	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00016	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00019	83 45 10 14	 add	 DWORD PTR __Dest$[ebp], 20 ; 00000014H
  0001d	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  00020	83 c6 14	 add	 esi, 20			; 00000014H
$LN13@Move@2:

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

  00023	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00026	75 e1		 jne	 SHORT $LL3@Move@2

; 2515 : 	return (_Dest);

  00028	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0002b	5e		 pop	 esi

; 2516 : 	}

  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
??$_Move@PAUInvitationUser@ioGuildInfo@@PAU12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<ioGuildInfo::InvitationUser *,ioGuildInfo::InvitationUser *>
_TEXT	ENDS
PUBLIC	??$_Move@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<GashaponPresent *,GashaponPresent *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Move@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<GashaponPresent *,GashaponPresent *>, COMDAT

; 2512 : 	{	// move [_First, _Last) to [_Dest, ...), arbitrary iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00009	74 1a		 je	 SHORT $LN10@Move@3
  0000b	56		 push	 esi
  0000c	57		 push	 edi
$LL3@Move@3:

; 2514 : 		*_Dest = _STD move(*_First);

  0000d	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  00010	83 45 10 14	 add	 DWORD PTR __Dest$[ebp], 20 ; 00000014H
  00014	8b f0		 mov	 esi, eax
  00016	6a 05		 push	 5
  00018	83 c0 14	 add	 eax, 20			; 00000014H
  0001b	59		 pop	 ecx
  0001c	f3 a5		 rep movsd
  0001e	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00021	75 ea		 jne	 SHORT $LL3@Move@3
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
$LN10@Move@3:

; 2515 : 	return (_Dest);

  00025	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 2516 : 	}

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$_Move@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<GashaponPresent *,GashaponPresent *>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAPAVioGuildData@@PAPAV1@V?$allocator@PAVioGuildData@@@std@@@std@@YAPAPAVioGuildData@@PAPAV1@00AAV?$allocator@PAVioGuildData@@@0@@Z ; std::_Uninitialized_move<ioGuildData * *,ioGuildData * *,std::allocator<ioGuildData *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAPAVioGuildData@@PAPAV1@V?$allocator@PAVioGuildData@@@std@@@std@@YAPAPAVioGuildData@@PAPAV1@00AAV?$allocator@PAVioGuildData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVioGuildData@@PAPAV1@V?$allocator@PAVioGuildData@@@std@@@std@@YAPAPAVioGuildData@@PAPAV1@00AAV?$allocator@PAVioGuildData@@@0@@Z PROC ; std::_Uninitialized_move<ioGuildData * *,ioGuildData * *,std::allocator<ioGuildData *> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2
  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 472  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVioGuildData@@PAPAV1@V?$allocator@PAVioGuildData@@@std@@@std@@YAPAPAVioGuildData@@PAPAV1@00AAV?$allocator@PAVioGuildData@@@0@@Z ENDP ; std::_Uninitialized_move<ioGuildData * *,ioGuildData * *,std::allocator<ioGuildData *> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAPAUGuildAttendRwardInfo@@PAPAU1@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildAttendRwardInfo@@@0@@Z ; std::_Uninitialized_move<GuildAttendRwardInfo * *,GuildAttendRwardInfo * *,std::allocator<GuildAttendRwardInfo *> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Uninitialized_move@PAPAUGuildAttendRwardInfo@@PAPAU1@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildAttendRwardInfo@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUGuildAttendRwardInfo@@PAPAU1@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildAttendRwardInfo@@@0@@Z PROC ; std::_Uninitialized_move<GuildAttendRwardInfo * *,GuildAttendRwardInfo * *,std::allocator<GuildAttendRwardInfo *> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2
  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 472  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAUGuildAttendRwardInfo@@PAPAU1@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildAttendRwardInfo@@@0@@Z ENDP ; std::_Uninitialized_move<GuildAttendRwardInfo * *,GuildAttendRwardInfo * *,std::allocator<GuildAttendRwardInfo *> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAPAUGuildRankRwardInfo@@PAPAU1@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildRankRwardInfo@@@0@@Z ; std::_Uninitialized_move<GuildRankRwardInfo * *,GuildRankRwardInfo * *,std::allocator<GuildRankRwardInfo *> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Uninitialized_move@PAPAUGuildRankRwardInfo@@PAPAU1@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildRankRwardInfo@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUGuildRankRwardInfo@@PAPAU1@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildRankRwardInfo@@@0@@Z PROC ; std::_Uninitialized_move<GuildRankRwardInfo * *,GuildRankRwardInfo * *,std::allocator<GuildRankRwardInfo *> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2
  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 472  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAUGuildRankRwardInfo@@PAPAU1@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildRankRwardInfo@@@0@@Z ENDP ; std::_Uninitialized_move<GuildRankRwardInfo * *,GuildRankRwardInfo * *,std::allocator<GuildRankRwardInfo *> >
_TEXT	ENDS
PUBLIC	??$_Construct@UGuildUser@ioGuildData@@ABU12@@std@@YAXPAUGuildUser@ioGuildData@@ABU12@@Z ; std::_Construct<ioGuildData::GuildUser,ioGuildData::GuildUser const &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Construct@UGuildUser@ioGuildData@@ABU12@@std@@YAXPAUGuildUser@ioGuildData@@ABU12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@UGuildUser@ioGuildData@@ABU12@@std@@YAXPAUGuildUser@ioGuildData@@ABU12@@Z$0
__ehfuncinfo$??$_Construct@UGuildUser@ioGuildData@@ABU12@@std@@YAXPAUGuildUser@ioGuildData@@ABU12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@UGuildUser@ioGuildData@@ABU12@@std@@YAXPAUGuildUser@ioGuildData@@ABU12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Construct@UGuildUser@ioGuildData@@ABU12@@std@@YAXPAUGuildUser@ioGuildData@@ABU12@@Z
_TEXT	SEGMENT
$T520690 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$ = 8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UGuildUser@ioGuildData@@ABU12@@std@@YAXPAUGuildUser@ioGuildData@@ABU12@@Z PROC ; std::_Construct<ioGuildData::GuildUser,ioGuildData::GuildUser const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Construct@UGuildUser@ioGuildData@@ABU12@@std@@YAXPAUGuildUser@ioGuildData@@ABU12@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 47   : 	void _FARQ *_Vptr = _Ptr;

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0000f	89 4d 08	 mov	 DWORD PTR __Vptr$[ebp], ecx

; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00012	89 4d f0	 mov	 DWORD PTR $T520690[ebp], ecx
  00015	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00019	85 c9		 test	 ecx, ecx
  0001b	74 08		 je	 SHORT $LN3@Construct@5
  0001d	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  00020	e8 00 00 00 00	 call	 ??0GuildUser@ioGuildData@@QAE@ABU01@@Z
$LN3@Construct@5:

; 49   : 	}

  00025	e8 00 00 00 00	 call	 __EH_epilog3
  0002a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@UGuildUser@ioGuildData@@ABU12@@std@@YAXPAUGuildUser@ioGuildData@@ABU12@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Vptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T520690[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$??$_Construct@UGuildUser@ioGuildData@@ABU12@@std@@YAXPAUGuildUser@ioGuildData@@ABU12@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Construct@UGuildUser@ioGuildData@@ABU12@@std@@YAXPAUGuildUser@ioGuildData@@ABU12@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Construct@UGuildUser@ioGuildData@@ABU12@@std@@YAXPAUGuildUser@ioGuildData@@ABU12@@Z ENDP ; std::_Construct<ioGuildData::GuildUser,ioGuildData::GuildUser const &>
PUBLIC	??$_Construct@UInvitationUser@ioGuildInfo@@ABU12@@std@@YAXPAUInvitationUser@ioGuildInfo@@ABU12@@Z ; std::_Construct<ioGuildInfo::InvitationUser,ioGuildInfo::InvitationUser const &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??$_Construct@UInvitationUser@ioGuildInfo@@ABU12@@std@@YAXPAUInvitationUser@ioGuildInfo@@ABU12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@UInvitationUser@ioGuildInfo@@ABU12@@std@@YAXPAUInvitationUser@ioGuildInfo@@ABU12@@Z$0
__ehfuncinfo$??$_Construct@UInvitationUser@ioGuildInfo@@ABU12@@std@@YAXPAUInvitationUser@ioGuildInfo@@ABU12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@UInvitationUser@ioGuildInfo@@ABU12@@std@@YAXPAUInvitationUser@ioGuildInfo@@ABU12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Construct@UInvitationUser@ioGuildInfo@@ABU12@@std@@YAXPAUInvitationUser@ioGuildInfo@@ABU12@@Z
_TEXT	SEGMENT
$T520709 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$ = 8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UInvitationUser@ioGuildInfo@@ABU12@@std@@YAXPAUInvitationUser@ioGuildInfo@@ABU12@@Z PROC ; std::_Construct<ioGuildInfo::InvitationUser,ioGuildInfo::InvitationUser const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Construct@UInvitationUser@ioGuildInfo@@ABU12@@std@@YAXPAUInvitationUser@ioGuildInfo@@ABU12@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 47   : 	void _FARQ *_Vptr = _Ptr;

  0000c	8b 75 08	 mov	 esi, DWORD PTR __Ptr$[ebp]
  0000f	89 75 08	 mov	 DWORD PTR __Vptr$[ebp], esi

; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00012	89 75 f0	 mov	 DWORD PTR $T520709[ebp], esi
  00015	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00019	85 f6		 test	 esi, esi
  0001b	74 12		 je	 SHORT $LN3@Construct@6
  0001d	8b 7d 0c	 mov	 edi, DWORD PTR __Val$[ebp]
  00020	57		 push	 edi
  00021	8b ce		 mov	 ecx, esi
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN3@Construct@6:

; 49   : 	}

  0002f	e8 00 00 00 00	 call	 __EH_epilog3
  00034	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@UInvitationUser@ioGuildInfo@@ABU12@@std@@YAXPAUInvitationUser@ioGuildInfo@@ABU12@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Vptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T520709[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$??$_Construct@UInvitationUser@ioGuildInfo@@ABU12@@std@@YAXPAUInvitationUser@ioGuildInfo@@ABU12@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Construct@UInvitationUser@ioGuildInfo@@ABU12@@std@@YAXPAUInvitationUser@ioGuildInfo@@ABU12@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Construct@UInvitationUser@ioGuildInfo@@ABU12@@std@@YAXPAUInvitationUser@ioGuildInfo@@ABU12@@Z ENDP ; std::_Construct<ioGuildInfo::InvitationUser,ioGuildInfo::InvitationUser const &>
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
_TEXT	ENDS
PUBLIC	??$?0AAPAUGuildUser@ioGuildData@@AAPAU01@@?$pair@PAUGuildUser@ioGuildData@@PAU12@@std@@QAE@AAPAUGuildUser@ioGuildData@@0@Z ; std::pair<ioGuildData::GuildUser *,ioGuildData::GuildUser *>::pair<ioGuildData::GuildUser *,ioGuildData::GuildUser *><ioGuildData::GuildUser * &,ioGuildData::GuildUser * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAPAUGuildUser@ioGuildData@@AAPAU01@@?$pair@PAUGuildUser@ioGuildData@@PAU12@@std@@QAE@AAPAUGuildUser@ioGuildData@@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAPAUGuildUser@ioGuildData@@AAPAU01@@?$pair@PAUGuildUser@ioGuildData@@PAU12@@std@@QAE@AAPAUGuildUser@ioGuildData@@0@Z PROC ; std::pair<ioGuildData::GuildUser *,ioGuildData::GuildUser *>::pair<ioGuildData::GuildUser *,ioGuildData::GuildUser *><ioGuildData::GuildUser * &,ioGuildData::GuildUser * &>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00011	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 248  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAPAUGuildUser@ioGuildData@@AAPAU01@@?$pair@PAUGuildUser@ioGuildData@@PAU12@@std@@QAE@AAPAUGuildUser@ioGuildData@@0@Z ENDP ; std::pair<ioGuildData::GuildUser *,ioGuildData::GuildUser *>::pair<ioGuildData::GuildUser *,ioGuildData::GuildUser *><ioGuildData::GuildUser * &,ioGuildData::GuildUser * &>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@AAV3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@AAV2@@Z ; std::_Cons_val<std::allocator<GashaponPresent>,GashaponPresent,GashaponPresent &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@AAV3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@AAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@AAV3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@AAV2@@Z PROC ; std::_Cons_val<std::allocator<GashaponPresent>,GashaponPresent,GashaponPresent &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00004	8b 7d 0c	 mov	 edi, DWORD PTR __Pdest$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN7@Cons_val@5
  0000b	56		 push	 esi
  0000c	8b 75 10	 mov	 esi, DWORD PTR __Src$[ebp]
  0000f	6a 05		 push	 5
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN7@Cons_val@5:
  00015	5f		 pop	 edi

; 281  : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@AAV3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@AAV2@@Z ENDP ; std::_Cons_val<std::allocator<GashaponPresent>,GashaponPresent,GashaponPresent &>
_TEXT	ENDS
PUBLIC	??$_Destroy@UGuildUser@ioGuildData@@@std@@YAXPAUGuildUser@ioGuildData@@@Z ; std::_Destroy<ioGuildData::GuildUser>
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy@UGuildUser@ioGuildData@@@std@@YAXPAUGuildUser@ioGuildData@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UGuildUser@ioGuildData@@@std@@YAXPAUGuildUser@ioGuildData@@@Z PROC ; std::_Destroy<ioGuildData::GuildUser>, COMDAT

; 62   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	_Ptr->~_Ty();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]

; 64   : 	}

  00006	5d		 pop	 ebp

; 63   : 	_Ptr->~_Ty();

  00007	e9 00 00 00 00	 jmp	 ??1GuildUser@ioGuildData@@QAE@XZ
??$_Destroy@UGuildUser@ioGuildData@@@std@@YAXPAUGuildUser@ioGuildData@@@Z ENDP ; std::_Destroy<ioGuildData::GuildUser>
_TEXT	ENDS
PUBLIC	??$_Destroy@UInvitationUser@ioGuildInfo@@@std@@YAXPAUInvitationUser@ioGuildInfo@@@Z ; std::_Destroy<ioGuildInfo::InvitationUser>
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy@UInvitationUser@ioGuildInfo@@@std@@YAXPAUInvitationUser@ioGuildInfo@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UInvitationUser@ioGuildInfo@@@std@@YAXPAUInvitationUser@ioGuildInfo@@@Z PROC ; std::_Destroy<ioGuildInfo::InvitationUser>, COMDAT

; 62   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	_Ptr->~_Ty();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]

; 64   : 	}

  00006	5d		 pop	 ebp

; 63   : 	_Ptr->~_Ty();

  00007	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
??$_Destroy@UInvitationUser@ioGuildInfo@@@std@@YAXPAUInvitationUser@ioGuildInfo@@@Z ENDP ; std::_Destroy<ioGuildInfo::InvitationUser>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@$$QAU34@@Z ; std::allocator<ioGuildData::GuildUser>::construct
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@$$QAU34@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@$$QAU34@@Z$0
__ehfuncinfo$?construct@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@$$QAU34@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@$$QAU34@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@$$QAU34@@Z
_TEXT	SEGMENT
$T520805 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@$$QAU34@@Z PROC ; std::allocator<ioGuildData::GuildUser>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?construct@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@$$QAU34@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0000f	89 4d f0	 mov	 DWORD PTR $T520805[ebp], ecx
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 c9		 test	 ecx, ecx
  00018	74 08		 je	 SHORT $LN3@construct@12
  0001a	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0GuildUser@ioGuildData@@QAE@ABU01@@Z
$LN3@construct@12:

; 203  : 		}

  00022	e8 00 00 00 00	 call	 __EH_epilog3
  00027	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@$$QAU34@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T520805[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$?construct@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@$$QAU34@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?construct@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@$$QAU34@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@$$QAU34@@Z ENDP ; std::allocator<ioGuildData::GuildUser>::construct
PUBLIC	?construct@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@$$QAU34@@Z ; std::allocator<ioGuildInfo::InvitationUser>::construct
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@$$QAU34@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@$$QAU34@@Z$0
__ehfuncinfo$?construct@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@$$QAU34@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@$$QAU34@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@$$QAU34@@Z
_TEXT	SEGMENT
$T520824 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@$$QAU34@@Z PROC ; std::allocator<ioGuildInfo::InvitationUser>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?construct@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@$$QAU34@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  0000c	8b 75 08	 mov	 esi, DWORD PTR __Ptr$[ebp]
  0000f	89 75 f0	 mov	 DWORD PTR $T520824[ebp], esi
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 f6		 test	 esi, esi
  00018	74 12		 je	 SHORT $LN3@construct@13
  0001a	8b 7d 0c	 mov	 edi, DWORD PTR __Val$[ebp]
  0001d	57		 push	 edi
  0001e	8b ce		 mov	 ecx, esi
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  00026	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00029	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN3@construct@13:

; 203  : 		}

  0002c	e8 00 00 00 00	 call	 __EH_epilog3
  00031	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@$$QAU34@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T520824[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$?construct@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@$$QAU34@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?construct@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@$$QAU34@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@$$QAU34@@Z ENDP ; std::allocator<ioGuildInfo::InvitationUser>::construct
PUBLIC	??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z ; std::swap<ioGuildData::GuildUser>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z$0
__ehfuncinfo$??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z
_TEXT	SEGMENT
__Tmp$ = -68						; size = 56
__$EHRec$ = -12						; size = 12
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z PROC ; std::swap<ioGuildData::GuildUser>, COMDAT

; 101  : 	{	// exchange values stored at _Left and _Right

  00000	6a 38		 push	 56			; 00000038H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 102  : 	_Ty _Tmp = _Move(_Left);

  0000c	ff 75 08	 push	 DWORD PTR __Left$[ebp]
  0000f	8d 4d bc	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00012	e8 00 00 00 00	 call	 ??0GuildUser@ioGuildData@@QAE@ABU01@@Z

; 103  : 	_Left = _Move(_Right);

  00017	ff 75 0c	 push	 DWORD PTR __Right$[ebp]
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00021	e8 00 00 00 00	 call	 ??4GuildUser@ioGuildData@@QAEAAU01@ABU01@@Z

; 104  : 	_Right = _Move(_Tmp);

  00026	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00029	8d 45 bc	 lea	 eax, DWORD PTR __Tmp$[ebp]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??4GuildUser@ioGuildData@@QAEAAU01@ABU01@@Z

; 105  : 	}

  00032	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00036	8d 4d bc	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00039	e8 00 00 00 00	 call	 ??1GuildUser@ioGuildData@@QAE@XZ
  0003e	e8 00 00 00 00	 call	 __EH_epilog3
  00043	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z$0:
  00000	8d 4d bc	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1GuildUser@ioGuildData@@QAE@XZ
__ehhandler$??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z ENDP ; std::swap<ioGuildData::GuildUser>
PUBLIC	??$_Move_backward@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00@Z ; std::_Move_backward<ioGuildData::GuildUser *,ioGuildData::GuildUser *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move_backward@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00@Z
_TEXT	SEGMENT
__Cat$520868 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move_backward@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00@Z PROC ; std::_Move_backward<ioGuildData::GuildUser *,ioGuildData::GuildUser *>, COMDAT

; 2638 : 	{	// move [_First, _Last) backwards to [..., _Dest), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2639 : 	return (_Move_backward(_First, _Last,
; 2640 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$520868[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move_backward@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move_backward<ioGuildData::GuildUser *,ioGuildData::GuildUser *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2641 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move_backward@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00@Z ENDP ; std::_Move_backward<ioGuildData::GuildUser *,ioGuildData::GuildUser *>
_TEXT	ENDS
PUBLIC	??$_Push_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@HH$$QAU12@VGuildUserSort@2@@Z ; std::_Push_heap<ioGuildData::GuildUser *,int,ioGuildData::GuildUser,ioGuildData::GuildUserSort>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
;	COMDAT ??$_Push_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@HH$$QAU12@VGuildUserSort@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Hole$ = 12						; size = 4
__Top$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Push_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@HH$$QAU12@VGuildUserSort@2@@Z PROC ; std::_Push_heap<ioGuildData::GuildUser *,int,ioGuildData::GuildUser,ioGuildData::GuildUserSort>, COMDAT

; 2455 : 	{	// percolate _Hole to _Top or where _Val belongs, using operator<

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2456 : 	for (_Diff _Idx = (_Hole - 1) / 2;

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Hole$[ebp]
  00006	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00009	99		 cdq
  0000a	53		 push	 ebx

; 2457 : 		_Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val);
; 2458 : 		_Idx = (_Hole - 1) / 2)

  0000b	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  0000e	2b c2		 sub	 eax, edx
  00010	56		 push	 esi
  00011	8b f0		 mov	 esi, eax
  00013	d1 fe		 sar	 esi, 1
  00015	39 4d 10	 cmp	 DWORD PTR __Top$[ebp], ecx
  00018	7d 3d		 jge	 SHORT $LN19@Push_heap
  0001a	57		 push	 edi
$LL3@Push_heap:
  0001b	8b 7d 14	 mov	 edi, DWORD PTR __Val$[ebp]
  0001e	8b 7f 10	 mov	 edi, DWORD PTR [edi+16]
  00021	8b c6		 mov	 eax, esi
  00023	6b c0 38	 imul	 eax, 56			; 00000038H
  00026	03 c3		 add	 eax, ebx
  00028	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0002b	3b d7		 cmp	 edx, edi
  0002d	7f 0b		 jg	 SHORT $LN18@Push_heap
  0002f	75 25		 jne	 SHORT $LN20@Push_heap
  00031	8b 10		 mov	 edx, DWORD PTR [eax]
  00033	8b 7d 14	 mov	 edi, DWORD PTR __Val$[ebp]
  00036	3b 17		 cmp	 edx, DWORD PTR [edi]
  00038	73 1c		 jae	 SHORT $LN20@Push_heap
$LN18@Push_heap:

; 2459 : 		{	// move _Hole up to parent
; 2460 : 		*(_First + _Hole) = _Move(*(_First + _Idx));

  0003a	6b c9 38	 imul	 ecx, 56			; 00000038H
  0003d	50		 push	 eax
  0003e	03 cb		 add	 ecx, ebx
  00040	e8 00 00 00 00	 call	 ??4GuildUser@ioGuildData@@QAEAAU01@ABU01@@Z
  00045	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  00048	99		 cdq
  00049	2b c2		 sub	 eax, edx

; 2461 : 		_Hole = _Idx;

  0004b	8b ce		 mov	 ecx, esi
  0004d	d1 f8		 sar	 eax, 1
  0004f	8b f0		 mov	 esi, eax
  00051	39 4d 10	 cmp	 DWORD PTR __Top$[ebp], ecx
  00054	7c c5		 jl	 SHORT $LL3@Push_heap
$LN20@Push_heap:
  00056	5f		 pop	 edi
$LN19@Push_heap:

; 2462 : 		}
; 2463 : 
; 2464 : 	*(_First + _Hole) = _Move(_Val);	// drop _Val into final hole

  00057	ff 75 14	 push	 DWORD PTR __Val$[ebp]
  0005a	6b c9 38	 imul	 ecx, 56			; 00000038H
  0005d	03 cb		 add	 ecx, ebx
  0005f	e8 00 00 00 00	 call	 ??4GuildUser@ioGuildData@@QAEAAU01@ABU01@@Z
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx

; 2465 : 	}

  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
??$_Push_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@HH$$QAU12@VGuildUserSort@2@@Z ENDP ; std::_Push_heap<ioGuildData::GuildUser *,int,ioGuildData::GuildUser,ioGuildData::GuildUserSort>
_TEXT	ENDS
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 1497 : 		return (_Myptr());

  00000	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  00004	72 03		 jb	 SHORT $LN5@c_str
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1498 : 		}

  00008	c3		 ret	 0

; 1497 : 		return (_Myptr());

$LN5@c_str:
  00009	8b c1		 mov	 eax, ecx

; 1498 : 		}

  0000b	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
PUBLIC	??4?$CEncrypt@H@@QAEHH@Z			; CEncrypt<int>::operator=
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
;	COMDAT ??4?$CEncrypt@H@@QAEHH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
_inValue$ = 8						; size = 4
??4?$CEncrypt@H@@QAEHH@Z PROC				; CEncrypt<int>::operator=, COMDAT
; _this$ = ecx

; 843  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 844  : 		type value = inValue;

  00003	8b 45 08	 mov	 eax, DWORD PTR _inValue$[ebp]
  00006	89 45 08	 mov	 DWORD PTR _value$[ebp], eax

; 845  : 		EncryptValueToPool((char*)&value);

  00009	8d 45 08	 lea	 eax, DWORD PTR _value$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 846  : #ifdef _NOTUSE
; 847  : 		m_value = inValue;
; 848  : 		Debug();
; 849  : #endif
; 850  : 		return value;

  00012	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]

; 851  : 	}

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
??4?$CEncrypt@H@@QAEHH@Z ENDP				; CEncrypt<int>::operator=
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z PROC ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 454  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 455  : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@V?$allocator@K@1@@Z ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::_Vector_val<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@V?$allocator@K@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@V?$allocator@K@1@@Z PROC ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::_Vector_val<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@V?$allocator@K@1@@Z ENDP ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::_Vector_val<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@V?$allocator@VGashaponPresent@@@1@@Z ; std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@V?$allocator@VGashaponPresent@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@V?$allocator@VGashaponPresent@@@1@@Z PROC ; std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@V?$allocator@VGashaponPresent@@@1@@Z ENDP ; std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1953 : 		{	// set new length and null terminator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1954 : 		_Traits::assign(_Myptr()[this->_Mysize = _Newsize], _Elem());

  00003	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  00007	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0000a	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  0000d	72 02		 jb	 SHORT $LN5@Eos
  0000f	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN5@Eos:
  00011	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1955 : 		}

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  00008	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  0000d	c1 f8 02	 sar	 eax, 2
  00010	8b c8		 mov	 ecx, eax
  00012	d1 e9		 shr	 ecx, 1
  00014	2b d1		 sub	 edx, ecx
  00016	3b d0		 cmp	 edx, eax
  00018	73 04		 jae	 SHORT $LN4@Grow_to@6
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 02		 jmp	 SHORT $LN5@Grow_to@6
$LN4@Grow_to@6:
  0001e	03 c1		 add	 eax, ecx
$LN5@Grow_to@6:

; 1279 : 		if (_Capacity < _Count)

  00020	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00023	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Grow_to
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::_Vector_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::_Vector_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::_Vector_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1517 : 		size_type _Num = this->_Alval.max_size();
; 1518 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	6a fe		 push	 -2			; fffffffeH
  00002	58		 pop	 eax

; 1519 : 		}

  00003	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@K@std@@QAEPAKI@Z		; std::allocator<unsigned long>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@K@std@@QAEPAKI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@K@std@@QAEPAKI@Z PROC		; std::allocator<unsigned long>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@K@std@@YAPAKIPAK@Z ; std::_Allocate<unsigned long>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@K@std@@QAEPAKI@Z ENDP		; std::allocator<unsigned long>::allocate
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator==
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator==
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@D@std@@YAPADIPAD@Z ; std::_Allocate<char>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@K@std@@KAAK@std@@YAXAAV?$allocator@K@0@PAKAAK@Z ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@K@std@@KAAK@std@@YAXAAV?$allocator@K@0@PAKAAK@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@K@std@@KAAK@std@@YAXAAV?$allocator@K@0@PAKAAK@Z PROC ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN7@Cons_val@6
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@Cons_val@6:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@K@std@@KAAK@std@@YAXAAV?$allocator@K@0@PAKAAK@Z ENDP ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long &>
_TEXT	ENDS
PUBLIC	??$_Move@PAKPAK@std@@YAPAKPAK00@Z		; std::_Move<unsigned long *,unsigned long *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAKPAK@std@@YAPAKPAK00@Z
_TEXT	SEGMENT
__Cat$521031 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAKPAK@std@@YAPAKPAK00@Z PROC			; std::_Move<unsigned long *,unsigned long *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$521031[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<unsigned long *,unsigned long *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAKPAK@std@@YAPAKPAK00@Z ENDP			; std::_Move<unsigned long *,unsigned long *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z ; std::_Destroy_range<std::allocator<unsigned long> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned long> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@K@std@@QAEXPAKABK@Z	; std::allocator<unsigned long>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@K@std@@QAEXPAKABK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@K@std@@QAEXPAKABK@Z PROC		; std::allocator<unsigned long>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN5@construct@14
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN5@construct@14:

; 198  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?construct@?$allocator@K@std@@QAEXPAKABK@Z ENDP		; std::allocator<unsigned long>::construct
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::allocator<unsigned long> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z PROC ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::allocator<unsigned long> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2
  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 472  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z ENDP ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??$_Destroy@VGashaponPresent@@@std@@YAXPAVGashaponPresent@@@Z ; std::_Destroy<GashaponPresent>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@VGashaponPresent@@@std@@YAXPAVGashaponPresent@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@VGashaponPresent@@@std@@YAXPAVGashaponPresent@@@Z PROC ; std::_Destroy<GashaponPresent>, COMDAT

; 62   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	_Ptr->~_Ty();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]

; 64   : 	}

  00006	5d		 pop	 ebp

; 63   : 	_Ptr->~_Ty();

  00007	e9 00 00 00 00	 jmp	 ??1GashaponPresent@@QAE@XZ ; GashaponPresent::~GashaponPresent
??$_Destroy@VGashaponPresent@@@std@@YAXPAVGashaponPresent@@@Z ENDP ; std::_Destroy<GashaponPresent>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ProcessSync@ioGuildData@@QAEX_N@Z		; ioGuildData::ProcessSync
EXTRN	??6SP2Packet@@QAEAAV0@_N@Z:PROC			; SP2Packet::operator<<
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	SEGMENT
__unwindtable$?ProcessSync@ioGuildData@@QAEX_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ProcessSync@ioGuildData@@QAEX_N@Z$0
__ehfuncinfo$?ProcessSync@ioGuildData@@QAEX_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ProcessSync@ioGuildData@@QAEX_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?ProcessSync@ioGuildData@@QAEX_N@Z
_TEXT	SEGMENT
_kPacket$508257 = -32808				; size = 32792
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_bMyGuildOnlyInfo$ = 8					; size = 1
?ProcessSync@ioGuildData@@QAEX_N@Z PROC			; ioGuildData::ProcessSync, COMDAT
; _this$ = ecx

; 301  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ProcessSync@ioGuildData@@QAEX_N@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 1c 80 00 00	 mov	 eax, 32796		; 0000801cH
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	56		 push	 esi
  00026	57		 push	 edi
  00027	50		 push	 eax
  00028	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 302  : 	if( m_dwSyncTime == 0 ||
; 303  : 		FRAMEGETTIME() - m_dwSyncTime > 30000 )          //30초에 한번만 동기화

  00031	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00037	8b f1		 mov	 esi, ecx
  00039	83 7e 68 00	 cmp	 DWORD PTR [esi+104], 0
  0003d	74 18		 je	 SHORT $LN2@ProcessSyn
  0003f	ff d7		 call	 edi
  00041	8b c8		 mov	 ecx, eax
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00049	2b 46 68	 sub	 eax, DWORD PTR [esi+104]
  0004c	3d 30 75 00 00	 cmp	 eax, 30000		; 00007530H
  00051	0f 86 8a 00 00
	00		 jbe	 $LN3@ProcessSyn
$LN2@ProcessSyn:

; 304  : 	{
; 305  : 		m_dwSyncTime = FRAMEGETTIME();

  00057	ff d7		 call	 edi
  00059	8b c8		 mov	 ecx, eax
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00061	89 46 68	 mov	 DWORD PTR [esi+104], eax

; 306  : 		m_dwSyncTitleTime = FRAMEGETTIME();

  00064	ff d7		 call	 edi
  00066	8b c8		 mov	 ecx, eax
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  0006e	89 46 6c	 mov	 DWORD PTR [esi+108], eax

; 307  : 		if( g_GuildInfo.IsMyGuild( GetGuildIndex() ) )

  00071	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00074	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_Singleton@?$Singleton@VioGuildInfo@@@@1PAVioGuildInfo@@A ; Singleton<ioGuildInfo>::ms_Singleton
  0007a	39 81 90 00 00
	00		 cmp	 DWORD PTR [ecx+144], eax
  00080	75 0d		 jne	 SHORT $LN1@ProcessSyn

; 308  : 			m_dwSyncUserListTime = FRAMEGETTIME();

  00082	ff d7		 call	 edi
  00084	8b c8		 mov	 ecx, eax
  00086	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  0008c	89 46 70	 mov	 DWORD PTR [esi+112], eax
$LN1@ProcessSyn:

; 309  : 
; 310  : 		SP2Packet kPacket( CTPK_GUILD_INFO );

  0008f	68 22 01 00 00	 push	 290			; 00000122H
  00094	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$508257[ebp]
  0009a	e8 00 00 00 00	 call	 ??0SP2Packet@@QAE@K@Z	; SP2Packet::SP2Packet

; 311  : 		kPacket << m_dwGuildIndex << m_dwGuildJoinUser << bMyGuildOnlyInfo;

  0009f	ff 75 08	 push	 DWORD PTR _bMyGuildOnlyInfo$[ebp]
  000a2	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  000a6	ff 76 14	 push	 DWORD PTR [esi+20]
  000a9	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$508257[ebp]
  000af	ff 76 04	 push	 DWORD PTR [esi+4]
  000b2	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@K@Z ; SP2Packet::operator<<
  000b7	8b c8		 mov	 ecx, eax
  000b9	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@K@Z ; SP2Packet::operator<<
  000be	8b c8		 mov	 ecx, eax
  000c0	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@_N@Z ; SP2Packet::operator<<

; 312  : 		TCPNetwork::SendToServer( kPacket );

  000c5	8d 85 d8 7f ff
	ff		 lea	 eax, DWORD PTR _kPacket$508257[ebp]
  000cb	50		 push	 eax
  000cc	e8 00 00 00 00	 call	 ?SendToServer@TCPNetwork@@YAXAAVSP2Packet@@@Z ; TCPNetwork::SendToServer

; 313  : 	}

  000d1	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000d5	59		 pop	 ecx
  000d6	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$508257[ebp]
  000dc	e8 00 00 00 00	 call	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
$LN3@ProcessSyn:

; 314  : }

  000e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000eb	59		 pop	 ecx
  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f1	33 cd		 xor	 ecx, ebp
  000f3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f8	c9		 leave
  000f9	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ProcessSync@ioGuildData@@QAEX_N@Z$0:
  00000	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$508257[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
__ehhandler$?ProcessSync@ioGuildData@@QAEX_N@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a d8 7f ff
	ff		 mov	 ecx, DWORD PTR [edx-32808]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ProcessSync@ioGuildData@@QAEX_N@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ProcessSync@ioGuildData@@QAEX_N@Z ENDP			; ioGuildData::ProcessSync
PUBLIC	??_C@_0BM@GGANEIPP@?$CFs?5?3?5UserList?5is?5not?5exist?5?$AA@ ; `string'
PUBLIC	??_C@_0DF@GNEJMBPH@ioGuildData?3?3SetMyGuildMemberTod@ ; `string'
PUBLIC	?SetMyGuildMemberTodayAttendInfoByPacket@ioGuildData@@QAEXAAVSP2Packet@@@Z ; ioGuildData::SetMyGuildMemberTodayAttendInfoByPacket
EXTRN	??5SP2Packet@@QAEAAV0@AAH@Z:PROC		; SP2Packet::operator>>
EXTRN	__imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ:PROC
EXTRN	__imp_?LOG@@3VCLog@@A:BYTE
;	COMDAT ??_C@_0BM@GGANEIPP@?$CFs?5?3?5UserList?5is?5not?5exist?5?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
CONST	SEGMENT
??_C@_0BM@GGANEIPP@?$CFs?5?3?5UserList?5is?5not?5exist?5?$AA@ DB '%s : Us'
	DB	'erList is not exist ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@GNEJMBPH@ioGuildData?3?3SetMyGuildMemberTod@
CONST	SEGMENT
??_C@_0DF@GNEJMBPH@ioGuildData?3?3SetMyGuildMemberTod@ DB 'ioGuildData::S'
	DB	'etMyGuildMemberTodayAttendInfoByPacket', 00H ; `string'
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
CONST	ENDS
;	COMDAT ?SetMyGuildMemberTodayAttendInfoByPacket@ioGuildData@@QAEXAAVSP2Packet@@@Z
_TEXT	SEGMENT
_dwUserIndex$508612 = -8				; size = 4
_iAttendedCount$ = -4					; size = 4
_rkPacket$ = 8						; size = 4
?SetMyGuildMemberTodayAttendInfoByPacket@ioGuildData@@QAEXAAVSP2Packet@@@Z PROC ; ioGuildData::SetMyGuildMemberTodayAttendInfoByPacket, COMDAT
; _this$ = ecx

; 653  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 654  : 	if ( m_vUserList.empty() )

  00008	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
  0000b	3b 46 5c	 cmp	 eax, DWORD PTR [esi+92]
  0000e	75 1d		 jne	 SHORT $LN4@SetMyGuild

; 655  : 	{
; 656  : 		LOG.PrintTimeAndLog( 0, "%s : UserList is not exist ", __FUNCTION__ );

  00010	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GNEJMBPH@ioGuildData?3?3SetMyGuildMemberTod@
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@GGANEIPP@?$CFs?5?3?5UserList?5is?5not?5exist?5?$AA@
  0001a	6a 00		 push	 0
  0001c	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  00028	83 c4 10	 add	 esp, 16			; 00000010H

; 657  : 		return;

  0002b	eb 41		 jmp	 SHORT $LN5@SetMyGuild
$LN4@SetMyGuild:

; 658  : 	}
; 659  : 	// 길드원 수, 출석한 유저 인덱스
; 660  : 	int iAttendedCount;
; 661  : 	rkPacket >> iAttendedCount;

  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  00030	57		 push	 edi
  00031	8d 45 fc	 lea	 eax, DWORD PTR _iAttendedCount$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>

; 662  : 
; 663  : 	//초기화
; 664  : 	InitGuildTodayAttendedMember();

  0003a	8b ce		 mov	 ecx, esi
  0003c	e8 00 00 00 00	 call	 ?InitGuildTodayAttendedMember@ioGuildData@@IAEXXZ ; ioGuildData::InitGuildTodayAttendedMember

; 665  : 	m_iGuildTodayAttendCount = 0;

  00041	33 ff		 xor	 edi, edi
  00043	89 7e 50	 mov	 DWORD PTR [esi+80], edi

; 666  : 
; 667  : 	for(int i = 0;i < iAttendedCount;i++)

  00046	39 7d fc	 cmp	 DWORD PTR _iAttendedCount$[ebp], edi
  00049	7e 1c		 jle	 SHORT $LN1@SetMyGuild
$LL3@SetMyGuild:

; 668  : 	{
; 669  : 		DWORD dwUserIndex;
; 670  : 		rkPacket >> dwUserIndex;

  0004b	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  0004e	8d 45 f8	 lea	 eax, DWORD PTR _dwUserIndex$508612[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>

; 671  : 		SetGuildTodayAttendedUser( dwUserIndex );

  00057	ff 75 f8	 push	 DWORD PTR _dwUserIndex$508612[ebp]
  0005a	8b ce		 mov	 ecx, esi
  0005c	e8 00 00 00 00	 call	 ?SetGuildTodayAttendedUser@ioGuildData@@QAEXK@Z ; ioGuildData::SetGuildTodayAttendedUser
  00061	47		 inc	 edi
  00062	3b 7d fc	 cmp	 edi, DWORD PTR _iAttendedCount$[ebp]
  00065	7c e4		 jl	 SHORT $LL3@SetMyGuild
$LN1@SetMyGuild:

; 672  : 	}
; 673  : 
; 674  : 	m_iGuildTodayAttendCount = iAttendedCount; 

  00067	8b 45 fc	 mov	 eax, DWORD PTR _iAttendedCount$[ebp]
  0006a	89 46 50	 mov	 DWORD PTR [esi+80], eax
  0006d	5f		 pop	 edi
$LN5@SetMyGuild:
  0006e	5e		 pop	 esi

; 675  : }

  0006f	c9		 leave
  00070	c2 04 00	 ret	 4
?SetMyGuildMemberTodayAttendInfoByPacket@ioGuildData@@QAEXAAVSP2Packet@@@Z ENDP ; ioGuildData::SetMyGuildMemberTodayAttendInfoByPacket
_TEXT	ENDS
PUBLIC	??_C@_0DJ@NLDONDIO@ioGuildData?3?3SetMyGuildMemberYes@ ; `string'
PUBLIC	?SetMyGuildMemberYesterdayAttendInfoByPacket@ioGuildData@@QAEXAAVSP2Packet@@@Z ; ioGuildData::SetMyGuildMemberYesterdayAttendInfoByPacket
;	COMDAT ??_C@_0DJ@NLDONDIO@ioGuildData?3?3SetMyGuildMemberYes@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
CONST	SEGMENT
??_C@_0DJ@NLDONDIO@ioGuildData?3?3SetMyGuildMemberYes@ DB 'ioGuildData::S'
	DB	'etMyGuildMemberYesterdayAttendInfoByPacket', 00H ; `string'
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
CONST	ENDS
;	COMDAT ?SetMyGuildMemberYesterdayAttendInfoByPacket@ioGuildData@@QAEXAAVSP2Packet@@@Z
_TEXT	SEGMENT
_dwUserIndex$508624 = -8				; size = 4
_iAttendedCount$ = -4					; size = 4
_rkPacket$ = 8						; size = 4
?SetMyGuildMemberYesterdayAttendInfoByPacket@ioGuildData@@QAEXAAVSP2Packet@@@Z PROC ; ioGuildData::SetMyGuildMemberYesterdayAttendInfoByPacket, COMDAT
; _this$ = ecx

; 678  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 679  : 	if ( m_vUserList.empty() )

  00008	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
  0000b	3b 46 5c	 cmp	 eax, DWORD PTR [esi+92]
  0000e	75 1d		 jne	 SHORT $LN4@SetMyGuild@2

; 680  : 	{
; 681  : 		LOG.PrintTimeAndLog( 0, "%s : UserList is not exist ", __FUNCTION__ );

  00010	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@NLDONDIO@ioGuildData?3?3SetMyGuildMemberYes@
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@GGANEIPP@?$CFs?5?3?5UserList?5is?5not?5exist?5?$AA@
  0001a	6a 00		 push	 0
  0001c	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  00028	83 c4 10	 add	 esp, 16			; 00000010H

; 682  : 		return;

  0002b	eb 41		 jmp	 SHORT $LN5@SetMyGuild@2
$LN4@SetMyGuild@2:

; 683  : 	}
; 684  : 	// 길드원 수, 출석한 유저 인덱스
; 685  : 	int iAttendedCount;
; 686  : 	rkPacket >> iAttendedCount;

  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  00030	57		 push	 edi
  00031	8d 45 fc	 lea	 eax, DWORD PTR _iAttendedCount$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>

; 687  : 
; 688  : 	//출석 초기화
; 689  : 	InitGuildYesterdayAttendedMember();

  0003a	8b ce		 mov	 ecx, esi
  0003c	e8 00 00 00 00	 call	 ?InitGuildYesterdayAttendedMember@ioGuildData@@IAEXXZ ; ioGuildData::InitGuildYesterdayAttendedMember

; 690  : 	m_iGuildYesterdayAttendCount = 0;

  00041	33 ff		 xor	 edi, edi
  00043	89 7e 4c	 mov	 DWORD PTR [esi+76], edi

; 691  : 
; 692  : 	for(int i = 0;i < iAttendedCount;i++)

  00046	39 7d fc	 cmp	 DWORD PTR _iAttendedCount$[ebp], edi
  00049	7e 1c		 jle	 SHORT $LN1@SetMyGuild@2
$LL3@SetMyGuild@2:

; 693  : 	{
; 694  : 		DWORD dwUserIndex;
; 695  : 		rkPacket >> dwUserIndex;

  0004b	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  0004e	8d 45 f8	 lea	 eax, DWORD PTR _dwUserIndex$508624[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>

; 696  : 		SetGuildYesterdayAttendedUser( dwUserIndex );

  00057	ff 75 f8	 push	 DWORD PTR _dwUserIndex$508624[ebp]
  0005a	8b ce		 mov	 ecx, esi
  0005c	e8 00 00 00 00	 call	 ?SetGuildYesterdayAttendedUser@ioGuildData@@QAEXK@Z ; ioGuildData::SetGuildYesterdayAttendedUser
  00061	47		 inc	 edi
  00062	3b 7d fc	 cmp	 edi, DWORD PTR _iAttendedCount$[ebp]
  00065	7c e4		 jl	 SHORT $LL3@SetMyGuild@2
$LN1@SetMyGuild@2:

; 697  : 	}
; 698  : 
; 699  : 	m_iGuildYesterdayAttendCount = iAttendedCount; 

  00067	8b 45 fc	 mov	 eax, DWORD PTR _iAttendedCount$[ebp]
  0006a	89 46 4c	 mov	 DWORD PTR [esi+76], eax
  0006d	5f		 pop	 edi
$LN5@SetMyGuild@2:
  0006e	5e		 pop	 esi

; 700  : }

  0006f	c9		 leave
  00070	c2 04 00	 ret	 4
?SetMyGuildMemberYesterdayAttendInfoByPacket@ioGuildData@@QAEXAAVSP2Packet@@@Z ENDP ; ioGuildData::SetMyGuildMemberYesterdayAttendInfoByPacket
_TEXT	ENDS
PUBLIC	?SetMyGuildTimeSetting@ioGuildInfo@@QAEXKKK@Z	; ioGuildInfo::SetMyGuildTimeSetting
; Function compile flags: /Ogsp
;	COMDAT ?SetMyGuildTimeSetting@ioGuildInfo@@QAEXKKK@Z
_TEXT	SEGMENT
_dwRecievedTime$ = 8					; size = 4
_dwCreatedTime$ = 12					; size = 4
_dwLoginTime$ = 16					; size = 4
?SetMyGuildTimeSetting@ioGuildInfo@@QAEXKKK@Z PROC	; ioGuildInfo::SetMyGuildTimeSetting, COMDAT
; _this$ = ecx

; 1373 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1374 : 	m_LoginTime = CTime( dwLoginTime );

  00003	8b 45 10	 mov	 eax, DWORD PTR _dwLoginTime$[ebp]
  00006	89 81 14 01 00
	00		 mov	 DWORD PTR [ecx+276], eax

; 1375 : 	m_GuildCreatedTime = CTime( dwCreatedTime );

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _dwCreatedTime$[ebp]
  0000f	33 d2		 xor	 edx, edx
  00011	89 81 fc 00 00
	00		 mov	 DWORD PTR [ecx+252], eax

; 1376 : 	//길드 출석 보상 시간 세팅
; 1377 : 	SetAttendRewardTime( CTime( dwRecievedTime ) );	

  00017	8b 45 08	 mov	 eax, DWORD PTR _dwRecievedTime$[ebp]
  0001a	52		 push	 edx
  0001b	50		 push	 eax
  0001c	89 91 18 01 00
	00		 mov	 DWORD PTR [ecx+280], edx
  00022	89 91 00 01 00
	00		 mov	 DWORD PTR [ecx+256], edx
  00028	e8 00 00 00 00	 call	 ?SetAttendRewardTime@ioGuildInfo@@IAEXVCTime@ATL@@@Z ; ioGuildInfo::SetAttendRewardTime

; 1378 : 	//LOG.PrintTimeAndLog( 0, "%s create Time : %d, Enable Reward Time : %d", __FUNCTION__, m_GuildCreatedTime.GetTime(), m_EnableRewardTime.GetTime() );
; 1379 : }

  0002d	5d		 pop	 ebp
  0002e	c2 0c 00	 ret	 12			; 0000000cH
?SetMyGuildTimeSetting@ioGuildInfo@@QAEXKKK@Z ENDP	; ioGuildInfo::SetMyGuildTimeSetting
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SetMyAttendRewardTimeByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z ; ioGuildInfo::SetMyAttendRewardTimeByPacket
; Function compile flags: /Ogsp
;	COMDAT ?SetMyAttendRewardTimeByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z
_TEXT	SEGMENT
_ServerTime$ = -28					; size = 8
_rkServerTime$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_rkPacket$ = 8						; size = 4
?SetMyAttendRewardTimeByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z PROC ; ioGuildInfo::SetMyAttendRewardTimeByPacket, COMDAT
; _this$ = ecx

; 1382 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi

; 1383 : 	// 보상 받기 가능 시간
; 1384 : 	SYSTEMTIME rkServerTime;
; 1385 : 	g_MyInfo.GetServerTime( rkServerTime );

  00011	8d 45 ec	 lea	 eax, DWORD PTR _rkServerTime$[ebp]
  00014	50		 push	 eax
  00015	8b f1		 mov	 esi, ecx
  00017	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?GetServerTime@ioMyInfo@@QAEXAAU_SYSTEMTIME@@@Z ; ioMyInfo::GetServerTime

; 1386 : 	CTime ServerTime( rkServerTime.wYear, rkServerTime.wMonth, rkServerTime.wDay, rkServerTime.wHour, rkServerTime.wMinute, rkServerTime.wSecond );

  00023	0f b7 45 f8	 movzx	 eax, WORD PTR _rkServerTime$[ebp+12]
  00027	6a ff		 push	 -1
  00029	50		 push	 eax
  0002a	0f b7 45 f6	 movzx	 eax, WORD PTR _rkServerTime$[ebp+10]
  0002e	50		 push	 eax
  0002f	0f b7 45 f4	 movzx	 eax, WORD PTR _rkServerTime$[ebp+8]
  00033	50		 push	 eax
  00034	0f b7 45 f2	 movzx	 eax, WORD PTR _rkServerTime$[ebp+6]
  00038	50		 push	 eax
  00039	0f b7 45 ee	 movzx	 eax, WORD PTR _rkServerTime$[ebp+2]
  0003d	50		 push	 eax
  0003e	0f b7 45 ec	 movzx	 eax, WORD PTR _rkServerTime$[ebp]
  00042	50		 push	 eax
  00043	8d 4d e4	 lea	 ecx, DWORD PTR _ServerTime$[ebp]
  00046	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@HHHHHHH@Z ; ATL::CTime::CTime

; 1387 : 	SetAttendRewardTime( ServerTime );

  0004b	ff 75 e8	 push	 DWORD PTR _ServerTime$[ebp+4]
  0004e	8b ce		 mov	 ecx, esi
  00050	ff 75 e4	 push	 DWORD PTR _ServerTime$[ebp]
  00053	e8 00 00 00 00	 call	 ?SetAttendRewardTime@ioGuildInfo@@IAEXVCTime@ATL@@@Z ; ioGuildInfo::SetAttendRewardTime

; 1388 : 
; 1389 : 	//LOG.PrintTimeAndLog( 0, "%s Accept Guild Attend Reward! CurTime : %d, Enable Reward Time : %d ", __FUNCTION__, ServerTime.GetTime(), m_EnableRewardTime.GetTime() );
; 1390 : }

  00058	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005b	33 cd		 xor	 ecx, ebp
  0005d	5e		 pop	 esi
  0005e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00063	c9		 leave
  00064	c2 04 00	 ret	 4
?SetMyAttendRewardTimeByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z ENDP ; ioGuildInfo::SetMyAttendRewardTimeByPacket
_TEXT	ENDS
PUBLIC	??0?$CEncrypt@H@@QAE@ABH@Z			; CEncrypt<int>::CEncrypt<int>
EXTRN	??0ccddaabb@@QAE@XZ:PROC			; ccddaabb::ccddaabb
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
xdata$x	SEGMENT
__unwindtable$??0?$CEncrypt@H@@QAE@ABH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CEncrypt@H@@QAE@ABH@Z$0
__ehfuncinfo$??0?$CEncrypt@H@@QAE@ABH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CEncrypt@H@@QAE@ABH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0?$CEncrypt@H@@QAE@ABH@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_value$521158 = 8					; size = 4
_inValue$ = 8						; size = 4
??0?$CEncrypt@H@@QAE@ABH@Z PROC				; CEncrypt<int>::CEncrypt<int>, COMDAT
; _this$ = ecx

; 114  : 	CEncrypt( const type &inValue )        // 선언과 동시에 값을 대입하기 위해서

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0?$CEncrypt@H@@QAE@ABH@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00014	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CEncrypt@H@@6B@
  0001a	e8 00 00 00 00	 call	 ??0ccddaabb@@QAE@XZ	; ccddaabb::ccddaabb
  0001f	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 115  : 	{
; 116  : 		Init();

  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?Init@?$CEncrypt@H@@AAEXXZ ; CEncrypt<int>::Init

; 117  : 		*this = inValue;

  0002a	8b 45 08	 mov	 eax, DWORD PTR _inValue$[ebp]
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	89 45 08	 mov	 DWORD PTR _value$521158[ebp], eax
  00032	8d 45 08	 lea	 eax, DWORD PTR _value$521158[ebp]
  00035	50		 push	 eax
  00036	8b ce		 mov	 ecx, esi
  00038	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 118  : 	}

  0003d	8b c6		 mov	 eax, esi
  0003f	e8 00 00 00 00	 call	 __EH_epilog3
  00044	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CEncrypt@H@@QAE@ABH@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	e9 00 00 00 00	 jmp	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
__ehhandler$??0?$CEncrypt@H@@QAE@ABH@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CEncrypt@H@@QAE@ABH@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CEncrypt@H@@QAE@ABH@Z ENDP				; CEncrypt<int>::CEncrypt<int>
PUBLIC	??0?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE@XZ ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE@XZ PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >
_TEXT	ENDS
PUBLIC	?begin@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@XZ ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@XZ PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@XZ ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@XZ ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@XZ PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@XZ ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::end
_TEXT	ENDS
PUBLIC	??0?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE@XZ ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::vector<ioGuildData *,std::allocator<ioGuildData *> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE@XZ PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::vector<ioGuildData *,std::allocator<ioGuildData *> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::vector<ioGuildData *,std::allocator<ioGuildData *> >
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@XZ ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@XZ PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@XZ ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@XZ ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@XZ PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@XZ ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::end
_TEXT	ENDS
PUBLIC	??0?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE@XZ ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE@XZ PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >
_TEXT	ENDS
PUBLIC	?begin@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@XZ ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@XZ PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::begin
_TEXT	ENDS
PUBLIC	??0?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE@XZ ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE@XZ PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE@XZ ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@XZ ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@XZ PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@XZ ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@XZ PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::end
_TEXT	ENDS
PUBLIC	??0?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE@XZ ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE@XZ PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE@XZ ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@XZ ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@XZ PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@XZ ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@XZ PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::end
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator+
; Function compile flags: /Ogsp
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator+, COMDAT
; _this$ = ecx

; 363  : 		{	// return this + integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 364  : 		_Myiter _Tmp = *this;
; 365  : 		return (_Tmp += _Off);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp]
  00008	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]
  0000b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000e	89 08		 mov	 DWORD PTR [eax], ecx

; 366  : 		}

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
??H?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator+
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator++, COMDAT
; _this$ = ecx

; 337  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 338  : 		_Myiter _Tmp = *this;

  00003	8b 11		 mov	 edx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 10		 mov	 DWORD PTR [eax], edx

; 339  : 		++*this;

  0000a	83 c2 38	 add	 edx, 56			; 00000038H
  0000d	89 11		 mov	 DWORD PTR [ecx], edx

; 340  : 		return (_Tmp);
; 341  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
??E?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator++
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator+
; Function compile flags: /Ogsp
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator+, COMDAT
; _this$ = ecx

; 363  : 		{	// return this + integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 364  : 		_Myiter _Tmp = *this;
; 365  : 		return (_Tmp += _Off);

  00003	8b 55 0c	 mov	 edx, DWORD PTR __Off$[ebp]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	6b d2 38	 imul	 edx, 56			; 00000038H
  0000c	03 11		 add	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx

; 366  : 		}

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
??H?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator+
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >::operator!=
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildData *,std::allocator<ioGuildData *> > >::operator!=
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> > >::operator!=
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> > >::operator!=
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::operator+
; Function compile flags: /Ogsp
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::operator+, COMDAT
; _this$ = ecx

; 363  : 		{	// return this + integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 364  : 		_Myiter _Tmp = *this;
; 365  : 		return (_Tmp += _Off);

  00003	8b 55 0c	 mov	 edx, DWORD PTR __Off$[ebp]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	6b d2 14	 imul	 edx, 20			; 00000014H
  0000c	03 11		 add	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx

; 366  : 		}

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
??H?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::operator+
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy
; Function compile flags: /Ogsp
;	COMDAT ?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy, COMDAT
; _this$ = ecx

; 1250 : 		{	// allocate array with _Capacity elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1251 : 		this->_Myfirst = 0;

  00004	33 c0		 xor	 eax, eax
  00006	57		 push	 edi

; 1252 : 		this->_Mylast = 0;
; 1253 : 		this->_Myend = 0;
; 1254 : 
; 1255 : 		if (_Capacity == 0)

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Capacity$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 06		 mov	 DWORD PTR [esi], eax
  0000e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00011	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00014	3b f8		 cmp	 edi, eax
  00016	75 04		 jne	 SHORT $LN4@Buy

; 1256 : 			return (false);

  00018	32 c0		 xor	 al, al
  0001a	eb 2b		 jmp	 SHORT $LN5@Buy
$LN4@Buy:

; 1257 : 		else if (max_size() < _Capacity)

  0001c	81 ff 49 92 24
	09		 cmp	 edi, 153391689		; 09249249H
  00022	76 0b		 jbe	 SHORT $LN2@Buy

; 1258 : 			_Xlen();	// result too long

  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN19@Buy:
$LN2@Buy:

; 1259 : 		else
; 1260 : 			{	// nonempty array, allocate storage
; 1261 : 			this->_Myfirst = this->_Alval.allocate(_Capacity);

  0002f	50		 push	 eax
  00030	57		 push	 edi
  00031	e8 00 00 00 00	 call	 ??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 1262 : 			this->_Mylast = this->_Myfirst;
; 1263 : 			this->_Myend = this->_Myfirst + _Capacity;

  00036	6b ff 1c	 imul	 edi, 28			; 0000001cH
  00039	03 f8		 add	 edi, eax
  0003b	59		 pop	 ecx
  0003c	89 06		 mov	 DWORD PTR [esi], eax
  0003e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00041	59		 pop	 ecx
  00042	89 7e 08	 mov	 DWORD PTR [esi+8], edi

; 1264 : 			}
; 1265 : 		return (true);

  00045	b0 01		 mov	 al, 1
$LN5@Buy:
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi

; 1266 : 		}

  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
$LN18@Buy:
?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAE_NI@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Buy
; Function compile flags: /Ogsp
;	COMDAT ?_Buy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAE_NI@Z PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Buy, COMDAT
; _this$ = ecx

; 1250 : 		{	// allocate array with _Capacity elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1251 : 		this->_Myfirst = 0;

  00004	33 c0		 xor	 eax, eax
  00006	57		 push	 edi

; 1252 : 		this->_Mylast = 0;
; 1253 : 		this->_Myend = 0;
; 1254 : 
; 1255 : 		if (_Capacity == 0)

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Capacity$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 06		 mov	 DWORD PTR [esi], eax
  0000e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00011	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00014	3b f8		 cmp	 edi, eax
  00016	75 04		 jne	 SHORT $LN4@Buy@2

; 1256 : 			return (false);

  00018	32 c0		 xor	 al, al
  0001a	eb 2b		 jmp	 SHORT $LN5@Buy@2
$LN4@Buy@2:

; 1257 : 		else if (max_size() < _Capacity)

  0001c	81 ff cc cc cc
	0c		 cmp	 edi, 214748364		; 0cccccccH
  00022	76 0b		 jbe	 SHORT $LN2@Buy@2

; 1258 : 			_Xlen();	// result too long

  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN19@Buy@2:
$LN2@Buy@2:

; 1259 : 		else
; 1260 : 			{	// nonempty array, allocate storage
; 1261 : 			this->_Myfirst = this->_Alval.allocate(_Capacity);

  0002f	50		 push	 eax
  00030	57		 push	 edi
  00031	e8 00 00 00 00	 call	 ??$_Allocate@VGashaponPresent@@@std@@YAPAVGashaponPresent@@IPAV1@@Z ; std::_Allocate<GashaponPresent>

; 1262 : 			this->_Mylast = this->_Myfirst;
; 1263 : 			this->_Myend = this->_Myfirst + _Capacity;

  00036	6b ff 14	 imul	 edi, 20			; 00000014H
  00039	03 f8		 add	 edi, eax
  0003b	59		 pop	 ecx
  0003c	89 06		 mov	 DWORD PTR [esi], eax
  0003e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00041	59		 pop	 ecx
  00042	89 7e 08	 mov	 DWORD PTR [esi+8], edi

; 1264 : 			}
; 1265 : 		return (true);

  00045	b0 01		 mov	 al, 1
$LN5@Buy@2:
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi

; 1266 : 		}

  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
$LN18@Buy@2:
?_Buy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Buy
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@@Z PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@@Z ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Make_iter
_TEXT	ENDS
PUBLIC	?end@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@XZ ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@XZ PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::end
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@@Z PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@@Z ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Make_iter
_TEXT	ENDS
PUBLIC	?begin@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@XZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@XZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@XZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@XZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@XZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@XZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::end
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEXPAPAVioGuildData@@0@Z ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEXPAPAVioGuildData@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEXPAPAVioGuildData@@0@Z PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEXPAPAVioGuildData@@0@Z ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEXPAPAUGuildAttendRwardInfo@@0@Z ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEXPAPAUGuildAttendRwardInfo@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEXPAPAUGuildAttendRwardInfo@@0@Z PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEXPAPAUGuildAttendRwardInfo@@0@Z ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEXPAPAUGuildRankRwardInfo@@0@Z ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEXPAPAUGuildRankRwardInfo@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEXPAPAUGuildRankRwardInfo@@0@Z PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEXPAPAUGuildRankRwardInfo@@0@Z ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Destroy
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> > >::operator!=
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@@Z PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@@Z ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Make_iter
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::operator!=
_TEXT	ENDS
PUBLIC	??$?0$0BF@@ioINILoader_e@@QAE@AAY0BF@$$CBD_N@Z	; ioINILoader_e::ioINILoader_e<21>
EXTRN	__imp_??0ioINILoader@@QAE@PBD_N@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$?0$0BF@@ioINILoader_e@@QAE@AAY0BF@$$CBD_N@Z
_TEXT	SEGMENT
_fn$ = 8						; size = 4
_b$ = 12						; size = 1
??$?0$0BF@@ioINILoader_e@@QAE@AAY0BF@$$CBD_N@Z PROC	; ioINILoader_e::ioINILoader_e<21>, COMDAT
; _this$ = ecx

; 224  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _fn$[ebp]
  0000a	8a 11		 mov	 dl, BYTE PTR [ecx]
  0000c	8d 86 50 03 00
	00		 lea	 eax, DWORD PTR [esi+848]
  00012	84 d2		 test	 dl, dl
  00014	0f 84 6a 04 00
	00		 je	 $LN99@ioINILoade
  0001a	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0001d	88 10		 mov	 BYTE PTR [eax], dl
  0001f	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  00022	84 d2		 test	 dl, dl
  00024	0f 84 54 04 00
	00		 je	 $LN98@ioINILoade
  0002a	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0002d	88 50 01	 mov	 BYTE PTR [eax+1], dl
  00030	8a 51 02	 mov	 dl, BYTE PTR [ecx+2]
  00033	84 d2		 test	 dl, dl
  00035	0f 84 3d 04 00
	00		 je	 $LN97@ioINILoade
  0003b	b3 eb		 mov	 bl, -21			; ffffffebH
  0003d	32 d3		 xor	 dl, bl
  0003f	88 50 02	 mov	 BYTE PTR [eax+2], dl
  00042	8a 51 03	 mov	 dl, BYTE PTR [ecx+3]
  00045	84 d2		 test	 dl, dl
  00047	0f 84 25 04 00
	00		 je	 $LN96@ioINILoade
  0004d	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00050	88 50 03	 mov	 BYTE PTR [eax+3], dl
  00053	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  00056	84 d2		 test	 dl, dl
  00058	0f 84 0e 04 00
	00		 je	 $LN95@ioINILoade
  0005e	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00061	88 50 04	 mov	 BYTE PTR [eax+4], dl
  00064	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  00067	84 d2		 test	 dl, dl
  00069	0f 84 f7 03 00
	00		 je	 $LN94@ioINILoade
  0006f	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00072	88 50 05	 mov	 BYTE PTR [eax+5], dl
  00075	8a 51 06	 mov	 dl, BYTE PTR [ecx+6]
  00078	84 d2		 test	 dl, dl
  0007a	0f 84 e1 03 00
	00		 je	 $LN93@ioINILoade
  00080	32 d3		 xor	 dl, bl
  00082	88 50 06	 mov	 BYTE PTR [eax+6], dl
  00085	8a 51 07	 mov	 dl, BYTE PTR [ecx+7]
  00088	84 d2		 test	 dl, dl
  0008a	0f 84 cb 03 00
	00		 je	 $LN92@ioINILoade
  00090	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00093	88 50 07	 mov	 BYTE PTR [eax+7], dl
  00096	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  00099	84 d2		 test	 dl, dl
  0009b	0f 84 b4 03 00
	00		 je	 $LN91@ioINILoade
  000a1	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a4	88 50 08	 mov	 BYTE PTR [eax+8], dl
  000a7	8a 51 09	 mov	 dl, BYTE PTR [ecx+9]
  000aa	84 d2		 test	 dl, dl
  000ac	0f 84 9d 03 00
	00		 je	 $LN90@ioINILoade
  000b2	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b5	88 50 09	 mov	 BYTE PTR [eax+9], dl
  000b8	8a 51 0a	 mov	 dl, BYTE PTR [ecx+10]
  000bb	84 d2		 test	 dl, dl
  000bd	0f 84 87 03 00
	00		 je	 $LN89@ioINILoade
  000c3	32 d3		 xor	 dl, bl
  000c5	88 50 0a	 mov	 BYTE PTR [eax+10], dl
  000c8	8a 51 0b	 mov	 dl, BYTE PTR [ecx+11]
  000cb	84 d2		 test	 dl, dl
  000cd	0f 84 71 03 00
	00		 je	 $LN88@ioINILoade
  000d3	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d6	88 50 0b	 mov	 BYTE PTR [eax+11], dl
  000d9	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
  000dc	84 d2		 test	 dl, dl
  000de	0f 84 5a 03 00
	00		 je	 $LN87@ioINILoade
  000e4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e7	88 50 0c	 mov	 BYTE PTR [eax+12], dl
  000ea	8a 51 0d	 mov	 dl, BYTE PTR [ecx+13]
  000ed	84 d2		 test	 dl, dl
  000ef	0f 84 43 03 00
	00		 je	 $LN86@ioINILoade
  000f5	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000f8	88 50 0d	 mov	 BYTE PTR [eax+13], dl
  000fb	8a 51 0e	 mov	 dl, BYTE PTR [ecx+14]
  000fe	84 d2		 test	 dl, dl
  00100	0f 84 2d 03 00
	00		 je	 $LN85@ioINILoade
  00106	32 d3		 xor	 dl, bl
  00108	88 50 0e	 mov	 BYTE PTR [eax+14], dl
  0010b	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  0010e	84 d2		 test	 dl, dl
  00110	0f 84 17 03 00
	00		 je	 $LN84@ioINILoade
  00116	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00119	88 50 0f	 mov	 BYTE PTR [eax+15], dl
  0011c	8a 51 10	 mov	 dl, BYTE PTR [ecx+16]
  0011f	84 d2		 test	 dl, dl
  00121	0f 84 00 03 00
	00		 je	 $LN83@ioINILoade
  00127	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0012a	88 50 10	 mov	 BYTE PTR [eax+16], dl
  0012d	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  00130	84 d2		 test	 dl, dl
  00132	0f 84 e9 02 00
	00		 je	 $LN82@ioINILoade
  00138	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0013b	88 50 11	 mov	 BYTE PTR [eax+17], dl
  0013e	8a 51 12	 mov	 dl, BYTE PTR [ecx+18]
  00141	84 d2		 test	 dl, dl
  00143	0f 84 d3 02 00
	00		 je	 $LN81@ioINILoade
  00149	32 d3		 xor	 dl, bl
  0014b	88 50 12	 mov	 BYTE PTR [eax+18], dl
  0014e	8a 51 13	 mov	 dl, BYTE PTR [ecx+19]
  00151	84 d2		 test	 dl, dl
  00153	0f 84 bd 02 00
	00		 je	 $LN80@ioINILoade
  00159	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0015c	88 50 13	 mov	 BYTE PTR [eax+19], dl
  0015f	8a 51 14	 mov	 dl, BYTE PTR [ecx+20]
  00162	84 d2		 test	 dl, dl
  00164	0f 84 a6 02 00
	00		 je	 $LN79@ioINILoade
  0016a	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0016d	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00170	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00173	84 d2		 test	 dl, dl
  00175	0f 84 8f 02 00
	00		 je	 $LN78@ioINILoade
  0017b	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0017e	88 50 15	 mov	 BYTE PTR [eax+21], dl
  00181	8a 51 16	 mov	 dl, BYTE PTR [ecx+22]
  00184	84 d2		 test	 dl, dl
  00186	0f 84 79 02 00
	00		 je	 $LN77@ioINILoade
  0018c	32 d3		 xor	 dl, bl
  0018e	88 50 16	 mov	 BYTE PTR [eax+22], dl
  00191	8a 51 17	 mov	 dl, BYTE PTR [ecx+23]
  00194	84 d2		 test	 dl, dl
  00196	0f 84 60 02 00
	00		 je	 $LN76@ioINILoade
  0019c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0019f	88 50 17	 mov	 BYTE PTR [eax+23], dl
  001a2	8a 51 18	 mov	 dl, BYTE PTR [ecx+24]
  001a5	84 d2		 test	 dl, dl
  001a7	0f 84 46 02 00
	00		 je	 $LN75@ioINILoade
  001ad	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001b0	88 50 18	 mov	 BYTE PTR [eax+24], dl
  001b3	8a 51 19	 mov	 dl, BYTE PTR [ecx+25]
  001b6	84 d2		 test	 dl, dl
  001b8	0f 84 2c 02 00
	00		 je	 $LN74@ioINILoade
  001be	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001c1	88 50 19	 mov	 BYTE PTR [eax+25], dl
  001c4	8a 51 1a	 mov	 dl, BYTE PTR [ecx+26]
  001c7	84 d2		 test	 dl, dl
  001c9	0f 84 13 02 00
	00		 je	 $LN73@ioINILoade
  001cf	32 d3		 xor	 dl, bl
  001d1	88 50 1a	 mov	 BYTE PTR [eax+26], dl
  001d4	8a 51 1b	 mov	 dl, BYTE PTR [ecx+27]
  001d7	84 d2		 test	 dl, dl
  001d9	0f 84 fa 01 00
	00		 je	 $LN72@ioINILoade
  001df	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001e2	88 50 1b	 mov	 BYTE PTR [eax+27], dl
  001e5	8a 51 1c	 mov	 dl, BYTE PTR [ecx+28]
  001e8	84 d2		 test	 dl, dl
  001ea	0f 84 e0 01 00
	00		 je	 $LN71@ioINILoade
  001f0	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001f3	88 50 1c	 mov	 BYTE PTR [eax+28], dl
  001f6	8a 51 1d	 mov	 dl, BYTE PTR [ecx+29]
  001f9	84 d2		 test	 dl, dl
  001fb	0f 84 c6 01 00
	00		 je	 $LN70@ioINILoade
  00201	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00204	88 50 1d	 mov	 BYTE PTR [eax+29], dl
  00207	8a 51 1e	 mov	 dl, BYTE PTR [ecx+30]
  0020a	84 d2		 test	 dl, dl
  0020c	0f 84 ad 01 00
	00		 je	 $LN69@ioINILoade
  00212	32 d3		 xor	 dl, bl
  00214	88 50 1e	 mov	 BYTE PTR [eax+30], dl
  00217	8a 51 1f	 mov	 dl, BYTE PTR [ecx+31]
  0021a	84 d2		 test	 dl, dl
  0021c	0f 84 94 01 00
	00		 je	 $LN68@ioINILoade
  00222	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00225	88 50 1f	 mov	 BYTE PTR [eax+31], dl
  00228	8a 51 20	 mov	 dl, BYTE PTR [ecx+32]
  0022b	84 d2		 test	 dl, dl
  0022d	0f 84 7a 01 00
	00		 je	 $LN67@ioINILoade
  00233	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00236	88 50 20	 mov	 BYTE PTR [eax+32], dl
  00239	8a 51 21	 mov	 dl, BYTE PTR [ecx+33]
  0023c	84 d2		 test	 dl, dl
  0023e	0f 84 60 01 00
	00		 je	 $LN66@ioINILoade
  00244	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00247	88 50 21	 mov	 BYTE PTR [eax+33], dl
  0024a	8a 51 22	 mov	 dl, BYTE PTR [ecx+34]
  0024d	84 d2		 test	 dl, dl
  0024f	0f 84 47 01 00
	00		 je	 $LN65@ioINILoade
  00255	32 d3		 xor	 dl, bl
  00257	88 50 22	 mov	 BYTE PTR [eax+34], dl
  0025a	8a 51 23	 mov	 dl, BYTE PTR [ecx+35]
  0025d	84 d2		 test	 dl, dl
  0025f	0f 84 2e 01 00
	00		 je	 $LN64@ioINILoade
  00265	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00268	88 50 23	 mov	 BYTE PTR [eax+35], dl
  0026b	8a 51 24	 mov	 dl, BYTE PTR [ecx+36]
  0026e	84 d2		 test	 dl, dl
  00270	0f 84 14 01 00
	00		 je	 $LN63@ioINILoade
  00276	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00279	88 50 24	 mov	 BYTE PTR [eax+36], dl
  0027c	8a 51 25	 mov	 dl, BYTE PTR [ecx+37]
  0027f	84 d2		 test	 dl, dl
  00281	0f 84 fa 00 00
	00		 je	 $LN62@ioINILoade
  00287	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0028a	88 50 25	 mov	 BYTE PTR [eax+37], dl
  0028d	8a 51 26	 mov	 dl, BYTE PTR [ecx+38]
  00290	84 d2		 test	 dl, dl
  00292	0f 84 e1 00 00
	00		 je	 $LN61@ioINILoade
  00298	32 d3		 xor	 dl, bl
  0029a	88 50 26	 mov	 BYTE PTR [eax+38], dl
  0029d	8a 51 27	 mov	 dl, BYTE PTR [ecx+39]
  002a0	84 d2		 test	 dl, dl
  002a2	0f 84 c8 00 00
	00		 je	 $LN60@ioINILoade
  002a8	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002ab	88 50 27	 mov	 BYTE PTR [eax+39], dl
  002ae	8a 51 28	 mov	 dl, BYTE PTR [ecx+40]
  002b1	84 d2		 test	 dl, dl
  002b3	0f 84 ae 00 00
	00		 je	 $LN59@ioINILoade
  002b9	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002bc	88 50 28	 mov	 BYTE PTR [eax+40], dl
  002bf	8a 51 29	 mov	 dl, BYTE PTR [ecx+41]
  002c2	84 d2		 test	 dl, dl
  002c4	0f 84 94 00 00
	00		 je	 $LN58@ioINILoade
  002ca	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002cd	88 50 29	 mov	 BYTE PTR [eax+41], dl
  002d0	8a 51 2a	 mov	 dl, BYTE PTR [ecx+42]
  002d3	84 d2		 test	 dl, dl
  002d5	74 7f		 je	 SHORT $LN57@ioINILoade
  002d7	32 d3		 xor	 dl, bl
  002d9	88 50 2a	 mov	 BYTE PTR [eax+42], dl
  002dc	8a 51 2b	 mov	 dl, BYTE PTR [ecx+43]
  002df	84 d2		 test	 dl, dl
  002e1	74 6a		 je	 SHORT $LN56@ioINILoade
  002e3	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002e6	88 50 2b	 mov	 BYTE PTR [eax+43], dl
  002e9	8a 51 2c	 mov	 dl, BYTE PTR [ecx+44]
  002ec	84 d2		 test	 dl, dl
  002ee	74 54		 je	 SHORT $LN55@ioINILoade
  002f0	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002f3	88 50 2c	 mov	 BYTE PTR [eax+44], dl
  002f6	8a 51 2d	 mov	 dl, BYTE PTR [ecx+45]
  002f9	84 d2		 test	 dl, dl
  002fb	74 3e		 je	 SHORT $LN54@ioINILoade
  002fd	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00300	88 50 2d	 mov	 BYTE PTR [eax+45], dl
  00303	8a 51 2e	 mov	 dl, BYTE PTR [ecx+46]
  00306	84 d2		 test	 dl, dl
  00308	74 29		 je	 SHORT $LN53@ioINILoade
  0030a	32 d3		 xor	 dl, bl
  0030c	88 50 2e	 mov	 BYTE PTR [eax+46], dl
  0030f	8a 51 2f	 mov	 dl, BYTE PTR [ecx+47]
  00312	84 d2		 test	 dl, dl
  00314	74 14		 je	 SHORT $LN52@ioINILoade
  00316	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00319	88 50 2f	 mov	 BYTE PTR [eax+47], dl
  0031c	8a 49 30	 mov	 cl, BYTE PTR [ecx+48]
  0031f	80 f1 ed	 xor	 cl, -19			; ffffffedH
  00322	88 48 30	 mov	 BYTE PTR [eax+48], cl
  00325	e9 5d 01 00 00	 jmp	 $LN4@ioINILoade
$LN52@ioINILoade:
  0032a	c6 40 2f ea	 mov	 BYTE PTR [eax+47], -22	; ffffffeaH
  0032e	e9 54 01 00 00	 jmp	 $LN4@ioINILoade
$LN53@ioINILoade:
  00333	88 58 2e	 mov	 BYTE PTR [eax+46], bl
  00336	e9 4c 01 00 00	 jmp	 $LN4@ioINILoade
$LN54@ioINILoade:
  0033b	c6 40 2d ec	 mov	 BYTE PTR [eax+45], -20	; ffffffecH
  0033f	e9 43 01 00 00	 jmp	 $LN4@ioINILoade
$LN55@ioINILoade:
  00344	c6 40 2c ed	 mov	 BYTE PTR [eax+44], -19	; ffffffedH
  00348	e9 3a 01 00 00	 jmp	 $LN4@ioINILoade
$LN56@ioINILoade:
  0034d	c6 40 2b ea	 mov	 BYTE PTR [eax+43], -22	; ffffffeaH
  00351	e9 31 01 00 00	 jmp	 $LN4@ioINILoade
$LN57@ioINILoade:
  00356	88 58 2a	 mov	 BYTE PTR [eax+42], bl
  00359	e9 29 01 00 00	 jmp	 $LN4@ioINILoade
$LN58@ioINILoade:
  0035e	c6 40 29 ec	 mov	 BYTE PTR [eax+41], -20	; ffffffecH
  00362	e9 20 01 00 00	 jmp	 $LN4@ioINILoade
$LN59@ioINILoade:
  00367	c6 40 28 ed	 mov	 BYTE PTR [eax+40], -19	; ffffffedH
  0036b	e9 17 01 00 00	 jmp	 $LN4@ioINILoade
$LN60@ioINILoade:
  00370	c6 40 27 ea	 mov	 BYTE PTR [eax+39], -22	; ffffffeaH
  00374	e9 0e 01 00 00	 jmp	 $LN4@ioINILoade
$LN61@ioINILoade:
  00379	88 58 26	 mov	 BYTE PTR [eax+38], bl
  0037c	e9 06 01 00 00	 jmp	 $LN4@ioINILoade
$LN62@ioINILoade:
  00381	c6 40 25 ec	 mov	 BYTE PTR [eax+37], -20	; ffffffecH
  00385	e9 fd 00 00 00	 jmp	 $LN4@ioINILoade
$LN63@ioINILoade:
  0038a	c6 40 24 ed	 mov	 BYTE PTR [eax+36], -19	; ffffffedH
  0038e	e9 f4 00 00 00	 jmp	 $LN4@ioINILoade
$LN64@ioINILoade:
  00393	c6 40 23 ea	 mov	 BYTE PTR [eax+35], -22	; ffffffeaH
  00397	e9 eb 00 00 00	 jmp	 $LN4@ioINILoade
$LN65@ioINILoade:
  0039c	88 58 22	 mov	 BYTE PTR [eax+34], bl
  0039f	e9 e3 00 00 00	 jmp	 $LN4@ioINILoade
$LN66@ioINILoade:
  003a4	c6 40 21 ec	 mov	 BYTE PTR [eax+33], -20	; ffffffecH
  003a8	e9 da 00 00 00	 jmp	 $LN4@ioINILoade
$LN67@ioINILoade:
  003ad	c6 40 20 ed	 mov	 BYTE PTR [eax+32], -19	; ffffffedH
  003b1	e9 d1 00 00 00	 jmp	 $LN4@ioINILoade
$LN68@ioINILoade:
  003b6	c6 40 1f ea	 mov	 BYTE PTR [eax+31], -22	; ffffffeaH
  003ba	e9 c8 00 00 00	 jmp	 $LN4@ioINILoade
$LN69@ioINILoade:
  003bf	88 58 1e	 mov	 BYTE PTR [eax+30], bl
  003c2	e9 c0 00 00 00	 jmp	 $LN4@ioINILoade
$LN70@ioINILoade:
  003c7	c6 40 1d ec	 mov	 BYTE PTR [eax+29], -20	; ffffffecH
  003cb	e9 b7 00 00 00	 jmp	 $LN4@ioINILoade
$LN71@ioINILoade:
  003d0	c6 40 1c ed	 mov	 BYTE PTR [eax+28], -19	; ffffffedH
  003d4	e9 ae 00 00 00	 jmp	 $LN4@ioINILoade
$LN72@ioINILoade:
  003d9	c6 40 1b ea	 mov	 BYTE PTR [eax+27], -22	; ffffffeaH
  003dd	e9 a5 00 00 00	 jmp	 $LN4@ioINILoade
$LN73@ioINILoade:
  003e2	88 58 1a	 mov	 BYTE PTR [eax+26], bl
  003e5	e9 9d 00 00 00	 jmp	 $LN4@ioINILoade
$LN74@ioINILoade:
  003ea	c6 40 19 ec	 mov	 BYTE PTR [eax+25], -20	; ffffffecH
  003ee	e9 94 00 00 00	 jmp	 $LN4@ioINILoade
$LN75@ioINILoade:
  003f3	c6 40 18 ed	 mov	 BYTE PTR [eax+24], -19	; ffffffedH
  003f7	e9 8b 00 00 00	 jmp	 $LN4@ioINILoade
$LN76@ioINILoade:
  003fc	c6 40 17 ea	 mov	 BYTE PTR [eax+23], -22	; ffffffeaH
  00400	e9 82 00 00 00	 jmp	 $LN4@ioINILoade
$LN77@ioINILoade:
  00405	88 58 16	 mov	 BYTE PTR [eax+22], bl
  00408	eb 7d		 jmp	 SHORT $LN4@ioINILoade
$LN78@ioINILoade:
  0040a	c6 40 15 ec	 mov	 BYTE PTR [eax+21], -20	; ffffffecH
  0040e	eb 77		 jmp	 SHORT $LN4@ioINILoade
$LN79@ioINILoade:
  00410	c6 40 14 ed	 mov	 BYTE PTR [eax+20], -19	; ffffffedH
  00414	eb 71		 jmp	 SHORT $LN4@ioINILoade
$LN80@ioINILoade:
  00416	c6 40 13 ea	 mov	 BYTE PTR [eax+19], -22	; ffffffeaH
  0041a	eb 6b		 jmp	 SHORT $LN4@ioINILoade
$LN81@ioINILoade:
  0041c	88 58 12	 mov	 BYTE PTR [eax+18], bl
  0041f	eb 66		 jmp	 SHORT $LN4@ioINILoade
$LN82@ioINILoade:
  00421	c6 40 11 ec	 mov	 BYTE PTR [eax+17], -20	; ffffffecH
  00425	eb 60		 jmp	 SHORT $LN4@ioINILoade
$LN83@ioINILoade:
  00427	c6 40 10 ed	 mov	 BYTE PTR [eax+16], -19	; ffffffedH
  0042b	eb 5a		 jmp	 SHORT $LN4@ioINILoade
$LN84@ioINILoade:
  0042d	c6 40 0f ea	 mov	 BYTE PTR [eax+15], -22	; ffffffeaH
  00431	eb 54		 jmp	 SHORT $LN4@ioINILoade
$LN85@ioINILoade:
  00433	88 58 0e	 mov	 BYTE PTR [eax+14], bl
  00436	eb 4f		 jmp	 SHORT $LN4@ioINILoade
$LN86@ioINILoade:
  00438	c6 40 0d ec	 mov	 BYTE PTR [eax+13], -20	; ffffffecH
  0043c	eb 49		 jmp	 SHORT $LN4@ioINILoade
$LN87@ioINILoade:
  0043e	c6 40 0c ed	 mov	 BYTE PTR [eax+12], -19	; ffffffedH
  00442	eb 43		 jmp	 SHORT $LN4@ioINILoade
$LN88@ioINILoade:
  00444	c6 40 0b ea	 mov	 BYTE PTR [eax+11], -22	; ffffffeaH
  00448	eb 3d		 jmp	 SHORT $LN4@ioINILoade
$LN89@ioINILoade:
  0044a	88 58 0a	 mov	 BYTE PTR [eax+10], bl
  0044d	eb 38		 jmp	 SHORT $LN4@ioINILoade
$LN90@ioINILoade:
  0044f	c6 40 09 ec	 mov	 BYTE PTR [eax+9], -20	; ffffffecH
  00453	eb 32		 jmp	 SHORT $LN4@ioINILoade
$LN91@ioINILoade:
  00455	c6 40 08 ed	 mov	 BYTE PTR [eax+8], -19	; ffffffedH
  00459	eb 2c		 jmp	 SHORT $LN4@ioINILoade
$LN92@ioINILoade:
  0045b	c6 40 07 ea	 mov	 BYTE PTR [eax+7], -22	; ffffffeaH
  0045f	eb 26		 jmp	 SHORT $LN4@ioINILoade
$LN93@ioINILoade:
  00461	88 58 06	 mov	 BYTE PTR [eax+6], bl
  00464	eb 21		 jmp	 SHORT $LN4@ioINILoade
$LN94@ioINILoade:
  00466	c6 40 05 ec	 mov	 BYTE PTR [eax+5], -20	; ffffffecH
  0046a	eb 1b		 jmp	 SHORT $LN4@ioINILoade
$LN95@ioINILoade:
  0046c	c6 40 04 ed	 mov	 BYTE PTR [eax+4], -19	; ffffffedH
  00470	eb 15		 jmp	 SHORT $LN4@ioINILoade
$LN96@ioINILoade:
  00472	c6 40 03 ea	 mov	 BYTE PTR [eax+3], -22	; ffffffeaH
  00476	eb 0f		 jmp	 SHORT $LN4@ioINILoade
$LN97@ioINILoade:
  00478	c6 40 02 eb	 mov	 BYTE PTR [eax+2], -21	; ffffffebH
  0047c	eb 09		 jmp	 SHORT $LN4@ioINILoade
$LN98@ioINILoade:
  0047e	c6 40 01 ec	 mov	 BYTE PTR [eax+1], -20	; ffffffecH
  00482	eb 03		 jmp	 SHORT $LN4@ioINILoade
$LN99@ioINILoade:
  00484	c6 00 ed	 mov	 BYTE PTR [eax], -19	; ffffffedH
$LN4@ioINILoade:
  00487	6a 05		 push	 5
  00489	8b c8		 mov	 ecx, eax
  0048b	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  0048f	5a		 pop	 edx
$LL107@ioINILoade:
  00490	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  00496	83 c1 04	 add	 ecx, 4
  00499	4a		 dec	 edx
  0049a	75 f4		 jne	 SHORT $LL107@ioINILoade
  0049c	ff 75 0c	 push	 DWORD PTR _b$[ebp]
  0049f	8b ce		 mov	 ecx, esi
  004a1	50		 push	 eax
  004a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@PBD_N@Z

; 225  : 	}

  004a8	8b c6		 mov	 eax, esi
  004aa	5e		 pop	 esi
  004ab	5b		 pop	 ebx
  004ac	5d		 pop	 ebp
  004ad	c2 08 00	 ret	 8
??$?0$0BF@@ioINILoader_e@@QAE@AAY0BF@$$CBD_N@Z ENDP	; ioINILoader_e::ioINILoader_e<21>
_TEXT	ENDS
PUBLIC	??$?0$0BM@@ioINILoader_e@@QAE@AAY0BM@$$CBD_N@Z	; ioINILoader_e::ioINILoader_e<28>
; Function compile flags: /Ogsp
;	COMDAT ??$?0$0BM@@ioINILoader_e@@QAE@AAY0BM@$$CBD_N@Z
_TEXT	SEGMENT
_fn$ = 8						; size = 4
_b$ = 12						; size = 1
??$?0$0BM@@ioINILoader_e@@QAE@AAY0BM@$$CBD_N@Z PROC	; ioINILoader_e::ioINILoader_e<28>, COMDAT
; _this$ = ecx

; 224  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	8b 4d 08	 mov	 ecx, DWORD PTR _fn$[ebp]
  0000b	8a 11		 mov	 dl, BYTE PTR [ecx]
  0000d	8d 87 50 03 00
	00		 lea	 eax, DWORD PTR [edi+848]
  00013	84 d2		 test	 dl, dl
  00015	0f 84 6a 04 00
	00		 je	 $LN99@ioINILoade@2
  0001b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0001e	88 10		 mov	 BYTE PTR [eax], dl
  00020	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  00023	84 d2		 test	 dl, dl
  00025	0f 84 54 04 00
	00		 je	 $LN98@ioINILoade@2
  0002b	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0002e	88 50 01	 mov	 BYTE PTR [eax+1], dl
  00031	8a 51 02	 mov	 dl, BYTE PTR [ecx+2]
  00034	84 d2		 test	 dl, dl
  00036	0f 84 3d 04 00
	00		 je	 $LN97@ioINILoade@2
  0003c	b3 eb		 mov	 bl, -21			; ffffffebH
  0003e	32 d3		 xor	 dl, bl
  00040	88 50 02	 mov	 BYTE PTR [eax+2], dl
  00043	8a 51 03	 mov	 dl, BYTE PTR [ecx+3]
  00046	84 d2		 test	 dl, dl
  00048	0f 84 25 04 00
	00		 je	 $LN96@ioINILoade@2
  0004e	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00051	88 50 03	 mov	 BYTE PTR [eax+3], dl
  00054	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  00057	84 d2		 test	 dl, dl
  00059	0f 84 0e 04 00
	00		 je	 $LN95@ioINILoade@2
  0005f	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00062	88 50 04	 mov	 BYTE PTR [eax+4], dl
  00065	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  00068	84 d2		 test	 dl, dl
  0006a	0f 84 f7 03 00
	00		 je	 $LN94@ioINILoade@2
  00070	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00073	88 50 05	 mov	 BYTE PTR [eax+5], dl
  00076	8a 51 06	 mov	 dl, BYTE PTR [ecx+6]
  00079	84 d2		 test	 dl, dl
  0007b	0f 84 e1 03 00
	00		 je	 $LN93@ioINILoade@2
  00081	32 d3		 xor	 dl, bl
  00083	88 50 06	 mov	 BYTE PTR [eax+6], dl
  00086	8a 51 07	 mov	 dl, BYTE PTR [ecx+7]
  00089	84 d2		 test	 dl, dl
  0008b	0f 84 cb 03 00
	00		 je	 $LN92@ioINILoade@2
  00091	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00094	88 50 07	 mov	 BYTE PTR [eax+7], dl
  00097	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  0009a	84 d2		 test	 dl, dl
  0009c	0f 84 b4 03 00
	00		 je	 $LN91@ioINILoade@2
  000a2	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a5	88 50 08	 mov	 BYTE PTR [eax+8], dl
  000a8	8a 51 09	 mov	 dl, BYTE PTR [ecx+9]
  000ab	84 d2		 test	 dl, dl
  000ad	0f 84 9d 03 00
	00		 je	 $LN90@ioINILoade@2
  000b3	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b6	88 50 09	 mov	 BYTE PTR [eax+9], dl
  000b9	8a 51 0a	 mov	 dl, BYTE PTR [ecx+10]
  000bc	84 d2		 test	 dl, dl
  000be	0f 84 87 03 00
	00		 je	 $LN89@ioINILoade@2
  000c4	32 d3		 xor	 dl, bl
  000c6	88 50 0a	 mov	 BYTE PTR [eax+10], dl
  000c9	8a 51 0b	 mov	 dl, BYTE PTR [ecx+11]
  000cc	84 d2		 test	 dl, dl
  000ce	0f 84 71 03 00
	00		 je	 $LN88@ioINILoade@2
  000d4	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d7	88 50 0b	 mov	 BYTE PTR [eax+11], dl
  000da	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
  000dd	84 d2		 test	 dl, dl
  000df	0f 84 5a 03 00
	00		 je	 $LN87@ioINILoade@2
  000e5	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e8	88 50 0c	 mov	 BYTE PTR [eax+12], dl
  000eb	8a 51 0d	 mov	 dl, BYTE PTR [ecx+13]
  000ee	84 d2		 test	 dl, dl
  000f0	0f 84 43 03 00
	00		 je	 $LN86@ioINILoade@2
  000f6	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000f9	88 50 0d	 mov	 BYTE PTR [eax+13], dl
  000fc	8a 51 0e	 mov	 dl, BYTE PTR [ecx+14]
  000ff	84 d2		 test	 dl, dl
  00101	0f 84 2d 03 00
	00		 je	 $LN85@ioINILoade@2
  00107	32 d3		 xor	 dl, bl
  00109	88 50 0e	 mov	 BYTE PTR [eax+14], dl
  0010c	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  0010f	84 d2		 test	 dl, dl
  00111	0f 84 17 03 00
	00		 je	 $LN84@ioINILoade@2
  00117	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0011a	88 50 0f	 mov	 BYTE PTR [eax+15], dl
  0011d	8a 51 10	 mov	 dl, BYTE PTR [ecx+16]
  00120	84 d2		 test	 dl, dl
  00122	0f 84 00 03 00
	00		 je	 $LN83@ioINILoade@2
  00128	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0012b	88 50 10	 mov	 BYTE PTR [eax+16], dl
  0012e	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  00131	84 d2		 test	 dl, dl
  00133	0f 84 e9 02 00
	00		 je	 $LN82@ioINILoade@2
  00139	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0013c	88 50 11	 mov	 BYTE PTR [eax+17], dl
  0013f	8a 51 12	 mov	 dl, BYTE PTR [ecx+18]
  00142	84 d2		 test	 dl, dl
  00144	0f 84 d3 02 00
	00		 je	 $LN81@ioINILoade@2
  0014a	32 d3		 xor	 dl, bl
  0014c	88 50 12	 mov	 BYTE PTR [eax+18], dl
  0014f	8a 51 13	 mov	 dl, BYTE PTR [ecx+19]
  00152	84 d2		 test	 dl, dl
  00154	0f 84 bd 02 00
	00		 je	 $LN80@ioINILoade@2
  0015a	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0015d	88 50 13	 mov	 BYTE PTR [eax+19], dl
  00160	8a 51 14	 mov	 dl, BYTE PTR [ecx+20]
  00163	84 d2		 test	 dl, dl
  00165	0f 84 a6 02 00
	00		 je	 $LN79@ioINILoade@2
  0016b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0016e	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00171	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00174	84 d2		 test	 dl, dl
  00176	0f 84 8f 02 00
	00		 je	 $LN78@ioINILoade@2
  0017c	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0017f	88 50 15	 mov	 BYTE PTR [eax+21], dl
  00182	8a 51 16	 mov	 dl, BYTE PTR [ecx+22]
  00185	84 d2		 test	 dl, dl
  00187	0f 84 79 02 00
	00		 je	 $LN77@ioINILoade@2
  0018d	32 d3		 xor	 dl, bl
  0018f	88 50 16	 mov	 BYTE PTR [eax+22], dl
  00192	8a 51 17	 mov	 dl, BYTE PTR [ecx+23]
  00195	84 d2		 test	 dl, dl
  00197	0f 84 60 02 00
	00		 je	 $LN76@ioINILoade@2
  0019d	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001a0	88 50 17	 mov	 BYTE PTR [eax+23], dl
  001a3	8a 51 18	 mov	 dl, BYTE PTR [ecx+24]
  001a6	84 d2		 test	 dl, dl
  001a8	0f 84 46 02 00
	00		 je	 $LN75@ioINILoade@2
  001ae	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001b1	88 50 18	 mov	 BYTE PTR [eax+24], dl
  001b4	8a 51 19	 mov	 dl, BYTE PTR [ecx+25]
  001b7	84 d2		 test	 dl, dl
  001b9	0f 84 2c 02 00
	00		 je	 $LN74@ioINILoade@2
  001bf	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001c2	88 50 19	 mov	 BYTE PTR [eax+25], dl
  001c5	8a 51 1a	 mov	 dl, BYTE PTR [ecx+26]
  001c8	84 d2		 test	 dl, dl
  001ca	0f 84 13 02 00
	00		 je	 $LN73@ioINILoade@2
  001d0	32 d3		 xor	 dl, bl
  001d2	88 50 1a	 mov	 BYTE PTR [eax+26], dl
  001d5	8a 51 1b	 mov	 dl, BYTE PTR [ecx+27]
  001d8	84 d2		 test	 dl, dl
  001da	0f 84 fa 01 00
	00		 je	 $LN72@ioINILoade@2
  001e0	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001e3	88 50 1b	 mov	 BYTE PTR [eax+27], dl
  001e6	8a 51 1c	 mov	 dl, BYTE PTR [ecx+28]
  001e9	84 d2		 test	 dl, dl
  001eb	0f 84 e0 01 00
	00		 je	 $LN71@ioINILoade@2
  001f1	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001f4	88 50 1c	 mov	 BYTE PTR [eax+28], dl
  001f7	8a 51 1d	 mov	 dl, BYTE PTR [ecx+29]
  001fa	84 d2		 test	 dl, dl
  001fc	0f 84 c6 01 00
	00		 je	 $LN70@ioINILoade@2
  00202	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00205	88 50 1d	 mov	 BYTE PTR [eax+29], dl
  00208	8a 51 1e	 mov	 dl, BYTE PTR [ecx+30]
  0020b	84 d2		 test	 dl, dl
  0020d	0f 84 ad 01 00
	00		 je	 $LN69@ioINILoade@2
  00213	32 d3		 xor	 dl, bl
  00215	88 50 1e	 mov	 BYTE PTR [eax+30], dl
  00218	8a 51 1f	 mov	 dl, BYTE PTR [ecx+31]
  0021b	84 d2		 test	 dl, dl
  0021d	0f 84 94 01 00
	00		 je	 $LN68@ioINILoade@2
  00223	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00226	88 50 1f	 mov	 BYTE PTR [eax+31], dl
  00229	8a 51 20	 mov	 dl, BYTE PTR [ecx+32]
  0022c	84 d2		 test	 dl, dl
  0022e	0f 84 7a 01 00
	00		 je	 $LN67@ioINILoade@2
  00234	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00237	88 50 20	 mov	 BYTE PTR [eax+32], dl
  0023a	8a 51 21	 mov	 dl, BYTE PTR [ecx+33]
  0023d	84 d2		 test	 dl, dl
  0023f	0f 84 60 01 00
	00		 je	 $LN66@ioINILoade@2
  00245	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00248	88 50 21	 mov	 BYTE PTR [eax+33], dl
  0024b	8a 51 22	 mov	 dl, BYTE PTR [ecx+34]
  0024e	84 d2		 test	 dl, dl
  00250	0f 84 47 01 00
	00		 je	 $LN65@ioINILoade@2
  00256	32 d3		 xor	 dl, bl
  00258	88 50 22	 mov	 BYTE PTR [eax+34], dl
  0025b	8a 51 23	 mov	 dl, BYTE PTR [ecx+35]
  0025e	84 d2		 test	 dl, dl
  00260	0f 84 2e 01 00
	00		 je	 $LN64@ioINILoade@2
  00266	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00269	88 50 23	 mov	 BYTE PTR [eax+35], dl
  0026c	8a 51 24	 mov	 dl, BYTE PTR [ecx+36]
  0026f	84 d2		 test	 dl, dl
  00271	0f 84 14 01 00
	00		 je	 $LN63@ioINILoade@2
  00277	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0027a	88 50 24	 mov	 BYTE PTR [eax+36], dl
  0027d	8a 51 25	 mov	 dl, BYTE PTR [ecx+37]
  00280	84 d2		 test	 dl, dl
  00282	0f 84 fa 00 00
	00		 je	 $LN62@ioINILoade@2
  00288	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0028b	88 50 25	 mov	 BYTE PTR [eax+37], dl
  0028e	8a 51 26	 mov	 dl, BYTE PTR [ecx+38]
  00291	84 d2		 test	 dl, dl
  00293	0f 84 e1 00 00
	00		 je	 $LN61@ioINILoade@2
  00299	32 d3		 xor	 dl, bl
  0029b	88 50 26	 mov	 BYTE PTR [eax+38], dl
  0029e	8a 51 27	 mov	 dl, BYTE PTR [ecx+39]
  002a1	84 d2		 test	 dl, dl
  002a3	0f 84 c8 00 00
	00		 je	 $LN60@ioINILoade@2
  002a9	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002ac	88 50 27	 mov	 BYTE PTR [eax+39], dl
  002af	8a 51 28	 mov	 dl, BYTE PTR [ecx+40]
  002b2	84 d2		 test	 dl, dl
  002b4	0f 84 ae 00 00
	00		 je	 $LN59@ioINILoade@2
  002ba	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002bd	88 50 28	 mov	 BYTE PTR [eax+40], dl
  002c0	8a 51 29	 mov	 dl, BYTE PTR [ecx+41]
  002c3	84 d2		 test	 dl, dl
  002c5	0f 84 94 00 00
	00		 je	 $LN58@ioINILoade@2
  002cb	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002ce	88 50 29	 mov	 BYTE PTR [eax+41], dl
  002d1	8a 51 2a	 mov	 dl, BYTE PTR [ecx+42]
  002d4	84 d2		 test	 dl, dl
  002d6	74 7f		 je	 SHORT $LN57@ioINILoade@2
  002d8	32 d3		 xor	 dl, bl
  002da	88 50 2a	 mov	 BYTE PTR [eax+42], dl
  002dd	8a 51 2b	 mov	 dl, BYTE PTR [ecx+43]
  002e0	84 d2		 test	 dl, dl
  002e2	74 6a		 je	 SHORT $LN56@ioINILoade@2
  002e4	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002e7	88 50 2b	 mov	 BYTE PTR [eax+43], dl
  002ea	8a 51 2c	 mov	 dl, BYTE PTR [ecx+44]
  002ed	84 d2		 test	 dl, dl
  002ef	74 54		 je	 SHORT $LN55@ioINILoade@2
  002f1	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002f4	88 50 2c	 mov	 BYTE PTR [eax+44], dl
  002f7	8a 51 2d	 mov	 dl, BYTE PTR [ecx+45]
  002fa	84 d2		 test	 dl, dl
  002fc	74 3e		 je	 SHORT $LN54@ioINILoade@2
  002fe	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00301	88 50 2d	 mov	 BYTE PTR [eax+45], dl
  00304	8a 51 2e	 mov	 dl, BYTE PTR [ecx+46]
  00307	84 d2		 test	 dl, dl
  00309	74 29		 je	 SHORT $LN53@ioINILoade@2
  0030b	32 d3		 xor	 dl, bl
  0030d	88 50 2e	 mov	 BYTE PTR [eax+46], dl
  00310	8a 51 2f	 mov	 dl, BYTE PTR [ecx+47]
  00313	84 d2		 test	 dl, dl
  00315	74 14		 je	 SHORT $LN52@ioINILoade@2
  00317	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0031a	88 50 2f	 mov	 BYTE PTR [eax+47], dl
  0031d	8a 49 30	 mov	 cl, BYTE PTR [ecx+48]
  00320	80 f1 ed	 xor	 cl, -19			; ffffffedH
  00323	88 48 30	 mov	 BYTE PTR [eax+48], cl
  00326	e9 5d 01 00 00	 jmp	 $LN4@ioINILoade@2
$LN52@ioINILoade@2:
  0032b	c6 40 2f ea	 mov	 BYTE PTR [eax+47], -22	; ffffffeaH
  0032f	e9 54 01 00 00	 jmp	 $LN4@ioINILoade@2
$LN53@ioINILoade@2:
  00334	88 58 2e	 mov	 BYTE PTR [eax+46], bl
  00337	e9 4c 01 00 00	 jmp	 $LN4@ioINILoade@2
$LN54@ioINILoade@2:
  0033c	c6 40 2d ec	 mov	 BYTE PTR [eax+45], -20	; ffffffecH
  00340	e9 43 01 00 00	 jmp	 $LN4@ioINILoade@2
$LN55@ioINILoade@2:
  00345	c6 40 2c ed	 mov	 BYTE PTR [eax+44], -19	; ffffffedH
  00349	e9 3a 01 00 00	 jmp	 $LN4@ioINILoade@2
$LN56@ioINILoade@2:
  0034e	c6 40 2b ea	 mov	 BYTE PTR [eax+43], -22	; ffffffeaH
  00352	e9 31 01 00 00	 jmp	 $LN4@ioINILoade@2
$LN57@ioINILoade@2:
  00357	88 58 2a	 mov	 BYTE PTR [eax+42], bl
  0035a	e9 29 01 00 00	 jmp	 $LN4@ioINILoade@2
$LN58@ioINILoade@2:
  0035f	c6 40 29 ec	 mov	 BYTE PTR [eax+41], -20	; ffffffecH
  00363	e9 20 01 00 00	 jmp	 $LN4@ioINILoade@2
$LN59@ioINILoade@2:
  00368	c6 40 28 ed	 mov	 BYTE PTR [eax+40], -19	; ffffffedH
  0036c	e9 17 01 00 00	 jmp	 $LN4@ioINILoade@2
$LN60@ioINILoade@2:
  00371	c6 40 27 ea	 mov	 BYTE PTR [eax+39], -22	; ffffffeaH
  00375	e9 0e 01 00 00	 jmp	 $LN4@ioINILoade@2
$LN61@ioINILoade@2:
  0037a	88 58 26	 mov	 BYTE PTR [eax+38], bl
  0037d	e9 06 01 00 00	 jmp	 $LN4@ioINILoade@2
$LN62@ioINILoade@2:
  00382	c6 40 25 ec	 mov	 BYTE PTR [eax+37], -20	; ffffffecH
  00386	e9 fd 00 00 00	 jmp	 $LN4@ioINILoade@2
$LN63@ioINILoade@2:
  0038b	c6 40 24 ed	 mov	 BYTE PTR [eax+36], -19	; ffffffedH
  0038f	e9 f4 00 00 00	 jmp	 $LN4@ioINILoade@2
$LN64@ioINILoade@2:
  00394	c6 40 23 ea	 mov	 BYTE PTR [eax+35], -22	; ffffffeaH
  00398	e9 eb 00 00 00	 jmp	 $LN4@ioINILoade@2
$LN65@ioINILoade@2:
  0039d	88 58 22	 mov	 BYTE PTR [eax+34], bl
  003a0	e9 e3 00 00 00	 jmp	 $LN4@ioINILoade@2
$LN66@ioINILoade@2:
  003a5	c6 40 21 ec	 mov	 BYTE PTR [eax+33], -20	; ffffffecH
  003a9	e9 da 00 00 00	 jmp	 $LN4@ioINILoade@2
$LN67@ioINILoade@2:
  003ae	c6 40 20 ed	 mov	 BYTE PTR [eax+32], -19	; ffffffedH
  003b2	e9 d1 00 00 00	 jmp	 $LN4@ioINILoade@2
$LN68@ioINILoade@2:
  003b7	c6 40 1f ea	 mov	 BYTE PTR [eax+31], -22	; ffffffeaH
  003bb	e9 c8 00 00 00	 jmp	 $LN4@ioINILoade@2
$LN69@ioINILoade@2:
  003c0	88 58 1e	 mov	 BYTE PTR [eax+30], bl
  003c3	e9 c0 00 00 00	 jmp	 $LN4@ioINILoade@2
$LN70@ioINILoade@2:
  003c8	c6 40 1d ec	 mov	 BYTE PTR [eax+29], -20	; ffffffecH
  003cc	e9 b7 00 00 00	 jmp	 $LN4@ioINILoade@2
$LN71@ioINILoade@2:
  003d1	c6 40 1c ed	 mov	 BYTE PTR [eax+28], -19	; ffffffedH
  003d5	e9 ae 00 00 00	 jmp	 $LN4@ioINILoade@2
$LN72@ioINILoade@2:
  003da	c6 40 1b ea	 mov	 BYTE PTR [eax+27], -22	; ffffffeaH
  003de	e9 a5 00 00 00	 jmp	 $LN4@ioINILoade@2
$LN73@ioINILoade@2:
  003e3	88 58 1a	 mov	 BYTE PTR [eax+26], bl
  003e6	e9 9d 00 00 00	 jmp	 $LN4@ioINILoade@2
$LN74@ioINILoade@2:
  003eb	c6 40 19 ec	 mov	 BYTE PTR [eax+25], -20	; ffffffecH
  003ef	e9 94 00 00 00	 jmp	 $LN4@ioINILoade@2
$LN75@ioINILoade@2:
  003f4	c6 40 18 ed	 mov	 BYTE PTR [eax+24], -19	; ffffffedH
  003f8	e9 8b 00 00 00	 jmp	 $LN4@ioINILoade@2
$LN76@ioINILoade@2:
  003fd	c6 40 17 ea	 mov	 BYTE PTR [eax+23], -22	; ffffffeaH
  00401	e9 82 00 00 00	 jmp	 $LN4@ioINILoade@2
$LN77@ioINILoade@2:
  00406	88 58 16	 mov	 BYTE PTR [eax+22], bl
  00409	eb 7d		 jmp	 SHORT $LN4@ioINILoade@2
$LN78@ioINILoade@2:
  0040b	c6 40 15 ec	 mov	 BYTE PTR [eax+21], -20	; ffffffecH
  0040f	eb 77		 jmp	 SHORT $LN4@ioINILoade@2
$LN79@ioINILoade@2:
  00411	c6 40 14 ed	 mov	 BYTE PTR [eax+20], -19	; ffffffedH
  00415	eb 71		 jmp	 SHORT $LN4@ioINILoade@2
$LN80@ioINILoade@2:
  00417	c6 40 13 ea	 mov	 BYTE PTR [eax+19], -22	; ffffffeaH
  0041b	eb 6b		 jmp	 SHORT $LN4@ioINILoade@2
$LN81@ioINILoade@2:
  0041d	88 58 12	 mov	 BYTE PTR [eax+18], bl
  00420	eb 66		 jmp	 SHORT $LN4@ioINILoade@2
$LN82@ioINILoade@2:
  00422	c6 40 11 ec	 mov	 BYTE PTR [eax+17], -20	; ffffffecH
  00426	eb 60		 jmp	 SHORT $LN4@ioINILoade@2
$LN83@ioINILoade@2:
  00428	c6 40 10 ed	 mov	 BYTE PTR [eax+16], -19	; ffffffedH
  0042c	eb 5a		 jmp	 SHORT $LN4@ioINILoade@2
$LN84@ioINILoade@2:
  0042e	c6 40 0f ea	 mov	 BYTE PTR [eax+15], -22	; ffffffeaH
  00432	eb 54		 jmp	 SHORT $LN4@ioINILoade@2
$LN85@ioINILoade@2:
  00434	88 58 0e	 mov	 BYTE PTR [eax+14], bl
  00437	eb 4f		 jmp	 SHORT $LN4@ioINILoade@2
$LN86@ioINILoade@2:
  00439	c6 40 0d ec	 mov	 BYTE PTR [eax+13], -20	; ffffffecH
  0043d	eb 49		 jmp	 SHORT $LN4@ioINILoade@2
$LN87@ioINILoade@2:
  0043f	c6 40 0c ed	 mov	 BYTE PTR [eax+12], -19	; ffffffedH
  00443	eb 43		 jmp	 SHORT $LN4@ioINILoade@2
$LN88@ioINILoade@2:
  00445	c6 40 0b ea	 mov	 BYTE PTR [eax+11], -22	; ffffffeaH
  00449	eb 3d		 jmp	 SHORT $LN4@ioINILoade@2
$LN89@ioINILoade@2:
  0044b	88 58 0a	 mov	 BYTE PTR [eax+10], bl
  0044e	eb 38		 jmp	 SHORT $LN4@ioINILoade@2
$LN90@ioINILoade@2:
  00450	c6 40 09 ec	 mov	 BYTE PTR [eax+9], -20	; ffffffecH
  00454	eb 32		 jmp	 SHORT $LN4@ioINILoade@2
$LN91@ioINILoade@2:
  00456	c6 40 08 ed	 mov	 BYTE PTR [eax+8], -19	; ffffffedH
  0045a	eb 2c		 jmp	 SHORT $LN4@ioINILoade@2
$LN92@ioINILoade@2:
  0045c	c6 40 07 ea	 mov	 BYTE PTR [eax+7], -22	; ffffffeaH
  00460	eb 26		 jmp	 SHORT $LN4@ioINILoade@2
$LN93@ioINILoade@2:
  00462	88 58 06	 mov	 BYTE PTR [eax+6], bl
  00465	eb 21		 jmp	 SHORT $LN4@ioINILoade@2
$LN94@ioINILoade@2:
  00467	c6 40 05 ec	 mov	 BYTE PTR [eax+5], -20	; ffffffecH
  0046b	eb 1b		 jmp	 SHORT $LN4@ioINILoade@2
$LN95@ioINILoade@2:
  0046d	c6 40 04 ed	 mov	 BYTE PTR [eax+4], -19	; ffffffedH
  00471	eb 15		 jmp	 SHORT $LN4@ioINILoade@2
$LN96@ioINILoade@2:
  00473	c6 40 03 ea	 mov	 BYTE PTR [eax+3], -22	; ffffffeaH
  00477	eb 0f		 jmp	 SHORT $LN4@ioINILoade@2
$LN97@ioINILoade@2:
  00479	c6 40 02 eb	 mov	 BYTE PTR [eax+2], -21	; ffffffebH
  0047d	eb 09		 jmp	 SHORT $LN4@ioINILoade@2
$LN98@ioINILoade@2:
  0047f	c6 40 01 ec	 mov	 BYTE PTR [eax+1], -20	; ffffffecH
  00483	eb 03		 jmp	 SHORT $LN4@ioINILoade@2
$LN99@ioINILoade@2:
  00485	c6 00 ed	 mov	 BYTE PTR [eax], -19	; ffffffedH
$LN4@ioINILoade@2:
  00488	6a 06		 push	 6
  0048a	8b c8		 mov	 ecx, eax
  0048c	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0
  00490	5a		 pop	 edx
$LL107@ioINILoade@2:
  00491	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  00497	83 c1 04	 add	 ecx, 4
  0049a	4a		 dec	 edx
  0049b	75 f4		 jne	 SHORT $LL107@ioINILoade@2
  0049d	6a 18		 push	 24			; 00000018H
  0049f	5e		 pop	 esi
$LL104@ioINILoade@2:
  004a0	8b ce		 mov	 ecx, esi
  004a2	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  004a8	79 05		 jns	 SHORT $LN114@ioINILoade@2
  004aa	49		 dec	 ecx
  004ab	83 c9 fc	 or	 ecx, -4			; fffffffcH
  004ae	41		 inc	 ecx
$LN114@ioINILoade@2:
  004af	b2 ed		 mov	 dl, -19			; ffffffedH
  004b1	2a d1		 sub	 dl, cl
  004b3	30 14 06	 xor	 BYTE PTR [esi+eax], dl
  004b6	46		 inc	 esi
  004b7	83 fe 1b	 cmp	 esi, 27			; 0000001bH
  004ba	7c e4		 jl	 SHORT $LL104@ioINILoade@2
  004bc	ff 75 0c	 push	 DWORD PTR _b$[ebp]
  004bf	8b cf		 mov	 ecx, edi
  004c1	50		 push	 eax
  004c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@PBD_N@Z

; 225  : 	}

  004c8	8b c7		 mov	 eax, edi
  004ca	5f		 pop	 edi
  004cb	5e		 pop	 esi
  004cc	5b		 pop	 ebx
  004cd	5d		 pop	 ebp
  004ce	c2 08 00	 ret	 8
??$?0$0BM@@ioINILoader_e@@QAE@AAY0BM@$$CBD_N@Z ENDP	; ioINILoader_e::ioINILoader_e<28>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@AAU34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@AAU23@@Z ; std::_Cons_val<std::allocator<ioGuildData::GuildUser>,ioGuildData::GuildUser,ioGuildData::GuildUser &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@AAU34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@AAU23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@AAU34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@AAU23@@Z$0
__ehfuncinfo$??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@AAU34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@AAU23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@AAU34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@AAU23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@AAU34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@AAU23@@Z
_TEXT	SEGMENT
$T522013 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@AAU34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@AAU23@@Z PROC ; std::_Cons_val<std::allocator<ioGuildData::GuildUser>,ioGuildData::GuildUser,ioGuildData::GuildUser &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@AAU34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@AAU23@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  0000f	89 4d f0	 mov	 DWORD PTR $T522013[ebp], ecx
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 c9		 test	 ecx, ecx
  00018	74 08		 je	 SHORT $LN7@Cons_val@7
  0001a	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0GuildUser@ioGuildData@@QAE@ABU01@@Z
$LN7@Cons_val@7:

; 281  : 	}

  00022	e8 00 00 00 00	 call	 __EH_epilog3
  00027	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@AAU34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@AAU23@@Z$0:
  00000	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T522013[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@AAU34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@AAU23@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@AAU34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@AAU23@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@AAU34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@AAU23@@Z ENDP ; std::_Cons_val<std::allocator<ioGuildData::GuildUser>,ioGuildData::GuildUser,ioGuildData::GuildUser &>
PUBLIC	??$_Move@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00@Z ; std::_Move<ioGuildData::GuildUser *,ioGuildData::GuildUser *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00@Z
_TEXT	SEGMENT
__Cat$522033 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00@Z PROC ; std::_Move<ioGuildData::GuildUser *,ioGuildData::GuildUser *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$522033[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioGuildData::GuildUser *,ioGuildData::GuildUser *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00@Z ENDP ; std::_Move<ioGuildData::GuildUser *,ioGuildData::GuildUser *>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVioGuildData@@@std@@PAVioGuildData@@ABQAV3@@std@@YAXAAV?$allocator@PAVioGuildData@@@0@PAPAVioGuildData@@ABQAV2@@Z ; std::_Cons_val<std::allocator<ioGuildData *>,ioGuildData *,ioGuildData * const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@PAVioGuildData@@@std@@PAVioGuildData@@ABQAV3@@std@@YAXAAV?$allocator@PAVioGuildData@@@0@PAPAVioGuildData@@ABQAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVioGuildData@@@std@@PAVioGuildData@@ABQAV3@@std@@YAXAAV?$allocator@PAVioGuildData@@@0@PAPAVioGuildData@@ABQAV2@@Z PROC ; std::_Cons_val<std::allocator<ioGuildData *>,ioGuildData *,ioGuildData * const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN9@Cons_val@8
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN9@Cons_val@8:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@PAVioGuildData@@@std@@PAVioGuildData@@ABQAV3@@std@@YAXAAV?$allocator@PAVioGuildData@@@0@PAPAVioGuildData@@ABQAV2@@Z ENDP ; std::_Cons_val<std::allocator<ioGuildData *>,ioGuildData *,ioGuildData * const &>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@UInvitationUser@ioGuildInfo@@AAU34@@std@@YAXAAV?$allocator@UInvitationUser@ioGuildInfo@@@0@PAUInvitationUser@ioGuildInfo@@AAU23@@Z ; std::_Cons_val<std::allocator<ioGuildInfo::InvitationUser>,ioGuildInfo::InvitationUser,ioGuildInfo::InvitationUser &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@UInvitationUser@ioGuildInfo@@AAU34@@std@@YAXAAV?$allocator@UInvitationUser@ioGuildInfo@@@0@PAUInvitationUser@ioGuildInfo@@AAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@UInvitationUser@ioGuildInfo@@AAU34@@std@@YAXAAV?$allocator@UInvitationUser@ioGuildInfo@@@0@PAUInvitationUser@ioGuildInfo@@AAU23@@Z PROC ; std::_Cons_val<std::allocator<ioGuildInfo::InvitationUser>,ioGuildInfo::InvitationUser,ioGuildInfo::InvitationUser &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  0000c	e8 00 00 00 00	 call	 ??$construct@AAUInvitationUser@ioGuildInfo@@@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@AAU23@@Z ; std::allocator<ioGuildInfo::InvitationUser>::construct<ioGuildInfo::InvitationUser &>

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@UInvitationUser@ioGuildInfo@@AAU34@@std@@YAXAAV?$allocator@UInvitationUser@ioGuildInfo@@@0@PAUInvitationUser@ioGuildInfo@@AAU23@@Z ENDP ; std::_Cons_val<std::allocator<ioGuildInfo::InvitationUser>,ioGuildInfo::InvitationUser,ioGuildInfo::InvitationUser &>
_TEXT	ENDS
PUBLIC	??$_Move@PAUInvitationUser@ioGuildInfo@@PAU12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00@Z ; std::_Move<ioGuildInfo::InvitationUser *,ioGuildInfo::InvitationUser *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAUInvitationUser@ioGuildInfo@@PAU12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00@Z
_TEXT	SEGMENT
__Cat$522086 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAUInvitationUser@ioGuildInfo@@PAU12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00@Z PROC ; std::_Move<ioGuildInfo::InvitationUser *,ioGuildInfo::InvitationUser *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$522086[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAUInvitationUser@ioGuildInfo@@PAU12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioGuildInfo::InvitationUser *,ioGuildInfo::InvitationUser *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAUInvitationUser@ioGuildInfo@@PAU12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00@Z ENDP ; std::_Move<ioGuildInfo::InvitationUser *,ioGuildInfo::InvitationUser *>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAUGuildAttendRwardInfo@@@std@@PAUGuildAttendRwardInfo@@ABQAU3@@std@@YAXAAV?$allocator@PAUGuildAttendRwardInfo@@@0@PAPAUGuildAttendRwardInfo@@ABQAU2@@Z ; std::_Cons_val<std::allocator<GuildAttendRwardInfo *>,GuildAttendRwardInfo *,GuildAttendRwardInfo * const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@PAUGuildAttendRwardInfo@@@std@@PAUGuildAttendRwardInfo@@ABQAU3@@std@@YAXAAV?$allocator@PAUGuildAttendRwardInfo@@@0@PAPAUGuildAttendRwardInfo@@ABQAU2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAUGuildAttendRwardInfo@@@std@@PAUGuildAttendRwardInfo@@ABQAU3@@std@@YAXAAV?$allocator@PAUGuildAttendRwardInfo@@@0@PAPAUGuildAttendRwardInfo@@ABQAU2@@Z PROC ; std::_Cons_val<std::allocator<GuildAttendRwardInfo *>,GuildAttendRwardInfo *,GuildAttendRwardInfo * const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN9@Cons_val@9
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN9@Cons_val@9:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@PAUGuildAttendRwardInfo@@@std@@PAUGuildAttendRwardInfo@@ABQAU3@@std@@YAXAAV?$allocator@PAUGuildAttendRwardInfo@@@0@PAPAUGuildAttendRwardInfo@@ABQAU2@@Z ENDP ; std::_Cons_val<std::allocator<GuildAttendRwardInfo *>,GuildAttendRwardInfo *,GuildAttendRwardInfo * const &>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAUGuildRankRwardInfo@@@std@@PAUGuildRankRwardInfo@@ABQAU3@@std@@YAXAAV?$allocator@PAUGuildRankRwardInfo@@@0@PAPAUGuildRankRwardInfo@@ABQAU2@@Z ; std::_Cons_val<std::allocator<GuildRankRwardInfo *>,GuildRankRwardInfo *,GuildRankRwardInfo * const &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@PAUGuildRankRwardInfo@@@std@@PAUGuildRankRwardInfo@@ABQAU3@@std@@YAXAAV?$allocator@PAUGuildRankRwardInfo@@@0@PAPAUGuildRankRwardInfo@@ABQAU2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAUGuildRankRwardInfo@@@std@@PAUGuildRankRwardInfo@@ABQAU3@@std@@YAXAAV?$allocator@PAUGuildRankRwardInfo@@@0@PAPAUGuildRankRwardInfo@@ABQAU2@@Z PROC ; std::_Cons_val<std::allocator<GuildRankRwardInfo *>,GuildRankRwardInfo *,GuildRankRwardInfo * const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN9@Cons_val@10
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN9@Cons_val@10:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@PAUGuildRankRwardInfo@@@std@@PAUGuildRankRwardInfo@@ABQAU3@@std@@YAXAAV?$allocator@PAUGuildRankRwardInfo@@@0@PAPAUGuildRankRwardInfo@@ABQAU2@@Z ENDP ; std::_Cons_val<std::allocator<GuildRankRwardInfo *>,GuildRankRwardInfo *,GuildRankRwardInfo * const &>
_TEXT	ENDS
PUBLIC	??$_Move@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00@Z ; std::_Move<GashaponPresent *,GashaponPresent *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00@Z
_TEXT	SEGMENT
__Cat$522174 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00@Z PROC ; std::_Move<GashaponPresent *,GashaponPresent *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$522174[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<GashaponPresent *,GashaponPresent *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00@Z ENDP ; std::_Move<GashaponPresent *,GashaponPresent *>
_TEXT	ENDS
PUBLIC	??$_Umove@PAPAVioGuildData@@@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEPAPAVioGuildData@@PAPAV2@00@Z ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Umove<ioGuildData * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??$_Umove@PAPAVioGuildData@@@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEPAPAVioGuildData@@PAPAV2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAVioGuildData@@@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEPAPAVioGuildData@@PAPAV2@00@Z PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Umove<ioGuildData * *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVioGuildData@@PAPAV1@V?$allocator@PAVioGuildData@@@std@@@std@@YAPAPAVioGuildData@@PAPAV1@00AAV?$allocator@PAVioGuildData@@@0@@Z ; std::_Uninitialized_move<ioGuildData * *,ioGuildData * *,std::allocator<ioGuildData *> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAPAVioGuildData@@@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEPAPAVioGuildData@@PAPAV2@00@Z ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Umove<ioGuildData * *>
_TEXT	ENDS
PUBLIC	??$_Umove@PAPAUGuildAttendRwardInfo@@@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEPAPAUGuildAttendRwardInfo@@PAPAU2@00@Z ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Umove<GuildAttendRwardInfo * *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Umove@PAPAUGuildAttendRwardInfo@@@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEPAPAUGuildAttendRwardInfo@@PAPAU2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAUGuildAttendRwardInfo@@@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEPAPAUGuildAttendRwardInfo@@PAPAU2@00@Z PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Umove<GuildAttendRwardInfo * *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUGuildAttendRwardInfo@@PAPAU1@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildAttendRwardInfo@@@0@@Z ; std::_Uninitialized_move<GuildAttendRwardInfo * *,GuildAttendRwardInfo * *,std::allocator<GuildAttendRwardInfo *> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAPAUGuildAttendRwardInfo@@@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEPAPAUGuildAttendRwardInfo@@PAPAU2@00@Z ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Umove<GuildAttendRwardInfo * *>
_TEXT	ENDS
PUBLIC	??$_Umove@PAPAUGuildRankRwardInfo@@@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEPAPAUGuildRankRwardInfo@@PAPAU2@00@Z ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Umove<GuildRankRwardInfo * *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Umove@PAPAUGuildRankRwardInfo@@@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEPAPAUGuildRankRwardInfo@@PAPAU2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAUGuildRankRwardInfo@@@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEPAPAUGuildRankRwardInfo@@PAPAU2@00@Z PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Umove<GuildRankRwardInfo * *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUGuildRankRwardInfo@@PAPAU1@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildRankRwardInfo@@@0@@Z ; std::_Uninitialized_move<GuildRankRwardInfo * *,GuildRankRwardInfo * *,std::allocator<GuildRankRwardInfo *> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAPAUGuildRankRwardInfo@@@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEPAPAUGuildRankRwardInfo@@PAPAU2@00@Z ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Umove<GuildRankRwardInfo * *>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@ABU34@@Z ; std::allocator<ioGuildData::GuildUser>::construct
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@ABU34@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@ABU34@@Z PROC ; std::allocator<ioGuildData::GuildUser>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  00006	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00009	e8 00 00 00 00	 call	 ??$_Construct@UGuildUser@ioGuildData@@ABU12@@std@@YAXPAUGuildUser@ioGuildData@@ABU12@@Z ; std::_Construct<ioGuildData::GuildUser,ioGuildData::GuildUser const &>
  0000e	59		 pop	 ecx
  0000f	59		 pop	 ecx

; 198  : 		}

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
?construct@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@ABU34@@Z ENDP ; std::allocator<ioGuildData::GuildUser>::construct
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@ABU34@@Z ; std::allocator<ioGuildInfo::InvitationUser>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@ABU34@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@ABU34@@Z PROC ; std::allocator<ioGuildInfo::InvitationUser>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  00006	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00009	e8 00 00 00 00	 call	 ??$_Construct@UInvitationUser@ioGuildInfo@@ABU12@@std@@YAXPAUInvitationUser@ioGuildInfo@@ABU12@@Z ; std::_Construct<ioGuildInfo::InvitationUser,ioGuildInfo::InvitationUser const &>
  0000e	59		 pop	 ecx
  0000f	59		 pop	 ecx

; 198  : 		}

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
?construct@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@ABU34@@Z ENDP ; std::allocator<ioGuildInfo::InvitationUser>::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@@Z ; std::allocator<ioGuildData::GuildUser>::destroy
; Function compile flags: /Ogsp
;	COMDAT ?destroy@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@@Z PROC ; std::allocator<ioGuildData::GuildUser>::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 213  : 		_Destroy(_Ptr);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??1GuildUser@ioGuildData@@QAE@XZ

; 214  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?destroy@?$allocator@UGuildUser@ioGuildData@@@std@@QAEXPAUGuildUser@ioGuildData@@@Z ENDP ; std::allocator<ioGuildData::GuildUser>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@@Z ; std::allocator<ioGuildInfo::InvitationUser>::destroy
; Function compile flags: /Ogsp
;	COMDAT ?destroy@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@@Z PROC ; std::allocator<ioGuildInfo::InvitationUser>::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 213  : 		_Destroy(_Ptr);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ

; 214  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?destroy@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@@Z ENDP ; std::allocator<ioGuildInfo::InvitationUser>::destroy
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
_TEXT	ENDS
PUBLIC	??$iter_swap@PAUGuildUser@ioGuildData@@PAU12@@std@@YAXPAUGuildUser@ioGuildData@@0@Z ; std::iter_swap<ioGuildData::GuildUser *,ioGuildData::GuildUser *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$iter_swap@PAUGuildUser@ioGuildData@@PAU12@@std@@YAXPAUGuildUser@ioGuildData@@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$iter_swap@PAUGuildUser@ioGuildData@@PAU12@@std@@YAXPAUGuildUser@ioGuildData@@0@Z PROC ; std::iter_swap<ioGuildData::GuildUser *,ioGuildData::GuildUser *>, COMDAT

; 2133 : 	{	// swap *_Left and *_Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2135 : 	}

  00003	5d		 pop	 ebp

; 2134 : 	swap(*_Left, *_Right);

  00004	e9 00 00 00 00	 jmp	 ??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z ; std::swap<ioGuildData::GuildUser>
??$iter_swap@PAUGuildUser@ioGuildData@@PAU12@@std@@YAXPAUGuildUser@ioGuildData@@0@Z ENDP ; std::iter_swap<ioGuildData::GuildUser *,ioGuildData::GuildUser *>
_TEXT	ENDS
PUBLIC	??$_Insertion_sort1@PAUGuildUser@ioGuildData@@VGuildUserSort@2@U12@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z ; std::_Insertion_sort1<ioGuildData::GuildUser *,ioGuildData::GuildUserSort,ioGuildData::GuildUser>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Insertion_sort1@PAUGuildUser@ioGuildData@@VGuildUserSort@2@U12@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Insertion_sort1@PAUGuildUser@ioGuildData@@VGuildUserSort@2@U12@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z$0
__ehfuncinfo$??$_Insertion_sort1@PAUGuildUser@ioGuildData@@VGuildUserSort@2@U12@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Insertion_sort1@PAUGuildUser@ioGuildData@@VGuildUserSort@2@U12@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
xdata$x	ENDS
;	COMDAT ??$_Insertion_sort1@PAUGuildUser@ioGuildData@@VGuildUserSort@2@U12@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z
_TEXT	SEGMENT
__Val$516805 = -68					; size = 56
__$EHRec$ = -12						; size = 12
__Next1$516804 = 8					; size = 4
__First$ = 8						; size = 4
__Cat$522256 = 12					; size = 1
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
___formal$ = 20						; size = 4
??$_Insertion_sort1@PAUGuildUser@ioGuildData@@VGuildUserSort@2@U12@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z PROC ; std::_Insertion_sort1<ioGuildData::GuildUser *,ioGuildData::GuildUserSort,ioGuildData::GuildUser>, COMDAT

; 3650 : 	{	// insertion sort [_First, _Last), using _Pred

  00000	6a 38		 push	 56			; 00000038H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Insertion_sort1@PAUGuildUser@ioGuildData@@VGuildUserSort@2@U12@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 3651 : 	if (_First != _Last)

  0000c	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  0000f	3b 5d 0c	 cmp	 ebx, DWORD PTR __Last$[ebp]
  00012	74 7f		 je	 SHORT $LN6@Insertion_

; 3652 : 		for (_BidIt _Next = _First; ++_Next != _Last; )

  00014	8d 7b 38	 lea	 edi, DWORD PTR [ebx+56]
  00017	eb 75		 jmp	 SHORT $LN42@Insertion_
$LL7@Insertion_:

; 3653 : 			{	// order next element
; 3654 : 			_BidIt _Next1 = _Next;
; 3655 : 			_Ty _Val = _Move(*_Next);

  00019	57		 push	 edi
  0001a	8d 4d bc	 lea	 ecx, DWORD PTR __Val$516805[ebp]
  0001d	89 7d 08	 mov	 DWORD PTR __Next1$516804[ebp], edi
  00020	e8 00 00 00 00	 call	 ??0GuildUser@ioGuildData@@QAE@ABU01@@Z

; 3656 : 
; 3657 : 			if (_DEBUG_LT_PRED(_Pred, _Val, *_First))

  00025	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  00028	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0002c	39 45 cc	 cmp	 DWORD PTR __Val$516805[ebp+16], eax
  0002f	7f 09		 jg	 SHORT $LN39@Insertion_
  00031	75 1c		 jne	 SHORT $LN5@Insertion_
  00033	8b 45 bc	 mov	 eax, DWORD PTR __Val$516805[ebp]
  00036	3b 03		 cmp	 eax, DWORD PTR [ebx]
  00038	73 15		 jae	 SHORT $LN5@Insertion_
$LN39@Insertion_:

; 3658 : 				{	// found new earliest element, move to front
; 3659 : 				_Move_backward(_First, _Next, ++_Next1);

  0003a	ff 75 0c	 push	 DWORD PTR __Cat$522256[ebp]
  0003d	8d 47 38	 lea	 eax, DWORD PTR [edi+56]
  00040	50		 push	 eax
  00041	57		 push	 edi
  00042	53		 push	 ebx
  00043	e8 00 00 00 00	 call	 ??$_Move_backward@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move_backward<ioGuildData::GuildUser *,ioGuildData::GuildUser *>
  00048	83 c4 10	 add	 esp, 16			; 00000010H

; 3660 : 				*_First = _Move(_Val);

  0004b	8b cb		 mov	 ecx, ebx

; 3661 : 				}
; 3662 : 			else

  0004d	eb 27		 jmp	 SHORT $LN43@Insertion_
$LN5@Insertion_:

; 3663 : 				{	// look for insertion point after first
; 3664 : 				for (_BidIt _First1 = _Next1;

  0004f	8b f7		 mov	 esi, edi
$LL3@Insertion_:

; 3665 : 					_DEBUG_LT_PRED(_Pred, _Val, *--_First1);
; 3666 : 					_Next1 = _First1)

  00051	8b 46 d8	 mov	 eax, DWORD PTR [esi-40]
  00054	83 ee 38	 sub	 esi, 56			; 00000038H
  00057	39 45 cc	 cmp	 DWORD PTR __Val$516805[ebp+16], eax
  0005a	7f 09		 jg	 SHORT $LN40@Insertion_
  0005c	75 15		 jne	 SHORT $LN26@Insertion_
  0005e	8b 45 bc	 mov	 eax, DWORD PTR __Val$516805[ebp]
  00061	3b 06		 cmp	 eax, DWORD PTR [esi]
  00063	73 0e		 jae	 SHORT $LN26@Insertion_
$LN40@Insertion_:

; 3667 : 					*_Next1 = _Move(*_First1);	// move hole down

  00065	8b 4d 08	 mov	 ecx, DWORD PTR __Next1$516804[ebp]
  00068	56		 push	 esi
  00069	e8 00 00 00 00	 call	 ??4GuildUser@ioGuildData@@QAEAAU01@ABU01@@Z
  0006e	89 75 08	 mov	 DWORD PTR __Next1$516804[ebp], esi
  00071	eb de		 jmp	 SHORT $LL3@Insertion_

; 3665 : 					_DEBUG_LT_PRED(_Pred, _Val, *--_First1);
; 3666 : 					_Next1 = _First1)

$LN26@Insertion_:

; 3668 : 				*_Next1 = _Move(_Val);	// insert element in hole

  00073	8b 4d 08	 mov	 ecx, DWORD PTR __Next1$516804[ebp]
$LN43@Insertion_:
  00076	8d 45 bc	 lea	 eax, DWORD PTR __Val$516805[ebp]
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ??4GuildUser@ioGuildData@@QAEAAU01@ABU01@@Z

; 3669 : 				}
; 3670 : 			}

  0007f	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00083	8d 4d bc	 lea	 ecx, DWORD PTR __Val$516805[ebp]
  00086	e8 00 00 00 00	 call	 ??1GuildUser@ioGuildData@@QAE@XZ
  0008b	83 c7 38	 add	 edi, 56			; 00000038H
$LN42@Insertion_:

; 3652 : 		for (_BidIt _Next = _First; ++_Next != _Last; )

  0008e	3b 7d 0c	 cmp	 edi, DWORD PTR __Last$[ebp]
  00091	75 86		 jne	 SHORT $LL7@Insertion_
$LN6@Insertion_:

; 3671 : 	}

  00093	e8 00 00 00 00	 call	 __EH_epilog3
  00098	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Insertion_sort1@PAUGuildUser@ioGuildData@@VGuildUserSort@2@U12@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z$0:
  00000	8d 4d bc	 lea	 ecx, DWORD PTR __Val$516805[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1GuildUser@ioGuildData@@QAE@XZ
__ehhandler$??$_Insertion_sort1@PAUGuildUser@ioGuildData@@VGuildUserSort@2@U12@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Insertion_sort1@PAUGuildUser@ioGuildData@@VGuildUserSort@2@U12@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Insertion_sort1@PAUGuildUser@ioGuildData@@VGuildUserSort@2@U12@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z ENDP ; std::_Insertion_sort1<ioGuildData::GuildUser *,ioGuildData::GuildUserSort,ioGuildData::GuildUser>
PUBLIC	??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@U34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@$$QAU23@@Z ; std::_Cons_val<std::allocator<ioGuildData::GuildUser>,ioGuildData::GuildUser,ioGuildData::GuildUser>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@U34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@$$QAU23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@U34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@$$QAU23@@Z$0
__ehfuncinfo$??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@U34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@$$QAU23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@U34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@$$QAU23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@U34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@$$QAU23@@Z
_TEXT	SEGMENT
$T522307 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@U34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@$$QAU23@@Z PROC ; std::_Cons_val<std::allocator<ioGuildData::GuildUser>,ioGuildData::GuildUser,ioGuildData::GuildUser>, COMDAT

; 279  : 	{	// construct using allocator

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@U34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@$$QAU23@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  0000f	89 4d f0	 mov	 DWORD PTR $T522307[ebp], ecx
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 c9		 test	 ecx, ecx
  00018	74 08		 je	 SHORT $LN7@Cons_val@11
  0001a	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0GuildUser@ioGuildData@@QAE@ABU01@@Z
$LN7@Cons_val@11:

; 281  : 	}

  00022	e8 00 00 00 00	 call	 __EH_epilog3
  00027	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@U34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@$$QAU23@@Z$0:
  00000	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T522307[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@U34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@$$QAU23@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@U34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@$$QAU23@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@U34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@$$QAU23@@Z ENDP ; std::_Cons_val<std::allocator<ioGuildData::GuildUser>,ioGuildData::GuildUser,ioGuildData::GuildUser>
PUBLIC	??$_Cons_val@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@UInvitationUser@ioGuildInfo@@U34@@std@@YAXAAV?$allocator@UInvitationUser@ioGuildInfo@@@0@PAUInvitationUser@ioGuildInfo@@$$QAU23@@Z ; std::_Cons_val<std::allocator<ioGuildInfo::InvitationUser>,ioGuildInfo::InvitationUser,ioGuildInfo::InvitationUser>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@UInvitationUser@ioGuildInfo@@U34@@std@@YAXAAV?$allocator@UInvitationUser@ioGuildInfo@@@0@PAUInvitationUser@ioGuildInfo@@$$QAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@UInvitationUser@ioGuildInfo@@U34@@std@@YAXAAV?$allocator@UInvitationUser@ioGuildInfo@@@0@PAUInvitationUser@ioGuildInfo@@$$QAU23@@Z PROC ; std::_Cons_val<std::allocator<ioGuildInfo::InvitationUser>,ioGuildInfo::InvitationUser,ioGuildInfo::InvitationUser>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  0000c	e8 00 00 00 00	 call	 ?construct@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@$$QAU34@@Z ; std::allocator<ioGuildInfo::InvitationUser>::construct

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@UInvitationUser@ioGuildInfo@@U34@@std@@YAXAAV?$allocator@UInvitationUser@ioGuildInfo@@@0@PAUInvitationUser@ioGuildInfo@@$$QAU23@@Z ENDP ; std::_Cons_val<std::allocator<ioGuildInfo::InvitationUser>,ioGuildInfo::InvitationUser,ioGuildInfo::InvitationUser>
_TEXT	ENDS
PUBLIC	??$_Med3@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00VGuildUserSort@2@@Z ; std::_Med3<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
;	COMDAT ??$_Med3@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00VGuildUserSort@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Med3@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00VGuildUserSort@2@@Z PROC ; std::_Med3<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>, COMDAT

; 3683 : 	{	// sort median of three elements to middle

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 3684 : 	if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First))

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Mid$[ebp]
  00007	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000a	57		 push	 edi
  0000b	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  0000e	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00011	3b c1		 cmp	 eax, ecx
  00013	7f 08		 jg	 SHORT $LN30@Med3
  00015	75 0f		 jne	 SHORT $LN12@Med3
  00017	8b 06		 mov	 eax, DWORD PTR [esi]
  00019	3b 07		 cmp	 eax, DWORD PTR [edi]
  0001b	73 09		 jae	 SHORT $LN12@Med3
$LN30@Med3:

; 3685 : 		_STD iter_swap(_Mid, _First);

  0001d	57		 push	 edi
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z ; std::swap<ioGuildData::GuildUser>
  00024	59		 pop	 ecx
  00025	59		 pop	 ecx
$LN12@Med3:

; 3686 : 	if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid))

  00026	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  00029	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0002c	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  0002f	3b ca		 cmp	 ecx, edx
  00031	7f 08		 jg	 SHORT $LN31@Med3
  00033	75 0f		 jne	 SHORT $LN20@Med3
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	3b 0e		 cmp	 ecx, DWORD PTR [esi]
  00039	73 09		 jae	 SHORT $LN20@Med3
$LN31@Med3:

; 3687 : 		_STD iter_swap(_Last, _Mid);

  0003b	56		 push	 esi
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z ; std::swap<ioGuildData::GuildUser>
  00042	59		 pop	 ecx
  00043	59		 pop	 ecx
$LN20@Med3:

; 3688 : 	if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First))

  00044	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00047	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0004a	3b c1		 cmp	 eax, ecx
  0004c	7f 08		 jg	 SHORT $LN32@Med3
  0004e	75 0f		 jne	 SHORT $LN28@Med3
  00050	8b 06		 mov	 eax, DWORD PTR [esi]
  00052	3b 07		 cmp	 eax, DWORD PTR [edi]
  00054	73 09		 jae	 SHORT $LN28@Med3
$LN32@Med3:

; 3689 : 		_STD iter_swap(_Mid, _First);

  00056	57		 push	 edi
  00057	56		 push	 esi
  00058	e8 00 00 00 00	 call	 ??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z ; std::swap<ioGuildData::GuildUser>
  0005d	59		 pop	 ecx
  0005e	59		 pop	 ecx
$LN28@Med3:
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi

; 3690 : 	}

  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??$_Med3@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00VGuildUserSort@2@@Z ENDP ; std::_Med3<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
_TEXT	ENDS
PUBLIC	??$_Adjust_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@HH$$QAU12@VGuildUserSort@2@@Z ; std::_Adjust_heap<ioGuildData::GuildUser *,int,ioGuildData::GuildUser,ioGuildData::GuildUserSort>
; Function compile flags: /Ogsp
;	COMDAT ??$_Adjust_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@HH$$QAU12@VGuildUserSort@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Top$ = 12						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Adjust_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@HH$$QAU12@VGuildUserSort@2@@Z PROC ; std::_Adjust_heap<ioGuildData::GuildUser *,int,ioGuildData::GuildUser,ioGuildData::GuildUserSort>, COMDAT

; 2565 : 	{	// percolate _Hole to _Bottom, then push _Val, using _Pred

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2566 : 	_Diff _Top = _Hole;

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Hole$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2567 : 	_Diff _Idx = 2 * _Hole + 2;
; 2568 : 
; 2569 : 	for (; _Idx < _Bottom; _Idx = 2 * _Idx + 2)

  00009	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  0000c	89 4d 0c	 mov	 DWORD PTR __Top$[ebp], ecx
  0000f	8d 74 09 02	 lea	 esi, DWORD PTR [ecx+ecx+2]
  00013	eb 33		 jmp	 SHORT $LN24@Adjust_hea
$LL5@Adjust_hea:

; 2570 : 		{	// move _Hole down to larger child
; 2571 : 		if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1))))

  00015	8b c6		 mov	 eax, esi
  00017	6b c0 38	 imul	 eax, 56			; 00000038H
  0001a	03 c7		 add	 eax, edi
  0001c	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0001f	8b 58 d8	 mov	 ebx, DWORD PTR [eax-40]
  00022	3b d3		 cmp	 edx, ebx
  00024	7f 09		 jg	 SHORT $LN22@Adjust_hea
  00026	75 08		 jne	 SHORT $LN2@Adjust_hea
  00028	8b 10		 mov	 edx, DWORD PTR [eax]
  0002a	3b 50 c8	 cmp	 edx, DWORD PTR [eax-56]
  0002d	73 01		 jae	 SHORT $LN2@Adjust_hea
$LN22@Adjust_hea:

; 2572 : 			--_Idx;

  0002f	4e		 dec	 esi
$LN2@Adjust_hea:

; 2573 : 		*(_First + _Hole) = _Move(*(_First + _Idx));

  00030	8b c6		 mov	 eax, esi
  00032	6b c9 38	 imul	 ecx, 56			; 00000038H
  00035	6b c0 38	 imul	 eax, 56			; 00000038H
  00038	03 c7		 add	 eax, edi
  0003a	50		 push	 eax
  0003b	03 cf		 add	 ecx, edi
  0003d	e8 00 00 00 00	 call	 ??4GuildUser@ioGuildData@@QAEAAU01@ABU01@@Z

; 2574 : 		_Hole = _Idx;

  00042	8b ce		 mov	 ecx, esi
  00044	8d 74 36 02	 lea	 esi, DWORD PTR [esi+esi+2]
$LN24@Adjust_hea:

; 2567 : 	_Diff _Idx = 2 * _Hole + 2;
; 2568 : 
; 2569 : 	for (; _Idx < _Bottom; _Idx = 2 * _Idx + 2)

  00048	8b 5d 10	 mov	 ebx, DWORD PTR __Bottom$[ebp]
  0004b	3b f3		 cmp	 esi, ebx
  0004d	7c c6		 jl	 SHORT $LL5@Adjust_hea

; 2575 : 		}
; 2576 : 
; 2577 : 	if (_Idx == _Bottom)

  0004f	75 17		 jne	 SHORT $LN1@Adjust_hea

; 2578 : 		{	// only child at bottom, move _Hole down to it
; 2579 : 		*(_First + _Hole) = _Move(*(_First + (_Bottom - 1)));

  00051	8b c3		 mov	 eax, ebx
  00053	6b c9 38	 imul	 ecx, 56			; 00000038H
  00056	6b c0 38	 imul	 eax, 56			; 00000038H
  00059	8d 44 38 c8	 lea	 eax, DWORD PTR [eax+edi-56]
  0005d	50		 push	 eax
  0005e	03 cf		 add	 ecx, edi
  00060	e8 00 00 00 00	 call	 ??4GuildUser@ioGuildData@@QAEAAU01@ABU01@@Z

; 2580 : 		_Hole = _Bottom - 1;

  00065	8d 4b ff	 lea	 ecx, DWORD PTR [ebx-1]
$LN1@Adjust_hea:

; 2581 : 		}
; 2582 : 	_Push_heap(_First, _Hole, _Top, _Move(_Val), _Pred);

  00068	ff 75 18	 push	 DWORD PTR __Pred$[ebp]
  0006b	ff 75 14	 push	 DWORD PTR __Val$[ebp]
  0006e	ff 75 0c	 push	 DWORD PTR __Top$[ebp]
  00071	51		 push	 ecx
  00072	57		 push	 edi
  00073	e8 00 00 00 00	 call	 ??$_Push_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@HH$$QAU12@VGuildUserSort@2@@Z ; std::_Push_heap<ioGuildData::GuildUser *,int,ioGuildData::GuildUser,ioGuildData::GuildUserSort>
  00078	83 c4 14	 add	 esp, 20			; 00000014H
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx

; 2583 : 	}

  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
??$_Adjust_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@HH$$QAU12@VGuildUserSort@2@@Z ENDP ; std::_Adjust_heap<ioGuildData::GuildUser *,int,ioGuildData::GuildUser,ioGuildData::GuildUserSort>
_TEXT	ENDS
PUBLIC	??$_Pop_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00$$QAU12@VGuildUserSort@2@PAH@Z ; std::_Pop_heap<ioGuildData::GuildUser *,int,ioGuildData::GuildUser,ioGuildData::GuildUserSort>
; Function compile flags: /Ogsp
;	COMDAT ??$_Pop_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00$$QAU12@VGuildUserSort@2@PAH@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
___formal$ = 28						; size = 4
??$_Pop_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00$$QAU12@VGuildUserSort@2@PAH@Z PROC ; std::_Pop_heap<ioGuildData::GuildUser *,int,ioGuildData::GuildUser,ioGuildData::GuildUserSort>, COMDAT

; 2591 : 	{	// pop *_First to *_Dest and reheap, using _Pred

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2592 : 	*_Dest = _Move(*_First);

  00003	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00006	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00009	e8 00 00 00 00	 call	 ??4GuildUser@ioGuildData@@QAEAAU01@ABU01@@Z

; 2593 : 	_Adjust_heap(_First, _Diff(0), _Diff(_Last - _First),
; 2594 : 		_Move(_Val), _Pred);

  0000e	ff 75 18	 push	 DWORD PTR __Pred$[ebp]
  00011	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00014	ff 75 14	 push	 DWORD PTR __Val$[ebp]
  00017	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  0001a	6a 38		 push	 56			; 00000038H
  0001c	59		 pop	 ecx
  0001d	99		 cdq
  0001e	f7 f9		 idiv	 ecx
  00020	50		 push	 eax
  00021	6a 00		 push	 0
  00023	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00026	e8 00 00 00 00	 call	 ??$_Adjust_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@HH$$QAU12@VGuildUserSort@2@@Z ; std::_Adjust_heap<ioGuildData::GuildUser *,int,ioGuildData::GuildUser,ioGuildData::GuildUserSort>
  0002b	83 c4 14	 add	 esp, 20			; 00000014H

; 2595 : 	}

  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??$_Pop_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00$$QAU12@VGuildUserSort@2@PAH@Z ENDP ; std::_Pop_heap<ioGuildData::GuildUser *,int,ioGuildData::GuildUser,ioGuildData::GuildUserSort>
_TEXT	ENDS
PUBLIC	??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::vector<GashaponPresent,std::allocator<GashaponPresent> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::vector<GashaponPresent,std::allocator<GashaponPresent> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::vector<GashaponPresent,std::allocator<GashaponPresent> >
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1988 : 		{	// initialize buffer, deallocating any storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1989 : 		if (!_Built)

  00003	80 7d 08 00	 cmp	 BYTE PTR __Built$[ebp], 0
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	74 20		 je	 SHORT $LN9@Tidy

; 1990 : 			;
; 1991 : 		else if (this->_BUF_SIZE <= this->_Myres)

  00010	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00014	72 1a		 jb	 SHORT $LN9@Tidy

; 1992 : 			{	// copy any leftovers to small buffer and deallocate
; 1993 : 			_Elem *_Ptr = this->_Bx._Ptr;

  00016	53		 push	 ebx
  00017	8b 1e		 mov	 ebx, DWORD PTR [esi]

; 1994 : 			if (0 < _Newsize)

  00019	85 ff		 test	 edi, edi
  0001b	74 0b		 je	 SHORT $LN7@Tidy

; 1995 : 				_Traits::copy(this->_Bx._Buf, _Ptr, _Newsize);

  0001d	57		 push	 edi
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	e8 00 00 00 00	 call	 _memcpy
  00025	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@Tidy:

; 1996 : 			this->_Alval.deallocate(_Ptr, this->_Myres + 1);

  00028	53		 push	 ebx
  00029	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002e	59		 pop	 ecx
  0002f	5b		 pop	 ebx
$LN9@Tidy:

; 1997 : 			}
; 1998 : 		this->_Myres = this->_BUF_SIZE - 1;
; 1999 : 		_Eos(_Newsize);

  00030	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  00033	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  0003a	c6 04 37 00	 mov	 BYTE PTR [edi+esi], 0
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi

; 2000 : 		}

  00040	5d		 pop	 ebp
  00041	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@XZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@XZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::end
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1109 : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1110 : 		if (this->_Mysize < _Off)

  00007	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  0000d	3b c1		 cmp	 eax, ecx
  0000f	73 0b		 jae	 SHORT $LN3@erase

; 1111 : 			_Xran();	// _Off off end

  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN28@erase:
$LN3@erase:

; 1112 : 		if (this->_Mysize - _Off < _Count)

  0001c	8b 5d 0c	 mov	 ebx, DWORD PTR __Count$[ebp]
  0001f	2b c1		 sub	 eax, ecx
  00021	3b c3		 cmp	 eax, ebx

; 1113 : 			_Count = this->_Mysize - _Off;	// trim _Count

  00023	0f 42 d8	 cmovb	 ebx, eax

; 1114 : 		if (0 < _Count)

  00026	85 db		 test	 ebx, ebx
  00028	74 47		 je	 SHORT $LN25@erase

; 1115 : 			{	// move elements down
; 1116 : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 1117 : 				this->_Mysize - _Off - _Count);

  0002a	8b 56 14	 mov	 edx, DWORD PTR [esi+20]
  0002d	57		 push	 edi
  0002e	83 fa 10	 cmp	 edx, 16			; 00000010H
  00031	72 04		 jb	 SHORT $LN11@erase
  00033	8b 3e		 mov	 edi, DWORD PTR [esi]
  00035	eb 02		 jmp	 SHORT $LN12@erase
$LN11@erase:
  00037	8b fe		 mov	 edi, esi
$LN12@erase:
  00039	83 fa 10	 cmp	 edx, 16			; 00000010H
  0003c	72 04		 jb	 SHORT $LN15@erase
  0003e	8b 16		 mov	 edx, DWORD PTR [esi]
  00040	eb 02		 jmp	 SHORT $LN16@erase
$LN15@erase:
  00042	8b d6		 mov	 edx, esi
$LN16@erase:
  00044	2b c3		 sub	 eax, ebx
  00046	03 f9		 add	 edi, ecx
  00048	50		 push	 eax
  00049	03 fb		 add	 edi, ebx
  0004b	03 d1		 add	 edx, ecx
  0004d	57		 push	 edi
  0004e	52		 push	 edx
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove

; 1118 : 			size_type _Newsize = this->_Mysize - _Count;

  00055	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00058	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005b	2b c3		 sub	 eax, ebx

; 1119 : 			_Eos(_Newsize);

  0005d	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00061	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00064	5f		 pop	 edi
  00065	72 04		 jb	 SHORT $LN23@erase
  00067	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00069	eb 02		 jmp	 SHORT $LN24@erase
$LN23@erase:
  0006b	8b ce		 mov	 ecx, esi
$LN24@erase:
  0006d	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0
$LN25@erase:

; 1120 : 			}
; 1121 : 		return (*this);

  00071	8b c6		 mov	 eax, esi
  00073	5e		 pop	 esi
  00074	5b		 pop	 ebx

; 1122 : 		}

  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
$LN27@erase:
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Make_iter
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Make_iter@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Make_iter
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<unsigned long,std::allocator<unsigned long> > >::operator!=
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
EXTRN	__EH_prolog3_catch:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
tv296 = -20						; size = 4
__Newres$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1919 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	6a 0c		 push	 12			; 0000000cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 e8	 mov	 DWORD PTR _this$[ebp], esi

; 1920 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

  00011	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  00014	83 cf 0f	 or	 edi, 15			; 0000000fH

; 1921 : 		if (max_size() < _Newres)

  00017	83 ff fe	 cmp	 edi, -2			; fffffffeH
  0001a	76 05		 jbe	 SHORT $LN9@Copy

; 1922 : 			_Newres = _Newsize;	// undo roundup if too big

  0001c	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0001f	eb 27		 jmp	 SHORT $LN5@Copy
$LN9@Copy:

; 1923 : 		else if (this->_Myres / 2 <= _Newres / 3)

  00021	33 d2		 xor	 edx, edx
  00023	6a 03		 push	 3
  00025	8b c7		 mov	 eax, edi
  00027	5b		 pop	 ebx
  00028	f7 f3		 div	 ebx
  0002a	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0002d	89 4d ec	 mov	 DWORD PTR tv296[ebp], ecx
  00030	d1 6d ec	 shr	 DWORD PTR tv296[ebp], 1
  00033	8b 55 ec	 mov	 edx, DWORD PTR tv296[ebp]
  00036	3b d0		 cmp	 edx, eax
  00038	76 0e		 jbe	 SHORT $LN5@Copy

; 1924 : 			;
; 1925 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

  0003a	6a fe		 push	 -2			; fffffffeH
  0003c	5f		 pop	 edi
  0003d	8b c7		 mov	 eax, edi
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	77 03		 ja	 SHORT $LN5@Copy

; 1926 : 			_Newres = this->_Myres
; 1927 : 				+ this->_Myres / 2;	// grow exponentially if possible

  00045	8d 3c 0a	 lea	 edi, DWORD PTR [edx+ecx]
$LN5@Copy:

; 1928 : 		else
; 1929 : 			_Newres = max_size();	// settle for max_size()
; 1930 : 
; 1931 : 		_Elem *_Ptr;
; 1932 : 		_TRY_BEGIN

  00048	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0

; 1933 : 			_Ptr = this->_Alval.allocate(_Newres + 1);

  0004c	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  0004f	6a 00		 push	 0
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ??$_Allocate@D@std@@YAPADIPAD@Z ; std::_Allocate<char>
  00057	59		 pop	 ecx
  00058	59		 pop	 ecx
  00059	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  0005c	eb 27		 jmp	 SHORT $LN19@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 1934 : 		_CATCH_ALL
; 1935 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  0005e	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00061	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00064	89 45 ec	 mov	 DWORD PTR __Newres$[ebp], eax

; 1936 : 			_TRY_BEGIN
; 1937 : 				_Ptr = this->_Alval.allocate(_Newres + 1);

  00067	40		 inc	 eax
  00068	6a 00		 push	 0
  0006a	50		 push	 eax
  0006b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  0006f	e8 00 00 00 00	 call	 ??$_Allocate@D@std@@YAPADIPAD@Z ; std::_Allocate<char>
  00074	59		 pop	 ecx
  00075	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  00078	59		 pop	 ecx

; 1941 : 			_CATCH_END
; 1942 : 		_CATCH_END

  00079	b8 00 00 00 00	 mov	 eax, $LN63@Copy
  0007e	c3		 ret	 0
$LN63@Copy:
  0007f	8b 75 e8	 mov	 esi, DWORD PTR _this$[ebp]
  00082	8b 7d ec	 mov	 edi, DWORD PTR __Newres$[ebp]
$LN19@Copy:

; 1943 : 
; 1944 : 		if (0 < _Oldlen)

  00085	8b 5d 0c	 mov	 ebx, DWORD PTR __Oldlen$[ebp]
  00088	85 db		 test	 ebx, ebx
  0008a	74 19		 je	 SHORT $LN52@Copy

; 1945 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  0008c	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00090	72 04		 jb	 SHORT $LN50@Copy
  00092	8b 06		 mov	 eax, DWORD PTR [esi]
  00094	eb 02		 jmp	 SHORT $LN51@Copy
$LN50@Copy:
  00096	8b c6		 mov	 eax, esi
$LN51@Copy:
  00098	53		 push	 ebx
  00099	50		 push	 eax
  0009a	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  0009d	e8 00 00 00 00	 call	 _memcpy
  000a2	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN52@Copy:

; 1946 : 		_Tidy(true);

  000a5	6a 00		 push	 0
  000a7	6a 01		 push	 1
  000a9	8b ce		 mov	 ecx, esi
  000ab	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 1947 : 		this->_Bx._Ptr = _Ptr;

  000b0	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000b3	89 06		 mov	 DWORD PTR [esi], eax

; 1948 : 		this->_Myres = _Newres;
; 1949 : 		_Eos(_Oldlen);

  000b5	83 ff 10	 cmp	 edi, 16			; 00000010H
  000b8	89 7e 14	 mov	 DWORD PTR [esi+20], edi
  000bb	89 5e 10	 mov	 DWORD PTR [esi+16], ebx
  000be	0f 42 c6	 cmovb	 eax, esi
  000c1	c6 04 18 00	 mov	 BYTE PTR [eax+ebx], 0

; 1950 : 		}

  000c5	e8 00 00 00 00	 call	 __EH_epilog3
  000ca	c2 08 00	 ret	 8
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 1938 : 			_CATCH_ALL
; 1939 : 			_Tidy(true);	// failed again, discard storage and reraise

  000cd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	33 f6		 xor	 esi, esi
  000d2	56		 push	 esi
  000d3	6a 01		 push	 1
  000d5	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 1940 : 			_RERAISE;

  000da	56		 push	 esi
  000db	56		 push	 esi
  000dc	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN67@Copy:
$LN66@Copy:
  000e1	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	??$_Cons_val@V?$allocator@K@std@@KABK@std@@YAXAAV?$allocator@K@0@PAKABK@Z ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@K@std@@KABK@std@@YAXAAV?$allocator@K@0@PAKABK@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@K@std@@KABK@std@@YAXAAV?$allocator@K@0@PAKABK@Z PROC ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN9@Cons_val@12
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN9@Cons_val@12:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@K@std@@KABK@std@@YAXAAV?$allocator@K@0@PAKABK@Z ENDP ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long const &>
_TEXT	ENDS
PUBLIC	??$_Umove@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Umove<unsigned long *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??$_Umove@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Umove<unsigned long *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::allocator<unsigned long> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Umove<unsigned long *>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@@Z ; std::allocator<GashaponPresent>::destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@@Z PROC ; std::allocator<GashaponPresent>::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 213  : 		_Destroy(_Ptr);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??1GashaponPresent@@QAE@XZ ; GashaponPresent::~GashaponPresent

; 214  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?destroy@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@@Z ENDP ; std::allocator<GashaponPresent>::destroy
_TEXT	ENDS
PUBLIC	?GetUserIndex@ioGuildData@@QAEKABVioHashString@@@Z ; ioGuildData::GetUserIndex
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
;	COMDAT ?GetUserIndex@ioGuildData@@QAEKABVioHashString@@@Z
_TEXT	SEGMENT
_szUserName$ = 8					; size = 4
?GetUserIndex@ioGuildData@@QAEKABVioHashString@@@Z PROC	; ioGuildData::GetUserIndex, COMDAT
; _this$ = ecx

; 348  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 349  : 	vGuildUser::iterator iter,iEnd;
; 350  : 	iEnd = m_vUserList.end();
; 351  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  00004	8b 71 58	 mov	 esi, DWORD PTR [ecx+88]
  00007	57		 push	 edi
  00008	8b 79 5c	 mov	 edi, DWORD PTR [ecx+92]
  0000b	eb 13		 jmp	 SHORT $LN50@GetUserInd
$LL35@GetUserInd:

; 352  : 	{
; 353  : 		GuildUser &kUserInfo = *iter;
; 354  : 		if( kUserInfo.m_szUserID == szUserName )

  0000d	ff 75 08	 push	 DWORD PTR _szUserName$[ebp]
  00010	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00019	84 c0		 test	 al, al
  0001b	75 0f		 jne	 SHORT $LN48@GetUserInd

; 349  : 	vGuildUser::iterator iter,iEnd;
; 350  : 	iEnd = m_vUserList.end();
; 351  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  0001d	83 c6 38	 add	 esi, 56			; 00000038H
$LN50@GetUserInd:
  00020	3b f7		 cmp	 esi, edi
  00022	75 e9		 jne	 SHORT $LL35@GetUserInd

; 357  : 		}
; 358  : 	}
; 359  : 	return 0;

  00024	33 c0		 xor	 eax, eax
$LN5@GetUserInd:
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi

; 360  : }

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
$LN48@GetUserInd:

; 355  : 		{
; 356  : 			return kUserInfo.m_dwUserIndex;

  0002c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002f	eb f5		 jmp	 SHORT $LN5@GetUserInd
?GetUserIndex@ioGuildData@@QAEKABVioHashString@@@Z ENDP	; ioGuildData::GetUserIndex
_TEXT	ENDS
PUBLIC	?GetUserTableIndex@ioGuildData@@QAEKABVioHashString@@@Z ; ioGuildData::GetUserTableIndex
; Function compile flags: /Ogsp
;	COMDAT ?GetUserTableIndex@ioGuildData@@QAEKABVioHashString@@@Z
_TEXT	SEGMENT
_szUserName$ = 8					; size = 4
?GetUserTableIndex@ioGuildData@@QAEKABVioHashString@@@Z PROC ; ioGuildData::GetUserTableIndex, COMDAT
; _this$ = ecx

; 363  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 364  : 	vGuildUser::iterator iter,iEnd;
; 365  : 	iEnd = m_vUserList.end();
; 366  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  00004	8b 71 58	 mov	 esi, DWORD PTR [ecx+88]
  00007	57		 push	 edi
  00008	8b 79 5c	 mov	 edi, DWORD PTR [ecx+92]
  0000b	eb 13		 jmp	 SHORT $LN50@GetUserTab
$LL35@GetUserTab:

; 367  : 	{
; 368  : 		GuildUser &kUserInfo = *iter;
; 369  : 		if( kUserInfo.m_szUserID == szUserName )

  0000d	ff 75 08	 push	 DWORD PTR _szUserName$[ebp]
  00010	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00019	84 c0		 test	 al, al
  0001b	75 0f		 jne	 SHORT $LN48@GetUserTab

; 364  : 	vGuildUser::iterator iter,iEnd;
; 365  : 	iEnd = m_vUserList.end();
; 366  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  0001d	83 c6 38	 add	 esi, 56			; 00000038H
$LN50@GetUserTab:
  00020	3b f7		 cmp	 esi, edi
  00022	75 e9		 jne	 SHORT $LL35@GetUserTab

; 372  : 		}
; 373  : 	}
; 374  : 	return 0;

  00024	33 c0		 xor	 eax, eax
$LN5@GetUserTab:
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi

; 375  : }

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
$LN48@GetUserTab:

; 370  : 		{
; 371  : 			return kUserInfo.m_dwTableIndex;

  0002c	8b 06		 mov	 eax, DWORD PTR [esi]
  0002e	eb f6		 jmp	 SHORT $LN5@GetUserTab
?GetUserTableIndex@ioGuildData@@QAEKABVioHashString@@@Z ENDP ; ioGuildData::GetUserTableIndex
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z ; ioGuildData::GetUserNameA
EXTRN	_atexit:PROC
;	COMDAT ?szReturn@?6??GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z@4V3@A
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_BSS	SEGMENT
?szReturn@?6??GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z@4V3@A DB 010H DUP (?) ; `ioGuildData::GetUserNameA'::`7'::szReturn
_BSS	ENDS
;	COMDAT ?$S1@?6??GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z@4IA
_BSS	SEGMENT
?$S1@?6??GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z@4IA DD 01H DUP (?) ; `ioGuildData::GetUserNameA'::`7'::$S1
_BSS	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z$0
__ehfuncinfo$?GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_dwUserIndex$ = 8					; size = 4
?GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z PROC	; ioGuildData::GetUserNameA, COMDAT
; _this$ = ecx

; 378  : {

  00000	6a 00		 push	 0
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 379  : 	vGuildUser::iterator iter,iEnd;
; 380  : 	iEnd = m_vUserList.end();

  0000c	8b 51 5c	 mov	 edx, DWORD PTR [ecx+92]

; 381  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  0000f	8b 41 58	 mov	 eax, DWORD PTR [ecx+88]
  00012	eb 0b		 jmp	 SHORT $LN53@GetUserNam
$LL37@GetUserNam:

; 382  : 	{
; 383  : 		GuildUser &kUserInfo = *iter;
; 384  : 		if( kUserInfo.m_dwUserIndex == dwUserIndex )

  00014	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00017	3b 4d 08	 cmp	 ecx, DWORD PTR _dwUserIndex$[ebp]
  0001a	74 42		 je	 SHORT $LN50@GetUserNam

; 381  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  0001c	83 c0 38	 add	 eax, 56			; 00000038H
$LN53@GetUserNam:
  0001f	3b c2		 cmp	 eax, edx
  00021	75 f1		 jne	 SHORT $LL37@GetUserNam

; 387  : 		}
; 388  : 	}
; 389  : 	static ioHashString szReturn = "";

  00023	f6 05 00 00 00
	00 01		 test	 BYTE PTR ?$S1@?6??GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z@4IA, 1
  0002a	be 00 00 00 00	 mov	 esi, OFFSET ?szReturn@?6??GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z@4V3@A
  0002f	75 23		 jne	 SHORT $LN1@GetUserNam
  00031	83 0d 00 00 00
	00 01		 or	 DWORD PTR ?$S1@?6??GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z@4IA, 1
  00038	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00041	8b ce		 mov	 ecx, esi
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00049	68 00 00 00 00	 push	 OFFSET ??__FszReturn@?6??GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z@YAXXZ ; `ioGuildData::GetUserNameA'::`7'::`dynamic atexit destructor for 'szReturn''
  0004e	e8 00 00 00 00	 call	 _atexit
  00053	59		 pop	 ecx
$LN1@GetUserNam:

; 390  : 	return szReturn;

  00054	8b c6		 mov	 eax, esi
$LN6@GetUserNam:

; 391  : }

  00056	e8 00 00 00 00	 call	 __EH_epilog3
  0005b	c2 04 00	 ret	 4
$LN50@GetUserNam:

; 385  : 		{
; 386  : 			return kUserInfo.m_szUserID;

  0005e	83 c0 14	 add	 eax, 20			; 00000014H
  00061	eb f3		 jmp	 SHORT $LN6@GetUserNam
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z$0:
  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$S1@?6??GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z@4IA
  00005	83 e0 fe	 and	 eax, -2			; fffffffeH
  00008	a3 00 00 00 00	 mov	 DWORD PTR ?$S1@?6??GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z@4IA, eax
  0000d	c3		 ret	 0
__ehhandler$?GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z ENDP	; ioGuildData::GetUserNameA
PUBLIC	?GetOnlineUserSize@ioGuildData@@QAEHXZ		; ioGuildData::GetOnlineUserSize
; Function compile flags: /Ogsp
;	COMDAT ?GetOnlineUserSize@ioGuildData@@QAEHXZ
_TEXT	SEGMENT
?GetOnlineUserSize@ioGuildData@@QAEHXZ PROC		; ioGuildData::GetOnlineUserSize, COMDAT
; _this$ = ecx

; 395  : 	int iOnlineUserSize = 0;
; 396  : 	vGuildUser::iterator iter,iEnd;
; 397  : 	iEnd = m_vUserList.end();

  00000	8b 51 5c	 mov	 edx, DWORD PTR [ecx+92]

; 398  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  00003	8b 49 58	 mov	 ecx, DWORD PTR [ecx+88]
  00006	33 c0		 xor	 eax, eax
  00008	eb 0a		 jmp	 SHORT $LN49@GetOnlineU
$LL35@GetOnlineU:

; 399  : 	{
; 400  : 		GuildUser &kUserInfo = *iter;
; 401  : 		if( kUserInfo.m_bOnline )

  0000a	80 79 34 00	 cmp	 BYTE PTR [ecx+52], 0
  0000e	74 01		 je	 SHORT $LN3@GetOnlineU

; 402  : 			iOnlineUserSize++;

  00010	40		 inc	 eax
$LN3@GetOnlineU:

; 398  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  00011	83 c1 38	 add	 ecx, 56			; 00000038H
$LN49@GetOnlineU:
  00014	3b ca		 cmp	 ecx, edx
  00016	75 f2		 jne	 SHORT $LL35@GetOnlineU

; 403  : 	}
; 404  : 	return iOnlineUserSize;
; 405  : }

  00018	c3		 ret	 0
?GetOnlineUserSize@ioGuildData@@QAEHXZ ENDP		; ioGuildData::GetOnlineUserSize
_TEXT	ENDS
PUBLIC	?GetGuildMaster@ioGuildData@@QAEKXZ		; ioGuildData::GetGuildMaster
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$?GetGuildMaster@ioGuildData@@QAEKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetGuildMaster@ioGuildData@@QAEKXZ$0
__ehfuncinfo$?GetGuildMaster@ioGuildData@@QAEKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetGuildMaster@ioGuildData@@QAEKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?GetGuildMaster@ioGuildData@@QAEKXZ
_TEXT	SEGMENT
$T523242 = -32						; size = 16
$T523238 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?GetGuildMaster@ioGuildData@@QAEKXZ PROC		; ioGuildData::GetGuildMaster, COMDAT
; _this$ = ecx

; 548  : {

  00000	6a 14		 push	 20			; 00000014H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?GetGuildMaster@ioGuildData@@QAEKXZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 549  : 	ioLocalParent *pLocal = g_LocalMgr.GetLocal( ioLocalManager::GetLocalType() );

  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLocalType@ioLocalManagerParent@@SA?AW4LocalType@1@XZ
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?GetSingleton@ioLocalManager@@SAAAV1@XZ ; ioLocalManager::GetSingleton
  0001a	8b c8		 mov	 ecx, eax
  0001c	e8 00 00 00 00	 call	 ?GetLocal@ioLocalManager@@QAEPAVioLocalParent@@W4LocalType@ioLocalManagerParent@@@Z ; ioLocalManager::GetLocal
  00021	8b f8		 mov	 edi, eax

; 550  : 
; 551  : 	vGuildUser::iterator iter,iEnd;
; 552  : 	iEnd = m_vUserList.end();

  00023	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]

; 553  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  00026	8b 76 58	 mov	 esi, DWORD PTR [esi+88]
  00029	89 45 f0	 mov	 DWORD PTR $T523238[ebp], eax
  0002c	3b f0		 cmp	 esi, eax
  0002e	74 41		 je	 SHORT $LN3@GetGuildMa
$LL37@GetGuildMa:

; 554  : 	{
; 555  : 		GuildUser &kUserInfo = *iter;
; 556  : 		
; 557  : 		if( pLocal )

  00030	85 ff		 test	 edi, edi
  00032	74 35		 je	 SHORT $LN4@GetGuildMa

; 558  : 		{
; 559  : 			if( kUserInfo.m_szUserPos == pLocal->GetGuildMasterPostion() )

  00034	8b 07		 mov	 eax, DWORD PTR [edi]
  00036	8b cf		 mov	 ecx, edi
  00038	ff 50 5c	 call	 DWORD PTR [eax+92]
  0003b	50		 push	 eax
  0003c	8d 4d e0	 lea	 ecx, DWORD PTR $T523242[ebp]
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00045	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00049	8d 45 e0	 lea	 eax, DWORD PTR $T523242[ebp]
  0004c	50		 push	 eax
  0004d	8d 4e 24	 lea	 ecx, DWORD PTR [esi+36]
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00056	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	8d 4d e0	 lea	 ecx, DWORD PTR $T523242[ebp]
  0005d	8a d8		 mov	 bl, al
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00065	84 db		 test	 bl, bl
  00067	75 10		 jne	 SHORT $LN50@GetGuildMa
$LN4@GetGuildMa:

; 553  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  00069	83 c6 38	 add	 esi, 56			; 00000038H
  0006c	3b 75 f0	 cmp	 esi, DWORD PTR $T523238[ebp]
  0006f	75 bf		 jne	 SHORT $LL37@GetGuildMa
$LN3@GetGuildMa:

; 561  : 		}
; 562  : 	}
; 563  : 	return 0;

  00071	33 c0		 xor	 eax, eax
$LN6@GetGuildMa:

; 564  : }

  00073	e8 00 00 00 00	 call	 __EH_epilog3
  00078	c3		 ret	 0
$LN50@GetGuildMa:

; 560  : 				return kUserInfo.m_dwUserIndex;

  00079	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0007c	eb f5		 jmp	 SHORT $LN6@GetGuildMa
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetGuildMaster@ioGuildData@@QAEKXZ$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR $T523242[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?GetGuildMaster@ioGuildData@@QAEKXZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetGuildMaster@ioGuildData@@QAEKXZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetGuildMaster@ioGuildData@@QAEKXZ ENDP		; ioGuildData::GetGuildMaster
PUBLIC	?GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ ; ioGuildData::GetGuildMasterName
;	COMDAT ?$S2@?8??GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ@4IA
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_BSS	SEGMENT
?$S2@?8??GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ@4IA DD 01H DUP (?) ; `ioGuildData::GetGuildMasterName'::`9'::$S2
_BSS	ENDS
;	COMDAT ?szReturn@?8??GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ@4V3@A
_BSS	SEGMENT
?szReturn@?8??GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ@4V3@A DB 010H DUP (?) ; `ioGuildData::GetGuildMasterName'::`9'::szReturn
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ$1
__ehfuncinfo$?GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ
_TEXT	SEGMENT
$T523364 = -36						; size = 16
$T523360 = -20						; size = 4
$T523363 = -13						; size = 1
__$EHRec$ = -12						; size = 12
?GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ PROC ; ioGuildData::GetGuildMasterName, COMDAT
; _this$ = ecx

; 567  : {

  00000	6a 18		 push	 24			; 00000018H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 568  : 	ioLocalParent *pLocal = g_LocalMgr.GetLocal( ioLocalManager::GetLocalType() );

  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLocalType@ioLocalManagerParent@@SA?AW4LocalType@1@XZ
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?GetSingleton@ioLocalManager@@SAAAV1@XZ ; ioLocalManager::GetSingleton
  0001a	8b c8		 mov	 ecx, eax
  0001c	e8 00 00 00 00	 call	 ?GetLocal@ioLocalManager@@QAEPAVioLocalParent@@W4LocalType@ioLocalManagerParent@@@Z ; ioLocalManager::GetLocal

; 569  : 
; 570  : 	vGuildUser::iterator iter,iEnd;
; 571  : 	iEnd = m_vUserList.end();
; 572  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  00021	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00027	8b d8		 mov	 ebx, eax
  00029	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  0002c	8b 76 58	 mov	 esi, DWORD PTR [esi+88]
  0002f	89 45 ec	 mov	 DWORD PTR $T523360[ebp], eax
  00032	3b f0		 cmp	 esi, eax
  00034	74 40		 je	 SHORT $LN4@GetGuildMa@2
$LL39@GetGuildMa@2:

; 573  : 	{
; 574  : 		GuildUser &kUserInfo = *iter;
; 575  : 		if( pLocal )

  00036	85 db		 test	 ebx, ebx
  00038	74 34		 je	 SHORT $LN5@GetGuildMa@2

; 576  : 		{
; 577  : 			if( kUserInfo.m_szUserPos == pLocal->GetGuildMasterPostion() )

  0003a	8b 03		 mov	 eax, DWORD PTR [ebx]
  0003c	8b cb		 mov	 ecx, ebx
  0003e	ff 50 5c	 call	 DWORD PTR [eax+92]
  00041	50		 push	 eax
  00042	8d 4d dc	 lea	 ecx, DWORD PTR $T523364[ebp]
  00045	ff d7		 call	 edi
  00047	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0004b	8d 45 dc	 lea	 eax, DWORD PTR $T523364[ebp]
  0004e	50		 push	 eax
  0004f	8d 4e 24	 lea	 ecx, DWORD PTR [esi+36]
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00058	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0005c	8d 4d dc	 lea	 ecx, DWORD PTR $T523364[ebp]
  0005f	88 45 f3	 mov	 BYTE PTR $T523363[ebp], al
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00068	80 7d f3 00	 cmp	 BYTE PTR $T523363[ebp], 0
  0006c	75 3d		 jne	 SHORT $LN52@GetGuildMa@2
$LN5@GetGuildMa@2:

; 569  : 
; 570  : 	vGuildUser::iterator iter,iEnd;
; 571  : 	iEnd = m_vUserList.end();
; 572  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  0006e	83 c6 38	 add	 esi, 56			; 00000038H
  00071	3b 75 ec	 cmp	 esi, DWORD PTR $T523360[ebp]
  00074	75 c0		 jne	 SHORT $LL39@GetGuildMa@2
$LN4@GetGuildMa@2:

; 579  : 		}
; 580  : 	}
; 581  : 
; 582  : 	static ioHashString szReturn = "";

  00076	33 c0		 xor	 eax, eax
  00078	40		 inc	 eax
  00079	be 00 00 00 00	 mov	 esi, OFFSET ?szReturn@?8??GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ@4V3@A
  0007e	84 05 00 00 00
	00		 test	 BYTE PTR ?$S2@?8??GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ@4IA, al
  00084	75 1d		 jne	 SHORT $LN1@GetGuildMa@2
  00086	09 05 00 00 00
	00		 or	 DWORD PTR ?$S2@?8??GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ@4IA, eax
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00091	8b ce		 mov	 ecx, esi
  00093	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00096	ff d7		 call	 edi
  00098	68 00 00 00 00	 push	 OFFSET ??__FszReturn@?8??GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ@YAXXZ ; `ioGuildData::GetGuildMasterName'::`9'::`dynamic atexit destructor for 'szReturn''
  0009d	e8 00 00 00 00	 call	 _atexit
  000a2	59		 pop	 ecx
$LN1@GetGuildMa@2:

; 583  : 	return szReturn;

  000a3	8b c6		 mov	 eax, esi
$LN7@GetGuildMa@2:

; 584  : }

  000a5	e8 00 00 00 00	 call	 __EH_epilog3
  000aa	c3		 ret	 0
$LN52@GetGuildMa@2:

; 578  : 				return kUserInfo.m_szUserID;

  000ab	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  000ae	eb f5		 jmp	 SHORT $LN7@GetGuildMa@2
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR $T523364[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ$1:
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$S2@?8??GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ@4IA
  0000e	83 e0 fe	 and	 eax, -2			; fffffffeH
  00011	a3 00 00 00 00	 mov	 DWORD PTR ?$S2@?8??GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ@4IA, eax
  00016	c3		 ret	 0
__ehhandler$?GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ ENDP ; ioGuildData::GetGuildMasterName
PUBLIC	?GetGuildSecondMaster@ioGuildData@@QAEKXZ	; ioGuildData::GetGuildSecondMaster
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$?GetGuildSecondMaster@ioGuildData@@QAEKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetGuildSecondMaster@ioGuildData@@QAEKXZ$0
__ehfuncinfo$?GetGuildSecondMaster@ioGuildData@@QAEKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetGuildSecondMaster@ioGuildData@@QAEKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?GetGuildSecondMaster@ioGuildData@@QAEKXZ
_TEXT	SEGMENT
$T523487 = -32						; size = 16
$T523483 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?GetGuildSecondMaster@ioGuildData@@QAEKXZ PROC		; ioGuildData::GetGuildSecondMaster, COMDAT
; _this$ = ecx

; 587  : {

  00000	6a 14		 push	 20			; 00000014H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?GetGuildSecondMaster@ioGuildData@@QAEKXZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 588  : 	ioLocalParent *pLocal = g_LocalMgr.GetLocal( ioLocalManager::GetLocalType() );

  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLocalType@ioLocalManagerParent@@SA?AW4LocalType@1@XZ
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?GetSingleton@ioLocalManager@@SAAAV1@XZ ; ioLocalManager::GetSingleton
  0001a	8b c8		 mov	 ecx, eax
  0001c	e8 00 00 00 00	 call	 ?GetLocal@ioLocalManager@@QAEPAVioLocalParent@@W4LocalType@ioLocalManagerParent@@@Z ; ioLocalManager::GetLocal
  00021	8b f8		 mov	 edi, eax

; 589  : 	
; 590  : 	vGuildUser::iterator iter,iEnd;
; 591  : 	iEnd = m_vUserList.end();

  00023	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]

; 592  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  00026	8b 76 58	 mov	 esi, DWORD PTR [esi+88]
  00029	89 45 f0	 mov	 DWORD PTR $T523483[ebp], eax
  0002c	3b f0		 cmp	 esi, eax
  0002e	74 41		 je	 SHORT $LN3@GetGuildSe
$LL37@GetGuildSe:

; 593  : 	{
; 594  : 		GuildUser &kUserInfo = *iter;
; 595  : 		if( pLocal )

  00030	85 ff		 test	 edi, edi
  00032	74 35		 je	 SHORT $LN4@GetGuildSe

; 596  : 		{
; 597  : 			if( kUserInfo.m_szUserPos == pLocal->GetGuildSecondMasterPosition() )

  00034	8b 07		 mov	 eax, DWORD PTR [edi]
  00036	8b cf		 mov	 ecx, edi
  00038	ff 50 60	 call	 DWORD PTR [eax+96]
  0003b	50		 push	 eax
  0003c	8d 4d e0	 lea	 ecx, DWORD PTR $T523487[ebp]
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00045	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00049	8d 45 e0	 lea	 eax, DWORD PTR $T523487[ebp]
  0004c	50		 push	 eax
  0004d	8d 4e 24	 lea	 ecx, DWORD PTR [esi+36]
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00056	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	8d 4d e0	 lea	 ecx, DWORD PTR $T523487[ebp]
  0005d	8a d8		 mov	 bl, al
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00065	84 db		 test	 bl, bl
  00067	75 10		 jne	 SHORT $LN50@GetGuildSe
$LN4@GetGuildSe:

; 592  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  00069	83 c6 38	 add	 esi, 56			; 00000038H
  0006c	3b 75 f0	 cmp	 esi, DWORD PTR $T523483[ebp]
  0006f	75 bf		 jne	 SHORT $LL37@GetGuildSe
$LN3@GetGuildSe:

; 599  : 		}
; 600  : 	}
; 601  : 	return 0;

  00071	33 c0		 xor	 eax, eax
$LN6@GetGuildSe:

; 602  : }

  00073	e8 00 00 00 00	 call	 __EH_epilog3
  00078	c3		 ret	 0
$LN50@GetGuildSe:

; 598  : 				return kUserInfo.m_dwUserIndex;

  00079	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0007c	eb f5		 jmp	 SHORT $LN6@GetGuildSe
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetGuildSecondMaster@ioGuildData@@QAEKXZ$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR $T523487[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?GetGuildSecondMaster@ioGuildData@@QAEKXZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetGuildSecondMaster@ioGuildData@@QAEKXZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetGuildSecondMaster@ioGuildData@@QAEKXZ ENDP		; ioGuildData::GetGuildSecondMaster
PUBLIC	?GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ ; ioGuildData::GetGuildSecondMasterName
;	COMDAT ?$S3@?8??GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ@4IA
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_BSS	SEGMENT
?$S3@?8??GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ@4IA DD 01H DUP (?) ; `ioGuildData::GetGuildSecondMasterName'::`9'::$S3
_BSS	ENDS
;	COMDAT ?szReturn@?8??GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ@4V3@A
_BSS	SEGMENT
?szReturn@?8??GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ@4V3@A DB 010H DUP (?) ; `ioGuildData::GetGuildSecondMasterName'::`9'::szReturn
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ$1
__ehfuncinfo$?GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ
_TEXT	SEGMENT
$T523609 = -36						; size = 16
$T523605 = -20						; size = 4
$T523608 = -13						; size = 1
__$EHRec$ = -12						; size = 12
?GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ PROC ; ioGuildData::GetGuildSecondMasterName, COMDAT
; _this$ = ecx

; 605  : {

  00000	6a 18		 push	 24			; 00000018H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 606  : 	ioLocalParent *pLocal = g_LocalMgr.GetLocal( ioLocalManager::GetLocalType() );

  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLocalType@ioLocalManagerParent@@SA?AW4LocalType@1@XZ
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?GetSingleton@ioLocalManager@@SAAAV1@XZ ; ioLocalManager::GetSingleton
  0001a	8b c8		 mov	 ecx, eax
  0001c	e8 00 00 00 00	 call	 ?GetLocal@ioLocalManager@@QAEPAVioLocalParent@@W4LocalType@ioLocalManagerParent@@@Z ; ioLocalManager::GetLocal

; 607  : 	
; 608  : 	vGuildUser::iterator iter,iEnd;
; 609  : 	iEnd = m_vUserList.end();
; 610  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  00021	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00027	8b d8		 mov	 ebx, eax
  00029	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  0002c	8b 76 58	 mov	 esi, DWORD PTR [esi+88]
  0002f	89 45 ec	 mov	 DWORD PTR $T523605[ebp], eax
  00032	3b f0		 cmp	 esi, eax
  00034	74 40		 je	 SHORT $LN4@GetGuildSe@2
$LL39@GetGuildSe@2:

; 611  : 	{
; 612  : 		GuildUser &kUserInfo = *iter;
; 613  : 		if( pLocal )

  00036	85 db		 test	 ebx, ebx
  00038	74 34		 je	 SHORT $LN5@GetGuildSe@2

; 614  : 		{
; 615  : 			if( kUserInfo.m_szUserPos == pLocal->GetGuildSecondMasterPosition() )

  0003a	8b 03		 mov	 eax, DWORD PTR [ebx]
  0003c	8b cb		 mov	 ecx, ebx
  0003e	ff 50 60	 call	 DWORD PTR [eax+96]
  00041	50		 push	 eax
  00042	8d 4d dc	 lea	 ecx, DWORD PTR $T523609[ebp]
  00045	ff d7		 call	 edi
  00047	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0004b	8d 45 dc	 lea	 eax, DWORD PTR $T523609[ebp]
  0004e	50		 push	 eax
  0004f	8d 4e 24	 lea	 ecx, DWORD PTR [esi+36]
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00058	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0005c	8d 4d dc	 lea	 ecx, DWORD PTR $T523609[ebp]
  0005f	88 45 f3	 mov	 BYTE PTR $T523608[ebp], al
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00068	80 7d f3 00	 cmp	 BYTE PTR $T523608[ebp], 0
  0006c	75 3d		 jne	 SHORT $LN52@GetGuildSe@2
$LN5@GetGuildSe@2:

; 607  : 	
; 608  : 	vGuildUser::iterator iter,iEnd;
; 609  : 	iEnd = m_vUserList.end();
; 610  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  0006e	83 c6 38	 add	 esi, 56			; 00000038H
  00071	3b 75 ec	 cmp	 esi, DWORD PTR $T523605[ebp]
  00074	75 c0		 jne	 SHORT $LL39@GetGuildSe@2
$LN4@GetGuildSe@2:

; 617  : 		}
; 618  : 	}
; 619  : 
; 620  : 	static ioHashString szReturn = "";

  00076	33 c0		 xor	 eax, eax
  00078	40		 inc	 eax
  00079	be 00 00 00 00	 mov	 esi, OFFSET ?szReturn@?8??GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ@4V3@A
  0007e	84 05 00 00 00
	00		 test	 BYTE PTR ?$S3@?8??GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ@4IA, al
  00084	75 1d		 jne	 SHORT $LN1@GetGuildSe@2
  00086	09 05 00 00 00
	00		 or	 DWORD PTR ?$S3@?8??GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ@4IA, eax
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00091	8b ce		 mov	 ecx, esi
  00093	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00096	ff d7		 call	 edi
  00098	68 00 00 00 00	 push	 OFFSET ??__FszReturn@?8??GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ@YAXXZ ; `ioGuildData::GetGuildSecondMasterName'::`9'::`dynamic atexit destructor for 'szReturn''
  0009d	e8 00 00 00 00	 call	 _atexit
  000a2	59		 pop	 ecx
$LN1@GetGuildSe@2:

; 621  : 	return szReturn;

  000a3	8b c6		 mov	 eax, esi
$LN7@GetGuildSe@2:

; 622  : }

  000a5	e8 00 00 00 00	 call	 __EH_epilog3
  000aa	c3		 ret	 0
$LN52@GetGuildSe@2:

; 616  : 				return kUserInfo.m_szUserID;

  000ab	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  000ae	eb f5		 jmp	 SHORT $LN7@GetGuildSe@2
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR $T523609[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ$1:
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$S3@?8??GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ@4IA
  0000e	83 e0 fe	 and	 eax, -2			; fffffffeH
  00011	a3 00 00 00 00	 mov	 DWORD PTR ?$S3@?8??GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ@4IA, eax
  00016	c3		 ret	 0
__ehhandler$?GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ ENDP ; ioGuildData::GetGuildSecondMasterName
PUBLIC	?ChangeUserID@ioGuildData@@QAEXABVioHashString@@0@Z ; ioGuildData::ChangeUserID
EXTRN	__imp_??9ioHashString@@QBE_NABV0@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ?ChangeUserID@ioGuildData@@QAEXABVioHashString@@0@Z
_TEXT	SEGMENT
_rszUserID$ = 8						; size = 4
_rszNewUserID$ = 12					; size = 4
?ChangeUserID@ioGuildData@@QAEXABVioHashString@@0@Z PROC ; ioGuildData::ChangeUserID, COMDAT
; _this$ = ecx

; 625  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 626  : 	vGuildUser::iterator iter,iEnd;
; 627  : 	iEnd = m_vUserList.end();

  00008	8b 5f 5c	 mov	 ebx, DWORD PTR [edi+92]

; 628  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  0000b	8b 77 58	 mov	 esi, DWORD PTR [edi+88]
  0000e	eb 13		 jmp	 SHORT $LN49@ChangeUser
$LL35@ChangeUser:

; 629  : 	{
; 630  : 		GuildUser &kUserInfo = *iter;
; 631  : 		if( kUserInfo.m_szUserID != rszUserID )

  00010	ff 75 08	 push	 DWORD PTR _rszUserID$[ebp]
  00013	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??9ioHashString@@QBE_NABV0@@Z
  0001c	84 c0		 test	 al, al
  0001e	74 09		 je	 SHORT $LN1@ChangeUser

; 628  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  00020	83 c6 38	 add	 esi, 56			; 00000038H
$LN49@ChangeUser:
  00023	3b f3		 cmp	 esi, ebx
  00025	75 e9		 jne	 SHORT $LL35@ChangeUser
  00027	eb 10		 jmp	 SHORT $LN2@ChangeUser
$LN1@ChangeUser:

; 632  : 			continue;
; 633  : 
; 634  : 		kUserInfo.m_szUserID = rszNewUserID;

  00029	ff 75 0c	 push	 DWORD PTR _rszNewUserID$[ebp]
  0002c	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z

; 635  : 		m_bUserListUpdate    = true;	

  00035	c6 47 74 01	 mov	 BYTE PTR [edi+116], 1
$LN2@ChangeUser:
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx

; 636  : 		return;
; 637  : 	}
; 638  : }

  0003c	5d		 pop	 ebp
  0003d	c2 08 00	 ret	 8
?ChangeUserID@ioGuildData@@QAEXABVioHashString@@0@Z ENDP ; ioGuildData::ChangeUserID
_TEXT	ENDS
PUBLIC	?GetGuildDataExist@ioGuildInfo@@QAEPAVioGuildData@@ABVioHashString@@@Z ; ioGuildInfo::GetGuildDataExist
EXTRN	__imp_?IsEmpty@ioHashString@@QBE_NXZ:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$?GetGuildDataExist@ioGuildInfo@@QAEPAVioGuildData@@ABVioHashString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetGuildDataExist@ioGuildInfo@@QAEPAVioGuildData@@ABVioHashString@@@Z$0
__ehfuncinfo$?GetGuildDataExist@ioGuildInfo@@QAEPAVioGuildData@@ABVioHashString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetGuildDataExist@ioGuildInfo@@QAEPAVioGuildData@@ABVioHashString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?GetGuildDataExist@ioGuildInfo@@QAEPAVioGuildData@@ABVioHashString@@@Z
_TEXT	SEGMENT
$T523844 = -32						; size = 16
$T523841 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_rszGuildName$ = 8					; size = 4
?GetGuildDataExist@ioGuildInfo@@QAEPAVioGuildData@@ABVioHashString@@@Z PROC ; ioGuildInfo::GetGuildDataExist, COMDAT
; _this$ = ecx

; 1034 : {

  00000	6a 14		 push	 20			; 00000014H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?GetGuildDataExist@ioGuildInfo@@QAEPAVioGuildData@@ABVioHashString@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 1035 : 	if( rszGuildName.IsEmpty() ) return NULL;

  0000e	8b 4d 08	 mov	 ecx, DWORD PTR _rszGuildName$[ebp]
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@ioHashString@@QBE_NXZ
  00017	84 c0		 test	 al, al
  00019	75 4a		 jne	 SHORT $LN2@GetGuildDa

; 1036 : 
; 1037 : 	vGuildData_iter iter, iEnd;
; 1038 : 	iEnd = m_vGuildList.end();

  0001b	8b 86 b8 00 00
	00		 mov	 eax, DWORD PTR [esi+184]

; 1039 : 	for(iter = m_vGuildList.begin();iter != iEnd;++iter)

  00021	8b b6 b4 00 00
	00		 mov	 esi, DWORD PTR [esi+180]
  00027	89 45 f0	 mov	 DWORD PTR $T523841[ebp], eax
  0002a	3b f0		 cmp	 esi, eax
  0002c	74 37		 je	 SHORT $LN2@GetGuildDa
$LN35@GetGuildDa:

; 1040 : 	{
; 1041 : 		ioGuildData *pGuildData = *iter;

  0002e	8b 3e		 mov	 edi, DWORD PTR [esi]

; 1042 : 		if( pGuildData->GetGuildName() == rszGuildName )

  00030	8d 45 e0	 lea	 eax, DWORD PTR $T523844[ebp]
  00033	50		 push	 eax
  00034	8b cf		 mov	 ecx, edi
  00036	e8 00 00 00 00	 call	 ?GetGuildName@ioGuildData@@QAE?AVioHashString@@XZ ; ioGuildData::GetGuildName
  0003b	ff 75 08	 push	 DWORD PTR _rszGuildName$[ebp]
  0003e	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00042	8b c8		 mov	 ecx, eax
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  0004a	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8d 4d e0	 lea	 ecx, DWORD PTR $T523844[ebp]
  00051	8a d8		 mov	 bl, al
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00059	84 db		 test	 bl, bl
  0005b	75 12		 jne	 SHORT $LN48@GetGuildDa

; 1039 : 	for(iter = m_vGuildList.begin();iter != iEnd;++iter)

  0005d	83 c6 04	 add	 esi, 4
  00060	3b 75 f0	 cmp	 esi, DWORD PTR $T523841[ebp]
  00063	75 c9		 jne	 SHORT $LN35@GetGuildDa
$LN2@GetGuildDa:

; 1044 : 	}	
; 1045 : 
; 1046 : 	return NULL;

  00065	33 c0		 xor	 eax, eax
$LN6@GetGuildDa:

; 1047 : }

  00067	e8 00 00 00 00	 call	 __EH_epilog3
  0006c	c2 04 00	 ret	 4
$LN48@GetGuildDa:

; 1043 : 			return pGuildData;

  0006f	8b c7		 mov	 eax, edi
  00071	eb f4		 jmp	 SHORT $LN6@GetGuildDa
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetGuildDataExist@ioGuildInfo@@QAEPAVioGuildData@@ABVioHashString@@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR $T523844[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?GetGuildDataExist@ioGuildInfo@@QAEPAVioGuildData@@ABVioHashString@@@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetGuildDataExist@ioGuildInfo@@QAEPAVioGuildData@@ABVioHashString@@@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetGuildDataExist@ioGuildInfo@@QAEPAVioGuildData@@ABVioHashString@@@Z ENDP ; ioGuildInfo::GetGuildDataExist
PUBLIC	?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::erase
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cat$523964 = 12					; size = 1
__Where$ = 12						; size = 4
?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::erase, COMDAT
; _this$ = ecx

; 1179 : 		{	// erase element at where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1180 : 		_Move(_VIPTR(_Where) + 1, this->_Mylast,
; 1181 : 			_VIPTR(_Where));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	56		 push	 esi
  00007	ff 75 0c	 push	 DWORD PTR __Cat$523964[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	ff 76 04	 push	 DWORD PTR [esi+4]
  00010	83 c0 04	 add	 eax, 4
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Move@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<unsigned long *,unsigned long *>

; 1182 : 		_Destroy(this->_Mylast - 1, this->_Mylast);
; 1183 : 		--this->_Mylast;
; 1184 : 		return (_Make_iter(_Where));

  00019	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  0001f	83 c4 10	 add	 esp, 16			; 00000010H
  00022	83 46 04 fc	 add	 DWORD PTR [esi+4], -4	; fffffffcH
  00026	89 08		 mov	 DWORD PTR [eax], ecx
  00028	5e		 pop	 esi

; 1185 : 		}

  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@0@Z ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$524094 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@0@Z PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __First_arg$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	8b f1		 mov	 esi, ecx
  0000d	89 07		 mov	 DWORD PTR [edi], eax

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 45 10	 cmp	 eax, DWORD PTR __Last_arg$[ebp]
  00012	74 16		 je	 SHORT $LN1@erase@2

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	ff 75 10	 push	 DWORD PTR __Cat$524094[ebp]
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  0001f	e8 00 00 00 00	 call	 ??$_Move@PAPAVioGuildData@@PAPAV1@@std@@YAPAPAVioGuildData@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ioGuildData * *,ioGuildData * *>
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

  00027	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN1@erase@2:

; 1212 : 			}
; 1213 : 		return (_First);

  0002a	8b c7		 mov	 eax, edi
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi

; 1214 : 		}

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@0@Z ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEXXZ ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Tidy
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEXXZ PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN12@Tidy@2

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN12@Tidy@2:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEXXZ ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@0@Z ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$524239 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@0@Z PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __First_arg$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	8b f1		 mov	 esi, ecx
  0000d	89 07		 mov	 DWORD PTR [edi], eax

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 45 10	 cmp	 eax, DWORD PTR __Last_arg$[ebp]
  00012	74 16		 je	 SHORT $LN1@erase@3

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	ff 75 10	 push	 DWORD PTR __Cat$524239[ebp]
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  0001f	e8 00 00 00 00	 call	 ??$_Move@PAPAUGuildAttendRwardInfo@@PAPAU1@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<GuildAttendRwardInfo * *,GuildAttendRwardInfo * *>
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

  00027	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN1@erase@3:

; 1212 : 			}
; 1213 : 		return (_First);

  0002a	8b c7		 mov	 eax, edi
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi

; 1214 : 		}

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@0@Z ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEXXZ ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Tidy
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEXXZ PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN12@Tidy@3

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN12@Tidy@3:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEXXZ ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@0@Z ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$524382 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@0@Z PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __First_arg$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	8b f1		 mov	 esi, ecx
  0000d	89 07		 mov	 DWORD PTR [edi], eax

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 45 10	 cmp	 eax, DWORD PTR __Last_arg$[ebp]
  00012	74 16		 je	 SHORT $LN1@erase@4

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	ff 75 10	 push	 DWORD PTR __Cat$524382[ebp]
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  0001f	e8 00 00 00 00	 call	 ??$_Move@PAPAUGuildRankRwardInfo@@PAPAU1@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<GuildRankRwardInfo * *,GuildRankRwardInfo * *>
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

  00027	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN1@erase@4:

; 1212 : 			}
; 1213 : 		return (_First);

  0002a	8b c7		 mov	 eax, edi
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi

; 1214 : 		}

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@0@Z ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEXXZ ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Tidy
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEXXZ PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN12@Tidy@4

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN12@Tidy@4:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEXXZ ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Tidy
_TEXT	ENDS
PUBLIC	?reserve@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAEXI@Z ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::reserve
; Function compile flags: /Ogsp
;	COMDAT ?reserve@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?reserve@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAEXI@Z PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 747  : 		if (max_size() < _Count)

  00003	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	76 0b		 jbe	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN43@reserve:
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  0001a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0001d	2b 06		 sub	 eax, DWORD PTR [esi]
  0001f	c1 f8 02	 sar	 eax, 2
  00022	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00025	73 52		 jae	 SHORT $LN3@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00027	53		 push	 ebx
  00028	57		 push	 edi
  00029	6a 00		 push	 0
  0002b	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate@PAVioGuildData@@@std@@YAPAPAVioGuildData@@IPAPAV1@@Z ; std::_Allocate<ioGuildData *>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00033	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00035	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00038	52		 push	 edx
  00039	8b d8		 mov	 ebx, eax
  0003b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003e	53		 push	 ebx
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVioGuildData@@PAPAV1@V?$allocator@PAVioGuildData@@@std@@@std@@YAPAPAVioGuildData@@PAPAV1@00AAV?$allocator@PAVioGuildData@@@0@@Z ; std::_Uninitialized_move<ioGuildData * *,ioGuildData * *,std::allocator<ioGuildData *> >

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00046	8b 06		 mov	 eax, DWORD PTR [esi]
  00048	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0004b	2b f8		 sub	 edi, eax
  0004d	83 c4 18	 add	 esp, 24			; 00000018H
  00050	c1 ff 02	 sar	 edi, 2

; 761  : 			if (this->_Myfirst != 0)

  00053	85 c0		 test	 eax, eax
  00055	74 07		 je	 SHORT $LN39@reserve

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);
; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0005d	59		 pop	 ecx
$LN39@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  0005e	8b ce		 mov	 ecx, esi
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00066	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00069	8d 04 83	 lea	 eax, DWORD PTR [ebx+eax*4]
  0006c	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 770  : 			this->_Mylast = _Ptr + _Size;

  0006f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00072	5f		 pop	 edi

; 771  : 			this->_Myfirst = _Ptr;

  00073	89 1e		 mov	 DWORD PTR [esi], ebx
  00075	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00078	5b		 pop	 ebx
$LN3@reserve:
  00079	5e		 pop	 esi

; 772  : 			}
; 773  : 		}

  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
$LN42@reserve:
?reserve@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAEXI@Z ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::reserve
_TEXT	ENDS
PUBLIC	?reserve@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAEXI@Z ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::reserve
; Function compile flags: /Ogsp
;	COMDAT ?reserve@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?reserve@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAEXI@Z PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 747  : 		if (max_size() < _Count)

  00003	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	76 0b		 jbe	 SHORT $LN5@reserve@2

; 748  : 			_Xlen();	// result too long

  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN43@reserve@2:
$LN5@reserve@2:

; 749  : 		else if (capacity() < _Count)

  0001a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0001d	2b 06		 sub	 eax, DWORD PTR [esi]
  0001f	c1 f8 02	 sar	 eax, 2
  00022	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00025	73 52		 jae	 SHORT $LN3@reserve@2

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00027	53		 push	 ebx
  00028	57		 push	 edi
  00029	6a 00		 push	 0
  0002b	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate@PAUGuildAttendRwardInfo@@@std@@YAPAPAUGuildAttendRwardInfo@@IPAPAU1@@Z ; std::_Allocate<GuildAttendRwardInfo *>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00033	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00035	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00038	52		 push	 edx
  00039	8b d8		 mov	 ebx, eax
  0003b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003e	53		 push	 ebx
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUGuildAttendRwardInfo@@PAPAU1@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@YAPAPAUGuildAttendRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildAttendRwardInfo@@@0@@Z ; std::_Uninitialized_move<GuildAttendRwardInfo * *,GuildAttendRwardInfo * *,std::allocator<GuildAttendRwardInfo *> >

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00046	8b 06		 mov	 eax, DWORD PTR [esi]
  00048	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0004b	2b f8		 sub	 edi, eax
  0004d	83 c4 18	 add	 esp, 24			; 00000018H
  00050	c1 ff 02	 sar	 edi, 2

; 761  : 			if (this->_Myfirst != 0)

  00053	85 c0		 test	 eax, eax
  00055	74 07		 je	 SHORT $LN39@reserve@2

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);
; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0005d	59		 pop	 ecx
$LN39@reserve@2:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  0005e	8b ce		 mov	 ecx, esi
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00066	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00069	8d 04 83	 lea	 eax, DWORD PTR [ebx+eax*4]
  0006c	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 770  : 			this->_Mylast = _Ptr + _Size;

  0006f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00072	5f		 pop	 edi

; 771  : 			this->_Myfirst = _Ptr;

  00073	89 1e		 mov	 DWORD PTR [esi], ebx
  00075	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00078	5b		 pop	 ebx
$LN3@reserve@2:
  00079	5e		 pop	 esi

; 772  : 			}
; 773  : 		}

  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
$LN42@reserve@2:
?reserve@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAEXI@Z ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::reserve
_TEXT	ENDS
PUBLIC	?reserve@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAEXI@Z ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::reserve
; Function compile flags: /Ogsp
;	COMDAT ?reserve@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?reserve@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAEXI@Z PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 747  : 		if (max_size() < _Count)

  00003	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	76 0b		 jbe	 SHORT $LN5@reserve@3

; 748  : 			_Xlen();	// result too long

  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN43@reserve@3:
$LN5@reserve@3:

; 749  : 		else if (capacity() < _Count)

  0001a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0001d	2b 06		 sub	 eax, DWORD PTR [esi]
  0001f	c1 f8 02	 sar	 eax, 2
  00022	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00025	73 52		 jae	 SHORT $LN3@reserve@3

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00027	53		 push	 ebx
  00028	57		 push	 edi
  00029	6a 00		 push	 0
  0002b	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate@PAUGuildRankRwardInfo@@@std@@YAPAPAUGuildRankRwardInfo@@IPAPAU1@@Z ; std::_Allocate<GuildRankRwardInfo *>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00033	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00035	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00038	52		 push	 edx
  00039	8b d8		 mov	 ebx, eax
  0003b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003e	53		 push	 ebx
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUGuildRankRwardInfo@@PAPAU1@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@YAPAPAUGuildRankRwardInfo@@PAPAU1@00AAV?$allocator@PAUGuildRankRwardInfo@@@0@@Z ; std::_Uninitialized_move<GuildRankRwardInfo * *,GuildRankRwardInfo * *,std::allocator<GuildRankRwardInfo *> >

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00046	8b 06		 mov	 eax, DWORD PTR [esi]
  00048	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0004b	2b f8		 sub	 edi, eax
  0004d	83 c4 18	 add	 esp, 24			; 00000018H
  00050	c1 ff 02	 sar	 edi, 2

; 761  : 			if (this->_Myfirst != 0)

  00053	85 c0		 test	 eax, eax
  00055	74 07		 je	 SHORT $LN39@reserve@3

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);
; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0005d	59		 pop	 ecx
$LN39@reserve@3:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  0005e	8b ce		 mov	 ecx, esi
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00066	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00069	8d 04 83	 lea	 eax, DWORD PTR [ebx+eax*4]
  0006c	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 770  : 			this->_Mylast = _Ptr + _Size;

  0006f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00072	5f		 pop	 edi

; 771  : 			this->_Myfirst = _Ptr;

  00073	89 1e		 mov	 DWORD PTR [esi], ebx
  00075	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00078	5b		 pop	 ebx
$LN3@reserve@3:
  00079	5e		 pop	 esi

; 772  : 			}
; 773  : 		}

  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
$LN42@reserve@3:
?reserve@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAEXI@Z ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::reserve
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@ABU34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@ABU23@@Z ; std::_Cons_val<std::allocator<ioGuildData::GuildUser>,ioGuildData::GuildUser,ioGuildData::GuildUser const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@ABU34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@ABU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@ABU34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@ABU23@@Z PROC ; std::_Cons_val<std::allocator<ioGuildData::GuildUser>,ioGuildData::GuildUser,ioGuildData::GuildUser const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  00006	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  00009	e8 00 00 00 00	 call	 ??$_Construct@UGuildUser@ioGuildData@@ABU12@@std@@YAXPAUGuildUser@ioGuildData@@ABU12@@Z ; std::_Construct<ioGuildData::GuildUser,ioGuildData::GuildUser const &>
  0000e	59		 pop	 ecx
  0000f	59		 pop	 ecx

; 281  : 	}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@ABU34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@ABU23@@Z ENDP ; std::_Cons_val<std::allocator<ioGuildData::GuildUser>,ioGuildData::GuildUser,ioGuildData::GuildUser const &>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@UInvitationUser@ioGuildInfo@@ABU34@@std@@YAXAAV?$allocator@UInvitationUser@ioGuildInfo@@@0@PAUInvitationUser@ioGuildInfo@@ABU23@@Z ; std::_Cons_val<std::allocator<ioGuildInfo::InvitationUser>,ioGuildInfo::InvitationUser,ioGuildInfo::InvitationUser const &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@UInvitationUser@ioGuildInfo@@ABU34@@std@@YAXAAV?$allocator@UInvitationUser@ioGuildInfo@@@0@PAUInvitationUser@ioGuildInfo@@ABU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@UInvitationUser@ioGuildInfo@@ABU34@@std@@YAXAAV?$allocator@UInvitationUser@ioGuildInfo@@@0@PAUInvitationUser@ioGuildInfo@@ABU23@@Z PROC ; std::_Cons_val<std::allocator<ioGuildInfo::InvitationUser>,ioGuildInfo::InvitationUser,ioGuildInfo::InvitationUser const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  00006	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  00009	e8 00 00 00 00	 call	 ??$_Construct@UInvitationUser@ioGuildInfo@@ABU12@@std@@YAXPAUInvitationUser@ioGuildInfo@@ABU12@@Z ; std::_Construct<ioGuildInfo::InvitationUser,ioGuildInfo::InvitationUser const &>
  0000e	59		 pop	 ecx
  0000f	59		 pop	 ecx

; 281  : 	}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??$_Cons_val@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@UInvitationUser@ioGuildInfo@@ABU34@@std@@YAXAAV?$allocator@UInvitationUser@ioGuildInfo@@@0@PAUInvitationUser@ioGuildInfo@@ABU23@@Z ENDP ; std::_Cons_val<std::allocator<ioGuildInfo::InvitationUser>,ioGuildInfo::InvitationUser,ioGuildInfo::InvitationUser const &>
_TEXT	ENDS
PUBLIC	??$_Insertion_sort@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z ; std::_Insertion_sort<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
;	COMDAT ??$_Insertion_sort@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
??$_Insertion_sort@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z PROC ; std::_Insertion_sort<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>, COMDAT

; 3676 : 	{	// insertion sort [_First, _Last), using _Pred

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3677 : 	_Insertion_sort1(_First, _Last, _Pred, _Val_type(_First));

  00003	6a 00		 push	 0
  00005	ff 75 10	 push	 DWORD PTR __Pred$[ebp]
  00008	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000b	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000e	e8 00 00 00 00	 call	 ??$_Insertion_sort1@PAUGuildUser@ioGuildData@@VGuildUserSort@2@U12@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z ; std::_Insertion_sort1<ioGuildData::GuildUser *,ioGuildData::GuildUserSort,ioGuildData::GuildUser>
  00013	83 c4 10	 add	 esp, 16			; 00000010H

; 3678 : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Insertion_sort@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z ENDP ; std::_Insertion_sort<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@@Z ; std::_Dest_val<std::allocator<ioGuildData::GuildUser>,ioGuildData::GuildUser>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@@Z PROC ; std::_Dest_val<std::allocator<ioGuildData::GuildUser>,ioGuildData::GuildUser>, COMDAT

; 286  : 	{	// destroy using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]

; 288  : 	}

  00006	5d		 pop	 ebp

; 287  : 	_Alval.destroy(_Pdest);

  00007	e9 00 00 00 00	 jmp	 ??1GuildUser@ioGuildData@@QAE@XZ
??$_Dest_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@@Z ENDP ; std::_Dest_val<std::allocator<ioGuildData::GuildUser>,ioGuildData::GuildUser>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@UInvitationUser@ioGuildInfo@@@std@@YAXAAV?$allocator@UInvitationUser@ioGuildInfo@@@0@PAUInvitationUser@ioGuildInfo@@@Z ; std::_Dest_val<std::allocator<ioGuildInfo::InvitationUser>,ioGuildInfo::InvitationUser>
; Function compile flags: /Ogsp
;	COMDAT ??$_Dest_val@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@UInvitationUser@ioGuildInfo@@@std@@YAXAAV?$allocator@UInvitationUser@ioGuildInfo@@@0@PAUInvitationUser@ioGuildInfo@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@UInvitationUser@ioGuildInfo@@@std@@YAXAAV?$allocator@UInvitationUser@ioGuildInfo@@@0@PAUInvitationUser@ioGuildInfo@@@Z PROC ; std::_Dest_val<std::allocator<ioGuildInfo::InvitationUser>,ioGuildInfo::InvitationUser>, COMDAT

; 286  : 	{	// destroy using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]

; 288  : 	}

  00006	5d		 pop	 ebp

; 287  : 	_Alval.destroy(_Pdest);

  00007	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
??$_Dest_val@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@UInvitationUser@ioGuildInfo@@@std@@YAXAAV?$allocator@UInvitationUser@ioGuildInfo@@@0@PAUInvitationUser@ioGuildInfo@@@Z ENDP ; std::_Dest_val<std::allocator<ioGuildInfo::InvitationUser>,ioGuildInfo::InvitationUser>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@U12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioGuildData::GuildUser *,ioGuildData::GuildUser *,std::allocator<ioGuildData::GuildUser>,ioGuildData::GuildUser>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@U12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@U12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@U12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@U12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@U12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@U12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@U12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@U12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@U12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@U12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<ioGuildData::GuildUser *,ioGuildData::GuildUser *,std::allocator<ioGuildData::GuildUser>,ioGuildData::GuildUser>, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Uninit_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@U12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;

  0000c	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 428  : 
; 429  : 	_TRY_BEGIN

  0000f	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00013	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00016	89 45 ec	 mov	 DWORD PTR __Next$[ebp], eax
$LL6@Uninit_mov:

; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  00019	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  0001c	74 35		 je	 SHORT $LN4@Uninit_mov

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

  0001e	56		 push	 esi
  0001f	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00022	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  00025	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@U34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@$$QAU23@@Z ; std::_Cons_val<std::allocator<ioGuildData::GuildUser>,ioGuildData::GuildUser,ioGuildData::GuildUser>
  0002a	83 45 10 38	 add	 DWORD PTR __Dest$[ebp], 56 ; 00000038H
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00031	83 c6 38	 add	 esi, 56			; 00000038H
  00034	eb e3		 jmp	 SHORT $LL6@Uninit_mov
__catch$??$_Uninit_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@U12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)

  00036	8b 75 ec	 mov	 esi, DWORD PTR __Next$[ebp]
  00039	eb 0a		 jmp	 SHORT $LN29@Uninit_mov
$LL3@Uninit_mov:

; 434  : 		_Dest_val(_Al, _Next);

  0003b	8b ce		 mov	 ecx, esi
  0003d	e8 00 00 00 00	 call	 ??1GuildUser@ioGuildData@@QAE@XZ
  00042	83 c6 38	 add	 esi, 56			; 00000038H
$LN29@Uninit_mov:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)

  00045	3b 75 10	 cmp	 esi, DWORD PTR __Dest$[ebp]
  00048	75 f1		 jne	 SHORT $LL3@Uninit_mov

; 435  : 	_RERAISE;

  0004a	6a 00		 push	 0
  0004c	6a 00		 push	 0
  0004e	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN30@Uninit_mov:
$LN4@Uninit_mov:

; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

  00053	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 438  : 	}

  00056	e8 00 00 00 00	 call	 __EH_epilog3
  0005b	c3		 ret	 0
$LN28@Uninit_mov:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@U12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@U12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@U12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<ioGuildData::GuildUser *,ioGuildData::GuildUser *,std::allocator<ioGuildData::GuildUser>,ioGuildData::GuildUser>
PUBLIC	??$_Uninit_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@U12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioGuildInfo::InvitationUser *,ioGuildInfo::InvitationUser *,std::allocator<ioGuildInfo::InvitationUser>,ioGuildInfo::InvitationUser>
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@U12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@U12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@U12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@U12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@U12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$3
__ehfuncinfo$??$_Uninit_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@U12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@U12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@U12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@U12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@U12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<ioGuildInfo::InvitationUser *,ioGuildInfo::InvitationUser *,std::allocator<ioGuildInfo::InvitationUser>,ioGuildInfo::InvitationUser>, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Uninit_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@U12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;

  0000c	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 428  : 
; 429  : 	_TRY_BEGIN

  0000f	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00013	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00016	89 45 ec	 mov	 DWORD PTR __Next$[ebp], eax
$LL6@Uninit_mov@2:

; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  00019	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  0001c	74 33		 je	 SHORT $LN4@Uninit_mov@2

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

  0001e	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00021	56		 push	 esi
  00022	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00025	e8 00 00 00 00	 call	 ?construct@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@$$QAU34@@Z ; std::allocator<ioGuildInfo::InvitationUser>::construct
  0002a	83 45 10 14	 add	 DWORD PTR __Dest$[ebp], 20 ; 00000014H
  0002e	83 c6 14	 add	 esi, 20			; 00000014H
  00031	eb e6		 jmp	 SHORT $LL6@Uninit_mov@2
__catch$??$_Uninit_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@U12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)

  00033	8b 75 ec	 mov	 esi, DWORD PTR __Next$[ebp]
  00036	eb 0b		 jmp	 SHORT $LN36@Uninit_mov@2
$LL3@Uninit_mov@2:

; 434  : 		_Dest_val(_Al, _Next);

  00038	8b ce		 mov	 ecx, esi
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00040	83 c6 14	 add	 esi, 20			; 00000014H
$LN36@Uninit_mov@2:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)

  00043	3b 75 10	 cmp	 esi, DWORD PTR __Dest$[ebp]
  00046	75 f0		 jne	 SHORT $LL3@Uninit_mov@2

; 435  : 	_RERAISE;

  00048	6a 00		 push	 0
  0004a	6a 00		 push	 0
  0004c	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN37@Uninit_mov@2:
$LN4@Uninit_mov@2:

; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

  00051	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 438  : 	}

  00054	e8 00 00 00 00	 call	 __EH_epilog3
  00059	c3		 ret	 0
$LN35@Uninit_mov@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@U12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@U12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@U12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<ioGuildInfo::InvitationUser *,ioGuildInfo::InvitationUser *,std::allocator<ioGuildInfo::InvitationUser>,ioGuildInfo::InvitationUser>
PUBLIC	??$_Median@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00VGuildUserSort@2@@Z ; std::_Median<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
;	COMDAT ??$_Median@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00VGuildUserSort@2@@Z
_TEXT	SEGMENT
tv200 = 8						; size = 4
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
tv203 = 16						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Median@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00VGuildUserSort@2@@Z PROC ; std::_Median<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>, COMDAT

; 3695 : 	{	// sort median element to middle

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3696 : 	if (40 < _Last - _First)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	53		 push	 ebx
  00007	8b 5d 10	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000a	56		 push	 esi
  0000b	8b c3		 mov	 eax, ebx
  0000d	2b c1		 sub	 eax, ecx
  0000f	6a 38		 push	 56			; 00000038H
  00011	99		 cdq
  00012	5e		 pop	 esi
  00013	f7 fe		 idiv	 esi
  00015	83 f8 28	 cmp	 eax, 40			; 00000028H
  00018	7e 68		 jle	 SHORT $LN2@Median

; 3697 : 		{	// median of nine
; 3698 : 		size_t _Step = (_Last - _First + 1) / 8;

  0001a	40		 inc	 eax
  0001b	99		 cdq
  0001c	83 e2 07	 and	 edx, 7
  0001f	03 c2		 add	 eax, edx
  00021	57		 push	 edi

; 3699 : 		_Med3(_First, _First + _Step, _First + 2 * _Step, _Pred);

  00022	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00025	c1 f8 03	 sar	 eax, 3
  00028	8b f8		 mov	 edi, eax
  0002a	8b f0		 mov	 esi, eax
  0002c	6b ff 70	 imul	 edi, 112		; 00000070H
  0002f	6b f6 38	 imul	 esi, 56			; 00000038H
  00032	8d 14 0f	 lea	 edx, DWORD PTR [edi+ecx]
  00035	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]
  00038	52		 push	 edx
  00039	50		 push	 eax
  0003a	51		 push	 ecx
  0003b	89 45 08	 mov	 DWORD PTR tv200[ebp], eax
  0003e	e8 00 00 00 00	 call	 ??$_Med3@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00VGuildUserSort@2@@Z ; std::_Med3<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>

; 3700 : 		_Med3(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  00043	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00046	8b 45 0c	 mov	 eax, DWORD PTR __Mid$[ebp]
  00049	8d 0c 06	 lea	 ecx, DWORD PTR [esi+eax]
  0004c	51		 push	 ecx
  0004d	50		 push	 eax
  0004e	2b c6		 sub	 eax, esi
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ??$_Med3@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00VGuildUserSort@2@@Z ; std::_Med3<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>

; 3701 : 		_Med3(_Last - 2 * _Step, _Last - _Step, _Last, _Pred);

  00056	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00059	89 5d 10	 mov	 DWORD PTR tv203[ebp], ebx
  0005c	29 75 10	 sub	 DWORD PTR tv203[ebp], esi
  0005f	53		 push	 ebx
  00060	ff 75 10	 push	 DWORD PTR tv203[ebp]
  00063	2b df		 sub	 ebx, edi
  00065	53		 push	 ebx
  00066	e8 00 00 00 00	 call	 ??$_Med3@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00VGuildUserSort@2@@Z ; std::_Med3<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>

; 3702 : 		_Med3(_First + _Step, _Mid, _Last - _Step, _Pred);

  0006b	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  0006e	ff 75 10	 push	 DWORD PTR tv203[ebp]
  00071	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  00074	ff 75 08	 push	 DWORD PTR tv200[ebp]
  00077	e8 00 00 00 00	 call	 ??$_Med3@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00VGuildUserSort@2@@Z ; std::_Med3<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
  0007c	83 c4 40	 add	 esp, 64			; 00000040H
  0007f	5f		 pop	 edi

; 3703 : 		}
; 3704 : 	else

  00080	eb 10		 jmp	 SHORT $LN1@Median
$LN2@Median:

; 3705 : 		_Med3(_First, _Mid, _Last, _Pred);

  00082	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00085	53		 push	 ebx
  00086	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  00089	51		 push	 ecx
  0008a	e8 00 00 00 00	 call	 ??$_Med3@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00VGuildUserSort@2@@Z ; std::_Med3<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@Median:
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx

; 3706 : 	}

  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
??$_Median@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00VGuildUserSort@2@@Z ENDP ; std::_Median<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
_TEXT	ENDS
PUBLIC	??$_Make_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@PAH0@Z ; std::_Make_heap<ioGuildData::GuildUser *,int,ioGuildData::GuildUser,ioGuildData::GuildUserSort>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Make_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@PAH0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Make_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@PAH0@Z$0
__ehfuncinfo$??$_Make_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@PAH0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Make_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@PAH0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
xdata$x	ENDS
;	COMDAT ??$_Make_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@PAH0@Z
_TEXT	SEGMENT
__Val$516770 = -68					; size = 56
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
??$_Make_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@PAH0@Z PROC ; std::_Make_heap<ioGuildData::GuildUser *,int,ioGuildData::GuildUser,ioGuildData::GuildUserSort>, COMDAT

; 2658 : 	{	// make nontrivial [_First, _Last) into a heap, using _Pred

  00000	6a 38		 push	 56			; 00000038H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Make_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@PAH0@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 2659 : 	_Diff _Bottom = _Last - _First;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000f	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00012	6a 38		 push	 56			; 00000038H
  00014	99		 cdq
  00015	59		 pop	 ecx
  00016	f7 f9		 idiv	 ecx
  00018	8b d8		 mov	 ebx, eax

; 2660 : 	for (_Diff _Hole = _Bottom / 2; 0 < _Hole; )

  0001a	99		 cdq
  0001b	2b c2		 sub	 eax, edx
  0001d	8b f0		 mov	 esi, eax
  0001f	d1 fe		 sar	 esi, 1
  00021	85 f6		 test	 esi, esi
  00023	7e 3d		 jle	 SHORT $LN1@Make_heap

; 2659 : 	_Diff _Bottom = _Last - _First;

  00025	8b fe		 mov	 edi, esi
  00027	6b ff 38	 imul	 edi, 56			; 00000038H
  0002a	03 7d 08	 add	 edi, DWORD PTR __First$[ebp]
$LN2@Make_heap:

; 2661 : 		{	// reheap top half, bottom to top
; 2662 : 		--_Hole;

  0002d	83 ef 38	 sub	 edi, 56			; 00000038H

; 2663 : 		_Ty _Val = _Move(*(_First + _Hole));

  00030	57		 push	 edi
  00031	8d 4d bc	 lea	 ecx, DWORD PTR __Val$516770[ebp]
  00034	4e		 dec	 esi
  00035	e8 00 00 00 00	 call	 ??0GuildUser@ioGuildData@@QAE@ABU01@@Z

; 2664 : 		_Adjust_heap(_First, _Hole, _Bottom,
; 2665 : 			_Move(_Val), _Pred);

  0003a	ff 75 10	 push	 DWORD PTR __Pred$[ebp]
  0003d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00041	8d 45 bc	 lea	 eax, DWORD PTR __Val$516770[ebp]
  00044	50		 push	 eax
  00045	53		 push	 ebx
  00046	56		 push	 esi
  00047	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0004a	e8 00 00 00 00	 call	 ??$_Adjust_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@HH$$QAU12@VGuildUserSort@2@@Z ; std::_Adjust_heap<ioGuildData::GuildUser *,int,ioGuildData::GuildUser,ioGuildData::GuildUserSort>

; 2666 : 		}

  0004f	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00053	83 c4 14	 add	 esp, 20			; 00000014H
  00056	8d 4d bc	 lea	 ecx, DWORD PTR __Val$516770[ebp]
  00059	e8 00 00 00 00	 call	 ??1GuildUser@ioGuildData@@QAE@XZ
  0005e	85 f6		 test	 esi, esi
  00060	7f cb		 jg	 SHORT $LN2@Make_heap
$LN1@Make_heap:

; 2667 : 	}

  00062	e8 00 00 00 00	 call	 __EH_epilog3
  00067	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Make_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@PAH0@Z$0:
  00000	8d 4d bc	 lea	 ecx, DWORD PTR __Val$516770[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1GuildUser@ioGuildData@@QAE@XZ
__ehhandler$??$_Make_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@PAH0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Make_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@PAH0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Make_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@PAH0@Z ENDP ; std::_Make_heap<ioGuildData::GuildUser *,int,ioGuildData::GuildUser,ioGuildData::GuildUserSort>
PUBLIC	??$_Pop_heap_0@PAUGuildUser@ioGuildData@@U12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z ; std::_Pop_heap_0<ioGuildData::GuildUser *,ioGuildData::GuildUser,ioGuildData::GuildUserSort>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Pop_heap_0@PAUGuildUser@ioGuildData@@U12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Pop_heap_0@PAUGuildUser@ioGuildData@@U12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z$0
__ehfuncinfo$??$_Pop_heap_0@PAUGuildUser@ioGuildData@@U12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Pop_heap_0@PAUGuildUser@ioGuildData@@U12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
xdata$x	ENDS
;	COMDAT ??$_Pop_heap_0@PAUGuildUser@ioGuildData@@U12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z
_TEXT	SEGMENT
__Val$ = -68						; size = 56
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
___formal$ = 20						; size = 4
??$_Pop_heap_0@PAUGuildUser@ioGuildData@@U12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z PROC ; std::_Pop_heap_0<ioGuildData::GuildUser *,ioGuildData::GuildUser,ioGuildData::GuildUserSort>, COMDAT

; 2601 : 	{	// pop *_First to *(_Last - 1) and reheap, using _Pred

  00000	6a 38		 push	 56			; 00000038H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Pop_heap_0@PAUGuildUser@ioGuildData@@U12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 2602 : 	_Ty _Val = _Move(*(_Last - 1));

  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  0000f	83 c6 c8	 add	 esi, -56		; ffffffc8H
  00012	56		 push	 esi
  00013	8d 4d bc	 lea	 ecx, DWORD PTR __Val$[ebp]
  00016	e8 00 00 00 00	 call	 ??0GuildUser@ioGuildData@@QAE@ABU01@@Z
  0001b	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 2603 : 	_Pop_heap(_First, _Last - 1, _Last - 1,
; 2604 : 		_Move(_Val), _Pred, _Dist_type(_First));

  0001f	6a 00		 push	 0
  00021	ff 75 10	 push	 DWORD PTR __Pred$[ebp]
  00024	8d 45 bc	 lea	 eax, DWORD PTR __Val$[ebp]
  00027	50		 push	 eax
  00028	56		 push	 esi
  00029	56		 push	 esi
  0002a	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0002d	e8 00 00 00 00	 call	 ??$_Pop_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00$$QAU12@VGuildUserSort@2@PAH@Z ; std::_Pop_heap<ioGuildData::GuildUser *,int,ioGuildData::GuildUser,ioGuildData::GuildUserSort>

; 2605 : 	}

  00032	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00036	83 c4 18	 add	 esp, 24			; 00000018H
  00039	8d 4d bc	 lea	 ecx, DWORD PTR __Val$[ebp]
  0003c	e8 00 00 00 00	 call	 ??1GuildUser@ioGuildData@@QAE@XZ
  00041	e8 00 00 00 00	 call	 __EH_epilog3
  00046	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Pop_heap_0@PAUGuildUser@ioGuildData@@U12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z$0:
  00000	8d 4d bc	 lea	 ecx, DWORD PTR __Val$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1GuildUser@ioGuildData@@QAE@XZ
__ehhandler$??$_Pop_heap_0@PAUGuildUser@ioGuildData@@U12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Pop_heap_0@PAUGuildUser@ioGuildData@@U12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Pop_heap_0@PAUGuildUser@ioGuildData@@U12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z ENDP ; std::_Pop_heap_0<ioGuildData::GuildUser *,ioGuildData::GuildUser,ioGuildData::GuildUserSort>
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 754  : 		_Tidy(true);

  00000	6a 00		 push	 0
  00002	6a 01		 push	 1
  00004	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 755  : 		}

  00009	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::erase
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$525005 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@0@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __First_arg$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	8b f1		 mov	 esi, ecx
  0000d	89 07		 mov	 DWORD PTR [edi], eax

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 45 10	 cmp	 eax, DWORD PTR __Last_arg$[ebp]
  00012	74 16		 je	 SHORT $LN1@erase@5

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	ff 75 10	 push	 DWORD PTR __Cat$525005[ebp]
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  0001f	e8 00 00 00 00	 call	 ??$_Move@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<unsigned long *,unsigned long *>
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

  00027	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN1@erase@5:

; 1212 : 			}
; 1213 : 		return (_First);

  0002a	8b c7		 mov	 eax, edi
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi

; 1214 : 		}

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN12@Tidy@5

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN12@Tidy@5:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1959 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1960 : 		if (max_size() < _Newsize)

  00004	8b 75 08	 mov	 esi, DWORD PTR __Newsize$[ebp]
  00007	83 fe fe	 cmp	 esi, -2			; fffffffeH
  0000a	76 0b		 jbe	 SHORT $LN6@Grow

; 1961 : 			_Xlen();	// result too long

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN31@Grow:
$LN6@Grow:

; 1962 : 		if (this->_Myres < _Newsize)

  00017	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  0001a	3b c6		 cmp	 eax, esi
  0001c	73 0b		 jae	 SHORT $LN5@Grow

; 1963 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

  0001e	ff 71 10	 push	 DWORD PTR [ecx+16]
  00021	56		 push	 esi
  00022	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00027	eb 2e		 jmp	 SHORT $LN28@Grow
$LN5@Grow:

; 1964 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

  00029	33 d2		 xor	 edx, edx
  0002b	38 55 0c	 cmp	 BYTE PTR __Trim$[ebp], dl
  0002e	74 17		 je	 SHORT $LN3@Grow
  00030	83 fe 10	 cmp	 esi, 16			; 00000010H
  00033	73 12		 jae	 SHORT $LN3@Grow

; 1965 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1966 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

  00035	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00038	3b f0		 cmp	 esi, eax
  0003a	0f 42 c6	 cmovb	 eax, esi
  0003d	50		 push	 eax
  0003e	6a 01		 push	 1
  00040	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  00045	eb 10		 jmp	 SHORT $LN28@Grow
$LN3@Grow:

; 1967 : 		else if (_Newsize == 0)

  00047	3b f2		 cmp	 esi, edx
  00049	75 0c		 jne	 SHORT $LN28@Grow

; 1968 : 			_Eos(0);	// new size is zero, just null terminate

  0004b	89 51 10	 mov	 DWORD PTR [ecx+16], edx
  0004e	83 f8 10	 cmp	 eax, 16			; 00000010H
  00051	72 02		 jb	 SHORT $LN26@Grow
  00053	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN26@Grow:
  00055	88 11		 mov	 BYTE PTR [ecx], dl
$LN28@Grow:

; 1969 : 		return (0 < _Newsize);	// return true only if more work to do

  00057	33 c0		 xor	 eax, eax
  00059	3b c6		 cmp	 eax, esi
  0005b	1b c0		 sbb	 eax, eax
  0005d	f7 d8		 neg	 eax
  0005f	5e		 pop	 esi

; 1970 : 		}

  00060	5d		 pop	 ebp
  00061	c2 08 00	 ret	 8
$LN30@Grow:
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	?reserve@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::reserve
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?reserve@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?reserve@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 747  : 		if (max_size() < _Count)

  00003	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	76 0b		 jbe	 SHORT $LN5@reserve@4

; 748  : 			_Xlen();	// result too long

  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN43@reserve@4:
$LN5@reserve@4:

; 749  : 		else if (capacity() < _Count)

  0001a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0001d	2b 06		 sub	 eax, DWORD PTR [esi]
  0001f	c1 f8 02	 sar	 eax, 2
  00022	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00025	73 52		 jae	 SHORT $LN3@reserve@4

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00027	53		 push	 ebx
  00028	57		 push	 edi
  00029	6a 00		 push	 0
  0002b	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate@K@std@@YAPAKIPAK@Z ; std::_Allocate<unsigned long>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00033	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00035	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00038	52		 push	 edx
  00039	8b d8		 mov	 ebx, eax
  0003b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003e	53		 push	 ebx
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::allocator<unsigned long> >

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00046	8b 06		 mov	 eax, DWORD PTR [esi]
  00048	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0004b	2b f8		 sub	 edi, eax
  0004d	83 c4 18	 add	 esp, 24			; 00000018H
  00050	c1 ff 02	 sar	 edi, 2

; 761  : 			if (this->_Myfirst != 0)

  00053	85 c0		 test	 eax, eax
  00055	74 07		 je	 SHORT $LN39@reserve@4

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);
; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0005d	59		 pop	 ecx
$LN39@reserve@4:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  0005e	8b ce		 mov	 ecx, esi
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00066	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00069	8d 04 83	 lea	 eax, DWORD PTR [ebx+eax*4]
  0006c	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 770  : 			this->_Mylast = _Ptr + _Size;

  0006f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00072	5f		 pop	 edi

; 771  : 			this->_Myfirst = _Ptr;

  00073	89 1e		 mov	 DWORD PTR [esi], ebx
  00075	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00078	5b		 pop	 ebx
$LN3@reserve@4:
  00079	5e		 pop	 esi

; 772  : 			}
; 773  : 		}

  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
$LN42@reserve@4:
?reserve@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::reserve
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@@Z ; std::_Dest_val<std::allocator<GashaponPresent>,GashaponPresent>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@@Z PROC ; std::_Dest_val<std::allocator<GashaponPresent>,GashaponPresent>, COMDAT

; 286  : 	{	// destroy using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]

; 288  : 	}

  00006	5d		 pop	 ebp

; 287  : 	_Alval.destroy(_Pdest);

  00007	e9 00 00 00 00	 jmp	 ??1GashaponPresent@@QAE@XZ ; GashaponPresent::~GashaponPresent
??$_Dest_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@@Z ENDP ; std::_Dest_val<std::allocator<GashaponPresent>,GashaponPresent>
_TEXT	ENDS
PUBLIC	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	6a 00		 push	 0
  00006	6a 01		 push	 1
  00008	8b f1		 mov	 esi, ecx
  0000a	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  0000f	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00013	74 07		 je	 SHORT $LN1@scalar@6
  00015	56		 push	 esi
  00016	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001b	59		 pop	 ecx
$LN1@scalar@6:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?DeleteEntryDelayGuildList@ioGuildInfo@@QAEXK@Z	; ioGuildInfo::DeleteEntryDelayGuildList
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
;	COMDAT ?DeleteEntryDelayGuildList@ioGuildInfo@@QAEXK@Z
_TEXT	SEGMENT
$T525245 = 8						; size = 4
_dwGuildIndex$ = 8					; size = 4
?DeleteEntryDelayGuildList@ioGuildInfo@@QAEXK@Z PROC	; ioGuildInfo::DeleteEntryDelayGuildList, COMDAT
; _this$ = ecx

; 995  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 996  : 	int iMaxSize = m_dwEntryDelayGuildList.size();

  00003	8b 81 84 00 00
	00		 mov	 eax, DWORD PTR [ecx+132]
  00009	83 e9 80	 sub	 ecx, -128		; ffffff80H
  0000c	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000e	56		 push	 esi
  0000f	c1 f8 02	 sar	 eax, 2

; 997  : 	for(int i = 0;i < iMaxSize;i++)

  00012	33 f6		 xor	 esi, esi
  00014	85 c0		 test	 eax, eax
  00016	7e 26		 jle	 SHORT $LN2@DeleteEntr

; 996  : 	int iMaxSize = m_dwEntryDelayGuildList.size();

  00018	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001a	57		 push	 edi
  0001b	8b fa		 mov	 edi, edx
  0001d	53		 push	 ebx
$LL4@DeleteEntr:

; 998  : 	{
; 999  : 		if( m_dwEntryDelayGuildList[i] == dwGuildIndex )

  0001e	8b 1f		 mov	 ebx, DWORD PTR [edi]
  00020	3b 5d 08	 cmp	 ebx, DWORD PTR _dwGuildIndex$[ebp]
  00023	74 0a		 je	 SHORT $LN26@DeleteEntr

; 997  : 	for(int i = 0;i < iMaxSize;i++)

  00025	46		 inc	 esi
  00026	83 c7 04	 add	 edi, 4
  00029	3b f0		 cmp	 esi, eax
  0002b	7c f1		 jl	 SHORT $LL4@DeleteEntr

; 998  : 	{
; 999  : 		if( m_dwEntryDelayGuildList[i] == dwGuildIndex )

  0002d	eb 0d		 jmp	 SHORT $LN29@DeleteEntr
$LN26@DeleteEntr:

; 1000 : 		{
; 1001 : 			m_dwEntryDelayGuildList.erase( m_dwEntryDelayGuildList.begin() + i );

  0002f	8d 04 b2	 lea	 eax, DWORD PTR [edx+esi*4]
  00032	50		 push	 eax
  00033	8d 45 08	 lea	 eax, DWORD PTR $T525245[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::erase
$LN29@DeleteEntr:
  0003c	5b		 pop	 ebx
  0003d	5f		 pop	 edi
$LN2@DeleteEntr:
  0003e	5e		 pop	 esi

; 1002 : 			return;
; 1003 : 		}
; 1004 : 	}
; 1005 : }

  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
?DeleteEntryDelayGuildList@ioGuildInfo@@QAEXK@Z ENDP	; ioGuildInfo::DeleteEntryDelayGuildList
_TEXT	ENDS
PUBLIC	??1?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE@XZ ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::~vector<ioGuildData *,std::allocator<ioGuildData *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE@XZ PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::~vector<ioGuildData *,std::allocator<ioGuildData *> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEXXZ ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Tidy
??1?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::~vector<ioGuildData *,std::allocator<ioGuildData *> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAEXXZ ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T525312 = -4						; size = 4
?clear@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAEXXZ PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T525312[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@0@Z ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAEXXZ ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::clear
_TEXT	ENDS
PUBLIC	??1?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE@XZ ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::~vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE@XZ PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::~vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEXXZ ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Tidy
??1?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE@XZ ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::~vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAEXXZ ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T525376 = -4						; size = 4
?clear@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAEXXZ PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T525376[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@0@Z ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAEXXZ ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::clear
_TEXT	ENDS
PUBLIC	??1?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE@XZ ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::~vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE@XZ PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::~vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEXXZ ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Tidy
??1?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE@XZ ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::~vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAEXXZ ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T525440 = -4						; size = 4
?clear@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAEXXZ PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T525440[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@0@Z ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAEXXZ ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::clear
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEXI@Z ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEXI@Z PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx

; 1292 : 		if (max_size() - _Count < _Size)

  0000d	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  00012	2b 55 08	 sub	 edx, DWORD PTR __Count$[ebp]
  00015	c1 f8 02	 sar	 eax, 2
  00018	3b d0		 cmp	 edx, eax
  0001a	73 0b		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve:
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  00027	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0002a	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0002d	2b d1		 sub	 edx, ecx
  0002f	c1 fa 02	 sar	 edx, 2
  00032	3b c2		 cmp	 eax, edx
  00034	76 10		 jbe	 SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  00036	50		 push	 eax
  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IBEII@Z ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Grow_to
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?reserve@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAEXI@Z ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::reserve
$LN1@Reserve:
  00046	5e		 pop	 esi

; 1298 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN20@Reserve:
?_Reserve@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEXI@Z ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Reserve
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEXI@Z ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEXI@Z PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx

; 1292 : 		if (max_size() - _Count < _Size)

  0000d	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  00012	2b 55 08	 sub	 edx, DWORD PTR __Count$[ebp]
  00015	c1 f8 02	 sar	 eax, 2
  00018	3b d0		 cmp	 edx, eax
  0001a	73 0b		 jae	 SHORT $LN4@Reserve@2

; 1293 : 			_Xlen();

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve@2:
$LN4@Reserve@2:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  00027	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0002a	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0002d	2b d1		 sub	 edx, ecx
  0002f	c1 fa 02	 sar	 edx, 2
  00032	3b c2		 cmp	 eax, edx
  00034	76 10		 jbe	 SHORT $LN1@Reserve@2

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  00036	50		 push	 eax
  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IBEII@Z ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Grow_to
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?reserve@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAEXI@Z ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::reserve
$LN1@Reserve@2:
  00046	5e		 pop	 esi

; 1298 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN20@Reserve@2:
?_Reserve@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEXI@Z ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Reserve
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEXI@Z ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEXI@Z PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx

; 1292 : 		if (max_size() - _Count < _Size)

  0000d	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  00012	2b 55 08	 sub	 edx, DWORD PTR __Count$[ebp]
  00015	c1 f8 02	 sar	 eax, 2
  00018	3b d0		 cmp	 edx, eax
  0001a	73 0b		 jae	 SHORT $LN4@Reserve@3

; 1293 : 			_Xlen();

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve@3:
$LN4@Reserve@3:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  00027	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0002a	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0002d	2b d1		 sub	 edx, ecx
  0002f	c1 fa 02	 sar	 edx, 2
  00032	3b c2		 cmp	 eax, edx
  00034	76 10		 jbe	 SHORT $LN1@Reserve@3

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  00036	50		 push	 eax
  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IBEII@Z ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Grow_to
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?reserve@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAEXI@Z ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::reserve
$LN1@Reserve@3:
  00046	5e		 pop	 esi

; 1298 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN20@Reserve@3:
?_Reserve@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEXI@Z ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Reserve
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@YAXPAUGuildUser@ioGuildData@@0AAV?$allocator@UGuildUser@ioGuildData@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ioGuildData::GuildUser> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@YAXPAUGuildUser@ioGuildData@@0AAV?$allocator@UGuildUser@ioGuildData@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@YAXPAUGuildUser@ioGuildData@@0AAV?$allocator@UGuildUser@ioGuildData@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ioGuildData::GuildUser> >, COMDAT

; 95   : 	{	// destroy [_First, _Last), arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 96   : 	for (; _First != _Last; ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0a		 jmp	 SHORT $LN17@Destroy_ra
$LL3@Destroy_ra:

; 97   : 		_Dest_val(_Al, _First);

  00009	8b ce		 mov	 ecx, esi
  0000b	e8 00 00 00 00	 call	 ??1GuildUser@ioGuildData@@QAE@XZ
  00010	83 c6 38	 add	 esi, 56			; 00000038H
$LN17@Destroy_ra:

; 96   : 	for (; _First != _Last; ++_First)

  00013	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00016	75 f1		 jne	 SHORT $LL3@Destroy_ra
  00018	5e		 pop	 esi

; 98   : 	}

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??$_Destroy_range@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@YAXPAUGuildUser@ioGuildData@@0AAV?$allocator@UGuildUser@ioGuildData@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioGuildData::GuildUser> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@YAXPAUInvitationUser@ioGuildInfo@@0AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ioGuildInfo::InvitationUser> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy_range@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@YAXPAUInvitationUser@ioGuildInfo@@0AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@YAXPAUInvitationUser@ioGuildInfo@@0AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ioGuildInfo::InvitationUser> >, COMDAT

; 95   : 	{	// destroy [_First, _Last), arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 96   : 	for (; _First != _Last; ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0b		 jmp	 SHORT $LN20@Destroy_ra@2
$LL3@Destroy_ra@2:

; 97   : 		_Dest_val(_Al, _First);

  00009	8b ce		 mov	 ecx, esi
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00011	83 c6 14	 add	 esi, 20			; 00000014H
$LN20@Destroy_ra@2:

; 96   : 	for (; _First != _Last; ++_First)

  00014	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00017	75 f0		 jne	 SHORT $LL3@Destroy_ra@2
  00019	5e		 pop	 esi

; 98   : 	}

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Destroy_range@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@YAXPAUInvitationUser@ioGuildInfo@@0AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioGuildInfo::InvitationUser> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@@Z ; std::_Uninitialized_move<ioGuildData::GuildUser *,ioGuildData::GuildUser *,std::allocator<ioGuildData::GuildUser> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@@Z
_TEXT	SEGMENT
__Cat$525665 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@@Z PROC ; std::_Uninitialized_move<ioGuildData::GuildUser *,ioGuildData::GuildUser *,std::allocator<ioGuildData::GuildUser> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$525665[ebp]
  00007	6a 00		 push	 0
  00009	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000c	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00012	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00015	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@U12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioGuildData::GuildUser *,ioGuildData::GuildUser *,std::allocator<ioGuildData::GuildUser>,ioGuildData::GuildUser>
  0001a	83 c4 18	 add	 esp, 24			; 00000018H

; 472  : 	}

  0001d	c9		 leave
  0001e	c3		 ret	 0
??$_Uninitialized_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@@Z ENDP ; std::_Uninitialized_move<ioGuildData::GuildUser *,ioGuildData::GuildUser *,std::allocator<ioGuildData::GuildUser> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@@Z ; std::_Uninitialized_move<ioGuildInfo::InvitationUser *,ioGuildInfo::InvitationUser *,std::allocator<ioGuildInfo::InvitationUser> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Uninitialized_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@@Z
_TEXT	SEGMENT
__Cat$525675 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@@Z PROC ; std::_Uninitialized_move<ioGuildInfo::InvitationUser *,ioGuildInfo::InvitationUser *,std::allocator<ioGuildInfo::InvitationUser> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$525675[ebp]
  00007	6a 00		 push	 0
  00009	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000c	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00012	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00015	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@U12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioGuildInfo::InvitationUser *,ioGuildInfo::InvitationUser *,std::allocator<ioGuildInfo::InvitationUser>,ioGuildInfo::InvitationUser>
  0001a	83 c4 18	 add	 esp, 24			; 00000018H

; 472  : 	}

  0001d	c9		 leave
  0001e	c3		 ret	 0
??$_Uninitialized_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@@Z ENDP ; std::_Uninitialized_move<ioGuildInfo::InvitationUser *,ioGuildInfo::InvitationUser *,std::allocator<ioGuildInfo::InvitationUser> >
_TEXT	ENDS
PUBLIC	??$_Unguarded_partition@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YA?AU?$pair@PAUGuildUser@ioGuildData@@PAU12@@0@PAUGuildUser@ioGuildData@@0VGuildUserSort@3@@Z ; std::_Unguarded_partition<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
;	COMDAT ??$_Unguarded_partition@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YA?AU?$pair@PAUGuildUser@ioGuildData@@PAU12@@0@PAUGuildUser@ioGuildData@@0VGuildUserSort@3@@Z
_TEXT	SEGMENT
__Glast$ = -8						; size = 4
__Plast$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Unguarded_partition@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YA?AU?$pair@PAUGuildUser@ioGuildData@@PAU12@@0@PAUGuildUser@ioGuildData@@0VGuildUserSort@3@@Z PROC ; std::_Unguarded_partition<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>, COMDAT

; 3712 : 	{	// partition [_First, _Last), using _Pred

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx

; 3713 : 	_RanIt _Mid = _First + (_Last - _First) / 2;

  00005	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  00008	53		 push	 ebx
  00009	8b 5d 0c	 mov	 ebx, DWORD PTR __First$[ebp]
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	6a 38		 push	 56			; 00000038H
  00010	8b c1		 mov	 eax, ecx
  00012	2b c3		 sub	 eax, ebx
  00014	5f		 pop	 edi
  00015	99		 cdq
  00016	8b f7		 mov	 esi, edi
  00018	f7 fe		 idiv	 esi

; 3714 : 	_Median(_First, _Mid, _Last - 1, _Pred);

  0001a	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  0001d	83 c1 c8	 add	 ecx, -56		; ffffffc8H
  00020	51		 push	 ecx
  00021	99		 cdq
  00022	2b c2		 sub	 eax, edx
  00024	8b f0		 mov	 esi, eax
  00026	d1 fe		 sar	 esi, 1
  00028	6b f6 38	 imul	 esi, 56			; 00000038H
  0002b	03 f3		 add	 esi, ebx
  0002d	56		 push	 esi
  0002e	53		 push	 ebx
  0002f	e8 00 00 00 00	 call	 ??$_Median@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@00VGuildUserSort@2@@Z ; std::_Median<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
  00034	83 c4 10	 add	 esp, 16			; 00000010H

; 3715 : 	_RanIt _Pfirst = _Mid;
; 3716 : 	_RanIt _Plast = _Pfirst + 1;

  00037	8d 46 38	 lea	 eax, DWORD PTR [esi+56]
  0003a	89 45 fc	 mov	 DWORD PTR __Plast$[ebp], eax

; 3717 : 
; 3718 : 	while (_First < _Pfirst
; 3719 : 		&& !_DEBUG_LT_PRED(_Pred, *(_Pfirst - 1), *_Pfirst)
; 3720 : 		&& !_Pred(*_Pfirst, *(_Pfirst - 1)))

  0003d	3b de		 cmp	 ebx, esi
  0003f	73 2b		 jae	 SHORT $LN131@Unguarded_

; 3713 : 	_RanIt _Mid = _First + (_Last - _First) / 2;

  00041	8d 46 d8	 lea	 eax, DWORD PTR [esi-40]
$LL27@Unguarded_:

; 3717 : 
; 3718 : 	while (_First < _Pfirst
; 3719 : 		&& !_DEBUG_LT_PRED(_Pred, *(_Pfirst - 1), *_Pfirst)
; 3720 : 		&& !_Pred(*_Pfirst, *(_Pfirst - 1)))

  00044	8b 08		 mov	 ecx, DWORD PTR [eax]
  00046	8b 50 38	 mov	 edx, DWORD PTR [eax+56]
  00049	3b ca		 cmp	 ecx, edx
  0004b	7f 1f		 jg	 SHORT $LN131@Unguarded_
  0004d	75 07		 jne	 SHORT $LN30@Unguarded_
  0004f	8b 58 f0	 mov	 ebx, DWORD PTR [eax-16]
  00052	3b 1e		 cmp	 ebx, DWORD PTR [esi]
  00054	72 16		 jb	 SHORT $LN131@Unguarded_
$LN30@Unguarded_:
  00056	3b d1		 cmp	 edx, ecx
  00058	7f 12		 jg	 SHORT $LN131@Unguarded_
  0005a	75 07		 jne	 SHORT $LN36@Unguarded_
  0005c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005e	3b 48 f0	 cmp	 ecx, DWORD PTR [eax-16]
  00061	72 09		 jb	 SHORT $LN131@Unguarded_
$LN36@Unguarded_:

; 3721 : 		--_Pfirst;

  00063	2b f7		 sub	 esi, edi
  00065	2b c7		 sub	 eax, edi
  00067	39 75 0c	 cmp	 DWORD PTR __First$[ebp], esi
  0006a	72 d8		 jb	 SHORT $LL27@Unguarded_
$LN131@Unguarded_:

; 3722 : 	while (_Plast < _Last
; 3723 : 		&& !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst)
; 3724 : 		&& !_Pred(*_Pfirst, *_Plast))

  0006c	8b 5d fc	 mov	 ebx, DWORD PTR __Plast$[ebp]
  0006f	3b 5d 10	 cmp	 ebx, DWORD PTR __Last$[ebp]
  00072	73 28		 jae	 SHORT $LN124@Unguarded_
  00074	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
$LL25@Unguarded_:
  00077	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  0007a	3b c1		 cmp	 eax, ecx
  0007c	7f 1e		 jg	 SHORT $LN124@Unguarded_
  0007e	75 06		 jne	 SHORT $LN42@Unguarded_
  00080	8b 13		 mov	 edx, DWORD PTR [ebx]
  00082	3b 16		 cmp	 edx, DWORD PTR [esi]
  00084	72 16		 jb	 SHORT $LN124@Unguarded_
$LN42@Unguarded_:
  00086	3b c8		 cmp	 ecx, eax
  00088	7f 12		 jg	 SHORT $LN124@Unguarded_
  0008a	75 06		 jne	 SHORT $LN48@Unguarded_
  0008c	8b 06		 mov	 eax, DWORD PTR [esi]
  0008e	3b 03		 cmp	 eax, DWORD PTR [ebx]
  00090	72 0a		 jb	 SHORT $LN124@Unguarded_
$LN48@Unguarded_:

; 3725 : 		++_Plast;

  00092	03 df		 add	 ebx, edi
  00094	89 5d fc	 mov	 DWORD PTR __Plast$[ebp], ebx
  00097	3b 5d 10	 cmp	 ebx, DWORD PTR __Last$[ebp]
  0009a	72 db		 jb	 SHORT $LL25@Unguarded_
$LN124@Unguarded_:

; 3726 : 
; 3727 : 	_RanIt _Gfirst = _Plast;
; 3728 : 	_RanIt _Glast = _Pfirst;

  0009c	89 75 f8	 mov	 DWORD PTR __Glast$[ebp], esi

; 3729 : 
; 3730 : 	for (; ; )
; 3731 : 		{	// partition
; 3732 : 		for (; _Gfirst < _Last; ++_Gfirst)

  0009f	eb 2f		 jmp	 SHORT $LN137@Unguarded_
$LL21@Unguarded_:

; 3733 : 			if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst))

  000a1	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000a4	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  000a7	3b c1		 cmp	 eax, ecx
  000a9	7f 23		 jg	 SHORT $LN20@Unguarded_
  000ab	75 06		 jne	 SHORT $LN54@Unguarded_
  000ad	8b 16		 mov	 edx, DWORD PTR [esi]
  000af	3b 13		 cmp	 edx, DWORD PTR [ebx]
  000b1	72 1b		 jb	 SHORT $LN20@Unguarded_
$LN54@Unguarded_:

; 3734 : 				;
; 3735 : 			else if (_Pred(*_Gfirst, *_Pfirst))

  000b3	3b c8		 cmp	 ecx, eax
  000b5	7f 1e		 jg	 SHORT $LN126@Unguarded_
  000b7	75 06		 jne	 SHORT $LN60@Unguarded_
  000b9	8b 03		 mov	 eax, DWORD PTR [ebx]
  000bb	3b 06		 cmp	 eax, DWORD PTR [esi]
  000bd	72 16		 jb	 SHORT $LN126@Unguarded_
$LN60@Unguarded_:

; 3736 : 				break;
; 3737 : 			else
; 3738 : 				_STD iter_swap(_Plast++, _Gfirst);

  000bf	8b 45 fc	 mov	 eax, DWORD PTR __Plast$[ebp]
  000c2	01 7d fc	 add	 DWORD PTR __Plast$[ebp], edi
  000c5	53		 push	 ebx
  000c6	50		 push	 eax
$LN139@Unguarded_:
  000c7	e8 00 00 00 00	 call	 ??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z ; std::swap<ioGuildData::GuildUser>
  000cc	59		 pop	 ecx
  000cd	59		 pop	 ecx
$LN20@Unguarded_:

; 3729 : 
; 3730 : 	for (; ; )
; 3731 : 		{	// partition
; 3732 : 		for (; _Gfirst < _Last; ++_Gfirst)

  000ce	03 df		 add	 ebx, edi
$LN137@Unguarded_:
  000d0	3b 5d 10	 cmp	 ebx, DWORD PTR __Last$[ebp]
  000d3	72 cc		 jb	 SHORT $LL21@Unguarded_
$LN126@Unguarded_:

; 3739 : 		for (; _First < _Glast; --_Glast)

  000d5	8b 45 f8	 mov	 eax, DWORD PTR __Glast$[ebp]
  000d8	3b 45 0c	 cmp	 eax, DWORD PTR __First$[ebp]
  000db	76 4d		 jbe	 SHORT $LN138@Unguarded_
  000dd	8d 78 d8	 lea	 edi, DWORD PTR [eax-40]
$LL14@Unguarded_:

; 3740 : 			if (_DEBUG_LT_PRED(_Pred, *(_Glast - 1), *_Pfirst))

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  000e5	3b c1		 cmp	 eax, ecx
  000e7	7f 25		 jg	 SHORT $LN13@Unguarded_
  000e9	75 07		 jne	 SHORT $LN68@Unguarded_
  000eb	8b 57 f0	 mov	 edx, DWORD PTR [edi-16]
  000ee	3b 16		 cmp	 edx, DWORD PTR [esi]
  000f0	72 1c		 jb	 SHORT $LN13@Unguarded_
$LN68@Unguarded_:

; 3741 : 				;
; 3742 : 			else if (_Pred(*_Pfirst, *(_Glast - 1)))

  000f2	3b c8		 cmp	 ecx, eax
  000f4	7f 2b		 jg	 SHORT $LN135@Unguarded_
  000f6	75 07		 jne	 SHORT $LN74@Unguarded_
  000f8	8b 06		 mov	 eax, DWORD PTR [esi]
  000fa	3b 47 f0	 cmp	 eax, DWORD PTR [edi-16]
  000fd	72 22		 jb	 SHORT $LN135@Unguarded_
$LN74@Unguarded_:

; 3743 : 				break;
; 3744 : 			else
; 3745 : 				_STD iter_swap(--_Pfirst, _Glast - 1);

  000ff	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  00102	83 ee 38	 sub	 esi, 56			; 00000038H
  00105	50		 push	 eax
  00106	56		 push	 esi
  00107	e8 00 00 00 00	 call	 ??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z ; std::swap<ioGuildData::GuildUser>
  0010c	59		 pop	 ecx
  0010d	59		 pop	 ecx
$LN13@Unguarded_:

; 3739 : 		for (; _First < _Glast; --_Glast)

  0010e	8b 45 f8	 mov	 eax, DWORD PTR __Glast$[ebp]
  00111	83 e8 38	 sub	 eax, 56			; 00000038H
  00114	83 ef 38	 sub	 edi, 56			; 00000038H
  00117	89 45 f8	 mov	 DWORD PTR __Glast$[ebp], eax
  0011a	39 45 0c	 cmp	 DWORD PTR __First$[ebp], eax
  0011d	72 c1		 jb	 SHORT $LL14@Unguarded_
  0011f	eb 03		 jmp	 SHORT $LN129@Unguarded_
$LN135@Unguarded_:
  00121	8b 45 f8	 mov	 eax, DWORD PTR __Glast$[ebp]
$LN129@Unguarded_:

; 3746 : 		if (_Glast == _First && _Gfirst == _Last)

  00124	3b 45 0c	 cmp	 eax, DWORD PTR __First$[ebp]
  00127	6a 38		 push	 56			; 00000038H
  00129	5f		 pop	 edi
$LN138@Unguarded_:
  0012a	75 20		 jne	 SHORT $LN6@Unguarded_
  0012c	3b 5d 10	 cmp	 ebx, DWORD PTR __Last$[ebp]
  0012f	74 4e		 je	 SHORT $LN112@Unguarded_

; 3748 : 
; 3749 : 		if (_Glast == _First)
; 3750 : 			{	// no room at bottom, rotate pivot upward
; 3751 : 			if (_Plast != _Gfirst)

  00131	39 5d fc	 cmp	 DWORD PTR __Plast$[ebp], ebx
  00134	74 0b		 je	 SHORT $LN94@Unguarded_

; 3752 : 				_STD iter_swap(_Pfirst, _Plast);

  00136	ff 75 fc	 push	 DWORD PTR __Plast$[ebp]
  00139	56		 push	 esi
  0013a	e8 00 00 00 00	 call	 ??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z ; std::swap<ioGuildData::GuildUser>
  0013f	59		 pop	 ecx
  00140	59		 pop	 ecx
$LN94@Unguarded_:

; 3753 : 			++_Plast;

  00141	01 7d fc	 add	 DWORD PTR __Plast$[ebp], edi

; 3754 : 			_STD iter_swap(_Pfirst++, _Gfirst++);

  00144	53		 push	 ebx
  00145	56		 push	 esi
  00146	03 f7		 add	 esi, edi
  00148	03 df		 add	 ebx, edi
  0014a	eb 20		 jmp	 SHORT $LN136@Unguarded_
$LN6@Unguarded_:

; 3755 : 			}
; 3756 : 		else if (_Gfirst == _Last)
; 3757 : 			{	// no room at top, rotate pivot downward
; 3758 : 			if (--_Glast != --_Pfirst)

  0014c	2b c7		 sub	 eax, edi
  0014e	89 45 f8	 mov	 DWORD PTR __Glast$[ebp], eax
  00151	3b 5d 10	 cmp	 ebx, DWORD PTR __Last$[ebp]
  00154	75 22		 jne	 SHORT $LN3@Unguarded_
  00156	2b f7		 sub	 esi, edi
  00158	3b c6		 cmp	 eax, esi
  0015a	74 09		 je	 SHORT $LN98@Unguarded_

; 3759 : 				_STD iter_swap(_Glast, _Pfirst);

  0015c	56		 push	 esi
  0015d	50		 push	 eax
  0015e	e8 00 00 00 00	 call	 ??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z ; std::swap<ioGuildData::GuildUser>
  00163	59		 pop	 ecx
  00164	59		 pop	 ecx
$LN98@Unguarded_:

; 3760 : 			_STD iter_swap(_Pfirst, --_Plast);

  00165	29 7d fc	 sub	 DWORD PTR __Plast$[ebp], edi
  00168	ff 75 fc	 push	 DWORD PTR __Plast$[ebp]
  0016b	56		 push	 esi
$LN136@Unguarded_:
  0016c	e8 00 00 00 00	 call	 ??$swap@UGuildUser@ioGuildData@@@std@@YAXAAUGuildUser@ioGuildData@@0@Z ; std::swap<ioGuildData::GuildUser>
  00171	59		 pop	 ecx
  00172	59		 pop	 ecx

; 3761 : 			}
; 3762 : 		else

  00173	e9 58 ff ff ff	 jmp	 $LN137@Unguarded_
$LN3@Unguarded_:

; 3763 : 			_STD iter_swap(_Gfirst++, --_Glast);

  00178	50		 push	 eax
  00179	53		 push	 ebx

; 3764 : 		}

  0017a	e9 48 ff ff ff	 jmp	 $LN139@Unguarded_
$LN112@Unguarded_:

; 3747 : 			return (_STD pair<_RanIt, _RanIt>(_Pfirst, _Plast));

  0017f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00182	8b 4d fc	 mov	 ecx, DWORD PTR __Plast$[ebp]
  00185	5f		 pop	 edi
  00186	89 30		 mov	 DWORD PTR [eax], esi
  00188	5e		 pop	 esi
  00189	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0018c	5b		 pop	 ebx

; 3765 : 	}

  0018d	c9		 leave
  0018e	c3		 ret	 0
??$_Unguarded_partition@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YA?AU?$pair@PAUGuildUser@ioGuildData@@PAU12@@0@PAUGuildUser@ioGuildData@@0VGuildUserSort@3@@Z ENDP ; std::_Unguarded_partition<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
_TEXT	ENDS
PUBLIC	??$make_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z ; std::make_heap<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
; Function compile flags: /Ogsp
;	COMDAT ??$make_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
??$make_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z PROC ; std::make_heap<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>, COMDAT

; 2672 : 	{	// make [_First, _Last) into a heap, using _Pred

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2673 : 	_DEBUG_RANGE(_First, _Last);
; 2674 : 	_DEBUG_POINTER(_Pred);
; 2675 : 	if (1 < _Last - _First)

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00006	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00009	6a 38		 push	 56			; 00000038H
  0000b	99		 cdq
  0000c	59		 pop	 ecx
  0000d	f7 f9		 idiv	 ecx
  0000f	83 f8 01	 cmp	 eax, 1
  00012	7e 15		 jle	 SHORT $LN1@make_heap

; 2676 : 		_Make_heap(_Unchecked(_First), _Unchecked(_Last), _Pred,
; 2677 : 			_Dist_type(_First), _Val_type(_First));

  00014	6a 00		 push	 0
  00016	6a 00		 push	 0
  00018	ff 75 10	 push	 DWORD PTR __Pred$[ebp]
  0001b	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0001e	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00021	e8 00 00 00 00	 call	 ??$_Make_heap@PAUGuildUser@ioGuildData@@HU12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@PAH0@Z ; std::_Make_heap<ioGuildData::GuildUser *,int,ioGuildData::GuildUser,ioGuildData::GuildUserSort>
  00026	83 c4 14	 add	 esp, 20			; 00000014H
$LN1@make_heap:

; 2678 : 	}

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??$make_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z ENDP ; std::make_heap<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_copy@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent> >, COMDAT

; 369  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;
; 373  : 
; 374  : 	_TRY_BEGIN
; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 16		 jmp	 SHORT $LN27@Uninit_cop
$LL6@Uninit_cop:

; 376  : 		_Cons_val(_Al, _Dest, *_First);

  00009	56		 push	 esi
  0000a	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000d	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@AAV3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@AAV2@@Z ; std::_Cons_val<std::allocator<GashaponPresent>,GashaponPresent,GashaponPresent &>
  00015	83 45 10 14	 add	 DWORD PTR __Dest$[ebp], 20 ; 00000014H
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001c	83 c6 14	 add	 esi, 20			; 00000014H
$LN27@Uninit_cop:

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;
; 373  : 
; 374  : 	_TRY_BEGIN
; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

  0001f	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00022	75 e5		 jne	 SHORT $LL6@Uninit_cop

; 377  : 	_CATCH_ALL
; 378  : 	for (; _Next != _Dest; ++_Next)
; 379  : 		_Dest_val(_Al, _Next);
; 380  : 	_RERAISE;
; 381  : 	_CATCH_END
; 382  : 	return (_Dest);

  00024	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00027	5e		 pop	 esi

; 383  : 	}

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$_Uninit_copy@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent> >
_TEXT	ENDS
PUBLIC	??$_Pop_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z ; std::_Pop_heap<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
;	COMDAT ??$_Pop_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
??$_Pop_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z PROC ; std::_Pop_heap<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>, COMDAT

; 2610 : 	{	// pop *_First to *(_Last - 1) and reheap, using _Pred

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2611 : 	_Pop_heap_0(_Unchecked(_First), _Unchecked(_Last), _Pred,
; 2612 : 		_Val_type(_First));

  00003	6a 00		 push	 0
  00005	ff 75 10	 push	 DWORD PTR __Pred$[ebp]
  00008	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000b	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000e	e8 00 00 00 00	 call	 ??$_Pop_heap_0@PAUGuildUser@ioGuildData@@U12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z ; std::_Pop_heap_0<ioGuildData::GuildUser *,ioGuildData::GuildUser,ioGuildData::GuildUserSort>
  00013	83 c4 10	 add	 esp, 16			; 00000010H

; 2613 : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Pop_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z ENDP ; std::_Pop_heap<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
_TEXT	ENDS
PUBLIC	??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@KV?$allocator@K@std@@@std@@QAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@KV?$allocator@K@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T525927 = -4						; size = 4
?clear@?$vector@KV?$allocator@K@std@@@std@@QAEXXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T525927[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@KV?$allocator@K@std@@@std@@QAEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::clear
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx

; 1292 : 		if (max_size() - _Count < _Size)

  0000d	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  00012	2b 55 08	 sub	 edx, DWORD PTR __Count$[ebp]
  00015	c1 f8 02	 sar	 eax, 2
  00018	3b d0		 cmp	 edx, eax
  0001a	73 0b		 jae	 SHORT $LN4@Reserve@4

; 1293 : 			_Xlen();

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve@4:
$LN4@Reserve@4:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  00027	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0002a	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0002d	2b d1		 sub	 edx, ecx
  0002f	c1 fa 02	 sar	 edx, 2
  00032	3b c2		 cmp	 eax, edx
  00034	76 10		 jbe	 SHORT $LN1@Reserve@4

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  00036	50		 push	 eax
  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Grow_to
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?reserve@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::reserve
$LN1@Reserve@4:
  00046	5e		 pop	 esi

; 1298 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN20@Reserve@4:
?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 893  : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 894  : 		if (_Right.size() < _Roff)

  00004	8b 5d 08	 mov	 ebx, DWORD PTR __Right$[ebp]
  00007	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR __Roff$[ebp]
  00010	57		 push	 edi
  00011	3b c1		 cmp	 eax, ecx
  00013	73 0b		 jae	 SHORT $LN5@assign

; 895  : 			_Xran();	// _Roff off end

  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN34@assign:
$LN5@assign:

; 896  : 		size_type _Num = _Right.size() - _Roff;

  00020	2b c1		 sub	 eax, ecx
  00022	8b f8		 mov	 edi, eax

; 897  : 		if (_Count < _Num)

  00024	39 7d 10	 cmp	 DWORD PTR __Count$[ebp], edi

; 898  : 			_Num = _Count;	// trim _Num to size

  00027	0f 42 7d 10	 cmovb	 edi, DWORD PTR __Count$[ebp]

; 899  : 
; 900  : 		if (this == &_Right)

  0002b	3b f3		 cmp	 esi, ebx
  0002d	75 1a		 jne	 SHORT $LN3@assign

; 901  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

  0002f	03 f9		 add	 edi, ecx
  00031	6a ff		 push	 -1
  00033	57		 push	 edi
  00034	8b ce		 mov	 ecx, esi
  00036	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  0003b	ff 75 0c	 push	 DWORD PTR __Roff$[ebp]
  0003e	8b ce		 mov	 ecx, esi
  00040	6a 00		 push	 0
  00042	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00047	eb 47		 jmp	 SHORT $LN31@assign
$LN3@assign:

; 902  : 		else if (_Grow(_Num))

  00049	6a 00		 push	 0
  0004b	57		 push	 edi
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  00053	84 c0		 test	 al, al
  00055	74 39		 je	 SHORT $LN31@assign

; 903  : 			{	// make room and assign new stuff
; 904  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

  00057	83 7b 14 10	 cmp	 DWORD PTR [ebx+20], 16	; 00000010H
  0005b	72 04		 jb	 SHORT $LN17@assign
  0005d	8b 03		 mov	 eax, DWORD PTR [ebx]
  0005f	eb 02		 jmp	 SHORT $LN18@assign
$LN17@assign:
  00061	8b c3		 mov	 eax, ebx
$LN18@assign:
  00063	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00067	72 04		 jb	 SHORT $LN21@assign
  00069	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0006b	eb 02		 jmp	 SHORT $LN22@assign
$LN21@assign:
  0006d	8b ce		 mov	 ecx, esi
$LN22@assign:
  0006f	03 45 0c	 add	 eax, DWORD PTR __Roff$[ebp]
  00072	57		 push	 edi
  00073	50		 push	 eax
  00074	51		 push	 ecx
  00075	e8 00 00 00 00	 call	 _memcpy
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 905  : 			_Eos(_Num);

  0007d	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00081	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  00084	72 04		 jb	 SHORT $LN29@assign
  00086	8b 06		 mov	 eax, DWORD PTR [esi]
  00088	eb 02		 jmp	 SHORT $LN30@assign
$LN29@assign:
  0008a	8b c6		 mov	 eax, esi
$LN30@assign:
  0008c	c6 04 38 00	 mov	 BYTE PTR [eax+edi], 0
$LN31@assign:

; 906  : 			}
; 907  : 		return (*this);

  00090	5f		 pop	 edi
  00091	8b c6		 mov	 eax, esi
  00093	5e		 pop	 esi
  00094	5b		 pop	 ebx

; 908  : 		}

  00095	5d		 pop	 ebp
  00096	c2 0c 00	 ret	 12			; 0000000cH
$LN33@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogsp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 911  : 		{	// assign [_Ptr, _Ptr + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 912  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 913  : 		if (_Count != 0)
; 914  : 			_DEBUG_POINTER(_Ptr);
; 915  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 916  : 
; 917  : 		if (_Inside(_Ptr))

  00004	8b 5d 08	 mov	 ebx, DWORD PTR __Ptr$[ebp]
  00007	56		 push	 esi
  00008	53		 push	 ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
  00010	84 c0		 test	 al, al
  00012	74 1c		 je	 SHORT $LN2@assign@2

; 918  : 			return (assign(*this, _Ptr - _Myptr(), _Count));	// substring

  00014	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00018	72 04		 jb	 SHORT $LN7@assign@2
  0001a	8b 06		 mov	 eax, DWORD PTR [esi]
  0001c	eb 02		 jmp	 SHORT $LN8@assign@2
$LN7@assign@2:
  0001e	8b c6		 mov	 eax, esi
$LN8@assign@2:
  00020	ff 75 0c	 push	 DWORD PTR __Count$[ebp]
  00023	2b d8		 sub	 ebx, eax
  00025	53		 push	 ebx
  00026	56		 push	 esi
  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0002e	eb 3f		 jmp	 SHORT $LN3@assign@2
$LN2@assign@2:
  00030	57		 push	 edi

; 919  : 
; 920  : 		if (_Grow(_Count))

  00031	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  00034	6a 00		 push	 0
  00036	57		 push	 edi
  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  0003e	84 c0		 test	 al, al
  00040	74 2a		 je	 SHORT $LN21@assign@2

; 921  : 			{	// make room and assign new stuff
; 922  : 			_Traits::copy(_Myptr(), _Ptr, _Count);

  00042	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00046	72 04		 jb	 SHORT $LN11@assign@2
  00048	8b 06		 mov	 eax, DWORD PTR [esi]
  0004a	eb 02		 jmp	 SHORT $LN12@assign@2
$LN11@assign@2:
  0004c	8b c6		 mov	 eax, esi
$LN12@assign@2:
  0004e	57		 push	 edi
  0004f	53		 push	 ebx
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 _memcpy
  00056	83 c4 0c	 add	 esp, 12			; 0000000cH

; 923  : 			_Eos(_Count);

  00059	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  0005d	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  00060	72 04		 jb	 SHORT $LN19@assign@2
  00062	8b 06		 mov	 eax, DWORD PTR [esi]
  00064	eb 02		 jmp	 SHORT $LN20@assign@2
$LN19@assign@2:
  00066	8b c6		 mov	 eax, esi
$LN20@assign@2:
  00068	c6 04 38 00	 mov	 BYTE PTR [eax+edi], 0
$LN21@assign@2:

; 924  : 			}
; 925  : 		return (*this);

  0006c	8b c6		 mov	 eax, esi
  0006e	5f		 pop	 edi
$LN3@assign@2:
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx

; 926  : 		}

  00071	5d		 pop	 ebp
  00072	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@VGashaponPresent@@@std@@@std@@YAXPAVGashaponPresent@@0AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<GashaponPresent> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@VGashaponPresent@@@std@@@std@@YAXPAVGashaponPresent@@0AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@VGashaponPresent@@@std@@@std@@YAXPAVGashaponPresent@@0AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<GashaponPresent> >, COMDAT

; 95   : 	{	// destroy [_First, _Last), arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 96   : 	for (; _First != _Last; ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0a		 jmp	 SHORT $LN17@Destroy_ra@3
$LL3@Destroy_ra@3:

; 97   : 		_Dest_val(_Al, _First);

  00009	8b ce		 mov	 ecx, esi
  0000b	e8 00 00 00 00	 call	 ??1GashaponPresent@@QAE@XZ ; GashaponPresent::~GashaponPresent
  00010	83 c6 14	 add	 esi, 20			; 00000014H
$LN17@Destroy_ra@3:

; 96   : 	for (; _First != _Last; ++_First)

  00013	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00016	75 f1		 jne	 SHORT $LL3@Destroy_ra@3
  00018	5e		 pop	 esi

; 98   : 	}

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??$_Destroy_range@V?$allocator@VGashaponPresent@@@std@@@std@@YAXPAVGashaponPresent@@0AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<GashaponPresent> >
_TEXT	ENDS
PUBLIC	??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 62   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	_Ptr->~_Ty();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	6a 00		 push	 0
  00008	6a 01		 push	 1
  0000a	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 64   : 	}

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	?IsGuildEntryDelayListDelete@ioGuildInfo@@QAE_NXZ ; ioGuildInfo::IsGuildEntryDelayListDelete
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
;	COMDAT ?IsGuildEntryDelayListDelete@ioGuildInfo@@QAE_NXZ
_TEXT	SEGMENT
$T526223 = -4						; size = 4
?IsGuildEntryDelayListDelete@ioGuildInfo@@QAE_NXZ PROC	; ioGuildInfo::IsGuildEntryDelayListDelete, COMDAT
; _this$ = ecx

; 963  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 964  : 	if( m_dwEntryDelayGuildList.empty() ) return false;

  00004	83 e9 80	 sub	 ecx, -128		; ffffff80H
  00007	8b 01		 mov	 eax, DWORD PTR [ecx]
  00009	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  0000c	75 04		 jne	 SHORT $LN1@IsGuildEnt@2
  0000e	32 c0		 xor	 al, al

; 968  : }

  00010	c9		 leave
  00011	c3		 ret	 0
$LN1@IsGuildEnt@2:

; 965  : 
; 966  : 	m_dwEntryDelayGuildList.clear();

  00012	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	50		 push	 eax
  00018	52		 push	 edx
  00019	8d 45 fc	 lea	 eax, DWORD PTR $T526223[ebp]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::erase

; 967  : 	return true;

  00022	b0 01		 mov	 al, 1

; 968  : }

  00024	c9		 leave
  00025	c3		 ret	 0
?IsGuildEntryDelayListDelete@ioGuildInfo@@QAE_NXZ ENDP	; ioGuildInfo::IsGuildEntryDelayListDelete
_TEXT	ENDS
PUBLIC	?DeleteEntryDelayGuildList@ioGuildInfo@@QAEXXZ	; ioGuildInfo::DeleteEntryDelayGuildList
; Function compile flags: /Ogsp
;	COMDAT ?DeleteEntryDelayGuildList@ioGuildInfo@@QAEXXZ
_TEXT	SEGMENT
$T526305 = -4						; size = 4
?DeleteEntryDelayGuildList@ioGuildInfo@@QAEXXZ PROC	; ioGuildInfo::DeleteEntryDelayGuildList, COMDAT
; _this$ = ecx

; 990  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 991  : 	m_dwEntryDelayGuildList.clear();

  00004	8b 81 84 00 00
	00		 mov	 eax, DWORD PTR [ecx+132]
  0000a	83 e9 80	 sub	 ecx, -128		; ffffff80H
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	50		 push	 eax
  00010	52		 push	 edx
  00011	8d 45 fc	 lea	 eax, DWORD PTR $T526305[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::erase

; 992  : }

  0001a	c9		 leave
  0001b	c3		 ret	 0
?DeleteEntryDelayGuildList@ioGuildInfo@@QAEXXZ ENDP	; ioGuildInfo::DeleteEntryDelayGuildList
_TEXT	ENDS
PUBLIC	?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEX$$QAK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEX$$QAK@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEX$$QAK@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back, COMDAT
; _this$ = ecx

; 631  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 632  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f8		 cmp	 edi, eax
  0000f	73 27		 jae	 SHORT $LN4@push_back
  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	3b cf		 cmp	 ecx, edi
  00015	77 21		 ja	 SHORT $LN4@push_back

; 633  : 			{	// push back an element
; 634  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	2b f9		 sub	 edi, ecx
  00019	c1 ff 02	 sar	 edi, 2

; 635  : 			if (this->_Mylast == this->_Myend)

  0001c	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0001f	75 09		 jne	 SHORT $LN3@push_back

; 636  : 				_Reserve(1);

  00021	6a 01		 push	 1
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve
$LN3@push_back:

; 637  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 638  : 			_Cons_val(this->_Alval,
; 639  : 				this->_Mylast,
; 640  : 				_STD forward<_Ty>(this->_Myfirst[_Idx]));

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	85 c0		 test	 eax, eax
  0002f	74 20		 je	 SHORT $LN41@push_back
  00031	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00033	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]

; 641  : 			++this->_Mylast;
; 642  : 			}
; 643  : 		else

  00036	eb 17		 jmp	 SHORT $LN48@push_back
$LN4@push_back:

; 644  : 			{	// push back a non-element
; 645  : 			if (this->_Mylast == this->_Myend)

  00038	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0003b	75 09		 jne	 SHORT $LN1@push_back

; 646  : 				_Reserve(1);

  0003d	6a 01		 push	 1
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve
$LN1@push_back:

; 647  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 648  : 			_Cons_val(this->_Alval,
; 649  : 				this->_Mylast,
; 650  : 				_STD forward<_Ty>(_Val));

  00046	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00049	85 c0		 test	 eax, eax
  0004b	74 04		 je	 SHORT $LN41@push_back
  0004d	8b 0f		 mov	 ecx, DWORD PTR [edi]
$LN48@push_back:
  0004f	89 08		 mov	 DWORD PTR [eax], ecx
$LN41@push_back:

; 651  : 			++this->_Mylast;

  00051	83 46 04 04	 add	 DWORD PTR [esi+4], 4
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi

; 652  : 			}
; 653  : 		}

  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEX$$QAK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back
_TEXT	ENDS
PUBLIC	?push_back@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAEXABQAVioGuildData@@@Z ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::push_back
; Function compile flags: /Ogsp
;	COMDAT ?push_back@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAEXABQAVioGuildData@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAEXABQAVioGuildData@@@Z PROC ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f8		 cmp	 edi, eax
  0000f	73 27		 jae	 SHORT $LN4@push_back@2
  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	3b cf		 cmp	 ecx, edi
  00015	77 21		 ja	 SHORT $LN4@push_back@2

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	2b f9		 sub	 edi, ecx
  00019	c1 ff 02	 sar	 edi, 2

; 980  : 			if (this->_Mylast == this->_Myend)

  0001c	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0001f	75 09		 jne	 SHORT $LN3@push_back@2

; 981  : 				_Reserve(1);

  00021	6a 01		 push	 1
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEXI@Z ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Reserve
$LN3@push_back@2:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	85 c0		 test	 eax, eax
  0002f	74 20		 je	 SHORT $LN39@push_back@2
  00031	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00033	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00036	eb 17		 jmp	 SHORT $LN46@push_back@2
$LN4@push_back@2:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00038	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0003b	75 09		 jne	 SHORT $LN1@push_back@2

; 991  : 				_Reserve(1);

  0003d	6a 01		 push	 1
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEXI@Z ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Reserve
$LN1@push_back@2:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00046	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00049	85 c0		 test	 eax, eax
  0004b	74 04		 je	 SHORT $LN39@push_back@2
  0004d	8b 0f		 mov	 ecx, DWORD PTR [edi]
$LN46@push_back@2:
  0004f	89 08		 mov	 DWORD PTR [eax], ecx
$LN39@push_back@2:

; 996  : 			++this->_Mylast;

  00051	83 46 04 04	 add	 DWORD PTR [esi+4], 4
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
?push_back@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAEXABQAVioGuildData@@@Z ENDP ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::push_back
_TEXT	ENDS
PUBLIC	?push_back@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAEXABQAUGuildAttendRwardInfo@@@Z ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::push_back
; Function compile flags: /Ogsp
;	COMDAT ?push_back@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAEXABQAUGuildAttendRwardInfo@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAEXABQAUGuildAttendRwardInfo@@@Z PROC ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f8		 cmp	 edi, eax
  0000f	73 27		 jae	 SHORT $LN4@push_back@3
  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	3b cf		 cmp	 ecx, edi
  00015	77 21		 ja	 SHORT $LN4@push_back@3

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	2b f9		 sub	 edi, ecx
  00019	c1 ff 02	 sar	 edi, 2

; 980  : 			if (this->_Mylast == this->_Myend)

  0001c	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0001f	75 09		 jne	 SHORT $LN3@push_back@3

; 981  : 				_Reserve(1);

  00021	6a 01		 push	 1
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEXI@Z ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Reserve
$LN3@push_back@3:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	85 c0		 test	 eax, eax
  0002f	74 20		 je	 SHORT $LN39@push_back@3
  00031	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00033	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00036	eb 17		 jmp	 SHORT $LN46@push_back@3
$LN4@push_back@3:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00038	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0003b	75 09		 jne	 SHORT $LN1@push_back@3

; 991  : 				_Reserve(1);

  0003d	6a 01		 push	 1
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEXI@Z ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Reserve
$LN1@push_back@3:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00046	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00049	85 c0		 test	 eax, eax
  0004b	74 04		 je	 SHORT $LN39@push_back@3
  0004d	8b 0f		 mov	 ecx, DWORD PTR [edi]
$LN46@push_back@3:
  0004f	89 08		 mov	 DWORD PTR [eax], ecx
$LN39@push_back@3:

; 996  : 			++this->_Mylast;

  00051	83 46 04 04	 add	 DWORD PTR [esi+4], 4
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
?push_back@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAEXABQAUGuildAttendRwardInfo@@@Z ENDP ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::push_back
_TEXT	ENDS
PUBLIC	?push_back@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAEXABQAUGuildRankRwardInfo@@@Z ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::push_back
; Function compile flags: /Ogsp
;	COMDAT ?push_back@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAEXABQAUGuildRankRwardInfo@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAEXABQAUGuildRankRwardInfo@@@Z PROC ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f8		 cmp	 edi, eax
  0000f	73 27		 jae	 SHORT $LN4@push_back@4
  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	3b cf		 cmp	 ecx, edi
  00015	77 21		 ja	 SHORT $LN4@push_back@4

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	2b f9		 sub	 edi, ecx
  00019	c1 ff 02	 sar	 edi, 2

; 980  : 			if (this->_Mylast == this->_Myend)

  0001c	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0001f	75 09		 jne	 SHORT $LN3@push_back@4

; 981  : 				_Reserve(1);

  00021	6a 01		 push	 1
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEXI@Z ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Reserve
$LN3@push_back@4:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	85 c0		 test	 eax, eax
  0002f	74 20		 je	 SHORT $LN39@push_back@4
  00031	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00033	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00036	eb 17		 jmp	 SHORT $LN46@push_back@4
$LN4@push_back@4:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00038	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0003b	75 09		 jne	 SHORT $LN1@push_back@4

; 991  : 				_Reserve(1);

  0003d	6a 01		 push	 1
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEXI@Z ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Reserve
$LN1@push_back@4:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00046	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00049	85 c0		 test	 eax, eax
  0004b	74 04		 je	 SHORT $LN39@push_back@4
  0004d	8b 0f		 mov	 ecx, DWORD PTR [edi]
$LN46@push_back@4:
  0004f	89 08		 mov	 DWORD PTR [eax], ecx
$LN39@push_back@4:

; 996  : 			++this->_Mylast;

  00051	83 46 04 04	 add	 DWORD PTR [esi+4], 4
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
?push_back@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAEXABQAUGuildRankRwardInfo@@@Z ENDP ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::push_back
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@YAXPAUGuildUser@ioGuildData@@0AAV?$allocator@UGuildUser@ioGuildData@@@0@@Z ; std::_Destroy_range<std::allocator<ioGuildData::GuildUser> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@YAXPAUGuildUser@ioGuildData@@0AAV?$allocator@UGuildUser@ioGuildData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@YAXPAUGuildUser@ioGuildData@@0AAV?$allocator@UGuildUser@ioGuildData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ioGuildData::GuildUser> >, COMDAT

; 87   : 	{	// destroy [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0a		 jmp	 SHORT $LN21@Destroy_ra@4
$LL7@Destroy_ra@4:
  00009	8b ce		 mov	 ecx, esi
  0000b	e8 00 00 00 00	 call	 ??1GuildUser@ioGuildData@@QAE@XZ
  00010	83 c6 38	 add	 esi, 56			; 00000038H
$LN21@Destroy_ra@4:
  00013	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00016	75 f1		 jne	 SHORT $LL7@Destroy_ra@4
  00018	5e		 pop	 esi

; 89   : 	}

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??$_Destroy_range@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@YAXPAUGuildUser@ioGuildData@@0AAV?$allocator@UGuildUser@ioGuildData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioGuildData::GuildUser> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@YAXPAUInvitationUser@ioGuildInfo@@0AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@@Z ; std::_Destroy_range<std::allocator<ioGuildInfo::InvitationUser> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy_range@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@YAXPAUInvitationUser@ioGuildInfo@@0AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@YAXPAUInvitationUser@ioGuildInfo@@0AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ioGuildInfo::InvitationUser> >, COMDAT

; 87   : 	{	// destroy [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0b		 jmp	 SHORT $LN24@Destroy_ra@5
$LL7@Destroy_ra@5:
  00009	8b ce		 mov	 ecx, esi
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00011	83 c6 14	 add	 esi, 20			; 00000014H
$LN24@Destroy_ra@5:
  00014	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00017	75 f0		 jne	 SHORT $LL7@Destroy_ra@5
  00019	5e		 pop	 esi

; 89   : 	}

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Destroy_range@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@YAXPAUInvitationUser@ioGuildInfo@@0AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioGuildInfo::InvitationUser> >
_TEXT	ENDS
PUBLIC	??$_Umove@PAUGuildUser@ioGuildData@@@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEPAUGuildUser@ioGuildData@@PAU23@00@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Umove<ioGuildData::GuildUser *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??$_Umove@PAUGuildUser@ioGuildData@@@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEPAUGuildUser@ioGuildData@@PAU23@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUGuildUser@ioGuildData@@@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEPAUGuildUser@ioGuildData@@PAU23@00@Z PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Umove<ioGuildData::GuildUser *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@@Z ; std::_Uninitialized_move<ioGuildData::GuildUser *,ioGuildData::GuildUser *,std::allocator<ioGuildData::GuildUser> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAUGuildUser@ioGuildData@@@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEPAUGuildUser@ioGuildData@@PAU23@00@Z ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Umove<ioGuildData::GuildUser *>
_TEXT	ENDS
PUBLIC	??$_Umove@PAUInvitationUser@ioGuildInfo@@@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEPAUInvitationUser@ioGuildInfo@@PAU23@00@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Umove<ioGuildInfo::InvitationUser *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Umove@PAUInvitationUser@ioGuildInfo@@@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEPAUInvitationUser@ioGuildInfo@@PAU23@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUInvitationUser@ioGuildInfo@@@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEPAUInvitationUser@ioGuildInfo@@PAU23@00@Z PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Umove<ioGuildInfo::InvitationUser *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@@Z ; std::_Uninitialized_move<ioGuildInfo::InvitationUser *,ioGuildInfo::InvitationUser *,std::allocator<ioGuildInfo::InvitationUser> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAUInvitationUser@ioGuildInfo@@@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEPAUInvitationUser@ioGuildInfo@@PAU23@00@Z ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Umove<ioGuildInfo::InvitationUser *>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@@Z ; std::_Uninitialized_copy<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_copy@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@@Z
_TEXT	SEGMENT
__Cat$526930 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@@Z PROC ; std::_Uninitialized_copy<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent> >, COMDAT

; 412  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 413  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 414  : 		_Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$526930[ebp]
  00007	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000a	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00010	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00013	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent> >
  00018	83 c4 14	 add	 esp, 20			; 00000014H

; 415  : 	}

  0001b	c9		 leave
  0001c	c3		 ret	 0
??$_Uninitialized_copy@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@@Z ENDP ; std::_Uninitialized_copy<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent> >
_TEXT	ENDS
PUBLIC	??$_Sort_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z ; std::_Sort_heap<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
;	COMDAT ??$_Sort_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
??$_Sort_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z PROC ; std::_Sort_heap<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>, COMDAT

; 2700 : 	{	// order heap by repeatedly popping, using _Pred

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2701 : 	for (; 1 < _Last - _First; --_Last)

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00006	2b 4d 08	 sub	 ecx, DWORD PTR __First$[ebp]
  00009	57		 push	 edi
  0000a	8b c1		 mov	 eax, ecx
  0000c	6a 38		 push	 56			; 00000038H
  0000e	99		 cdq
  0000f	5f		 pop	 edi
  00010	f7 ff		 idiv	 edi
  00012	83 f8 01	 cmp	 eax, 1
  00015	7e 29		 jle	 SHORT $LN1@Sort_heap
  00017	8b f9		 mov	 edi, ecx
$LL3@Sort_heap:

; 2702 : 		_Pop_heap(_First, _Last, _Pred);

  00019	6a 00		 push	 0
  0001b	ff 75 10	 push	 DWORD PTR __Pred$[ebp]
  0001e	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00021	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00024	e8 00 00 00 00	 call	 ??$_Pop_heap_0@PAUGuildUser@ioGuildData@@U12@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z ; std::_Pop_heap_0<ioGuildData::GuildUser *,ioGuildData::GuildUser,ioGuildData::GuildUserSort>
  00029	83 c4 10	 add	 esp, 16			; 00000010H
  0002c	83 ef 38	 sub	 edi, 56			; 00000038H
  0002f	8b c7		 mov	 eax, edi
  00031	6a 38		 push	 56			; 00000038H
  00033	99		 cdq
  00034	59		 pop	 ecx
  00035	f7 f9		 idiv	 ecx
  00037	83 6d 0c 38	 sub	 DWORD PTR __Last$[ebp], 56 ; 00000038H
  0003b	83 f8 01	 cmp	 eax, 1
  0003e	7f d9		 jg	 SHORT $LL3@Sort_heap
$LN1@Sort_heap:
  00040	5f		 pop	 edi

; 2703 : 	}

  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
??$_Sort_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z ENDP ; std::_Sort_heap<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
_TEXT	ENDS
PUBLIC	?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f8		 cmp	 edi, eax
  0000f	73 27		 jae	 SHORT $LN4@push_back@5
  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	3b cf		 cmp	 ecx, edi
  00015	77 21		 ja	 SHORT $LN4@push_back@5

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	2b f9		 sub	 edi, ecx
  00019	c1 ff 02	 sar	 edi, 2

; 980  : 			if (this->_Mylast == this->_Myend)

  0001c	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0001f	75 09		 jne	 SHORT $LN3@push_back@5

; 981  : 				_Reserve(1);

  00021	6a 01		 push	 1
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve
$LN3@push_back@5:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	85 c0		 test	 eax, eax
  0002f	74 20		 je	 SHORT $LN39@push_back@5
  00031	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00033	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00036	eb 17		 jmp	 SHORT $LN46@push_back@5
$LN4@push_back@5:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00038	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0003b	75 09		 jne	 SHORT $LN1@push_back@5

; 991  : 				_Reserve(1);

  0003d	6a 01		 push	 1
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve
$LN1@push_back@5:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00046	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00049	85 c0		 test	 eax, eax
  0004b	74 04		 je	 SHORT $LN39@push_back@5
  0004d	8b 0f		 mov	 ecx, DWORD PTR [edi]
$LN46@push_back@5:
  0004f	89 08		 mov	 DWORD PTR [eax], ecx
$LN39@push_back@5:

; 996  : 			++this->_Mylast;

  00051	83 46 04 04	 add	 DWORD PTR [esi+4], 4
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 543  : 		{	// construct by copying _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 544  : 		_Tidy();

  00004	33 c0		 xor	 eax, eax

; 545  : 		assign(_Right, 0, npos);

  00006	6a ff		 push	 -1
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR __Right$[ebp]
  0000e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  00015	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00018	88 06		 mov	 BYTE PTR [esi], al
  0001a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 546  : 		}

  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogsp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 929  : 		{	// assign [_Ptr, <null>)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 930  : 		_DEBUG_POINTER(_Ptr);
; 931  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  00009	53		 push	 ebx
$LL5@assign@3:
  0000a	8a 18		 mov	 bl, BYTE PTR [eax]
  0000c	40		 inc	 eax
  0000d	84 db		 test	 bl, bl
  0000f	75 f9		 jne	 SHORT $LL5@assign@3
  00011	2b c2		 sub	 eax, edx
  00013	50		 push	 eax
  00014	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00017	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0001c	5b		 pop	 ebx

; 932  : 		}

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@VGashaponPresent@@@std@@@std@@YAXPAVGashaponPresent@@0AAV?$allocator@VGashaponPresent@@@0@@Z ; std::_Destroy_range<std::allocator<GashaponPresent> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@VGashaponPresent@@@std@@@std@@YAXPAVGashaponPresent@@0AAV?$allocator@VGashaponPresent@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@VGashaponPresent@@@std@@@std@@YAXPAVGashaponPresent@@0AAV?$allocator@VGashaponPresent@@@0@@Z PROC ; std::_Destroy_range<std::allocator<GashaponPresent> >, COMDAT

; 87   : 	{	// destroy [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0a		 jmp	 SHORT $LN21@Destroy_ra@6
$LL7@Destroy_ra@6:
  00009	8b ce		 mov	 ecx, esi
  0000b	e8 00 00 00 00	 call	 ??1GashaponPresent@@QAE@XZ ; GashaponPresent::~GashaponPresent
  00010	83 c6 14	 add	 esi, 20			; 00000014H
$LN21@Destroy_ra@6:
  00013	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00016	75 f1		 jne	 SHORT $LL7@Destroy_ra@6
  00018	5e		 pop	 esi

; 89   : 	}

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??$_Destroy_range@V?$allocator@VGashaponPresent@@@std@@@std@@YAXPAVGashaponPresent@@0AAV?$allocator@VGashaponPresent@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<GashaponPresent> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
; Function compile flags: /Ogsp
;	COMDAT ?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 213  : 		_Destroy(_Ptr);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	6a 00		 push	 0
  00008	6a 01		 push	 1
  0000a	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 214  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
_TEXT	ENDS
PUBLIC	?ApplyEntryDelayGuildList@ioGuildInfo@@QAEXAAVSP2Packet@@@Z ; ioGuildInfo::ApplyEntryDelayGuildList
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
;	COMDAT ?ApplyEntryDelayGuildList@ioGuildInfo@@QAEXAAVSP2Packet@@@Z
_TEXT	SEGMENT
$T527293 = -8						; size = 4
_dwGuildIndex$509432 = -8				; size = 4
_iMaxList$ = -4						; size = 4
_rkPacket$ = 8						; size = 4
?ApplyEntryDelayGuildList@ioGuildInfo@@QAEXAAVSP2Packet@@@Z PROC ; ioGuildInfo::ApplyEntryDelayGuildList, COMDAT
; _this$ = ecx

; 971  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi

; 972  : 	m_dwEntryDelayGuildList.clear();

  00006	8d b1 80 00 00
	00		 lea	 esi, DWORD PTR [ecx+128]
  0000c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00011	57		 push	 edi
  00012	50		 push	 eax
  00013	51		 push	 ecx
  00014	8d 45 f8	 lea	 eax, DWORD PTR $T527293[ebp]
  00017	50		 push	 eax
  00018	8b ce		 mov	 ecx, esi
  0001a	e8 00 00 00 00	 call	 ?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::erase

; 973  : 	int iMaxList;
; 974  : 	rkPacket >> iMaxList;

  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  00022	8d 45 fc	 lea	 eax, DWORD PTR _iMaxList$[ebp]
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>

; 975  : 	for(int i = 0;i < iMaxList;i++)

  0002b	33 ff		 xor	 edi, edi
  0002d	39 7d fc	 cmp	 DWORD PTR _iMaxList$[ebp], edi
  00030	7e 1d		 jle	 SHORT $LN1@ApplyEntry
$LL3@ApplyEntry:

; 976  : 	{
; 977  : 		DWORD dwGuildIndex;
; 978  : 		rkPacket >> dwGuildIndex;

  00032	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  00035	8d 45 f8	 lea	 eax, DWORD PTR _dwGuildIndex$509432[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>

; 979  : 		m_dwEntryDelayGuildList.push_back( dwGuildIndex );

  0003e	8d 45 f8	 lea	 eax, DWORD PTR _dwGuildIndex$509432[ebp]
  00041	50		 push	 eax
  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back
  00049	47		 inc	 edi
  0004a	3b 7d fc	 cmp	 edi, DWORD PTR _iMaxList$[ebp]
  0004d	7c e3		 jl	 SHORT $LL3@ApplyEntry
$LN1@ApplyEntry:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 980  : 	}
; 981  : }

  00051	c9		 leave
  00052	c2 04 00	 ret	 4
?ApplyEntryDelayGuildList@ioGuildInfo@@QAEXAAVSP2Packet@@@Z ENDP ; ioGuildInfo::ApplyEntryDelayGuildList
_TEXT	ENDS
PUBLIC	?AddEntryDelayGuildList@ioGuildInfo@@QAEXK@Z	; ioGuildInfo::AddEntryDelayGuildList
; Function compile flags: /Ogsp
;	COMDAT ?AddEntryDelayGuildList@ioGuildInfo@@QAEXK@Z
_TEXT	SEGMENT
_dwGuildIndex$ = 8					; size = 4
?AddEntryDelayGuildList@ioGuildInfo@@QAEXK@Z PROC	; ioGuildInfo::AddEntryDelayGuildList, COMDAT
; _this$ = ecx

; 984  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 985  : 	m_dwEntryDelayGuildList.push_back( dwGuildIndex );

  00003	8d 45 08	 lea	 eax, DWORD PTR _dwGuildIndex$[ebp]
  00006	50		 push	 eax
  00007	83 e9 80	 sub	 ecx, -128		; ffffff80H
  0000a	e8 00 00 00 00	 call	 ?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back

; 986  : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?AddEntryDelayGuildList@ioGuildInfo@@QAEXK@Z ENDP	; ioGuildInfo::AddEntryDelayGuildList
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEXPAUGuildUser@ioGuildData@@0@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEXPAUGuildUser@ioGuildData@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEXPAUGuildUser@ioGuildData@@0@Z PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Destroy, COMDAT
; _this$ = ecx

; 1269 : 		{	// destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0a		 jmp	 SHORT $LN23@Destroy
$LL9@Destroy:
  00009	8b ce		 mov	 ecx, esi
  0000b	e8 00 00 00 00	 call	 ??1GuildUser@ioGuildData@@QAE@XZ
  00010	83 c6 38	 add	 esi, 56			; 00000038H
$LN23@Destroy:
  00013	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00016	75 f1		 jne	 SHORT $LL9@Destroy
  00018	5e		 pop	 esi

; 1271 : 		}

  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?_Destroy@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEXPAUGuildUser@ioGuildData@@0@Z ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEXXZ ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Tidy
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEXXZ PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 27		 je	 SHORT $LN24@Tidy@6

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	53		 push	 ebx
  00009	57		 push	 edi
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);

  00010	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
  00015	eb 0a		 jmp	 SHORT $LN28@Tidy@6
$LL12@Tidy@6:
  00017	8b cf		 mov	 ecx, edi
  00019	e8 00 00 00 00	 call	 ??1GuildUser@ioGuildData@@QAE@XZ
  0001e	83 c7 38	 add	 edi, 56			; 00000038H
$LN28@Tidy@6:
  00021	3b fb		 cmp	 edi, ebx
  00023	75 f2		 jne	 SHORT $LL12@Tidy@6

; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  00025	ff 36		 push	 DWORD PTR [esi]
  00027	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002c	59		 pop	 ecx
  0002d	5f		 pop	 edi
  0002e	5b		 pop	 ebx
$LN24@Tidy@6:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  0002f	33 c0		 xor	 eax, eax
  00031	89 06		 mov	 DWORD PTR [esi], eax

; 1310 : 		this->_Mylast = 0;

  00033	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1311 : 		this->_Myend = 0;

  00036	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00039	5e		 pop	 esi

; 1312 : 		}

  0003a	c3		 ret	 0
?_Tidy@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEXXZ ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEXPAUInvitationUser@ioGuildInfo@@0@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEXPAUInvitationUser@ioGuildInfo@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEXPAUInvitationUser@ioGuildInfo@@0@Z PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Destroy, COMDAT
; _this$ = ecx

; 1269 : 		{	// destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0b		 jmp	 SHORT $LN26@Destroy@2
$LL9@Destroy@2:
  00009	8b ce		 mov	 ecx, esi
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00011	83 c6 14	 add	 esi, 20			; 00000014H
$LN26@Destroy@2:
  00014	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00017	75 f0		 jne	 SHORT $LL9@Destroy@2
  00019	5e		 pop	 esi

; 1271 : 		}

  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
?_Destroy@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEXPAUInvitationUser@ioGuildInfo@@0@Z ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEXXZ ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Tidy
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEXXZ PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 28		 je	 SHORT $LN27@Tidy@7

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	53		 push	 ebx
  00009	57		 push	 edi
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);

  00010	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
  00015	eb 0b		 jmp	 SHORT $LN31@Tidy@7
$LL12@Tidy@7:
  00017	8b cf		 mov	 ecx, edi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  0001f	83 c7 14	 add	 edi, 20			; 00000014H
$LN31@Tidy@7:
  00022	3b fb		 cmp	 edi, ebx
  00024	75 f1		 jne	 SHORT $LL12@Tidy@7

; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  00026	ff 36		 push	 DWORD PTR [esi]
  00028	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002d	59		 pop	 ecx
  0002e	5f		 pop	 edi
  0002f	5b		 pop	 ebx
$LN27@Tidy@7:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00030	33 c0		 xor	 eax, eax
  00032	89 06		 mov	 DWORD PTR [esi], eax

; 1310 : 		this->_Mylast = 0;

  00034	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1311 : 		this->_Myend = 0;

  00037	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0003a	5e		 pop	 esi

; 1312 : 		}

  0003b	c3		 ret	 0
?_Tidy@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEXXZ ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Tidy
_TEXT	ENDS
PUBLIC	?reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXI@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::reserve
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Ptr$511911 = -24					; size = 4
$T527804 = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXI@Z PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	6a 0c		 push	 12			; 0000000cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXI@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx

; 747  : 		if (max_size() < _Count)

  0000e	81 7d 08 24 49
	92 04		 cmp	 DWORD PTR __Count$[ebp], 76695844 ; 04924924H
  00015	76 0b		 jbe	 SHORT $LN5@reserve@5

; 748  : 			_Xlen();	// result too long

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN59@reserve@5:
$LN5@reserve@5:

; 749  : 		else if (capacity() < _Count)

  00022	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00025	2b 06		 sub	 eax, DWORD PTR [esi]
  00027	6a 38		 push	 56			; 00000038H
  00029	99		 cdq
  0002a	59		 pop	 ecx
  0002b	f7 f9		 idiv	 ecx
  0002d	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00030	0f 83 80 00 00
	00		 jae	 $LN3@reserve@5

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00036	6a 00		 push	 0
  00038	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  0003b	e8 00 00 00 00	 call	 ??$_Allocate@UGuildUser@ioGuildData@@@std@@YAPAUGuildUser@ioGuildData@@IPAU12@@Z ; std::_Allocate<ioGuildData::GuildUser>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00040	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00042	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00046	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00049	52		 push	 edx
  0004a	89 45 e8	 mov	 DWORD PTR __Ptr$511911[ebp], eax
  0004d	ff 75 e8	 push	 DWORD PTR __Ptr$511911[ebp]
  00050	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00053	50		 push	 eax
  00054	51		 push	 ecx
  00055	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUGuildUser@ioGuildData@@PAU12@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00AAV?$allocator@UGuildUser@ioGuildData@@@0@@Z ; std::_Uninitialized_move<ioGuildData::GuildUser *,ioGuildData::GuildUser *,std::allocator<ioGuildData::GuildUser> >

; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  0005a	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  0005d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005f	83 c4 18	 add	 esp, 24			; 00000018H
  00062	8b c3		 mov	 eax, ebx
  00064	2b c1		 sub	 eax, ecx
  00066	6a 38		 push	 56			; 00000038H
  00068	99		 cdq
  00069	5f		 pop	 edi
  0006a	f7 ff		 idiv	 edi
  0006c	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  00070	8b f8		 mov	 edi, eax
  00072	85 c9		 test	 ecx, ecx
  00074	74 20		 je	 SHORT $LN51@reserve@5

; 761  : 			if (this->_Myfirst != 0)
; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);

  00076	89 4d ec	 mov	 DWORD PTR $T527804[ebp], ecx
  00079	3b cb		 cmp	 ecx, ebx
  0007b	74 11		 je	 SHORT $LN37@reserve@5
$LN39@reserve@5:
  0007d	8b 4d ec	 mov	 ecx, DWORD PTR $T527804[ebp]
  00080	e8 00 00 00 00	 call	 ??1GuildUser@ioGuildData@@QAE@XZ
  00085	83 45 ec 38	 add	 DWORD PTR $T527804[ebp], 56 ; 00000038H
  00089	39 5d ec	 cmp	 DWORD PTR $T527804[ebp], ebx
  0008c	75 ef		 jne	 SHORT $LN39@reserve@5
$LN37@reserve@5:

; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  0008e	ff 36		 push	 DWORD PTR [esi]
  00090	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00095	59		 pop	 ecx
$LN51@reserve@5:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  00096	8b ce		 mov	 ecx, esi
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;
; 770  : 			this->_Mylast = _Ptr + _Size;

  0009e	6b ff 38	 imul	 edi, 56			; 00000038H
  000a1	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  000a4	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$511911[ebp]
  000a7	6b c0 38	 imul	 eax, 56			; 00000038H
  000aa	03 c1		 add	 eax, ecx
  000ac	03 f9		 add	 edi, ecx
  000ae	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000b1	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 771  : 			this->_Myfirst = _Ptr;

  000b4	89 0e		 mov	 DWORD PTR [esi], ecx
$LN3@reserve@5:

; 772  : 			}
; 773  : 		}

  000b6	e8 00 00 00 00	 call	 __EH_epilog3
  000bb	c2 04 00	 ret	 4
__catch$?reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXI@Z$0:

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

  000be	ff 75 e8	 push	 DWORD PTR __Ptr$511911[ebp]
  000c1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000c6	59		 pop	 ecx

; 757  : 			_RERAISE;

  000c7	6a 00		 push	 0
  000c9	6a 00		 push	 0
  000cb	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN60@reserve@5:
$LN58@reserve@5:
  000d0	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXI@Z ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::reserve
PUBLIC	?reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXI@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::reserve
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXI@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXI@Z$3
__ehfuncinfo$?reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Ptr$511981 = -24					; size = 4
$T527976 = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXI@Z PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	6a 0c		 push	 12			; 0000000cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXI@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx

; 747  : 		if (max_size() < _Count)

  0000e	81 7d 08 cc cc
	cc 0c		 cmp	 DWORD PTR __Count$[ebp], 214748364 ; 0cccccccH
  00015	76 0b		 jbe	 SHORT $LN5@reserve@6

; 748  : 			_Xlen();	// result too long

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN62@reserve@6:
$LN5@reserve@6:

; 749  : 		else if (capacity() < _Count)

  00022	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00025	2b 06		 sub	 eax, DWORD PTR [esi]
  00027	6a 14		 push	 20			; 00000014H
  00029	99		 cdq
  0002a	59		 pop	 ecx
  0002b	f7 f9		 idiv	 ecx
  0002d	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00030	0f 83 81 00 00
	00		 jae	 $LN3@reserve@6

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00036	6a 00		 push	 0
  00038	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  0003b	e8 00 00 00 00	 call	 ??$_Allocate@UInvitationUser@ioGuildInfo@@@std@@YAPAUInvitationUser@ioGuildInfo@@IPAU12@@Z ; std::_Allocate<ioGuildInfo::InvitationUser>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00040	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00042	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00046	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00049	52		 push	 edx
  0004a	89 45 e8	 mov	 DWORD PTR __Ptr$511981[ebp], eax
  0004d	ff 75 e8	 push	 DWORD PTR __Ptr$511981[ebp]
  00050	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00053	50		 push	 eax
  00054	51		 push	 ecx
  00055	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUInvitationUser@ioGuildInfo@@PAU12@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00AAV?$allocator@UInvitationUser@ioGuildInfo@@@0@@Z ; std::_Uninitialized_move<ioGuildInfo::InvitationUser *,ioGuildInfo::InvitationUser *,std::allocator<ioGuildInfo::InvitationUser> >

; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  0005a	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  0005d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005f	83 c4 18	 add	 esp, 24			; 00000018H
  00062	8b c3		 mov	 eax, ebx
  00064	2b c1		 sub	 eax, ecx
  00066	6a 14		 push	 20			; 00000014H
  00068	99		 cdq
  00069	5f		 pop	 edi
  0006a	f7 ff		 idiv	 edi
  0006c	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  00070	8b f8		 mov	 edi, eax
  00072	85 c9		 test	 ecx, ecx
  00074	74 21		 je	 SHORT $LN54@reserve@6

; 761  : 			if (this->_Myfirst != 0)
; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);

  00076	89 4d ec	 mov	 DWORD PTR $T527976[ebp], ecx
  00079	3b cb		 cmp	 ecx, ebx
  0007b	74 12		 je	 SHORT $LN37@reserve@6
$LN39@reserve@6:
  0007d	8b 4d ec	 mov	 ecx, DWORD PTR $T527976[ebp]
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00086	83 45 ec 14	 add	 DWORD PTR $T527976[ebp], 20 ; 00000014H
  0008a	39 5d ec	 cmp	 DWORD PTR $T527976[ebp], ebx
  0008d	75 ee		 jne	 SHORT $LN39@reserve@6
$LN37@reserve@6:

; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  0008f	ff 36		 push	 DWORD PTR [esi]
  00091	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00096	59		 pop	 ecx
$LN54@reserve@6:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  00097	8b ce		 mov	 ecx, esi
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;
; 770  : 			this->_Mylast = _Ptr + _Size;

  0009f	6b ff 14	 imul	 edi, 20			; 00000014H
  000a2	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  000a5	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$511981[ebp]
  000a8	6b c0 14	 imul	 eax, 20			; 00000014H
  000ab	03 c1		 add	 eax, ecx
  000ad	03 f9		 add	 edi, ecx
  000af	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000b2	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 771  : 			this->_Myfirst = _Ptr;

  000b5	89 0e		 mov	 DWORD PTR [esi], ecx
$LN3@reserve@6:

; 772  : 			}
; 773  : 		}

  000b7	e8 00 00 00 00	 call	 __EH_epilog3
  000bc	c2 04 00	 ret	 4
__catch$?reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXI@Z$0:

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

  000bf	ff 75 e8	 push	 DWORD PTR __Ptr$511981[ebp]
  000c2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000c7	59		 pop	 ecx

; 757  : 			_RERAISE;

  000c8	6a 00		 push	 0
  000ca	6a 00		 push	 0
  000cc	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN63@reserve@6:
$LN61@reserve@6:
  000d1	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXI@Z ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::reserve
PUBLIC	??$_Ucopy@PAVGashaponPresent@@@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEPAVGashaponPresent@@PAV2@00@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Ucopy<GashaponPresent *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Ucopy@PAVGashaponPresent@@@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEPAVGashaponPresent@@PAV2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$528056 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Ucopy@PAVGashaponPresent@@@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEPAVGashaponPresent@@PAV2@00@Z PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Ucopy<GashaponPresent *>, COMDAT
; _this$ = ecx

; 1315 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1316 : 		{	// copy initializing [_First, _Last), using allocator
; 1317 : 		return (_Uninitialized_copy(_First, _Last,
; 1318 : 			_Ptr, this->_Alval));

  00003	ff 75 10	 push	 DWORD PTR __Cat$528056[ebp]
  00006	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00009	51		 push	 ecx
  0000a	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00010	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00013	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent> >
  00018	83 c4 14	 add	 esp, 20			; 00000014H

; 1319 : 		}

  0001b	5d		 pop	 ebp
  0001c	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@PAVGashaponPresent@@@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEPAVGashaponPresent@@PAV2@00@Z ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Ucopy<GashaponPresent *>
_TEXT	ENDS
PUBLIC	??$sort_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z ; std::sort_heap<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
;	COMDAT ??$sort_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
??$sort_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z PROC ; std::sort_heap<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>, COMDAT

; 2708 : 	{	// order heap by repeatedly popping, using _Pred

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2709 : 	_DEBUG_RANGE(_First, _Last);
; 2710 : 	_DEBUG_POINTER(_Pred);
; 2711 : 	_DEBUG_HEAP_PRED(_First, _Last, _Pred);
; 2712 : 	_Sort_heap(_Unchecked(_First), _Unchecked(_Last), _Pred);

  00003	ff 75 10	 push	 DWORD PTR __Pred$[ebp]
  00006	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00009	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000c	e8 00 00 00 00	 call	 ??$_Sort_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z ; std::_Sort_heap<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
  00011	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2713 : 	}

  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??$sort_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z ENDP ; std::sort_heap<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
_TEXT	ENDS
PUBLIC	??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z$0
__ehfuncinfo$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
_TEXT	SEGMENT
$T528070 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$ = 8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z PROC ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 47   : 	void _FARQ *_Vptr = _Ptr;

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0000f	89 4d 08	 mov	 DWORD PTR __Vptr$[ebp], ecx

; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00012	89 4d f0	 mov	 DWORD PTR $T528070[ebp], ecx
  00015	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00019	85 c9		 test	 ecx, ecx
  0001b	74 08		 je	 SHORT $LN3@Construct@7
  0001d	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  00020	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN3@Construct@7:

; 49   : 	}

  00025	e8 00 00 00 00	 call	 __EH_epilog3
  0002a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Vptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T528070[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ENDP ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 592  : 		{	// construct from [_Ptr, <null>)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 593  : 		_Tidy();
; 594  : 		assign(_Ptr);

  00004	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	83 66 10 00	 and	 DWORD PTR [esi+16], 0
  0000d	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  00014	c6 06 00	 mov	 BYTE PTR [esi], 0
  00017	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 595  : 		}

  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXPAVGashaponPresent@@0@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXPAVGashaponPresent@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXPAVGashaponPresent@@0@Z PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Destroy, COMDAT
; _this$ = ecx

; 1269 : 		{	// destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0a		 jmp	 SHORT $LN23@Destroy@3
$LL9@Destroy@3:
  00009	8b ce		 mov	 ecx, esi
  0000b	e8 00 00 00 00	 call	 ??1GashaponPresent@@QAE@XZ ; GashaponPresent::~GashaponPresent
  00010	83 c6 14	 add	 esi, 20			; 00000014H
$LN23@Destroy@3:
  00013	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00016	75 f1		 jne	 SHORT $LL9@Destroy@3
  00018	5e		 pop	 esi

; 1271 : 		}

  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?_Destroy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXPAVGashaponPresent@@0@Z ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Destroy
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 286  : 	{	// destroy using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  00006	6a 00		 push	 0
  00008	6a 01		 push	 1
  0000a	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 288  : 	}

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??1?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE@XZ ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::~vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE@XZ PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::~vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEXXZ ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Tidy
??1?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::~vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >
_TEXT	ENDS
PUBLIC	?erase@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cat$528286 = 12					; size = 1
__Where$ = 12						; size = 4
?erase@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@@Z PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::erase, COMDAT
; _this$ = ecx

; 1179 : 		{	// erase element at where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1180 : 		_Move(_VIPTR(_Where) + 1, this->_Mylast,
; 1181 : 			_VIPTR(_Where));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	ff 75 0c	 push	 DWORD PTR __Cat$528286[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	50		 push	 eax
  0000f	ff 76 04	 push	 DWORD PTR [esi+4]
  00012	83 c0 38	 add	 eax, 56			; 00000038H
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??$_Move@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioGuildData::GuildUser *,ioGuildData::GuildUser *>

; 1182 : 		_Destroy(this->_Mylast - 1, this->_Mylast);

  0001b	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	8d 5f c8	 lea	 ebx, DWORD PTR [edi-56]
  00024	eb 0a		 jmp	 SHORT $LN37@erase@6
$LL15@erase@6:
  00026	8b cb		 mov	 ecx, ebx
  00028	e8 00 00 00 00	 call	 ??1GuildUser@ioGuildData@@QAE@XZ
  0002d	83 c3 38	 add	 ebx, 56			; 00000038H
$LN37@erase@6:
  00030	3b df		 cmp	 ebx, edi
  00032	75 f2		 jne	 SHORT $LL15@erase@6

; 1183 : 		--this->_Mylast;

  00034	83 46 04 c8	 add	 DWORD PTR [esi+4], -56	; ffffffc8H

; 1184 : 		return (_Make_iter(_Where));

  00038	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	89 08		 mov	 DWORD PTR [eax], ecx
  00042	5b		 pop	 ebx

; 1185 : 		}

  00043	5d		 pop	 ebp
  00044	c2 08 00	 ret	 8
?erase@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@@Z ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::erase
_TEXT	ENDS
PUBLIC	??1?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE@XZ ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::~vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE@XZ PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::~vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEXXZ ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Tidy
??1?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::~vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >
_TEXT	ENDS
PUBLIC	?erase@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cat$528429 = 12					; size = 1
__Where$ = 12						; size = 4
?erase@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@@Z PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::erase, COMDAT
; _this$ = ecx

; 1179 : 		{	// erase element at where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1180 : 		_Move(_VIPTR(_Where) + 1, this->_Mylast,
; 1181 : 			_VIPTR(_Where));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	ff 75 0c	 push	 DWORD PTR __Cat$528429[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	50		 push	 eax
  0000f	ff 76 04	 push	 DWORD PTR [esi+4]
  00012	83 c0 14	 add	 eax, 20			; 00000014H
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??$_Move@PAUInvitationUser@ioGuildInfo@@PAU12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioGuildInfo::InvitationUser *,ioGuildInfo::InvitationUser *>

; 1182 : 		_Destroy(this->_Mylast - 1, this->_Mylast);

  0001b	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	8d 5f ec	 lea	 ebx, DWORD PTR [edi-20]
  00024	eb 0b		 jmp	 SHORT $LN40@erase@7
$LL15@erase@7:
  00026	8b cb		 mov	 ecx, ebx
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  0002e	83 c3 14	 add	 ebx, 20			; 00000014H
$LN40@erase@7:
  00031	3b df		 cmp	 ebx, edi
  00033	75 f1		 jne	 SHORT $LL15@erase@7

; 1183 : 		--this->_Mylast;

  00035	83 46 04 ec	 add	 DWORD PTR [esi+4], -20	; ffffffecH

; 1184 : 		return (_Make_iter(_Where));

  00039	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003c	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	89 08		 mov	 DWORD PTR [eax], ecx
  00043	5b		 pop	 ebx

; 1185 : 		}

  00044	5d		 pop	 ebp
  00045	c2 08 00	 ret	 8
?erase@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@@Z ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@0@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T528702 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$528647 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@0@Z PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00004	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __First_arg$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 4d 10	 cmp	 ecx, DWORD PTR __Last_arg$[ebp]
  00012	74 37		 je	 SHORT $LN1@erase@8

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00017	53		 push	 ebx
  00018	57		 push	 edi
  00019	ff 75 10	 push	 DWORD PTR __Cat$528647[ebp]
  0001c	51		 push	 ecx
  0001d	50		 push	 eax
  0001e	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  00021	e8 00 00 00 00	 call	 ??$_Move@PAUGuildUser@ioGuildData@@PAU12@@std@@YAPAUGuildUser@ioGuildData@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioGuildData::GuildUser *,ioGuildData::GuildUser *>

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);

  00026	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  00029	8b d8		 mov	 ebx, eax
  0002b	83 c4 10	 add	 esp, 16			; 00000010H
  0002e	89 5d fc	 mov	 DWORD PTR $T528702[ebp], ebx
  00031	3b df		 cmp	 ebx, edi
  00033	74 11		 je	 SHORT $LN36@erase@8
$LL52@erase@8:
  00035	8b 4d fc	 mov	 ecx, DWORD PTR $T528702[ebp]
  00038	e8 00 00 00 00	 call	 ??1GuildUser@ioGuildData@@QAE@XZ
  0003d	83 45 fc 38	 add	 DWORD PTR $T528702[ebp], 56 ; 00000038H
  00041	39 7d fc	 cmp	 DWORD PTR $T528702[ebp], edi
  00044	75 ef		 jne	 SHORT $LL52@erase@8
$LN36@erase@8:

; 1211 : 			this->_Mylast = _Ptr;

  00046	5f		 pop	 edi
  00047	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  0004a	5b		 pop	 ebx
$LN1@erase@8:

; 1212 : 			}
; 1213 : 		return (_First);

  0004b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0004e	5e		 pop	 esi

; 1214 : 		}

  0004f	c9		 leave
  00050	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@0@Z ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::erase
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEXI@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEXI@Z PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx
  0000d	57		 push	 edi
  0000e	99		 cdq
  0000f	6a 38		 push	 56			; 00000038H
  00011	5f		 pop	 edi
  00012	f7 ff		 idiv	 edi
  00014	8b f8		 mov	 edi, eax

; 1292 : 		if (max_size() - _Count < _Size)

  00016	b8 24 49 92 04	 mov	 eax, 76695844		; 04924924H
  0001b	2b 45 08	 sub	 eax, DWORD PTR __Count$[ebp]
  0001e	3b c7		 cmp	 eax, edi
  00020	73 0b		 jae	 SHORT $LN4@Reserve@5

; 1293 : 			_Xlen();

  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve@5:
$LN4@Reserve@5:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  0002d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00030	2b c1		 sub	 eax, ecx
  00032	6a 38		 push	 56			; 00000038H
  00034	99		 cdq
  00035	59		 pop	 ecx
  00036	f7 f9		 idiv	 ecx
  00038	03 7d 08	 add	 edi, DWORD PTR __Count$[ebp]
  0003b	3b f8		 cmp	 edi, eax
  0003d	76 10		 jbe	 SHORT $LN1@Reserve@5

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  0003f	57		 push	 edi
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IBEII@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Grow_to
  00047	50		 push	 eax
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXI@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::reserve
$LN1@Reserve@5:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1298 : 		}

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
$LN20@Reserve@5:
?_Reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEXI@Z ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Reserve
_TEXT	ENDS
PUBLIC	?erase@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@0@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T528923 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$528855 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@0@Z PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00004	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __First_arg$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 4d 10	 cmp	 ecx, DWORD PTR __Last_arg$[ebp]
  00012	74 38		 je	 SHORT $LN1@erase@9

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00017	53		 push	 ebx
  00018	57		 push	 edi
  00019	ff 75 10	 push	 DWORD PTR __Cat$528855[ebp]
  0001c	51		 push	 ecx
  0001d	50		 push	 eax
  0001e	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  00021	e8 00 00 00 00	 call	 ??$_Move@PAUInvitationUser@ioGuildInfo@@PAU12@@std@@YAPAUInvitationUser@ioGuildInfo@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioGuildInfo::InvitationUser *,ioGuildInfo::InvitationUser *>

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);

  00026	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  00029	8b d8		 mov	 ebx, eax
  0002b	83 c4 10	 add	 esp, 16			; 00000010H
  0002e	89 5d fc	 mov	 DWORD PTR $T528923[ebp], ebx
  00031	3b df		 cmp	 ebx, edi
  00033	74 12		 je	 SHORT $LN36@erase@9
$LL55@erase@9:
  00035	8b 4d fc	 mov	 ecx, DWORD PTR $T528923[ebp]
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  0003e	83 45 fc 14	 add	 DWORD PTR $T528923[ebp], 20 ; 00000014H
  00042	39 7d fc	 cmp	 DWORD PTR $T528923[ebp], edi
  00045	75 ee		 jne	 SHORT $LL55@erase@9
$LN36@erase@9:

; 1211 : 			this->_Mylast = _Ptr;

  00047	5f		 pop	 edi
  00048	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  0004b	5b		 pop	 ebx
$LN1@erase@9:

; 1212 : 			}
; 1213 : 		return (_First);

  0004c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0004f	5e		 pop	 esi

; 1214 : 		}

  00050	c9		 leave
  00051	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@0@Z ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::erase
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEXI@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEXI@Z PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx
  0000d	57		 push	 edi
  0000e	99		 cdq
  0000f	6a 14		 push	 20			; 00000014H
  00011	5f		 pop	 edi
  00012	f7 ff		 idiv	 edi
  00014	8b f8		 mov	 edi, eax

; 1292 : 		if (max_size() - _Count < _Size)

  00016	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH
  0001b	2b 45 08	 sub	 eax, DWORD PTR __Count$[ebp]
  0001e	3b c7		 cmp	 eax, edi
  00020	73 0b		 jae	 SHORT $LN4@Reserve@6

; 1293 : 			_Xlen();

  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve@6:
$LN4@Reserve@6:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  0002d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00030	2b c1		 sub	 eax, ecx
  00032	6a 14		 push	 20			; 00000014H
  00034	99		 cdq
  00035	59		 pop	 ecx
  00036	f7 f9		 idiv	 ecx
  00038	03 7d 08	 add	 edi, DWORD PTR __Count$[ebp]
  0003b	3b f8		 cmp	 edi, eax
  0003d	76 10		 jbe	 SHORT $LN1@Reserve@6

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  0003f	57		 push	 edi
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IBEII@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Grow_to
  00047	50		 push	 eax
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXI@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::reserve
$LN1@Reserve@6:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1298 : 		}

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
$LN20@Reserve@6:
?_Reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEXI@Z ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Reserve
_TEXT	ENDS
PUBLIC	?erase@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@0@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T529134 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$529079 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@0@Z PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00004	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __First_arg$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 4d 10	 cmp	 ecx, DWORD PTR __Last_arg$[ebp]
  00012	74 37		 je	 SHORT $LN1@erase@10

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00017	53		 push	 ebx
  00018	57		 push	 edi
  00019	ff 75 10	 push	 DWORD PTR __Cat$529079[ebp]
  0001c	51		 push	 ecx
  0001d	50		 push	 eax
  0001e	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  00021	e8 00 00 00 00	 call	 ??$_Move@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<GashaponPresent *,GashaponPresent *>

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);

  00026	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  00029	8b d8		 mov	 ebx, eax
  0002b	83 c4 10	 add	 esp, 16			; 00000010H
  0002e	89 5d fc	 mov	 DWORD PTR $T529134[ebp], ebx
  00031	3b df		 cmp	 ebx, edi
  00033	74 11		 je	 SHORT $LN36@erase@10
$LL52@erase@10:
  00035	8b 4d fc	 mov	 ecx, DWORD PTR $T529134[ebp]
  00038	e8 00 00 00 00	 call	 ??1GashaponPresent@@QAE@XZ ; GashaponPresent::~GashaponPresent
  0003d	83 45 fc 14	 add	 DWORD PTR $T529134[ebp], 20 ; 00000014H
  00041	39 7d fc	 cmp	 DWORD PTR $T529134[ebp], edi
  00044	75 ef		 jne	 SHORT $LL52@erase@10
$LN36@erase@10:

; 1211 : 			this->_Mylast = _Ptr;

  00046	5f		 pop	 edi
  00047	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  0004a	5b		 pop	 ebx
$LN1@erase@10:

; 1212 : 			}
; 1213 : 		return (_First);

  0004b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0004e	5e		 pop	 esi

; 1214 : 		}

  0004f	c9		 leave
  00050	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@0@Z ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::erase
_TEXT	ENDS
PUBLIC	??$_Sort@PAUGuildUser@ioGuildData@@HVGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0HVGuildUserSort@2@@Z ; std::_Sort<ioGuildData::GuildUser *,int,ioGuildData::GuildUserSort>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
;	COMDAT ??$_Sort@PAUGuildUser@ioGuildData@@HVGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0HVGuildUserSort@2@@Z
_TEXT	SEGMENT
__Mid$515552 = -8					; size = 8
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Sort@PAUGuildUser@ioGuildData@@HVGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0HVGuildUserSort@2@@Z PROC ; std::_Sort<ioGuildData::GuildUser *,int,ioGuildData::GuildUserSort>, COMDAT

; 3771 : 	{	// order [_First, _Last), using _Pred

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	53		 push	 ebx

; 3772 : 	_Diff _Count;
; 3773 : 	for (; _ISORT_MAX < (_Count = _Last - _First) && 0 < _Ideal; )

  00006	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  00009	57		 push	 edi
  0000a	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000d	8b c7		 mov	 eax, edi
  0000f	2b c3		 sub	 eax, ebx
  00011	6a 38		 push	 56			; 00000038H
  00013	99		 cdq
  00014	59		 pop	 ecx
  00015	f7 f9		 idiv	 ecx
  00017	83 f8 20	 cmp	 eax, 32			; 00000020H
  0001a	0f 8e 9c 00 00
	00		 jle	 $LN22@Sort
  00020	56		 push	 esi
  00021	8b 75 10	 mov	 esi, DWORD PTR __Ideal$[ebp]
$LL7@Sort:
  00024	85 f6		 test	 esi, esi
  00026	7e 75		 jle	 SHORT $LN6@Sort

; 3774 : 		{	// divide and conquer by quicksort
; 3775 : 		_STD pair<_RanIt, _RanIt> _Mid =
; 3776 : 			_Unguarded_partition(_First, _Last, _Pred);

  00028	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  0002b	8d 45 f8	 lea	 eax, DWORD PTR __Mid$515552[ebp]
  0002e	57		 push	 edi
  0002f	53		 push	 ebx
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??$_Unguarded_partition@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YA?AU?$pair@PAUGuildUser@ioGuildData@@PAU12@@0@PAUGuildUser@ioGuildData@@0VGuildUserSort@3@@Z ; std::_Unguarded_partition<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>

; 3777 : 		_Ideal /= 2, _Ideal += _Ideal / 2;	// allow 1.5 log2(N) divisions

  00036	8b c6		 mov	 eax, esi
  00038	99		 cdq
  00039	2b c2		 sub	 eax, edx
  0003b	d1 f8		 sar	 eax, 1
  0003d	8b f0		 mov	 esi, eax
  0003f	99		 cdq
  00040	2b c2		 sub	 eax, edx
  00042	d1 f8		 sar	 eax, 1
  00044	03 f0		 add	 esi, eax
  00046	83 c4 10	 add	 esp, 16			; 00000010H

; 3778 : 
; 3779 : 		if (_Mid.first - _First < _Last - _Mid.second)

  00049	8b c7		 mov	 eax, edi
  0004b	2b 45 fc	 sub	 eax, DWORD PTR __Mid$515552[ebp+4]
  0004e	6a 38		 push	 56			; 00000038H
  00050	99		 cdq
  00051	59		 pop	 ecx
  00052	f7 f9		 idiv	 ecx
  00054	6a 38		 push	 56			; 00000038H
  00056	8b c8		 mov	 ecx, eax
  00058	8b 45 f8	 mov	 eax, DWORD PTR __Mid$515552[ebp]
  0005b	2b c3		 sub	 eax, ebx
  0005d	5b		 pop	 ebx
  0005e	99		 cdq
  0005f	f7 fb		 idiv	 ebx

; 3780 : 			{	// loop on second half
; 3781 : 			_Sort(_First, _Mid.first, _Ideal, _Pred);

  00061	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00064	56		 push	 esi
  00065	3b c1		 cmp	 eax, ecx
  00067	7d 13		 jge	 SHORT $LN5@Sort
  00069	ff 75 f8	 push	 DWORD PTR __Mid$515552[ebp]
  0006c	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0006f	e8 00 00 00 00	 call	 ??$_Sort@PAUGuildUser@ioGuildData@@HVGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0HVGuildUserSort@2@@Z ; std::_Sort<ioGuildData::GuildUser *,int,ioGuildData::GuildUserSort>

; 3782 : 			_First = _Mid.second;

  00074	8b 5d fc	 mov	 ebx, DWORD PTR __Mid$515552[ebp+4]
  00077	89 5d 08	 mov	 DWORD PTR __First$[ebp], ebx

; 3783 : 			}
; 3784 : 		else

  0007a	eb 0f		 jmp	 SHORT $LN23@Sort
$LN5@Sort:

; 3785 : 			{	// loop on first half
; 3786 : 			_Sort(_Mid.second, _Last, _Ideal, _Pred);

  0007c	57		 push	 edi
  0007d	ff 75 fc	 push	 DWORD PTR __Mid$515552[ebp+4]
  00080	e8 00 00 00 00	 call	 ??$_Sort@PAUGuildUser@ioGuildData@@HVGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0HVGuildUserSort@2@@Z ; std::_Sort<ioGuildData::GuildUser *,int,ioGuildData::GuildUserSort>

; 3787 : 			_Last = _Mid.first;

  00085	8b 7d f8	 mov	 edi, DWORD PTR __Mid$515552[ebp]
  00088	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
$LN23@Sort:

; 3772 : 	_Diff _Count;
; 3773 : 	for (; _ISORT_MAX < (_Count = _Last - _First) && 0 < _Ideal; )

  0008b	83 c4 10	 add	 esp, 16			; 00000010H
  0008e	8b c7		 mov	 eax, edi
  00090	2b c3		 sub	 eax, ebx
  00092	6a 38		 push	 56			; 00000038H
  00094	99		 cdq
  00095	59		 pop	 ecx
  00096	f7 f9		 idiv	 ecx
  00098	83 f8 20	 cmp	 eax, 32			; 00000020H
  0009b	7f 87		 jg	 SHORT $LL7@Sort
$LN6@Sort:
  0009d	5e		 pop	 esi

; 3788 : 			}
; 3789 : 		}
; 3790 : 
; 3791 : 	if (_ISORT_MAX < _Count)

  0009e	83 f8 20	 cmp	 eax, 32			; 00000020H
  000a1	7e 19		 jle	 SHORT $LN22@Sort

; 3792 : 		{	// heap sort if too many divisions
; 3793 : 		_STD make_heap(_First, _Last, _Pred);

  000a3	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  000a6	57		 push	 edi
  000a7	53		 push	 ebx
  000a8	e8 00 00 00 00	 call	 ??$make_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z ; std::make_heap<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>

; 3794 : 		_STD sort_heap(_First, _Last, _Pred);

  000ad	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  000b0	57		 push	 edi
  000b1	53		 push	 ebx
  000b2	e8 00 00 00 00	 call	 ??$_Sort_heap@PAUGuildUser@ioGuildData@@VGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@@Z ; std::_Sort_heap<ioGuildData::GuildUser *,ioGuildData::GuildUserSort>
  000b7	83 c4 18	 add	 esp, 24			; 00000018H
  000ba	eb 14		 jmp	 SHORT $LN16@Sort
$LN22@Sort:

; 3795 : 		}
; 3796 : 	else if (1 < _Count)

  000bc	83 f8 01	 cmp	 eax, 1
  000bf	7e 0f		 jle	 SHORT $LN16@Sort

; 3797 : 		_Insertion_sort(_First, _Last, _Pred);	// small

  000c1	6a 00		 push	 0
  000c3	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  000c6	57		 push	 edi
  000c7	53		 push	 ebx
  000c8	e8 00 00 00 00	 call	 ??$_Insertion_sort1@PAUGuildUser@ioGuildData@@VGuildUserSort@2@U12@@std@@YAXPAUGuildUser@ioGuildData@@0VGuildUserSort@2@0@Z ; std::_Insertion_sort1<ioGuildData::GuildUser *,ioGuildData::GuildUserSort,ioGuildData::GuildUser>
  000cd	83 c4 10	 add	 esp, 16			; 00000010H
$LN16@Sort:
  000d0	5f		 pop	 edi
  000d1	5b		 pop	 ebx

; 3798 : 	}

  000d2	c9		 leave
  000d3	c3		 ret	 0
??$_Sort@PAUGuildUser@ioGuildData@@HVGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0HVGuildUserSort@2@@Z ENDP ; std::_Sort<ioGuildData::GuildUser *,int,ioGuildData::GuildUserSort>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  00006	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00009	e8 00 00 00 00	 call	 ??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  0000e	59		 pop	 ecx
  0000f	59		 pop	 ecx

; 198  : 		}

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 27		 je	 SHORT $LN24@Tidy@8

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	53		 push	 ebx
  00009	57		 push	 edi
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);

  00010	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
  00015	eb 0a		 jmp	 SHORT $LN28@Tidy@8
$LL12@Tidy@8:
  00017	8b cf		 mov	 ecx, edi
  00019	e8 00 00 00 00	 call	 ??1GashaponPresent@@QAE@XZ ; GashaponPresent::~GashaponPresent
  0001e	83 c7 14	 add	 edi, 20			; 00000014H
$LN28@Tidy@8:
  00021	3b fb		 cmp	 edi, ebx
  00023	75 f2		 jne	 SHORT $LL12@Tidy@8

; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  00025	ff 36		 push	 DWORD PTR [esi]
  00027	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002c	59		 pop	 ecx
  0002d	5f		 pop	 edi
  0002e	5b		 pop	 ebx
$LN24@Tidy@8:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  0002f	33 c0		 xor	 eax, eax
  00031	89 06		 mov	 DWORD PTR [esi], eax

; 1310 : 		this->_Mylast = 0;

  00033	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1311 : 		this->_Myend = 0;

  00036	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00039	5e		 pop	 esi

; 1312 : 		}

  0003a	c3		 ret	 0
?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 95   : 	{	// destroy [_First, _Last), arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 96   : 	for (; _First != _Last; ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0e		 jmp	 SHORT $LN21@Destroy_ra@7
$LL3@Destroy_ra@7:

; 97   : 		_Dest_val(_Al, _First);

  00009	6a 00		 push	 0
  0000b	6a 01		 push	 1
  0000d	8b ce		 mov	 ecx, esi
  0000f	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  00014	83 c6 1c	 add	 esi, 28			; 0000001cH
$LN21@Destroy_ra@7:

; 96   : 	for (; _First != _Last; ++_First)

  00017	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  0001a	75 ed		 jne	 SHORT $LL3@Destroy_ra@7
  0001c	5e		 pop	 esi

; 98   : 	}

  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	__real@4f800000
PUBLIC	??_7ioGuildData@@6B@				; ioGuildData::`vftable'
PUBLIC	??0ioGuildData@@IAE@XZ				; ioGuildData::ioGuildData
PUBLIC	??_R4ioGuildData@@6B@				; ioGuildData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioGuildData@@@8				; ioGuildData `RTTI Type Descriptor'
PUBLIC	??_R3ioGuildData@@8				; ioGuildData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioGuildData@@8				; ioGuildData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioGuildData@@8			; ioGuildData::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_EioGuildData@@MAEPAXI@Z:PROC			; ioGuildData::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@ioGuildData@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
rdata$r	SEGMENT
??_R1A@?0A@EA@ioGuildData@@8 DD FLAT:??_R0?AVioGuildData@@@8 ; ioGuildData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioGuildData@@8
rdata$r	ENDS
;	COMDAT ??_R2ioGuildData@@8
rdata$r	SEGMENT
??_R2ioGuildData@@8 DD FLAT:??_R1A@?0A@EA@ioGuildData@@8 ; ioGuildData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioGuildData@@8
rdata$r	SEGMENT
??_R3ioGuildData@@8 DD 00H				; ioGuildData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioGuildData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioGuildData@@@8
_DATA	SEGMENT
??_R0?AVioGuildData@@@8 DD FLAT:??_7type_info@@6B@	; ioGuildData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioGuildData@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioGuildData@@6B@
rdata$r	SEGMENT
??_R4ioGuildData@@6B@ DD 00H				; ioGuildData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioGuildData@@@8
	DD	FLAT:??_R3ioGuildData@@8
rdata$r	ENDS
;	COMDAT __real@4f800000
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
CONST	ENDS
;	COMDAT ??_7ioGuildData@@6B@
CONST	SEGMENT
??_7ioGuildData@@6B@ DD FLAT:??_R4ioGuildData@@6B@	; ioGuildData::`vftable'
	DD	FLAT:??_EioGuildData@@MAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ioGuildData@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioGuildData@@IAE@XZ$0
__ehfuncinfo$??0ioGuildData@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ioGuildData@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ??0ioGuildData@@IAE@XZ
_TEXT	SEGMENT
tv260 = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ioGuildData@@IAE@XZ PROC				; ioGuildData::ioGuildData, COMDAT
; _this$ = ecx

; 11   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioGuildData@@IAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??0ioHashString@@QAE@XZ
  00017	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  0001a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioGuildData@@6B@
  00020	ff d7		 call	 edi
  00022	33 db		 xor	 ebx, ebx
  00024	8d 4e 3c	 lea	 ecx, DWORD PTR [esi+60]
  00027	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  0002a	ff d7		 call	 edi
  0002c	89 5e 58	 mov	 DWORD PTR [esi+88], ebx
  0002f	89 5e 5c	 mov	 DWORD PTR [esi+92], ebx
  00032	89 5e 60	 mov	 DWORD PTR [esi+96], ebx

; 12   : 	m_dwGuildIndex					= 0;

  00035	89 5e 04	 mov	 DWORD PTR [esi+4], ebx

; 13   : 	m_dwGuildMark					= 0;

  00038	89 5e 08	 mov	 DWORD PTR [esi+8], ebx

; 14   : 	m_dwGuildRank					= 0;

  0003b	89 5e 0c	 mov	 DWORD PTR [esi+12], ebx

; 15   : 	m_dwGuildLevel					= 0;

  0003e	89 5e 10	 mov	 DWORD PTR [esi+16], ebx

; 16   : 	m_dwGuildJoinUser				= 0;

  00041	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 17   : 	m_dwGuildMaxUser				= 0;

  00044	89 5e 18	 mov	 DWORD PTR [esi+24], ebx

; 18   : 	m_dwGuildPoint					= 0;

  00047	89 5e 1c	 mov	 DWORD PTR [esi+28], ebx

; 19   : 	m_dwCurGuildPoint				= 0;

  0004a	89 5e 20	 mov	 DWORD PTR [esi+32], ebx

; 20   : 	m_dwGuildRegDate				= 0;	

  0004d	89 5e 24	 mov	 DWORD PTR [esi+36], ebx

; 21   : 	m_dwSyncTime					= 0;

  00050	89 5e 68	 mov	 DWORD PTR [esi+104], ebx

; 22   : 	m_dwSyncTitleTime				= 0;

  00053	89 5e 6c	 mov	 DWORD PTR [esi+108], ebx

; 23   : 	m_dwSyncUserListTime			= 0;

  00056	89 5e 70	 mov	 DWORD PTR [esi+112], ebx

; 24   : 	m_iGuildYesterdayAttendCount	= 0;

  00059	89 5e 4c	 mov	 DWORD PTR [esi+76], ebx

; 25   : 	m_iGuildTodayAttendCount		= 0;

  0005c	89 5e 50	 mov	 DWORD PTR [esi+80], ebx

; 26   : 
; 27   : 	m_fGuildBonus					= FLOAT1;	

  0005f	b8 01 00 00 00	 mov	 eax, 1
  00064	89 45 f0	 mov	 DWORD PTR tv260[ebp], eax
  00067	db 45 f0	 fild	 DWORD PTR tv260[ebp]
  0006a	85 c0		 test	 eax, eax
  0006c	79 06		 jns	 SHORT $LN17@ioGuildDat
  0006e	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN17@ioGuildDat:
  00074	d9 5e 28	 fstp	 DWORD PTR [esi+40]

; 28   : 
; 29   : 	m_bUserListUpdate				= false;

  00077	66 89 5e 74	 mov	 WORD PTR [esi+116], bx

; 30   : 	m_bSync							= false;
; 31   : 	m_bGuildRoomOpen				= FALSE;

  0007b	89 5e 54	 mov	 DWORD PTR [esi+84], ebx

; 32   : }

  0007e	8b c6		 mov	 eax, esi
  00080	e8 00 00 00 00	 call	 __EH_epilog3
  00085	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioGuildData@@IAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??0ioGuildData@@IAE@XZ:
  0000c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00010	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00013	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00016	33 c8		 xor	 ecx, eax
  00018	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioGuildData@@IAE@XZ
  00022	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioGuildData@@IAE@XZ ENDP				; ioGuildData::ioGuildData
PUBLIC	?LeaveGuildUser@ioGuildData@@QAEXABVioHashString@@@Z ; ioGuildData::LeaveGuildUser
; Function compile flags: /Ogsp
;	COMDAT ?LeaveGuildUser@ioGuildData@@QAEXABVioHashString@@@Z
_TEXT	SEGMENT
_iSize$ = -8						; size = 4
tv249 = -4						; size = 4
$T529421 = 8						; size = 4
_szUserName$ = 8					; size = 4
?LeaveGuildUser@ioGuildData@@QAEXABVioHashString@@@Z PROC ; ioGuildData::LeaveGuildUser, COMDAT
; _this$ = ecx

; 280  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	53		 push	 ebx
  00006	8b d9		 mov	 ebx, ecx

; 281  : 	int iSize = m_vUserList.size();

  00008	8b 43 5c	 mov	 eax, DWORD PTR [ebx+92]
  0000b	2b 43 58	 sub	 eax, DWORD PTR [ebx+88]
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	6a 38		 push	 56			; 00000038H
  00012	99		 cdq
  00013	59		 pop	 ecx
  00014	f7 f9		 idiv	 ecx

; 282  : 	for(int i = 0;i < iSize;i++)

  00016	33 f6		 xor	 esi, esi
  00018	89 45 f8	 mov	 DWORD PTR _iSize$[ebp], eax
  0001b	3b c6		 cmp	 eax, esi
  0001d	7e 5e		 jle	 SHORT $LN2@LeaveGuild

; 281  : 	int iSize = m_vUserList.size();

  0001f	89 75 fc	 mov	 DWORD PTR tv249[ebp], esi
$LL30@LeaveGuild:

; 283  : 	{
; 284  : 		GuildUser &kUserInfo = m_vUserList[i];

  00022	8b 4b 58	 mov	 ecx, DWORD PTR [ebx+88]
  00025	03 4d fc	 add	 ecx, DWORD PTR tv249[ebp]

; 285  : 		{
; 286  : 			if( kUserInfo.m_szUserID == szUserName )

  00028	ff 75 08	 push	 DWORD PTR _szUserName$[ebp]
  0002b	8d 49 14	 lea	 ecx, DWORD PTR [ecx+20]
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00034	84 c0		 test	 al, al
  00036	75 0c		 jne	 SHORT $LN28@LeaveGuild

; 282  : 	for(int i = 0;i < iSize;i++)

  00038	83 45 fc 38	 add	 DWORD PTR tv249[ebp], 56 ; 00000038H
  0003c	46		 inc	 esi
  0003d	3b 75 f8	 cmp	 esi, DWORD PTR _iSize$[ebp]
  00040	7c e0		 jl	 SHORT $LL30@LeaveGuild

; 285  : 		{
; 286  : 			if( kUserInfo.m_szUserID == szUserName )

  00042	eb 39		 jmp	 SHORT $LN2@LeaveGuild
$LN28@LeaveGuild:

; 287  : 			{
; 288  : 				g_UserInfoMgr.SetGuildIndex( szUserName, 0 );

  00044	6a 00		 push	 0
  00046	ff 75 08	 push	 DWORD PTR _szUserName$[ebp]
  00049	e8 00 00 00 00	 call	 ?GetSingleton@ioUserInfoMgr@@SAAAV1@XZ ; ioUserInfoMgr::GetSingleton
  0004e	8b c8		 mov	 ecx, eax
  00050	e8 00 00 00 00	 call	 ?SetGuildIndex@ioUserInfoMgr@@QAEXABVioHashString@@K@Z ; ioUserInfoMgr::SetGuildIndex

; 289  : 				m_vUserList.erase( m_vUserList.begin() + i );

  00055	6b f6 38	 imul	 esi, 56			; 00000038H
  00058	03 73 58	 add	 esi, DWORD PTR [ebx+88]
  0005b	8d 45 08	 lea	 eax, DWORD PTR $T529421[ebp]
  0005e	56		 push	 esi
  0005f	50		 push	 eax
  00060	8d 4b 58	 lea	 ecx, DWORD PTR [ebx+88]
  00063	e8 00 00 00 00	 call	 ?erase@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::erase

; 290  : 				m_bUserListUpdate = true;				

  00068	c6 43 74 01	 mov	 BYTE PTR [ebx+116], 1

; 291  : 				UserListWnd::sg_bUserListUpdate =  true;

  0006c	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?sg_bUserListUpdate@UserListWnd@@2_NA, 1 ; UserListWnd::sg_bUserListUpdate

; 292  : 				LobbyGuildUserListWnd::ChangeGuildUserList();

  00073	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?sg_bGuildUserListUpdate@LobbyGuildUserListWnd@@2_NA, 1 ; LobbyGuildUserListWnd::sg_bGuildUserListUpdate

; 293  : 				m_dwGuildJoinUser--;       //유저수 감소

  0007a	ff 4b 14	 dec	 DWORD PTR [ebx+20]
$LN2@LeaveGuild:
  0007d	5f		 pop	 edi
  0007e	5e		 pop	 esi
  0007f	5b		 pop	 ebx

; 294  : 				return;
; 295  : 			}
; 296  : 		}
; 297  : 	}
; 298  : }

  00080	c9		 leave
  00081	c2 04 00	 ret	 4
?LeaveGuildUser@ioGuildData@@QAEXABVioHashString@@@Z ENDP ; ioGuildData::LeaveGuildUser
_TEXT	ENDS
PUBLIC	??_7ioGuildInfo@@6B@				; ioGuildInfo::`vftable'
PUBLIC	??0ioGuildInfo@@QAE@XZ				; ioGuildInfo::ioGuildInfo
PUBLIC	??_R4ioGuildInfo@@6B@				; ioGuildInfo::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioGuildInfo@@@8				; ioGuildInfo `RTTI Type Descriptor'
PUBLIC	??_R3ioGuildInfo@@8				; ioGuildInfo::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioGuildInfo@@8				; ioGuildInfo::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioGuildInfo@@8			; ioGuildInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@?$Singleton@VioGuildInfo@@@@8	; Singleton<ioGuildInfo>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AV?$Singleton@VioGuildInfo@@@@@8		; Singleton<ioGuildInfo> `RTTI Type Descriptor'
PUBLIC	??_R3?$Singleton@VioGuildInfo@@@@8		; Singleton<ioGuildInfo>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$Singleton@VioGuildInfo@@@@8		; Singleton<ioGuildInfo>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$Singleton@VioGuildInfo@@@@8	; Singleton<ioGuildInfo>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_EioGuildInfo@@UAEPAXI@Z:PROC			; ioGuildInfo::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$Singleton@VioGuildInfo@@@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atltime.inl
rdata$r	SEGMENT
??_R1A@?0A@EA@?$Singleton@VioGuildInfo@@@@8 DD FLAT:??_R0?AV?$Singleton@VioGuildInfo@@@@@8 ; Singleton<ioGuildInfo>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioGuildInfo@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$Singleton@VioGuildInfo@@@@8
rdata$r	SEGMENT
??_R2?$Singleton@VioGuildInfo@@@@8 DD FLAT:??_R1A@?0A@EA@?$Singleton@VioGuildInfo@@@@8 ; Singleton<ioGuildInfo>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$Singleton@VioGuildInfo@@@@8
rdata$r	SEGMENT
??_R3?$Singleton@VioGuildInfo@@@@8 DD 00H		; Singleton<ioGuildInfo>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$Singleton@VioGuildInfo@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$Singleton@VioGuildInfo@@@@@8
_DATA	SEGMENT
??_R0?AV?$Singleton@VioGuildInfo@@@@@8 DD FLAT:??_7type_info@@6B@ ; Singleton<ioGuildInfo> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$Singleton@VioGuildInfo@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@?$Singleton@VioGuildInfo@@@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$Singleton@VioGuildInfo@@@@8 DD FLAT:??_R0?AV?$Singleton@VioGuildInfo@@@@@8 ; Singleton<ioGuildInfo>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioGuildInfo@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioGuildInfo@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioGuildInfo@@8 DD FLAT:??_R0?AVioGuildInfo@@@8 ; ioGuildInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioGuildInfo@@8
rdata$r	ENDS
;	COMDAT ??_R2ioGuildInfo@@8
rdata$r	SEGMENT
??_R2ioGuildInfo@@8 DD FLAT:??_R1A@?0A@EA@ioGuildInfo@@8 ; ioGuildInfo::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@?$Singleton@VioGuildInfo@@@@8
rdata$r	ENDS
;	COMDAT ??_R3ioGuildInfo@@8
rdata$r	SEGMENT
??_R3ioGuildInfo@@8 DD 00H				; ioGuildInfo::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioGuildInfo@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioGuildInfo@@@8
_DATA	SEGMENT
??_R0?AVioGuildInfo@@@8 DD FLAT:??_7type_info@@6B@	; ioGuildInfo `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioGuildInfo@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioGuildInfo@@6B@
rdata$r	SEGMENT
??_R4ioGuildInfo@@6B@ DD 00H				; ioGuildInfo::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioGuildInfo@@@8
	DD	FLAT:??_R3ioGuildInfo@@8
rdata$r	ENDS
;	COMDAT ??_7ioGuildInfo@@6B@
CONST	SEGMENT
??_7ioGuildInfo@@6B@ DD FLAT:??_R4ioGuildInfo@@6B@	; ioGuildInfo::`vftable'
	DD	FLAT:??_EioGuildInfo@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0ioGuildInfo@@QAE@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0ioGuildInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0ioGuildInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioGuildInfo@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ioGuildInfo@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0ioGuildInfo@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0ioGuildInfo@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0ioGuildInfo@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0ioGuildInfo@@QAE@XZ$5
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ??0ioGuildInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T529480 = -16						; size = 4
$T529479 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ioGuildInfo@@QAE@XZ PROC				; ioGuildInfo::ioGuildInfo, COMDAT
; _this$ = ecx

; 743  : {	

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioGuildInfo@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00011	8b c6		 mov	 eax, esi
  00013	a3 00 00 00 00	 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioGuildInfo@@@@1PAVioGuildInfo@@A, eax ; Singleton<ioGuildInfo>::ms_Singleton
  00018	b8 a8 61 00 00	 mov	 eax, 25000		; 000061a8H
  0001d	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00020	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00023	8d 45 f0	 lea	 eax, DWORD PTR $T529479[ebp]
  00026	33 db		 xor	 ebx, ebx
  00028	bf e8 03 00 00	 mov	 edi, 1000		; 000003e8H
  0002d	50		 push	 eax
  0002e	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00031	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00034	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioGuildInfo@@6B@
  0003a	c7 46 0c 0a 00
	00 00		 mov	 DWORD PTR [esi+12], 10	; 0000000aH
  00041	89 7d f0	 mov	 DWORD PTR $T529479[ebp], edi
  00044	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@ABH@Z ; CEncrypt<int>::CEncrypt<int>
  00049	8d 45 f0	 lea	 eax, DWORD PTR $T529480[ebp]
  0004c	50		 push	 eax
  0004d	8d 4e 40	 lea	 ecx, DWORD PTR [esi+64]
  00050	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00054	89 7d f0	 mov	 DWORD PTR $T529480[ebp], edi
  00057	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@ABH@Z ; CEncrypt<int>::CEncrypt<int>
  0005c	89 5e 70	 mov	 DWORD PTR [esi+112], ebx
  0005f	89 5e 74	 mov	 DWORD PTR [esi+116], ebx
  00062	89 5e 78	 mov	 DWORD PTR [esi+120], ebx
  00065	89 9e 80 00 00
	00		 mov	 DWORD PTR [esi+128], ebx
  0006b	89 9e 84 00 00
	00		 mov	 DWORD PTR [esi+132], ebx
  00071	89 9e 88 00 00
	00		 mov	 DWORD PTR [esi+136], ebx
  00077	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??0ioHashString@@QAE@XZ
  0007d	8d 8e 94 00 00
	00		 lea	 ecx, DWORD PTR [esi+148]
  00083	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00087	ff d7		 call	 edi
  00089	8d 8e a4 00 00
	00		 lea	 ecx, DWORD PTR [esi+164]
  0008f	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00093	ff d7		 call	 edi
  00095	89 9e b4 00 00
	00		 mov	 DWORD PTR [esi+180], ebx
  0009b	89 9e b8 00 00
	00		 mov	 DWORD PTR [esi+184], ebx
  000a1	89 9e bc 00 00
	00		 mov	 DWORD PTR [esi+188], ebx
  000a7	89 9e c4 00 00
	00		 mov	 DWORD PTR [esi+196], ebx
  000ad	89 9e c8 00 00
	00		 mov	 DWORD PTR [esi+200], ebx
  000b3	89 9e cc 00 00
	00		 mov	 DWORD PTR [esi+204], ebx
  000b9	88 9e d4 00 00
	00		 mov	 BYTE PTR [esi+212], bl
  000bf	89 9e d8 00 00
	00		 mov	 DWORD PTR [esi+216], ebx
  000c5	89 9e dc 00 00
	00		 mov	 DWORD PTR [esi+220], ebx
  000cb	89 9e e0 00 00
	00		 mov	 DWORD PTR [esi+224], ebx
  000d1	89 9e e4 00 00
	00		 mov	 DWORD PTR [esi+228], ebx
  000d7	89 9e ec 00 00
	00		 mov	 DWORD PTR [esi+236], ebx
  000dd	89 9e f0 00 00
	00		 mov	 DWORD PTR [esi+240], ebx
  000e3	89 9e f4 00 00
	00		 mov	 DWORD PTR [esi+244], ebx
  000e9	89 9e fc 00 00
	00		 mov	 DWORD PTR [esi+252], ebx
  000ef	89 9e 00 01 00
	00		 mov	 DWORD PTR [esi+256], ebx
  000f5	89 9e 04 01 00
	00		 mov	 DWORD PTR [esi+260], ebx
  000fb	89 9e 08 01 00
	00		 mov	 DWORD PTR [esi+264], ebx
  00101	89 9e 0c 01 00
	00		 mov	 DWORD PTR [esi+268], ebx
  00107	89 9e 10 01 00
	00		 mov	 DWORD PTR [esi+272], ebx
  0010d	89 9e 14 01 00
	00		 mov	 DWORD PTR [esi+276], ebx
  00113	89 9e 18 01 00
	00		 mov	 DWORD PTR [esi+280], ebx
  00119	89 9e 1c 01 00
	00		 mov	 DWORD PTR [esi+284], ebx
  0011f	89 9e 20 01 00
	00		 mov	 DWORD PTR [esi+288], ebx

; 744  : }

  00125	8b c6		 mov	 eax, esi
  00127	e8 00 00 00 00	 call	 __EH_epilog3
  0012c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioGuildInfo@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioGuildInfo@@@@QAE@XZ ; Singleton<ioGuildInfo>::~Singleton<ioGuildInfo>
__unwindfunclet$??0ioGuildInfo@@QAE@XZ$1:
  0000b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 10	 add	 ecx, 16			; 00000010H
  00011	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0ioGuildInfo@@QAE@XZ$2:
  00016	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 40	 add	 ecx, 64			; 00000040H
  0001c	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0ioGuildInfo@@QAE@XZ$3:
  00021	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 70	 add	 ecx, 112		; 00000070H
  00027	e9 00 00 00 00	 jmp	 ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
__unwindfunclet$??0ioGuildInfo@@QAE@XZ$4:
  0002c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	81 c1 80 00 00
	00		 add	 ecx, 128		; 00000080H
  00035	e9 00 00 00 00	 jmp	 ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
__unwindfunclet$??0ioGuildInfo@@QAE@XZ$5:
  0003a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  00043	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??0ioGuildInfo@@QAE@XZ:
  00049	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0004d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00050	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00053	33 c8		 xor	 ecx, eax
  00055	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioGuildInfo@@QAE@XZ
  0005f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioGuildInfo@@QAE@XZ ENDP				; ioGuildInfo::ioGuildInfo
PUBLIC	?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z$0
__ehfuncinfo$?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T529682 = 8						; size = 4
_pGuildData$ = 8					; size = 4
_dwGuildIndex$ = 8					; size = 4
_bNetwork$ = 12						; size = 1
?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z PROC ; ioGuildInfo::GetGuildData, COMDAT
; _this$ = ecx

; 1008 : {

  00000	6a 00		 push	 0
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 1009 : 	if( dwGuildIndex == 0 ) 

  0000c	8b 5d 08	 mov	 ebx, DWORD PTR _dwGuildIndex$[ebp]
  0000f	85 db		 test	 ebx, ebx
  00011	75 04		 jne	 SHORT $LN7@GetGuildDa@2

; 1010 : 		return NULL;

  00013	33 c0		 xor	 eax, eax
  00015	eb 77		 jmp	 SHORT $LN8@GetGuildDa@2
$LN7@GetGuildDa@2:

; 1011 : 
; 1012 : 	vGuildData_iter iter, iEnd;
; 1013 : 	iEnd = m_vGuildList.end();

  00017	8b 91 b8 00 00
	00		 mov	 edx, DWORD PTR [ecx+184]

; 1014 : 	for(iter = m_vGuildList.begin();iter != iEnd;++iter)

  0001d	8d b9 b4 00 00
	00		 lea	 edi, DWORD PTR [ecx+180]
  00023	8b 07		 mov	 eax, DWORD PTR [edi]
  00025	eb 0a		 jmp	 SHORT $LN59@GetGuildDa@2
$LL39@GetGuildDa@2:

; 1015 : 	{
; 1016 : 		ioGuildData *pGuildData = *iter;

  00027	8b 30		 mov	 esi, DWORD PTR [eax]

; 1017 : 		if( pGuildData->GetGuildIndex() == dwGuildIndex )

  00029	39 5e 04	 cmp	 DWORD PTR [esi+4], ebx
  0002c	74 23		 je	 SHORT $LN56@GetGuildDa@2

; 1014 : 	for(iter = m_vGuildList.begin();iter != iEnd;++iter)

  0002e	83 c0 04	 add	 eax, 4
$LN59@GetGuildDa@2:
  00031	3b c2		 cmp	 eax, edx
  00033	75 f2		 jne	 SHORT $LL39@GetGuildDa@2

; 1022 : 		}
; 1023 : 	}	
; 1024 : 	// 없으면 생성
; 1025 : 	ioGuildData *pGuildData = new ioGuildData;

  00035	6a 78		 push	 120			; 00000078H
  00037	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003c	59		 pop	 ecx
  0003d	89 45 08	 mov	 DWORD PTR $T529682[ebp], eax
  00040	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00044	85 c0		 test	 eax, eax
  00046	74 1c		 je	 SHORT $LN10@GetGuildDa@2
  00048	8b c8		 mov	 ecx, eax
  0004a	e8 00 00 00 00	 call	 ??0ioGuildData@@IAE@XZ	; ioGuildData::ioGuildData
  0004f	eb 15		 jmp	 SHORT $LN11@GetGuildDa@2
$LN56@GetGuildDa@2:

; 1018 : 		{
; 1019 : 			if( bNetwork )

  00051	80 7d 0c 00	 cmp	 BYTE PTR _bNetwork$[ebp], 0
  00055	74 09		 je	 SHORT $LN2@GetGuildDa@2

; 1020 : 				pGuildData->ProcessSync();

  00057	6a 00		 push	 0
  00059	8b ce		 mov	 ecx, esi
  0005b	e8 00 00 00 00	 call	 ?ProcessSync@ioGuildData@@QAEX_N@Z ; ioGuildData::ProcessSync
$LN2@GetGuildDa@2:

; 1021 : 			return pGuildData;

  00060	8b c6		 mov	 eax, esi
  00062	eb 2a		 jmp	 SHORT $LN8@GetGuildDa@2
$LN10@GetGuildDa@2:

; 1022 : 		}
; 1023 : 	}	
; 1024 : 	// 없으면 생성
; 1025 : 	ioGuildData *pGuildData = new ioGuildData;

  00064	33 c0		 xor	 eax, eax
$LN11@GetGuildDa@2:
  00066	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0006a	89 45 08	 mov	 DWORD PTR _pGuildData$[ebp], eax

; 1026 : 	pGuildData->SetGuildIndex( dwGuildIndex );

  0006d	89 58 04	 mov	 DWORD PTR [eax+4], ebx

; 1027 : 	m_vGuildList.push_back( pGuildData );

  00070	8d 45 08	 lea	 eax, DWORD PTR _pGuildData$[ebp]
  00073	50		 push	 eax
  00074	8b cf		 mov	 ecx, edi
  00076	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAEXABQAVioGuildData@@@Z ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::push_back

; 1028 : 	if( bNetwork )

  0007b	80 7d 0c 00	 cmp	 BYTE PTR _bNetwork$[ebp], 0
  0007f	74 0a		 je	 SHORT $LN1@GetGuildDa@2

; 1029 : 		pGuildData->ProcessSync();

  00081	8b 4d 08	 mov	 ecx, DWORD PTR _pGuildData$[ebp]
  00084	6a 00		 push	 0
  00086	e8 00 00 00 00	 call	 ?ProcessSync@ioGuildData@@QAEX_N@Z ; ioGuildData::ProcessSync
$LN1@GetGuildDa@2:

; 1030 : 	return pGuildData;

  0008b	8b 45 08	 mov	 eax, DWORD PTR _pGuildData$[ebp]
$LN8@GetGuildDa@2:

; 1031 : }

  0008e	e8 00 00 00 00	 call	 __EH_epilog3
  00093	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z$0:
  00000	ff 75 08	 push	 DWORD PTR $T529682[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__ehhandler$?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00011	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ENDP ; ioGuildInfo::GetGuildData
PUBLIC	?SetGuildListInfo@ioGuildInfo@@QAEXKKKKVioHashString@@KKMH@Z ; ioGuildInfo::SetGuildListInfo
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.h
xdata$x	SEGMENT
__unwindtable$?SetGuildListInfo@ioGuildInfo@@QAEXKKKKVioHashString@@KKMH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetGuildListInfo@ioGuildInfo@@QAEXKKKKVioHashString@@KKMH@Z$0
__ehfuncinfo$?SetGuildListInfo@ioGuildInfo@@QAEXKKKKVioHashString@@KKMH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetGuildListInfo@ioGuildInfo@@QAEXKKKKVioHashString@@KKMH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?SetGuildListInfo@ioGuildInfo@@QAEXKKKKVioHashString@@KKMH@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_dwGuildIndex$ = 8					; size = 4
_dwGuildRank$ = 12					; size = 4
_dwGuildLevel$ = 16					; size = 4
_dwGuildMark$ = 20					; size = 4
_szGuildName$ = 24					; size = 16
_dwGuildJoinUser$ = 40					; size = 4
_dwGuildMaxUser$ = 44					; size = 4
_fGuildBonus$ = 48					; size = 4
_iGuildPoint$ = 52					; size = 4
?SetGuildListInfo@ioGuildInfo@@QAEXKKKKVioHashString@@KKMH@Z PROC ; ioGuildInfo::SetGuildListInfo, COMDAT
; _this$ = ecx

; 1060 : {

  00000	6a 00		 push	 0
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?SetGuildListInfo@ioGuildInfo@@QAEXKKKKVioHashString@@KKMH@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 1061 : 	ioGuildData *pGuildData = GetGuildData( dwGuildIndex );

  00012	6a 00		 push	 0
  00014	ff 75 08	 push	 DWORD PTR _dwGuildIndex$[ebp]
  00017	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData
  0001c	8b f0		 mov	 esi, eax

; 1062 : 	if( pGuildData )

  0001e	85 f6		 test	 esi, esi
  00020	74 67		 je	 SHORT $LN17@SetGuildLi

; 1063 : 	{
; 1064 : 		pGuildData->SetGuildRank( dwGuildRank );

  00022	8b 45 0c	 mov	 eax, DWORD PTR _dwGuildRank$[ebp]

; 1065 : 		pGuildData->SetGuildLevel( dwGuildLevel );
; 1066 : 		pGuildData->SetGuildMark( dwGuildMark );

  00025	ff 75 14	 push	 DWORD PTR _dwGuildMark$[ebp]
  00028	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  0002b	8b 45 10	 mov	 eax, DWORD PTR _dwGuildLevel$[ebp]
  0002e	8b ce		 mov	 ecx, esi
  00030	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00033	e8 00 00 00 00	 call	 ?SetGuildMark@ioGuildData@@QAEXK@Z ; ioGuildData::SetGuildMark

; 1067 : 		pGuildData->SetGuildName( szGuildName );

  00038	8d 45 18	 lea	 eax, DWORD PTR _szGuildName$[ebp]
  0003b	50		 push	 eax
  0003c	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z

; 1068 : 		pGuildData->SetGuildJoinUser( dwGuildJoinUser );

  00045	8b 5d 28	 mov	 ebx, DWORD PTR _dwGuildJoinUser$[ebp]
  00048	53		 push	 ebx
  00049	8b ce		 mov	 ecx, esi
  0004b	e8 00 00 00 00	 call	 ?SetGuildJoinUser@ioGuildData@@QAEXK@Z ; ioGuildData::SetGuildJoinUser

; 1069 : 		pGuildData->SetGuildMaxUser( dwGuildMaxUser );

  00050	ff 75 2c	 push	 DWORD PTR _dwGuildMaxUser$[ebp]
  00053	e8 00 00 00 00	 call	 ?SetGuildMaxUser@ioGuildData@@QAEXK@Z ; ioGuildData::SetGuildMaxUser

; 1070 : 		pGuildData->SetGuildBonus( fGuildBonus );
; 1071 : 		pGuildData->SetGuildCurPoint( iGuildPoint );

  00058	8b 45 34	 mov	 eax, DWORD PTR _iGuildPoint$[ebp]

; 1072 : 		
; 1073 : 		if( IsGuildEntryDelay( dwGuildIndex ) )

  0005b	ff 75 08	 push	 DWORD PTR _dwGuildIndex$[ebp]
  0005e	f3 0f 10 45 30	 movss	 xmm0, DWORD PTR _fGuildBonus$[ebp]
  00063	8b cf		 mov	 ecx, edi
  00065	f3 0f 11 46 28	 movss	 DWORD PTR [esi+40], xmm0
  0006a	89 46 20	 mov	 DWORD PTR [esi+32], eax
  0006d	e8 00 00 00 00	 call	 ?IsGuildEntryDelay@ioGuildInfo@@QAE_NK@Z ; ioGuildInfo::IsGuildEntryDelay
  00072	84 c0		 test	 al, al
  00074	74 0f		 je	 SHORT $LN1@SetGuildLi

; 1074 : 		{
; 1075 : 			 //내가 가입대기중인 길드 유저수가 풀이면 대기 리스트에서 삭제
; 1076 : 			if( dwGuildJoinUser == dwGuildMaxUser )       

  00076	3b 5d 2c	 cmp	 ebx, DWORD PTR _dwGuildMaxUser$[ebp]
  00079	75 0a		 jne	 SHORT $LN1@SetGuildLi

; 1077 : 				DeleteEntryDelayGuildList( dwGuildIndex );

  0007b	ff 75 08	 push	 DWORD PTR _dwGuildIndex$[ebp]
  0007e	8b cf		 mov	 ecx, edi
  00080	e8 00 00 00 00	 call	 ?DeleteEntryDelayGuildList@ioGuildInfo@@QAEXK@Z ; ioGuildInfo::DeleteEntryDelayGuildList
$LN1@SetGuildLi:

; 1078 : 		}		
; 1079 : 		pGuildData->Sync();

  00085	c6 46 75 01	 mov	 BYTE PTR [esi+117], 1
$LN17@SetGuildLi:

; 1080 : 	}
; 1081 : }

  00089	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0008d	8d 4d 18	 lea	 ecx, DWORD PTR _szGuildName$[ebp]
  00090	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00096	e8 00 00 00 00	 call	 __EH_epilog3
  0009b	c2 30 00	 ret	 48			; 00000030H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetGuildListInfo@ioGuildInfo@@QAEXKKKKVioHashString@@KKMH@Z$0:
  00000	8d 4d 18	 lea	 ecx, DWORD PTR _szGuildName$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?SetGuildListInfo@ioGuildInfo@@QAEXKKKKVioHashString@@KKMH@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetGuildListInfo@ioGuildInfo@@QAEXKKKKVioHashString@@KKMH@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetGuildListInfo@ioGuildInfo@@QAEXKKKKVioHashString@@KKMH@Z ENDP ; ioGuildInfo::SetGuildListInfo
PUBLIC	?SetGuildListInfo@ioGuildInfo@@QAEXAAVSP2Packet@@@Z ; ioGuildInfo::SetGuildListInfo
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildListInfo@ioGuildInfo@@QAEXAAVSP2Packet@@@Z
_TEXT	SEGMENT
_dwGuildIndex$ = -4					; size = 4
_rkPacket$ = 8						; size = 4
?SetGuildListInfo@ioGuildInfo@@QAEXAAVSP2Packet@@@Z PROC ; ioGuildInfo::SetGuildListInfo, COMDAT
; _this$ = ecx

; 1084 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi

; 1085 : 	DWORD dwGuildIndex;
; 1086 : 	rkPacket >> dwGuildIndex;

  00006	8d 45 fc	 lea	 eax, DWORD PTR _dwGuildIndex$[ebp]
  00009	8b d9		 mov	 ebx, ecx
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>

; 1087 : 	ioGuildData *pGuildData = GetGuildData( dwGuildIndex );

  00014	6a 00		 push	 0
  00016	ff 75 fc	 push	 DWORD PTR _dwGuildIndex$[ebp]
  00019	8b cb		 mov	 ecx, ebx
  0001b	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData
  00020	8b f0		 mov	 esi, eax

; 1088 : 	if( pGuildData )

  00022	85 f6		 test	 esi, esi
  00024	74 2f		 je	 SHORT $LN14@SetGuildLi@2

; 1089 : 	{
; 1090 : 		pGuildData->SetGuildInfo( rkPacket );

  00026	57		 push	 edi
  00027	ff 75 08	 push	 DWORD PTR _rkPacket$[ebp]
  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?SetGuildInfo@ioGuildData@@QAEXAAVSP2Packet@@@Z ; ioGuildData::SetGuildInfo

; 1091 : 
; 1092 : 		if( IsGuildEntryDelay( pGuildData->GetGuildIndex() ) )

  00031	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  00034	57		 push	 edi
  00035	8b cb		 mov	 ecx, ebx
  00037	e8 00 00 00 00	 call	 ?IsGuildEntryDelay@ioGuildInfo@@QAE_NK@Z ; ioGuildInfo::IsGuildEntryDelay
  0003c	84 c0		 test	 al, al
  0003e	74 10		 je	 SHORT $LN1@SetGuildLi@2

; 1093 : 		{        
; 1094 : 			//내가 가입대기중인 길드 유저수가 풀이면 대기 리스트에서 삭제
; 1095 : 			if( pGuildData->GetGuildJoinUser() == pGuildData->GetGuildMaxUser() )

  00040	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00043	3b 46 18	 cmp	 eax, DWORD PTR [esi+24]
  00046	75 08		 jne	 SHORT $LN1@SetGuildLi@2

; 1096 : 				DeleteEntryDelayGuildList( pGuildData->GetGuildIndex() );

  00048	57		 push	 edi
  00049	8b cb		 mov	 ecx, ebx
  0004b	e8 00 00 00 00	 call	 ?DeleteEntryDelayGuildList@ioGuildInfo@@QAEXK@Z ; ioGuildInfo::DeleteEntryDelayGuildList
$LN1@SetGuildLi@2:

; 1097 : 		}
; 1098 : 		pGuildData->Sync();

  00050	c6 46 75 01	 mov	 BYTE PTR [esi+117], 1
  00054	5f		 pop	 edi
$LN14@SetGuildLi@2:
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx

; 1099 : 	}
; 1100 : }

  00057	c9		 leave
  00058	c2 04 00	 ret	 4
?SetGuildListInfo@ioGuildInfo@@QAEXAAVSP2Packet@@@Z ENDP ; ioGuildInfo::SetGuildListInfo
_TEXT	ENDS
PUBLIC	?SetGuildSimpleInfo@ioGuildInfo@@QAEXKABVioHashString@@K@Z ; ioGuildInfo::SetGuildSimpleInfo
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildSimpleInfo@ioGuildInfo@@QAEXKABVioHashString@@K@Z
_TEXT	SEGMENT
_dwGuildIndex$ = 8					; size = 4
_szGuildName$ = 12					; size = 4
_dwGuildMark$ = 16					; size = 4
?SetGuildSimpleInfo@ioGuildInfo@@QAEXKABVioHashString@@K@Z PROC ; ioGuildInfo::SetGuildSimpleInfo, COMDAT
; _this$ = ecx

; 1103 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1104 : 	ioGuildData *pGuildData = GetGuildData( dwGuildIndex );

  00004	6a 00		 push	 0
  00006	ff 75 08	 push	 DWORD PTR _dwGuildIndex$[ebp]
  00009	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData
  0000e	8b f0		 mov	 esi, eax

; 1105 : 	if( pGuildData )

  00010	85 f6		 test	 esi, esi
  00012	74 16		 je	 SHORT $LN1@SetGuildSi

; 1106 : 	{
; 1107 : 		pGuildData->SetGuildName( szGuildName );

  00014	ff 75 0c	 push	 DWORD PTR _szGuildName$[ebp]
  00017	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z

; 1108 : 		pGuildData->SetGuildMark( dwGuildMark );

  00020	ff 75 10	 push	 DWORD PTR _dwGuildMark$[ebp]
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?SetGuildMark@ioGuildData@@QAEXK@Z ; ioGuildData::SetGuildMark
$LN1@SetGuildSi:
  0002a	5e		 pop	 esi

; 1109 : 	}
; 1110 : }

  0002b	5d		 pop	 ebp
  0002c	c2 0c 00	 ret	 12			; 0000000cH
?SetGuildSimpleInfo@ioGuildInfo@@QAEXKABVioHashString@@K@Z ENDP ; ioGuildInfo::SetGuildSimpleInfo
_TEXT	ENDS
PUBLIC	?SetGuildMark@ioGuildInfo@@QAEXKK@Z		; ioGuildInfo::SetGuildMark
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildMark@ioGuildInfo@@QAEXKK@Z
_TEXT	SEGMENT
_dwGuildIndex$ = 8					; size = 4
_dwGuildMark$ = 12					; size = 4
?SetGuildMark@ioGuildInfo@@QAEXKK@Z PROC		; ioGuildInfo::SetGuildMark, COMDAT
; _this$ = ecx

; 1113 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1114 : 	ioGuildData *pGuildData = GetGuildData( dwGuildIndex );

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR _dwGuildIndex$[ebp]
  00008	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData

; 1115 : 	if( pGuildData )

  0000d	85 c0		 test	 eax, eax
  0000f	74 0a		 je	 SHORT $LN1@SetGuildMa@3

; 1116 : 	{
; 1117 : 		pGuildData->SetGuildMark( dwGuildMark );

  00011	ff 75 0c	 push	 DWORD PTR _dwGuildMark$[ebp]
  00014	8b c8		 mov	 ecx, eax
  00016	e8 00 00 00 00	 call	 ?SetGuildMark@ioGuildData@@QAEXK@Z ; ioGuildData::SetGuildMark
$LN1@SetGuildMa@3:

; 1118 : 	}
; 1119 : }

  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
?SetGuildMark@ioGuildInfo@@QAEXKK@Z ENDP		; ioGuildInfo::SetGuildMark
_TEXT	ENDS
PUBLIC	?SetGuildMark@ioGuildInfo@@QAEXABVioHashString@@KK@Z ; ioGuildInfo::SetGuildMark
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildMark@ioGuildInfo@@QAEXABVioHashString@@KK@Z
_TEXT	SEGMENT
_szUserID$ = 8						; size = 4
_dwGuildIndex$ = 12					; size = 4
_dwGuildMark$ = 16					; size = 4
?SetGuildMark@ioGuildInfo@@QAEXABVioHashString@@KK@Z PROC ; ioGuildInfo::SetGuildMark, COMDAT
; _this$ = ecx

; 1122 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1123 : 	ioGuildData *pGuildData = GetGuildData( dwGuildIndex );

  00003	6a 00		 push	 0
  00005	ff 75 0c	 push	 DWORD PTR _dwGuildIndex$[ebp]
  00008	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData

; 1124 : 	if( pGuildData )

  0000d	85 c0		 test	 eax, eax
  0000f	74 0a		 je	 SHORT $LN1@SetGuildMa@4

; 1125 : 	{
; 1126 : 		pGuildData->SetGuildMark( dwGuildMark );

  00011	ff 75 10	 push	 DWORD PTR _dwGuildMark$[ebp]
  00014	8b c8		 mov	 ecx, eax
  00016	e8 00 00 00 00	 call	 ?SetGuildMark@ioGuildData@@QAEXK@Z ; ioGuildData::SetGuildMark
$LN1@SetGuildMa@4:

; 1127 : 	}
; 1128 : 	g_UserInfoMgr.SetGuildIndex( szUserID, dwGuildIndex );	

  0001b	ff 75 0c	 push	 DWORD PTR _dwGuildIndex$[ebp]
  0001e	ff 75 08	 push	 DWORD PTR _szUserID$[ebp]
  00021	e8 00 00 00 00	 call	 ?GetSingleton@ioUserInfoMgr@@SAAAV1@XZ ; ioUserInfoMgr::GetSingleton
  00026	8b c8		 mov	 ecx, eax
  00028	e8 00 00 00 00	 call	 ?SetGuildIndex@ioUserInfoMgr@@QAEXABVioHashString@@K@Z ; ioUserInfoMgr::SetGuildIndex

; 1129 : }

  0002d	5d		 pop	 ebp
  0002e	c2 0c 00	 ret	 12			; 0000000cH
?SetGuildMark@ioGuildInfo@@QAEXABVioHashString@@KK@Z ENDP ; ioGuildInfo::SetGuildMark
_TEXT	ENDS
PUBLIC	?SetGuildTitle@ioGuildInfo@@QAEXKABVioHashString@@@Z ; ioGuildInfo::SetGuildTitle
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildTitle@ioGuildInfo@@QAEXKABVioHashString@@@Z
_TEXT	SEGMENT
_dwGuildIndex$ = 8					; size = 4
_szGuildTitle$ = 12					; size = 4
?SetGuildTitle@ioGuildInfo@@QAEXKABVioHashString@@@Z PROC ; ioGuildInfo::SetGuildTitle, COMDAT
; _this$ = ecx

; 1132 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1133 : 	ioGuildData *pGuildData = GetGuildData( dwGuildIndex );

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR _dwGuildIndex$[ebp]
  00008	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData

; 1134 : 	if( pGuildData )

  0000d	85 c0		 test	 eax, eax
  0000f	74 0c		 je	 SHORT $LN4@SetGuildTi

; 1135 : 	{
; 1136 : 		pGuildData->SetGuildTitle( szGuildTitle );

  00011	ff 75 0c	 push	 DWORD PTR _szGuildTitle$[ebp]
  00014	8d 48 3c	 lea	 ecx, DWORD PTR [eax+60]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
$LN4@SetGuildTi:

; 1137 : 	}
; 1138 : }

  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
?SetGuildTitle@ioGuildInfo@@QAEXKABVioHashString@@@Z ENDP ; ioGuildInfo::SetGuildTitle
_TEXT	ENDS
PUBLIC	?SetGuildCampInfo@ioGuildInfo@@QAEXKKKKVioHashString@@K@Z ; ioGuildInfo::SetGuildCampInfo
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.h
xdata$x	SEGMENT
__unwindtable$?SetGuildCampInfo@ioGuildInfo@@QAEXKKKKVioHashString@@K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetGuildCampInfo@ioGuildInfo@@QAEXKKKKVioHashString@@K@Z$0
__ehfuncinfo$?SetGuildCampInfo@ioGuildInfo@@QAEXKKKKVioHashString@@K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetGuildCampInfo@ioGuildInfo@@QAEXKKKKVioHashString@@K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?SetGuildCampInfo@ioGuildInfo@@QAEXKKKKVioHashString@@K@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_dwGuildIndex$ = 8					; size = 4
_dwGuildMark$ = 12					; size = 4
_dwGuildLevel$ = 16					; size = 4
_dwGuildRank$ = 20					; size = 4
_szGuildName$ = 24					; size = 16
_dwCurGuildPoint$ = 40					; size = 4
?SetGuildCampInfo@ioGuildInfo@@QAEXKKKKVioHashString@@K@Z PROC ; ioGuildInfo::SetGuildCampInfo, COMDAT
; _this$ = ecx

; 1141 : {

  00000	6a 00		 push	 0
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?SetGuildCampInfo@ioGuildInfo@@QAEXKKKKVioHashString@@K@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 1142 : 	ioGuildData *pGuildData = GetGuildData( dwGuildIndex );

  00010	6a 00		 push	 0
  00012	ff 75 08	 push	 DWORD PTR _dwGuildIndex$[ebp]
  00015	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData
  0001a	8b f0		 mov	 esi, eax

; 1143 : 	if( pGuildData )

  0001c	85 f6		 test	 esi, esi
  0001e	74 2d		 je	 SHORT $LN13@SetGuildCa

; 1144 : 	{
; 1145 : 		pGuildData->SetGuildMark( dwGuildMark );

  00020	ff 75 0c	 push	 DWORD PTR _dwGuildMark$[ebp]
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?SetGuildMark@ioGuildData@@QAEXK@Z ; ioGuildData::SetGuildMark

; 1146 : 		pGuildData->SetGuildLevel( dwGuildLevel );

  0002a	8b 45 10	 mov	 eax, DWORD PTR _dwGuildLevel$[ebp]
  0002d	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 1147 : 		pGuildData->SetGuildRank( dwGuildRank );

  00030	8b 45 14	 mov	 eax, DWORD PTR _dwGuildRank$[ebp]
  00033	89 46 0c	 mov	 DWORD PTR [esi+12], eax

; 1148 : 		pGuildData->SetGuildName( szGuildName );

  00036	8d 45 18	 lea	 eax, DWORD PTR _szGuildName$[ebp]
  00039	50		 push	 eax
  0003a	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z

; 1149 : 		pGuildData->SetGuildCurPoint( dwCurGuildPoint );

  00043	8b 45 28	 mov	 eax, DWORD PTR _dwCurGuildPoint$[ebp]
  00046	89 46 20	 mov	 DWORD PTR [esi+32], eax

; 1150 : 		pGuildData->Sync();

  00049	c6 46 75 01	 mov	 BYTE PTR [esi+117], 1
$LN13@SetGuildCa:

; 1151 : 	}
; 1152 : }

  0004d	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00051	8d 4d 18	 lea	 ecx, DWORD PTR _szGuildName$[ebp]
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  0005a	e8 00 00 00 00	 call	 __EH_epilog3
  0005f	c2 24 00	 ret	 36			; 00000024H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetGuildCampInfo@ioGuildInfo@@QAEXKKKKVioHashString@@K@Z$0:
  00000	8d 4d 18	 lea	 ecx, DWORD PTR _szGuildName$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?SetGuildCampInfo@ioGuildInfo@@QAEXKKKKVioHashString@@K@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetGuildCampInfo@ioGuildInfo@@QAEXKKKKVioHashString@@K@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetGuildCampInfo@ioGuildInfo@@QAEXKKKKVioHashString@@K@Z ENDP ; ioGuildInfo::SetGuildCampInfo
PUBLIC	?IsInvitationUser@ioGuildInfo@@QAE_NABVioHashString@@@Z ; ioGuildInfo::IsInvitationUser
; Function compile flags: /Ogsp
;	COMDAT ?IsInvitationUser@ioGuildInfo@@QAE_NABVioHashString@@@Z
_TEXT	SEGMENT
_iSize$ = -8						; size = 4
tv248 = -4						; size = 4
$T529892 = 8						; size = 4
_szInvitationUser$ = 8					; size = 4
?IsInvitationUser@ioGuildInfo@@QAE_NABVioHashString@@@Z PROC ; ioGuildInfo::IsInvitationUser, COMDAT
; _this$ = ecx

; 1163 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	53		 push	 ebx
  00006	56		 push	 esi

; 1164 : 	int iSize = m_vInvitationUser.size();

  00007	8d b1 c4 00 00
	00		 lea	 esi, DWORD PTR [ecx+196]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	2b 06		 sub	 eax, DWORD PTR [esi]
  00012	6a 14		 push	 20			; 00000014H
  00014	99		 cdq
  00015	59		 pop	 ecx
  00016	f7 f9		 idiv	 ecx

; 1165 : 	if( iSize == 0 )

  00018	33 db		 xor	 ebx, ebx
  0001a	89 45 f8	 mov	 DWORD PTR _iSize$[ebp], eax
  0001d	3b c3		 cmp	 eax, ebx
  0001f	75 04		 jne	 SHORT $LN7@IsInvitati

; 1166 : 		return false;

  00021	32 c0		 xor	 al, al
  00023	eb 29		 jmp	 SHORT $LN8@IsInvitati
$LN7@IsInvitati:
  00025	57		 push	 edi

; 1167 : 
; 1168 : 	for(int i = 0;i < iSize;i++)

  00026	3b c3		 cmp	 eax, ebx
  00028	7e 21		 jle	 SHORT $LN4@IsInvitati
  0002a	89 5d fc	 mov	 DWORD PTR tv248[ebp], ebx
$LL31@IsInvitati:

; 1169 : 	{
; 1170 : 		InvitationUser &kUser = m_vInvitationUser[i];

  0002d	8b 3e		 mov	 edi, DWORD PTR [esi]
  0002f	03 7d fc	 add	 edi, DWORD PTR tv248[ebp]

; 1171 : 		if( kUser.m_szUserName == szInvitationUser )

  00032	ff 75 08	 push	 DWORD PTR _szInvitationUser$[ebp]
  00035	8b cf		 mov	 ecx, edi
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  0003d	84 c0		 test	 al, al
  0003f	75 13		 jne	 SHORT $LN29@IsInvitati

; 1167 : 
; 1168 : 	for(int i = 0;i < iSize;i++)

  00041	83 45 fc 14	 add	 DWORD PTR tv248[ebp], 20 ; 00000014H
  00045	43		 inc	 ebx
  00046	3b 5d f8	 cmp	 ebx, DWORD PTR _iSize$[ebp]
  00049	7c e2		 jl	 SHORT $LL31@IsInvitati
$LN4@IsInvitati:

; 1180 : 		}
; 1181 : 	}
; 1182 : 	return false;

  0004b	32 c0		 xor	 al, al
$LN32@IsInvitati:
  0004d	5f		 pop	 edi
$LN8@IsInvitati:
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx

; 1183 : }

  00050	c9		 leave
  00051	c2 04 00	 ret	 4
$LN29@IsInvitati:

; 1172 : 		{
; 1173 : 			if( FRAMEGETTIME() - kUser.m_dwInvitationTimer > 300000 )

  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  0005a	8b c8		 mov	 ecx, eax
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00062	2b 47 10	 sub	 eax, DWORD PTR [edi+16]
  00065	3d e0 93 04 00	 cmp	 eax, 300000		; 000493e0H
  0006a	76 13		 jbe	 SHORT $LN2@IsInvitati

; 1174 : 			{
; 1175 : 				m_vInvitationUser.erase( m_vInvitationUser.begin() + i );

  0006c	6b db 14	 imul	 ebx, 20			; 00000014H
  0006f	03 1e		 add	 ebx, DWORD PTR [esi]
  00071	8d 45 08	 lea	 eax, DWORD PTR $T529892[ebp]
  00074	53		 push	 ebx
  00075	50		 push	 eax
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?erase@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::erase

; 1176 : 				return false;

  0007d	eb cc		 jmp	 SHORT $LN4@IsInvitati
$LN2@IsInvitati:

; 1177 : 			}
; 1178 : 			else
; 1179 : 				return true;

  0007f	b0 01		 mov	 al, 1
  00081	eb ca		 jmp	 SHORT $LN32@IsInvitati
?IsInvitationUser@ioGuildInfo@@QAE_NABVioHashString@@@Z ENDP ; ioGuildInfo::IsInvitationUser
_TEXT	ENDS
PUBLIC	?ChangeMyGuildUserID@ioGuildInfo@@QAEXABVioHashString@@0@Z ; ioGuildInfo::ChangeMyGuildUserID
; Function compile flags: /Ogsp
;	COMDAT ?ChangeMyGuildUserID@ioGuildInfo@@QAEXABVioHashString@@0@Z
_TEXT	SEGMENT
_szUserID$ = 8						; size = 4
_szNewUserID$ = 12					; size = 4
?ChangeMyGuildUserID@ioGuildInfo@@QAEXABVioHashString@@0@Z PROC ; ioGuildInfo::ChangeMyGuildUserID, COMDAT
; _this$ = ecx

; 1186 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1187 : 	ioGuildData *pGuildData = GetGuildData( m_dwGuildIndex );

  00003	6a 00		 push	 0
  00005	ff b1 90 00 00
	00		 push	 DWORD PTR [ecx+144]
  0000b	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData

; 1188 : 	if( pGuildData )

  00010	85 c0		 test	 eax, eax
  00012	74 08		 je	 SHORT $LN1@ChangeMyGu

; 1189 : 		pGuildData->ChangeUserID( szUserID, szNewUserID );

  00014	8b c8		 mov	 ecx, eax

; 1190 : }

  00016	5d		 pop	 ebp

; 1189 : 		pGuildData->ChangeUserID( szUserID, szNewUserID );

  00017	e9 00 00 00 00	 jmp	 ?ChangeUserID@ioGuildData@@QAEXABVioHashString@@0@Z ; ioGuildData::ChangeUserID
$LN1@ChangeMyGu:

; 1190 : }

  0001c	5d		 pop	 ebp
  0001d	c2 08 00	 ret	 8
?ChangeMyGuildUserID@ioGuildInfo@@QAEXABVioHashString@@0@Z ENDP ; ioGuildInfo::ChangeMyGuildUserID
_TEXT	ENDS
PUBLIC	?GetMyGuildLevel@ioGuildInfo@@QAEKXZ		; ioGuildInfo::GetMyGuildLevel
; Function compile flags: /Ogsp
;	COMDAT ?GetMyGuildLevel@ioGuildInfo@@QAEKXZ
_TEXT	SEGMENT
?GetMyGuildLevel@ioGuildInfo@@QAEKXZ PROC		; ioGuildInfo::GetMyGuildLevel, COMDAT
; _this$ = ecx

; 1216 : 	ioGuildData *pGuildData = GetGuildData( m_dwGuildIndex );

  00000	6a 00		 push	 0
  00002	ff b1 90 00 00
	00		 push	 DWORD PTR [ecx+144]
  00008	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData

; 1217 : 	if( pGuildData )

  0000d	85 c0		 test	 eax, eax
  0000f	74 04		 je	 SHORT $LN1@GetMyGuild

; 1218 : 		return pGuildData->GetGuildLevel();

  00011	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 1220 : }

  00014	c3		 ret	 0
$LN1@GetMyGuild:

; 1219 : 	return 0;

  00015	33 c0		 xor	 eax, eax

; 1220 : }

  00017	c3		 ret	 0
?GetMyGuildLevel@ioGuildInfo@@QAEKXZ ENDP		; ioGuildInfo::GetMyGuildLevel
_TEXT	ENDS
PUBLIC	??_C@_0CA@CJAADAMA@?$CFs?5?3?5MyGuildIndex?5is?5not?5exist?5?$AA@ ; `string'
PUBLIC	??_C@_0DF@DJMKBHNF@ioGuildInfo?3?3SetMyGuildMemberTod@ ; `string'
PUBLIC	?SetMyGuildMemberTodayAttendInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z ; ioGuildInfo::SetMyGuildMemberTodayAttendInfoByPacket
EXTRN	__EH_epilog3_GS:PROC
EXTRN	__EH_prolog3_GS:PROC
;	COMDAT ??_C@_0CA@CJAADAMA@?$CFs?5?3?5MyGuildIndex?5is?5not?5exist?5?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atltime.inl
CONST	SEGMENT
??_C@_0CA@CJAADAMA@?$CFs?5?3?5MyGuildIndex?5is?5not?5exist?5?$AA@ DB '%s '
	DB	': MyGuildIndex is not exist ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@DJMKBHNF@ioGuildInfo?3?3SetMyGuildMemberTod@
CONST	SEGMENT
??_C@_0DF@DJMKBHNF@ioGuildInfo?3?3SetMyGuildMemberTod@ DB 'ioGuildInfo::S'
	DB	'etMyGuildMemberTodayAttendInfoByPacket', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetMyGuildMemberTodayAttendInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetMyGuildMemberTodayAttendInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z$0
__ehfuncinfo$?SetMyGuildMemberTodayAttendInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetMyGuildMemberTodayAttendInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?SetMyGuildMemberTodayAttendInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z
_TEXT	SEGMENT
$T529962 = -132						; size = 8
_iUserLevel$510689 = -128				; size = 4
_szUserID$510690 = -124					; size = 16
$T529961 = -108						; size = 8
$T529960 = -108						; size = 8
_ServerTime$ = -100					; size = 8
_bYesterdayAttend$510692 = -89				; size = 1
_iYear$ = -88						; size = 4
_iMonth$ = -84						; size = 4
_i$510685 = -80						; size = 4
_iDay$ = -76						; size = 4
_bTodayAttend$510691 = -69				; size = 1
_ttm$530002 = -68					; size = 36
_ttm$529991 = -68					; size = 36
_ttm$529980 = -68					; size = 36
_rkServerTime$ = -32					; size = 16
__$EHRec$ = -12						; size = 12
_rkPacket$ = 8						; size = 4
?SetMyGuildMemberTodayAttendInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z PROC ; ioGuildInfo::SetMyGuildMemberTodayAttendInfoByPacket, COMDAT
; _this$ = ecx

; 1443 : {

  00000	6a 78		 push	 120			; 00000078H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?SetMyGuildMemberTodayAttendInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000c	8b 5d 08	 mov	 ebx, DWORD PTR _rkPacket$[ebp]
  0000f	8b f1		 mov	 esi, ecx

; 1444 : 	if ( m_dwGuildIndex == 0 )

  00011	8b 86 90 00 00
	00		 mov	 eax, DWORD PTR [esi+144]
  00017	85 c0		 test	 eax, eax
  00019	75 1f		 jne	 SHORT $LN10@SetMyGuild@3

; 1445 : 	{
; 1446 : 		LOG.PrintTimeAndLog( 0, "%s : MyGuildIndex is not exist ", __FUNCTION__ );

  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@DJMKBHNF@ioGuildInfo?3?3SetMyGuildMemberTod@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@CJAADAMA@?$CFs?5?3?5MyGuildIndex?5is?5not?5exist?5?$AA@
  00025	50		 push	 eax
  00026	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  00032	83 c4 10	 add	 esp, 16			; 00000010H

; 1447 : 		return;

  00035	e9 8d 01 00 00	 jmp	 $LN1@SetMyGuild@3
$LN10@SetMyGuild@3:

; 1448 : 	}
; 1449 : 
; 1450 : 	ioGuildData *pGuildData = GetGuildData( m_dwGuildIndex );

  0003a	6a 00		 push	 0
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData
  00042	8b f8		 mov	 edi, eax

; 1451 : 	if( !pGuildData )

  00044	85 ff		 test	 edi, edi
  00046	0f 84 7b 01 00
	00		 je	 $LN1@SetMyGuild@3

; 1452 : 		return;
; 1453 : 	
; 1454 : 	pGuildData->SetMyGuildMemberTodayAttendInfoByPacket( rkPacket );

  0004c	53		 push	 ebx
  0004d	8b cf		 mov	 ecx, edi
  0004f	e8 00 00 00 00	 call	 ?SetMyGuildMemberTodayAttendInfoByPacket@ioGuildData@@QAEXAAVSP2Packet@@@Z ; ioGuildData::SetMyGuildMemberTodayAttendInfoByPacket

; 1455 : 
; 1456 : 	//자신이 출석 했는지 안했는지를 체크 한다.
; 1457 : 	int iMaxUser = pGuildData->GetGuildJoinUser();

  00054	8b 5f 14	 mov	 ebx, DWORD PTR [edi+20]

; 1458 : 	for ( int i=0 ; i<iMaxUser ; ++i )

  00057	83 65 b0 00	 and	 DWORD PTR _i$510685[ebp], 0
  0005b	85 db		 test	 ebx, ebx
  0005d	7e 7c		 jle	 SHORT $LN6@SetMyGuild@3
$LL8@SetMyGuild@3:

; 1459 : 	{
; 1460 : 		int	  iUserLevel;
; 1461 : 		ioHashString szUserID;

  0005f	8d 4d 84	 lea	 ecx, DWORD PTR _szUserID$510690[ebp]
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ
  00068	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 1462 : 		bool bTodayAttend,bYesterdayAttend;
; 1463 : 		pGuildData->GetUserInfo( i, szUserID,iUserLevel, bYesterdayAttend, bTodayAttend );

  0006c	8d 45 bb	 lea	 eax, DWORD PTR _bTodayAttend$510691[ebp]
  0006f	50		 push	 eax
  00070	8d 45 a7	 lea	 eax, DWORD PTR _bYesterdayAttend$510692[ebp]
  00073	50		 push	 eax
  00074	8d 45 80	 lea	 eax, DWORD PTR _iUserLevel$510689[ebp]
  00077	50		 push	 eax
  00078	8d 45 84	 lea	 eax, DWORD PTR _szUserID$510690[ebp]
  0007b	50		 push	 eax
  0007c	ff 75 b0	 push	 DWORD PTR _i$510685[ebp]
  0007f	8b cf		 mov	 ecx, edi
  00081	e8 00 00 00 00	 call	 ?GetUserInfo@ioGuildData@@QAEXHAAVioHashString@@AAHAA_N2@Z ; ioGuildData::GetUserInfo

; 1464 : 		if ( szUserID == g_MyInfo.GetPublicID() )

  00086	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  0008b	83 c0 1c	 add	 eax, 28			; 0000001cH
  0008e	50		 push	 eax
  0008f	8d 4d 84	 lea	 ecx, DWORD PTR _szUserID$510690[ebp]
  00092	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00098	84 c0		 test	 al, al
  0009a	74 2a		 je	 SHORT $LN3@SetMyGuild@3

; 1465 : 		{
; 1466 : 			//출석한 상태라면
; 1467 : 			if ( bTodayAttend )

  0009c	80 7d bb 00	 cmp	 BYTE PTR _bTodayAttend$510691[ebp], 0

; 1468 : 				SetAttendTime( m_LoginTime );

  000a0	8b ce		 mov	 ecx, esi
  000a2	74 0e		 je	 SHORT $LN4@SetMyGuild@3
  000a4	ff b6 18 01 00
	00		 push	 DWORD PTR [esi+280]
  000aa	ff b6 14 01 00
	00		 push	 DWORD PTR [esi+276]

; 1469 : 			else

  000b0	eb 0f		 jmp	 SHORT $LN35@SetMyGuild@3
$LN4@SetMyGuild@3:

; 1470 : 				SetAttendTime( CTime( 0 ) );

  000b2	66 0f 57 c0	 xorpd	 xmm0, xmm0
  000b6	66 0f 13 45 94	 movlpd	 QWORD PTR $T529960[ebp], xmm0
  000bb	ff 75 98	 push	 DWORD PTR $T529960[ebp+4]
  000be	ff 75 94	 push	 DWORD PTR $T529960[ebp]
$LN35@SetMyGuild@3:
  000c1	e8 00 00 00 00	 call	 ?SetAttendTime@ioGuildInfo@@IAEXVCTime@ATL@@@Z ; ioGuildInfo::SetAttendTime
$LN3@SetMyGuild@3:

; 1471 : 		}
; 1472 : 	}

  000c6	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000ca	8d 4d 84	 lea	 ecx, DWORD PTR _szUserID$510690[ebp]
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  000d3	ff 45 b0	 inc	 DWORD PTR _i$510685[ebp]
  000d6	39 5d b0	 cmp	 DWORD PTR _i$510685[ebp], ebx
  000d9	7c 84		 jl	 SHORT $LL8@SetMyGuild@3
$LN6@SetMyGuild@3:

; 1473 : 
; 1474 : 	// Setting Member AttendInfo RequestTime
; 1475 : 	SYSTEMTIME rkServerTime;
; 1476 : 	g_MyInfo.GetServerTime( rkServerTime );

  000db	8d 45 e0	 lea	 eax, DWORD PTR _rkServerTime$[ebp]
  000de	50		 push	 eax
  000df	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  000e4	8b c8		 mov	 ecx, eax
  000e6	e8 00 00 00 00	 call	 ?GetServerTime@ioMyInfo@@QAEXAAU_SYSTEMTIME@@@Z ; ioMyInfo::GetServerTime

; 1477 : 	CTime ServerTime( rkServerTime.wYear, rkServerTime.wMonth, rkServerTime.wDay, rkServerTime.wHour, rkServerTime.wMinute, rkServerTime.wSecond );

  000eb	0f b7 45 ec	 movzx	 eax, WORD PTR _rkServerTime$[ebp+12]
  000ef	83 cb ff	 or	 ebx, -1
  000f2	53		 push	 ebx
  000f3	50		 push	 eax
  000f4	0f b7 45 ea	 movzx	 eax, WORD PTR _rkServerTime$[ebp+10]
  000f8	50		 push	 eax
  000f9	0f b7 45 e8	 movzx	 eax, WORD PTR _rkServerTime$[ebp+8]
  000fd	50		 push	 eax
  000fe	0f b7 45 e6	 movzx	 eax, WORD PTR _rkServerTime$[ebp+6]
  00102	50		 push	 eax
  00103	0f b7 45 e2	 movzx	 eax, WORD PTR _rkServerTime$[ebp+2]
  00107	50		 push	 eax
  00108	0f b7 45 e0	 movzx	 eax, WORD PTR _rkServerTime$[ebp]
  0010c	50		 push	 eax
  0010d	8d 4d 9c	 lea	 ecx, DWORD PTR _ServerTime$[ebp]
  00110	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@HHHHHHH@Z ; ATL::CTime::CTime

; 1478 : 
; 1479 : 	int iYear = ServerTime.GetYear();

  00115	8d 4d 9c	 lea	 ecx, DWORD PTR _ServerTime$[ebp]
  00118	e8 00 00 00 00	 call	 ?GetYear@CTime@ATL@@QBEHXZ ; ATL::CTime::GetYear
  0011d	89 45 a8	 mov	 DWORD PTR _iYear$[ebp], eax

; 1480 : 	int iMonth = ServerTime.GetMonth();

  00120	8d 45 bc	 lea	 eax, DWORD PTR _ttm$529980[ebp]
  00123	50		 push	 eax
  00124	8d 4d 9c	 lea	 ecx, DWORD PTR _ServerTime$[ebp]
  00127	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm
  0012c	33 ff		 xor	 edi, edi
  0012e	3b c7		 cmp	 eax, edi
  00130	74 09		 je	 SHORT $LN22@SetMyGuild@3
  00132	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00135	40		 inc	 eax
  00136	89 45 ac	 mov	 DWORD PTR _iMonth$[ebp], eax
  00139	eb 03		 jmp	 SHORT $LN23@SetMyGuild@3
$LN22@SetMyGuild@3:
  0013b	89 7d ac	 mov	 DWORD PTR _iMonth$[ebp], edi
$LN23@SetMyGuild@3:

; 1481 : 	int iDay = ServerTime.GetDay();

  0013e	8d 45 bc	 lea	 eax, DWORD PTR _ttm$529991[ebp]
  00141	50		 push	 eax
  00142	8d 4d 9c	 lea	 ecx, DWORD PTR _ServerTime$[ebp]
  00145	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm
  0014a	3b c7		 cmp	 eax, edi
  0014c	74 08		 je	 SHORT $LN26@SetMyGuild@3
  0014e	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00151	89 45 b4	 mov	 DWORD PTR _iDay$[ebp], eax
  00154	eb 03		 jmp	 SHORT $LN27@SetMyGuild@3
$LN26@SetMyGuild@3:
  00156	89 7d b4	 mov	 DWORD PTR _iDay$[ebp], edi
$LN27@SetMyGuild@3:

; 1482 : 	int iHour = ServerTime.GetHour();

  00159	8d 45 bc	 lea	 eax, DWORD PTR _ttm$530002[ebp]
  0015c	50		 push	 eax
  0015d	8d 4d 9c	 lea	 ecx, DWORD PTR _ServerTime$[ebp]
  00160	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm
  00165	3b c7		 cmp	 eax, edi
  00167	74 05		 je	 SHORT $LN30@SetMyGuild@3
  00169	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0016c	eb 02		 jmp	 SHORT $LN31@SetMyGuild@3
$LN30@SetMyGuild@3:
  0016e	8b cb		 mov	 ecx, ebx
$LN31@SetMyGuild@3:

; 1483 : 	if ( iHour >= m_iAttendRenewalHour )

  00170	8b 86 d8 00 00
	00		 mov	 eax, DWORD PTR [esi+216]
  00176	3b c8		 cmp	 ecx, eax
  00178	7c 23		 jl	 SHORT $LN2@SetMyGuild@3

; 1484 : 	{
; 1485 : 		DateHelp::IncreaseDay( iYear, iMonth, iDay );

  0017a	8d 45 b4	 lea	 eax, DWORD PTR _iDay$[ebp]
  0017d	50		 push	 eax
  0017e	8d 45 ac	 lea	 eax, DWORD PTR _iMonth$[ebp]
  00181	50		 push	 eax
  00182	8d 45 a8	 lea	 eax, DWORD PTR _iYear$[ebp]
  00185	50		 push	 eax
  00186	e8 00 00 00 00	 call	 ?IncreaseDay@DateHelp@@YAXAAH00@Z ; DateHelp::IncreaseDay
  0018b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1486 : 		m_MemberAttendInfoRequestTime = CTime( iYear, iMonth, iDay, m_iAttendRenewalHour, 1, 0 );

  0018e	53		 push	 ebx
  0018f	57		 push	 edi
  00190	6a 01		 push	 1
  00192	ff b6 d8 00 00
	00		 push	 DWORD PTR [esi+216]
  00198	8d 4d 94	 lea	 ecx, DWORD PTR $T529961[ebp]

; 1487 : 	}
; 1488 : 	else

  0019b	eb 0b		 jmp	 SHORT $LN36@SetMyGuild@3
$LN2@SetMyGuild@3:

; 1489 : 		m_MemberAttendInfoRequestTime = CTime( iYear, iMonth, iDay, m_iAttendRenewalHour, 1, 0 );

  0019d	53		 push	 ebx
  0019e	57		 push	 edi
  0019f	6a 01		 push	 1
  001a1	50		 push	 eax
  001a2	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR $T529962[ebp]
$LN36@SetMyGuild@3:
  001a8	ff 75 b4	 push	 DWORD PTR _iDay$[ebp]
  001ab	ff 75 ac	 push	 DWORD PTR _iMonth$[ebp]
  001ae	ff 75 a8	 push	 DWORD PTR _iYear$[ebp]
  001b1	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@HHHHHHH@Z ; ATL::CTime::CTime
  001b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b8	89 8e 1c 01 00
	00		 mov	 DWORD PTR [esi+284], ecx
  001be	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001c1	89 86 20 01 00
	00		 mov	 DWORD PTR [esi+288], eax
$LN1@SetMyGuild@3:

; 1490 : 
; 1491 : 	//LOG.PrintTimeAndLog( 0, "%s Enable Attend Time : %d, Request Time : %d.%d.%d.%d", __FUNCTION__, m_EnableAttendTime.GetTime(), iYear, iMonth, iDay, m_iAttendRenewalHour );
; 1492 : }

  001c7	e8 00 00 00 00	 call	 __EH_epilog3_GS
  001cc	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetMyGuildMemberTodayAttendInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z$0:
  00000	8d 4d 84	 lea	 ecx, DWORD PTR _szUserID$510690[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?SetMyGuildMemberTodayAttendInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 8a 78 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-136]
  00016	33 c8		 xor	 ecx, eax
  00018	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001d	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetMyGuildMemberTodayAttendInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetMyGuildMemberTodayAttendInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z ENDP ; ioGuildInfo::SetMyGuildMemberTodayAttendInfoByPacket
PUBLIC	??_C@_0DJ@CEKJKDNM@ioGuildInfo?3?3SetMyGuildMemberYes@ ; `string'
PUBLIC	?SetMyGuildMemberYesterdayAttendInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z ; ioGuildInfo::SetMyGuildMemberYesterdayAttendInfoByPacket
;	COMDAT ??_C@_0DJ@CEKJKDNM@ioGuildInfo?3?3SetMyGuildMemberYes@
CONST	SEGMENT
??_C@_0DJ@CEKJKDNM@ioGuildInfo?3?3SetMyGuildMemberYes@ DB 'ioGuildInfo::S'
	DB	'etMyGuildMemberYesterdayAttendInfoByPacket', 00H ; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?SetMyGuildMemberYesterdayAttendInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z
_TEXT	SEGMENT
_rkPacket$ = 8						; size = 4
?SetMyGuildMemberYesterdayAttendInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z PROC ; ioGuildInfo::SetMyGuildMemberYesterdayAttendInfoByPacket, COMDAT
; _this$ = ecx

; 1495 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1496 : 	if ( m_dwGuildIndex == 0 )

  00003	8b 81 90 00 00
	00		 mov	 eax, DWORD PTR [ecx+144]
  00009	85 c0		 test	 eax, eax
  0000b	75 1e		 jne	 SHORT $LN2@SetMyGuild@4

; 1497 : 	{
; 1498 : 		LOG.PrintTimeAndLog( 0, "%s : MyGuildIndex is not exist ", __FUNCTION__ );

  0000d	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@CEKJKDNM@ioGuildInfo?3?3SetMyGuildMemberYes@
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@CJAADAMA@?$CFs?5?3?5MyGuildIndex?5is?5not?5exist?5?$AA@
  00017	50		 push	 eax
  00018	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  00024	83 c4 10	 add	 esp, 16			; 00000010H
$LN3@SetMyGuild@4:

; 1507 : }

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
$LN2@SetMyGuild@4:

; 1499 : 		return;
; 1500 : 	}
; 1501 : 
; 1502 : 	ioGuildData *pGuildData = GetGuildData( m_dwGuildIndex );

  0002b	6a 00		 push	 0
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData

; 1503 : 	if( !pGuildData )

  00033	85 c0		 test	 eax, eax
  00035	74 f0		 je	 SHORT $LN3@SetMyGuild@4

; 1504 : 		return;
; 1505 : 
; 1506 : 	pGuildData->SetMyGuildMemberYesterdayAttendInfoByPacket( rkPacket );

  00037	8b c8		 mov	 ecx, eax

; 1507 : }

  00039	5d		 pop	 ebp

; 1504 : 		return;
; 1505 : 
; 1506 : 	pGuildData->SetMyGuildMemberYesterdayAttendInfoByPacket( rkPacket );

  0003a	e9 00 00 00 00	 jmp	 ?SetMyGuildMemberYesterdayAttendInfoByPacket@ioGuildData@@QAEXAAVSP2Packet@@@Z ; ioGuildData::SetMyGuildMemberYesterdayAttendInfoByPacket
?SetMyGuildMemberYesterdayAttendInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@@Z ENDP ; ioGuildInfo::SetMyGuildMemberYesterdayAttendInfoByPacket
_TEXT	ENDS
PUBLIC	??_C@_0DA@IOILNEJB@ioGuildInfo?3?3SetMyGuildAttendedU@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?SetMyGuildAttendedUserInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@AA_N@Z ; ioGuildInfo::SetMyGuildAttendedUserInfoByPacket
;	COMDAT ??_C@_0DA@IOILNEJB@ioGuildInfo?3?3SetMyGuildAttendedU@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomyinfo.h
CONST	SEGMENT
??_C@_0DA@IOILNEJB@ioGuildInfo?3?3SetMyGuildAttendedU@ DB 'ioGuildInfo::S'
	DB	'etMyGuildAttendedUserInfoByPacket', 00H	; `string'
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
CONST	ENDS
;	COMDAT ?SetMyGuildAttendedUserInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@AA_N@Z
_TEXT	SEGMENT
_ServerTime$510727 = -32				; size = 8
_pGuildData$ = -28					; size = 4
_dwUserIndex$ = -24					; size = 4
_rkServerTime$510726 = -20				; size = 16
__$ArrayPad$ = -4					; size = 4
_rkPacket$ = 8						; size = 4
_bIsMe$ = 12						; size = 4
?SetMyGuildAttendedUserInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@AA_N@Z PROC ; ioGuildInfo::SetMyGuildAttendedUserInfoByPacket, COMDAT
; _this$ = ecx

; 1510 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b 7d 0c	 mov	 edi, DWORD PTR _bIsMe$[ebp]
  00015	8b f1		 mov	 esi, ecx
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]

; 1511 : 	bIsMe = false;

  0001a	c6 07 00	 mov	 BYTE PTR [edi], 0

; 1512 : 	if ( m_dwGuildIndex == 0 )

  0001d	83 be 90 00 00
	00 00		 cmp	 DWORD PTR [esi+144], 0
  00024	75 20		 jne	 SHORT $LN3@SetMyGuild@5

; 1513 : 	{
; 1514 : 		LOG.PrintTimeAndLog( 0, "%s : MyGuildIndex is not exist ", __FUNCTION__ );

  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@IOILNEJB@ioGuildInfo?3?3SetMyGuildAttendedU@
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@CJAADAMA@?$CFs?5?3?5MyGuildIndex?5is?5not?5exist?5?$AA@
  00030	6a 00		 push	 0
  00032	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  0003e	83 c4 10	 add	 esp, 16			; 00000010H

; 1515 : 		return;

  00041	e9 87 00 00 00	 jmp	 $LN1@SetMyGuild@5
$LN3@SetMyGuild@5:

; 1516 : 	}
; 1517 : 	DWORD dwUserIndex;
; 1518 : 	rkPacket >> dwUserIndex;

  00046	8d 45 e8	 lea	 eax, DWORD PTR _dwUserIndex$[ebp]
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>

; 1519 : 	ioGuildData *pGuildData = GetGuildData( m_dwGuildIndex );

  0004f	6a 00		 push	 0
  00051	ff b6 90 00 00
	00		 push	 DWORD PTR [esi+144]
  00057	8b ce		 mov	 ecx, esi
  00059	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData
  0005e	8b c8		 mov	 ecx, eax
  00060	89 4d e4	 mov	 DWORD PTR _pGuildData$[ebp], ecx

; 1520 : 	if( pGuildData )

  00063	85 c9		 test	 ecx, ecx
  00065	74 66		 je	 SHORT $LN1@SetMyGuild@5

; 1521 : 	{
; 1522 : 		pGuildData->SetGuildTodayAttendedUser( dwUserIndex );

  00067	ff 75 e8	 push	 DWORD PTR _dwUserIndex$[ebp]
  0006a	e8 00 00 00 00	 call	 ?SetGuildTodayAttendedUser@ioGuildData@@QAEXK@Z ; ioGuildData::SetGuildTodayAttendedUser

; 1523 : 
; 1524 : 		//출석한 유저가 나라면!
; 1525 : 		if ( pGuildData->GetUserIndex( g_MyInfo.GetPublicID() ) == dwUserIndex ) 

  0006f	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00074	8b 4d e4	 mov	 ecx, DWORD PTR _pGuildData$[ebp]
  00077	83 c0 1c	 add	 eax, 28			; 0000001cH
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ?GetUserIndex@ioGuildData@@QAEKABVioHashString@@@Z ; ioGuildData::GetUserIndex
  00080	3b 45 e8	 cmp	 eax, DWORD PTR _dwUserIndex$[ebp]
  00083	75 48		 jne	 SHORT $LN1@SetMyGuild@5

; 1526 : 		{
; 1527 : 			//출석 시간 갱신.
; 1528 : 			SYSTEMTIME rkServerTime;
; 1529 : 			g_MyInfo.GetServerTime( rkServerTime );

  00085	8d 45 ec	 lea	 eax, DWORD PTR _rkServerTime$510726[ebp]
  00088	50		 push	 eax
  00089	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ?GetServerTime@ioMyInfo@@QAEXAAU_SYSTEMTIME@@@Z ; ioMyInfo::GetServerTime

; 1530 : 			CTime ServerTime( rkServerTime.wYear, rkServerTime.wMonth, rkServerTime.wDay, rkServerTime.wHour, rkServerTime.wMinute, rkServerTime.wSecond );

  00095	0f b7 45 f8	 movzx	 eax, WORD PTR _rkServerTime$510726[ebp+12]
  00099	6a ff		 push	 -1
  0009b	50		 push	 eax
  0009c	0f b7 45 f6	 movzx	 eax, WORD PTR _rkServerTime$510726[ebp+10]
  000a0	50		 push	 eax
  000a1	0f b7 45 f4	 movzx	 eax, WORD PTR _rkServerTime$510726[ebp+8]
  000a5	50		 push	 eax
  000a6	0f b7 45 f2	 movzx	 eax, WORD PTR _rkServerTime$510726[ebp+6]
  000aa	50		 push	 eax
  000ab	0f b7 45 ee	 movzx	 eax, WORD PTR _rkServerTime$510726[ebp+2]
  000af	50		 push	 eax
  000b0	0f b7 45 ec	 movzx	 eax, WORD PTR _rkServerTime$510726[ebp]
  000b4	50		 push	 eax
  000b5	8d 4d e0	 lea	 ecx, DWORD PTR _ServerTime$510727[ebp]
  000b8	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@HHHHHHH@Z ; ATL::CTime::CTime

; 1531 : 			SetAttendTime( ServerTime );

  000bd	ff 75 e4	 push	 DWORD PTR _ServerTime$510727[ebp+4]
  000c0	8b ce		 mov	 ecx, esi
  000c2	ff 75 e0	 push	 DWORD PTR _ServerTime$510727[ebp]
  000c5	e8 00 00 00 00	 call	 ?SetAttendTime@ioGuildInfo@@IAEXVCTime@ATL@@@Z ; ioGuildInfo::SetAttendTime

; 1532 : 			bIsMe = true;

  000ca	c6 07 01	 mov	 BYTE PTR [edi], 1
$LN1@SetMyGuild@5:

; 1533 : 			//LOG.PrintTimeAndLog( 0, "%s : Accept Guild Attend! Time : %d, Enable AttendTime : %d", __FUNCTION__, ServerTime.GetTime(), m_EnableAttendTime.GetTime() );
; 1534 : 		}
; 1535 : 	}
; 1536 : }

  000cd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d0	5f		 pop	 edi
  000d1	33 cd		 xor	 ecx, ebp
  000d3	5e		 pop	 esi
  000d4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d9	c9		 leave
  000da	c2 08 00	 ret	 8
?SetMyGuildAttendedUserInfoByPacket@ioGuildInfo@@QAEXAAVSP2Packet@@AA_N@Z ENDP ; ioGuildInfo::SetMyGuildAttendedUserInfoByPacket
_TEXT	ENDS
PUBLIC	?push_back@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXABUGuildUser@ioGuildData@@@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::push_back
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?push_back@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXABUGuildUser@ioGuildData@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXABUGuildUser@ioGuildData@@@Z PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f9		 cmp	 edi, ecx
  0000f	73 37		 jae	 SHORT $LN4@push_back@6
  00011	8b 16		 mov	 edx, DWORD PTR [esi]
  00013	3b d7		 cmp	 edx, edi
  00015	77 31		 ja	 SHORT $LN4@push_back@6

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	8b c7		 mov	 eax, edi
  00019	2b c2		 sub	 eax, edx
  0001b	6a 38		 push	 56			; 00000038H
  0001d	99		 cdq
  0001e	5f		 pop	 edi
  0001f	f7 ff		 idiv	 edi
  00021	8b f8		 mov	 edi, eax

; 980  : 			if (this->_Mylast == this->_Myend)

  00023	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00026	75 09		 jne	 SHORT $LN3@push_back@6

; 981  : 				_Reserve(1);

  00028	6a 01		 push	 1
  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEXI@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Reserve
$LN3@push_back@6:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  00031	6b ff 38	 imul	 edi, 56			; 00000038H
  00034	03 3e		 add	 edi, DWORD PTR [esi]
  00036	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00039	57		 push	 edi
  0003a	ff 76 04	 push	 DWORD PTR [esi+4]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UGuildUser@ioGuildData@@@std@@UGuildUser@ioGuildData@@AAU34@@std@@YAXAAV?$allocator@UGuildUser@ioGuildData@@@0@PAUGuildUser@ioGuildData@@AAU23@@Z ; std::_Cons_val<std::allocator<ioGuildData::GuildUser>,ioGuildData::GuildUser,ioGuildData::GuildUser &>
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00046	eb 19		 jmp	 SHORT $LN26@push_back@6
$LN4@push_back@6:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00048	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  0004b	75 09		 jne	 SHORT $LN1@push_back@6

; 991  : 				_Reserve(1);

  0004d	6a 01		 push	 1
  0004f	8b ce		 mov	 ecx, esi
  00051	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEXI@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Reserve
$LN1@push_back@6:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00056	57		 push	 edi
  00057	ff 76 04	 push	 DWORD PTR [esi+4]
  0005a	e8 00 00 00 00	 call	 ??$_Construct@UGuildUser@ioGuildData@@ABU12@@std@@YAXPAUGuildUser@ioGuildData@@ABU12@@Z ; std::_Construct<ioGuildData::GuildUser,ioGuildData::GuildUser const &>
  0005f	59		 pop	 ecx
  00060	59		 pop	 ecx
$LN26@push_back@6:

; 996  : 			++this->_Mylast;

  00061	83 46 04 38	 add	 DWORD PTR [esi+4], 56	; 00000038H
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?push_back@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXABUGuildUser@ioGuildData@@@Z ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::push_back
_TEXT	ENDS
PUBLIC	?clear@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXXZ ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T530079 = -4						; size = 4
?clear@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXXZ PROC ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T530079[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@0@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXXZ ENDP ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::clear
_TEXT	ENDS
PUBLIC	?push_back@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXABUInvitationUser@ioGuildInfo@@@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::push_back
; Function compile flags: /Ogsp
;	COMDAT ?push_back@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXABUInvitationUser@ioGuildInfo@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXABUInvitationUser@ioGuildInfo@@@Z PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f9		 cmp	 edi, ecx
  0000f	73 33		 jae	 SHORT $LN4@push_back@7
  00011	8b 16		 mov	 edx, DWORD PTR [esi]
  00013	3b d7		 cmp	 edx, edi
  00015	77 2d		 ja	 SHORT $LN4@push_back@7

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	8b c7		 mov	 eax, edi
  00019	2b c2		 sub	 eax, edx
  0001b	6a 14		 push	 20			; 00000014H
  0001d	99		 cdq
  0001e	5f		 pop	 edi
  0001f	f7 ff		 idiv	 edi
  00021	8b f8		 mov	 edi, eax

; 980  : 			if (this->_Mylast == this->_Myend)

  00023	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00026	75 09		 jne	 SHORT $LN3@push_back@7

; 981  : 				_Reserve(1);

  00028	6a 01		 push	 1
  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEXI@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Reserve
$LN3@push_back@7:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  00031	6b ff 14	 imul	 edi, 20			; 00000014H
  00034	03 3e		 add	 edi, DWORD PTR [esi]
  00036	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00039	57		 push	 edi
  0003a	ff 76 04	 push	 DWORD PTR [esi+4]
  0003d	e8 00 00 00 00	 call	 ??$construct@AAUInvitationUser@ioGuildInfo@@@?$allocator@UInvitationUser@ioGuildInfo@@@std@@QAEXPAUInvitationUser@ioGuildInfo@@AAU23@@Z ; std::allocator<ioGuildInfo::InvitationUser>::construct<ioGuildInfo::InvitationUser &>

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00042	eb 19		 jmp	 SHORT $LN30@push_back@7
$LN4@push_back@7:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00044	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00047	75 09		 jne	 SHORT $LN1@push_back@7

; 991  : 				_Reserve(1);

  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEXI@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Reserve
$LN1@push_back@7:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00052	57		 push	 edi
  00053	ff 76 04	 push	 DWORD PTR [esi+4]
  00056	e8 00 00 00 00	 call	 ??$_Construct@UInvitationUser@ioGuildInfo@@ABU12@@std@@YAXPAUInvitationUser@ioGuildInfo@@ABU12@@Z ; std::_Construct<ioGuildInfo::InvitationUser,ioGuildInfo::InvitationUser const &>
  0005b	59		 pop	 ecx
  0005c	59		 pop	 ecx
$LN30@push_back@7:

; 996  : 			++this->_Mylast;

  0005d	83 46 04 14	 add	 DWORD PTR [esi+4], 20	; 00000014H
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?push_back@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXABUInvitationUser@ioGuildInfo@@@Z ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::push_back
_TEXT	ENDS
PUBLIC	?clear@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXXZ ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T530183 = -4						; size = 4
?clear@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXXZ PROC ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T530183[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@0@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXXZ ENDP ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::clear
_TEXT	ENDS
PUBLIC	?clear@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T530240 = -4						; size = 4
?clear@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXXZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T530240[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@0@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXXZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::clear
_TEXT	ENDS
PUBLIC	??$sort@V?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@VGuildUserSort@ioGuildData@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@0@0VGuildUserSort@ioGuildData@@@Z ; std::sort<std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >,ioGuildData::GuildUserSort>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
;	COMDAT ??$sort@V?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@VGuildUserSort@ioGuildData@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@0@0VGuildUserSort@ioGuildData@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
??$sort@V?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@VGuildUserSort@ioGuildData@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@0@0VGuildUserSort@ioGuildData@@@Z PROC ; std::sort<std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >,ioGuildData::GuildUserSort>, COMDAT

; 3803 : 	{	// order [_First, _Last), using _Pred

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3804 : 	_DEBUG_RANGE(_First, _Last);
; 3805 : 	_DEBUG_POINTER(_Pred);
; 3806 : 	_Sort(_Unchecked(_First), _Unchecked(_Last), _Last - _First, _Pred);

  00003	ff 75 10	 push	 DWORD PTR __Pred$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00009	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  0000c	6a 38		 push	 56			; 00000038H
  0000e	59		 pop	 ecx
  0000f	99		 cdq
  00010	f7 f9		 idiv	 ecx
  00012	50		 push	 eax
  00013	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00016	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00019	e8 00 00 00 00	 call	 ??$_Sort@PAUGuildUser@ioGuildData@@HVGuildUserSort@2@@std@@YAXPAUGuildUser@ioGuildData@@0HVGuildUserSort@2@@Z ; std::_Sort<ioGuildData::GuildUser *,int,ioGuildData::GuildUserSort>
  0001e	83 c4 10	 add	 esp, 16			; 00000010H

; 3807 : 	}

  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??$sort@V?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@VGuildUserSort@ioGuildData@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@0@0VGuildUserSort@ioGuildData@@@Z ENDP ; std::sort<std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >,ioGuildData::GuildUserSort>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z PROC ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  00006	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  00009	e8 00 00 00 00	 call	 ??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  0000e	59		 pop	 ecx
  0000f	59		 pop	 ecx

; 281  : 	}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z ENDP ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
PUBLIC	??1?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::~vector<GashaponPresent,std::allocator<GashaponPresent> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::~vector<GashaponPresent,std::allocator<GashaponPresent> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy
??1?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::~vector<GashaponPresent,std::allocator<GashaponPresent> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$530346 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 87   : 	{	// destroy [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$530346[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Al$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 89   : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??1ioGuildData@@MAE@XZ				; ioGuildData::~ioGuildData
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??1ioGuildData@@MAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioGuildData@@MAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ioGuildData@@MAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1ioGuildData@@MAE@XZ$2
__ehfuncinfo$??1ioGuildData@@MAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1ioGuildData@@MAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ??1ioGuildData@@MAE@XZ
_TEXT	SEGMENT
$T530415 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioGuildData@@MAE@XZ PROC				; ioGuildData::~ioGuildData, COMDAT
; _this$ = ecx

; 35   : {

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioGuildData@@MAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioGuildData@@6B@

; 36   : 	m_vUserList.clear();

  00017	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  0001a	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  0001d	50		 push	 eax
  0001e	51		 push	 ecx
  0001f	8d 45 ec	 lea	 eax, DWORD PTR $T530415[ebp]
  00022	50		 push	 eax
  00023	8d 4e 58	 lea	 ecx, DWORD PTR [esi+88]
  00026	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  0002d	e8 00 00 00 00	 call	 ?erase@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@0@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::erase

; 37   : }

  00032	8d 4e 58	 lea	 ecx, DWORD PTR [esi+88]
  00035	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00039	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@IAEXXZ ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::_Tidy
  0003e	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00044	8d 4e 3c	 lea	 ecx, DWORD PTR [esi+60]
  00047	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0004b	ff d7		 call	 edi
  0004d	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00051	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00054	ff d7		 call	 edi
  00056	e8 00 00 00 00	 call	 __EH_epilog3
  0005b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioGuildData@@MAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??1ioGuildData@@MAE@XZ$1:
  0000c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??1ioGuildData@@MAE@XZ$2:
  00018	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	83 c1 58	 add	 ecx, 88			; 00000058H
  0001e	e9 00 00 00 00	 jmp	 ??1?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE@XZ ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::~vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >
__ehhandler$??1ioGuildData@@MAE@XZ:
  00023	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00027	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002a	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0002d	33 c8		 xor	 ecx, eax
  0002f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00034	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioGuildData@@MAE@XZ
  00039	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioGuildData@@MAE@XZ ENDP				; ioGuildData::~ioGuildData
PUBLIC	?SetGuildUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z ; ioGuildData::SetGuildUserList
EXTRN	?SetLadderPoint@ioUserInfoMgr@@QAEXABVioHashString@@H@Z:PROC ; ioUserInfoMgr::SetLadderPoint
EXTRN	__ftol2_sse:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?SetGuildUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetGuildUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SetGuildUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?SetGuildUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z$2
__ehfuncinfo$?SetGuildUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?SetGuildUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?SetGuildUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z
_TEXT	SEGMENT
_kUserInfo$508059 = -120				; size = 56
$T530452 = -64						; size = 16
$T530450 = -48						; size = 16
tv371 = -32						; size = 4
$T530520 = -28						; size = 4
_i$508054 = -28						; size = 4
_iLadderPoint$508058 = -24				; size = 4
_iMaxUserList$ = -20					; size = 4
$T530451 = -13						; size = 1
$T530449 = -13						; size = 1
__$EHRec$ = -12						; size = 12
$T530453 = 8						; size = 1
_rkPacket$ = 8						; size = 4
?SetGuildUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z PROC ; ioGuildData::SetGuildUserList, COMDAT
; _this$ = ecx

; 205  : {

  00000	6a 6c		 push	 108			; 0000006cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?SetGuildUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx

; 206  : 	ioLocalParent *pLocal = g_LocalMgr.GetLocal( ioLocalManager::GetLocalType() );

  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLocalType@ioLocalManagerParent@@SA?AW4LocalType@1@XZ
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?GetSingleton@ioLocalManager@@SAAAV1@XZ ; ioLocalManager::GetSingleton
  0001a	8b c8		 mov	 ecx, eax
  0001c	e8 00 00 00 00	 call	 ?GetLocal@ioLocalManager@@QAEPAVioLocalParent@@W4LocalType@ioLocalManagerParent@@@Z ; ioLocalManager::GetLocal

; 207  : 
; 208  : 	m_vUserList.clear();

  00021	8b 4f 58	 mov	 ecx, DWORD PTR [edi+88]
  00024	8b d8		 mov	 ebx, eax
  00026	8b 47 5c	 mov	 eax, DWORD PTR [edi+92]
  00029	50		 push	 eax
  0002a	51		 push	 ecx
  0002b	8d 45 e4	 lea	 eax, DWORD PTR $T530520[ebp]
  0002e	50		 push	 eax
  0002f	8d 4f 58	 lea	 ecx, DWORD PTR [edi+88]
  00032	e8 00 00 00 00	 call	 ?erase@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@0@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::erase

; 209  : 	// 길드원 수
; 210  : 	// 길드원 테이블 인덱스, 길드원 인덱스, 길드원 레벨, 길드원 닉네임, 길드원 직책
; 211  : 	int iMaxUserList;
; 212  : 	rkPacket >> iMaxUserList;

  00037	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  0003a	8d 45 ec	 lea	 eax, DWORD PTR _iMaxUserList$[ebp]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>

; 213  : 	for(int i = 0;i < iMaxUserList;i++)

  00043	8b 45 ec	 mov	 eax, DWORD PTR _iMaxUserList$[ebp]
  00046	83 65 e4 00	 and	 DWORD PTR _i$508054[ebp], 0
  0004a	85 c0		 test	 eax, eax
  0004c	0f 8e 4d 01 00
	00		 jle	 $LN5@SetGuildUs@4
$LL7@SetGuildUs@4:

; 214  : 	{
; 215  : 		int iLadderPoint;
; 216  : 		GuildUser kUserInfo;

  00052	8d 4d 88	 lea	 ecx, DWORD PTR _kUserInfo$508059[ebp]
  00055	e8 00 00 00 00	 call	 ??0GuildUser@ioGuildData@@QAE@XZ ; ioGuildData::GuildUser::GuildUser

; 217  : 		rkPacket >> kUserInfo.m_dwTableIndex >> kUserInfo.m_dwUserIndex 
; 218  : 				 >> kUserInfo.m_iUserLevel >> kUserInfo.m_szUserID >> kUserInfo.m_szUserPos >> iLadderPoint;

  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  0005d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00061	8d 45 e8	 lea	 eax, DWORD PTR _iLadderPoint$508058[ebp]
  00064	50		 push	 eax
  00065	8d 45 ac	 lea	 eax, DWORD PTR _kUserInfo$508059[ebp+36]
  00068	50		 push	 eax
  00069	8d 45 9c	 lea	 eax, DWORD PTR _kUserInfo$508059[ebp+20]
  0006c	50		 push	 eax
  0006d	8d 45 90	 lea	 eax, DWORD PTR _kUserInfo$508059[ebp+8]
  00070	50		 push	 eax
  00071	8d 45 8c	 lea	 eax, DWORD PTR _kUserInfo$508059[ebp+4]
  00074	50		 push	 eax
  00075	8d 45 88	 lea	 eax, DWORD PTR _kUserInfo$508059[ebp]
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAVioHashString@@@Z ; SP2Packet::operator>>
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAVioHashString@@@Z ; SP2Packet::operator>>
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>

; 219  : 
; 220  : 		if( pLocal )

  000a1	85 db		 test	 ebx, ebx
  000a3	0f 84 96 00 00
	00		 je	 $LN1@SetGuildUs@4

; 221  : 		{
; 222  : 			if( kUserInfo.m_szUserPos == pLocal->GetGuildMasterPostion() )

  000a9	8b 03		 mov	 eax, DWORD PTR [ebx]
  000ab	8b cb		 mov	 ecx, ebx
  000ad	ff 50 5c	 call	 DWORD PTR [eax+92]
  000b0	50		 push	 eax
  000b1	8d 4d d0	 lea	 ecx, DWORD PTR $T530450[ebp]
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  000ba	8d 45 d0	 lea	 eax, DWORD PTR $T530450[ebp]
  000bd	50		 push	 eax
  000be	8d 4d ac	 lea	 ecx, DWORD PTR _kUserInfo$508059[ebp+36]
  000c1	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000c5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  000cb	8d 4d d0	 lea	 ecx, DWORD PTR $T530450[ebp]
  000ce	88 45 f3	 mov	 BYTE PTR $T530449[ebp], al
  000d1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  000db	80 7d f3 00	 cmp	 BYTE PTR $T530449[ebp], 0
  000df	74 1f		 je	 SHORT $LN3@SetGuildUs@4

; 223  : 				kUserInfo.m_iSortPoint = FLOAT100;

  000e1	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  000e6	89 45 e0	 mov	 DWORD PTR tv371[ebp], eax
  000e9	db 45 e0	 fild	 DWORD PTR tv371[ebp]
  000ec	85 c0		 test	 eax, eax
  000ee	79 06		 jns	 SHORT $LN52@SetGuildUs@4
  000f0	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN52@SetGuildUs@4:
  000f6	e8 00 00 00 00	 call	 __ftol2_sse
  000fb	89 45 98	 mov	 DWORD PTR _kUserInfo$508059[ebp+16], eax
  000fe	eb 3f		 jmp	 SHORT $LN1@SetGuildUs@4
$LN3@SetGuildUs@4:

; 224  : 			else if( kUserInfo.m_szUserPos == pLocal->GetGuildSecondMasterPosition() )

  00100	8b 03		 mov	 eax, DWORD PTR [ebx]
  00102	8b cb		 mov	 ecx, ebx
  00104	ff 50 60	 call	 DWORD PTR [eax+96]
  00107	50		 push	 eax
  00108	8d 4d c0	 lea	 ecx, DWORD PTR $T530452[ebp]
  0010b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00111	8d 45 c0	 lea	 eax, DWORD PTR $T530452[ebp]
  00114	50		 push	 eax
  00115	8d 4d ac	 lea	 ecx, DWORD PTR _kUserInfo$508059[ebp+36]
  00118	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0011c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00122	8d 4d c0	 lea	 ecx, DWORD PTR $T530452[ebp]
  00125	88 45 f3	 mov	 BYTE PTR $T530451[ebp], al
  00128	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0012c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00132	80 7d f3 00	 cmp	 BYTE PTR $T530451[ebp], 0
  00136	74 07		 je	 SHORT $LN1@SetGuildUs@4

; 225  : 				kUserInfo.m_iSortPoint = 10;

  00138	c7 45 98 0a 00
	00 00		 mov	 DWORD PTR _kUserInfo$508059[ebp+16], 10 ; 0000000aH
$LN1@SetGuildUs@4:

; 226  : 		}
; 227  : 		m_vUserList.push_back( kUserInfo );

  0013f	8d 45 88	 lea	 eax, DWORD PTR _kUserInfo$508059[ebp]
  00142	50		 push	 eax
  00143	8d 4f 58	 lea	 ecx, DWORD PTR [edi+88]
  00146	e8 00 00 00 00	 call	 ?push_back@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXABUGuildUser@ioGuildData@@@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::push_back

; 228  : 
; 229  : 		g_UserInfoMgr.SetGuildIndex( kUserInfo.m_szUserID, m_dwGuildIndex );

  0014b	ff 77 04	 push	 DWORD PTR [edi+4]
  0014e	8d 45 9c	 lea	 eax, DWORD PTR _kUserInfo$508059[ebp+20]
  00151	50		 push	 eax
  00152	e8 00 00 00 00	 call	 ?GetSingleton@ioUserInfoMgr@@SAAAV1@XZ ; ioUserInfoMgr::GetSingleton
  00157	8b c8		 mov	 ecx, eax
  00159	e8 00 00 00 00	 call	 ?SetGuildIndex@ioUserInfoMgr@@QAEXABVioHashString@@K@Z ; ioUserInfoMgr::SetGuildIndex

; 230  : 		g_UserInfoMgr.SetGrade( kUserInfo.m_szUserID, kUserInfo.m_iUserLevel );

  0015e	ff 75 90	 push	 DWORD PTR _kUserInfo$508059[ebp+8]
  00161	8d 45 9c	 lea	 eax, DWORD PTR _kUserInfo$508059[ebp+20]
  00164	50		 push	 eax
  00165	e8 00 00 00 00	 call	 ?GetSingleton@ioUserInfoMgr@@SAAAV1@XZ ; ioUserInfoMgr::GetSingleton
  0016a	8b c8		 mov	 ecx, eax
  0016c	e8 00 00 00 00	 call	 ?SetGrade@ioUserInfoMgr@@QAEXABVioHashString@@H@Z ; ioUserInfoMgr::SetGrade

; 231  : 		g_UserInfoMgr.SetLadderPoint( kUserInfo.m_szUserID, iLadderPoint );		

  00171	ff 75 e8	 push	 DWORD PTR _iLadderPoint$508058[ebp]
  00174	8d 45 9c	 lea	 eax, DWORD PTR _kUserInfo$508059[ebp+20]
  00177	50		 push	 eax
  00178	e8 00 00 00 00	 call	 ?GetSingleton@ioUserInfoMgr@@SAAAV1@XZ ; ioUserInfoMgr::GetSingleton
  0017d	8b c8		 mov	 ecx, eax
  0017f	e8 00 00 00 00	 call	 ?SetLadderPoint@ioUserInfoMgr@@QAEXABVioHashString@@H@Z ; ioUserInfoMgr::SetLadderPoint

; 232  : 	}

  00184	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00188	8d 4d 88	 lea	 ecx, DWORD PTR _kUserInfo$508059[ebp]
  0018b	e8 00 00 00 00	 call	 ??1GuildUser@ioGuildData@@QAE@XZ
  00190	8b 45 ec	 mov	 eax, DWORD PTR _iMaxUserList$[ebp]
  00193	ff 45 e4	 inc	 DWORD PTR _i$508054[ebp]
  00196	39 45 e4	 cmp	 DWORD PTR _i$508054[ebp], eax
  00199	0f 8c b3 fe ff
	ff		 jl	 $LL7@SetGuildUs@4
$LN5@SetGuildUs@4:

; 233  : 	m_dwGuildJoinUser = iMaxUserList;
; 234  : 	std::sort( m_vUserList.begin(), m_vUserList.end(), GuildUserSort() );

  0019f	ff 75 08	 push	 DWORD PTR $T530453[ebp]
  001a2	8b 77 58	 mov	 esi, DWORD PTR [edi+88]
  001a5	89 47 14	 mov	 DWORD PTR [edi+20], eax
  001a8	8b 47 5c	 mov	 eax, DWORD PTR [edi+92]
  001ab	50		 push	 eax
  001ac	56		 push	 esi
  001ad	e8 00 00 00 00	 call	 ??$sort@V?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@VGuildUserSort@ioGuildData@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@0@0VGuildUserSort@ioGuildData@@@Z ; std::sort<std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >,ioGuildData::GuildUserSort>
  001b2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 235  : 	m_bUserListUpdate = true;

  001b5	c6 47 74 01	 mov	 BYTE PTR [edi+116], 1

; 236  : }

  001b9	e8 00 00 00 00	 call	 __EH_epilog3
  001be	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetGuildUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z$0:
  00000	8d 4d 88	 lea	 ecx, DWORD PTR _kUserInfo$508059[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1GuildUser@ioGuildData@@QAE@XZ
__unwindfunclet$?SetGuildUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z$1:
  00008	8d 4d d0	 lea	 ecx, DWORD PTR $T530450[ebp]
  0000b	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?SetGuildUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z$2:
  00011	8d 4d c0	 lea	 ecx, DWORD PTR $T530452[ebp]
  00014	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?SetGuildUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z:
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 4a 84	 mov	 ecx, DWORD PTR [edx-124]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetGuildUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetGuildUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z ENDP ; ioGuildData::SetGuildUserList
PUBLIC	?SetGuildUserListEx@ioGuildData@@QAEXAAVSP2Packet@@@Z ; ioGuildData::SetGuildUserListEx
EXTRN	??5SP2Packet@@QAEAAV0@AA_N@Z:PROC		; SP2Packet::operator>>
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\userlistwnd.h
xdata$x	SEGMENT
__unwindtable$?SetGuildUserListEx@ioGuildData@@QAEXAAVSP2Packet@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetGuildUserListEx@ioGuildData@@QAEXAAVSP2Packet@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SetGuildUserListEx@ioGuildData@@QAEXAAVSP2Packet@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?SetGuildUserListEx@ioGuildData@@QAEXAAVSP2Packet@@@Z$2
__ehfuncinfo$?SetGuildUserListEx@ioGuildData@@QAEXAAVSP2Packet@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?SetGuildUserListEx@ioGuildData@@QAEXAAVSP2Packet@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?SetGuildUserListEx@ioGuildData@@QAEXAAVSP2Packet@@@Z
_TEXT	SEGMENT
_kUserInfo$508220 = -124				; size = 56
$T530608 = -68						; size = 16
$T530606 = -52						; size = 16
tv423 = -36						; size = 4
_pLocal$ = -32						; size = 4
$T530677 = -28						; size = 4
_i$508215 = -28						; size = 4
_iLadderPoint$508219 = -24				; size = 4
_iMaxUserList$ = -20					; size = 4
$T530607 = -14						; size = 1
$T530605 = -14						; size = 1
_bAllClear$ = -13					; size = 1
__$EHRec$ = -12						; size = 12
$T530609 = 8						; size = 1
_rkPacket$ = 8						; size = 4
?SetGuildUserListEx@ioGuildData@@QAEXAAVSP2Packet@@@Z PROC ; ioGuildData::SetGuildUserListEx, COMDAT
; _this$ = ecx

; 239  : {

  00000	6a 70		 push	 112			; 00000070H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?SetGuildUserListEx@ioGuildData@@QAEXAAVSP2Packet@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 240  : 	ioLocalParent *pLocal = g_LocalMgr.GetLocal( ioLocalManager::GetLocalType() );

  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLocalType@ioLocalManagerParent@@SA?AW4LocalType@1@XZ
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?GetSingleton@ioLocalManager@@SAAAV1@XZ ; ioLocalManager::GetSingleton
  0001a	8b c8		 mov	 ecx, eax
  0001c	e8 00 00 00 00	 call	 ?GetLocal@ioLocalManager@@QAEPAVioLocalParent@@W4LocalType@ioLocalManagerParent@@@Z ; ioLocalManager::GetLocal

; 241  : 
; 242  : 	int iMaxUserList;
; 243  : 	rkPacket >> iMaxUserList;

  00021	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  00024	89 45 e0	 mov	 DWORD PTR _pLocal$[ebp], eax
  00027	8d 45 ec	 lea	 eax, DWORD PTR _iMaxUserList$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>

; 244  : 
; 245  : 	bool bAllClear;
; 246  : 	rkPacket >> bAllClear;

  00030	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  00033	8d 45 f3	 lea	 eax, DWORD PTR _bAllClear$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AA_N@Z ; SP2Packet::operator>>

; 247  : 	if( bAllClear )

  0003c	80 7d f3 00	 cmp	 BYTE PTR _bAllClear$[ebp], 0
  00040	74 13		 je	 SHORT $LN15@SetGuildUs@5

; 248  : 		m_vUserList.clear();

  00042	8d 4e 58	 lea	 ecx, DWORD PTR [esi+88]
  00045	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00048	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004a	50		 push	 eax
  0004b	52		 push	 edx
  0004c	8d 45 e4	 lea	 eax, DWORD PTR $T530677[ebp]
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ?erase@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@2@0@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::erase
$LN15@SetGuildUs@5:

; 249  : 
; 250  : 	for(int i = 0;i < iMaxUserList;i++)

  00055	83 65 e4 00	 and	 DWORD PTR _i$508215[ebp], 0
  00059	83 7d ec 00	 cmp	 DWORD PTR _iMaxUserList$[ebp], 0
  0005d	0f 8e 75 01 00
	00		 jle	 $LN6@SetGuildUs@5
  00063	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00069	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_??1ioHashString@@QAE@XZ
$LL8@SetGuildUs@5:

; 251  : 	{
; 252  : 		int iLadderPoint;
; 253  : 		GuildUser kUserInfo;

  0006f	8d 4d 84	 lea	 ecx, DWORD PTR _kUserInfo$508220[ebp]
  00072	e8 00 00 00 00	 call	 ??0GuildUser@ioGuildData@@QAE@XZ ; ioGuildData::GuildUser::GuildUser

; 254  : 		rkPacket >> kUserInfo.m_dwTableIndex >> kUserInfo.m_dwUserIndex >> kUserInfo.m_szUserID >> kUserInfo.m_szUserPos;

  00077	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  0007a	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0007e	8d 45 a8	 lea	 eax, DWORD PTR _kUserInfo$508220[ebp+36]
  00081	50		 push	 eax
  00082	8d 45 98	 lea	 eax, DWORD PTR _kUserInfo$508220[ebp+20]
  00085	50		 push	 eax
  00086	8d 45 88	 lea	 eax, DWORD PTR _kUserInfo$508220[ebp+4]
  00089	50		 push	 eax
  0008a	8d 45 84	 lea	 eax, DWORD PTR _kUserInfo$508220[ebp]
  0008d	50		 push	 eax
  0008e	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAVioHashString@@@Z ; SP2Packet::operator>>
  000a1	8b c8		 mov	 ecx, eax
  000a3	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAVioHashString@@@Z ; SP2Packet::operator>>

; 255  : 		rkPacket >> kUserInfo.m_bOnline >> kUserInfo.m_iUserPos >> kUserInfo.m_iUserLevel >> iLadderPoint;

  000a8	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  000ab	8d 45 e8	 lea	 eax, DWORD PTR _iLadderPoint$508219[ebp]
  000ae	50		 push	 eax
  000af	8d 45 8c	 lea	 eax, DWORD PTR _kUserInfo$508220[ebp+8]
  000b2	50		 push	 eax
  000b3	8d 45 90	 lea	 eax, DWORD PTR _kUserInfo$508220[ebp+12]
  000b6	50		 push	 eax
  000b7	8d 45 b8	 lea	 eax, DWORD PTR _kUserInfo$508220[ebp+52]
  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AA_N@Z ; SP2Packet::operator>>
  000c0	8b c8		 mov	 ecx, eax
  000c2	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>
  000c7	8b c8		 mov	 ecx, eax
  000c9	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>
  000ce	8b c8		 mov	 ecx, eax
  000d0	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>

; 256  : 
; 257  : 		if( GetUserIndex( kUserInfo.m_szUserID ) != 0 ) continue;

  000d5	8d 45 98	 lea	 eax, DWORD PTR _kUserInfo$508220[ebp+20]
  000d8	50		 push	 eax
  000d9	8b ce		 mov	 ecx, esi
  000db	e8 00 00 00 00	 call	 ?GetUserIndex@ioGuildData@@QAEKABVioHashString@@@Z ; ioGuildData::GetUserIndex
  000e0	85 c0		 test	 eax, eax
  000e2	0f 85 d5 00 00
	00		 jne	 $LN59@SetGuildUs@5

; 258  : 
; 259  : 		if( pLocal )

  000e8	8b 4d e0	 mov	 ecx, DWORD PTR _pLocal$[ebp]
  000eb	85 c9		 test	 ecx, ecx
  000ed	0f 84 85 00 00
	00		 je	 $LN1@SetGuildUs@5

; 260  : 		{
; 261  : 			if( kUserInfo.m_szUserPos == pLocal->GetGuildMasterPostion() )

  000f3	8b 01		 mov	 eax, DWORD PTR [ecx]
  000f5	ff 50 5c	 call	 DWORD PTR [eax+92]
  000f8	50		 push	 eax
  000f9	8d 4d cc	 lea	 ecx, DWORD PTR $T530606[ebp]
  000fc	ff d7		 call	 edi
  000fe	8d 45 cc	 lea	 eax, DWORD PTR $T530606[ebp]
  00101	50		 push	 eax
  00102	8d 4d a8	 lea	 ecx, DWORD PTR _kUserInfo$508220[ebp+36]
  00105	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00109	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  0010f	8d 4d cc	 lea	 ecx, DWORD PTR $T530606[ebp]
  00112	88 45 f2	 mov	 BYTE PTR $T530605[ebp], al
  00115	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00119	ff d3		 call	 ebx
  0011b	80 7d f2 00	 cmp	 BYTE PTR $T530605[ebp], 0
  0011f	74 1f		 je	 SHORT $LN3@SetGuildUs@5

; 262  : 				kUserInfo.m_iSortPoint = FLOAT100;

  00121	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  00126	89 45 dc	 mov	 DWORD PTR tv423[ebp], eax
  00129	db 45 dc	 fild	 DWORD PTR tv423[ebp]
  0012c	85 c0		 test	 eax, eax
  0012e	79 06		 jns	 SHORT $LN58@SetGuildUs@5
  00130	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN58@SetGuildUs@5:
  00136	e8 00 00 00 00	 call	 __ftol2_sse
  0013b	89 45 94	 mov	 DWORD PTR _kUserInfo$508220[ebp+16], eax
  0013e	eb 38		 jmp	 SHORT $LN1@SetGuildUs@5
$LN3@SetGuildUs@5:

; 263  : 			else if( kUserInfo.m_szUserPos == pLocal->GetGuildSecondMasterPosition() )

  00140	8b 4d e0	 mov	 ecx, DWORD PTR _pLocal$[ebp]
  00143	8b 01		 mov	 eax, DWORD PTR [ecx]
  00145	ff 50 60	 call	 DWORD PTR [eax+96]
  00148	50		 push	 eax
  00149	8d 4d bc	 lea	 ecx, DWORD PTR $T530608[ebp]
  0014c	ff d7		 call	 edi
  0014e	8d 45 bc	 lea	 eax, DWORD PTR $T530608[ebp]
  00151	50		 push	 eax
  00152	8d 4d a8	 lea	 ecx, DWORD PTR _kUserInfo$508220[ebp+36]
  00155	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00159	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  0015f	8d 4d bc	 lea	 ecx, DWORD PTR $T530608[ebp]
  00162	88 45 f2	 mov	 BYTE PTR $T530607[ebp], al
  00165	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00169	ff d3		 call	 ebx
  0016b	80 7d f2 00	 cmp	 BYTE PTR $T530607[ebp], 0
  0016f	74 07		 je	 SHORT $LN1@SetGuildUs@5

; 264  : 				kUserInfo.m_iSortPoint = 10;

  00171	c7 45 94 0a 00
	00 00		 mov	 DWORD PTR _kUserInfo$508220[ebp+16], 10 ; 0000000aH
$LN1@SetGuildUs@5:

; 265  : 		}
; 266  : 		m_vUserList.push_back( kUserInfo );

  00178	8d 45 84	 lea	 eax, DWORD PTR _kUserInfo$508220[ebp]
  0017b	8d 4e 58	 lea	 ecx, DWORD PTR [esi+88]
  0017e	50		 push	 eax
  0017f	e8 00 00 00 00	 call	 ?push_back@?$vector@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@QAEXABUGuildUser@ioGuildData@@@Z ; std::vector<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> >::push_back

; 267  : 		g_UserInfoMgr.SetGuildIndex( kUserInfo.m_szUserID, m_dwGuildIndex );

  00184	ff 76 04	 push	 DWORD PTR [esi+4]
  00187	8d 45 98	 lea	 eax, DWORD PTR _kUserInfo$508220[ebp+20]
  0018a	50		 push	 eax
  0018b	e8 00 00 00 00	 call	 ?GetSingleton@ioUserInfoMgr@@SAAAV1@XZ ; ioUserInfoMgr::GetSingleton
  00190	8b c8		 mov	 ecx, eax
  00192	e8 00 00 00 00	 call	 ?SetGuildIndex@ioUserInfoMgr@@QAEXABVioHashString@@K@Z ; ioUserInfoMgr::SetGuildIndex

; 268  : 		g_UserInfoMgr.SetGrade( kUserInfo.m_szUserID, kUserInfo.m_iUserLevel );

  00197	ff 75 8c	 push	 DWORD PTR _kUserInfo$508220[ebp+8]
  0019a	8d 45 98	 lea	 eax, DWORD PTR _kUserInfo$508220[ebp+20]
  0019d	50		 push	 eax
  0019e	e8 00 00 00 00	 call	 ?GetSingleton@ioUserInfoMgr@@SAAAV1@XZ ; ioUserInfoMgr::GetSingleton
  001a3	8b c8		 mov	 ecx, eax
  001a5	e8 00 00 00 00	 call	 ?SetGrade@ioUserInfoMgr@@QAEXABVioHashString@@H@Z ; ioUserInfoMgr::SetGrade

; 269  : 		g_UserInfoMgr.SetLadderPoint( kUserInfo.m_szUserID, iLadderPoint );		

  001aa	ff 75 e8	 push	 DWORD PTR _iLadderPoint$508219[ebp]
  001ad	8d 45 98	 lea	 eax, DWORD PTR _kUserInfo$508220[ebp+20]
  001b0	50		 push	 eax
  001b1	e8 00 00 00 00	 call	 ?GetSingleton@ioUserInfoMgr@@SAAAV1@XZ ; ioUserInfoMgr::GetSingleton
  001b6	8b c8		 mov	 ecx, eax
  001b8	e8 00 00 00 00	 call	 ?SetLadderPoint@ioUserInfoMgr@@QAEXABVioHashString@@H@Z ; ioUserInfoMgr::SetLadderPoint
$LN59@SetGuildUs@5:

; 270  : 	}

  001bd	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  001c1	8d 4d 84	 lea	 ecx, DWORD PTR _kUserInfo$508220[ebp]
  001c4	e8 00 00 00 00	 call	 ??1GuildUser@ioGuildData@@QAE@XZ
  001c9	ff 45 e4	 inc	 DWORD PTR _i$508215[ebp]
  001cc	8b 45 e4	 mov	 eax, DWORD PTR _i$508215[ebp]
  001cf	3b 45 ec	 cmp	 eax, DWORD PTR _iMaxUserList$[ebp]
  001d2	0f 8c 97 fe ff
	ff		 jl	 $LL8@SetGuildUs@5
$LN6@SetGuildUs@5:

; 271  : 
; 272  : 	m_dwGuildJoinUser = (DWORD)m_vUserList.size();

  001d8	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  001db	2b 46 58	 sub	 eax, DWORD PTR [esi+88]
  001de	6a 38		 push	 56			; 00000038H
  001e0	59		 pop	 ecx
  001e1	99		 cdq
  001e2	f7 f9		 idiv	 ecx

; 273  : 	std::sort( m_vUserList.begin(), m_vUserList.end(), GuildUserSort() );

  001e4	ff 75 08	 push	 DWORD PTR $T530609[ebp]
  001e7	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  001ea	89 46 14	 mov	 DWORD PTR [esi+20], eax
  001ed	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  001f0	50		 push	 eax
  001f1	51		 push	 ecx
  001f2	e8 00 00 00 00	 call	 ??$sort@V?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@VGuildUserSort@ioGuildData@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@0@0VGuildUserSort@ioGuildData@@@Z ; std::sort<std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >,ioGuildData::GuildUserSort>

; 274  : 	m_bUserListUpdate = true;

  001f7	c6 46 74 01	 mov	 BYTE PTR [esi+116], 1
  001fb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 275  : 	UserListWnd::sg_bUserListUpdate =  true;

  001fe	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?sg_bUserListUpdate@UserListWnd@@2_NA, 1 ; UserListWnd::sg_bUserListUpdate

; 276  : 	LobbyGuildUserListWnd::ChangeGuildUserList();

  00205	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?sg_bGuildUserListUpdate@LobbyGuildUserListWnd@@2_NA, 1 ; LobbyGuildUserListWnd::sg_bGuildUserListUpdate

; 277  : }

  0020c	e8 00 00 00 00	 call	 __EH_epilog3
  00211	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetGuildUserListEx@ioGuildData@@QAEXAAVSP2Packet@@@Z$0:
  00000	8d 4d 84	 lea	 ecx, DWORD PTR _kUserInfo$508220[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1GuildUser@ioGuildData@@QAE@XZ
__unwindfunclet$?SetGuildUserListEx@ioGuildData@@QAEXAAVSP2Packet@@@Z$1:
  00008	8d 4d cc	 lea	 ecx, DWORD PTR $T530606[ebp]
  0000b	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?SetGuildUserListEx@ioGuildData@@QAEXAAVSP2Packet@@@Z$2:
  00011	8d 4d bc	 lea	 ecx, DWORD PTR $T530608[ebp]
  00014	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?SetGuildUserListEx@ioGuildData@@QAEXAAVSP2Packet@@@Z:
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 4a 80	 mov	 ecx, DWORD PTR [edx-128]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetGuildUserListEx@ioGuildData@@QAEXAAVSP2Packet@@@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetGuildUserListEx@ioGuildData@@QAEXAAVSP2Packet@@@Z ENDP ; ioGuildData::SetGuildUserListEx
PUBLIC	?ChangeGuildMaster@ioGuildData@@QAEXK@Z		; ioGuildData::ChangeGuildMaster
EXTRN	__imp_??4ioHashString@@QAEAAV0@PBD@Z:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?ChangeGuildMaster@ioGuildData@@QAEXK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChangeGuildMaster@ioGuildData@@QAEXK@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ChangeGuildMaster@ioGuildData@@QAEXK@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ChangeGuildMaster@ioGuildData@@QAEXK@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ChangeGuildMaster@ioGuildData@@QAEXK@Z$3
__ehfuncinfo$?ChangeGuildMaster@ioGuildData@@QAEXK@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?ChangeGuildMaster@ioGuildData@@QAEXK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?ChangeGuildMaster@ioGuildData@@QAEXK@Z
_TEXT	SEGMENT
$T530778 = -96						; size = 16
$T530776 = -80						; size = 16
$T530774 = -64						; size = 16
$T530772 = -48						; size = 16
tv501 = -32						; size = 4
_this$ = -28						; size = 4
$T530768 = -24						; size = 4
tv490 = -20						; size = 4
$T530777 = -13						; size = 1
$T530775 = -13						; size = 1
$T530773 = -13						; size = 1
$T530771 = -13						; size = 1
__$EHRec$ = -12						; size = 12
$T530779 = 8						; size = 1
_dwGuildMasterIndex$ = 8				; size = 4
?ChangeGuildMaster@ioGuildData@@QAEXK@Z PROC		; ioGuildData::ChangeGuildMaster, COMDAT
; _this$ = ecx

; 484  : {

  00000	6a 54		 push	 84			; 00000054H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?ChangeGuildMaster@ioGuildData@@QAEXK@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d e4	 mov	 DWORD PTR _this$[ebp], edi

; 485  : 	ioLocalParent *pLocal = g_LocalMgr.GetLocal( ioLocalManager::GetLocalType() );

  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLocalType@ioLocalManagerParent@@SA?AW4LocalType@1@XZ
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?GetSingleton@ioLocalManager@@SAAAV1@XZ ; ioLocalManager::GetSingleton
  0001d	8b c8		 mov	 ecx, eax
  0001f	e8 00 00 00 00	 call	 ?GetLocal@ioLocalManager@@QAEPAVioLocalParent@@W4LocalType@ioLocalManagerParent@@@Z ; ioLocalManager::GetLocal

; 486  : 
; 487  : 	vGuildUser::iterator iter,iEnd;
; 488  : 	iEnd = m_vUserList.end();

  00024	8b 4f 5c	 mov	 ecx, DWORD PTR [edi+92]
  00027	8b f0		 mov	 esi, eax

; 489  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  00029	8b 47 58	 mov	 eax, DWORD PTR [edi+88]
  0002c	89 4d e8	 mov	 DWORD PTR $T530768[ebp], ecx
  0002f	3b c1		 cmp	 eax, ecx
  00031	0f 84 5d 01 00
	00		 je	 $LN10@ChangeGuil

; 485  : 	ioLocalParent *pLocal = g_LocalMgr.GetLocal( ioLocalManager::GetLocalType() );

  00037	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  0003d	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00043	83 c0 24	 add	 eax, 36			; 00000024H
  00046	89 45 ec	 mov	 DWORD PTR tv490[ebp], eax

; 489  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

$LL47@ChangeGuil:

; 490  : 	{
; 491  : 		GuildUser &kUserInfo = *iter;
; 492  : 
; 493  : 		if( pLocal )

  00049	85 f6		 test	 esi, esi
  0004b	0f 84 2d 01 00
	00		 je	 $LN11@ChangeGuil

; 494  : 		{
; 495  : 			if( kUserInfo.m_szUserPos == pLocal->GetGuildMasterPostion() )

  00051	8b 06		 mov	 eax, DWORD PTR [esi]
  00053	8b ce		 mov	 ecx, esi
  00055	ff 50 5c	 call	 DWORD PTR [eax+92]
  00058	50		 push	 eax
  00059	8d 4d d0	 lea	 ecx, DWORD PTR $T530772[ebp]
  0005c	ff d7		 call	 edi
  0005e	8b 4d ec	 mov	 ecx, DWORD PTR tv490[ebp]
  00061	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00065	8d 45 d0	 lea	 eax, DWORD PTR $T530772[ebp]
  00068	50		 push	 eax
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  0006f	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00073	8d 4d d0	 lea	 ecx, DWORD PTR $T530772[ebp]
  00076	88 45 f3	 mov	 BYTE PTR $T530771[ebp], al
  00079	ff d3		 call	 ebx
  0007b	80 7d f3 00	 cmp	 BYTE PTR $T530771[ebp], 0
  0007f	74 11		 je	 SHORT $LN8@ChangeGuil

; 496  : 			{
; 497  : 				kUserInfo.m_szUserPos = pLocal->GetGuildGeneralPosition();

  00081	8b 06		 mov	 eax, DWORD PTR [esi]
  00083	8b ce		 mov	 ecx, esi
  00085	ff 50 64	 call	 DWORD PTR [eax+100]
  00088	8b 4d ec	 mov	 ecx, DWORD PTR tv490[ebp]
  0008b	50		 push	 eax
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z
$LN8@ChangeGuil:

; 498  : 			}
; 499  : 			if( kUserInfo.m_dwUserIndex == dwGuildMasterIndex )

  00092	8b 45 ec	 mov	 eax, DWORD PTR tv490[ebp]
  00095	8b 40 e0	 mov	 eax, DWORD PTR [eax-32]
  00098	3b 45 08	 cmp	 eax, DWORD PTR _dwGuildMasterIndex$[ebp]
  0009b	75 11		 jne	 SHORT $LN7@ChangeGuil

; 500  : 			{
; 501  : 				kUserInfo.m_szUserPos = pLocal->GetGuildMasterPostion();

  0009d	8b 06		 mov	 eax, DWORD PTR [esi]
  0009f	8b ce		 mov	 ecx, esi
  000a1	ff 50 5c	 call	 DWORD PTR [eax+92]
  000a4	8b 4d ec	 mov	 ecx, DWORD PTR tv490[ebp]
  000a7	50		 push	 eax
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z
$LN7@ChangeGuil:

; 502  : 			}
; 503  : 
; 504  : 			if( kUserInfo.m_szUserPos == pLocal->GetGuildMasterPostion() )

  000ae	8b 06		 mov	 eax, DWORD PTR [esi]
  000b0	8b ce		 mov	 ecx, esi
  000b2	ff 50 5c	 call	 DWORD PTR [eax+92]
  000b5	50		 push	 eax
  000b6	8d 4d c0	 lea	 ecx, DWORD PTR $T530774[ebp]
  000b9	ff d7		 call	 edi
  000bb	8b 4d ec	 mov	 ecx, DWORD PTR tv490[ebp]
  000be	8d 45 c0	 lea	 eax, DWORD PTR $T530774[ebp]
  000c1	50		 push	 eax
  000c2	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  000cf	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000d3	8d 4d c0	 lea	 ecx, DWORD PTR $T530774[ebp]
  000d6	88 45 f3	 mov	 BYTE PTR $T530773[ebp], al
  000d9	ff d3		 call	 ebx
  000db	80 7d f3 00	 cmp	 BYTE PTR $T530773[ebp], 0
  000df	74 1c		 je	 SHORT $LN6@ChangeGuil

; 505  : 				kUserInfo.m_iSortPoint = FLOAT100;

  000e1	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  000e6	89 45 e0	 mov	 DWORD PTR tv501[ebp], eax
  000e9	db 45 e0	 fild	 DWORD PTR tv501[ebp]
  000ec	85 c0		 test	 eax, eax
  000ee	79 06		 jns	 SHORT $LN80@ChangeGuil
  000f0	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN80@ChangeGuil:
  000f6	e8 00 00 00 00	 call	 __ftol2_sse
  000fb	eb 7b		 jmp	 SHORT $LN81@ChangeGuil
$LN6@ChangeGuil:

; 506  : 			else if( kUserInfo.m_szUserPos == pLocal->GetGuildSecondMasterPosition() )

  000fd	8b 06		 mov	 eax, DWORD PTR [esi]
  000ff	8b ce		 mov	 ecx, esi
  00101	ff 50 60	 call	 DWORD PTR [eax+96]
  00104	50		 push	 eax
  00105	8d 4d b0	 lea	 ecx, DWORD PTR $T530776[ebp]
  00108	ff d7		 call	 edi
  0010a	8b 4d ec	 mov	 ecx, DWORD PTR tv490[ebp]
  0010d	8d 45 b0	 lea	 eax, DWORD PTR $T530776[ebp]
  00110	50		 push	 eax
  00111	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00118	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  0011e	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00122	8d 4d b0	 lea	 ecx, DWORD PTR $T530776[ebp]
  00125	88 45 f3	 mov	 BYTE PTR $T530775[ebp], al
  00128	ff d3		 call	 ebx
  0012a	80 7d f3 00	 cmp	 BYTE PTR $T530775[ebp], 0
  0012e	74 0c		 je	 SHORT $LN4@ChangeGuil

; 507  : 				kUserInfo.m_iSortPoint = 10;

  00130	8b 45 ec	 mov	 eax, DWORD PTR tv490[ebp]
  00133	c7 40 ec 0a 00
	00 00		 mov	 DWORD PTR [eax-20], 10	; 0000000aH
  0013a	eb 42		 jmp	 SHORT $LN11@ChangeGuil
$LN4@ChangeGuil:

; 508  : 			else if( kUserInfo.m_szUserPos == pLocal->GetGuildAdminPosition() )

  0013c	8b 06		 mov	 eax, DWORD PTR [esi]
  0013e	8b ce		 mov	 ecx, esi
  00140	ff 50 68	 call	 DWORD PTR [eax+104]
  00143	50		 push	 eax
  00144	8d 4d a0	 lea	 ecx, DWORD PTR $T530778[ebp]
  00147	ff d7		 call	 edi
  00149	8b 4d ec	 mov	 ecx, DWORD PTR tv490[ebp]
  0014c	8d 45 a0	 lea	 eax, DWORD PTR $T530778[ebp]
  0014f	50		 push	 eax
  00150	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00157	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  0015d	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00161	8d 4d a0	 lea	 ecx, DWORD PTR $T530778[ebp]
  00164	88 45 f3	 mov	 BYTE PTR $T530777[ebp], al
  00167	ff d3		 call	 ebx
  00169	33 c0		 xor	 eax, eax
  0016b	38 45 f3	 cmp	 BYTE PTR $T530777[ebp], al
  0016e	0f 95 c0	 setne	 al
  00171	8d 04 85 01 00
	00 00		 lea	 eax, DWORD PTR [eax*4+1]
$LN81@ChangeGuil:
  00178	8b 4d ec	 mov	 ecx, DWORD PTR tv490[ebp]
  0017b	89 41 ec	 mov	 DWORD PTR [ecx-20], eax
$LN11@ChangeGuil:

; 489  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  0017e	83 45 ec 38	 add	 DWORD PTR tv490[ebp], 56 ; 00000038H
  00182	8b 45 ec	 mov	 eax, DWORD PTR tv490[ebp]
  00185	83 c0 dc	 add	 eax, -36		; ffffffdcH
  00188	3b 45 e8	 cmp	 eax, DWORD PTR $T530768[ebp]
  0018b	0f 85 b8 fe ff
	ff		 jne	 $LL47@ChangeGuil
  00191	8b 7d e4	 mov	 edi, DWORD PTR _this$[ebp]
$LN10@ChangeGuil:

; 509  : 				kUserInfo.m_iSortPoint = 5;
; 510  : 			else
; 511  : 				kUserInfo.m_iSortPoint = 1;
; 512  : 		}
; 513  : 	}
; 514  : 	std::sort( m_vUserList.begin(), m_vUserList.end(), GuildUserSort() );

  00194	ff 75 08	 push	 DWORD PTR $T530779[ebp]
  00197	8b 47 5c	 mov	 eax, DWORD PTR [edi+92]
  0019a	8b 4f 58	 mov	 ecx, DWORD PTR [edi+88]
  0019d	50		 push	 eax
  0019e	51		 push	 ecx
  0019f	e8 00 00 00 00	 call	 ??$sort@V?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@VGuildUserSort@ioGuildData@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@0@0VGuildUserSort@ioGuildData@@@Z ; std::sort<std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >,ioGuildData::GuildUserSort>
  001a4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 515  : 	m_bUserListUpdate = true;

  001a7	c6 47 74 01	 mov	 BYTE PTR [edi+116], 1

; 516  : }

  001ab	e8 00 00 00 00	 call	 __EH_epilog3
  001b0	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChangeGuildMaster@ioGuildData@@QAEXK@Z$0:
  00000	8d 4d d0	 lea	 ecx, DWORD PTR $T530772[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?ChangeGuildMaster@ioGuildData@@QAEXK@Z$1:
  00009	8d 4d c0	 lea	 ecx, DWORD PTR $T530774[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?ChangeGuildMaster@ioGuildData@@QAEXK@Z$2:
  00012	8d 4d b0	 lea	 ecx, DWORD PTR $T530776[ebp]
  00015	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?ChangeGuildMaster@ioGuildData@@QAEXK@Z$3:
  0001b	8d 4d a0	 lea	 ecx, DWORD PTR $T530778[ebp]
  0001e	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?ChangeGuildMaster@ioGuildData@@QAEXK@Z:
  00024	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00028	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002b	8b 4a 9c	 mov	 ecx, DWORD PTR [edx-100]
  0002e	33 c8		 xor	 ecx, eax
  00030	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00035	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ChangeGuildMaster@ioGuildData@@QAEXK@Z
  0003a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ChangeGuildMaster@ioGuildData@@QAEXK@Z ENDP		; ioGuildData::ChangeGuildMaster
PUBLIC	?ChangeGuildPosition@ioGuildData@@QAEXKABVioHashString@@@Z ; ioGuildData::ChangeGuildPosition
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?ChangeGuildPosition@ioGuildData@@QAEXKABVioHashString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChangeGuildPosition@ioGuildData@@QAEXKABVioHashString@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ChangeGuildPosition@ioGuildData@@QAEXKABVioHashString@@@Z$1
__ehfuncinfo$?ChangeGuildPosition@ioGuildData@@QAEXKABVioHashString@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?ChangeGuildPosition@ioGuildData@@QAEXKABVioHashString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?ChangeGuildPosition@ioGuildData@@QAEXKABVioHashString@@@Z
_TEXT	SEGMENT
$T530963 = -64						; size = 16
$T530961 = -48						; size = 16
tv461 = -32						; size = 4
_this$ = -28						; size = 4
$T530957 = -24						; size = 4
_pLocal$ = -20						; size = 4
$T530962 = -13						; size = 1
$T530960 = -13						; size = 1
__$EHRec$ = -12						; size = 12
$T530964 = 8						; size = 1
_dwTargetIndex$ = 8					; size = 4
_szChangePosition$ = 12					; size = 4
?ChangeGuildPosition@ioGuildData@@QAEXKABVioHashString@@@Z PROC ; ioGuildData::ChangeGuildPosition, COMDAT
; _this$ = ecx

; 519  : {

  00000	6a 34		 push	 52			; 00000034H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?ChangeGuildPosition@ioGuildData@@QAEXKABVioHashString@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d e4	 mov	 DWORD PTR _this$[ebp], edi

; 520  : 	ioLocalParent *pLocal = g_LocalMgr.GetLocal( ioLocalManager::GetLocalType() );

  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLocalType@ioLocalManagerParent@@SA?AW4LocalType@1@XZ
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?GetSingleton@ioLocalManager@@SAAAV1@XZ ; ioLocalManager::GetSingleton
  0001d	8b c8		 mov	 ecx, eax
  0001f	e8 00 00 00 00	 call	 ?GetLocal@ioLocalManager@@QAEPAVioLocalParent@@W4LocalType@ioLocalManagerParent@@@Z ; ioLocalManager::GetLocal

; 521  : 
; 522  : 	vGuildUser::iterator iter,iEnd;
; 523  : 	iEnd = m_vUserList.end();
; 524  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  00024	8b 77 58	 mov	 esi, DWORD PTR [edi+88]
  00027	89 45 ec	 mov	 DWORD PTR _pLocal$[ebp], eax
  0002a	8b 47 5c	 mov	 eax, DWORD PTR [edi+92]
  0002d	89 45 e8	 mov	 DWORD PTR $T530957[ebp], eax
  00030	3b f0		 cmp	 esi, eax
  00032	0f 84 c5 00 00
	00		 je	 $LN7@ChangeGuil@2

; 520  : 	ioLocalParent *pLocal = g_LocalMgr.GetLocal( ioLocalManager::GetLocalType() );

  00038	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  0003e	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00044	83 c6 24	 add	 esi, 36			; 00000024H

; 521  : 
; 522  : 	vGuildUser::iterator iter,iEnd;
; 523  : 	iEnd = m_vUserList.end();
; 524  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

$LL42@ChangeGuil@2:

; 525  : 	{
; 526  : 		GuildUser &kUserInfo = *iter;
; 527  : 		if( kUserInfo.m_dwUserIndex == dwTargetIndex )

  00047	8b 46 e0	 mov	 eax, DWORD PTR [esi-32]
  0004a	3b 45 08	 cmp	 eax, DWORD PTR _dwTargetIndex$[ebp]
  0004d	75 0b		 jne	 SHORT $LN6@ChangeGuil@2

; 528  : 		{
; 529  : 			kUserInfo.m_szUserPos = szChangePosition;

  0004f	ff 75 0c	 push	 DWORD PTR _szChangePosition$[ebp]
  00052	8b ce		 mov	 ecx, esi
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
$LN6@ChangeGuil@2:

; 530  : 		}
; 531  : 
; 532  : 		if( pLocal )

  0005a	8b 4d ec	 mov	 ecx, DWORD PTR _pLocal$[ebp]
  0005d	85 c9		 test	 ecx, ecx
  0005f	0f 84 86 00 00
	00		 je	 $LN8@ChangeGuil@2

; 533  : 		{
; 534  : 			if( kUserInfo.m_szUserPos == pLocal->GetGuildMasterPostion() )

  00065	8b 01		 mov	 eax, DWORD PTR [ecx]
  00067	ff 50 5c	 call	 DWORD PTR [eax+92]
  0006a	50		 push	 eax
  0006b	8d 4d d0	 lea	 ecx, DWORD PTR $T530961[ebp]
  0006e	ff d7		 call	 edi
  00070	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00074	8d 45 d0	 lea	 eax, DWORD PTR $T530961[ebp]
  00077	50		 push	 eax
  00078	8b ce		 mov	 ecx, esi
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00080	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00084	8d 4d d0	 lea	 ecx, DWORD PTR $T530961[ebp]
  00087	88 45 f3	 mov	 BYTE PTR $T530960[ebp], al
  0008a	ff d3		 call	 ebx
  0008c	80 7d f3 00	 cmp	 BYTE PTR $T530960[ebp], 0
  00090	74 1c		 je	 SHORT $LN4@ChangeGuil@2

; 535  : 				kUserInfo.m_iSortPoint = FLOAT100;

  00092	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  00097	89 45 e0	 mov	 DWORD PTR tv461[ebp], eax
  0009a	db 45 e0	 fild	 DWORD PTR tv461[ebp]
  0009d	85 c0		 test	 eax, eax
  0009f	79 06		 jns	 SHORT $LN75@ChangeGuil@2
  000a1	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN75@ChangeGuil@2:
  000a7	e8 00 00 00 00	 call	 __ftol2_sse
  000ac	eb 3a		 jmp	 SHORT $LN76@ChangeGuil@2
$LN4@ChangeGuil@2:

; 536  : 			else if( kUserInfo.m_szUserPos == pLocal->GetGuildSecondMasterPosition() )

  000ae	8b 4d ec	 mov	 ecx, DWORD PTR _pLocal$[ebp]
  000b1	8b 01		 mov	 eax, DWORD PTR [ecx]
  000b3	ff 50 60	 call	 DWORD PTR [eax+96]
  000b6	50		 push	 eax
  000b7	8d 4d c0	 lea	 ecx, DWORD PTR $T530963[ebp]
  000ba	ff d7		 call	 edi
  000bc	8d 45 c0	 lea	 eax, DWORD PTR $T530963[ebp]
  000bf	50		 push	 eax
  000c0	8b ce		 mov	 ecx, esi
  000c2	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  000cf	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000d3	8d 4d c0	 lea	 ecx, DWORD PTR $T530963[ebp]
  000d6	88 45 f3	 mov	 BYTE PTR $T530962[ebp], al
  000d9	ff d3		 call	 ebx
  000db	33 c0		 xor	 eax, eax
  000dd	38 45 f3	 cmp	 BYTE PTR $T530962[ebp], al
  000e0	0f 94 c0	 sete	 al
  000e3	48		 dec	 eax
  000e4	83 e0 09	 and	 eax, 9
  000e7	40		 inc	 eax
$LN76@ChangeGuil@2:
  000e8	89 46 ec	 mov	 DWORD PTR [esi-20], eax
$LN8@ChangeGuil@2:

; 521  : 
; 522  : 	vGuildUser::iterator iter,iEnd;
; 523  : 	iEnd = m_vUserList.end();
; 524  : 	for(iter = m_vUserList.begin();iter != iEnd;iter++)

  000eb	83 c6 38	 add	 esi, 56			; 00000038H
  000ee	8d 46 dc	 lea	 eax, DWORD PTR [esi-36]
  000f1	3b 45 e8	 cmp	 eax, DWORD PTR $T530957[ebp]
  000f4	0f 85 4d ff ff
	ff		 jne	 $LL42@ChangeGuil@2
  000fa	8b 7d e4	 mov	 edi, DWORD PTR _this$[ebp]
$LN7@ChangeGuil@2:

; 537  : 				kUserInfo.m_iSortPoint = 10;
; 538  : 			else
; 539  : 				kUserInfo.m_iSortPoint = 1;
; 540  : 		}
; 541  : 	}
; 542  : 
; 543  : 	std::sort( m_vUserList.begin(), m_vUserList.end(), GuildUserSort() );

  000fd	ff 75 08	 push	 DWORD PTR $T530964[ebp]
  00100	8b 47 5c	 mov	 eax, DWORD PTR [edi+92]
  00103	8b 4f 58	 mov	 ecx, DWORD PTR [edi+88]
  00106	50		 push	 eax
  00107	51		 push	 ecx
  00108	e8 00 00 00 00	 call	 ??$sort@V?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@std@@VGuildUserSort@ioGuildData@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@UGuildUser@ioGuildData@@V?$allocator@UGuildUser@ioGuildData@@@std@@@std@@@0@0VGuildUserSort@ioGuildData@@@Z ; std::sort<std::_Vector_iterator<std::_Vector_val<ioGuildData::GuildUser,std::allocator<ioGuildData::GuildUser> > >,ioGuildData::GuildUserSort>
  0010d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 544  : 	m_bUserListUpdate = true;	

  00110	c6 47 74 01	 mov	 BYTE PTR [edi+116], 1

; 545  : }

  00114	e8 00 00 00 00	 call	 __EH_epilog3
  00119	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChangeGuildPosition@ioGuildData@@QAEXKABVioHashString@@@Z$0:
  00000	8d 4d d0	 lea	 ecx, DWORD PTR $T530961[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?ChangeGuildPosition@ioGuildData@@QAEXKABVioHashString@@@Z$1:
  00009	8d 4d c0	 lea	 ecx, DWORD PTR $T530963[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?ChangeGuildPosition@ioGuildData@@QAEXKABVioHashString@@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a bc	 mov	 ecx, DWORD PTR [edx-68]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ChangeGuildPosition@ioGuildData@@QAEXKABVioHashString@@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ChangeGuildPosition@ioGuildData@@QAEXKABVioHashString@@@Z ENDP ; ioGuildData::ChangeGuildPosition
PUBLIC	??1GuildRankRwardInfo@@QAE@XZ			; GuildRankRwardInfo::~GuildRankRwardInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1GuildRankRwardInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1GuildRankRwardInfo@@QAE@XZ$0
__ehfuncinfo$??1GuildRankRwardInfo@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1GuildRankRwardInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1GuildRankRwardInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1GuildRankRwardInfo@@QAE@XZ PROC			; GuildRankRwardInfo::~GuildRankRwardInfo, COMDAT
; _this$ = ecx
  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1GuildRankRwardInfo@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00015	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  00018	e8 00 00 00 00	 call	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy
  0001d	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00021	8b ce		 mov	 ecx, esi
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00029	e8 00 00 00 00	 call	 __EH_epilog3
  0002e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1GuildRankRwardInfo@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??1GuildRankRwardInfo@@QAE@XZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1GuildRankRwardInfo@@QAE@XZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1GuildRankRwardInfo@@QAE@XZ ENDP			; GuildRankRwardInfo::~GuildRankRwardInfo
PUBLIC	??1GuildAttendRwardInfo@@QAE@XZ			; GuildAttendRwardInfo::~GuildAttendRwardInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1GuildAttendRwardInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1GuildAttendRwardInfo@@QAE@XZ$0
__ehfuncinfo$??1GuildAttendRwardInfo@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1GuildAttendRwardInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1GuildAttendRwardInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1GuildAttendRwardInfo@@QAE@XZ PROC			; GuildAttendRwardInfo::~GuildAttendRwardInfo, COMDAT
; _this$ = ecx
  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1GuildAttendRwardInfo@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00015	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  00018	e8 00 00 00 00	 call	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy
  0001d	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00021	8b ce		 mov	 ecx, esi
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00029	e8 00 00 00 00	 call	 __EH_epilog3
  0002e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1GuildAttendRwardInfo@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??1GuildAttendRwardInfo@@QAE@XZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1GuildAttendRwardInfo@@QAE@XZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1GuildAttendRwardInfo@@QAE@XZ ENDP			; GuildAttendRwardInfo::~GuildAttendRwardInfo
PUBLIC	??_C@_0N@BDMHOBDM@renewal_hour?$AA@		; `string'
PUBLIC	??_C@_0BM@KDJOGHGC@config?1sp2_guild_reward?4ini?$AA@ ; `string'
PUBLIC	?Initialize@ioGuildInfo@@QAEXXZ			; ioGuildInfo::Initialize
EXTRN	__imp_?SetFileName@ioINILoader@@QAEXPBD_N@Z:PROC
;	COMDAT ??_C@_0N@BDMHOBDM@renewal_hour?$AA@
CONST	SEGMENT
??_C@_0N@BDMHOBDM@renewal_hour?$AA@ DB 'renewal_hour', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KDJOGHGC@config?1sp2_guild_reward?4ini?$AA@
CONST	SEGMENT
??_C@_0BM@KDJOGHGC@config?1sp2_guild_reward?4ini?$AA@ DB 'config/sp2_guil'
	DB	'd_reward.ini', 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Initialize@ioGuildInfo@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Initialize@ioGuildInfo@@QAEXXZ$0
__ehfuncinfo$?Initialize@ioGuildInfo@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Initialize@ioGuildInfo@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?Initialize@ioGuildInfo@@QAEXXZ
_TEXT	SEGMENT
$T531177 = -1232					; size = 4
$T532578 = -1228					; size = 4
$T532237 = -1228					; size = 4
_iMaxEntry$ = -1228					; size = 4
_value$532173 = -1224					; size = 4
_value$532043 = -1224					; size = 4
_i$509178 = -1224					; size = 4
_kLoader$ = -1220					; size = 912
_szKey$ = -308						; size = 260
__k$531818 = -48					; size = 25
__k$531693 = -48					; size = 23
__k$531943 = -44					; size = 20
__k$531568 = -44					; size = 18
__k$532169 = -40					; size = 17
__k$532395 = -36					; size = 12
__t$532270 = -36					; size = 12
___encStr$509185 = -36					; size = 13
__t$532625 = -32					; size = 7
__t$531430 = -28					; size = 5
__$EHRec$ = -12						; size = 12
?Initialize@ioGuildInfo@@QAEXXZ PROC			; ioGuildInfo::Initialize, COMDAT
; _this$ = ecx

; 773  : {

  00000	68 c4 04 00 00	 push	 1220			; 000004c4H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?Initialize@ioGuildInfo@@QAEXXZ
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000f	8b f9		 mov	 edi, ecx

; 774  : 	InitMyGuildData();

  00011	e8 00 00 00 00	 call	 ?InitMyGuildData@ioGuildInfo@@QAEXXZ ; ioGuildInfo::InitMyGuildData

; 775  : 
; 776  : 	ioINILoader_e kLoader( "config/sp2_guild.ini" );

  00016	33 db		 xor	 ebx, ebx
  00018	6a 05		 push	 5
  0001a	c7 85 8c fe ff
	ff 8e 83 85 8c	 mov	 DWORD PTR _kLoader$[ebp+848], -1937407090 ; 8c85838eH
  00024	c7 85 90 fe ff
	ff 84 8b c4 99	 mov	 DWORD PTR _kLoader$[ebp+852], -1715172476 ; 99c48b84H
  0002e	c7 85 94 fe ff
	ff 9d de b4 8d	 mov	 DWORD PTR _kLoader$[ebp+856], -1917526371 ; 8db4de9dH
  00038	c7 85 98 fe ff
	ff 98 85 87 8e	 mov	 DWORD PTR _kLoader$[ebp+860], -1903721064 ; 8e878598H
  00042	c7 85 9c fe ff
	ff c3 85 85 83	 mov	 DWORD PTR _kLoader$[ebp+864], -2088401469 ; 838585c3H
  0004c	8d 85 8c fe ff
	ff		 lea	 eax, DWORD PTR _kLoader$[ebp+848]
  00052	88 9d a0 fe ff
	ff		 mov	 BYTE PTR _kLoader$[ebp+868], bl
  00058	59		 pop	 ecx
$LL212@Initialize:
  00059	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0005f	83 c0 04	 add	 eax, 4
  00062	49		 dec	 ecx
  00063	75 f4		 jne	 SHORT $LL212@Initialize
  00065	6a 01		 push	 1
  00067	8d 85 8c fe ff
	ff		 lea	 eax, DWORD PTR _kLoader$[ebp+848]
  0006d	50		 push	 eax
  0006e	8d 8d 3c fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00074	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@PBD_N@Z

; 777  : 	kLoader.SetTitle_e( "info" );

  0007a	8d 45 e4	 lea	 eax, DWORD PTR __t$531430[ebp]
  0007d	c7 45 e4 84 82
	8d 85		 mov	 DWORD PTR __t$531430[ebp], -2054323580 ; 858d8284H
  00084	be ed ec eb ea	 mov	 esi, -353637139		; eaebecedH
  00089	31 75 e4	 xor	 DWORD PTR __t$531430[ebp], esi
  0008c	50		 push	 eax
  0008d	8d 8d 3c fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00093	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00096	88 5d e8	 mov	 BYTE PTR __t$531430[ebp+4], bl
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z
  0009f	6a 04		 push	 4

; 778  : 	m_iGuildCreatePeso = kLoader.LoadInt_e( "guild_create_peso", 25000 );

  000a1	c7 45 d4 8a 99
	82 86		 mov	 DWORD PTR __k$531568[ebp], -2038261366 ; 8682998aH
  000a8	c7 45 d8 89 b3
	88 98		 mov	 DWORD PTR __k$531568[ebp+4], -1735871607 ; 9888b389H
  000af	c7 45 dc 88 8d
	9f 8f		 mov	 DWORD PTR __k$531568[ebp+8], -1885368952 ; 8f9f8d88H
  000b6	c7 45 e0 b2 9c
	8e 99		 mov	 DWORD PTR __k$531568[ebp+12], -1718707022 ; 998e9cb2H
  000bd	8d 45 d4	 lea	 eax, DWORD PTR __k$531568[ebp]
  000c0	66 c7 45 e4 82
	00		 mov	 WORD PTR __k$531568[ebp+16], 130 ; 00000082H
  000c6	59		 pop	 ecx
$LL424@Initialize:
  000c7	31 30		 xor	 DWORD PTR [eax], esi
  000c9	83 c0 04	 add	 eax, 4
  000cc	49		 dec	 ecx
  000cd	75 f8		 jne	 SHORT $LL424@Initialize
  000cf	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z
  000d5	80 75 e4 ed	 xor	 BYTE PTR __k$531568[ebp+16], -19 ; ffffffedH
  000d9	68 a8 61 00 00	 push	 25000			; 000061a8H
  000de	8d 45 d4	 lea	 eax, DWORD PTR __k$531568[ebp]
  000e1	50		 push	 eax
  000e2	8d 8d 3c fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  000e8	ff d6		 call	 esi
  000ea	6a 05		 push	 5
  000ec	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 779  : 	m_iGuildMarkChangePeso = kLoader.LoadInt_e( "guild_mark_change_peso", 25000  );

  000ef	c7 45 d0 8a 99
	82 86		 mov	 DWORD PTR __k$531693[ebp], -2038261366 ; 8682998aH
  000f6	c7 45 d4 89 b3
	86 8b		 mov	 DWORD PTR __k$531693[ebp+4], -1954106487 ; 8b86b389H
  000fd	c7 45 d8 9f 87
	b4 89		 mov	 DWORD PTR __k$531693[ebp+8], -1984657505 ; 89b4879fH
  00104	c7 45 dc 85 8d
	85 8d		 mov	 DWORD PTR __k$531693[ebp+12], -1920627323 ; 8d858d85H
  0010b	c7 45 e0 88 b3
	9b 8f		 mov	 DWORD PTR __k$531693[ebp+16], -1885621368 ; 8f9bb388H
  00112	66 c7 45 e4 9e
	83		 mov	 WORD PTR __k$531693[ebp+20], 33694 ; 0000839eH
  00118	8d 45 d0	 lea	 eax, DWORD PTR __k$531693[ebp]
  0011b	88 5d e6	 mov	 BYTE PTR __k$531693[ebp+22], bl
  0011e	59		 pop	 ecx
$LL530@Initialize:
  0011f	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00125	83 c0 04	 add	 eax, 4
  00128	49		 dec	 ecx
  00129	75 f4		 jne	 SHORT $LL530@Initialize
  0012b	6a 14		 push	 20			; 00000014H
  0012d	58		 pop	 eax
$LL527@Initialize:
  0012e	8b c8		 mov	 ecx, eax
  00130	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00136	79 05		 jns	 SHORT $LN1268@Initialize
  00138	49		 dec	 ecx
  00139	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0013c	41		 inc	 ecx
$LN1268@Initialize:
  0013d	b2 ed		 mov	 dl, -19			; ffffffedH
  0013f	2a d1		 sub	 dl, cl
  00141	30 54 05 d0	 xor	 BYTE PTR __k$531693[ebp+eax], dl
  00145	40		 inc	 eax
  00146	83 f8 16	 cmp	 eax, 22			; 00000016H
  00149	7c e3		 jl	 SHORT $LL527@Initialize
  0014b	68 a8 61 00 00	 push	 25000			; 000061a8H
  00150	8d 45 d0	 lea	 eax, DWORD PTR __k$531693[ebp]
  00153	50		 push	 eax
  00154	8d 8d 3c fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  0015a	ff d6		 call	 esi
  0015c	6a 06		 push	 6
  0015e	89 47 08	 mov	 DWORD PTR [edi+8], eax

; 780  : 	m_iGuildCreateLimitLevel = kLoader.LoadInt_e( "guild_create_limit_level", 10 );

  00161	c7 45 d0 8a 99
	82 86		 mov	 DWORD PTR __k$531818[ebp], -2038261366 ; 8682998aH
  00168	c7 45 d4 89 b3
	88 98		 mov	 DWORD PTR __k$531818[ebp+4], -1735871607 ; 9888b389H
  0016f	c7 45 d8 88 8d
	9f 8f		 mov	 DWORD PTR __k$531818[ebp+8], -1885368952 ; 8f9f8d88H
  00176	c7 45 dc b2 80
	82 87		 mov	 DWORD PTR __k$531818[ebp+12], -2021490510 ; 878280b2H
  0017d	c7 45 e0 84 98
	b4 86		 mov	 DWORD PTR __k$531818[ebp+16], -2034984828 ; 86b49884H
  00184	c7 45 e4 88 9a
	8e 86		 mov	 DWORD PTR __k$531818[ebp+20], -2037474680 ; 868e9a88H
  0018b	8d 45 d0	 lea	 eax, DWORD PTR __k$531818[ebp]
  0018e	88 5d e8	 mov	 BYTE PTR __k$531818[ebp+24], bl
  00191	59		 pop	 ecx
$LL636@Initialize:
  00192	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00198	83 c0 04	 add	 eax, 4
  0019b	49		 dec	 ecx
  0019c	75 f4		 jne	 SHORT $LL636@Initialize
  0019e	6a 0a		 push	 10			; 0000000aH
  001a0	8d 45 d0	 lea	 eax, DWORD PTR __k$531818[ebp]
  001a3	50		 push	 eax
  001a4	8d 8d 3c fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  001aa	ff d6		 call	 esi
  001ac	6a 04		 push	 4
  001ae	89 47 0c	 mov	 DWORD PTR [edi+12], eax

; 781  : 	m_iGuildKickOutPeso = kLoader.LoadInt_e( "guild_kick_out_peso", 1000 );

  001b1	c7 45 d4 8a 99
	82 86		 mov	 DWORD PTR __k$531943[ebp], -2038261366 ; 8682998aH
  001b8	c7 45 d8 89 b3
	80 83		 mov	 DWORD PTR __k$531943[ebp+4], -2088717431 ; 8380b389H
  001bf	c7 45 dc 8e 87
	b4 85		 mov	 DWORD PTR __k$531943[ebp+8], -2051766386 ; 85b4878eH
  001c6	c7 45 e0 98 98
	b4 9a		 mov	 DWORD PTR __k$531943[ebp+12], -1699440488 ; 9ab49898H
  001cd	8d 45 d4	 lea	 eax, DWORD PTR __k$531943[ebp]
  001d0	c7 45 e4 88 9f
	84 00		 mov	 DWORD PTR __k$531943[ebp+16], 8691592 ; 00849f88H
  001d7	59		 pop	 ecx
$LL742@Initialize:
  001d8	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001de	83 c0 04	 add	 eax, 4
  001e1	49		 dec	 ecx
  001e2	75 f4		 jne	 SHORT $LL742@Initialize
  001e4	6a 10		 push	 16			; 00000010H
  001e6	58		 pop	 eax
$LL739@Initialize:
  001e7	8b c8		 mov	 ecx, eax
  001e9	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  001ef	79 05		 jns	 SHORT $LN1269@Initialize
  001f1	49		 dec	 ecx
  001f2	83 c9 fc	 or	 ecx, -4			; fffffffcH
  001f5	41		 inc	 ecx
$LN1269@Initialize:
  001f6	b2 ed		 mov	 dl, -19			; ffffffedH
  001f8	2a d1		 sub	 dl, cl
  001fa	30 54 05 d4	 xor	 BYTE PTR __k$531943[ebp+eax], dl
  001fe	40		 inc	 eax
  001ff	83 f8 13	 cmp	 eax, 19			; 00000013H
  00202	7c e3		 jl	 SHORT $LL739@Initialize
  00204	68 e8 03 00 00	 push	 1000			; 000003e8H
  00209	8d 45 d4	 lea	 eax, DWORD PTR __k$531943[ebp]
  0020c	50		 push	 eax
  0020d	8d 8d 3c fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00213	ff d6		 call	 esi
  00215	89 85 38 fb ff
	ff		 mov	 DWORD PTR _value$532043[ebp], eax
  0021b	8d 85 38 fb ff
	ff		 lea	 eax, DWORD PTR _value$532043[ebp]
  00221	50		 push	 eax
  00222	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00225	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool
  0022a	6a 04		 push	 4

; 782  : 	m_iGuildLeavePeso = kLoader.LoadInt_e( "guild_leave_peso", 1000 );

  0022c	c7 45 d8 8a 99
	82 86		 mov	 DWORD PTR __k$532169[ebp], -2038261366 ; 8682998aH
  00233	c7 45 dc 89 b3
	87 8f		 mov	 DWORD PTR __k$532169[ebp+4], -1886932087 ; 8f87b389H
  0023a	c7 45 e0 8c 9a
	8e b5		 mov	 DWORD PTR __k$532169[ebp+8], -1248945524 ; b58e9a8cH
  00241	c7 45 e4 9d 89
	98 85		 mov	 DWORD PTR __k$532169[ebp+12], -2053600867 ; 8598899dH
  00248	8d 45 d8	 lea	 eax, DWORD PTR __k$532169[ebp]
  0024b	88 5d e8	 mov	 BYTE PTR __k$532169[ebp+16], bl
  0024e	59		 pop	 ecx
$LL850@Initialize:
  0024f	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00255	83 c0 04	 add	 eax, 4
  00258	49		 dec	 ecx
  00259	75 f4		 jne	 SHORT $LL850@Initialize
  0025b	68 e8 03 00 00	 push	 1000			; 000003e8H
  00260	8d 45 d8	 lea	 eax, DWORD PTR __k$532169[ebp]
  00263	50		 push	 eax
  00264	8d 8d 3c fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  0026a	ff d6		 call	 esi
  0026c	89 85 38 fb ff
	ff		 mov	 DWORD PTR _value$532173[ebp], eax
  00272	8d 85 38 fb ff
	ff		 lea	 eax, DWORD PTR _value$532173[ebp]
  00278	50		 push	 eax
  00279	8d 4f 40	 lea	 ecx, DWORD PTR [edi+64]
  0027c	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 783  : 
; 784  : 	char szKey[MAX_PATH] = "";

  00281	68 03 01 00 00	 push	 259			; 00000103H
  00286	8d 85 cd fe ff
	ff		 lea	 eax, DWORD PTR _szKey$[ebp+1]
  0028c	53		 push	 ebx
  0028d	50		 push	 eax
  0028e	88 9d cc fe ff
	ff		 mov	 BYTE PTR _szKey$[ebp], bl
  00294	e8 00 00 00 00	 call	 _memset

; 785  : 	m_dwLevelToEntryCount.clear();

  00299	8d 4f 70	 lea	 ecx, DWORD PTR [edi+112]
  0029c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0029f	8b 11		 mov	 edx, DWORD PTR [ecx]
  002a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  002a4	50		 push	 eax
  002a5	52		 push	 edx
  002a6	8d 85 34 fb ff
	ff		 lea	 eax, DWORD PTR $T532237[ebp]
  002ac	50		 push	 eax
  002ad	e8 00 00 00 00	 call	 ?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::erase
  002b2	6a 02		 push	 2

; 786  : 	kLoader.SetTitle_e( "guild_entry" );

  002b4	c7 45 dc 8a 99
	82 86		 mov	 DWORD PTR __t$532270[ebp], -2038261366 ; 8682998aH
  002bb	c7 45 e0 89 b3
	8e 84		 mov	 DWORD PTR __t$532270[ebp+4], -2071022711 ; 848eb389H
  002c2	8d 45 dc	 lea	 eax, DWORD PTR __t$532270[ebp]
  002c5	c7 45 e4 99 9e
	92 00		 mov	 DWORD PTR __t$532270[ebp+8], 9608857 ; 00929e99H
  002cc	59		 pop	 ecx
$LL976@Initialize:
  002cd	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  002d3	83 c0 04	 add	 eax, 4
  002d6	49		 dec	 ecx
  002d7	75 f4		 jne	 SHORT $LL976@Initialize
  002d9	6a 08		 push	 8
  002db	58		 pop	 eax
$LL973@Initialize:
  002dc	8b c8		 mov	 ecx, eax
  002de	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  002e4	79 05		 jns	 SHORT $LN1270@Initialize
  002e6	49		 dec	 ecx
  002e7	83 c9 fc	 or	 ecx, -4			; fffffffcH
  002ea	41		 inc	 ecx
$LN1270@Initialize:
  002eb	b2 ed		 mov	 dl, -19			; ffffffedH
  002ed	2a d1		 sub	 dl, cl
  002ef	30 54 05 dc	 xor	 BYTE PTR __t$532270[ebp+eax], dl
  002f3	40		 inc	 eax
  002f4	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  002f7	7c e3		 jl	 SHORT $LL973@Initialize
  002f9	8d 45 dc	 lea	 eax, DWORD PTR __t$532270[ebp]
  002fc	50		 push	 eax
  002fd	8d 8d 3c fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00303	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z
  00309	6a 02		 push	 2

; 787  : 	int iMaxEntry = kLoader.LoadInt_e( "entry_count", 0 );

  0030b	c7 45 dc 88 82
	9f 98		 mov	 DWORD PTR __k$532395[ebp], -1734376824 ; 989f8288H
  00312	c7 45 e0 94 b3
	88 85		 mov	 DWORD PTR __k$532395[ebp+4], -2054638700 ; 8588b394H
  00319	8d 45 dc	 lea	 eax, DWORD PTR __k$532395[ebp]
  0031c	c7 45 e4 98 82
	9f 00		 mov	 DWORD PTR __k$532395[ebp+8], 10453656 ; 009f8298H
  00323	59		 pop	 ecx
$LL1082@Initialize:
  00324	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0032a	83 c0 04	 add	 eax, 4
  0032d	49		 dec	 ecx
  0032e	75 f4		 jne	 SHORT $LL1082@Initialize
  00330	6a 08		 push	 8
  00332	58		 pop	 eax
$LL1079@Initialize:
  00333	8b c8		 mov	 ecx, eax
  00335	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0033b	79 05		 jns	 SHORT $LN1271@Initialize
  0033d	49		 dec	 ecx
  0033e	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00341	41		 inc	 ecx
$LN1271@Initialize:
  00342	b2 ed		 mov	 dl, -19			; ffffffedH
  00344	2a d1		 sub	 dl, cl
  00346	30 54 05 dc	 xor	 BYTE PTR __k$532395[ebp+eax], dl
  0034a	40		 inc	 eax
  0034b	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  0034e	7c e3		 jl	 SHORT $LL1079@Initialize
  00350	53		 push	 ebx
  00351	8d 45 dc	 lea	 eax, DWORD PTR __k$532395[ebp]
  00354	50		 push	 eax
  00355	8d 8d 3c fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  0035b	ff d6		 call	 esi
  0035d	89 85 34 fb ff
	ff		 mov	 DWORD PTR _iMaxEntry$[ebp], eax

; 788  : 	for(int i = 0;i < iMaxEntry;i++)

  00363	89 9d 38 fb ff
	ff		 mov	 DWORD PTR _i$509178[ebp], ebx
  00369	3b c3		 cmp	 eax, ebx
  0036b	7e 7e		 jle	 SHORT $LN100@Initialize
$LN102@Initialize:

; 787  : 	int iMaxEntry = kLoader.LoadInt_e( "entry_count", 0 );

  0036d	6a 03		 push	 3

; 789  : 	{
; 790  : 		// 레벨에 따른 최대 인원
; 791  : 		sprintf_e( szKey, "max_entry_%d", i );

  0036f	c7 45 dc 80 8d
	93 b5		 mov	 DWORD PTR ___encStr$509185[ebp], -1248621184 ; b5938d80H
  00376	c7 45 e0 88 82
	9f 98		 mov	 DWORD PTR ___encStr$509185[ebp+4], -1734376824 ; 989f8288H
  0037d	c7 45 e4 94 b3
	ce 8e		 mov	 DWORD PTR ___encStr$509185[ebp+8], -1899056236 ; 8eceb394H
  00384	8d 45 dc	 lea	 eax, DWORD PTR ___encStr$509185[ebp]
  00387	88 5d e8	 mov	 BYTE PTR ___encStr$509185[ebp+12], bl
  0038a	59		 pop	 ecx
$LL1090@Initialize:
  0038b	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00391	83 c0 04	 add	 eax, 4
  00394	49		 dec	 ecx
  00395	75 f4		 jne	 SHORT $LL1090@Initialize
  00397	ff b5 38 fb ff
	ff		 push	 DWORD PTR _i$509178[ebp]
  0039d	8d 45 dc	 lea	 eax, DWORD PTR ___encStr$509185[ebp]
  003a0	50		 push	 eax
  003a1	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR _szKey$[ebp]
  003a7	50		 push	 eax
  003a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  003ae	83 c4 0c	 add	 esp, 12			; 0000000cH

; 792  : 		m_dwLevelToEntryCount.push_back( (DWORD)kLoader.LoadInt( szKey, 8 ) );

  003b1	6a 08		 push	 8
  003b3	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR _szKey$[ebp]
  003b9	50		 push	 eax
  003ba	8d 8d 3c fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  003c0	ff d6		 call	 esi
  003c2	89 85 30 fb ff
	ff		 mov	 DWORD PTR $T531177[ebp], eax
  003c8	8d 85 30 fb ff
	ff		 lea	 eax, DWORD PTR $T531177[ebp]
  003ce	50		 push	 eax
  003cf	8d 4f 70	 lea	 ecx, DWORD PTR [edi+112]
  003d2	e8 00 00 00 00	 call	 ?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEX$$QAK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back
  003d7	ff 85 38 fb ff
	ff		 inc	 DWORD PTR _i$509178[ebp]
  003dd	8b 85 38 fb ff
	ff		 mov	 eax, DWORD PTR _i$509178[ebp]
  003e3	3b 85 34 fb ff
	ff		 cmp	 eax, DWORD PTR _iMaxEntry$[ebp]
  003e9	7c 82		 jl	 SHORT $LN102@Initialize
$LN100@Initialize:

; 793  : 	}
; 794  : 
; 795  : 	m_vInvitationUser.clear();

  003eb	8d 8f c4 00 00
	00		 lea	 ecx, DWORD PTR [edi+196]
  003f1	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  003f4	8b 11		 mov	 edx, DWORD PTR [ecx]
  003f6	50		 push	 eax
  003f7	52		 push	 edx
  003f8	8d 85 34 fb ff
	ff		 lea	 eax, DWORD PTR $T532578[ebp]
  003fe	50		 push	 eax
  003ff	e8 00 00 00 00	 call	 ?erase@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@@2@0@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::erase

; 796  : 
; 797  : 	kLoader.SetFileName( "config/sp2_guild_reward.ini" );

  00404	6a 01		 push	 1
  00406	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@KDJOGHGC@config?1sp2_guild_reward?4ini?$AA@
  0040b	8d 8d 3c fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00411	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetFileName@ioINILoader@@QAEXPBD_N@Z

; 798  : 	kLoader.SetTitle_e( "common" );

  00417	6a 04		 push	 4
  00419	c7 45 e0 8e 83
	86 87		 mov	 DWORD PTR __t$532625[ebp], -2021227634 ; 8786838eH
  00420	81 75 e0 ed ec
	eb ea		 xor	 DWORD PTR __t$532625[ebp], -353637139 ; eaebecedH
  00427	66 c7 45 e4 82
	82		 mov	 WORD PTR __t$532625[ebp+4], 33410 ; 00008282H
  0042d	88 5d e6	 mov	 BYTE PTR __t$532625[ebp+6], bl
  00430	58		 pop	 eax
$LL1211@Initialize:
  00431	8b c8		 mov	 ecx, eax
  00433	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00439	79 05		 jns	 SHORT $LN1272@Initialize
  0043b	49		 dec	 ecx
  0043c	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0043f	41		 inc	 ecx
$LN1272@Initialize:
  00440	b2 ed		 mov	 dl, -19			; ffffffedH
  00442	2a d1		 sub	 dl, cl
  00444	30 54 05 e0	 xor	 BYTE PTR __t$532625[ebp+eax], dl
  00448	40		 inc	 eax
  00449	83 f8 06	 cmp	 eax, 6
  0044c	7c e3		 jl	 SHORT $LL1211@Initialize
  0044e	8d 45 e0	 lea	 eax, DWORD PTR __t$532625[ebp]
  00451	50		 push	 eax
  00452	8d 8d 3c fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00458	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 799  : 	m_iAttendRenewalHour = kLoader.LoadInt( "renewal_hour", 0 );

  0045e	53		 push	 ebx
  0045f	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BDMHOBDM@renewal_hour?$AA@
  00464	8d 8d 3c fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  0046a	ff d6		 call	 esi

; 800  : }

  0046c	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00470	8d 8d 3c fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00476	89 87 d8 00 00
	00		 mov	 DWORD PTR [edi+216], eax
  0047c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
  00482	e8 00 00 00 00	 call	 __EH_epilog3_GS
  00487	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Initialize@ioGuildInfo@@QAEXXZ$0:
  00000	8d 8d 3c fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1ioINILoader_e@@QAE@XZ
__ehhandler$?Initialize@ioGuildInfo@@QAEXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 2c fb ff
	ff		 mov	 ecx, DWORD PTR [edx-1236]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Initialize@ioGuildInfo@@QAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Initialize@ioGuildInfo@@QAEXXZ ENDP			; ioGuildInfo::Initialize
PUBLIC	_szGuildPosition$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?SetMyGuildData@ioGuildInfo@@QAEXKABVioHashString@@0KH@Z ; ioGuildInfo::SetMyGuildData
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomyinfo.h
xdata$x	SEGMENT
__unwindtable$?SetMyGuildData@ioGuildInfo@@QAEXKABVioHashString@@0KH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetMyGuildData@ioGuildInfo@@QAEXKABVioHashString@@0KH@Z$0
__ehfuncinfo$?SetMyGuildData@ioGuildInfo@@QAEXKABVioHashString@@0KH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetMyGuildData@ioGuildInfo@@QAEXKABVioHashString@@0KH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?SetMyGuildData@ioGuildInfo@@QAEXKABVioHashString@@0KH@Z
_TEXT	SEGMENT
_szGuildPosition$GSCopy$ = -32812			; size = 4
$T532851 = -32812					; size = 4
_pGuildData$ = -32812					; size = 4
_kPacket$ = -32808					; size = 32792
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dwIndex$ = 8						; size = 4
_szGuildName$ = 12					; size = 4
_szGuildPosition$ = 16					; size = 4
_dwGuildMark$ = 20					; size = 4
_bGuildRoomOpen$ = 24					; size = 4
?SetMyGuildData@ioGuildInfo@@QAEXKABVioHashString@@0KH@Z PROC ; ioGuildInfo::SetMyGuildData, COMDAT
; _this$ = ecx

; 834  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetMyGuildData@ioGuildInfo@@QAEXKABVioHashString@@0KH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 20 80 00 00	 mov	 eax, 32800		; 00008020H
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	53		 push	 ebx
  00026	56		 push	 esi
  00027	57		 push	 edi
  00028	50		 push	 eax
  00029	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00032	8b 45 0c	 mov	 eax, DWORD PTR _szGuildName$[ebp]
  00035	8b 5d 08	 mov	 ebx, DWORD PTR _dwIndex$[ebp]

; 835  : 	m_dwGuildIndex	  = dwIndex;
; 836  : 	m_szGuildName     = szGuildName;

  00038	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
  0003e	8b f1		 mov	 esi, ecx
  00040	8b 4d 10	 mov	 ecx, DWORD PTR _szGuildPosition$[ebp]

; 837  : 	m_szGuildPosition = szGuildPosition;
; 838  : 
; 839  : 	m_dwEntryDelayGuildList.clear();
; 840  : 	g_UserInfoMgr.SetGuildIndex( g_MyInfo.GetPublicID(), m_dwGuildIndex );
; 841  : 	
; 842  : 	//
; 843  : 	ioGuildData *pGuildData = GetGuildData( m_dwGuildIndex );

  00043	89 8d d4 7f ff
	ff		 mov	 DWORD PTR _szGuildPosition$GSCopy$[ebp], ecx
  00049	8d 8e 94 00 00
	00		 lea	 ecx, DWORD PTR [esi+148]
  0004f	50		 push	 eax
  00050	89 9e 90 00 00
	00		 mov	 DWORD PTR [esi+144], ebx
  00056	ff d7		 call	 edi
  00058	ff b5 d4 7f ff
	ff		 push	 DWORD PTR _szGuildPosition$GSCopy$[ebp]
  0005e	8d 8e a4 00 00
	00		 lea	 ecx, DWORD PTR [esi+164]
  00064	ff d7		 call	 edi
  00066	8d 8e 80 00 00
	00		 lea	 ecx, DWORD PTR [esi+128]
  0006c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0006f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00071	50		 push	 eax
  00072	52		 push	 edx
  00073	8d 85 d4 7f ff
	ff		 lea	 eax, DWORD PTR $T532851[ebp]
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@KV?$allocator@K@std@@@std@@@2@0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::erase
  0007f	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00084	ff b6 90 00 00
	00		 push	 DWORD PTR [esi+144]
  0008a	83 c0 1c	 add	 eax, 28			; 0000001cH
  0008d	50		 push	 eax
  0008e	e8 00 00 00 00	 call	 ?GetSingleton@ioUserInfoMgr@@SAAAV1@XZ ; ioUserInfoMgr::GetSingleton
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ?SetGuildIndex@ioUserInfoMgr@@QAEXABVioHashString@@K@Z ; ioUserInfoMgr::SetGuildIndex
  0009a	6a 00		 push	 0
  0009c	ff b6 90 00 00
	00		 push	 DWORD PTR [esi+144]
  000a2	8b ce		 mov	 ecx, esi
  000a4	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData
  000a9	8b c8		 mov	 ecx, eax
  000ab	89 8d d4 7f ff
	ff		 mov	 DWORD PTR _pGuildData$[ebp], ecx

; 844  : 	if( pGuildData )

  000b1	85 c9		 test	 ecx, ecx
  000b3	74 2a		 je	 SHORT $LN29@SetMyGuild@6

; 845  : 	{
; 846  : 		pGuildData->SetGuildMark( dwGuildMark );

  000b5	ff 75 14	 push	 DWORD PTR _dwGuildMark$[ebp]
  000b8	e8 00 00 00 00	 call	 ?SetGuildMark@ioGuildData@@QAEXK@Z ; ioGuildData::SetGuildMark

; 847  : 		pGuildData->SetGuildName( m_szGuildName );

  000bd	8b 8d d4 7f ff
	ff		 mov	 ecx, DWORD PTR _pGuildData$[ebp]
  000c3	8d 86 94 00 00
	00		 lea	 eax, DWORD PTR [esi+148]
  000c9	50		 push	 eax
  000ca	83 c1 2c	 add	 ecx, 44			; 0000002cH
  000cd	ff d7		 call	 edi

; 848  : 		pGuildData->SetGuildRoomOpen( bGuildRoomOpen );

  000cf	8b 85 d4 7f ff
	ff		 mov	 eax, DWORD PTR _pGuildData$[ebp]
  000d5	8b 4d 18	 mov	 ecx, DWORD PTR _bGuildRoomOpen$[ebp]

; 849  : 		pGuildData->InitSyncTimer();         		

  000d8	83 60 68 00	 and	 DWORD PTR [eax+104], 0
  000dc	89 48 54	 mov	 DWORD PTR [eax+84], ecx
$LN29@SetMyGuild@6:

; 850  : 	}
; 851  : 	DeleteEntryDelayGuildList();

  000df	8b ce		 mov	 ecx, esi
  000e1	e8 00 00 00 00	 call	 ?DeleteEntryDelayGuildList@ioGuildInfo@@QAEXXZ ; ioGuildInfo::DeleteEntryDelayGuildList

; 852  : 
; 853  : 	// 방안 유저들 동기화
; 854  : 	SP2Packet kPacket( CUPK_GUILD_INFO_CHANGE );

  000e6	68 65 41 00 00	 push	 16741			; 00004165H
  000eb	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$[ebp]
  000f1	e8 00 00 00 00	 call	 ??0SP2Packet@@QAE@K@Z	; SP2Packet::SP2Packet
  000f6	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 855  : 	kPacket << g_MyInfo.GetPublicID() << dwIndex << dwGuildMark;

  000fa	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  000ff	ff 75 14	 push	 DWORD PTR _dwGuildMark$[ebp]
  00102	83 c0 1c	 add	 eax, 28			; 0000001cH
  00105	53		 push	 ebx
  00106	50		 push	 eax
  00107	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$[ebp]
  0010d	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@ABVioHashString@@@Z ; SP2Packet::operator<<
  00112	8b c8		 mov	 ecx, eax
  00114	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@K@Z ; SP2Packet::operator<<
  00119	8b c8		 mov	 ecx, eax
  0011b	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@K@Z ; SP2Packet::operator<<

; 856  : 	P2PNetwork::SendToAllPlayingUser( kPacket );

  00120	8d 85 d8 7f ff
	ff		 lea	 eax, DWORD PTR _kPacket$[ebp]
  00126	6a 00		 push	 0
  00128	50		 push	 eax
  00129	e8 00 00 00 00	 call	 ?SendToAllPlayingUser@P2PNetwork@@YAXAAVSP2Packet@@PAVioBaseChar@@@Z ; P2PNetwork::SendToAllPlayingUser

; 857  : 
; 858  : /*  진영과 길드 분리됨
; 859  : 	// 진영 처리
; 860  : 	if( m_dwGuildIndex != 0 )
; 861  : 	{
; 862  : 		if( g_MyInfo.GetUserCampPos() == CAMP_NONE )
; 863  : 		{
; 864  : 			// 유저 정보를 받기전에 내 길드 정보가 먼저 오므로 아래의 패킷은 유저 정보를 받은 다음부터 처리
; 865  : 			if( !g_MyInfo.GetPublicID().IsEmpty() )
; 866  : 			{
; 867  : 				// 진영에 속해있지않으면 자동으로 길드 진영에 들어간다
; 868  : 				TCPNetwork::MouseBusy( true );
; 869  : 				SP2Packet kPacket( CTPK_CAMP_CAHNGE_POS );
; 870  : 				kPacket << dwGuildCampPos << IsGuildEntryDelayListDelete() << false;     // false = Result UI Hide
; 871  : 				TCPNetwork::SendToServer( kPacket );
; 872  : 			}
; 873  : 		}
; 874  : 		else if( g_MyInfo.GetUserCampPos() != dwGuildCampPos )
; 875  : 		{
; 876  : 			// 길드와 자신의 진영이 다르면 길드 탈퇴!!!! 이것은 발생해서는 안되는 상황
; 877  : 			// 단, 예외는 자신이 길드장일 때는 봐주자-_-;
; 878  : 			ioLocalParent *pLocal = g_LocalMgr.GetLocal( ioLocalManager::GetLocalType() );
; 879  : 			if( pLocal )
; 880  : 			{
; 881  : 				if( m_szGuildPosition != pLocal->GetGuildMasterPostion() )
; 882  : 				{
; 883  : 					TCPNetwork::MouseBusy( true );
; 884  : 					SP2Packet kPacket( CTPK_GUILD_LEAVE );
; 885  : 					kPacket << 0; //예외 상황 이므로 페소 차감은 0
; 886  : 					TCPNetwork::SendToServer( kPacket );			
; 887  : 				}
; 888  : 			}
; 889  : 		}
; 890  : 	}
; 891  : */
; 892  : }

  0012e	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00132	59		 pop	 ecx
  00133	59		 pop	 ecx
  00134	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$[ebp]
  0013a	e8 00 00 00 00	 call	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
  0013f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00142	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00149	59		 pop	 ecx
  0014a	5f		 pop	 edi
  0014b	5e		 pop	 esi
  0014c	5b		 pop	 ebx
  0014d	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00150	33 cd		 xor	 ecx, ebp
  00152	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00157	c9		 leave
  00158	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetMyGuildData@ioGuildInfo@@QAEXKABVioHashString@@0KH@Z$0:
  00000	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
__ehhandler$?SetMyGuildData@ioGuildInfo@@QAEXKABVioHashString@@0KH@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a d0 7f ff
	ff		 mov	 ecx, DWORD PTR [edx-32816]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetMyGuildData@ioGuildInfo@@QAEXKABVioHashString@@0KH@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetMyGuildData@ioGuildInfo@@QAEXKABVioHashString@@0KH@Z ENDP ; ioGuildInfo::SetMyGuildData
PUBLIC	?SetMyGuildUserList@ioGuildInfo@@QAEXAAVSP2Packet@@@Z ; ioGuildInfo::SetMyGuildUserList
; Function compile flags: /Ogsp
;	COMDAT ?SetMyGuildUserList@ioGuildInfo@@QAEXAAVSP2Packet@@@Z
_TEXT	SEGMENT
_dwGuildIndex$ = -4					; size = 4
_rkPacket$ = 8						; size = 4
?SetMyGuildUserList@ioGuildInfo@@QAEXAAVSP2Packet@@@Z PROC ; ioGuildInfo::SetMyGuildUserList, COMDAT
; _this$ = ecx

; 895  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 896  : 	DWORD dwGuildIndex;
; 897  : 	rkPacket >> dwGuildIndex;

  00005	8d 45 fc	 lea	 eax, DWORD PTR _dwGuildIndex$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>

; 898  : 	ioGuildData *pGuildData = GetGuildData( dwGuildIndex );

  00013	6a 00		 push	 0
  00015	ff 75 fc	 push	 DWORD PTR _dwGuildIndex$[ebp]
  00018	8b ce		 mov	 ecx, esi
  0001a	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData
  0001f	5e		 pop	 esi

; 899  : 	if( pGuildData )

  00020	85 c0		 test	 eax, eax
  00022	74 0a		 je	 SHORT $LN1@SetMyGuild@7

; 900  : 		pGuildData->SetGuildUserListEx( rkPacket );

  00024	ff 75 08	 push	 DWORD PTR _rkPacket$[ebp]
  00027	8b c8		 mov	 ecx, eax
  00029	e8 00 00 00 00	 call	 ?SetGuildUserListEx@ioGuildData@@QAEXAAVSP2Packet@@@Z ; ioGuildData::SetGuildUserListEx
$LN1@SetMyGuild@7:

; 901  : }

  0002e	c9		 leave
  0002f	c2 04 00	 ret	 4
?SetMyGuildUserList@ioGuildInfo@@QAEXAAVSP2Packet@@@Z ENDP ; ioGuildInfo::SetMyGuildUserList
_TEXT	ENDS
PUBLIC	?SetMyGuildUserLogIn@ioGuildInfo@@QAEXABVioHashString@@@Z ; ioGuildInfo::SetMyGuildUserLogIn
; Function compile flags: /Ogsp
;	COMDAT ?SetMyGuildUserLogIn@ioGuildInfo@@QAEXABVioHashString@@@Z
_TEXT	SEGMENT
_szUserID$ = 8						; size = 4
?SetMyGuildUserLogIn@ioGuildInfo@@QAEXABVioHashString@@@Z PROC ; ioGuildInfo::SetMyGuildUserLogIn, COMDAT
; _this$ = ecx

; 904  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 905  : 	ioGuildData *pGuildData = GetGuildData( m_dwGuildIndex );

  00003	6a 00		 push	 0
  00005	ff b1 90 00 00
	00		 push	 DWORD PTR [ecx+144]
  0000b	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData

; 906  : 	if( pGuildData )

  00010	85 c0		 test	 eax, eax
  00012	74 08		 je	 SHORT $LN1@SetMyGuild@8

; 907  : 		pGuildData->SetGuildUserLogIn( szUserID );

  00014	8b c8		 mov	 ecx, eax

; 908  : }

  00016	5d		 pop	 ebp

; 907  : 		pGuildData->SetGuildUserLogIn( szUserID );

  00017	e9 00 00 00 00	 jmp	 ?SetGuildUserLogIn@ioGuildData@@QAEXABVioHashString@@@Z ; ioGuildData::SetGuildUserLogIn
$LN1@SetMyGuild@8:

; 908  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetMyGuildUserLogIn@ioGuildInfo@@QAEXABVioHashString@@@Z ENDP ; ioGuildInfo::SetMyGuildUserLogIn
_TEXT	ENDS
PUBLIC	?SetMyGuildUserLogOut@ioGuildInfo@@QAEXABVioHashString@@@Z ; ioGuildInfo::SetMyGuildUserLogOut
; Function compile flags: /Ogsp
;	COMDAT ?SetMyGuildUserLogOut@ioGuildInfo@@QAEXABVioHashString@@@Z
_TEXT	SEGMENT
_szUserID$ = 8						; size = 4
?SetMyGuildUserLogOut@ioGuildInfo@@QAEXABVioHashString@@@Z PROC ; ioGuildInfo::SetMyGuildUserLogOut, COMDAT
; _this$ = ecx

; 911  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 912  : 	ioGuildData *pGuildData = GetGuildData( m_dwGuildIndex );

  00003	6a 00		 push	 0
  00005	ff b1 90 00 00
	00		 push	 DWORD PTR [ecx+144]
  0000b	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData

; 913  : 	if( pGuildData )

  00010	85 c0		 test	 eax, eax
  00012	74 08		 je	 SHORT $LN1@SetMyGuild@9

; 914  : 		pGuildData->SetGuildUserLogOut( szUserID );

  00014	8b c8		 mov	 ecx, eax

; 915  : }

  00016	5d		 pop	 ebp

; 914  : 		pGuildData->SetGuildUserLogOut( szUserID );

  00017	e9 00 00 00 00	 jmp	 ?SetGuildUserLogOut@ioGuildData@@QAEXABVioHashString@@@Z ; ioGuildData::SetGuildUserLogOut
$LN1@SetMyGuild@9:

; 915  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetMyGuildUserLogOut@ioGuildInfo@@QAEXABVioHashString@@@Z ENDP ; ioGuildInfo::SetMyGuildUserLogOut
_TEXT	ENDS
PUBLIC	?SetMyGuildUserPos@ioGuildInfo@@QAEXABVioHashString@@HH@Z ; ioGuildInfo::SetMyGuildUserPos
; Function compile flags: /Ogsp
;	COMDAT ?SetMyGuildUserPos@ioGuildInfo@@QAEXABVioHashString@@HH@Z
_TEXT	SEGMENT
_szUserID$ = 8						; size = 4
_iUserPos$ = 12						; size = 4
_iUserLevel$ = 16					; size = 4
?SetMyGuildUserPos@ioGuildInfo@@QAEXABVioHashString@@HH@Z PROC ; ioGuildInfo::SetMyGuildUserPos, COMDAT
; _this$ = ecx

; 918  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 919  : 	ioGuildData *pGuildData = GetGuildData( m_dwGuildIndex );

  00003	6a 00		 push	 0
  00005	ff b1 90 00 00
	00		 push	 DWORD PTR [ecx+144]
  0000b	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData

; 920  : 	if( pGuildData )

  00010	85 c0		 test	 eax, eax
  00012	74 08		 je	 SHORT $LN1@SetMyGuild@10

; 921  : 		pGuildData->SetGuildUserPos( szUserID, iUserPos, iUserLevel );

  00014	8b c8		 mov	 ecx, eax

; 922  : }

  00016	5d		 pop	 ebp

; 921  : 		pGuildData->SetGuildUserPos( szUserID, iUserPos, iUserLevel );

  00017	e9 00 00 00 00	 jmp	 ?SetGuildUserPos@ioGuildData@@QAEXABVioHashString@@HH@Z ; ioGuildData::SetGuildUserPos
$LN1@SetMyGuild@10:

; 922  : }

  0001c	5d		 pop	 ebp
  0001d	c2 0c 00	 ret	 12			; 0000000cH
?SetMyGuildUserPos@ioGuildInfo@@QAEXABVioHashString@@HH@Z ENDP ; ioGuildInfo::SetMyGuildUserPos
_TEXT	ENDS
PUBLIC	?IsMyGuildUser@ioGuildInfo@@QAE_NABVioHashString@@@Z ; ioGuildInfo::IsMyGuildUser
; Function compile flags: /Ogsp
;	COMDAT ?IsMyGuildUser@ioGuildInfo@@QAE_NABVioHashString@@@Z
_TEXT	SEGMENT
_szUserID$ = 8						; size = 4
?IsMyGuildUser@ioGuildInfo@@QAE_NABVioHashString@@@Z PROC ; ioGuildInfo::IsMyGuildUser, COMDAT
; _this$ = ecx

; 932  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 933  : 	ioGuildData *pGuildData = GetGuildData( m_dwGuildIndex );

  00003	6a 00		 push	 0
  00005	ff b1 90 00 00
	00		 push	 DWORD PTR [ecx+144]
  0000b	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData

; 934  : 	if( pGuildData )

  00010	85 c0		 test	 eax, eax
  00012	74 12		 je	 SHORT $LN1@IsMyGuildU

; 935  : 	{
; 936  : 		if( pGuildData->GetUserIndex( szUserID ) != 0 )

  00014	ff 75 08	 push	 DWORD PTR _szUserID$[ebp]
  00017	8b c8		 mov	 ecx, eax
  00019	e8 00 00 00 00	 call	 ?GetUserIndex@ioGuildData@@QAEKABVioHashString@@@Z ; ioGuildData::GetUserIndex
  0001e	85 c0		 test	 eax, eax
  00020	74 04		 je	 SHORT $LN1@IsMyGuildU

; 937  : 			return true;

  00022	b0 01		 mov	 al, 1
  00024	eb 02		 jmp	 SHORT $LN3@IsMyGuildU
$LN1@IsMyGuildU:

; 938  : 	}
; 939  : 	return false;

  00026	32 c0		 xor	 al, al
$LN3@IsMyGuildU:

; 940  : }

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?IsMyGuildUser@ioGuildInfo@@QAE_NABVioHashString@@@Z ENDP ; ioGuildInfo::IsMyGuildUser
_TEXT	ENDS
PUBLIC	?SetGuildUserList@ioGuildInfo@@QAEXAAVSP2Packet@@@Z ; ioGuildInfo::SetGuildUserList
; Function compile flags: /Ogsp
;	COMDAT ?SetGuildUserList@ioGuildInfo@@QAEXAAVSP2Packet@@@Z
_TEXT	SEGMENT
_dwGuildIndex$ = -4					; size = 4
_rkPacket$ = 8						; size = 4
?SetGuildUserList@ioGuildInfo@@QAEXAAVSP2Packet@@@Z PROC ; ioGuildInfo::SetGuildUserList, COMDAT
; _this$ = ecx

; 1050 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 1051 : 	DWORD dwGuildIndex;
; 1052 : 	rkPacket >> dwGuildIndex;

  00005	8d 45 fc	 lea	 eax, DWORD PTR _dwGuildIndex$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAK@Z ; SP2Packet::operator>>

; 1053 : 	ioGuildData *pGuildData = GetGuildData( dwGuildIndex );

  00013	6a 00		 push	 0
  00015	ff 75 fc	 push	 DWORD PTR _dwGuildIndex$[ebp]
  00018	8b ce		 mov	 ecx, esi
  0001a	e8 00 00 00 00	 call	 ?GetGuildData@ioGuildInfo@@QAEPAVioGuildData@@K_N@Z ; ioGuildInfo::GetGuildData
  0001f	5e		 pop	 esi

; 1054 : 	if( pGuildData )

  00020	85 c0		 test	 eax, eax
  00022	74 0a		 je	 SHORT $LN1@SetGuildUs@6

; 1055 : 		pGuildData->SetGuildUserList( rkPacket );

  00024	ff 75 08	 push	 DWORD PTR _rkPacket$[ebp]
  00027	8b c8		 mov	 ecx, eax
  00029	e8 00 00 00 00	 call	 ?SetGuildUserList@ioGuildData@@QAEXAAVSP2Packet@@@Z ; ioGuildData::SetGuildUserList
$LN1@SetGuildUs@6:

; 1056 : }

  0002e	c9		 leave
  0002f	c2 04 00	 ret	 4
?SetGuildUserList@ioGuildInfo@@QAEXAAVSP2Packet@@@Z ENDP ; ioGuildInfo::SetGuildUserList
_TEXT	ENDS
PUBLIC	?SetInvitationUser@ioGuildInfo@@QAEXABVioHashString@@@Z ; ioGuildInfo::SetInvitationUser
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetInvitationUser@ioGuildInfo@@QAEXABVioHashString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetInvitationUser@ioGuildInfo@@QAEXABVioHashString@@@Z$0
__ehfuncinfo$?SetInvitationUser@ioGuildInfo@@QAEXABVioHashString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetInvitationUser@ioGuildInfo@@QAEXABVioHashString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?SetInvitationUser@ioGuildInfo@@QAEXABVioHashString@@@Z
_TEXT	SEGMENT
_kUser$ = -32						; size = 20
__$EHRec$ = -12						; size = 12
_szInvitationUser$ = 8					; size = 4
?SetInvitationUser@ioGuildInfo@@QAEXABVioHashString@@@Z PROC ; ioGuildInfo::SetInvitationUser, COMDAT
; _this$ = ecx

; 1155 : {

  00000	6a 14		 push	 20			; 00000014H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?SetInvitationUser@ioGuildInfo@@QAEXABVioHashString@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 1156 : 	InvitationUser kUser;

  0000e	8d 4d e0	 lea	 ecx, DWORD PTR _kUser$[ebp]
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ
  00017	83 65 f0 00	 and	 DWORD PTR _kUser$[ebp+16], 0

; 1157 : 	kUser.m_szUserName		  = szInvitationUser;

  0001b	ff 75 08	 push	 DWORD PTR _szInvitationUser$[ebp]
  0001e	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00022	8d 4d e0	 lea	 ecx, DWORD PTR _kUser$[ebp]
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z

; 1158 : 	kUser.m_dwInvitationTimer = FRAMEGETTIME();

  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00031	8b c8		 mov	 ecx, eax
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00039	89 45 f0	 mov	 DWORD PTR _kUser$[ebp+16], eax

; 1159 : 	m_vInvitationUser.push_back( kUser );

  0003c	8d 45 e0	 lea	 eax, DWORD PTR _kUser$[ebp]
  0003f	50		 push	 eax
  00040	8d 8e c4 00 00
	00		 lea	 ecx, DWORD PTR [esi+196]
  00046	e8 00 00 00 00	 call	 ?push_back@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAEXABUInvitationUser@ioGuildInfo@@@Z ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::push_back

; 1160 : }

  0004b	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0004f	8d 4d e0	 lea	 ecx, DWORD PTR _kUser$[ebp]
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00058	e8 00 00 00 00	 call	 __EH_epilog3
  0005d	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetInvitationUser@ioGuildInfo@@QAEXABVioHashString@@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _kUser$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1InvitationUser@ioGuildInfo@@QAE@XZ
__ehhandler$?SetInvitationUser@ioGuildInfo@@QAEXABVioHashString@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetInvitationUser@ioGuildInfo@@QAEXABVioHashString@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetInvitationUser@ioGuildInfo@@QAEXABVioHashString@@@Z ENDP ; ioGuildInfo::SetInvitationUser
PUBLIC	??0GuildRankRwardInfo@@QAE@XZ			; GuildRankRwardInfo::GuildRankRwardInfo
; Function compile flags: /Ogsp
;	COMDAT ??0GuildRankRwardInfo@@QAE@XZ
_TEXT	SEGMENT
??0GuildRankRwardInfo@@QAE@XZ PROC			; GuildRankRwardInfo::GuildRankRwardInfo, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ
  00009	33 c0		 xor	 eax, eax
  0000b	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  0000e	89 46 18	 mov	 DWORD PTR [esi+24], eax
  00011	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00014	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00017	89 46 24	 mov	 DWORD PTR [esi+36], eax
  0001a	89 46 28	 mov	 DWORD PTR [esi+40], eax
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	c3		 ret	 0
??0GuildRankRwardInfo@@QAE@XZ ENDP			; GuildRankRwardInfo::GuildRankRwardInfo
_TEXT	ENDS
PUBLIC	??0GuildAttendRwardInfo@@QAE@XZ			; GuildAttendRwardInfo::GuildAttendRwardInfo
; Function compile flags: /Ogsp
;	COMDAT ??0GuildAttendRwardInfo@@QAE@XZ
_TEXT	SEGMENT
??0GuildAttendRwardInfo@@QAE@XZ PROC			; GuildAttendRwardInfo::GuildAttendRwardInfo, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ
  00009	33 c0		 xor	 eax, eax
  0000b	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  0000e	89 46 18	 mov	 DWORD PTR [esi+24], eax
  00011	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00014	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00017	89 46 24	 mov	 DWORD PTR [esi+36], eax
  0001a	89 46 28	 mov	 DWORD PTR [esi+40], eax
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	c3		 ret	 0
??0GuildAttendRwardInfo@@QAE@XZ ENDP			; GuildAttendRwardInfo::GuildAttendRwardInfo
_TEXT	ENDS
PUBLIC	??4?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::operator=
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??4?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv555 = -4						; size = 4
tv551 = 8						; size = 4
__Cat$533370 = 8					; size = 1
__Cat$533241 = 8					; size = 1
__Cat$533219 = 8					; size = 1
__Cat$533098 = 8					; size = 1
$T533154 = 8						; size = 4
$T533066 = 8						; size = 4
__Right$ = 8						; size = 4
??4?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::operator=, COMDAT
; _this$ = ecx

; 709  : 		{	// assign _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 710  : 		if (this != &_Right)

  00006	8b 7d 08	 mov	 edi, DWORD PTR __Right$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	3b f7		 cmp	 esi, edi
  0000d	0f 84 16 01 00
	00		 je	 $LN1@operator@2

; 711  : 			{	// worth doing
; 712  : 			this->_Orphan_all();

  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 713  : 
; 714  : 			if (_Right.size() == 0)

  00019	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0001c	2b 07		 sub	 eax, DWORD PTR [edi]
  0001e	6a 14		 push	 20			; 00000014H
  00020	99		 cdq
  00021	59		 pop	 ecx
  00022	f7 f9		 idiv	 ecx
  00024	89 45 08	 mov	 DWORD PTR tv551[ebp], eax
  00027	85 c0		 test	 eax, eax

; 715  : 				clear();	// new sequence empty, erase existing sequence

  00029	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002c	75 14		 jne	 SHORT $LN8@operator@2
  0002e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00030	50		 push	 eax
  00031	51		 push	 ecx
  00032	8d 45 08	 lea	 eax, DWORD PTR $T533066[ebp]
  00035	50		 push	 eax
  00036	8b ce		 mov	 ecx, esi
  00038	e8 00 00 00 00	 call	 ?erase@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@0@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::erase

; 716  : 			else if (_Right.size() <= size())

  0003d	e9 e7 00 00 00	 jmp	 $LN1@operator@2
$LN8@operator@2:
  00042	53		 push	 ebx
  00043	8b 1e		 mov	 ebx, DWORD PTR [esi]
  00045	89 45 fc	 mov	 DWORD PTR tv555[ebp], eax
  00048	2b c3		 sub	 eax, ebx
  0004a	6a 14		 push	 20			; 00000014H
  0004c	99		 cdq
  0004d	59		 pop	 ecx
  0004e	f7 f9		 idiv	 ecx
  00050	8b c8		 mov	 ecx, eax
  00052	39 4d 08	 cmp	 DWORD PTR tv551[ebp], ecx
  00055	77 41		 ja	 SHORT $LN6@operator@2

; 717  : 				{	// enough elements, copy new and destroy old
; 718  : 				pointer _Ptr = _STD _Copy_impl(_Right._Myfirst, _Right._Mylast,
; 719  : 					this->_Myfirst);	// copy new

  00057	ff 75 08	 push	 DWORD PTR __Cat$533098[ebp]
  0005a	53		 push	 ebx
  0005b	ff 77 04	 push	 DWORD PTR [edi+4]
  0005e	ff 37		 push	 DWORD PTR [edi]
  00060	e8 00 00 00 00	 call	 ??$_Copy_impl@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<GashaponPresent *,GashaponPresent *>

; 720  : 				_Destroy(_Ptr, this->_Mylast);	// destroy old

  00065	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00068	83 c4 10	 add	 esp, 16			; 00000010H
  0006b	89 45 08	 mov	 DWORD PTR $T533154[ebp], eax
  0006e	3b c3		 cmp	 eax, ebx
  00070	74 11		 je	 SHORT $LN46@operator@2
$LL114@operator@2:
  00072	8b 4d 08	 mov	 ecx, DWORD PTR $T533154[ebp]
  00075	e8 00 00 00 00	 call	 ??1GashaponPresent@@QAE@XZ ; GashaponPresent::~GashaponPresent
  0007a	83 45 08 14	 add	 DWORD PTR $T533154[ebp], 20 ; 00000014H
  0007e	39 5d 08	 cmp	 DWORD PTR $T533154[ebp], ebx
  00081	75 ef		 jne	 SHORT $LL114@operator@2
$LN46@operator@2:

; 721  : 				this->_Mylast = this->_Myfirst + _Right.size();

  00083	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00086	2b 07		 sub	 eax, DWORD PTR [edi]
  00088	6a 14		 push	 20			; 00000014H
  0008a	99		 cdq
  0008b	59		 pop	 ecx
  0008c	f7 f9		 idiv	 ecx
  0008e	6b c0 14	 imul	 eax, 20			; 00000014H
  00091	03 06		 add	 eax, DWORD PTR [esi]

; 722  : 				}
; 723  : 			else if (_Right.size() <= capacity())

  00093	e9 8d 00 00 00	 jmp	 $LN116@operator@2
$LN6@operator@2:
  00098	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0009b	2b c3		 sub	 eax, ebx
  0009d	6a 14		 push	 20			; 00000014H
  0009f	99		 cdq
  000a0	5b		 pop	 ebx
  000a1	f7 fb		 idiv	 ebx
  000a3	39 45 08	 cmp	 DWORD PTR tv551[ebp], eax
  000a6	77 2e		 ja	 SHORT $LN4@operator@2

; 724  : 				{	// enough room, copy and construct new
; 725  : 				pointer _Ptr = _Right._Myfirst + size();
; 726  : 				_STD _Copy_impl(_Right._Myfirst, _Ptr, this->_Myfirst);

  000a8	ff 75 08	 push	 DWORD PTR __Cat$533219[ebp]
  000ab	6b c9 14	 imul	 ecx, 20			; 00000014H
  000ae	8b 07		 mov	 eax, DWORD PTR [edi]
  000b0	ff 36		 push	 DWORD PTR [esi]
  000b2	8d 1c 08	 lea	 ebx, DWORD PTR [eax+ecx]
  000b5	53		 push	 ebx
  000b6	50		 push	 eax
  000b7	e8 00 00 00 00	 call	 ??$_Copy_impl@PAVGashaponPresent@@PAV1@@std@@YAPAVGashaponPresent@@PAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<GashaponPresent *,GashaponPresent *>

; 727  : 				this->_Mylast = _Ucopy(_Ptr, _Right._Mylast, this->_Mylast);

  000bc	ff 75 08	 push	 DWORD PTR __Cat$533241[ebp]
  000bf	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000c2	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  000c5	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  000c8	51		 push	 ecx
  000c9	50		 push	 eax
  000ca	57		 push	 edi
  000cb	53		 push	 ebx
  000cc	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent> >
  000d1	83 c4 24	 add	 esp, 36			; 00000024H

; 728  : 				}
; 729  : 			else

  000d4	eb 4f		 jmp	 SHORT $LN116@operator@2
$LN4@operator@2:

; 730  : 				{	// not enough room, allocate new array and construct new
; 731  : 				if (this->_Myfirst != 0)

  000d6	8b 1e		 mov	 ebx, DWORD PTR [esi]
  000d8	85 db		 test	 ebx, ebx
  000da	74 19		 je	 SHORT $LN113@operator@2
  000dc	eb 0a		 jmp	 SHORT $LN117@operator@2

; 732  : 					{	// discard old array
; 733  : 					_Destroy(this->_Myfirst, this->_Mylast);

$LL86@operator@2:
  000de	8b cb		 mov	 ecx, ebx
  000e0	e8 00 00 00 00	 call	 ??1GashaponPresent@@QAE@XZ ; GashaponPresent::~GashaponPresent
  000e5	83 c3 14	 add	 ebx, 20			; 00000014H
$LN117@operator@2:
  000e8	3b 5d fc	 cmp	 ebx, DWORD PTR tv555[ebp]
  000eb	75 f1		 jne	 SHORT $LL86@operator@2

; 734  : 					this->_Alval.deallocate(this->_Myfirst,
; 735  : 						this->_Myend - this->_Myfirst);

  000ed	ff 36		 push	 DWORD PTR [esi]
  000ef	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000f4	59		 pop	 ecx
$LN113@operator@2:

; 736  : 					}
; 737  : 				if (_Buy(_Right.size()))

  000f5	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000f8	2b 07		 sub	 eax, DWORD PTR [edi]
  000fa	6a 14		 push	 20			; 00000014H
  000fc	59		 pop	 ecx
  000fd	99		 cdq
  000fe	f7 f9		 idiv	 ecx
  00100	8b ce		 mov	 ecx, esi
  00102	50		 push	 eax
  00103	e8 00 00 00 00	 call	 ?_Buy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAE_NI@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Buy
  00108	84 c0		 test	 al, al
  0010a	74 1c		 je	 SHORT $LN115@operator@2

; 738  : 					this->_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 739  : 						this->_Myfirst);

  0010c	ff 75 08	 push	 DWORD PTR __Cat$533370[ebp]
  0010f	8b 06		 mov	 eax, DWORD PTR [esi]
  00111	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00114	8b 3f		 mov	 edi, DWORD PTR [edi]
  00116	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00119	52		 push	 edx
  0011a	50		 push	 eax
  0011b	51		 push	 ecx
  0011c	57		 push	 edi
  0011d	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent> >
  00122	83 c4 14	 add	 esp, 20			; 00000014H
$LN116@operator@2:
  00125	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN115@operator@2:
  00128	5b		 pop	 ebx
$LN1@operator@2:
  00129	5f		 pop	 edi

; 740  : 				}
; 741  : 			}
; 742  : 		return (*this);

  0012a	8b c6		 mov	 eax, esi
  0012c	5e		 pop	 esi

; 743  : 		}

  0012d	c9		 leave
  0012e	c2 04 00	 ret	 4
??4?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::operator=
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 369  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;

  0000c	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 373  : 
; 374  : 	_TRY_BEGIN

  0000f	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00013	89 45 ec	 mov	 DWORD PTR __Next$[ebp], eax

; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

$LL14@Uninit_cop@2:
  00016	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00019	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0001c	74 34		 je	 SHORT $LN4@Uninit_cop@2

; 376  : 		_Cons_val(_Al, _Dest, *_First);

  0001e	50		 push	 eax
  0001f	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00022	e8 00 00 00 00	 call	 ??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  00027	83 45 10 1c	 add	 DWORD PTR __Dest$[ebp], 28 ; 0000001cH
  0002b	83 45 08 1c	 add	 DWORD PTR __First$[ebp], 28 ; 0000001cH
  0002f	59		 pop	 ecx
  00030	59		 pop	 ecx
  00031	eb e3		 jmp	 SHORT $LL14@Uninit_cop@2
__catch$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 377  : 	_CATCH_ALL
; 378  : 	for (; _Next != _Dest; ++_Next)

  00033	8b 75 ec	 mov	 esi, DWORD PTR __Next$[ebp]
  00036	eb 0c		 jmp	 SHORT $LN50@Uninit_cop@2
$LL3@Uninit_cop@2:

; 379  : 		_Dest_val(_Al, _Next);

  00038	6a 01		 push	 1
  0003a	8b ce		 mov	 ecx, esi
  0003c	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  00041	83 c6 1c	 add	 esi, 28			; 0000001cH
$LN50@Uninit_cop@2:

; 380  : 	_RERAISE;

  00044	6a 00		 push	 0
  00046	3b 75 10	 cmp	 esi, DWORD PTR __Dest$[ebp]
  00049	75 ed		 jne	 SHORT $LL3@Uninit_cop@2
  0004b	6a 00		 push	 0
  0004d	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN51@Uninit_cop@2:
$LN4@Uninit_cop@2:

; 381  : 	_CATCH_END
; 382  : 	return (_Dest);

  00052	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 383  : 	}

  00055	e8 00 00 00 00	 call	 __EH_epilog3
  0005a	c3		 ret	 0
$LN49@Uninit_cop@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Cat$533506 = 12					; size = 1
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy, COMDAT
; _this$ = ecx

; 1269 : 		{	// destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);

  00003	ff 75 0c	 push	 DWORD PTR __Cat$533506[ebp]
  00006	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00009	51		 push	 ecx
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1271 : 		}

  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GioGuildData@@MAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioGuildData@@MAEPAXI@Z PROC				; ioGuildData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioGuildData@@MAE@XZ	; ioGuildData::~ioGuildData
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@7
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@7:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioGuildData@@MAEPAXI@Z ENDP				; ioGuildData::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GGuildRankRwardInfo@@QAEPAXI@Z		; GuildRankRwardInfo::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_GGuildRankRwardInfo@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GGuildRankRwardInfo@@QAEPAXI@Z PROC			; GuildRankRwardInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1GuildRankRwardInfo@@QAE@XZ
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@8
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@8:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GGuildRankRwardInfo@@QAEPAXI@Z ENDP			; GuildRankRwardInfo::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GGuildAttendRwardInfo@@QAEPAXI@Z		; GuildAttendRwardInfo::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_GGuildAttendRwardInfo@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GGuildAttendRwardInfo@@QAEPAXI@Z PROC		; GuildAttendRwardInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1GuildAttendRwardInfo@@QAE@XZ
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@9
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@9:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GGuildAttendRwardInfo@@QAEPAXI@Z ENDP		; GuildAttendRwardInfo::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$533520 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 412  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 413  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 414  : 		_Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$533520[ebp]
  00007	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000a	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00010	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00013	e8 00 00 00 00	 call	 ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00018	83 c4 14	 add	 esp, 20			; 00000014H

; 415  : 	}

  0001b	c9		 leave
  0001c	c3		 ret	 0
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
__Cat$533541 = -4					; size = 1
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00007	83 3e 00	 cmp	 DWORD PTR [esi], 0
  0000a	74 21		 je	 SHORT $LN10@Tidy@9

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);

  00012	ff 75 fc	 push	 DWORD PTR __Cat$533541[ebp]
  00015	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00018	50		 push	 eax
  00019	ff 76 04	 push	 DWORD PTR [esi+4]
  0001c	ff 36		 push	 DWORD PTR [esi]
  0001e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  00023	ff 36		 push	 DWORD PTR [esi]
  00025	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002a	83 c4 14	 add	 esp, 20			; 00000014H
$LN10@Tidy@9:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  0002d	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00030	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  00034	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00038	5e		 pop	 esi

; 1312 : 		}

  00039	c9		 leave
  0003a	c3		 ret	 0
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
_TEXT	ENDS
PUBLIC	??1ioGuildInfo@@UAE@XZ				; ioGuildInfo::~ioGuildInfo
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
xdata$x	SEGMENT
__ehfuncinfo$??1ioGuildInfo@@UAE@XZ DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$??1ioGuildInfo@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1ioGuildInfo@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioGuildInfo@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ioGuildInfo@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1ioGuildInfo@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1ioGuildInfo@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1ioGuildInfo@@UAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1ioGuildInfo@@UAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1ioGuildInfo@@UAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1ioGuildInfo@@UAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??1ioGuildInfo@@UAE@XZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??1ioGuildInfo@@UAE@XZ$9
	DD	09H
	DD	FLAT:__unwindfunclet$??1ioGuildInfo@@UAE@XZ$10
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ??1ioGuildInfo@@UAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
tv794 = -20						; size = 4
$T534117 = -20						; size = 4
$T533936 = -20						; size = 4
$T533755 = -20						; size = 4
tv771 = -16						; size = 4
_Attenditer$509089 = -16				; size = 4
__$EHRec$ = -12						; size = 12
??1ioGuildInfo@@UAE@XZ PROC				; ioGuildInfo::~ioGuildInfo, COMDAT
; _this$ = ecx

; 747  : {	

  00000	6a 0c		 push	 12			; 0000000cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioGuildInfo@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 e8	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioGuildInfo@@6B@

; 748  : 	vGuildData_iter iter, iEnd;
; 749  : 	iEnd = m_vGuildList.end();

  00017	8b 9e b8 00 00
	00		 mov	 ebx, DWORD PTR [esi+184]

; 750  : 	for(iter = m_vGuildList.begin();iter != iEnd;++iter)

  0001d	8b be b4 00 00
	00		 mov	 edi, DWORD PTR [esi+180]
  00023	c7 45 fc 0a 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  0002a	eb 12		 jmp	 SHORT $LN254@ioGuildInf
$LL58@ioGuildInf:

; 751  : 	{
; 752  : 		SAFEDELETE( *iter );

  0002c	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0002e	85 c9		 test	 ecx, ecx
  00030	74 09		 je	 SHORT $LN11@ioGuildInf
  00032	8b 01		 mov	 eax, DWORD PTR [ecx]
  00034	6a 01		 push	 1
  00036	ff 10		 call	 DWORD PTR [eax]
  00038	83 27 00	 and	 DWORD PTR [edi], 0
$LN11@ioGuildInf:

; 750  : 	for(iter = m_vGuildList.begin();iter != iEnd;++iter)

  0003b	83 c7 04	 add	 edi, 4
$LN254@ioGuildInf:
  0003e	3b fb		 cmp	 edi, ebx
  00040	75 ea		 jne	 SHORT $LL58@ioGuildInf

; 753  : 	}	
; 754  : 	m_vGuildList.clear();

  00042	8d 8e b4 00 00
	00		 lea	 ecx, DWORD PTR [esi+180]
  00048	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0004b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004d	50		 push	 eax
  0004e	52		 push	 edx
  0004f	8d 45 ec	 lea	 eax, DWORD PTR $T533755[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?erase@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@@2@0@Z ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::erase

; 755  : 
; 756  : 	for( GuildRankRewardVector::iterator Rankiter = m_RankRewardVec.begin() ; 

  00058	8b be ec 00 00
	00		 mov	 edi, DWORD PTR [esi+236]
  0005e	eb 1d		 jmp	 SHORT $LN255@ioGuildInf

; 757  : 		Rankiter != m_RankRewardVec.end() ; ++Rankiter )

$LL106@ioGuildInf:

; 758  : 		SAFEDELETE( *Rankiter );

  00060	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00062	89 4d f0	 mov	 DWORD PTR tv771[ebp], ecx
  00065	85 c9		 test	 ecx, ecx
  00067	74 11		 je	 SHORT $LN7@ioGuildInf
  00069	e8 00 00 00 00	 call	 ??1GuildRankRwardInfo@@QAE@XZ
  0006e	ff 75 f0	 push	 DWORD PTR tv771[ebp]
  00071	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00076	83 27 00	 and	 DWORD PTR [edi], 0
  00079	59		 pop	 ecx
$LN7@ioGuildInf:

; 757  : 		Rankiter != m_RankRewardVec.end() ; ++Rankiter )

  0007a	83 c7 04	 add	 edi, 4
$LN255@ioGuildInf:
  0007d	3b be f0 00 00
	00		 cmp	 edi, DWORD PTR [esi+240]
  00083	75 db		 jne	 SHORT $LL106@ioGuildInf

; 759  : 	m_RankRewardVec.clear();

  00085	8b 86 f0 00 00
	00		 mov	 eax, DWORD PTR [esi+240]
  0008b	8b 8e ec 00 00
	00		 mov	 ecx, DWORD PTR [esi+236]
  00091	50		 push	 eax
  00092	51		 push	 ecx
  00093	8d 45 ec	 lea	 eax, DWORD PTR $T533936[ebp]
  00096	50		 push	 eax
  00097	8d 8e ec 00 00
	00		 lea	 ecx, DWORD PTR [esi+236]
  0009d	e8 00 00 00 00	 call	 ?erase@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@@2@0@Z ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::erase

; 760  : 
; 761  : 	for( GuildAttendRewardVector::iterator Attenditer = m_AttendRewardVec.begin() ; 

  000a2	8b 86 dc 00 00
	00		 mov	 eax, DWORD PTR [esi+220]
  000a8	eb 20		 jmp	 SHORT $LN256@ioGuildInf

; 762  : 		Attenditer != m_AttendRewardVec.end() ; ++Attenditer )

$LL165@ioGuildInf:

; 763  : 		SAFEDELETE( *Attenditer );

  000aa	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ac	89 4d ec	 mov	 DWORD PTR tv794[ebp], ecx
  000af	85 c9		 test	 ecx, ecx
  000b1	74 14		 je	 SHORT $LN3@ioGuildInf
  000b3	e8 00 00 00 00	 call	 ??1GuildAttendRwardInfo@@QAE@XZ
  000b8	ff 75 ec	 push	 DWORD PTR tv794[ebp]
  000bb	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000c0	8b 45 f0	 mov	 eax, DWORD PTR _Attenditer$509089[ebp]
  000c3	83 20 00	 and	 DWORD PTR [eax], 0
  000c6	59		 pop	 ecx
$LN3@ioGuildInf:

; 762  : 		Attenditer != m_AttendRewardVec.end() ; ++Attenditer )

  000c7	83 c0 04	 add	 eax, 4
$LN256@ioGuildInf:
  000ca	89 45 f0	 mov	 DWORD PTR _Attenditer$509089[ebp], eax
  000cd	3b 86 e0 00 00
	00		 cmp	 eax, DWORD PTR [esi+224]
  000d3	75 d5		 jne	 SHORT $LL165@ioGuildInf

; 764  : 	m_AttendRewardVec.clear();

  000d5	8b 86 e0 00 00
	00		 mov	 eax, DWORD PTR [esi+224]
  000db	8b 8e dc 00 00
	00		 mov	 ecx, DWORD PTR [esi+220]
  000e1	50		 push	 eax
  000e2	51		 push	 ecx
  000e3	8d 45 ec	 lea	 eax, DWORD PTR $T534117[ebp]
  000e6	50		 push	 eax
  000e7	8d 8e dc 00 00
	00		 lea	 ecx, DWORD PTR [esi+220]
  000ed	e8 00 00 00 00	 call	 ?erase@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@@2@0@Z ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::erase

; 765  : }

  000f2	8d 8e ec 00 00
	00		 lea	 ecx, DWORD PTR [esi+236]
  000f8	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  000fc	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@IAEXXZ ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::_Tidy
  00101	8d 8e dc 00 00
	00		 lea	 ecx, DWORD PTR [esi+220]
  00107	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  0010b	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@IAEXXZ ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::_Tidy
  00110	8d 8e c4 00 00
	00		 lea	 ecx, DWORD PTR [esi+196]
  00116	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  0011a	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@IAEXXZ ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::_Tidy
  0011f	8d 8e b4 00 00
	00		 lea	 ecx, DWORD PTR [esi+180]
  00125	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00129	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@IAEXXZ ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::_Tidy
  0012e	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00134	8d 8e a4 00 00
	00		 lea	 ecx, DWORD PTR [esi+164]
  0013a	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0013e	ff d7		 call	 edi
  00140	8d 8e 94 00 00
	00		 lea	 ecx, DWORD PTR [esi+148]
  00146	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0014a	ff d7		 call	 edi
  0014c	8d 8e 80 00 00
	00		 lea	 ecx, DWORD PTR [esi+128]
  00152	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00156	e8 00 00 00 00	 call	 ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
  0015b	8d 4e 70	 lea	 ecx, DWORD PTR [esi+112]
  0015e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00162	e8 00 00 00 00	 call	 ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
  00167	bf 00 00 00 00	 mov	 edi, OFFSET ??_7?$CEncrypt@H@@6B@
  0016c	8d 4e 4c	 lea	 ecx, DWORD PTR [esi+76]
  0016f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00173	89 7e 40	 mov	 DWORD PTR [esi+64], edi
  00176	e8 00 00 00 00	 call	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
  0017b	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  0017e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00182	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  00185	e8 00 00 00 00	 call	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
  0018a	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioGuildInfo@@@@1PAVioGuildInfo@@A, 0 ; Singleton<ioGuildInfo>::ms_Singleton
  00191	e8 00 00 00 00	 call	 __EH_epilog3
  00196	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioGuildInfo@@UAE@XZ$0:
  00000	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioGuildInfo@@@@QAE@XZ ; Singleton<ioGuildInfo>::~Singleton<ioGuildInfo>
__unwindfunclet$??1ioGuildInfo@@UAE@XZ$1:
  0000b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 10	 add	 ecx, 16			; 00000010H
  00011	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??1ioGuildInfo@@UAE@XZ$2:
  00016	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 40	 add	 ecx, 64			; 00000040H
  0001c	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??1ioGuildInfo@@UAE@XZ$3:
  00021	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 70	 add	 ecx, 112		; 00000070H
  00027	e9 00 00 00 00	 jmp	 ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
__unwindfunclet$??1ioGuildInfo@@UAE@XZ$4:
  0002c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	81 c1 80 00 00
	00		 add	 ecx, 128		; 00000080H
  00035	e9 00 00 00 00	 jmp	 ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
__unwindfunclet$??1ioGuildInfo@@UAE@XZ$5:
  0003a	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  00043	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??1ioGuildInfo@@UAE@XZ$6:
  00049	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  00052	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??1ioGuildInfo@@UAE@XZ$7:
  00058	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  00061	e9 00 00 00 00	 jmp	 ??1?$vector@PAVioGuildData@@V?$allocator@PAVioGuildData@@@std@@@std@@QAE@XZ ; std::vector<ioGuildData *,std::allocator<ioGuildData *> >::~vector<ioGuildData *,std::allocator<ioGuildData *> >
__unwindfunclet$??1ioGuildInfo@@UAE@XZ$8:
  00066	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	81 c1 c4 00 00
	00		 add	 ecx, 196		; 000000c4H
  0006f	e9 00 00 00 00	 jmp	 ??1?$vector@UInvitationUser@ioGuildInfo@@V?$allocator@UInvitationUser@ioGuildInfo@@@std@@@std@@QAE@XZ ; std::vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >::~vector<ioGuildInfo::InvitationUser,std::allocator<ioGuildInfo::InvitationUser> >
__unwindfunclet$??1ioGuildInfo@@UAE@XZ$9:
  00074	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	81 c1 dc 00 00
	00		 add	 ecx, 220		; 000000dcH
  0007d	e9 00 00 00 00	 jmp	 ??1?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAE@XZ ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::~vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >
__unwindfunclet$??1ioGuildInfo@@UAE@XZ$10:
  00082	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	81 c1 ec 00 00
	00		 add	 ecx, 236		; 000000ecH
  0008b	e9 00 00 00 00	 jmp	 ??1?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAE@XZ ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::~vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >
__ehhandler$??1ioGuildInfo@@UAE@XZ:
  00090	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00094	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00097	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0009a	33 c8		 xor	 ecx, eax
  0009c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a1	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioGuildInfo@@UAE@XZ
  000a6	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioGuildInfo@@UAE@XZ ENDP				; ioGuildInfo::~ioGuildInfo
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@0PAV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@0PAV21@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$534223 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@0PAV21@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; _this$ = ecx

; 1315 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1316 : 		{	// copy initializing [_First, _Last), using allocator
; 1317 : 		return (_Uninitialized_copy(_First, _Last,
; 1318 : 			_Ptr, this->_Alval));

  00003	ff 75 10	 push	 DWORD PTR __Cat$534223[ebp]
  00006	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00009	51		 push	 ecx
  0000a	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00010	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00013	e8 00 00 00 00	 call	 ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00018	83 c4 14	 add	 esp, 20			; 00000014H

; 1319 : 		}

  0001b	5d		 pop	 ebp
  0001c	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@0PAV21@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogsp
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GioGuildInfo@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioGuildInfo@@UAEPAXI@Z PROC				; ioGuildInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioGuildInfo@@UAE@XZ	; ioGuildInfo::~ioGuildInfo
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@10
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@10:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioGuildInfo@@UAEPAXI@Z ENDP				; ioGuildInfo::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__catchsym$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z$0
__unwindtable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z$2
__ehfuncinfo$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Cat$534315 = 8					; size = 1
__Right$ = 8						; size = 4
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 535  : 		{	// construct by copying _Right

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi

; 536  : 		if (_Buy(_Right.size()))

  00011	8b 7d 08	 mov	 edi, DWORD PTR __Right$[ebp]
  00014	33 db		 xor	 ebx, ebx
  00016	89 1e		 mov	 DWORD PTR [esi], ebx
  00018	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  0001b	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  0001e	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00021	2b 07		 sub	 eax, DWORD PTR [edi]
  00023	6a 1c		 push	 28			; 0000001cH
  00025	59		 pop	 ecx
  00026	99		 cdq
  00027	f7 f9		 idiv	 ecx
  00029	8b ce		 mov	 ecx, esi
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy
  00031	84 c0		 test	 al, al
  00033	74 1f		 je	 SHORT $LN7@vector

; 537  : 			_TRY_BEGIN
; 538  : 			this->_Mylast = _Ucopy(_Right.begin(), _Right.end(),
; 539  : 				this->_Myfirst);

  00035	ff 75 08	 push	 DWORD PTR __Cat$534315[ebp]
  00038	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0003a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0003d	8b 3f		 mov	 edi, DWORD PTR [edi]
  0003f	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00042	52		 push	 edx
  00043	51		 push	 ecx
  00044	50		 push	 eax
  00045	57		 push	 edi
  00046	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+12], ebx
  00049	e8 00 00 00 00	 call	 ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0004e	83 c4 14	 add	 esp, 20			; 00000014H
  00051	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN7@vector:

; 543  : 			_CATCH_END
; 544  : 		}

  00054	8b c6		 mov	 eax, esi
  00056	e8 00 00 00 00	 call	 __EH_epilog3
  0005b	c2 04 00	 ret	 4
__catch$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z$0:

; 540  : 			_CATCH_ALL
; 541  : 			_Tidy();

  0005e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy

; 542  : 			_RERAISE;

  00066	33 db		 xor	 ebx, ebx
  00068	53		 push	 ebx
  00069	53		 push	 ebx
  0006a	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN38@vector:
$LN37@vector:
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??_C@_0BP@BLIMFFF@?$CFs?5?9?5not?5exist?5gashapon?5number?$AA@ ; `string'
PUBLIC	??_C@_0CF@MOJCCIEE@?$CFs?5?9?5reward?5Type?5is?5not?5etcitem?5@ ; `string'
PUBLIC	??_C@_0BM@OMBBCKOI@ioGuildInfo?3?3LoadRankReward?$AA@ ; `string'
PUBLIC	??_C@_01LFCBOECM@?4?$AA@			; `string'
PUBLIC	_rkLoader$GSCopy$
PUBLIC	_this$GSCopy$
PUBLIC	?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z ; ioGuildInfo::LoadRankReward
EXTRN	?FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z:PROC ; ioGashaponMgr::FindGashaponPresentList
EXTRN	?GetSingleton@ioGashaponMgr@@SAAAV1@XZ:PROC	; ioGashaponMgr::GetSingleton
EXTRN	__imp__atoi:PROC
EXTRN	__imp_?Split@ioStringConverter@@SAABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@0H@Z:PROC
EXTRN	__imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z:PROC
;	COMDAT ??_C@_0BP@BLIMFFF@?$CFs?5?9?5not?5exist?5gashapon?5number?$AA@
CONST	SEGMENT
??_C@_0BP@BLIMFFF@?$CFs?5?9?5not?5exist?5gashapon?5number?$AA@ DB '%s - n'
	DB	'ot exist gashapon number', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MOJCCIEE@?$CFs?5?9?5reward?5Type?5is?5not?5etcitem?5@
CONST	SEGMENT
??_C@_0CF@MOJCCIEE@?$CFs?5?9?5reward?5Type?5is?5not?5etcitem?5@ DB '%s - '
	DB	'reward Type is not etcitem Type', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OMBBCKOI@ioGuildInfo?3?3LoadRankReward?$AA@
CONST	SEGMENT
??_C@_0BM@OMBBCKOI@ioGuildInfo?3?3LoadRankReward?$AA@ DB 'ioGuildInfo::Lo'
	DB	'adRankReward', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4?$AA@
CONST	SEGMENT
??_C@_01LFCBOECM@?4?$AA@ DB '.', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$3
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z
_TEXT	SEGMENT
_this$GSCopy$ = -648					; size = 4
_kString$510234 = -644					; size = 16
$T534336 = -628						; size = 4
_pInfo$509764 = -628					; size = 4
_rkLoader$GSCopy$ = -624				; size = 4
tv3927 = -620						; size = 4
_iLine$510239 = -616					; size = 4
$T510235 = -612						; size = 28
$T510236 = -584						; size = 28
_szValue$ = -556					; size = 260
_szBuf$ = -296						; size = 260
___encStr$510085 = -36					; size = 16
___encStr$509933 = -36					; size = 14
___encStr$509772 = -36					; size = 14
__t$534370 = -32					; size = 12
__$EHRec$ = -12						; size = 12
_rkLoader$ = 8						; size = 4
?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z PROC ; ioGuildInfo::LoadRankReward, COMDAT
; _this$ = ecx

; 1231 : {

  00000	68 7c 02 00 00	 push	 636			; 0000027cH
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000f	8b 7d 08	 mov	 edi, DWORD PTR _rkLoader$[ebp]

; 1232 : 	rkLoader.SetTitle_e( "rank_reward" );

  00012	6a 02		 push	 2
  00014	89 8d 78 fd ff
	ff		 mov	 DWORD PTR _this$GSCopy$[ebp], ecx

; 1246 : 		{
; 1247 : 			SAFEDELETE( pInfo );

  0001a	89 bd 90 fd ff
	ff		 mov	 DWORD PTR _rkLoader$GSCopy$[ebp], edi
  00020	c7 45 e0 9f 8d
	85 81		 mov	 DWORD PTR __t$534370[ebp], -2121953889 ; 81858d9fH
  00027	c7 45 e4 b2 9e
	8e 9d		 mov	 DWORD PTR __t$534370[ebp+4], -1651597646 ; 9d8e9eb2H
  0002e	8d 45 e0	 lea	 eax, DWORD PTR __t$534370[ebp]
  00031	33 db		 xor	 ebx, ebx
  00033	c7 45 e8 8c 9e
	8f 00		 mov	 DWORD PTR __t$534370[ebp+8], 9412236 ; 008f9e8cH
  0003a	5a		 pop	 edx
$LL431@LoadRankRe:

; 1232 : 	rkLoader.SetTitle_e( "rank_reward" );

  0003b	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00041	83 c0 04	 add	 eax, 4
  00044	4a		 dec	 edx
  00045	75 f4		 jne	 SHORT $LL431@LoadRankRe
  00047	6a 08		 push	 8
  00049	5e		 pop	 esi
$LL428@LoadRankRe:
  0004a	8b c6		 mov	 eax, esi
  0004c	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  00051	79 05		 jns	 SHORT $LN602@LoadRankRe
  00053	48		 dec	 eax
  00054	83 c8 fc	 or	 eax, -4			; fffffffcH
  00057	40		 inc	 eax
$LN602@LoadRankRe:
  00058	b1 ed		 mov	 cl, -19			; ffffffedH
  0005a	2a c8		 sub	 cl, al
  0005c	30 4c 35 e0	 xor	 BYTE PTR __t$534370[ebp+esi], cl
  00060	46		 inc	 esi
  00061	83 fe 0b	 cmp	 esi, 11			; 0000000bH
  00064	7c e4		 jl	 SHORT $LL428@LoadRankRe
  00066	8d 45 e0	 lea	 eax, DWORD PTR __t$534370[ebp]
  00069	50		 push	 eax
  0006a	8b cf		 mov	 ecx, edi
  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 1233 : 
; 1234 : 	char szBuf[MAX_PATH] = "";

  00072	be 03 01 00 00	 mov	 esi, 259		; 00000103H
  00077	56		 push	 esi
  00078	8d 85 d9 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp+1]
  0007e	53		 push	 ebx
  0007f	50		 push	 eax
  00080	88 9d d8 fe ff
	ff		 mov	 BYTE PTR _szBuf$[ebp], bl
  00086	e8 00 00 00 00	 call	 _memset

; 1235 : 	char szValue[MAX_PATH] = "";

  0008b	56		 push	 esi
  0008c	8d 85 d5 fd ff
	ff		 lea	 eax, DWORD PTR _szValue$[ebp+1]
  00092	53		 push	 ebx
  00093	50		 push	 eax
  00094	88 9d d4 fd ff
	ff		 mov	 BYTE PTR _szValue$[ebp], bl
  0009a	e8 00 00 00 00	 call	 _memset
  0009f	83 c4 18	 add	 esp, 24			; 00000018H
  000a2	c7 85 94 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR tv3927[ebp], 1
  000ac	46		 inc	 esi
$LL313@LoadRankRe:

; 1236 : 
; 1237 : 	enum { MAX_RANK_CNT = 7, MAX_POSSIBLE_CNT = 100, };
; 1238 : 	for ( int i=0 ; i<MAX_RANK_CNT ; ++i )
; 1239 : 	{
; 1240 : 		GuildRankRwardInfo* pInfo = new GuildRankRwardInfo;

  000ad	6a 30		 push	 48			; 00000030H
  000af	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000b4	59		 pop	 ecx
  000b5	8b c8		 mov	 ecx, eax
  000b7	89 8d 8c fd ff
	ff		 mov	 DWORD PTR $T534336[ebp], ecx
  000bd	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  000c0	3b cb		 cmp	 ecx, ebx
  000c2	74 09		 je	 SHORT $LN316@LoadRankRe
  000c4	e8 00 00 00 00	 call	 ??0GuildRankRwardInfo@@QAE@XZ
  000c9	8b f8		 mov	 edi, eax
  000cb	eb 02		 jmp	 SHORT $LN317@LoadRankRe
$LN316@LoadRankRe:
  000cd	33 ff		 xor	 edi, edi
$LN317@LoadRankRe:
  000cf	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000d3	6a 03		 push	 3
  000d5	89 bd 8c fd ff
	ff		 mov	 DWORD PTR _pInfo$509764[ebp], edi

; 1241 : 
; 1242 : 		sprintf_s_e( szBuf, "reward%d_name", i + 1 );

  000db	c7 45 dc 9f 89
	9c 8b		 mov	 DWORD PTR ___encStr$509772[ebp], -1952675425 ; 8b9c899fH
  000e2	c7 45 e0 9f 88
	ce 8e		 mov	 DWORD PTR ___encStr$509772[ebp+4], -1899067233 ; 8ece889fH
  000e9	c7 45 e4 b2 82
	8a 87		 mov	 DWORD PTR ___encStr$509772[ebp+8], -2020965710 ; 878a82b2H
  000f0	8d 45 dc	 lea	 eax, DWORD PTR ___encStr$509772[ebp]
  000f3	66 c7 45 e8 88
	00		 mov	 WORD PTR ___encStr$509772[ebp+12], 136 ; 00000088H
  000f9	59		 pop	 ecx
$LL439@LoadRankRe:
  000fa	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00100	83 c0 04	 add	 eax, 4
  00103	49		 dec	 ecx
  00104	75 f4		 jne	 SHORT $LL439@LoadRankRe
  00106	ff b5 94 fd ff
	ff		 push	 DWORD PTR tv3927[ebp]
  0010c	80 75 e8 ed	 xor	 BYTE PTR ___encStr$509772[ebp+12], -19 ; ffffffedH
  00110	8d 45 dc	 lea	 eax, DWORD PTR ___encStr$509772[ebp]
  00113	50		 push	 eax
  00114	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0011a	50		 push	 eax
  0011b	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ ; sprintf_s<260>

; 1243 : 		rkLoader.LoadString( szBuf, "", szValue, MAX_PATH );

  00120	8b 8d 90 fd ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  00126	83 c4 0c	 add	 esp, 12			; 0000000cH
  00129	56		 push	 esi
  0012a	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _szValue$[ebp]
  00130	50		 push	 eax
  00131	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00136	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0013c	50		 push	 eax
  0013d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z

; 1244 : 		pInfo->m_szName = szValue;

  00143	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _szValue$[ebp]
  00149	50		 push	 eax
  0014a	8b cf		 mov	 ecx, edi
  0014c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z

; 1245 : 		if ( pInfo->m_szName.IsEmpty() )

  00152	8b cf		 mov	 ecx, edi
  00154	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@ioHashString@@QBE_NXZ
  0015a	84 c0		 test	 al, al
  0015c	0f 85 1e 03 00
	00		 jne	 $LN587@LoadRankRe

; 1248 : 			break;
; 1249 : 		}
; 1250 : 
; 1251 : 		ZeroMemory( szBuf,sizeof(szBuf) );

  00162	56		 push	 esi
  00163	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00169	53		 push	 ebx
  0016a	50		 push	 eax
  0016b	e8 00 00 00 00	 call	 _memset
  00170	83 c4 0c	 add	 esp, 12			; 0000000cH
  00173	6a 03		 push	 3

; 1252 : 		sprintf_s_e( szBuf, "reward%d_rank", i + 1 );

  00175	c7 45 dc 9f 89
	9c 8b		 mov	 DWORD PTR ___encStr$509933[ebp], -1952675425 ; 8b9c899fH
  0017c	c7 45 e0 9f 88
	ce 8e		 mov	 DWORD PTR ___encStr$509933[ebp+4], -1899067233 ; 8ece889fH
  00183	c7 45 e4 b2 9e
	8a 84		 mov	 DWORD PTR ___encStr$509933[ebp+8], -2071290190 ; 848a9eb2H
  0018a	8d 45 dc	 lea	 eax, DWORD PTR ___encStr$509933[ebp]
  0018d	66 c7 45 e8 86
	00		 mov	 WORD PTR ___encStr$509933[ebp+12], 134 ; 00000086H
  00193	59		 pop	 ecx
$LL450@LoadRankRe:
  00194	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0019a	83 c0 04	 add	 eax, 4
  0019d	49		 dec	 ecx
  0019e	75 f4		 jne	 SHORT $LL450@LoadRankRe
  001a0	ff b5 94 fd ff
	ff		 push	 DWORD PTR tv3927[ebp]
  001a6	80 75 e8 ed	 xor	 BYTE PTR ___encStr$509933[ebp+12], -19 ; ffffffedH
  001aa	8d 45 dc	 lea	 eax, DWORD PTR ___encStr$509933[ebp]
  001ad	50		 push	 eax
  001ae	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  001b4	50		 push	 eax
  001b5	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ ; sprintf_s<260>

; 1253 : 		pInfo->m_iRank = rkLoader.LoadInt( szBuf, 1000 );

  001ba	8b 8d 90 fd ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  001c0	83 c4 0c	 add	 esp, 12			; 0000000cH
  001c3	68 e8 03 00 00	 push	 1000			; 000003e8H
  001c8	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  001ce	50		 push	 eax
  001cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 1254 : 
; 1255 : 		ZeroMemory( szBuf,sizeof(szBuf) );

  001d5	56		 push	 esi
  001d6	89 47 10	 mov	 DWORD PTR [edi+16], eax
  001d9	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  001df	53		 push	 ebx
  001e0	50		 push	 eax
  001e1	e8 00 00 00 00	 call	 _memset

; 1256 : 		ZeroMemory( szValue,sizeof(szValue) );

  001e6	56		 push	 esi
  001e7	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _szValue$[ebp]
  001ed	53		 push	 ebx
  001ee	50		 push	 eax
  001ef	e8 00 00 00 00	 call	 _memset
  001f4	83 c4 18	 add	 esp, 24			; 00000018H
  001f7	6a 03		 push	 3

; 1257 : 		sprintf_s_e( szBuf, "reward%d_values", i + 1 );

  001f9	c7 45 dc 9f 89
	9c 8b		 mov	 DWORD PTR ___encStr$510085[ebp], -1952675425 ; 8b9c899fH
  00200	c7 45 e0 9f 88
	ce 8e		 mov	 DWORD PTR ___encStr$510085[ebp+4], -1899067233 ; 8ece889fH
  00207	c7 45 e4 b2 9a
	8a 86		 mov	 DWORD PTR ___encStr$510085[ebp+8], -2037736782 ; 868a9ab2H
  0020e	8d 45 dc	 lea	 eax, DWORD PTR ___encStr$510085[ebp]
  00211	c7 45 e8 98 89
	98 00		 mov	 DWORD PTR ___encStr$510085[ebp+12], 9996696 ; 00988998H
  00218	59		 pop	 ecx
$LL458@LoadRankRe:
  00219	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0021f	83 c0 04	 add	 eax, 4
  00222	49		 dec	 ecx
  00223	75 f4		 jne	 SHORT $LL458@LoadRankRe
  00225	6a 0c		 push	 12			; 0000000cH
  00227	58		 pop	 eax
$LL455@LoadRankRe:
  00228	8b c8		 mov	 ecx, eax
  0022a	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00230	79 05		 jns	 SHORT $LN603@LoadRankRe
  00232	49		 dec	 ecx
  00233	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00236	41		 inc	 ecx
$LN603@LoadRankRe:
  00237	b2 ed		 mov	 dl, -19			; ffffffedH
  00239	2a d1		 sub	 dl, cl
  0023b	30 54 05 dc	 xor	 BYTE PTR ___encStr$510085[ebp+eax], dl
  0023f	40		 inc	 eax
  00240	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  00243	7c e3		 jl	 SHORT $LL455@LoadRankRe
  00245	ff b5 94 fd ff
	ff		 push	 DWORD PTR tv3927[ebp]
  0024b	8d 45 dc	 lea	 eax, DWORD PTR ___encStr$510085[ebp]
  0024e	50		 push	 eax
  0024f	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00255	50		 push	 eax
  00256	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ ; sprintf_s<260>

; 1258 : 		rkLoader.LoadString( szBuf, "", szValue, MAX_PATH );

  0025b	8b 8d 90 fd ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  00261	83 c4 0c	 add	 esp, 12			; 0000000cH
  00264	56		 push	 esi
  00265	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _szValue$[ebp]
  0026b	50		 push	 eax
  0026c	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00271	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00277	50		 push	 eax
  00278	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z

; 1259 : 		StringVector kString = ioStringConverter::Split( szValue, "." );

  0027e	6a 01		 push	 1
  00280	68 00 00 00 00	 push	 OFFSET ??_C@_01LFCBOECM@?4?$AA@
  00285	8d 8d 9c fd ff
	ff		 lea	 ecx, DWORD PTR $T510235[ebp]
  0028b	c7 85 b0 fd ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T510235[ebp+20], 15 ; 0000000fH
  00295	89 9d ac fd ff
	ff		 mov	 DWORD PTR $T510235[ebp+16], ebx
  0029b	88 9d 9c fd ff
	ff		 mov	 BYTE PTR $T510235[ebp], bl
  002a1	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  002a6	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _szValue$[ebp]
  002ac	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  002b3	c7 85 cc fd ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T510236[ebp+20], 15 ; 0000000fH
  002bd	89 9d c8 fd ff
	ff		 mov	 DWORD PTR $T510236[ebp+16], ebx
  002c3	88 9d b8 fd ff
	ff		 mov	 BYTE PTR $T510236[ebp], bl
  002c9	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
$LL598@LoadRankRe:
  002cc	8a 10		 mov	 dl, BYTE PTR [eax]
  002ce	40		 inc	 eax
  002cf	3a d3		 cmp	 dl, bl
  002d1	75 f9		 jne	 SHORT $LL598@LoadRankRe
  002d3	2b c1		 sub	 eax, ecx
  002d5	50		 push	 eax
  002d6	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _szValue$[ebp]
  002dc	50		 push	 eax
  002dd	8d 8d b8 fd ff
	ff		 lea	 ecx, DWORD PTR $T510236[ebp]
  002e3	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  002e8	53		 push	 ebx
  002e9	8d 85 9c fd ff
	ff		 lea	 eax, DWORD PTR $T510235[ebp]
  002ef	50		 push	 eax
  002f0	8d 85 b8 fd ff
	ff		 lea	 eax, DWORD PTR $T510236[ebp]
  002f6	50		 push	 eax
  002f7	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  002fb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Split@ioStringConverter@@SAABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@0H@Z
  00301	83 c4 0c	 add	 esp, 12			; 0000000cH
  00304	50		 push	 eax
  00305	8d 8d 7c fd ff
	ff		 lea	 ecx, DWORD PTR _kString$510234[ebp]
  0030b	e8 00 00 00 00	 call	 ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00310	53		 push	 ebx
  00311	6a 01		 push	 1
  00313	8d 8d b8 fd ff
	ff		 lea	 ecx, DWORD PTR $T510236[ebp]
  00319	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  0031e	53		 push	 ebx
  0031f	6a 01		 push	 1
  00321	8d 8d 9c fd ff
	ff		 lea	 ecx, DWORD PTR $T510235[ebp]
  00327	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0032b	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 1260 : 		if ( kString.size() > 0 )

  00330	8b 85 80 fd ff
	ff		 mov	 eax, DWORD PTR _kString$510234[ebp+4]
  00336	2b 85 7c fd ff
	ff		 sub	 eax, DWORD PTR _kString$510234[ebp]
  0033c	6a 1c		 push	 28			; 0000001cH
  0033e	99		 cdq
  0033f	59		 pop	 ecx
  00340	f7 f9		 idiv	 ecx
  00342	3b c3		 cmp	 eax, ebx
  00344	0f 86 9b 00 00
	00		 jbe	 $LN8@LoadRankRe

; 1261 : 		{
; 1262 : 			for ( int iLine=0 ; iLine<(int)kString.size() ; ++iLine )

  0034a	89 9d 98 fd ff
	ff		 mov	 DWORD PTR _iLine$510239[ebp], ebx
  00350	0f 8e 8f 00 00
	00		 jle	 $LN8@LoadRankRe
$LN10@LoadRankRe:

; 1263 : 			{
; 1264 : 				if ( iLine== 0 )

  00356	39 9d 98 fd ff
	ff		 cmp	 DWORD PTR _iLine$510239[ebp], ebx
  0035c	75 19		 jne	 SHORT $LN7@LoadRankRe

; 1265 : 					pInfo->m_RewardItem.m_iPresentType = atoi( kString[iLine].c_str() );

  0035e	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR _kString$510234[ebp]
  00364	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00368	72 02		 jb	 SHORT $LN539@LoadRankRe
  0036a	8b 00		 mov	 eax, DWORD PTR [eax]
$LN539@LoadRankRe:
  0036c	50		 push	 eax
  0036d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00373	59		 pop	 ecx
  00374	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN7@LoadRankRe:

; 1266 : 				if ( iLine== 1 )

  00377	83 bd 98 fd ff
	ff 01		 cmp	 DWORD PTR _iLine$510239[ebp], 1
  0037e	75 1c		 jne	 SHORT $LN6@LoadRankRe

; 1267 : 					pInfo->m_RewardItem.m_iValue1 =atoi( kString[iLine].c_str() );

  00380	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR _kString$510234[ebp]
  00386	83 c0 1c	 add	 eax, 28			; 0000001cH
  00389	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0038d	72 02		 jb	 SHORT $LN547@LoadRankRe
  0038f	8b 00		 mov	 eax, DWORD PTR [eax]
$LN547@LoadRankRe:
  00391	50		 push	 eax
  00392	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00398	59		 pop	 ecx
  00399	89 47 18	 mov	 DWORD PTR [edi+24], eax
$LN6@LoadRankRe:

; 1268 : 				if ( iLine== 2 )

  0039c	83 bd 98 fd ff
	ff 02		 cmp	 DWORD PTR _iLine$510239[ebp], 2
  003a3	75 1c		 jne	 SHORT $LN9@LoadRankRe

; 1269 : 					pInfo->m_RewardItem.m_iValue2 =atoi( kString[iLine].c_str() );

  003a5	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR _kString$510234[ebp]
  003ab	83 c0 38	 add	 eax, 56			; 00000038H
  003ae	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  003b2	72 02		 jb	 SHORT $LN555@LoadRankRe
  003b4	8b 00		 mov	 eax, DWORD PTR [eax]
$LN555@LoadRankRe:
  003b6	50		 push	 eax
  003b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  003bd	59		 pop	 ecx
  003be	89 47 1c	 mov	 DWORD PTR [edi+28], eax
$LN9@LoadRankRe:

; 1261 : 		{
; 1262 : 			for ( int iLine=0 ; iLine<(int)kString.size() ; ++iLine )

  003c1	8b 85 80 fd ff
	ff		 mov	 eax, DWORD PTR _kString$510234[ebp+4]
  003c7	2b 85 7c fd ff
	ff		 sub	 eax, DWORD PTR _kString$510234[ebp]
  003cd	6a 1c		 push	 28			; 0000001cH
  003cf	99		 cdq
  003d0	59		 pop	 ecx
  003d1	f7 f9		 idiv	 ecx
  003d3	ff 85 98 fd ff
	ff		 inc	 DWORD PTR _iLine$510239[ebp]
  003d9	39 85 98 fd ff
	ff		 cmp	 DWORD PTR _iLine$510239[ebp], eax
  003df	0f 8c 71 ff ff
	ff		 jl	 $LN10@LoadRankRe
$LN8@LoadRankRe:

; 1270 : 			}
; 1271 : 		}
; 1272 : 
; 1273 : 		if ( pInfo->m_RewardItem.m_iPresentType != PRESENT_ETC_ITEM )

  003e5	83 7f 14 03	 cmp	 DWORD PTR [edi+20], 3
  003e9	74 2a		 je	 SHORT $LN4@LoadRankRe

; 1274 : 		{
; 1275 : 			LOG.PrintTimeAndLog( 0, "%s - reward Type is not etcitem Type", __FUNCTION__ );

  003eb	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@OMBBCKOI@ioGuildInfo?3?3LoadRankReward?$AA@
  003f0	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@MOJCCIEE@?$CFs?5?9?5reward?5Type?5is?5not?5etcitem?5@
$LN605@LoadRankRe:
  003f5	53		 push	 ebx
  003f6	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  003fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  00402	83 c4 10	 add	 esp, 16			; 00000010H

; 1276 : 			SAFEDELETE( pInfo );

  00405	8b cf		 mov	 ecx, edi
  00407	e8 00 00 00 00	 call	 ??1GuildRankRwardInfo@@QAE@XZ
  0040c	57		 push	 edi
  0040d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00412	59		 pop	 ecx

; 1277 : 			continue;

  00413	eb 44		 jmp	 SHORT $LN604@LoadRankRe
$LN4@LoadRankRe:

; 1278 : 		}
; 1279 : 		pInfo->m_RewardPossibleItemVec = g_GashaponMgr.FindGashaponPresentList( pInfo->m_RewardItem.m_iValue1 );

  00415	ff 77 18	 push	 DWORD PTR [edi+24]
  00418	e8 00 00 00 00	 call	 ?GetSingleton@ioGashaponMgr@@SAAAV1@XZ ; ioGashaponMgr::GetSingleton
  0041d	8b c8		 mov	 ecx, eax
  0041f	e8 00 00 00 00	 call	 ?FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z ; ioGashaponMgr::FindGashaponPresentList
  00424	50		 push	 eax
  00425	8d 4f 20	 lea	 ecx, DWORD PTR [edi+32]
  00428	e8 00 00 00 00	 call	 ??4?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::operator=

; 1280 : 		if ( pInfo->m_RewardPossibleItemVec.empty() )

  0042d	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  00430	3b 47 24	 cmp	 eax, DWORD PTR [edi+36]
  00433	75 0c		 jne	 SHORT $LN2@LoadRankRe

; 1281 : 		{
; 1282 : 			LOG.PrintTimeAndLog( 0, "%s - not exist gashapon number", __FUNCTION__ );

  00435	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@OMBBCKOI@ioGuildInfo?3?3LoadRankReward?$AA@
  0043a	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@BLIMFFF@?$CFs?5?9?5not?5exist?5gashapon?5number?$AA@

; 1283 : 			SAFEDELETE( pInfo );
; 1284 : 			continue;

  0043f	eb b4		 jmp	 SHORT $LN605@LoadRankRe
$LN2@LoadRankRe:

; 1285 : 		}
; 1286 : 		m_RankRewardVec.push_back( pInfo );

  00441	8b 8d 78 fd ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00447	8d 85 8c fd ff
	ff		 lea	 eax, DWORD PTR _pInfo$509764[ebp]
  0044d	50		 push	 eax
  0044e	81 c1 ec 00 00
	00		 add	 ecx, 236		; 000000ecH
  00454	e8 00 00 00 00	 call	 ?push_back@?$vector@PAUGuildRankRwardInfo@@V?$allocator@PAUGuildRankRwardInfo@@@std@@@std@@QAEXABQAUGuildRankRwardInfo@@@Z ; std::vector<GuildRankRwardInfo *,std::allocator<GuildRankRwardInfo *> >::push_back
$LN604@LoadRankRe:

; 1287 : 	}

  00459	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0045d	8d 8d 7c fd ff
	ff		 lea	 ecx, DWORD PTR _kString$510234[ebp]
  00463	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
  00468	ff 85 94 fd ff
	ff		 inc	 DWORD PTR tv3927[ebp]
  0046e	8b 85 94 fd ff
	ff		 mov	 eax, DWORD PTR tv3927[ebp]
  00474	48		 dec	 eax
  00475	83 f8 07	 cmp	 eax, 7
  00478	0f 8c 2f fc ff
	ff		 jl	 $LL313@LoadRankRe

; 1245 : 		if ( pInfo->m_szName.IsEmpty() )

  0047e	eb 12		 jmp	 SHORT $LN442@LoadRankRe
$LN587@LoadRankRe:

; 1246 : 		{
; 1247 : 			SAFEDELETE( pInfo );

  00480	3b fb		 cmp	 edi, ebx
  00482	74 0e		 je	 SHORT $LN442@LoadRankRe
  00484	8b cf		 mov	 ecx, edi
  00486	e8 00 00 00 00	 call	 ??1GuildRankRwardInfo@@QAE@XZ
  0048b	57		 push	 edi
  0048c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00491	59		 pop	 ecx
$LN442@LoadRankRe:

; 1288 : }

  00492	e8 00 00 00 00	 call	 __EH_epilog3_GS
  00497	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$0:
  00000	ff b5 8c fd ff
	ff		 push	 DWORD PTR $T534336[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	c3		 ret	 0
__unwindfunclet$?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$1:
  0000d	8d 8d 9c fd ff
	ff		 lea	 ecx, DWORD PTR $T510235[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$2:
  00018	8d 8d b8 fd ff
	ff		 lea	 ecx, DWORD PTR $T510236[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$3:
  00023	8d 8d 7c fd ff
	ff		 lea	 ecx, DWORD PTR _kString$510234[ebp]
  00029	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z:
  0002e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00032	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00035	8b 8a 74 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-652]
  0003b	33 c8		 xor	 ecx, eax
  0003d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00042	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00045	33 c8		 xor	 ecx, eax
  00047	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z
  00051	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z ENDP ; ioGuildInfo::LoadRankReward
PUBLIC	??_C@_0BO@CJJLKKIN@ioGuildInfo?3?3LoadAttendReward?$AA@ ; `string'
PUBLIC	_rkLoader$GSCopy$
PUBLIC	_this$GSCopy$
PUBLIC	?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z ; ioGuildInfo::LoadAttendReward
;	COMDAT ??_C@_0BO@CJJLKKIN@ioGuildInfo?3?3LoadAttendReward?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
CONST	SEGMENT
??_C@_0BO@CJJLKKIN@ioGuildInfo?3?3LoadAttendReward?$AA@ DB 'ioGuildInfo::'
	DB	'LoadAttendReward', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$3
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioguildinfo.cpp
xdata$x	ENDS
;	COMDAT ?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z
_TEXT	SEGMENT
_this$GSCopy$ = -652					; size = 4
_kString$510588 = -648					; size = 16
_rkLoader$GSCopy$ = -632				; size = 4
$T534882 = -628						; size = 4
_pInfo$510277 = -628					; size = 4
tv3256 = -624						; size = 4
_iLine$510592 = -620					; size = 4
$T510589 = -616						; size = 28
$T510590 = -588						; size = 28
_szBuf$ = -560						; size = 260
_szValue$ = -300					; size = 260
__t$534929 = -40					; size = 18
___encStr$510440 = -40					; size = 16
___encStr$510285 = -36					; size = 14
__$EHRec$ = -12						; size = 12
_rkLoader$ = 8						; size = 4
?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z PROC ; ioGuildInfo::LoadAttendReward, COMDAT
; _this$ = ecx

; 1291 : {

  00000	68 80 02 00 00	 push	 640			; 00000280H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000f	89 8d 74 fd ff
	ff		 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _rkLoader$[ebp]

; 1292 : 	rkLoader.SetTitle_e( "attendance_reward" );

  00018	6a 04		 push	 4

; 1306 : 		{
; 1307 : 			SAFEDELETE( pInfo );

  0001a	89 8d 88 fd ff
	ff		 mov	 DWORD PTR _rkLoader$GSCopy$[ebp], ecx
  00020	c7 45 d8 8c 98
	9f 8f		 mov	 DWORD PTR __t$534929[ebp], -1885366132 ; 8f9f988cH
  00027	c7 45 dc 83 88
	8a 84		 mov	 DWORD PTR __t$534929[ebp+4], -2071295869 ; 848a8883H
  0002e	c7 45 e0 8e 89
	b4 98		 mov	 DWORD PTR __t$534929[ebp+8], -1732998770 ; 98b4898eH
  00035	c7 45 e4 88 9b
	8a 98		 mov	 DWORD PTR __t$534929[ebp+12], -1735746680 ; 988a9b88H
  0003c	8d 45 d8	 lea	 eax, DWORD PTR __t$534929[ebp]
  0003f	33 db		 xor	 ebx, ebx
  00041	66 c7 45 e8 89
	00		 mov	 WORD PTR __t$534929[ebp+16], 137 ; 00000089H
  00047	5a		 pop	 edx
$LL332@LoadAttend:

; 1292 : 	rkLoader.SetTitle_e( "attendance_reward" );

  00048	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0004e	83 c0 04	 add	 eax, 4
  00051	4a		 dec	 edx
  00052	75 f4		 jne	 SHORT $LL332@LoadAttend
  00054	80 75 e8 ed	 xor	 BYTE PTR __t$534929[ebp+16], -19 ; ffffffedH
  00058	8d 45 d8	 lea	 eax, DWORD PTR __t$534929[ebp]
  0005b	50		 push	 eax
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 1293 : 
; 1294 : 	char szBuf[MAX_PATH] = "";

  00062	be 03 01 00 00	 mov	 esi, 259		; 00000103H
  00067	56		 push	 esi
  00068	8d 85 d1 fd ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp+1]
  0006e	53		 push	 ebx
  0006f	50		 push	 eax
  00070	88 9d d0 fd ff
	ff		 mov	 BYTE PTR _szBuf$[ebp], bl
  00076	e8 00 00 00 00	 call	 _memset

; 1295 : 	char szValue[MAX_PATH] = "";

  0007b	56		 push	 esi
  0007c	8d 85 d5 fe ff
	ff		 lea	 eax, DWORD PTR _szValue$[ebp+1]
  00082	53		 push	 ebx
  00083	50		 push	 eax
  00084	88 9d d4 fe ff
	ff		 mov	 BYTE PTR _szValue$[ebp], bl
  0008a	e8 00 00 00 00	 call	 _memset
  0008f	83 c4 18	 add	 esp, 24			; 00000018H
  00092	c7 85 90 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR tv3256[ebp], 1
  0009c	46		 inc	 esi
$LL214@LoadAttend:

; 1296 : 
; 1297 : 	enum { MAX_RANK_CNT = 7, MAX_POSSIBLE_CNT = 100, };
; 1298 : 	for ( int i=0 ; i<MAX_RANK_CNT ; ++i )
; 1299 : 	{
; 1300 : 		GuildAttendRwardInfo* pInfo = new GuildAttendRwardInfo;

  0009d	6a 30		 push	 48			; 00000030H
  0009f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000a4	59		 pop	 ecx
  000a5	8b c8		 mov	 ecx, eax
  000a7	89 8d 8c fd ff
	ff		 mov	 DWORD PTR $T534882[ebp], ecx
  000ad	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  000b0	3b cb		 cmp	 ecx, ebx
  000b2	74 09		 je	 SHORT $LN217@LoadAttend
  000b4	e8 00 00 00 00	 call	 ??0GuildAttendRwardInfo@@QAE@XZ
  000b9	8b f8		 mov	 edi, eax
  000bb	eb 02		 jmp	 SHORT $LN218@LoadAttend
$LN217@LoadAttend:
  000bd	33 ff		 xor	 edi, edi
$LN218@LoadAttend:
  000bf	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000c3	6a 03		 push	 3
  000c5	89 bd 8c fd ff
	ff		 mov	 DWORD PTR _pInfo$510277[ebp], edi

; 1301 : 
; 1302 : 		sprintf_s_e( szBuf, "reward%d_name", i + 1 );

  000cb	c7 45 dc 9f 89
	9c 8b		 mov	 DWORD PTR ___encStr$510285[ebp], -1952675425 ; 8b9c899fH
  000d2	c7 45 e0 9f 88
	ce 8e		 mov	 DWORD PTR ___encStr$510285[ebp+4], -1899067233 ; 8ece889fH
  000d9	c7 45 e4 b2 82
	8a 87		 mov	 DWORD PTR ___encStr$510285[ebp+8], -2020965710 ; 878a82b2H
  000e0	8d 45 dc	 lea	 eax, DWORD PTR ___encStr$510285[ebp]
  000e3	66 c7 45 e8 88
	00		 mov	 WORD PTR ___encStr$510285[ebp+12], 136 ; 00000088H
  000e9	59		 pop	 ecx
$LL340@LoadAttend:
  000ea	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  000f0	83 c0 04	 add	 eax, 4
  000f3	49		 dec	 ecx
  000f4	75 f4		 jne	 SHORT $LL340@LoadAttend
  000f6	ff b5 90 fd ff
	ff		 push	 DWORD PTR tv3256[ebp]
  000fc	80 75 e8 ed	 xor	 BYTE PTR ___encStr$510285[ebp+12], -19 ; ffffffedH
  00100	8d 45 dc	 lea	 eax, DWORD PTR ___encStr$510285[ebp]
  00103	50		 push	 eax
  00104	8d 85 d0 fd ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ ; sprintf_s<260>

; 1303 : 		rkLoader.LoadString( szBuf, "", szValue, MAX_PATH );

  00110	8b 8d 88 fd ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  00116	83 c4 0c	 add	 esp, 12			; 0000000cH
  00119	56		 push	 esi
  0011a	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szValue$[ebp]
  00120	50		 push	 eax
  00121	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00126	8d 85 d0 fd ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0012c	50		 push	 eax
  0012d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z

; 1304 : 		pInfo->m_szName = szValue;

  00133	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szValue$[ebp]
  00139	50		 push	 eax
  0013a	8b cf		 mov	 ecx, edi
  0013c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z

; 1305 : 		if ( pInfo->m_szName.IsEmpty() )

  00142	8b cf		 mov	 ecx, edi
  00144	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@ioHashString@@QBE_NXZ
  0014a	84 c0		 test	 al, al
  0014c	0f 85 a8 02 00
	00		 jne	 $LN478@LoadAttend

; 1308 : 			break;
; 1309 : 		}
; 1310 : 
; 1311 : 		ZeroMemory( szBuf,sizeof(szBuf) );

  00152	56		 push	 esi
  00153	8d 85 d0 fd ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00159	53		 push	 ebx
  0015a	50		 push	 eax
  0015b	e8 00 00 00 00	 call	 _memset

; 1312 : 		ZeroMemory( szValue,sizeof(szValue) );

  00160	56		 push	 esi
  00161	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szValue$[ebp]
  00167	53		 push	 ebx
  00168	50		 push	 eax
  00169	e8 00 00 00 00	 call	 _memset
  0016e	83 c4 18	 add	 esp, 24			; 00000018H
  00171	6a 03		 push	 3

; 1313 : 		sprintf_s_e( szBuf, "reward%d_values", i + 1 );

  00173	c7 45 d8 9f 89
	9c 8b		 mov	 DWORD PTR ___encStr$510440[ebp], -1952675425 ; 8b9c899fH
  0017a	c7 45 dc 9f 88
	ce 8e		 mov	 DWORD PTR ___encStr$510440[ebp+4], -1899067233 ; 8ece889fH
  00181	c7 45 e0 b2 9a
	8a 86		 mov	 DWORD PTR ___encStr$510440[ebp+8], -2037736782 ; 868a9ab2H
  00188	8d 45 d8	 lea	 eax, DWORD PTR ___encStr$510440[ebp]
  0018b	c7 45 e4 98 89
	98 00		 mov	 DWORD PTR ___encStr$510440[ebp+12], 9996696 ; 00988998H
  00192	59		 pop	 ecx
$LL351@LoadAttend:
  00193	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00199	83 c0 04	 add	 eax, 4
  0019c	49		 dec	 ecx
  0019d	75 f4		 jne	 SHORT $LL351@LoadAttend
  0019f	6a 0c		 push	 12			; 0000000cH
  001a1	58		 pop	 eax
$LL348@LoadAttend:
  001a2	8b c8		 mov	 ecx, eax
  001a4	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  001aa	79 05		 jns	 SHORT $LN491@LoadAttend
  001ac	49		 dec	 ecx
  001ad	83 c9 fc	 or	 ecx, -4			; fffffffcH
  001b0	41		 inc	 ecx
$LN491@LoadAttend:
  001b1	b2 ed		 mov	 dl, -19			; ffffffedH
  001b3	2a d1		 sub	 dl, cl
  001b5	30 54 05 d8	 xor	 BYTE PTR ___encStr$510440[ebp+eax], dl
  001b9	40		 inc	 eax
  001ba	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  001bd	7c e3		 jl	 SHORT $LL348@LoadAttend
  001bf	ff b5 90 fd ff
	ff		 push	 DWORD PTR tv3256[ebp]
  001c5	8d 45 d8	 lea	 eax, DWORD PTR ___encStr$510440[ebp]
  001c8	50		 push	 eax
  001c9	8d 85 d0 fd ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  001cf	50		 push	 eax
  001d0	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ ; sprintf_s<260>

; 1314 : 		rkLoader.LoadString( szBuf, "", szValue, MAX_PATH );

  001d5	8b 8d 88 fd ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  001db	83 c4 0c	 add	 esp, 12			; 0000000cH
  001de	56		 push	 esi
  001df	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szValue$[ebp]
  001e5	50		 push	 eax
  001e6	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  001eb	8d 85 d0 fd ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  001f1	50		 push	 eax
  001f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z

; 1315 : 		StringVector kString = ioStringConverter::Split( szValue, "." );

  001f8	6a 01		 push	 1
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_01LFCBOECM@?4?$AA@
  001ff	8d 8d 98 fd ff
	ff		 lea	 ecx, DWORD PTR $T510589[ebp]
  00205	c7 85 ac fd ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T510589[ebp+20], 15 ; 0000000fH
  0020f	89 9d a8 fd ff
	ff		 mov	 DWORD PTR $T510589[ebp+16], ebx
  00215	88 9d 98 fd ff
	ff		 mov	 BYTE PTR $T510589[ebp], bl
  0021b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00220	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szValue$[ebp]
  00226	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0022d	c7 85 c8 fd ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T510590[ebp+20], 15 ; 0000000fH
  00237	89 9d c4 fd ff
	ff		 mov	 DWORD PTR $T510590[ebp+16], ebx
  0023d	88 9d b4 fd ff
	ff		 mov	 BYTE PTR $T510590[ebp], bl
  00243	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
$LL487@LoadAttend:
  00246	8a 10		 mov	 dl, BYTE PTR [eax]
  00248	40		 inc	 eax
  00249	3a d3		 cmp	 dl, bl
  0024b	75 f9		 jne	 SHORT $LL487@LoadAttend
  0024d	2b c1		 sub	 eax, ecx
  0024f	50		 push	 eax
  00250	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szValue$[ebp]
  00256	50		 push	 eax
  00257	8d 8d b4 fd ff
	ff		 lea	 ecx, DWORD PTR $T510590[ebp]
  0025d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00262	53		 push	 ebx
  00263	8d 85 98 fd ff
	ff		 lea	 eax, DWORD PTR $T510589[ebp]
  00269	50		 push	 eax
  0026a	8d 85 b4 fd ff
	ff		 lea	 eax, DWORD PTR $T510590[ebp]
  00270	50		 push	 eax
  00271	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00275	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Split@ioStringConverter@@SAABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@0H@Z
  0027b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0027e	50		 push	 eax
  0027f	8d 8d 78 fd ff
	ff		 lea	 ecx, DWORD PTR _kString$510588[ebp]
  00285	e8 00 00 00 00	 call	 ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0028a	53		 push	 ebx
  0028b	6a 01		 push	 1
  0028d	8d 8d b4 fd ff
	ff		 lea	 ecx, DWORD PTR $T510590[ebp]
  00293	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  00298	53		 push	 ebx
  00299	6a 01		 push	 1
  0029b	8d 8d 98 fd ff
	ff		 lea	 ecx, DWORD PTR $T510589[ebp]
  002a1	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  002a5	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 1316 : 		if ( kString.size() > 0 )

  002aa	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR _kString$510588[ebp+4]
  002b0	2b 85 78 fd ff
	ff		 sub	 eax, DWORD PTR _kString$510588[ebp]
  002b6	6a 1c		 push	 28			; 0000001cH
  002b8	99		 cdq
  002b9	59		 pop	 ecx
  002ba	f7 f9		 idiv	 ecx
  002bc	3b c3		 cmp	 eax, ebx
  002be	0f 86 9b 00 00
	00		 jbe	 $LN8@LoadAttend

; 1317 : 		{
; 1318 : 			for ( int iLine=0 ; iLine<(int)kString.size() ; ++iLine )

  002c4	89 9d 94 fd ff
	ff		 mov	 DWORD PTR _iLine$510592[ebp], ebx
  002ca	0f 8e 8f 00 00
	00		 jle	 $LN8@LoadAttend
$LN10@LoadAttend:

; 1319 : 			{
; 1320 : 				if ( iLine== 0 )

  002d0	39 9d 94 fd ff
	ff		 cmp	 DWORD PTR _iLine$510592[ebp], ebx
  002d6	75 19		 jne	 SHORT $LN7@LoadAttend

; 1321 : 					pInfo->m_RewardItem.m_iPresentType = atoi( kString[iLine].c_str() );

  002d8	8b 85 78 fd ff
	ff		 mov	 eax, DWORD PTR _kString$510588[ebp]
  002de	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  002e2	72 02		 jb	 SHORT $LN432@LoadAttend
  002e4	8b 00		 mov	 eax, DWORD PTR [eax]
$LN432@LoadAttend:
  002e6	50		 push	 eax
  002e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  002ed	59		 pop	 ecx
  002ee	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN7@LoadAttend:

; 1322 : 				if ( iLine== 1 )

  002f1	83 bd 94 fd ff
	ff 01		 cmp	 DWORD PTR _iLine$510592[ebp], 1
  002f8	75 1c		 jne	 SHORT $LN6@LoadAttend

; 1323 : 					pInfo->m_RewardItem.m_iValue1 =atoi( kString[iLine].c_str() );

  002fa	8b 85 78 fd ff
	ff		 mov	 eax, DWORD PTR _kString$510588[ebp]
  00300	83 c0 1c	 add	 eax, 28			; 0000001cH
  00303	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00307	72 02		 jb	 SHORT $LN440@LoadAttend
  00309	8b 00		 mov	 eax, DWORD PTR [eax]
$LN440@LoadAttend:
  0030b	50		 push	 eax
  0030c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00312	59		 pop	 ecx
  00313	89 47 18	 mov	 DWORD PTR [edi+24], eax
$LN6@LoadAttend:

; 1324 : 				if ( iLine== 2 )

  00316	83 bd 94 fd ff
	ff 02		 cmp	 DWORD PTR _iLine$510592[ebp], 2
  0031d	75 1c		 jne	 SHORT $LN9@LoadAttend

; 1325 : 					pInfo->m_RewardItem.m_iValue2 =atoi( kString[iLine].c_str() );

  0031f	8b 85 78 fd ff
	ff		 mov	 eax, DWORD PTR _kString$510588[ebp]
  00325	83 c0 38	 add	 eax, 56			; 00000038H
  00328	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0032c	72 02		 jb	 SHORT $LN448@LoadAttend
  0032e	8b 00		 mov	 eax, DWORD PTR [eax]
$LN448@LoadAttend:
  00330	50		 push	 eax
  00331	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00337	59		 pop	 ecx
  00338	89 47 1c	 mov	 DWORD PTR [edi+28], eax
$LN9@LoadAttend:

; 1317 : 		{
; 1318 : 			for ( int iLine=0 ; iLine<(int)kString.size() ; ++iLine )

  0033b	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR _kString$510588[ebp+4]
  00341	2b 85 78 fd ff
	ff		 sub	 eax, DWORD PTR _kString$510588[ebp]
  00347	6a 1c		 push	 28			; 0000001cH
  00349	99		 cdq
  0034a	59		 pop	 ecx
  0034b	f7 f9		 idiv	 ecx
  0034d	ff 85 94 fd ff
	ff		 inc	 DWORD PTR _iLine$510592[ebp]
  00353	39 85 94 fd ff
	ff		 cmp	 DWORD PTR _iLine$510592[ebp], eax
  00359	0f 8c 71 ff ff
	ff		 jl	 $LN10@LoadAttend
$LN8@LoadAttend:

; 1326 : 			}
; 1327 : 		}
; 1328 : 		
; 1329 : 		if ( pInfo->m_RewardItem.m_iPresentType != PRESENT_ETC_ITEM )

  0035f	83 7f 14 03	 cmp	 DWORD PTR [edi+20], 3
  00363	74 2a		 je	 SHORT $LN4@LoadAttend

; 1330 : 		{
; 1331 : 			LOG.PrintTimeAndLog( 0, "%s - reward Type is not etcitem Type", __FUNCTION__ );

  00365	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@CJJLKKIN@ioGuildInfo?3?3LoadAttendReward?$AA@
  0036a	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@MOJCCIEE@?$CFs?5?9?5reward?5Type?5is?5not?5etcitem?5@
$LN493@LoadAttend:
  0036f	53		 push	 ebx
  00370	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  00376	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  0037c	83 c4 10	 add	 esp, 16			; 00000010H

; 1332 : 			SAFEDELETE( pInfo );

  0037f	8b cf		 mov	 ecx, edi
  00381	e8 00 00 00 00	 call	 ??1GuildAttendRwardInfo@@QAE@XZ
  00386	57		 push	 edi
  00387	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0038c	59		 pop	 ecx

; 1333 : 			continue;

  0038d	eb 44		 jmp	 SHORT $LN492@LoadAttend
$LN4@LoadAttend:

; 1334 : 		}
; 1335 : 		pInfo->m_RewardPossibleItemVec = g_GashaponMgr.FindGashaponPresentList( pInfo->m_RewardItem.m_iValue1 );

  0038f	ff 77 18	 push	 DWORD PTR [edi+24]
  00392	e8 00 00 00 00	 call	 ?GetSingleton@ioGashaponMgr@@SAAAV1@XZ ; ioGashaponMgr::GetSingleton
  00397	8b c8		 mov	 ecx, eax
  00399	e8 00 00 00 00	 call	 ?FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z ; ioGashaponMgr::FindGashaponPresentList
  0039e	50		 push	 eax
  0039f	8d 4f 20	 lea	 ecx, DWORD PTR [edi+32]
  003a2	e8 00 00 00 00	 call	 ??4?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::operator=

; 1336 : 		if ( pInfo->m_RewardPossibleItemVec.empty() )

  003a7	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  003aa	3b 47 24	 cmp	 eax, DWORD PTR [edi+36]
  003ad	75 0c		 jne	 SHORT $LN2@LoadAttend

; 1337 : 		{
; 1338 : 			LOG.PrintTimeAndLog( 0, "%s - not exist gashapon number", __FUNCTION__ );

  003af	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@CJJLKKIN@ioGuildInfo?3?3LoadAttendReward?$AA@
  003b4	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@BLIMFFF@?$CFs?5?9?5not?5exist?5gashapon?5number?$AA@

; 1339 : 			SAFEDELETE( pInfo );
; 1340 : 			continue;

  003b9	eb b4		 jmp	 SHORT $LN493@LoadAttend
$LN2@LoadAttend:

; 1341 : 		}
; 1342 : 		m_AttendRewardVec.push_back( pInfo );

  003bb	8b 8d 74 fd ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  003c1	8d 85 8c fd ff
	ff		 lea	 eax, DWORD PTR _pInfo$510277[ebp]
  003c7	50		 push	 eax
  003c8	81 c1 dc 00 00
	00		 add	 ecx, 220		; 000000dcH
  003ce	e8 00 00 00 00	 call	 ?push_back@?$vector@PAUGuildAttendRwardInfo@@V?$allocator@PAUGuildAttendRwardInfo@@@std@@@std@@QAEXABQAUGuildAttendRwardInfo@@@Z ; std::vector<GuildAttendRwardInfo *,std::allocator<GuildAttendRwardInfo *> >::push_back
$LN492@LoadAttend:

; 1343 : 	}

  003d3	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  003d7	8d 8d 78 fd ff
	ff		 lea	 ecx, DWORD PTR _kString$510588[ebp]
  003dd	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
  003e2	ff 85 90 fd ff
	ff		 inc	 DWORD PTR tv3256[ebp]
  003e8	8b 85 90 fd ff
	ff		 mov	 eax, DWORD PTR tv3256[ebp]
  003ee	48		 dec	 eax
  003ef	83 f8 07	 cmp	 eax, 7
  003f2	0f 8c a5 fc ff
	ff		 jl	 $LL214@LoadAttend

; 1305 : 		if ( pInfo->m_szName.IsEmpty() )

  003f8	eb 12		 jmp	 SHORT $LN343@LoadAttend
$LN478@LoadAttend:

; 1306 : 		{
; 1307 : 			SAFEDELETE( pInfo );

  003fa	3b fb		 cmp	 edi, ebx
  003fc	74 0e		 je	 SHORT $LN343@LoadAttend
  003fe	8b cf		 mov	 ecx, edi
  00400	e8 00 00 00 00	 call	 ??1GuildAttendRwardInfo@@QAE@XZ
  00405	57		 push	 edi
  00406	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0040b	59		 pop	 ecx
$LN343@LoadAttend:

; 1344 : }

  0040c	e8 00 00 00 00	 call	 __EH_epilog3_GS
  00411	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$0:
  00000	ff b5 8c fd ff
	ff		 push	 DWORD PTR $T534882[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	c3		 ret	 0
__unwindfunclet$?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$1:
  0000d	8d 8d 98 fd ff
	ff		 lea	 ecx, DWORD PTR $T510589[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$2:
  00018	8d 8d b4 fd ff
	ff		 lea	 ecx, DWORD PTR $T510590[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z$3:
  00023	8d 8d 78 fd ff
	ff		 lea	 ecx, DWORD PTR _kString$510588[ebp]
  00029	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z:
  0002e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00032	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00035	8b 8a 70 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-656]
  0003b	33 c8		 xor	 ecx, eax
  0003d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00042	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00045	33 c8		 xor	 ecx, eax
  00047	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z
  00051	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z ENDP ; ioGuildInfo::LoadAttendReward
PUBLIC	?InitializeGuildReward@ioGuildInfo@@QAEXXZ	; ioGuildInfo::InitializeGuildReward
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitializeGuildReward@ioGuildInfo@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitializeGuildReward@ioGuildInfo@@QAEXXZ$0
__ehfuncinfo$?InitializeGuildReward@ioGuildInfo@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InitializeGuildReward@ioGuildInfo@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?InitializeGuildReward@ioGuildInfo@@QAEXXZ
_TEXT	SEGMENT
_kLoader$ = -928					; size = 912
__$EHRec$ = -12						; size = 12
?InitializeGuildReward@ioGuildInfo@@QAEXXZ PROC		; ioGuildInfo::InitializeGuildReward, COMDAT
; _this$ = ecx

; 1223 : {

  00000	68 94 03 00 00	 push	 916			; 00000394H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?InitializeGuildReward@ioGuildInfo@@QAEXXZ
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS

; 1224 : 	ioINILoader_e kLoader( "config/sp2_guild_reward.ini" );

  0000f	6a 06		 push	 6
  00011	8b f1		 mov	 esi, ecx
  00013	c7 45 b0 8e 83
	85 8c		 mov	 DWORD PTR _kLoader$[ebp+848], -1937407090 ; 8c85838eH
  0001a	c7 45 b4 84 8b
	c4 99		 mov	 DWORD PTR _kLoader$[ebp+852], -1715172476 ; 99c48b84H
  00021	c7 45 b8 9d de
	b4 8d		 mov	 DWORD PTR _kLoader$[ebp+856], -1917526371 ; 8db4de9dH
  00028	c7 45 bc 98 85
	87 8e		 mov	 DWORD PTR _kLoader$[ebp+860], -1903721064 ; 8e878598H
  0002f	c7 45 c0 b2 9e
	8e 9d		 mov	 DWORD PTR _kLoader$[ebp+864], -1651597646 ; 9d8e9eb2H
  00036	c7 45 c4 8c 9e
	8f c4		 mov	 DWORD PTR _kLoader$[ebp+868], -997220724 ; c48f9e8cH
  0003d	8d 45 b0	 lea	 eax, DWORD PTR _kLoader$[ebp+848]
  00040	c7 45 c8 84 82
	82 00		 mov	 DWORD PTR _kLoader$[ebp+872], 8553092 ; 00828284H
  00047	59		 pop	 ecx
$LL110@Initialize@2:
  00048	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0004e	83 c0 04	 add	 eax, 4
  00051	49		 dec	 ecx
  00052	75 f4		 jne	 SHORT $LL110@Initialize@2
  00054	6a 18		 push	 24			; 00000018H
  00056	58		 pop	 eax
$LL107@Initialize@2:
  00057	8b c8		 mov	 ecx, eax
  00059	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0005f	79 05		 jns	 SHORT $LN121@Initialize@2
  00061	49		 dec	 ecx
  00062	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00065	41		 inc	 ecx
$LN121@Initialize@2:
  00066	b2 ed		 mov	 dl, -19			; ffffffedH
  00068	2a d1		 sub	 dl, cl
  0006a	30 54 05 b0	 xor	 BYTE PTR _kLoader$[ebp+eax+848], dl
  0006e	40		 inc	 eax
  0006f	83 f8 1b	 cmp	 eax, 27			; 0000001bH
  00072	7c e3		 jl	 SHORT $LL107@Initialize@2
  00074	6a 01		 push	 1
  00076	8d 45 b0	 lea	 eax, DWORD PTR _kLoader$[ebp+848]
  00079	50		 push	 eax
  0007a	8d 8d 60 fc ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@PBD_N@Z
  00086	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 1225 : 
; 1226 : 	LoadRankReward( kLoader );

  0008a	8d 85 60 fc ff
	ff		 lea	 eax, DWORD PTR _kLoader$[ebp]
  00090	50		 push	 eax
  00091	8b ce		 mov	 ecx, esi
  00093	e8 00 00 00 00	 call	 ?LoadRankReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z ; ioGuildInfo::LoadRankReward

; 1227 : 	LoadAttendReward( kLoader );

  00098	8d 85 60 fc ff
	ff		 lea	 eax, DWORD PTR _kLoader$[ebp]
  0009e	50		 push	 eax
  0009f	8b ce		 mov	 ecx, esi
  000a1	e8 00 00 00 00	 call	 ?LoadAttendReward@ioGuildInfo@@IAEXAAVioINILoader@@@Z ; ioGuildInfo::LoadAttendReward

; 1228 : }

  000a6	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000aa	8d 8d 60 fc ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
  000b6	e8 00 00 00 00	 call	 __EH_epilog3_GS
  000bb	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InitializeGuildReward@ioGuildInfo@@QAEXXZ$0:
  00000	8d 8d 60 fc ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1ioINILoader_e@@QAE@XZ
__ehhandler$?InitializeGuildReward@ioGuildInfo@@QAEXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 5c fc ff
	ff		 mov	 ecx, DWORD PTR [edx-932]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InitializeGuildReward@ioGuildInfo@@QAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InitializeGuildReward@ioGuildInfo@@QAEXXZ ENDP		; ioGuildInfo::InitializeGuildReward
; Function compile flags: /Ogsp
;	COMDAT ??__FszReturn@?6??GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z@YAXXZ
text$yd	SEGMENT
??__FszReturn@?6??GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z@YAXXZ PROC ; `ioGuildData::GetUserNameA'::`7'::`dynamic atexit destructor for 'szReturn'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?szReturn@?6??GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z@4V3@A
  00005	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
??__FszReturn@?6??GetUserNameA@ioGuildData@@QAEABVioHashString@@K@Z@YAXXZ ENDP ; `ioGuildData::GetUserNameA'::`7'::`dynamic atexit destructor for 'szReturn''
; Function compile flags: /Ogsp
text$yd	ENDS
;	COMDAT ??__FszReturn@?8??GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ@YAXXZ
text$yd	SEGMENT
??__FszReturn@?8??GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ@YAXXZ PROC ; `ioGuildData::GetGuildMasterName'::`9'::`dynamic atexit destructor for 'szReturn'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?szReturn@?8??GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ@4V3@A
  00005	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
??__FszReturn@?8??GetGuildMasterName@ioGuildData@@QAEABVioHashString@@XZ@YAXXZ ENDP ; `ioGuildData::GetGuildMasterName'::`9'::`dynamic atexit destructor for 'szReturn''
; Function compile flags: /Ogsp
text$yd	ENDS
;	COMDAT ??__FszReturn@?8??GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ@YAXXZ
text$yd	SEGMENT
??__FszReturn@?8??GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ@YAXXZ PROC ; `ioGuildData::GetGuildSecondMasterName'::`9'::`dynamic atexit destructor for 'szReturn'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?szReturn@?8??GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ@4V3@A
  00005	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
??__FszReturn@?8??GetGuildSecondMasterName@ioGuildData@@QAEABVioHashString@@XZ@YAXXZ ENDP ; `ioGuildData::GetGuildSecondMasterName'::`9'::`dynamic atexit destructor for 'szReturn''
text$yd	ENDS
END
