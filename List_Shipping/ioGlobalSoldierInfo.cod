; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioGlobalSoldierInfo.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?ms_Singleton@?$Singleton@VioGlobalSoldierInfo@@@@1PAVioGlobalSoldierInfo@@A ; Singleton<ioGlobalSoldierInfo>::ms_Singleton
;	COMDAT ?ms_Singleton@?$Singleton@VioGlobalSoldierInfo@@@@1PAVioGlobalSoldierInfo@@A
_BSS	SEGMENT
?ms_Singleton@?$Singleton@VioGlobalSoldierInfo@@@@1PAVioGlobalSoldierInfo@@A DD 01H DUP (?) ; Singleton<ioGlobalSoldierInfo>::ms_Singleton
_BSS	ENDS
PUBLIC	??__G@YGXPAX0IHP6EPAX00@Z@Z			; `vector copy constructor iterator'
; Function compile flags: /Ogsp
;	COMDAT ??__G@YGXPAX0IHP6EPAX00@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___u$ = 12						; size = 4
___s$ = 16						; size = 4
___n$ = 20						; size = 4
___f$ = 24						; size = 4
??__G@YGXPAX0IHP6EPAX00@Z@Z PROC			; `vector copy constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 4d 14	 dec	 DWORD PTR ___n$[ebp]
  00006	78 1b		 js	 SHORT $LN1@vector
  00008	56		 push	 esi
  00009	8b 75 0c	 mov	 esi, DWORD PTR ___u$[ebp]
  0000c	57		 push	 edi
  0000d	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
  00010	2b fe		 sub	 edi, esi
$LL2@vector:
  00012	56		 push	 esi
  00013	8d 0c 37	 lea	 ecx, DWORD PTR [edi+esi]
  00016	ff 55 18	 call	 DWORD PTR ___f$[ebp]
  00019	03 75 10	 add	 esi, DWORD PTR ___s$[ebp]
  0001c	ff 4d 14	 dec	 DWORD PTR ___n$[ebp]
  0001f	79 f1		 jns	 SHORT $LL2@vector
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
$LN1@vector:
  00023	5d		 pop	 ebp
  00024	c2 14 00	 ret	 20			; 00000014H
??__G@YGXPAX0IHP6EPAX00@Z@Z ENDP			; `vector copy constructor iterator'
_TEXT	ENDS
PUBLIC	?IsExceptionSyncItem@ioGlobalSoldierInfo@@IAE_NK@Z ; ioGlobalSoldierInfo::IsExceptionSyncItem
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioglobalsoldierinfo.cpp
;	COMDAT ?IsExceptionSyncItem@ioGlobalSoldierInfo@@IAE_NK@Z
_TEXT	SEGMENT
_dwItemCode$ = 8					; size = 4
?IsExceptionSyncItem@ioGlobalSoldierInfo@@IAE_NK@Z PROC	; ioGlobalSoldierInfo::IsExceptionSyncItem, COMDAT
; _this$ = ecx

; 299  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 300  : 	// 강시 아이템은 동기화 시키지 않는다.
; 301  : 	switch( dwItemCode )

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwItemCode$[ebp]
  00006	3d 44 38 03 00	 cmp	 eax, 211012		; 00033844H
  0000b	77 29		 ja	 SHORT $LN6@IsExceptio
  0000d	3d 43 38 03 00	 cmp	 eax, 211011		; 00033843H
  00012	73 30		 jae	 SHORT $LN1@IsExceptio
  00014	3d 03 2b 00 00	 cmp	 eax, 11011		; 00002b03H
  00019	72 15		 jb	 SHORT $LN2@IsExceptio
  0001b	3d 04 2b 00 00	 cmp	 eax, 11012		; 00002b04H
  00020	76 22		 jbe	 SHORT $LN1@IsExceptio
  00022	3d a2 b1 01 00	 cmp	 eax, 111010		; 0001b1a2H
  00027	76 07		 jbe	 SHORT $LN2@IsExceptio
  00029	3d a4 b1 01 00	 cmp	 eax, 111012		; 0001b1a4H
  0002e	76 14		 jbe	 SHORT $LN1@IsExceptio
$LN2@IsExceptio:

; 312  : 	}
; 313  : 
; 314  : 	return false;

  00030	32 c0		 xor	 al, al
$LN4@IsExceptio:

; 315  : }

  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
$LN6@IsExceptio:

; 300  : 	// 강시 아이템은 동기화 시키지 않는다.
; 301  : 	switch( dwItemCode )

  00036	3d e3 be 04 00	 cmp	 eax, 311011		; 0004bee3H
  0003b	72 f3		 jb	 SHORT $LN2@IsExceptio
  0003d	3d e4 be 04 00	 cmp	 eax, 311012		; 0004bee4H
  00042	77 ec		 ja	 SHORT $LN2@IsExceptio
$LN1@IsExceptio:

; 302  : 	{
; 303  : 	case 11011:
; 304  : 	case 111011:
; 305  : 	case 211011:
; 306  : 	case 311011:
; 307  : 	case 11012:
; 308  : 	case 111012:
; 309  : 	case 211012:
; 310  : 	case 311012:
; 311  : 		return true;

  00044	b0 01		 mov	 al, 1
  00046	eb ea		 jmp	 SHORT $LN4@IsExceptio
?IsExceptionSyncItem@ioGlobalSoldierInfo@@IAE_NK@Z ENDP	; ioGlobalSoldierInfo::IsExceptionSyncItem
_TEXT	ENDS
PUBLIC	??0?$Singleton@VioGlobalSoldierInfo@@@@QAE@XZ	; Singleton<ioGlobalSoldierInfo>::Singleton<ioGlobalSoldierInfo>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
;	COMDAT ??0?$Singleton@VioGlobalSoldierInfo@@@@QAE@XZ
_TEXT	SEGMENT
??0?$Singleton@VioGlobalSoldierInfo@@@@QAE@XZ PROC	; Singleton<ioGlobalSoldierInfo>::Singleton<ioGlobalSoldierInfo>, COMDAT
; _this$ = ecx

; 27   : 	Singleton()

  00000	8b c1		 mov	 eax, ecx

; 28   : 	{
; 29   : 		assert( !ms_Singleton );
; 30   : 		int offset = (int)(T*)1 - (int)(Singleton <T>*)(T*)1;
; 31   : 		ms_Singleton = (T*)((int)this + offset);

  00002	8d 48 fc	 lea	 ecx, DWORD PTR [eax-4]
  00005	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioGlobalSoldierInfo@@@@1PAVioGlobalSoldierInfo@@A, ecx ; Singleton<ioGlobalSoldierInfo>::ms_Singleton

; 32   : 	}

  0000b	c3		 ret	 0
??0?$Singleton@VioGlobalSoldierInfo@@@@QAE@XZ ENDP	; Singleton<ioGlobalSoldierInfo>::Singleton<ioGlobalSoldierInfo>
_TEXT	ENDS
PUBLIC	??1?$Singleton@VioGlobalSoldierInfo@@@@QAE@XZ	; Singleton<ioGlobalSoldierInfo>::~Singleton<ioGlobalSoldierInfo>
; Function compile flags: /Ogsp
;	COMDAT ??1?$Singleton@VioGlobalSoldierInfo@@@@QAE@XZ
_TEXT	SEGMENT
??1?$Singleton@VioGlobalSoldierInfo@@@@QAE@XZ PROC	; Singleton<ioGlobalSoldierInfo>::~Singleton<ioGlobalSoldierInfo>, COMDAT
; _this$ = ecx

; 36   : 		assert( ms_Singleton );
; 37   : 		ms_Singleton = 0;

  00000	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioGlobalSoldierInfo@@@@1PAVioGlobalSoldierInfo@@A, 0 ; Singleton<ioGlobalSoldierInfo>::ms_Singleton

; 38   : 	}

  00007	c3		 ret	 0
??1?$Singleton@VioGlobalSoldierInfo@@@@QAE@XZ ENDP	; Singleton<ioGlobalSoldierInfo>::~Singleton<ioGlobalSoldierInfo>
_TEXT	ENDS
PUBLIC	?GetSingleton@?$Singleton@VioGlobalSoldierInfo@@@@SAAAVioGlobalSoldierInfo@@XZ ; Singleton<ioGlobalSoldierInfo>::GetSingleton
; Function compile flags: /Ogsp
;	COMDAT ?GetSingleton@?$Singleton@VioGlobalSoldierInfo@@@@SAAAVioGlobalSoldierInfo@@XZ
_TEXT	SEGMENT
?GetSingleton@?$Singleton@VioGlobalSoldierInfo@@@@SAAAVioGlobalSoldierInfo@@XZ PROC ; Singleton<ioGlobalSoldierInfo>::GetSingleton, COMDAT

; 42   : 		assert( ms_Singleton );
; 43   : 		return (*ms_Singleton);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioGlobalSoldierInfo@@@@1PAVioGlobalSoldierInfo@@A ; Singleton<ioGlobalSoldierInfo>::ms_Singleton

; 44   : 	}

  00005	c3		 ret	 0
?GetSingleton@?$Singleton@VioGlobalSoldierInfo@@@@SAAAVioGlobalSoldierInfo@@XZ ENDP ; Singleton<ioGlobalSoldierInfo>::GetSingleton
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1exception@std@@UAE@XZ
  00012	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00016	74 07		 je	 SHORT $LN1@scalar
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	59		 pop	 ecx
$LN1@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::size, COMDAT
; _this$ = ecx

; 869  : 		return (this->_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 870  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::size
_TEXT	ENDS
PUBLIC	?empty@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QBE_NXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::empty
; Function compile flags: /Ogsp
;	COMDAT ?empty@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QBE_NXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::empty, COMDAT
; _this$ = ecx

; 879  : 		return (size() == 0);

  00000	33 c0		 xor	 eax, eax
  00002	39 41 08	 cmp	 DWORD PTR [ecx+8], eax
  00005	0f 94 c0	 sete	 al

; 880  : 		}

  00008	c3		 ret	 0
?empty@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QBE_NXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::empty
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	return (_Where);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 58   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 62   : 	}

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xfunctional
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@K@std@@QBE_NABK0@Z PROC			; std::less<unsigned long>::operator(), COMDAT
; _this$ = ecx

; 124  : 		{	// apply operator< to operands

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 125  : 		return (_Left < _Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000b	3b 01		 cmp	 eax, DWORD PTR [ecx]
  0000d	1b c0		 sbb	 eax, eax
  0000f	f7 d8		 neg	 eax

; 126  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z ; std::vector<int,std::allocator<int> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z PROC ; std::vector<int,std::allocator<int> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z ENDP ; std::vector<int,std::allocator<int> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,CHARACTER> >::allocator<std::pair<unsigned long const ,CHARACTER> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<unsigned long const ,CHARACTER> >::allocator<std::pair<unsigned long const ,CHARACTER> >, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,CHARACTER> >::allocator<std::pair<unsigned long const ,CHARACTER> >
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
_TEXT	ENDS
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator==
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())
; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 331  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::_Mynode
; Function compile flags: /Ogsp
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 123  : 		}

  00002	c3		 ret	 0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())
; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 331  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::_Mynode
; Function compile flags: /Ogsp
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 123  : 		}

  00002	c3		 ret	 0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Isnil
; Function compile flags: /Ogsp
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 612  : 		return ((char&)(*_Pnode)._Isnil);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	05 35 03 00 00	 add	 eax, 821		; 00000335H

; 613  : 		}

  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Left
; Function compile flags: /Ogsp
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Parent
; Function compile flags: /Ogsp
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 628  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Right
; Function compile flags: /Ogsp
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 633  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBKUCHARACTER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Myval
; Function compile flags: /Ogsp
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBKUCHARACTER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBKUCHARACTER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 637  : 		return ((reference)(*_Pnode)._Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 638  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBKUCHARACTER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,CHARACTER> >::allocator<std::pair<unsigned long const ,CHARACTER> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<unsigned long const ,CHARACTER> >::allocator<std::pair<unsigned long const ,CHARACTER> >, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,CHARACTER> >::allocator<std::pair<unsigned long const ,CHARACTER> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Node>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Isnil
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 612  : 		return ((char&)(*_Pnode)._Isnil);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 41	 add	 eax, 65			; 00000041H

; 613  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Left
; Function compile flags: /Ogsp
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Parent
; Function compile flags: /Ogsp
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 628  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Right
; Function compile flags: /Ogsp
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 633  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Myval
; Function compile flags: /Ogsp
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 637  : 		return ((reference)(*_Pnode)._Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 638  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Node>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKUCHARACTER@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKUCHARACTER@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKUCHARACTER@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 		if (this->_Getcont() == 0
; 233  : 			|| this->_Ptr == 0
; 234  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)
; 235  : 			{	// report error
; 236  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 237  : 			_SCL_SECURE_OUT_OF_RANGE;
; 238  : 			}
; 239  : 
; 240  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 241  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 242  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 243  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 244  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 245  : 
; 246  : 		return (_Mytree::_Myval(this->_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 247  : 		}

  00005	c3		 ret	 0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKUCHARACTER@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0

; 39   : 		}

  00005	c3		 ret	 0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 		if (this->_Getcont() == 0
; 233  : 			|| this->_Ptr == 0
; 234  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)
; 235  : 			{	// report error
; 236  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 237  : 			_SCL_SECURE_OUT_OF_RANGE;
; 238  : 			}
; 239  : 
; 240  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 241  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 242  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 243  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 244  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 245  : 
; 246  : 		return (_Mytree::_Myval(this->_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 247  : 		}

  00005	c3		 ret	 0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Color
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 607  : 		return ((char&)(*_Pnode)._Color);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	05 34 03 00 00	 add	 eax, 820		; 00000334H

; 608  : 		}

  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
?_Color@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Min
; Function compile flags: /Ogsp
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Min
$LL2@Min:

; 650  : 			_Pnode = _Left(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Min:

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	80 b9 35 03 00
	00 00		 cmp	 BYTE PTR [ecx+821], 0
  00013	74 f3		 je	 SHORT $LL2@Min

; 651  : 		return (_Pnode);
; 652  : 		}

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?_Min@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Color
; Function compile flags: /Ogsp
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 607  : 		return ((char&)(*_Pnode)._Color);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 40	 add	 eax, 64			; 00000040H

; 608  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Color
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 44   : 		this->_Adopt(_Plist);
; 45   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 44   : 		this->_Adopt(_Plist);
; 45   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Max
; Function compile flags: /Ogsp
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Max
$LL2@Max:

; 643  : 			_Pnode = _Right(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Max:

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	80 b9 35 03 00
	00 00		 cmp	 BYTE PTR [ecx+821], 0
  00014	74 f2		 je	 SHORT $LL2@Max

; 644  : 		return (_Pnode);
; 645  : 		}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Max@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Max
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0>::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC ; std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0>::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0>, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 41   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0>::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0>
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Max
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Max@2
$LL2@Max@2:

; 643  : 			_Pnode = _Right(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Max@2:

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	80 79 41 00	 cmp	 BYTE PTR [ecx+65], 0
  00011	74 f5		 je	 SHORT $LL2@Max@2

; 644  : 		return (_Pnode);
; 645  : 		}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Max@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Min
; Function compile flags: /Ogsp
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Min@2
$LL2@Min@2:

; 650  : 			_Pnode = _Left(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Min@2:

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	80 79 41 00	 cmp	 BYTE PTR [ecx+65], 0
  00010	74 f6		 je	 SHORT $LL2@Min@2

; 651  : 		return (_Pnode);
; 652  : 		}

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?_Min@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Min
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0>::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@QAE@U?$less@K@1@@Z PROC ; std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0>::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0>, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 41   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0>::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0>
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	53		 push	 ebx
  00005	32 db		 xor	 bl, bl
  00007	38 59 41	 cmp	 BYTE PTR [ecx+65], bl
  0000a	75 2d		 jne	 SHORT $LN3@operator

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

  0000c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000f	38 5a 41	 cmp	 BYTE PTR [edx+65], bl
  00012	75 0d		 jne	 SHORT $LN34@operator

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

$LL18@operator:
  00014	8b ca		 mov	 ecx, edx
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	38 5a 41	 cmp	 BYTE PTR [edx+65], bl
  0001b	74 f7		 je	 SHORT $LL18@operator
  0001d	89 08		 mov	 DWORD PTR [eax], ecx
  0001f	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  00020	c3		 ret	 0
$LN34@operator:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00021	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00024	eb 0c		 jmp	 SHORT $LN38@operator
$LL2@operator:
  00026	8b 08		 mov	 ecx, DWORD PTR [eax]
  00028	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  0002b	75 0a		 jne	 SHORT $LN1@operator

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
$LN38@operator:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00032	38 5a 41	 cmp	 BYTE PTR [edx+65], bl
  00035	74 ef		 je	 SHORT $LL2@operator
$LN1@operator:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

  00037	89 10		 mov	 DWORD PTR [eax], edx
$LN3@operator:
  00039	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  0003a	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
PUBLIC	??$addressof@H@std@@YAPAHAAH@Z			; std::addressof<int>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@H@std@@YAPAHAAH@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@H@std@@YAPAHAAH@Z PROC			; std::addressof<int>, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@H@std@@YAPAHAAH@Z ENDP			; std::addressof<int>
_TEXT	ENDS
PUBLIC	??$addressof@U?$pair@$$CBKUCHARACTER@@@std@@@std@@YAPAU?$pair@$$CBKUCHARACTER@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned long const ,CHARACTER> >
; Function compile flags: /Ogsp
;	COMDAT ??$addressof@U?$pair@$$CBKUCHARACTER@@@std@@@std@@YAPAU?$pair@$$CBKUCHARACTER@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBKUCHARACTER@@@std@@@std@@YAPAU?$pair@$$CBKUCHARACTER@@@0@AAU10@@Z PROC ; std::addressof<std::pair<unsigned long const ,CHARACTER> >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@U?$pair@$$CBKUCHARACTER@@@std@@@std@@YAPAU?$pair@$$CBKUCHARACTER@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<unsigned long const ,CHARACTER> >
_TEXT	ENDS
PUBLIC	??$_Kfn@$$CBKUCHARACTER@@@?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKUCHARACTER@@@1@@Z ; std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0>::_Kfn<unsigned long const ,CHARACTER>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??$_Kfn@$$CBKUCHARACTER@@@?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKUCHARACTER@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBKUCHARACTER@@@?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKUCHARACTER@@@1@@Z PROC ; std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0>::_Kfn<unsigned long const ,CHARACTER>, COMDAT

; 66   : 		static const _Kty& _Kfn(const _STD pair<_Ty1, _Ty2>& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 		{	// extract key from element value
; 68   : 		return (_Val.first);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 69   : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Kfn@$$CBKUCHARACTER@@@?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKUCHARACTER@@@1@@Z ENDP ; std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0>::_Kfn<unsigned long const ,CHARACTER>
_TEXT	ENDS
PUBLIC	??$addressof@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@YAPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@YAPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@YAPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@AAU10@@Z PROC ; std::addressof<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@YAPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
_TEXT	ENDS
PUBLIC	??$_Kfn@$$CBKUItemCode@ioGlobalSoldierInfo@@@?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@@Z ; std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0>::_Kfn<unsigned long const ,ioGlobalSoldierInfo::ItemCode>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??$_Kfn@$$CBKUItemCode@ioGlobalSoldierInfo@@@?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBKUItemCode@ioGlobalSoldierInfo@@@?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@@Z PROC ; std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0>::_Kfn<unsigned long const ,ioGlobalSoldierInfo::ItemCode>, COMDAT

; 66   : 		static const _Kty& _Kfn(const _STD pair<_Ty1, _Ty2>& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 		{	// extract key from element value
; 68   : 		return (_Val.first);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 69   : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Kfn@$$CBKUItemCode@ioGlobalSoldierInfo@@@?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@@Z ENDP ; std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0>::_Kfn<unsigned long const ,ioGlobalSoldierInfo::ItemCode>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKUCHARACTER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Node><std::pair<unsigned long const ,CHARACTER> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBKUCHARACTER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKUCHARACTER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Node><std::pair<unsigned long const ,CHARACTER> >, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKUCHARACTER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Node><std::pair<unsigned long const ,CHARACTER> >
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Node>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T508152 = -12						; size = 12
$T508157 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3f		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 b2 88 4f
	00		 cmp	 ecx, 5212338		; 004f88b2H
  00015	77 11		 ja	 SHORT $LN1@Allocate
  00017	69 c9 38 03 00
	00		 imul	 ecx, 824		; 00000338H
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00023	59		 pop	 ecx
  00024	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00026	75 26		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00028	83 65 08 00	 and	 DWORD PTR $T508157[ebp], 0
  0002c	8d 45 08	 lea	 eax, DWORD PTR $T508157[ebp]
  0002f	50		 push	 eax
  00030	8d 4d f4	 lea	 ecx, DWORD PTR $T508152[ebp]
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00039	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003e	8d 45 f4	 lea	 eax, DWORD PTR $T508152[ebp]
  00041	50		 push	 eax
  00042	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T508152[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00049	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  0004e	c9		 leave
  0004f	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Node><std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
; Function compile flags: /Ogsp
;	COMDAT ??$?0U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Node><std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Node><std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Node>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T508165 = -12						; size = 12
$T508169 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate@2

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 c3 c3 c3
	03		 cmp	 ecx, 63161283		; 03c3c3c3H
  00015	77 0e		 ja	 SHORT $LN1@Allocate@2
  00017	6b c9 44	 imul	 ecx, 68			; 00000044H
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T508169[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T508169[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T508165[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T508165[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T508165[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate@2:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,CHARACTER> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<unsigned long const ,CHARACTER> >::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 e1 1b 51 00	 mov	 eax, 5315553		; 00511be1H

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,CHARACTER> >::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 c4 4e ec 04	 mov	 eax, 82595524		; 04ec4ec4H

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >::max_size
_TEXT	ENDS
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::operator--
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 83   : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 84   : 		if (_Mytree::_Isnil(_Ptr))

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	32 d2		 xor	 dl, dl
  00007	38 90 35 03 00
	00		 cmp	 BYTE PTR [eax+821], dl
  0000d	74 05		 je	 SHORT $LN8@operator@2

; 85   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

  0000f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00012	eb 30		 jmp	 SHORT $LN31@operator@2
$LN8@operator@2:

; 86   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	38 91 35 03 00
	00		 cmp	 BYTE PTR [ecx+821], dl
  0001c	75 11		 jne	 SHORT $LN29@operator@2

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ?_Max@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Max
  00024	59		 pop	 ecx

; 89   : 		else

  00025	eb 1d		 jmp	 SHORT $LN31@operator@2
$LL4@operator@2:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  00027	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00029	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0002b	75 0d		 jne	 SHORT $LN3@operator@2

; 94   : 				_Ptr = _Pnode;	// ==> parent while left subtree

  0002d	89 06		 mov	 DWORD PTR [esi], eax
$LN29@operator@2:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	38 90 35 03 00
	00		 cmp	 BYTE PTR [eax+821], dl
  00038	74 ed		 je	 SHORT $LL4@operator@2
$LN3@operator@2:

; 95   : 			if (_Mytree::_Isnil(_Ptr))

  0003a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0003c	38 91 35 03 00
	00		 cmp	 BYTE PTR [ecx+821], dl
  00042	75 02		 jne	 SHORT $LN1@operator@2
$LN31@operator@2:

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

  00044	89 06		 mov	 DWORD PTR [esi], eax
$LN1@operator@2:

; 99   : 			}
; 100  : 		return (*this);

  00046	8b c6		 mov	 eax, esi
  00048	5e		 pop	 esi

; 101  : 		}

  00049	c3		 ret	 0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::operator--
; Function compile flags: /Ogsp
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 83   : 		{	// predecrement

  00000	8b c1		 mov	 eax, ecx

; 84   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	53		 push	 ebx
  00005	32 db		 xor	 bl, bl
  00007	38 59 41	 cmp	 BYTE PTR [ecx+65], bl
  0000a	74 07		 je	 SHORT $LN8@operator@3

; 85   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

  0000c	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
  00011	5b		 pop	 ebx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00012	c3		 ret	 0
$LN8@operator@3:

; 86   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	38 5a 41	 cmp	 BYTE PTR [edx+65], bl
  00018	74 07		 je	 SHORT $LN44@operator@3

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0001a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001d	eb 17		 jmp	 SHORT $LN46@operator@3

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

$LL22@operator@3:
  0001f	8b d1		 mov	 edx, ecx
$LN44@operator@3:
  00021	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00024	38 59 41	 cmp	 BYTE PTR [ecx+65], bl
  00027	74 f6		 je	 SHORT $LL22@operator@3

; 89   : 		else

  00029	eb 17		 jmp	 SHORT $LN45@operator@3
$LL4@operator@3:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0002f	75 0a		 jne	 SHORT $LN3@operator@3

; 94   : 				_Ptr = _Pnode;	// ==> parent while left subtree

  00031	89 10		 mov	 DWORD PTR [eax], edx
  00033	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
$LN46@operator@3:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  00036	38 5a 41	 cmp	 BYTE PTR [edx+65], bl
  00039	74 f0		 je	 SHORT $LL4@operator@3
$LN3@operator@3:

; 95   : 			if (_Mytree::_Isnil(_Ptr))

  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	38 59 41	 cmp	 BYTE PTR [ecx+65], bl
  00040	75 02		 jne	 SHORT $LN1@operator@3
$LN45@operator@3:

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

  00042	89 10		 mov	 DWORD PTR [eax], edx
$LN1@operator@3:
  00044	5b		 pop	 ebx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00045	c3		 ret	 0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
PUBLIC	??$forward@ABUCHARACTER@@@std@@YAABUCHARACTER@@ABU1@@Z ; std::forward<CHARACTER const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABUCHARACTER@@@std@@YAABUCHARACTER@@ABU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUCHARACTER@@@std@@YAABUCHARACTER@@ABU1@@Z PROC ; std::forward<CHARACTER const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABUCHARACTER@@@std@@YAABUCHARACTER@@ABU1@@Z ENDP ; std::forward<CHARACTER const &>
_TEXT	ENDS
PUBLIC	??$forward@U?$pair@$$CBKUCHARACTER@@@std@@@std@@YA$$QAU?$pair@$$CBKUCHARACTER@@@0@AAU10@@Z ; std::forward<std::pair<unsigned long const ,CHARACTER> >
; Function compile flags: /Ogsp
;	COMDAT ??$forward@U?$pair@$$CBKUCHARACTER@@@std@@@std@@YA$$QAU?$pair@$$CBKUCHARACTER@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@$$CBKUCHARACTER@@@std@@@std@@YA$$QAU?$pair@$$CBKUCHARACTER@@@0@AAU10@@Z PROC ; std::forward<std::pair<unsigned long const ,CHARACTER> >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@U?$pair@$$CBKUCHARACTER@@@std@@@std@@YA$$QAU?$pair@$$CBKUCHARACTER@@@0@AAU10@@Z ENDP ; std::forward<std::pair<unsigned long const ,CHARACTER> >
_TEXT	ENDS
PUBLIC	??$forward@AAUCHARACTER@@@std@@YAAAUCHARACTER@@AAU1@@Z ; std::forward<CHARACTER &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@AAUCHARACTER@@@std@@YAAAUCHARACTER@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUCHARACTER@@@std@@YAAAUCHARACTER@@AAU1@@Z PROC ; std::forward<CHARACTER &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAUCHARACTER@@@std@@YAAAUCHARACTER@@AAU1@@Z ENDP ; std::forward<CHARACTER &>
_TEXT	ENDS
PUBLIC	??$forward@AAUItemCode@ioGlobalSoldierInfo@@@std@@YAAAUItemCode@ioGlobalSoldierInfo@@AAU12@@Z ; std::forward<ioGlobalSoldierInfo::ItemCode &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@AAUItemCode@ioGlobalSoldierInfo@@@std@@YAAAUItemCode@ioGlobalSoldierInfo@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUItemCode@ioGlobalSoldierInfo@@@std@@YAAAUItemCode@ioGlobalSoldierInfo@@AAU12@@Z PROC ; std::forward<ioGlobalSoldierInfo::ItemCode &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAUItemCode@ioGlobalSoldierInfo@@@std@@YAAAUItemCode@ioGlobalSoldierInfo@@AAU12@@Z ENDP ; std::forward<ioGlobalSoldierInfo::ItemCode &>
_TEXT	ENDS
PUBLIC	??$forward@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@YA$$QAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@AAU10@@Z ; std::forward<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
; Function compile flags: /Ogsp
;	COMDAT ??$forward@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@YA$$QAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@YA$$QAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@AAU10@@Z PROC ; std::forward<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@YA$$QAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@AAU10@@Z ENDP ; std::forward<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@YAXPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@@Z ; std::_Destroy<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@YAXPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@YAXPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@@Z PROC ; std::_Destroy<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@YAXPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@@Z ENDP ; std::_Destroy<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
_TEXT	ENDS
PUBLIC	??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > > &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > > &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > > &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > > &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > > &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > > &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > > &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > > &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$forward@$$CBK@std@@YA$$QBKABK@Z		; std::forward<unsigned long const >
; Function compile flags: /Ogsp
;	COMDAT ??$forward@$$CBK@std@@YA$$QBKABK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@$$CBK@std@@YA$$QBKABK@Z PROC			; std::forward<unsigned long const >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@$$CBK@std@@YA$$QBKABK@Z ENDP			; std::forward<unsigned long const >
_TEXT	ENDS
PUBLIC	??$forward@UCHARACTER@@@std@@YA$$QAUCHARACTER@@AAU1@@Z ; std::forward<CHARACTER>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@UCHARACTER@@@std@@YA$$QAUCHARACTER@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UCHARACTER@@@std@@YA$$QAUCHARACTER@@AAU1@@Z PROC ; std::forward<CHARACTER>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@UCHARACTER@@@std@@YA$$QAUCHARACTER@@AAU1@@Z ENDP ; std::forward<CHARACTER>
_TEXT	ENDS
PUBLIC	??$forward@UItemCode@ioGlobalSoldierInfo@@@std@@YA$$QAUItemCode@ioGlobalSoldierInfo@@AAU12@@Z ; std::forward<ioGlobalSoldierInfo::ItemCode>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@UItemCode@ioGlobalSoldierInfo@@@std@@YA$$QAUItemCode@ioGlobalSoldierInfo@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UItemCode@ioGlobalSoldierInfo@@@std@@YA$$QAUItemCode@ioGlobalSoldierInfo@@AAU12@@Z PROC ; std::forward<ioGlobalSoldierInfo::ItemCode>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@UItemCode@ioGlobalSoldierInfo@@@std@@YA$$QAUItemCode@ioGlobalSoldierInfo@@AAU12@@Z ENDP ; std::forward<ioGlobalSoldierInfo::ItemCode>
_TEXT	ENDS
PUBLIC	??$move@ABK@std@@YA$$QBKABK@Z			; std::move<unsigned long const &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@ABK@std@@YA$$QBKABK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@ABK@std@@YA$$QBKABK@Z PROC			; std::move<unsigned long const &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@ABK@std@@YA$$QBKABK@Z ENDP			; std::move<unsigned long const &>
_TEXT	ENDS
PUBLIC	??$move@AAUCHARACTER@@@std@@YA$$QAUCHARACTER@@AAU1@@Z ; std::move<CHARACTER &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@AAUCHARACTER@@@std@@YA$$QAUCHARACTER@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUCHARACTER@@@std@@YA$$QAUCHARACTER@@AAU1@@Z PROC ; std::move<CHARACTER &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAUCHARACTER@@@std@@YA$$QAUCHARACTER@@AAU1@@Z ENDP ; std::move<CHARACTER &>
_TEXT	ENDS
PUBLIC	??$move@AAUItemCode@ioGlobalSoldierInfo@@@std@@YA$$QAUItemCode@ioGlobalSoldierInfo@@AAU12@@Z ; std::move<ioGlobalSoldierInfo::ItemCode &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@AAUItemCode@ioGlobalSoldierInfo@@@std@@YA$$QAUItemCode@ioGlobalSoldierInfo@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUItemCode@ioGlobalSoldierInfo@@@std@@YA$$QAUItemCode@ioGlobalSoldierInfo@@AAU12@@Z PROC ; std::move<ioGlobalSoldierInfo::ItemCode &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAUItemCode@ioGlobalSoldierInfo@@@std@@YA$$QAUItemCode@ioGlobalSoldierInfo@@AAU12@@Z ENDP ; std::move<ioGlobalSoldierInfo::ItemCode &>
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogsp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 4d 10	 dec	 DWORD PTR ___n$[ebp]
  00006	78 12		 js	 SHORT $LN1@vector@2
  00008	56		 push	 esi
  00009	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector@2:
  0000c	8b ce		 mov	 ecx, esi
  0000e	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  00011	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00014	ff 4d 10	 dec	 DWORD PTR ___n$[ebp]
  00017	79 f3		 jns	 SHORT $LL2@vector@2
  00019	5e		 pop	 esi
$LN1@vector@2:
  0001a	5d		 pop	 ebp
  0001b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?Init@tagCostumeEquipInfo@@QAEXXZ		; tagCostumeEquipInfo::Init
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\costumeenumtype.h
;	COMDAT ?Init@tagCostumeEquipInfo@@QAEXXZ
_TEXT	SEGMENT
?Init@tagCostumeEquipInfo@@QAEXXZ PROC			; tagCostumeEquipInfo::Init, COMDAT
; _this$ = ecx

; 31   : 		m_CostumeIdx = 0;

  00000	33 c0		 xor	 eax, eax
  00002	89 01		 mov	 DWORD PTR [ecx], eax

; 32   : 		m_CostumeCode = 0;

  00004	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 33   : 		m_Costume_Male_Custom = 0;  

  00007	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 34   : 		m_Costume_Female_Custom = 0;

  0000a	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 35   : 	}

  0000d	c3		 ret	 0
?Init@tagCostumeEquipInfo@@QAEXXZ ENDP			; tagCostumeEquipInfo::Init
_TEXT	ENDS
PUBLIC	??0tagCostumeEquipInfo@@QAE@XZ			; tagCostumeEquipInfo::tagCostumeEquipInfo
; Function compile flags: /Ogsp
;	COMDAT ??0tagCostumeEquipInfo@@QAE@XZ
_TEXT	SEGMENT
??0tagCostumeEquipInfo@@QAE@XZ PROC			; tagCostumeEquipInfo::tagCostumeEquipInfo, COMDAT
; _this$ = ecx

; 37   : 	tagCostumeEquipInfo()

  00000	8b c1		 mov	 eax, ecx

; 38   : 	{
; 39   : 		Init();

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0000c	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 40   : 	}

  0000f	c3		 ret	 0
??0tagCostumeEquipInfo@@QAE@XZ ENDP			; tagCostumeEquipInfo::tagCostumeEquipInfo
_TEXT	ENDS
PUBLIC	??0tagCostumeEquipInfo@@QAE@ABU0@@Z		; tagCostumeEquipInfo::tagCostumeEquipInfo
; Function compile flags: /Ogsp
;	COMDAT ??0tagCostumeEquipInfo@@QAE@ABU0@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
??0tagCostumeEquipInfo@@QAE@ABU0@@Z PROC		; tagCostumeEquipInfo::tagCostumeEquipInfo, COMDAT
; _this$ = ecx

; 42   : 	tagCostumeEquipInfo( const tagCostumeEquipInfo &rhs )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 43   : 	{
; 44   : 		m_CostumeIdx = rhs.m_CostumeIdx;

  00005	8b 4d 08	 mov	 ecx, DWORD PTR _rhs$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	89 10		 mov	 DWORD PTR [eax], edx

; 45   : 		m_CostumeCode = rhs.m_CostumeCode;

  0000c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0000f	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 46   : 		m_Costume_Male_Custom = rhs.m_Costume_Male_Custom;  

  00012	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00015	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 47   : 		m_Costume_Female_Custom = rhs.m_Costume_Female_Custom;

  00018	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  0001b	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 48   : 	}

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??0tagCostumeEquipInfo@@QAE@ABU0@@Z ENDP		; tagCostumeEquipInfo::tagCostumeEquipInfo
_TEXT	ENDS
PUBLIC	?Init@tagAccessoryEquipInfo@@QAEXXZ		; tagAccessoryEquipInfo::Init
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\accessoryenumtype.h
;	COMDAT ?Init@tagAccessoryEquipInfo@@QAEXXZ
_TEXT	SEGMENT
?Init@tagAccessoryEquipInfo@@QAEXXZ PROC		; tagAccessoryEquipInfo::Init, COMDAT
; _this$ = ecx

; 23   : 		m_iAccessoryIdx = 0;

  00000	33 c0		 xor	 eax, eax
  00002	89 01		 mov	 DWORD PTR [ecx], eax

; 24   : 		m_iAccessoryCode = 0;

  00004	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 25   : 		m_iRandomNumber = 0;

  00007	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 26   : 	}

  0000a	c3		 ret	 0
?Init@tagAccessoryEquipInfo@@QAEXXZ ENDP		; tagAccessoryEquipInfo::Init
_TEXT	ENDS
PUBLIC	??0tagAccessoryEquipInfo@@QAE@XZ		; tagAccessoryEquipInfo::tagAccessoryEquipInfo
; Function compile flags: /Ogsp
;	COMDAT ??0tagAccessoryEquipInfo@@QAE@XZ
_TEXT	SEGMENT
??0tagAccessoryEquipInfo@@QAE@XZ PROC			; tagAccessoryEquipInfo::tagAccessoryEquipInfo, COMDAT
; _this$ = ecx

; 28   : 	tagAccessoryEquipInfo()

  00000	8b c1		 mov	 eax, ecx

; 29   : 	{
; 30   : 		Init();

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 31   : 	}

  0000c	c3		 ret	 0
??0tagAccessoryEquipInfo@@QAE@XZ ENDP			; tagAccessoryEquipInfo::tagAccessoryEquipInfo
_TEXT	ENDS
PUBLIC	??0tagAccessoryEquipInfo@@QAE@ABU0@@Z		; tagAccessoryEquipInfo::tagAccessoryEquipInfo
; Function compile flags: /Ogsp
;	COMDAT ??0tagAccessoryEquipInfo@@QAE@ABU0@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
??0tagAccessoryEquipInfo@@QAE@ABU0@@Z PROC		; tagAccessoryEquipInfo::tagAccessoryEquipInfo, COMDAT
; _this$ = ecx

; 33   : 	tagAccessoryEquipInfo( const tagAccessoryEquipInfo &rhs )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 34   : 	{
; 35   : 		m_iAccessoryIdx = rhs.m_iAccessoryIdx;

  00005	8b 4d 08	 mov	 ecx, DWORD PTR _rhs$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	89 10		 mov	 DWORD PTR [eax], edx

; 36   : 		m_iAccessoryCode = rhs.m_iAccessoryCode;

  0000c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0000f	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 37   : 		m_iRandomNumber = rhs.m_iRandomNumber;

  00012	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00015	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 38   : 	}

  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0tagAccessoryEquipInfo@@QAE@ABU0@@Z ENDP		; tagAccessoryEquipInfo::tagAccessoryEquipInfo
_TEXT	ENDS
PUBLIC	?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ	; ioMyInfo::GetPublicID
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomyinfo.h
;	COMDAT ?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ
_TEXT	SEGMENT
?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ PROC	; ioMyInfo::GetPublicID, COMDAT
; _this$ = ecx

; 517  : 	const ioHashString& GetPublicID() const { return m_user_data.m_public_id; }    

  00000	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  00003	c3		 ret	 0
?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ ENDP	; ioMyInfo::GetPublicID
_TEXT	ENDS
PUBLIC	??0ItemCode@ioGlobalSoldierInfo@@QAE@XZ		; ioGlobalSoldierInfo::ItemCode::ItemCode
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioglobalsoldierinfo.h
;	COMDAT ??0ItemCode@ioGlobalSoldierInfo@@QAE@XZ
_TEXT	SEGMENT
??0ItemCode@ioGlobalSoldierInfo@@QAE@XZ PROC		; ioGlobalSoldierInfo::ItemCode::ItemCode, COMDAT
; _this$ = ecx

; 20   : 		ItemCode()

  00000	57		 push	 edi

; 21   : 		{
; 22   : 			memset( m_dwItemCode, 0, sizeof( m_dwItemCode ) );

  00001	33 c0		 xor	 eax, eax
  00003	8b f9		 mov	 edi, ecx
  00005	ab		 stosd
  00006	ab		 stosd
  00007	ab		 stosd
  00008	ab		 stosd

; 23   : 			memset( m_dwItemMaleCustom, 0, sizeof( m_dwItemMaleCustom ) );

  00009	33 c0		 xor	 eax, eax
  0000b	8d 79 10	 lea	 edi, DWORD PTR [ecx+16]
  0000e	ab		 stosd
  0000f	ab		 stosd
  00010	ab		 stosd
  00011	ab		 stosd

; 24   : 			memset( m_dwItemFemaleCustom, 0, sizeof( m_dwItemFemaleCustom ) );

  00012	33 c0		 xor	 eax, eax
  00014	8d 79 20	 lea	 edi, DWORD PTR [ecx+32]
  00017	ab		 stosd
  00018	ab		 stosd
  00019	ab		 stosd
  0001a	ab		 stosd

; 25   : 		}

  0001b	8b c1		 mov	 eax, ecx
  0001d	5f		 pop	 edi
  0001e	c3		 ret	 0
??0ItemCode@ioGlobalSoldierInfo@@QAE@XZ ENDP		; ioGlobalSoldierInfo::ItemCode::ItemCode
_TEXT	ENDS
PUBLIC	?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC	; std::vector<int,std::allocator<int> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP	; std::vector<int,std::allocator<int> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ; std::vector<int,std::allocator<int> >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z PROC	; std::vector<int,std::allocator<int> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00008	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ENDP	; std::vector<int,std::allocator<int> >::operator[]
_TEXT	ENDS
PUBLIC	??_7?$CEncrypt@H@@6B@				; CEncrypt<int>::`vftable'
PUBLIC	??1?$CEncrypt@H@@UAE@XZ				; CEncrypt<int>::~CEncrypt<int>
PUBLIC	??_R4?$CEncrypt@H@@6B@				; CEncrypt<int>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CEncrypt@H@@@8			; CEncrypt<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$CEncrypt@H@@8				; CEncrypt<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CEncrypt@H@@8				; CEncrypt<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CEncrypt@H@@8			; CEncrypt<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??1ccddaabb@@UAE@XZ:PROC			; ccddaabb::~ccddaabb
EXTRN	??_E?$CEncrypt@H@@UAEPAXI@Z:PROC		; CEncrypt<int>::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$CEncrypt@H@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CEncrypt@H@@8 DD FLAT:??_R0?AV?$CEncrypt@H@@@8 ; CEncrypt<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CEncrypt@H@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CEncrypt@H@@8
rdata$r	SEGMENT
??_R2?$CEncrypt@H@@8 DD FLAT:??_R1A@?0A@EA@?$CEncrypt@H@@8 ; CEncrypt<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CEncrypt@H@@8
rdata$r	SEGMENT
??_R3?$CEncrypt@H@@8 DD 00H				; CEncrypt<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CEncrypt@H@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CEncrypt@H@@@8
_DATA	SEGMENT
??_R0?AV?$CEncrypt@H@@@8 DD FLAT:??_7type_info@@6B@	; CEncrypt<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CEncrypt@H@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$CEncrypt@H@@6B@
rdata$r	SEGMENT
??_R4?$CEncrypt@H@@6B@ DD 00H				; CEncrypt<int>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CEncrypt@H@@@8
	DD	FLAT:??_R3?$CEncrypt@H@@8
rdata$r	ENDS
;	COMDAT ??_7?$CEncrypt@H@@6B@
CONST	SEGMENT
??_7?$CEncrypt@H@@6B@ DD FLAT:??_R4?$CEncrypt@H@@6B@	; CEncrypt<int>::`vftable'
	DD	FLAT:??_E?$CEncrypt@H@@UAEPAXI@Z
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??1?$CEncrypt@H@@UAE@XZ
_TEXT	SEGMENT
??1?$CEncrypt@H@@UAE@XZ PROC				; CEncrypt<int>::~CEncrypt<int>, COMDAT
; _this$ = ecx

; 127  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CEncrypt@H@@6B@

; 128  : 	}

  00006	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00009	e9 00 00 00 00	 jmp	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
??1?$CEncrypt@H@@UAE@XZ ENDP				; CEncrypt<int>::~CEncrypt<int>
_TEXT	ENDS
PUBLIC	?size@?$vector@PAUPriceData@ioClassPrice@@V?$allocator@PAUPriceData@ioClassPrice@@@std@@@std@@QBEIXZ ; std::vector<ioClassPrice::PriceData *,std::allocator<ioClassPrice::PriceData *> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@PAUPriceData@ioClassPrice@@V?$allocator@PAUPriceData@ioClassPrice@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAUPriceData@ioClassPrice@@V?$allocator@PAUPriceData@ioClassPrice@@@std@@@std@@QBEIXZ PROC ; std::vector<ioClassPrice::PriceData *,std::allocator<ioClassPrice::PriceData *> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@PAUPriceData@ioClassPrice@@V?$allocator@PAUPriceData@ioClassPrice@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioClassPrice::PriceData *,std::allocator<ioClassPrice::PriceData *> >::size
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_G?$CEncrypt@H@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CEncrypt@H@@UAEPAXI@Z PROC			; CEncrypt<int>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CEncrypt@H@@6B@
  0000f	e8 00 00 00 00	 call	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
  00014	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00018	74 07		 je	 SHORT $LN1@scalar@2
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	59		 pop	 ecx
$LN1@scalar@2:
  00021	8b c6		 mov	 eax, esi
  00023	5e		 pop	 esi
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??_G?$CEncrypt@H@@UAEPAXI@Z ENDP			; CEncrypt<int>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0?$allocator@H@std@@QAE@XZ			; std::allocator<int>::allocator<int>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@H@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@H@std@@QAE@XZ PROC			; std::allocator<int>::allocator<int>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@H@std@@QAE@XZ ENDP			; std::allocator<int>::allocator<int>
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ ; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z	; CEncrypt<int>::EncryptValueToPool
EXTRN	?EncryptByte@ccddaabb@@QAEXPBDPADH@Z:PROC	; ccddaabb::EncryptByte
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
;	COMDAT ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z PROC	; CEncrypt<int>::EncryptValueToPool, COMDAT
; _this$ = ecx

; 67   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 		m_RC5.EncryptByte( value, m_MemPool, max(m_ValueSize, DEFAULT_ENCRYPT) );

  00003	0f b7 41 06	 movzx	 eax, WORD PTR [ecx+6]
  00007	83 f8 04	 cmp	 eax, 4
  0000a	77 03		 ja	 SHORT $LN4@EncryptVal
  0000c	6a 04		 push	 4
  0000e	58		 pop	 eax
$LN4@EncryptVal:
  0000f	50		 push	 eax
  00010	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  00013	50		 push	 eax
  00014	ff 75 08	 push	 DWORD PTR _value$[ebp]
  00017	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0001a	e8 00 00 00 00	 call	 ?EncryptByte@ccddaabb@@QAEXPBDPADH@Z ; ccddaabb::EncryptByte

; 69   : 		
; 70   : 	}

  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ENDP	; CEncrypt<int>::EncryptValueToPool
_TEXT	ENDS
PUBLIC	?Init@?$CEncrypt@H@@AAEXXZ			; CEncrypt<int>::Init
EXTRN	?Setup@ccddaabb@@QAEXPBDHH@Z:PROC		; ccddaabb::Setup
EXTRN	__imp__rand:PROC
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	__imp__GetCurrentProcessId@0:PROC
; Function compile flags: /Ogsp
;	COMDAT ?Init@?$CEncrypt@H@@AAEXXZ
_TEXT	SEGMENT
_pid$ = -8						; size = 4
_tick$ = -4						; size = 4
?Init@?$CEncrypt@H@@AAEXXZ PROC				; CEncrypt<int>::Init, COMDAT
; _this$ = ecx

; 73   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	53		 push	 ebx
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f1		 mov	 esi, ecx

; 74   : 		DWORD pid = GetCurrentProcessId();

  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentProcessId@0
  00010	89 45 f8	 mov	 DWORD PTR _pid$[ebp], eax

; 75   : 		DWORD tick = timeGetTime();

  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0

; 76   : 		m_ValueSize    = sizeof(type);
; 77   : 		m_MemPoolPos   = (unsigned short)( rand()+pid+tick )%(MAX_MEM_POOL-m_ValueSize);

  00019	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__rand
  0001f	89 45 fc	 mov	 DWORD PTR _tick$[ebp], eax
  00022	6a 04		 push	 4
  00024	58		 pop	 eax
  00025	66 89 46 06	 mov	 WORD PTR [esi+6], ax
  00029	ff d7		 call	 edi
  0002b	03 45 f8	 add	 eax, DWORD PTR _pid$[ebp]
  0002e	0f b7 4e 06	 movzx	 ecx, WORD PTR [esi+6]
  00032	03 45 fc	 add	 eax, DWORD PTR _tick$[ebp]
  00035	6a 0c		 push	 12			; 0000000cH
  00037	0f b7 c0	 movzx	 eax, ax
  0003a	5b		 pop	 ebx
  0003b	99		 cdq
  0003c	2b d9		 sub	 ebx, ecx
  0003e	f7 fb		 idiv	 ebx
  00040	66 89 56 04	 mov	 WORD PTR [esi+4], dx

; 78   : 		m_EncryptSeed  = (char)( rand()+pid+tick )%256;

  00044	ff d7		 call	 edi
  00046	02 45 f8	 add	 al, BYTE PTR _pid$[ebp]
  00049	02 45 fc	 add	 al, BYTE PTR _tick$[ebp]
  0004c	0f be c0	 movsx	 eax, al
  0004f	25 ff 00 00 80	 and	 eax, -2147483393	; 800000ffH
  00054	79 07		 jns	 SHORT $LN8@Init
  00056	48		 dec	 eax
  00057	0d 00 ff ff ff	 or	 eax, -256		; ffffff00H
  0005c	40		 inc	 eax
$LN8@Init:
  0005d	88 46 08	 mov	 BYTE PTR [esi+8], al

; 79   : 
; 80   : 		for (int i = 0; i < MAX_MEM_POOL ; i++)

  00060	33 db		 xor	 ebx, ebx
$LL3@Init:

; 81   : 			m_MemPool[i] = (char)( rand()+pid+tick )%256; // 더미

  00062	ff d7		 call	 edi
  00064	02 45 f8	 add	 al, BYTE PTR _pid$[ebp]
  00067	02 45 fc	 add	 al, BYTE PTR _tick$[ebp]
  0006a	0f be c0	 movsx	 eax, al
  0006d	25 ff 00 00 80	 and	 eax, -2147483393	; 800000ffH
  00072	79 07		 jns	 SHORT $LN9@Init
  00074	48		 dec	 eax
  00075	0d 00 ff ff ff	 or	 eax, -256		; ffffff00H
  0007a	40		 inc	 eax
$LN9@Init:
  0007b	88 44 1e 1c	 mov	 BYTE PTR [esi+ebx+28], al
  0007f	43		 inc	 ebx
  00080	83 fb 0c	 cmp	 ebx, 12			; 0000000cH
  00083	7c dd		 jl	 SHORT $LL3@Init

; 82   : 
; 83   : 		//UJ 130913, 최적화: szKey 사용안하도록 간략화
; 84   : 		//char szKey[ccddaabb::KEY_SIZE];//="";
; 85   : 		//for (int i = 0; i < ccddaabb::KEY_SIZE  ; i++)
; 86   : 		//	szKey[i] = (char)( rand()+pid+tick )%256; // 더미
; 87   : 		m_RC5.Setup( NULL, pid, tick );

  00085	ff 75 fc	 push	 DWORD PTR _tick$[ebp]
  00088	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0008b	ff 75 f8	 push	 DWORD PTR _pid$[ebp]
  0008e	6a 00		 push	 0
  00090	e8 00 00 00 00	 call	 ?Setup@ccddaabb@@QAEXPBDHH@Z ; ccddaabb::Setup
  00095	5f		 pop	 edi
  00096	5e		 pop	 esi
  00097	5b		 pop	 ebx

; 88   : 
; 89   : #ifdef _NOTUSE
; 90   : 		m_value        = 0;
; 91   : 		EncryptValueToPool((char*)&m_value);
; 92   : 		Debug();
; 93   : #endif
; 94   : 	}

  00098	c9		 leave
  00099	c3		 ret	 0
?Init@?$CEncrypt@H@@AAEXXZ ENDP				; CEncrypt<int>::Init
_TEXT	ENDS
PUBLIC	?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z	; CEncrypt<int>::DecryptValueToPool
EXTRN	?DecryptByte@ccddaabb@@QBEXPBDPADH@Z:PROC	; ccddaabb::DecryptByte
; Function compile flags: /Ogsp
;	COMDAT ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z PROC	; CEncrypt<int>::DecryptValueToPool, COMDAT
; _this$ = ecx

; 837  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 838  : 		m_RC5.DecryptByte( m_MemPool, m_TempMem, 4 );

  00004	8d 71 28	 lea	 esi, DWORD PTR [ecx+40]
  00007	6a 04		 push	 4
  00009	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  0000c	56		 push	 esi
  0000d	50		 push	 eax
  0000e	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00011	e8 00 00 00 00	 call	 ?DecryptByte@ccddaabb@@QBEXPBDPADH@Z ; ccddaabb::DecryptByte

; 839  : 		*value = *((int*)m_TempMem);

  00016	8b 06		 mov	 eax, DWORD PTR [esi]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _value$[ebp]
  0001b	89 01		 mov	 DWORD PTR [ecx], eax
  0001d	5e		 pop	 esi

; 840  : 	}

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ENDP	; CEncrypt<int>::DecryptValueToPool
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >
_TEXT	ENDS
PUBLIC	??0?$allocator@H@std@@QAE@ABV01@@Z		; std::allocator<int>::allocator<int>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@H@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@H@std@@QAE@ABV01@@Z PROC			; std::allocator<int>::allocator<int>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@H@std@@QAE@ABV01@@Z ENDP			; std::allocator<int>::allocator<int>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@H@std@@QAEXPAHI@Z	; std::allocator<int>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@H@std@@QAEXPAHI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@H@std@@QAEXPAHI@Z PROC		; std::allocator<int>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@H@std@@QAEXPAHI@Z ENDP		; std::allocator<int>::deallocate
_TEXT	ENDS
PUBLIC	?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC ; std::vector<int,std::allocator<int> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 778  : 		}

  00008	c3		 ret	 0
?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP ; std::vector<int,std::allocator<int> >::capacity
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@@Z ; std::vector<int,std::allocator<int> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@@Z PROC ; std::vector<int,std::allocator<int> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@@Z ENDP ; std::vector<int,std::allocator<int> >::_Make_iter
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ ; std::vector<int,std::allocator<int> >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ PROC	; std::vector<int,std::allocator<int> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
  0000b	cc		 int	 3
?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ ENDP	; std::vector<int,std::allocator<int> >::_Xlen
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@H@std@@QBEIXZ		; std::allocator<int>::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@H@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@H@std@@QBEIXZ PROC		; std::allocator<int>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@H@std@@QBEIXZ ENDP		; std::allocator<int>::max_size
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Compat
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Compat
_TEXT	ENDS
PUBLIC	??$_Allocate@H@std@@YAPAHIPAH@Z			; std::_Allocate<int>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Allocate@H@std@@YAPAHIPAH@Z
_TEXT	SEGMENT
$T508436 = -12						; size = 12
$T508440 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@H@std@@YAPAHIPAH@Z PROC			; std::_Allocate<int>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3e		 je	 SHORT $LN5@Allocate@3

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate@3
  00017	8b c1		 mov	 eax, ecx
  00019	c1 e0 02	 shl	 eax, 2
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	59		 pop	 ecx
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 26		 jne	 SHORT $LN5@Allocate@3
$LN1@Allocate@3:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	83 65 08 00	 and	 DWORD PTR $T508440[ebp], 0
  0002b	8d 45 08	 lea	 eax, DWORD PTR $T508440[ebp]
  0002e	50		 push	 eax
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T508436[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003d	8d 45 f4	 lea	 eax, DWORD PTR $T508436[ebp]
  00040	50		 push	 eax
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T508436[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@3:
$LN5@Allocate@3:

; 40   : 	}

  0004d	c9		 leave
  0004e	c3		 ret	 0
$LN9@Allocate@3:
??$_Allocate@H@std@@YAPAHIPAH@Z ENDP			; std::_Allocate<int>
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$_Val_type@PAH@std@@YAPAHPAH@Z		; std::_Val_type<int *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAH@std@@YAPAHPAH@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAH@std@@YAPAHPAH@Z PROC			; std::_Val_type<int *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAH@std@@YAPAHPAH@Z ENDP			; std::_Val_type<int *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z ; std::_Ptr_cat<int,int>
; Function compile flags: /Ogsp
;	COMDAT ??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z PROC ; std::_Ptr_cat<int,int>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z ENDP ; std::_Ptr_cat<int,int>
_TEXT	ENDS
PUBLIC	??$forward@AAK@std@@YAAAKAAK@Z			; std::forward<unsigned long &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAK@std@@YAAAKAAK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAK@std@@YAAAKAAK@Z PROC			; std::forward<unsigned long &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAK@std@@YAAAKAAK@Z ENDP			; std::forward<unsigned long &>
_TEXT	ENDS
PUBLIC	??$_Move@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<int *,int *>
EXTRN	__imp__memmove:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<int *,int *>, COMDAT

; 2522 : 	{	// move [_First, _Last) to [_Dest, ...), pointers to scalars

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2523 : 	ptrdiff_t _Count = _Last - _First;

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	57		 push	 edi

; 2524 : 	_CSTD memmove(&*_Dest, &*_First,
; 2525 : 		_Count * sizeof (*_First));

  0000b	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0000e	c1 fe 02	 sar	 esi, 2
  00011	c1 e6 02	 shl	 esi, 2
  00014	56		 push	 esi
  00015	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00018	57		 push	 edi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2526 : 	return (_Dest + _Count);

  00022	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 2527 : 	}

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Move@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<int *,int *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 105  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT

; 94   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 95   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 96   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
_TEXT	ENDS
PUBLIC	??$move@AA_N@std@@YA$$QA_NAA_N@Z		; std::move<bool &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@AA_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AA_N@std@@YA$$QA_NAA_N@Z PROC			; std::move<bool &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AA_N@std@@YA$$QA_NAA_N@Z ENDP			; std::move<bool &>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@HHH@std@@YAPAHPAH00AAV?$allocator@H@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<int,int,int>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@HHH@std@@YAPAHPAH00AAV?$allocator@H@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@HHH@std@@YAPAHPAH00AAV?$allocator@H@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<int,int,int>, COMDAT

; 456  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 457  : 	_DEBUG_RANGE(_First, _Last);
; 458  : 	_DEBUG_POINTER(_Dest);
; 459  : 	size_t _Count = (size_t)(_Last - _First);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2

; 460  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 461  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 462  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninit_move@HHH@std@@YAPAHPAH00AAV?$allocator@H@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<int,int,int>
_TEXT	ENDS
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
PUBLIC	??$forward@H@std@@YA$$QAHAAH@Z			; std::forward<int>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@H@std@@YA$$QAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@H@std@@YA$$QAHAAH@Z PROC			; std::forward<int>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@H@std@@YA$$QAHAAH@Z ENDP			; std::forward<int>
_TEXT	ENDS
PUBLIC	?GetSingleton@ioGlobalSoldierInfo@@SAAAV1@XZ	; ioGlobalSoldierInfo::GetSingleton
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioglobalsoldierinfo.cpp
;	COMDAT ?GetSingleton@ioGlobalSoldierInfo@@SAAAV1@XZ
_TEXT	SEGMENT
?GetSingleton@ioGlobalSoldierInfo@@SAAAV1@XZ PROC	; ioGlobalSoldierInfo::GetSingleton, COMDAT

; 35   : 	return Singleton< ioGlobalSoldierInfo >::GetSingleton();

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioGlobalSoldierInfo@@@@1PAVioGlobalSoldierInfo@@A ; Singleton<ioGlobalSoldierInfo>::ms_Singleton

; 36   : }

  00005	c3		 ret	 0
?GetSingleton@ioGlobalSoldierInfo@@SAAAV1@XZ ENDP	; ioGlobalSoldierInfo::GetSingleton
_TEXT	ENDS
PUBLIC	??8?$CEncrypt@H@@QAE_NABH@Z			; CEncrypt<int>::operator==
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
;	COMDAT ??8?$CEncrypt@H@@QAE_NABH@Z
_TEXT	SEGMENT
_value$ = -4						; size = 4
_inValue$ = 8						; size = 4
??8?$CEncrypt@H@@QAE_NABH@Z PROC			; CEncrypt<int>::operator==, COMDAT
; _this$ = ecx

; 976  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 977  : 		
; 978  : 		type value;
; 979  : 		DecryptValueToPool(&value);

  00004	8d 45 fc	 lea	 eax, DWORD PTR _value$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ; CEncrypt<int>::DecryptValueToPool

; 980  : #ifdef _NOTUSE
; 981  : 		Debug();
; 982  : #endif
; 983  : 		return (value == inValue);

  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _inValue$[ebp]
  00010	8b 55 fc	 mov	 edx, DWORD PTR _value$[ebp]
  00013	33 c0		 xor	 eax, eax
  00015	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00017	0f 94 c0	 sete	 al

; 984  : 	} 

  0001a	c9		 leave
  0001b	c2 04 00	 ret	 4
??8?$CEncrypt@H@@QAE_NABH@Z ENDP			; CEncrypt<int>::operator==
_TEXT	ENDS
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator!=
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator!=, COMDAT
; _this$ = ecx

; 334  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 335  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 336  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator!=, COMDAT
; _this$ = ecx

; 334  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 335  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 336  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Lmost
; Function compile flags: /Ogsp
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1759 : 		return (this->_Left(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1760 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Rmost
; Function compile flags: /Ogsp
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1784 : 		return (this->_Right(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1785 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Root
; Function compile flags: /Ogsp
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1790 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >, COMDAT
; _this$ = ecx

; 555  : 		this->_Alnod.deallocate(this->_Myhead, 1);

  00000	ff 71 04	 push	 DWORD PTR [ecx+4]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx

; 556  : 		}

  00009	c3		 ret	 0
??1?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Key
; Function compile flags: /Ogsp
;	COMDAT ?_Key@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Key, COMDAT

; 616  : 		{	// return reference to key in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 617  : 		return ((key_type&)_Traits::_Kfn(_Myval(_Pnode)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 618  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Key@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Lmost
; Function compile flags: /Ogsp
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1759 : 		return (this->_Left(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1760 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Rmost
; Function compile flags: /Ogsp
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1784 : 		return (this->_Right(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1785 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Root
; Function compile flags: /Ogsp
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1790 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >, COMDAT
; _this$ = ecx

; 555  : 		this->_Alnod.deallocate(this->_Myhead, 1);

  00000	ff 71 04	 push	 DWORD PTR [ecx+4]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx

; 556  : 		}

  00009	c3		 ret	 0
??1?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Key
; Function compile flags: /Ogsp
;	COMDAT ?_Key@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Key, COMDAT

; 616  : 		{	// return reference to key in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 617  : 		return ((key_type&)_Traits::_Kfn(_Myval(_Pnode)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 618  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Key@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Key
_TEXT	ENDS
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKUCHARACTER@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKUCHARACTER@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKUCHARACTER@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 396  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 397  : 		}

  00005	c3		 ret	 0
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKUCHARACTER@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >, COMDAT
; _this$ = ecx

; 208  : 		{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0

; 209  : 		}

  00005	c3		 ret	 0
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >
_TEXT	ENDS
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 396  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 397  : 		}

  00005	c3		 ret	 0
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Lbound
; Function compile flags: /Ogsp
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 1741 : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1742 : 		_Nodeptr _Pnode = _Root();

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00009	80 b9 35 03 00
	00 00		 cmp	 BYTE PTR [ecx+821], 0
  00010	75 1c		 jne	 SHORT $LN3@Lbound
  00012	8b 55 08	 mov	 edx, DWORD PTR __Keyval$[ebp]
  00015	8b 12		 mov	 edx, DWORD PTR [edx]
$LL4@Lbound:

; 1746 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

  00017	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  0001a	73 05		 jae	 SHORT $LN2@Lbound

; 1747 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  0001c	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1748 : 			else

  0001f	eb 04		 jmp	 SHORT $LN1@Lbound
$LN2@Lbound:

; 1749 : 				{	// _Pnode not less than _Keyval, remember it
; 1750 : 				_Wherenode = _Pnode;

  00021	8b c1		 mov	 eax, ecx

; 1751 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  00023	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN1@Lbound:

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00025	80 b9 35 03 00
	00 00		 cmp	 BYTE PTR [ecx+821], 0
  0002c	74 e9		 je	 SHORT $LL4@Lbound
$LN3@Lbound:

; 1752 : 				}
; 1753 : 
; 1754 : 		return (_Wherenode);	// return best remembered candidate
; 1755 : 		}

  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Lbound
; Function compile flags: /Ogsp
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 1741 : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1742 : 		_Nodeptr _Pnode = _Root();

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00009	80 79 41 00	 cmp	 BYTE PTR [ecx+65], 0
  0000d	75 19		 jne	 SHORT $LN3@Lbound@2
  0000f	8b 55 08	 mov	 edx, DWORD PTR __Keyval$[ebp]
  00012	8b 12		 mov	 edx, DWORD PTR [edx]
$LL4@Lbound@2:

; 1746 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $LN2@Lbound@2

; 1747 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1748 : 			else

  0001c	eb 04		 jmp	 SHORT $LN1@Lbound@2
$LN2@Lbound@2:

; 1749 : 				{	// _Pnode not less than _Keyval, remember it
; 1750 : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 1751 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN1@Lbound@2:

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00022	80 79 41 00	 cmp	 BYTE PTR [ecx+65], 0
  00026	74 ec		 je	 SHORT $LL4@Lbound@2
$LN3@Lbound@2:

; 1752 : 				}
; 1753 : 
; 1754 : 		return (_Wherenode);	// return best remembered candidate
; 1755 : 		}

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 214  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	53		 push	 ebx
  00005	32 db		 xor	 bl, bl
  00007	38 99 35 03 00
	00		 cmp	 BYTE PTR [ecx+821], bl
  0000d	75 36		 jne	 SHORT $LN3@operator@4

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

  0000f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00012	38 9a 35 03 00
	00		 cmp	 BYTE PTR [edx+821], bl
  00018	75 10		 jne	 SHORT $LN34@operator@4

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

$LL18@operator@4:
  0001a	8b ca		 mov	 ecx, edx
  0001c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001e	38 9a 35 03 00
	00		 cmp	 BYTE PTR [edx+821], bl
  00024	74 f4		 je	 SHORT $LL18@operator@4
  00026	89 08		 mov	 DWORD PTR [eax], ecx
  00028	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  00029	c3		 ret	 0
$LN34@operator@4:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  0002a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002d	eb 0c		 jmp	 SHORT $LN38@operator@4
$LL2@operator@4:
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  00034	75 0d		 jne	 SHORT $LN1@operator@4

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

  00036	89 10		 mov	 DWORD PTR [eax], edx
  00038	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
$LN38@operator@4:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  0003b	38 9a 35 03 00
	00		 cmp	 BYTE PTR [edx+821], bl
  00041	74 ec		 je	 SHORT $LL2@operator@4
$LN1@operator@4:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

  00043	89 10		 mov	 DWORD PTR [eax], edx
$LN3@operator@4:
  00045	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  00046	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 214  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >, COMDAT
; _this$ = ecx

; 482  : 		{	// construct traits from _Parg and allocators from _Al

  00000	8b c1		 mov	 eax, ecx

; 483  : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Node>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Node>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >, COMDAT
; _this$ = ecx

; 482  : 		{	// construct traits from _Parg and allocators from _Al

  00000	8b c1		 mov	 eax, ecx

; 483  : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Node>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Node>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Lrotate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00009	56		 push	 esi

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

  0000f	8b 30		 mov	 esi, DWORD PTR [eax]
  00011	80 be 35 03 00
	00 00		 cmp	 BYTE PTR [esi+821], 0
  00018	75 03		 jne	 SHORT $LN5@Lrotate

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

  0001a	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Lrotate:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001d	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  00020	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

  00023	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00026	5e		 pop	 esi
  00027	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  0002a	75 05		 jne	 SHORT $LN4@Lrotate

; 1772 : 			_Root() = _Pnode;

  0002c	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

  0002f	eb 0e		 jmp	 SHORT $LN1@Lrotate
$LN4@Lrotate:
  00031	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00034	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00036	75 04		 jne	 SHORT $LN2@Lrotate

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  00038	89 01		 mov	 DWORD PTR [ecx], eax

; 1775 : 		else

  0003a	eb 03		 jmp	 SHORT $LN1@Lrotate
$LN2@Lrotate:

; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  0003c	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@Lrotate:

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Rrotate
; Function compile flags: /Ogsp
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	56		 push	 esi

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

  00009	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000c	89 32		 mov	 DWORD PTR [edx], esi

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

  0000e	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00011	80 be 35 03 00
	00 00		 cmp	 BYTE PTR [esi+821], 0
  00018	75 03		 jne	 SHORT $LN5@Rrotate

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

  0001a	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Rrotate:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001d	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  00020	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

  00023	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00026	5e		 pop	 esi
  00027	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  0002a	75 05		 jne	 SHORT $LN4@Rrotate

; 1802 : 			_Root() = _Pnode;

  0002c	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

  0002f	eb 0f		 jmp	 SHORT $LN1@Rrotate
$LN4@Rrotate:
  00031	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00034	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00037	75 05		 jne	 SHORT $LN2@Rrotate

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00039	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1805 : 		else

  0003c	eb 02		 jmp	 SHORT $LN1@Rrotate
$LN2@Rrotate:

; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  0003e	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@Rrotate:

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  00040	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00043	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Lrotate
; Function compile flags: /Ogsp
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00009	56		 push	 esi

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

  0000f	8b 30		 mov	 esi, DWORD PTR [eax]
  00011	80 7e 41 00	 cmp	 BYTE PTR [esi+65], 0
  00015	75 03		 jne	 SHORT $LN5@Lrotate@2

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Lrotate@2:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 05		 jne	 SHORT $LN4@Lrotate@2

; 1772 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

  0002c	eb 0e		 jmp	 SHORT $LN1@Lrotate@2
$LN4@Lrotate@2:
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00033	75 04		 jne	 SHORT $LN2@Lrotate@2

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  00035	89 01		 mov	 DWORD PTR [ecx], eax

; 1775 : 		else

  00037	eb 03		 jmp	 SHORT $LN1@Lrotate@2
$LN2@Lrotate@2:

; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00039	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@Lrotate@2:

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0003c	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  0003e	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Rrotate
; Function compile flags: /Ogsp
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	56		 push	 esi

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

  00009	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000c	89 32		 mov	 DWORD PTR [edx], esi

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

  0000e	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00011	80 7e 41 00	 cmp	 BYTE PTR [esi+65], 0
  00015	75 03		 jne	 SHORT $LN5@Rrotate@2

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Rrotate@2:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 05		 jne	 SHORT $LN4@Rrotate@2

; 1802 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

  0002c	eb 0f		 jmp	 SHORT $LN1@Rrotate@2
$LN4@Rrotate@2:
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00034	75 05		 jne	 SHORT $LN2@Rrotate@2

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00036	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1805 : 		else

  00039	eb 02		 jmp	 SHORT $LN1@Rrotate@2
$LN2@Rrotate@2:

; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  0003b	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@Rrotate@2:

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  0003d	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00040	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))
; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 257  : 			_SCL_SECURE_OUT_OF_RANGE;
; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::operator++

; 266  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 267  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	?construct@?$allocator@H@std@@QAEXPAH$$QAH@Z	; std::allocator<int>::construct
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@H@std@@QAEXPAH$$QAH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@H@std@@QAEXPAH$$QAH@Z PROC	; std::allocator<int>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@construct:

; 203  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?construct@?$allocator@H@std@@QAEXPAH$$QAH@Z ENDP	; std::allocator<int>::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@@Z ; std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >::destroy
; Function compile flags: /Ogsp
;	COMDAT ?destroy@?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@@Z PROC ; std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@@Z ENDP ; std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::max_size, COMDAT
; _this$ = ecx

; 874  : 		return (this->_Alval.max_size());

  00000	b8 e1 1b 51 00	 mov	 eax, 5315553		; 00511be1H

; 875  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::max_size, COMDAT
; _this$ = ecx

; 874  : 		return (this->_Alval.max_size());

  00000	b8 c4 4e ec 04	 mov	 eax, 82595524		; 04ec4ec4H

; 875  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::max_size
_TEXT	ENDS
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator--
; Function compile flags: /Ogsp
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 277  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 278  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 279  : 		if (this->_Getcont() == 0
; 280  : 			|| this->_Ptr == 0)
; 281  : 			{	// report error
; 282  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 283  : 			_SCL_SECURE_OUT_OF_RANGE;
; 284  : 			}
; 285  : 
; 286  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 287  : 		--(*(_Mybase *)this);
; 288  : 		if (_Ptrsav == this->_Ptr)
; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 291  : 			_SCL_SECURE_OUT_OF_RANGE;
; 292  : 			}
; 293  : 
; 294  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 295  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 296  : 
; 297  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 298  : 		--(*(_Mybase *)this);
; 299  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 300  : 
; 301  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 302  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::operator--

; 303  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 304  : 
; 305  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 306  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 146  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator--
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 277  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 278  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 279  : 		if (this->_Getcont() == 0
; 280  : 			|| this->_Ptr == 0)
; 281  : 			{	// report error
; 282  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 283  : 			_SCL_SECURE_OUT_OF_RANGE;
; 284  : 			}
; 285  : 
; 286  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 287  : 		--(*(_Mybase *)this);
; 288  : 		if (_Ptrsav == this->_Ptr)
; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 291  : 			_SCL_SECURE_OUT_OF_RANGE;
; 292  : 			}
; 293  : 
; 294  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 295  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 296  : 
; 297  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 298  : 		--(*(_Mybase *)this);
; 299  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 300  : 
; 301  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 302  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::operator--

; 303  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 304  : 
; 305  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 306  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 146  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??$?0AAKAAUItemCode@ioGlobalSoldierInfo@@@?$_Pair_base@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@QAE@AAKAAUItemCode@ioGlobalSoldierInfo@@@Z ; std::_Pair_base<unsigned long const ,ioGlobalSoldierInfo::ItemCode>::_Pair_base<unsigned long const ,ioGlobalSoldierInfo::ItemCode><unsigned long &,ioGlobalSoldierInfo::ItemCode &>
; Function compile flags: /Ogsp
;	COMDAT ??$?0AAKAAUItemCode@ioGlobalSoldierInfo@@@?$_Pair_base@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@QAE@AAKAAUItemCode@ioGlobalSoldierInfo@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAKAAUItemCode@ioGlobalSoldierInfo@@@?$_Pair_base@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@QAE@AAKAAUItemCode@ioGlobalSoldierInfo@@@Z PROC ; std::_Pair_base<unsigned long const ,ioGlobalSoldierInfo::ItemCode>::_Pair_base<unsigned long const ,ioGlobalSoldierInfo::ItemCode><unsigned long &,ioGlobalSoldierInfo::ItemCode &>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 0c	 mov	 esi, DWORD PTR __Val2$[ebp]
  00007	8b c1		 mov	 eax, ecx
  00009	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  0000c	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000e	57		 push	 edi
  0000f	6a 0c		 push	 12			; 0000000cH
  00011	89 08		 mov	 DWORD PTR [eax], ecx
  00013	59		 pop	 ecx
  00014	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  00017	f3 a5		 rep movsd
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi

; 164  : 		}

  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
??$?0AAKAAUItemCode@ioGlobalSoldierInfo@@@?$_Pair_base@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@QAE@AAKAAUItemCode@ioGlobalSoldierInfo@@@Z ENDP ; std::_Pair_base<unsigned long const ,ioGlobalSoldierInfo::ItemCode>::_Pair_base<unsigned long const ,ioGlobalSoldierInfo::ItemCode><unsigned long &,ioGlobalSoldierInfo::ItemCode &>
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Buynode
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 559  : 		{	// allocate a node

  00000	56		 push	 esi

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00001	6a 00		 push	 0
  00003	6a 01		 push	 1
  00005	8b f1		 mov	 esi, ecx
  00007	e8 00 00 00 00	 call	 ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Node>
  0000c	59		 pop	 ecx
  0000d	59		 pop	 ecx

; 561  : 
; 562  : 		this->_Left(_Wherenode) = this->_Myhead;

  0000e	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00011	89 08		 mov	 DWORD PTR [eax], ecx

; 563  : 		this->_Parent(_Wherenode) = this->_Myhead;

  00013	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00016	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 564  : 		this->_Right(_Wherenode) = this->_Myhead;

  00019	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 565  : 		this->_Color(_Wherenode) = this->_Red;

  0001f	66 c7 80 34 03
	00 00 00 00	 mov	 WORD PTR [eax+820], 0
  00028	5e		 pop	 esi

; 566  : 		this->_Isnil(_Wherenode) = false;
; 567  : 		return (_Wherenode);
; 568  : 		}

  00029	c3		 ret	 0
?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Buynode
; Function compile flags: /Ogsp
;	COMDAT ?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
$T509160 = -16						; size = 12
$T509138 = -4						; size = 4
?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 559  : 		{	// allocate a node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00007	6a 44		 push	 68			; 00000044H
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	59		 pop	 ecx
  00011	33 c9		 xor	 ecx, ecx
  00013	3b c1		 cmp	 eax, ecx
  00015	74 18		 je	 SHORT $LN5@Buynode

; 561  : 
; 562  : 		this->_Left(_Wherenode) = this->_Myhead;

  00017	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001a	89 10		 mov	 DWORD PTR [eax], edx

; 563  : 		this->_Parent(_Wherenode) = this->_Myhead;

  0001c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001f	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 564  : 		this->_Right(_Wherenode) = this->_Myhead;

  00022	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00025	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 565  : 		this->_Color(_Wherenode) = this->_Red;

  00028	66 89 48 40	 mov	 WORD PTR [eax+64], cx
  0002c	5e		 pop	 esi

; 566  : 		this->_Isnil(_Wherenode) = false;
; 567  : 		return (_Wherenode);
; 568  : 		}

  0002d	c9		 leave
  0002e	c3		 ret	 0

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

$LN5@Buynode:
  0002f	8d 45 fc	 lea	 eax, DWORD PTR $T509138[ebp]
  00032	89 4d fc	 mov	 DWORD PTR $T509138[ebp], ecx
  00035	50		 push	 eax
  00036	8d 4d f0	 lea	 ecx, DWORD PTR $T509160[ebp]
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  0003f	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00044	8d 45 f0	 lea	 eax, DWORD PTR $T509160[ebp]
  00047	50		 push	 eax
  00048	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T509160[ebp], OFFSET ??_7bad_alloc@std@@6B@
  0004f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN27@Buynode:
$LN26@Buynode:
  00054	cc		 int	 3
?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > > &,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 164  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > > &,bool>
; Function compile flags: /Ogsp
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 164  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@QAE@$$QBK$$QAUItemCode@ioGlobalSoldierInfo@@@Z ; std::_Pair_base<unsigned long const ,ioGlobalSoldierInfo::ItemCode>::_Pair_base<unsigned long const ,ioGlobalSoldierInfo::ItemCode>
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Pair_base@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@QAE@$$QBK$$QAUItemCode@ioGlobalSoldierInfo@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@QAE@$$QBK$$QAUItemCode@ioGlobalSoldierInfo@@@Z PROC ; std::_Pair_base<unsigned long const ,ioGlobalSoldierInfo::ItemCode>::_Pair_base<unsigned long const ,ioGlobalSoldierInfo::ItemCode>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 0c	 mov	 esi, DWORD PTR __Val2$[ebp]
  00007	8b c1		 mov	 eax, ecx
  00009	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  0000c	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000e	57		 push	 edi
  0000f	6a 0c		 push	 12			; 0000000cH
  00011	89 08		 mov	 DWORD PTR [eax], ecx
  00013	59		 pop	 ecx
  00014	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  00017	f3 a5		 rep movsd
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi

; 146  : 		}

  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
??0?$_Pair_base@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@QAE@$$QBK$$QAUItemCode@ioGlobalSoldierInfo@@@Z ENDP ; std::_Pair_base<unsigned long const ,ioGlobalSoldierInfo::ItemCode>::_Pair_base<unsigned long const ,ioGlobalSoldierInfo::ItemCode>
_TEXT	ENDS
PUBLIC	??1CHARACTER@@QAE@XZ				; CHARACTER::~CHARACTER
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CHARACTER@@QAE@XZ DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$??1CHARACTER@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CHARACTER@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CHARACTER@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CHARACTER@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CHARACTER@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CHARACTER@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CHARACTER@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CHARACTER@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1CHARACTER@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1CHARACTER@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??1CHARACTER@@QAE@XZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??1CHARACTER@@QAE@XZ$9
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1CHARACTER@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CHARACTER@@QAE@XZ PROC				; CHARACTER::~CHARACTER, COMDAT
; _this$ = ecx
  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1CHARACTER@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	68 00 00 00 00	 push	 OFFSET ??1?$CEncrypt@H@@UAE@XZ ; CEncrypt<int>::~CEncrypt<int>
  00016	6a 04		 push	 4
  00018	6a 30		 push	 48			; 00000030H
  0001a	8d 86 e0 01 00
	00		 lea	 eax, DWORD PTR [esi+480]
  00020	50		 push	 eax
  00021	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 9
  00028	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  0002d	bf 00 00 00 00	 mov	 edi, OFFSET ??_7?$CEncrypt@H@@6B@
  00032	8d 8e bc 01 00
	00		 lea	 ecx, DWORD PTR [esi+444]
  00038	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  0003c	89 be b0 01 00
	00		 mov	 DWORD PTR [esi+432], edi
  00042	e8 00 00 00 00	 call	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
  00047	8d 8e 8c 01 00
	00		 lea	 ecx, DWORD PTR [esi+396]
  0004d	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00051	89 be 80 01 00
	00		 mov	 DWORD PTR [esi+384], edi
  00057	e8 00 00 00 00	 call	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
  0005c	8d 8e 5c 01 00
	00		 lea	 ecx, DWORD PTR [esi+348]
  00062	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00066	89 be 50 01 00
	00		 mov	 DWORD PTR [esi+336], edi
  0006c	e8 00 00 00 00	 call	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
  00071	8d 8e 2c 01 00
	00		 lea	 ecx, DWORD PTR [esi+300]
  00077	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0007b	89 be 20 01 00
	00		 mov	 DWORD PTR [esi+288], edi
  00081	e8 00 00 00 00	 call	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
  00086	8d 8e fc 00 00
	00		 lea	 ecx, DWORD PTR [esi+252]
  0008c	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00090	89 be f0 00 00
	00		 mov	 DWORD PTR [esi+240], edi
  00096	e8 00 00 00 00	 call	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
  0009b	8d 8e cc 00 00
	00		 lea	 ecx, DWORD PTR [esi+204]
  000a1	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000a5	89 be c0 00 00
	00		 mov	 DWORD PTR [esi+192], edi
  000ab	e8 00 00 00 00	 call	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
  000b0	8d 8e 9c 00 00
	00		 lea	 ecx, DWORD PTR [esi+156]
  000b6	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000ba	89 be 90 00 00
	00		 mov	 DWORD PTR [esi+144], edi
  000c0	e8 00 00 00 00	 call	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
  000c5	8d 4e 6c	 lea	 ecx, DWORD PTR [esi+108]
  000c8	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000cc	89 7e 60	 mov	 DWORD PTR [esi+96], edi
  000cf	e8 00 00 00 00	 call	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
  000d4	8d 4e 3c	 lea	 ecx, DWORD PTR [esi+60]
  000d7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000db	89 7e 30	 mov	 DWORD PTR [esi+48], edi
  000de	e8 00 00 00 00	 call	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
  000e3	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000e7	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  000ea	89 3e		 mov	 DWORD PTR [esi], edi
  000ec	e8 00 00 00 00	 call	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
  000f1	e8 00 00 00 00	 call	 __EH_epilog3
  000f6	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CHARACTER@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??1CHARACTER@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 30	 add	 ecx, 48			; 00000030H
  0000e	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??1CHARACTER@@QAE@XZ$2:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 60	 add	 ecx, 96			; 00000060H
  00019	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??1CHARACTER@@QAE@XZ$3:
  0001e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  00027	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??1CHARACTER@@QAE@XZ$4:
  0002c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00035	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??1CHARACTER@@QAE@XZ$5:
  0003a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	81 c1 f0 00 00
	00		 add	 ecx, 240		; 000000f0H
  00043	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??1CHARACTER@@QAE@XZ$6:
  00048	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	81 c1 20 01 00
	00		 add	 ecx, 288		; 00000120H
  00051	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??1CHARACTER@@QAE@XZ$7:
  00056	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	81 c1 50 01 00
	00		 add	 ecx, 336		; 00000150H
  0005f	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??1CHARACTER@@QAE@XZ$8:
  00064	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	81 c1 80 01 00
	00		 add	 ecx, 384		; 00000180H
  0006d	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??1CHARACTER@@QAE@XZ$9:
  00072	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	81 c1 b0 01 00
	00		 add	 ecx, 432		; 000001b0H
  0007b	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__ehhandler$??1CHARACTER@@QAE@XZ:
  00080	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00084	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00087	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0008a	33 c8		 xor	 ecx, eax
  0008c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00091	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CHARACTER@@QAE@XZ
  00096	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CHARACTER@@QAE@XZ ENDP				; CHARACTER::~CHARACTER
PUBLIC	?MaxClassPrice@ioClassPrice@@QAEHXZ		; ioClassPrice::MaxClassPrice
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioclassprice.h
;	COMDAT ?MaxClassPrice@ioClassPrice@@QAEHXZ
_TEXT	SEGMENT
?MaxClassPrice@ioClassPrice@@QAEHXZ PROC		; ioClassPrice::MaxClassPrice, COMDAT
; _this$ = ecx

; 114  : 	int MaxClassPrice(){ return m_vPriceData.size(); }

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00006	c1 f8 02	 sar	 eax, 2
  00009	c3		 ret	 0
?MaxClassPrice@ioClassPrice@@QAEHXZ ENDP		; ioClassPrice::MaxClassPrice
_TEXT	ENDS
PUBLIC	?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::begin
_TEXT	ENDS
PUBLIC	??0?$CEncrypt@H@@QAE@XZ				; CEncrypt<int>::CEncrypt<int>
EXTRN	??0ccddaabb@@QAE@XZ:PROC			; ccddaabb::ccddaabb
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
xdata$x	SEGMENT
__unwindtable$??0?$CEncrypt@H@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CEncrypt@H@@QAE@XZ$0
__ehfuncinfo$??0?$CEncrypt@H@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CEncrypt@H@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0?$CEncrypt@H@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$CEncrypt@H@@QAE@XZ PROC				; CEncrypt<int>::CEncrypt<int>, COMDAT
; _this$ = ecx

; 109  : 	CEncrypt()

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0?$CEncrypt@H@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00014	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CEncrypt@H@@6B@
  0001a	e8 00 00 00 00	 call	 ??0ccddaabb@@QAE@XZ	; ccddaabb::ccddaabb
  0001f	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 110  : 	{
; 111  : 		Init();

  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?Init@?$CEncrypt@H@@AAEXXZ ; CEncrypt<int>::Init

; 112  : 	}

  0002a	8b c6		 mov	 eax, esi
  0002c	e8 00 00 00 00	 call	 __EH_epilog3
  00031	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CEncrypt@H@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	e9 00 00 00 00	 jmp	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
__ehhandler$??0?$CEncrypt@H@@QAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CEncrypt@H@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CEncrypt@H@@QAE@XZ ENDP				; CEncrypt<int>::CEncrypt<int>
PUBLIC	??B?$CEncrypt@H@@QAEHXZ				; CEncrypt<int>::operator int
; Function compile flags: /Ogsp
;	COMDAT ??B?$CEncrypt@H@@QAEHXZ
_TEXT	SEGMENT
_value$ = -4						; size = 4
??B?$CEncrypt@H@@QAEHXZ PROC				; CEncrypt<int>::operator int, COMDAT
; _this$ = ecx

; 134  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 135  : 		type value;
; 136  : 		DecryptValueToPool(&value);

  00004	8d 45 fc	 lea	 eax, DWORD PTR _value$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ; CEncrypt<int>::DecryptValueToPool

; 137  : 
; 138  : #ifdef _NOTUSE
; 139  : 		Debug();
; 140  : #endif
; 141  : 		return value;

  0000d	8b 45 fc	 mov	 eax, DWORD PTR _value$[ebp]

; 142  : 	}

  00010	c9		 leave
  00011	c3		 ret	 0
??B?$CEncrypt@H@@QAEHXZ ENDP				; CEncrypt<int>::operator int
_TEXT	ENDS
PUBLIC	??B?$CEncrypt@H@@QBEHXZ				; CEncrypt<int>::operator int
; Function compile flags: /Ogsp
;	COMDAT ??B?$CEncrypt@H@@QBEHXZ
_TEXT	SEGMENT
_value$ = -4						; size = 4
??B?$CEncrypt@H@@QBEHXZ PROC				; CEncrypt<int>::operator int, COMDAT
; _this$ = ecx

; 145  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 146  : 		//UJ 130829, const도 똑같이 하면 된다 --start
; 147  : 		type value;
; 148  : 		CEncrypt<type>* pThis = const_cast<CEncrypt<type>*>(this);
; 149  : 		pThis->DecryptValueToPool(&value);

  00004	8d 45 fc	 lea	 eax, DWORD PTR _value$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ; CEncrypt<int>::DecryptValueToPool

; 150  : 		//// const에서 DecryptValueToPool 사용할 수 없으므로 아래와 같이함.
; 151  :  		//type value;
; 152  : 		//char szTempMem[MAX_ENCRYPT];
; 153  : 		//m_RC5.DecryptByte( m_MemPool, szTempMem, max(m_ValueSize, DEFAULT_ENCRYPT) );
; 154  : 		//memcpy( &value, szTempMem, m_ValueSize );
; 155  : 		//UJ --end
; 156  : 
; 157  : #ifdef _NOTUSE
; 158  : 		Debug();
; 159  : #endif
; 160  : 		return value;

  0000d	8b 45 fc	 mov	 eax, DWORD PTR _value$[ebp]

; 161  : 	}

  00010	c9		 leave
  00011	c3		 ret	 0
??B?$CEncrypt@H@@QBEHXZ ENDP				; CEncrypt<int>::operator int
_TEXT	ENDS
PUBLIC	??4?$CEncrypt@H@@QAEHH@Z			; CEncrypt<int>::operator=
; Function compile flags: /Ogsp
;	COMDAT ??4?$CEncrypt@H@@QAEHH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
_inValue$ = 8						; size = 4
??4?$CEncrypt@H@@QAEHH@Z PROC				; CEncrypt<int>::operator=, COMDAT
; _this$ = ecx

; 843  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 844  : 		type value = inValue;

  00003	8b 45 08	 mov	 eax, DWORD PTR _inValue$[ebp]
  00006	89 45 08	 mov	 DWORD PTR _value$[ebp], eax

; 845  : 		EncryptValueToPool((char*)&value);

  00009	8d 45 08	 lea	 eax, DWORD PTR _value$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 846  : #ifdef _NOTUSE
; 847  : 		m_value = inValue;
; 848  : 		Debug();
; 849  : #endif
; 850  : 		return value;

  00012	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]

; 851  : 	}

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
??4?$CEncrypt@H@@QAEHH@Z ENDP				; CEncrypt<int>::operator=
_TEXT	ENDS
PUBLIC	?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::end
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@V?$allocator@H@1@@Z ; std::_Vector_val<int,std::allocator<int> >::_Vector_val<int,std::allocator<int> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@V?$allocator@H@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@V?$allocator@H@1@@Z PROC ; std::_Vector_val<int,std::allocator<int> >::_Vector_val<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@V?$allocator@H@1@@Z ENDP ; std::_Vector_val<int,std::allocator<int> >::_Vector_val<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC ; std::vector<int,std::allocator<int> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP ; std::vector<int,std::allocator<int> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z ; std::vector<int,std::allocator<int> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z PROC ; std::vector<int,std::allocator<int> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  00008	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  0000d	c1 f8 02	 sar	 eax, 2
  00010	8b c8		 mov	 ecx, eax
  00012	d1 e9		 shr	 ecx, 1
  00014	2b d1		 sub	 edx, ecx
  00016	3b d0		 cmp	 edx, eax
  00018	73 04		 jae	 SHORT $LN4@Grow_to
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 02		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  0001e	03 c1		 add	 eax, ecx
$LN5@Grow_to:

; 1279 : 		if (_Capacity < _Count)

  00020	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00023	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z ENDP ; std::vector<int,std::allocator<int> >::_Grow_to
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@H@std@@QAEPAHI@Z		; std::allocator<int>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@H@std@@QAEPAHI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@H@std@@QAEPAHI@Z PROC		; std::allocator<int>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@H@std@@YAPAHIPAH@Z ; std::_Allocate<int>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@H@std@@QAEPAHI@Z ENDP		; std::allocator<int>::allocate
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator==
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator==
_TEXT	ENDS
PUBLIC	??$_Move@PAHPAH@std@@YAPAHPAH00@Z		; std::_Move<int *,int *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAHPAH@std@@YAPAHPAH00@Z
_TEXT	SEGMENT
__Cat$509391 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAHPAH@std@@YAPAHPAH00@Z PROC			; std::_Move<int *,int *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$509391[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<int *,int *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAHPAH@std@@YAPAHPAH00@Z ENDP			; std::_Move<int *,int *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 101  : 	{	// exchange values stored at _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 102  : 	_Ty _Tmp = _Move(_Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8a 08		 mov	 cl, BYTE PTR [eax]
  00008	56		 push	 esi

; 103  : 	_Left = _Move(_Right);

  00009	8b 75 0c	 mov	 esi, DWORD PTR __Right$[ebp]
  0000c	8a 16		 mov	 dl, BYTE PTR [esi]
  0000e	88 10		 mov	 BYTE PTR [eax], dl

; 104  : 	_Right = _Move(_Tmp);

  00010	88 0e		 mov	 BYTE PTR [esi], cl
  00012	5e		 pop	 esi

; 105  : 	}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z ; std::_Uninitialized_move<int *,int *,std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z PROC ; std::_Uninitialized_move<int *,int *,std::allocator<int> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2
  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 472  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z ENDP ; std::_Uninitialized_move<int *,int *,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??1?$_Pair_base@$$CBKUCHARACTER@@@std@@QAE@XZ	; std::_Pair_base<unsigned long const ,CHARACTER>::~_Pair_base<unsigned long const ,CHARACTER>
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Pair_base@$$CBKUCHARACTER@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Pair_base@$$CBKUCHARACTER@@@std@@QAE@XZ PROC	; std::_Pair_base<unsigned long const ,CHARACTER>::~_Pair_base<unsigned long const ,CHARACTER>, COMDAT
; _this$ = ecx
  00000	83 c1 04	 add	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??1CHARACTER@@QAE@XZ
??1?$_Pair_base@$$CBKUCHARACTER@@@std@@QAE@XZ ENDP	; std::_Pair_base<unsigned long const ,CHARACTER>::~_Pair_base<unsigned long const ,CHARACTER>
_TEXT	ENDS
PUBLIC	??0?$CEncrypt@H@@QAE@ABV0@@Z			; CEncrypt<int>::CEncrypt<int>
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
xdata$x	SEGMENT
__unwindtable$??0?$CEncrypt@H@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CEncrypt@H@@QAE@ABV0@@Z$0
__ehfuncinfo$??0?$CEncrypt@H@@QAE@ABV0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CEncrypt@H@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0?$CEncrypt@H@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_value$509445 = 8					; size = 4
_value$509440 = 8					; size = 4
_inValue$ = 8						; size = 4
??0?$CEncrypt@H@@QAE@ABV0@@Z PROC			; CEncrypt<int>::CEncrypt<int>, COMDAT
; _this$ = ecx

; 120  : 	CEncrypt( const CEncrypt<type> &inValue )   // 선언과 동시에 값을 대입하기 위해서

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0?$CEncrypt@H@@QAE@ABV0@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00014	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CEncrypt@H@@6B@
  0001a	e8 00 00 00 00	 call	 ??0ccddaabb@@QAE@XZ	; ccddaabb::ccddaabb
  0001f	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 121  : 	{
; 122  : 		Init();

  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?Init@?$CEncrypt@H@@AAEXXZ ; CEncrypt<int>::Init

; 123  : 		*this = inValue;

  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _inValue$[ebp]
  0002d	8d 45 08	 lea	 eax, DWORD PTR _value$509440[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ; CEncrypt<int>::DecryptValueToPool
  00036	8b 45 08	 mov	 eax, DWORD PTR _value$509440[ebp]
  00039	89 45 08	 mov	 DWORD PTR _value$509445[ebp], eax
  0003c	8d 45 08	 lea	 eax, DWORD PTR _value$509445[ebp]
  0003f	50		 push	 eax
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 124  : 	}

  00047	8b c6		 mov	 eax, esi
  00049	e8 00 00 00 00	 call	 __EH_epilog3
  0004e	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CEncrypt@H@@QAE@ABV0@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	e9 00 00 00 00	 jmp	 ??1ccddaabb@@UAE@XZ	; ccddaabb::~ccddaabb
__ehhandler$??0?$CEncrypt@H@@QAE@ABV0@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CEncrypt@H@@QAE@ABV0@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CEncrypt@H@@QAE@ABV0@@Z ENDP			; CEncrypt<int>::CEncrypt<int>
PUBLIC	??4?$CEncrypt@H@@QAE_NAAV0@@Z			; CEncrypt<int>::operator=
; Function compile flags: /Ogsp
;	COMDAT ??4?$CEncrypt@H@@QAE_NAAV0@@Z
_TEXT	SEGMENT
_value$509458 = -4					; size = 4
_value$ = 8						; size = 4
_inValue$ = 8						; size = 4
??4?$CEncrypt@H@@QAE_NAAV0@@Z PROC			; CEncrypt<int>::operator=, COMDAT
; _this$ = ecx

; 3272 : 	 {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 3273 : 		 type value = inValue;

  00005	8d 45 fc	 lea	 eax, DWORD PTR _value$509458[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _inValue$[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ; CEncrypt<int>::DecryptValueToPool
  00013	8b 45 fc	 mov	 eax, DWORD PTR _value$509458[ebp]
  00016	89 45 08	 mov	 DWORD PTR _value$[ebp], eax

; 3274 : 		 EncryptValueToPool((char*)&value);

  00019	8d 45 08	 lea	 eax, DWORD PTR _value$[ebp]
  0001c	50		 push	 eax
  0001d	8b ce		 mov	 ecx, esi
  0001f	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 3275 : #ifdef _NOTUSE
; 3276 : 		 m_value = inValue;
; 3277 : 		 Debug();
; 3278 : #endif
; 3279 : 		 return value;

  00024	83 7d 08 00	 cmp	 DWORD PTR _value$[ebp], 0
  00028	5e		 pop	 esi
  00029	0f 95 c0	 setne	 al

; 3280 : 	 }

  0002c	c9		 leave
  0002d	c2 04 00	 ret	 4
??4?$CEncrypt@H@@QAE_NAAV0@@Z ENDP			; CEncrypt<int>::operator=
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >, COMDAT
; _this$ = ecx

; 372  : 	_Tree_iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0

; 373  : 		{	// construct with null node
; 374  : 		}

  00005	c3		 ret	 0
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >
_TEXT	ENDS
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKUCHARACTER@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator->
; Function compile flags: /Ogsp
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKUCHARACTER@@@1@XZ
_TEXT	SEGMENT
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKUCHARACTER@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator->, COMDAT
; _this$ = ecx

; 401  : 		return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 402  : 		}

  00005	c3		 ret	 0
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKUCHARACTER@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator->
_TEXT	ENDS
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator->
; Function compile flags: /Ogsp
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@XZ
_TEXT	SEGMENT
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator->, COMDAT
; _this$ = ecx

; 401  : 		return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 402  : 		}

  00005	c3		 ret	 0
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator->
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >, COMDAT
; _this$ = ecx

; 378  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 379  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))
; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 257  : 			_SCL_SECURE_OUT_OF_RANGE;
; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::operator++

; 266  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 267  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >, COMDAT
; _this$ = ecx

; 378  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 379  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >, COMDAT
; _this$ = ecx

; 542  : 		{	// construct base, and allocator from _Al

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 543  : 		this->_Mysize = 0;

  00003	83 66 08 00	 and	 DWORD PTR [esi+8], 0

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

  00007	6a 00		 push	 0
  00009	6a 01		 push	 1
  0000b	e8 00 00 00 00	 call	 ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Node>
  00010	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 545  : 
; 546  : 		this->_Left(this->_Myhead) = this->_Myhead;

  00013	89 00		 mov	 DWORD PTR [eax], eax

; 547  : 		this->_Parent(this->_Myhead) = this->_Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 548  : 		this->_Right(this->_Myhead) = this->_Myhead;

  0001b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001e	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 549  : 		this->_Color(this->_Myhead) = this->_Black;

  00021	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00024	c6 80 34 03 00
	00 01		 mov	 BYTE PTR [eax+820], 1

; 550  : 		this->_Isnil(this->_Myhead) = true;

  0002b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002e	59		 pop	 ecx
  0002f	59		 pop	 ecx
  00030	c6 80 35 03 00
	00 01		 mov	 BYTE PTR [eax+821], 1

; 551  : 		}

  00037	8b c6		 mov	 eax, esi
  00039	5e		 pop	 esi
  0003a	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 807  : 		return (iterator(_Lmost(), this));

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 808  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::begin
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z
_TEXT	SEGMENT
$T509679 = -16						; size = 12
$T509657 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >, COMDAT
; _this$ = ecx

; 542  : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 543  : 		this->_Mysize = 0;

  00009	83 66 08 00	 and	 DWORD PTR [esi+8], 0

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

  0000d	6a 44		 push	 68			; 00000044H
  0000f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00014	59		 pop	 ecx
  00015	85 c0		 test	 eax, eax
  00017	74 26		 je	 SHORT $LN15@Tree_val
  00019	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 545  : 
; 546  : 		this->_Left(this->_Myhead) = this->_Myhead;

  0001c	89 00		 mov	 DWORD PTR [eax], eax

; 547  : 		this->_Parent(this->_Myhead) = this->_Myhead;

  0001e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00021	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 548  : 		this->_Right(this->_Myhead) = this->_Myhead;

  00024	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00027	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 549  : 		this->_Color(this->_Myhead) = this->_Black;

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	c6 40 40 01	 mov	 BYTE PTR [eax+64], 1

; 550  : 		this->_Isnil(this->_Myhead) = true;

  00031	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00034	c6 40 41 01	 mov	 BYTE PTR [eax+65], 1

; 551  : 		}

  00038	8b c6		 mov	 eax, esi
  0003a	5e		 pop	 esi
  0003b	c9		 leave
  0003c	c2 08 00	 ret	 8

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

$LN15@Tree_val:
  0003f	83 65 fc 00	 and	 DWORD PTR $T509657[ebp], 0
  00043	8d 45 fc	 lea	 eax, DWORD PTR $T509657[ebp]
  00046	50		 push	 eax
  00047	8d 4d f0	 lea	 ecx, DWORD PTR $T509679[ebp]
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00050	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00055	8d 45 f0	 lea	 eax, DWORD PTR $T509679[ebp]
  00058	50		 push	 eax
  00059	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T509679[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00060	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN37@Tree_val:
$LN36@Tree_val:
  00065	cc		 int	 3
??0?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 270  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 271  : 		_Myiter _Tmp = *this;

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 06		 mov	 DWORD PTR [esi], eax

; 272  : 		++*this;

  0000b	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::operator++

; 273  : 		return (_Tmp);

  00010	8b c6		 mov	 eax, esi
  00012	5e		 pop	 esi

; 274  : 		}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 270  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 271  : 		_Myiter _Tmp = *this;

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 06		 mov	 DWORD PTR [esi], eax

; 272  : 		++*this;

  0000b	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::operator++

; 273  : 		return (_Tmp);

  00010	8b c6		 mov	 eax, esi
  00012	5e		 pop	 esi

; 274  : 		}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??$?0AAKAAUItemCode@ioGlobalSoldierInfo@@@?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@QAE@AAKAAUItemCode@ioGlobalSoldierInfo@@@Z ; std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode>::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode><unsigned long &,ioGlobalSoldierInfo::ItemCode &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAKAAUItemCode@ioGlobalSoldierInfo@@@?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@QAE@AAKAAUItemCode@ioGlobalSoldierInfo@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAKAAUItemCode@ioGlobalSoldierInfo@@@?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@QAE@AAKAAUItemCode@ioGlobalSoldierInfo@@@Z PROC ; std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode>::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode><unsigned long &,ioGlobalSoldierInfo::ItemCode &>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 0c	 mov	 esi, DWORD PTR __Val2$[ebp]
  00007	8b c1		 mov	 eax, ecx
  00009	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  0000c	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000e	57		 push	 edi
  0000f	6a 0c		 push	 12			; 0000000cH
  00011	89 08		 mov	 DWORD PTR [eax], ecx
  00013	59		 pop	 ecx
  00014	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  00017	f3 a5		 rep movsd
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi

; 248  : 		}

  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
??$?0AAKAAUItemCode@ioGlobalSoldierInfo@@@?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@QAE@AAKAAUItemCode@ioGlobalSoldierInfo@@@Z ENDP ; std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode>::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode><unsigned long &,ioGlobalSoldierInfo::ItemCode &>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@H@std@@HH@std@@YAXAAV?$allocator@H@0@PAH$$QAH@Z ; std::_Cons_val<std::allocator<int>,int,int>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@H@std@@HH@std@@YAXAAV?$allocator@H@0@PAH$$QAH@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@H@std@@HH@std@@YAXAAV?$allocator@H@0@PAH$$QAH@Z PROC ; std::_Cons_val<std::allocator<int>,int,int>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN7@Cons_val
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@Cons_val:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@H@std@@HH@std@@YAXAAV?$allocator@H@0@PAH$$QAH@Z ENDP ; std::_Cons_val<std::allocator<int>,int,int>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@0@PAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@0@PAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@0@PAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@0@PAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
_TEXT	ENDS
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Insert
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1631 : 		{	// add node with value next to _Wherenode, to left if _Addleft

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 1632 : 		if (max_size() - 1 <= this->_Mysize)

  00008	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0000b	3d c3 4e ec 04	 cmp	 eax, 82595523		; 04ec4ec3H
  00010	72 15		 jb	 SHORT $LN17@Insert

; 1633 : 			{	// tree would get too big, fail
; 1634 : 			_Dest_val(this->_Alval,
; 1635 : 				_STD addressof(this->_Myval(_Newnode)));
; 1636 : 
; 1637 : 			this->_Alnod.deallocate(_Newnode, 1);

  00012	ff 75 14	 push	 DWORD PTR __Newnode$[ebp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 1638 : 
; 1639 : 			_Xlength_error("map/set<T> too long");

  0001a	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN188@Insert:
$LN17@Insert:

; 1640 : 			}
; 1641 : 		++this->_Mysize;
; 1642 : 		_Newnode->_Parent = _Wherenode;

  00027	8b 5d 14	 mov	 ebx, DWORD PTR __Newnode$[ebp]
  0002a	40		 inc	 eax
  0002b	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0002e	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00031	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 1643 : 
; 1644 : 		if (_Wherenode == this->_Myhead)

  00034	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00037	3b c1		 cmp	 eax, ecx
  00039	75 10		 jne	 SHORT $LN16@Insert

; 1645 : 			{	// first node in tree, just set head values
; 1646 : 			_Root() = _Newnode;

  0003b	89 59 04	 mov	 DWORD PTR [ecx+4], ebx

; 1647 : 			_Lmost() = _Newnode;

  0003e	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00041	89 18		 mov	 DWORD PTR [eax], ebx

; 1648 : 			_Rmost() = _Newnode;

  00043	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00046	89 58 08	 mov	 DWORD PTR [eax+8], ebx
  00049	eb 21		 jmp	 SHORT $LN11@Insert
$LN16@Insert:

; 1649 : 			}
; 1650 : 		else if (_Addleft)

  0004b	80 7d 0c 00	 cmp	 BYTE PTR __Addleft$[ebp], 0
  0004f	74 0d		 je	 SHORT $LN14@Insert

; 1651 : 			{	// add to left of _Wherenode
; 1652 : 			this->_Left(_Wherenode) = _Newnode;

  00051	89 18		 mov	 DWORD PTR [eax], ebx

; 1653 : 			if (_Wherenode == _Lmost())

  00053	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00056	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00058	75 12		 jne	 SHORT $LN11@Insert

; 1654 : 				_Lmost() = _Newnode;

  0005a	89 19		 mov	 DWORD PTR [ecx], ebx

; 1655 : 			}
; 1656 : 		else

  0005c	eb 0e		 jmp	 SHORT $LN11@Insert
$LN14@Insert:

; 1657 : 			{	// add to right of _Wherenode
; 1658 : 			this->_Right(_Wherenode) = _Newnode;

  0005e	89 58 08	 mov	 DWORD PTR [eax+8], ebx

; 1659 : 			if (_Wherenode == _Rmost())

  00061	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00064	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00067	75 03		 jne	 SHORT $LN11@Insert

; 1660 : 				_Rmost() = _Newnode;

  00069	89 59 08	 mov	 DWORD PTR [ecx+8], ebx
$LN11@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  0006c	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0006f	8b f3		 mov	 esi, ebx
  00071	e9 93 00 00 00	 jmp	 $LN186@Insert
$LL10@Insert:

; 1665 : 			if (this->_Parent(_Pnode)
; 1666 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

  00076	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00079	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007c	3b 01		 cmp	 eax, DWORD PTR [ecx]
  0007e	75 38		 jne	 SHORT $LN8@Insert

; 1667 : 				{	// fixup red-red in left subtree
; 1668 : 				_Wherenode =
; 1669 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

  00080	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1670 : 				if (this->_Color(_Wherenode) == this->_Red)

  00083	80 79 40 00	 cmp	 BYTE PTR [ecx+64], 0

; 1671 : 					{	// parent has two red children, blacken both
; 1672 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;
; 1673 : 					this->_Color(_Wherenode) = this->_Black;
; 1674 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1675 : 						= this->_Red;
; 1676 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));
; 1677 : 					}
; 1678 : 				else

  00087	74 37		 je	 SHORT $LN187@Insert

; 1679 : 					{	// parent has red and black children
; 1680 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

  00089	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008c	75 0a		 jne	 SHORT $LN5@Insert

; 1681 : 						{	// rotate right child to left
; 1682 : 						_Pnode = this->_Parent(_Pnode);

  0008e	8b f0		 mov	 esi, eax

; 1683 : 						_Lrotate(_Pnode);

  00090	56		 push	 esi
  00091	8b cf		 mov	 ecx, edi
  00093	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Lrotate
$LN5@Insert:

; 1684 : 						}
; 1685 : 					this->_Color(this->_Parent(_Pnode)) =
; 1686 : 						this->_Black;	// propagate red up

  00098	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0009b	c6 40 40 01	 mov	 BYTE PTR [eax+64], 1

; 1687 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1688 : 						this->_Red;

  0009f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a2	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000a5	c6 40 40 00	 mov	 BYTE PTR [eax+64], 0

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

  000a9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000ac	ff 70 04	 push	 DWORD PTR [eax+4]
  000af	8b cf		 mov	 ecx, edi
  000b1	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Rrotate

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  000b6	eb 4e		 jmp	 SHORT $LN2@Insert
$LN8@Insert:

; 1693 : 				{	// fixup red-red in right subtree
; 1694 : 				_Wherenode =
; 1695 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

  000b8	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1696 : 				if (this->_Color(_Wherenode) == this->_Red)

  000ba	80 79 40 00	 cmp	 BYTE PTR [ecx+64], 0
  000be	75 1a		 jne	 SHORT $LN3@Insert
$LN187@Insert:

; 1697 : 					{	// parent has two red children, blacken both
; 1698 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  000c0	c6 40 40 01	 mov	 BYTE PTR [eax+64], 1

; 1699 : 					this->_Color(_Wherenode) = this->_Black;

  000c4	c6 41 40 01	 mov	 BYTE PTR [ecx+64], 1

; 1700 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1701 : 						this->_Red;

  000c8	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cb	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000ce	c6 40 40 00	 mov	 BYTE PTR [eax+64], 0

; 1702 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  000d2	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000d5	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 1703 : 					}
; 1704 : 				else

  000d8	eb 2c		 jmp	 SHORT $LN2@Insert
$LN3@Insert:

; 1705 : 					{	// parent has red and black children
; 1706 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

  000da	3b 30		 cmp	 esi, DWORD PTR [eax]
  000dc	75 0a		 jne	 SHORT $LN1@Insert

; 1707 : 						{	// rotate left child to right
; 1708 : 						_Pnode = this->_Parent(_Pnode);

  000de	8b f0		 mov	 esi, eax

; 1709 : 						_Rrotate(_Pnode);

  000e0	56		 push	 esi
  000e1	8b cf		 mov	 ecx, edi
  000e3	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Rrotate
$LN1@Insert:

; 1710 : 						}
; 1711 : 					this->_Color(this->_Parent(_Pnode)) =
; 1712 : 						this->_Black;	// propagate red up

  000e8	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000eb	c6 40 40 01	 mov	 BYTE PTR [eax+64], 1

; 1713 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1714 : 						this->_Red;

  000ef	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000f2	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000f5	c6 40 40 00	 mov	 BYTE PTR [eax+64], 0

; 1715 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

  000f9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000fc	ff 70 04	 push	 DWORD PTR [eax+4]
  000ff	8b cf		 mov	 ecx, edi
  00101	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Lrotate
$LN2@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  00106	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
$LN186@Insert:
  00109	80 78 40 00	 cmp	 BYTE PTR [eax+64], 0
  0010d	0f 84 63 ff ff
	ff		 je	 $LL10@Insert

; 1716 : 					}
; 1717 : 				}
; 1718 : 
; 1719 : 		this->_Color(_Root()) = this->_Black;	// root is always black

  00113	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00116	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00119	5f		 pop	 edi
  0011a	c6 40 40 01	 mov	 BYTE PTR [eax+64], 1

; 1720 : 		return (iterator(_Newnode, this));

  0011e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00121	5e		 pop	 esi
  00122	89 18		 mov	 DWORD PTR [eax], ebx
  00124	5b		 pop	 ebx

; 1721 : 		}

  00125	5d		 pop	 ebp
  00126	c2 10 00	 ret	 16			; 00000010H
$LN185@Insert:
?_Insert@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator--
; Function compile flags: /Ogsp
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 418  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 419  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::operator--

; 420  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 421  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 227  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 228  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator--
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 418  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 419  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::operator--

; 420  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 421  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 227  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 228  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > > &,bool>
; Function compile flags: /Ogsp
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 248  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > > &,bool>
; Function compile flags: /Ogsp
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 248  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??$?0$$CBKUItemCode@ioGlobalSoldierInfo@@@?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@QAE@$$QAU01@@Z ; std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode>::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode><unsigned long const ,ioGlobalSoldierInfo::ItemCode>
; Function compile flags: /Ogsp
;	COMDAT ??$?0$$CBKUItemCode@ioGlobalSoldierInfo@@@?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0$$CBKUItemCode@ioGlobalSoldierInfo@@@?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@QAE@$$QAU01@@Z PROC ; std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode>::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode><unsigned long const ,ioGlobalSoldierInfo::ItemCode>, COMDAT
; _this$ = ecx

; 255  : 		{	// construct from moved compatible pair

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b c1		 mov	 eax, ecx
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000c	6a 0c		 push	 12			; 0000000cH
  0000e	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
  00011	59		 pop	 ecx
  00012	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  00015	89 10		 mov	 DWORD PTR [eax], edx
  00017	f3 a5		 rep movsd
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi

; 256  : 		}

  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??$?0$$CBKUItemCode@ioGlobalSoldierInfo@@@?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@QAE@$$QAU01@@Z ENDP ; std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode>::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode><unsigned long const ,ioGlobalSoldierInfo::ItemCode>
_TEXT	ENDS
PUBLIC	?Init@CHARACTER@@QAEXXZ				; CHARACTER::Init
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\characterinfo.h
;	COMDAT ?Init@CHARACTER@@QAEXXZ
_TEXT	SEGMENT
_value$510234 = -12					; size = 4
tv151 = -8						; size = 4
_value$510230 = -8					; size = 4
_value$510226 = -8					; size = 4
_value$510222 = -8					; size = 4
_value$510218 = -8					; size = 4
_value$510214 = -8					; size = 4
_value$510210 = -8					; size = 4
_value$510206 = -8					; size = 4
_value$510202 = -8					; size = 4
_value$510198 = -8					; size = 4
_value$510194 = -8					; size = 4
tv307 = -4						; size = 4
?Init@CHARACTER@@QAEXXZ PROC				; CHARACTER::Init, COMDAT
; _this$ = ecx

; 350  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 351  : 		m_class_type	    = 0;

  00009	8d 45 f8	 lea	 eax, DWORD PTR _value$510194[ebp]
  0000c	33 ff		 xor	 edi, edi
  0000e	50		 push	 eax
  0000f	8b f1		 mov	 esi, ecx
  00011	89 7d f8	 mov	 DWORD PTR _value$510194[ebp], edi
  00014	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 352  : 		m_kindred			= 1;

  00019	33 db		 xor	 ebx, ebx
  0001b	8d 45 f8	 lea	 eax, DWORD PTR _value$510198[ebp]
  0001e	43		 inc	 ebx
  0001f	50		 push	 eax
  00020	8d 4e 30	 lea	 ecx, DWORD PTR [esi+48]
  00023	89 5d f8	 mov	 DWORD PTR _value$510198[ebp], ebx
  00026	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 353  : 		m_sex				= 1;

  0002b	8d 45 f8	 lea	 eax, DWORD PTR _value$510202[ebp]
  0002e	50		 push	 eax
  0002f	8d 4e 60	 lea	 ecx, DWORD PTR [esi+96]
  00032	89 5d f8	 mov	 DWORD PTR _value$510202[ebp], ebx
  00035	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 354  : 		m_beard				= 1;

  0003a	8d 45 f8	 lea	 eax, DWORD PTR _value$510206[ebp]
  0003d	50		 push	 eax
  0003e	8d 8e 90 00 00
	00		 lea	 ecx, DWORD PTR [esi+144]
  00044	89 5d f8	 mov	 DWORD PTR _value$510206[ebp], ebx
  00047	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 355  : 		m_face				= 1;

  0004c	8d 45 f8	 lea	 eax, DWORD PTR _value$510210[ebp]
  0004f	50		 push	 eax
  00050	8d 8e c0 00 00
	00		 lea	 ecx, DWORD PTR [esi+192]
  00056	89 5d f8	 mov	 DWORD PTR _value$510210[ebp], ebx
  00059	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 356  : 		m_hair				= 1;

  0005e	8d 45 f8	 lea	 eax, DWORD PTR _value$510214[ebp]
  00061	50		 push	 eax
  00062	8d 8e f0 00 00
	00		 lea	 ecx, DWORD PTR [esi+240]
  00068	89 5d f8	 mov	 DWORD PTR _value$510214[ebp], ebx
  0006b	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 357  : 		m_skin_color		= 1;

  00070	8d 45 f8	 lea	 eax, DWORD PTR _value$510218[ebp]
  00073	50		 push	 eax
  00074	8d 8e 20 01 00
	00		 lea	 ecx, DWORD PTR [esi+288]
  0007a	89 5d f8	 mov	 DWORD PTR _value$510218[ebp], ebx
  0007d	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 358  : 		m_hair_color		= 1;

  00082	8d 45 f8	 lea	 eax, DWORD PTR _value$510222[ebp]
  00085	50		 push	 eax
  00086	8d 8e 50 01 00
	00		 lea	 ecx, DWORD PTR [esi+336]
  0008c	89 5d f8	 mov	 DWORD PTR _value$510222[ebp], ebx
  0008f	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 359  : 		m_accessories		= 1;

  00094	8d 45 f8	 lea	 eax, DWORD PTR _value$510226[ebp]
  00097	50		 push	 eax
  00098	8d 8e 80 01 00
	00		 lea	 ecx, DWORD PTR [esi+384]
  0009e	89 5d f8	 mov	 DWORD PTR _value$510226[ebp], ebx
  000a1	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 360  : 		m_underwear			= 1;

  000a6	8d 45 f8	 lea	 eax, DWORD PTR _value$510230[ebp]
  000a9	50		 push	 eax
  000aa	8d 8e b0 01 00
	00		 lea	 ecx, DWORD PTR [esi+432]
  000b0	89 5d f8	 mov	 DWORD PTR _value$510230[ebp], ebx
  000b3	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool
  000b8	8d 86 e0 01 00
	00		 lea	 eax, DWORD PTR [esi+480]
  000be	89 45 fc	 mov	 DWORD PTR tv307[ebp], eax
  000c1	c7 45 f8 04 00
	00 00		 mov	 DWORD PTR tv151[ebp], 4
$LL44@Init@2:

; 361  : 
; 362  : 		for(int i = 0; i < MAX_INVENTORY ; i++ )
; 363  : 			m_extra_item[i]	= 0;

  000c8	8b 4d fc	 mov	 ecx, DWORD PTR tv307[ebp]
  000cb	8d 45 f4	 lea	 eax, DWORD PTR _value$510234[ebp]
  000ce	50		 push	 eax
  000cf	89 7d f4	 mov	 DWORD PTR _value$510234[ebp], edi
  000d2	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool
  000d7	83 45 fc 30	 add	 DWORD PTR tv307[ebp], 48 ; 00000030H
  000db	ff 4d f8	 dec	 DWORD PTR tv151[ebp]
  000de	75 e8		 jne	 SHORT $LL44@Init@2

; 364  : 
; 365  : 		m_iSlotIndex		= -1;

  000e0	83 8e a0 02 00
	00 ff		 or	 DWORD PTR [esi+672], -1

; 366  : 		m_iLimitSecond		= 0;
; 367  : 
; 368  : 		m_sLeaderType		= CLT_GENERAL;

  000e7	33 c0		 xor	 eax, eax
  000e9	6a 04		 push	 4
  000eb	66 89 86 a8 02
	00 00		 mov	 WORD PTR [esi+680], ax

; 369  : 		m_sRentalType		= CRT_GENERAL;

  000f2	66 89 86 aa 02
	00 00		 mov	 WORD PTR [esi+682], ax

; 370  : 		m_dwRentalMinute	= 0;
; 371  : 		m_ePeriodType		= CPT_TIME;
; 372  : 
; 373  : 		m_bActive			= true;
; 374  : 		m_chExerciseStyle	= 0x00;

  000f9	66 89 86 b5 02
	00 00		 mov	 WORD PTR [esi+693], ax

; 375  : 
; 376  : 		m_iAwakeType		= AWAKE_NONE;
; 377  : 		m_iAwakeLimitTime	= 0;
; 378  : 
; 379  : 		m_eCharPowerUpType = PUGT_NONE;

  00100	88 86 bc 02 00
	00		 mov	 BYTE PTR [esi+700], al
  00106	89 be a4 02 00
	00		 mov	 DWORD PTR [esi+676], edi
  0010c	89 be ac 02 00
	00		 mov	 DWORD PTR [esi+684], edi
  00112	89 be b0 02 00
	00		 mov	 DWORD PTR [esi+688], edi
  00118	88 9e b4 02 00
	00		 mov	 BYTE PTR [esi+692], bl
  0011e	89 be b8 02 00
	00		 mov	 DWORD PTR [esi+696], edi
  00124	8d 86 c8 02 00
	00		 lea	 eax, DWORD PTR [esi+712]
  0012a	59		 pop	 ecx
$LL6@Init@2:

; 380  : 
; 381  : 		for(int i = 0; i < MAX_INVENTORY ; i++ )
; 382  : 			m_EquipCostume[i].Init();

  0012b	89 78 f8	 mov	 DWORD PTR [eax-8], edi
  0012e	89 78 fc	 mov	 DWORD PTR [eax-4], edi
  00131	89 38		 mov	 DWORD PTR [eax], edi
  00133	89 78 04	 mov	 DWORD PTR [eax+4], edi
  00136	83 c0 10	 add	 eax, 16			; 00000010H
  00139	49		 dec	 ecx
  0013a	75 ef		 jne	 SHORT $LL6@Init@2

; 383  : 		for(int i = 0; i < MAX_ACC_INVENTORY ; i++ )

  0013c	6a 03		 push	 3
  0013e	81 c6 08 03 00
	00		 add	 esi, 776		; 00000308H
  00144	58		 pop	 eax
$LL3@Init@2:

; 384  : 			m_EquipAccessory[i].Init();

  00145	89 7e f8	 mov	 DWORD PTR [esi-8], edi
  00148	89 7e fc	 mov	 DWORD PTR [esi-4], edi
  0014b	89 3e		 mov	 DWORD PTR [esi], edi
  0014d	83 c6 0c	 add	 esi, 12			; 0000000cH
  00150	48		 dec	 eax
  00151	75 f2		 jne	 SHORT $LL3@Init@2
  00153	5f		 pop	 edi
  00154	5e		 pop	 esi
  00155	5b		 pop	 ebx

; 385  : 	}

  00156	c9		 leave
  00157	c3		 ret	 0
?Init@CHARACTER@@QAEXXZ ENDP				; CHARACTER::Init
_TEXT	ENDS
PUBLIC	??4CHARACTER@@QAEAAU0@ABU0@@Z			; CHARACTER::operator=
; Function compile flags: /Ogsp
;	COMDAT ??4CHARACTER@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
_value$510360 = -12					; size = 4
_value$510355 = -8					; size = 4
tv153 = -4						; size = 4
tv447 = 8						; size = 4
_value$510350 = 8					; size = 4
_value$510345 = 8					; size = 4
_value$510340 = 8					; size = 4
_value$510335 = 8					; size = 4
_value$510330 = 8					; size = 4
_value$510325 = 8					; size = 4
_value$510320 = 8					; size = 4
_value$510315 = 8					; size = 4
_value$510310 = 8					; size = 4
_value$510305 = 8					; size = 4
_value$510300 = 8					; size = 4
_value$510295 = 8					; size = 4
_value$510290 = 8					; size = 4
_value$510285 = 8					; size = 4
_value$510280 = 8					; size = 4
_value$510275 = 8					; size = 4
_value$510270 = 8					; size = 4
_value$510265 = 8					; size = 4
_value$510260 = 8					; size = 4
_value$510255 = 8					; size = 4
_rhs$ = 8						; size = 4
??4CHARACTER@@QAEAAU0@ABU0@@Z PROC			; CHARACTER::operator=, COMDAT
; _this$ = ecx

; 388  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 389  : 		m_class_type		= rhs.m_class_type;

  00008	8b 75 08	 mov	 esi, DWORD PTR _rhs$[ebp]
  0000b	57		 push	 edi
  0000c	8d 45 08	 lea	 eax, DWORD PTR _value$510255[ebp]
  0000f	8b d9		 mov	 ebx, ecx
  00011	50		 push	 eax
  00012	8b ce		 mov	 ecx, esi
  00014	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ; CEncrypt<int>::DecryptValueToPool
  00019	8b 45 08	 mov	 eax, DWORD PTR _value$510255[ebp]
  0001c	89 45 08	 mov	 DWORD PTR _value$510260[ebp], eax
  0001f	8d 45 08	 lea	 eax, DWORD PTR _value$510260[ebp]
  00022	50		 push	 eax
  00023	8b cb		 mov	 ecx, ebx
  00025	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 390  : 		m_kindred			= rhs.m_kindred;

  0002a	8d 45 08	 lea	 eax, DWORD PTR _value$510265[ebp]
  0002d	50		 push	 eax
  0002e	8d 4e 30	 lea	 ecx, DWORD PTR [esi+48]
  00031	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ; CEncrypt<int>::DecryptValueToPool
  00036	8b 45 08	 mov	 eax, DWORD PTR _value$510265[ebp]
  00039	89 45 08	 mov	 DWORD PTR _value$510270[ebp], eax
  0003c	8d 45 08	 lea	 eax, DWORD PTR _value$510270[ebp]
  0003f	50		 push	 eax
  00040	8d 4b 30	 lea	 ecx, DWORD PTR [ebx+48]
  00043	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 391  : 		m_sex				= rhs.m_sex;

  00048	8d 45 08	 lea	 eax, DWORD PTR _value$510275[ebp]
  0004b	50		 push	 eax
  0004c	8d 4e 60	 lea	 ecx, DWORD PTR [esi+96]
  0004f	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ; CEncrypt<int>::DecryptValueToPool
  00054	8b 45 08	 mov	 eax, DWORD PTR _value$510275[ebp]
  00057	89 45 08	 mov	 DWORD PTR _value$510280[ebp], eax
  0005a	8d 45 08	 lea	 eax, DWORD PTR _value$510280[ebp]
  0005d	50		 push	 eax
  0005e	8d 4b 60	 lea	 ecx, DWORD PTR [ebx+96]
  00061	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 392  : 		m_beard				= rhs.m_beard;

  00066	8d 45 08	 lea	 eax, DWORD PTR _value$510285[ebp]
  00069	50		 push	 eax
  0006a	8d 8e 90 00 00
	00		 lea	 ecx, DWORD PTR [esi+144]
  00070	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ; CEncrypt<int>::DecryptValueToPool
  00075	8b 45 08	 mov	 eax, DWORD PTR _value$510285[ebp]
  00078	89 45 08	 mov	 DWORD PTR _value$510290[ebp], eax
  0007b	8d 45 08	 lea	 eax, DWORD PTR _value$510290[ebp]
  0007e	50		 push	 eax
  0007f	8d 8b 90 00 00
	00		 lea	 ecx, DWORD PTR [ebx+144]
  00085	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 393  : 		m_face				= rhs.m_face;

  0008a	8d 45 08	 lea	 eax, DWORD PTR _value$510295[ebp]
  0008d	50		 push	 eax
  0008e	8d 8e c0 00 00
	00		 lea	 ecx, DWORD PTR [esi+192]
  00094	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ; CEncrypt<int>::DecryptValueToPool
  00099	8b 45 08	 mov	 eax, DWORD PTR _value$510295[ebp]
  0009c	89 45 08	 mov	 DWORD PTR _value$510300[ebp], eax
  0009f	8d 45 08	 lea	 eax, DWORD PTR _value$510300[ebp]
  000a2	50		 push	 eax
  000a3	8d 8b c0 00 00
	00		 lea	 ecx, DWORD PTR [ebx+192]
  000a9	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 394  : 		m_hair				= rhs.m_hair;

  000ae	8d 45 08	 lea	 eax, DWORD PTR _value$510305[ebp]
  000b1	50		 push	 eax
  000b2	8d 8e f0 00 00
	00		 lea	 ecx, DWORD PTR [esi+240]
  000b8	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ; CEncrypt<int>::DecryptValueToPool
  000bd	8b 45 08	 mov	 eax, DWORD PTR _value$510305[ebp]
  000c0	89 45 08	 mov	 DWORD PTR _value$510310[ebp], eax
  000c3	8d 45 08	 lea	 eax, DWORD PTR _value$510310[ebp]
  000c6	50		 push	 eax
  000c7	8d 8b f0 00 00
	00		 lea	 ecx, DWORD PTR [ebx+240]
  000cd	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 395  : 		m_skin_color		= rhs.m_skin_color;

  000d2	8d 45 08	 lea	 eax, DWORD PTR _value$510315[ebp]
  000d5	50		 push	 eax
  000d6	8d 8e 20 01 00
	00		 lea	 ecx, DWORD PTR [esi+288]
  000dc	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ; CEncrypt<int>::DecryptValueToPool
  000e1	8b 45 08	 mov	 eax, DWORD PTR _value$510315[ebp]
  000e4	89 45 08	 mov	 DWORD PTR _value$510320[ebp], eax
  000e7	8d 45 08	 lea	 eax, DWORD PTR _value$510320[ebp]
  000ea	50		 push	 eax
  000eb	8d 8b 20 01 00
	00		 lea	 ecx, DWORD PTR [ebx+288]
  000f1	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 396  : 		m_hair_color		= rhs.m_hair_color;

  000f6	8d 45 08	 lea	 eax, DWORD PTR _value$510325[ebp]
  000f9	50		 push	 eax
  000fa	8d 8e 50 01 00
	00		 lea	 ecx, DWORD PTR [esi+336]
  00100	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ; CEncrypt<int>::DecryptValueToPool
  00105	8b 45 08	 mov	 eax, DWORD PTR _value$510325[ebp]
  00108	89 45 08	 mov	 DWORD PTR _value$510330[ebp], eax
  0010b	8d 45 08	 lea	 eax, DWORD PTR _value$510330[ebp]
  0010e	50		 push	 eax
  0010f	8d 8b 50 01 00
	00		 lea	 ecx, DWORD PTR [ebx+336]
  00115	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 397  : 		m_accessories		= rhs.m_accessories;

  0011a	8d 45 08	 lea	 eax, DWORD PTR _value$510335[ebp]
  0011d	50		 push	 eax
  0011e	8d 8e 80 01 00
	00		 lea	 ecx, DWORD PTR [esi+384]
  00124	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ; CEncrypt<int>::DecryptValueToPool
  00129	8b 45 08	 mov	 eax, DWORD PTR _value$510335[ebp]
  0012c	89 45 08	 mov	 DWORD PTR _value$510340[ebp], eax
  0012f	8d 45 08	 lea	 eax, DWORD PTR _value$510340[ebp]
  00132	50		 push	 eax
  00133	8d 8b 80 01 00
	00		 lea	 ecx, DWORD PTR [ebx+384]
  00139	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 398  : 		m_underwear			= rhs.m_underwear;

  0013e	8d 45 08	 lea	 eax, DWORD PTR _value$510345[ebp]
  00141	50		 push	 eax
  00142	8d 8e b0 01 00
	00		 lea	 ecx, DWORD PTR [esi+432]
  00148	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ; CEncrypt<int>::DecryptValueToPool
  0014d	8b 45 08	 mov	 eax, DWORD PTR _value$510345[ebp]
  00150	89 45 08	 mov	 DWORD PTR _value$510350[ebp], eax
  00153	8d 45 08	 lea	 eax, DWORD PTR _value$510350[ebp]
  00156	50		 push	 eax
  00157	8d 8b b0 01 00
	00		 lea	 ecx, DWORD PTR [ebx+432]
  0015d	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 399  : 
; 400  : 		for( int i = 0; i < MAX_INVENTORY ; i++ )

  00162	89 75 08	 mov	 DWORD PTR tv447[ebp], esi
  00165	29 5d 08	 sub	 DWORD PTR tv447[ebp], ebx
  00168	8d bb e0 01 00
	00		 lea	 edi, DWORD PTR [ebx+480]
  0016e	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR tv153[ebp], 4
$LL63@operator@5:

; 401  : 			m_extra_item[i]	= rhs.m_extra_item[i];

  00175	8b 4d 08	 mov	 ecx, DWORD PTR tv447[ebp]
  00178	8d 45 f8	 lea	 eax, DWORD PTR _value$510355[ebp]
  0017b	50		 push	 eax
  0017c	8d 0c 39	 lea	 ecx, DWORD PTR [ecx+edi]
  0017f	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ; CEncrypt<int>::DecryptValueToPool
  00184	8b 45 f8	 mov	 eax, DWORD PTR _value$510355[ebp]
  00187	89 45 f4	 mov	 DWORD PTR _value$510360[ebp], eax
  0018a	8d 45 f4	 lea	 eax, DWORD PTR _value$510360[ebp]
  0018d	50		 push	 eax
  0018e	8b cf		 mov	 ecx, edi
  00190	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool
  00195	83 c7 30	 add	 edi, 48			; 00000030H
  00198	ff 4d fc	 dec	 DWORD PTR tv153[ebp]
  0019b	75 d8		 jne	 SHORT $LL63@operator@5

; 402  : 
; 403  : 		m_iSlotIndex		= rhs.m_iSlotIndex;

  0019d	8b 86 a0 02 00
	00		 mov	 eax, DWORD PTR [esi+672]
  001a3	89 83 a0 02 00
	00		 mov	 DWORD PTR [ebx+672], eax

; 404  : 		m_iLimitSecond		= rhs.m_iLimitSecond;

  001a9	8b 86 a4 02 00
	00		 mov	 eax, DWORD PTR [esi+676]
  001af	89 83 a4 02 00
	00		 mov	 DWORD PTR [ebx+676], eax

; 405  : 
; 406  : 		m_sLeaderType		= rhs.m_sLeaderType;

  001b5	66 8b 86 a8 02
	00 00		 mov	 ax, WORD PTR [esi+680]
  001bc	66 89 83 a8 02
	00 00		 mov	 WORD PTR [ebx+680], ax

; 407  : 		m_sRentalType		= rhs.m_sRentalType;

  001c3	66 8b 86 aa 02
	00 00		 mov	 ax, WORD PTR [esi+682]
  001ca	66 89 83 aa 02
	00 00		 mov	 WORD PTR [ebx+682], ax

; 408  : 		m_dwRentalMinute	= rhs.m_dwRentalMinute;

  001d1	8b 86 ac 02 00
	00		 mov	 eax, DWORD PTR [esi+684]
  001d7	89 83 ac 02 00
	00		 mov	 DWORD PTR [ebx+684], eax

; 409  : 		m_ePeriodType		= rhs.m_ePeriodType;

  001dd	8b 86 b0 02 00
	00		 mov	 eax, DWORD PTR [esi+688]
  001e3	89 83 b0 02 00
	00		 mov	 DWORD PTR [ebx+688], eax

; 410  : 
; 411  : 		m_bActive			= rhs.m_bActive;

  001e9	8a 86 b4 02 00
	00		 mov	 al, BYTE PTR [esi+692]
  001ef	88 83 b4 02 00
	00		 mov	 BYTE PTR [ebx+692], al

; 412  : 		m_chExerciseStyle	= rhs.m_chExerciseStyle;

  001f5	8a 86 b5 02 00
	00		 mov	 al, BYTE PTR [esi+693]
  001fb	88 83 b5 02 00
	00		 mov	 BYTE PTR [ebx+693], al

; 413  : 
; 414  : 		m_iAwakeType		= rhs.m_iAwakeType;

  00201	8a 86 b6 02 00
	00		 mov	 al, BYTE PTR [esi+694]
  00207	88 83 b6 02 00
	00		 mov	 BYTE PTR [ebx+694], al

; 415  : 		m_iAwakeLimitTime	= rhs.m_iAwakeLimitTime;

  0020d	8b 86 b8 02 00
	00		 mov	 eax, DWORD PTR [esi+696]
  00213	89 83 b8 02 00
	00		 mov	 DWORD PTR [ebx+696], eax

; 416  : 
; 417  : 		m_eCharPowerUpType = rhs.m_eCharPowerUpType;

  00219	8a 86 bc 02 00
	00		 mov	 al, BYTE PTR [esi+700]
  0021f	6a 04		 push	 4
  00221	88 83 bc 02 00
	00		 mov	 BYTE PTR [ebx+700], al
  00227	8d 83 c0 02 00
	00		 lea	 eax, DWORD PTR [ebx+704]
  0022d	59		 pop	 ecx
$LL62@operator@5:

; 418  : 
; 419  : 		for(int i = 0; i < MAX_INVENTORY ; i++ )
; 420  : 			m_EquipCostume[i] = rhs.m_EquipCostume[i];

  0022e	8b 55 08	 mov	 edx, DWORD PTR tv447[ebp]
  00231	8d 34 10	 lea	 esi, DWORD PTR [eax+edx]
  00234	8b f8		 mov	 edi, eax
  00236	a5		 movsd
  00237	a5		 movsd
  00238	a5		 movsd
  00239	83 c0 10	 add	 eax, 16			; 00000010H
  0023c	49		 dec	 ecx
  0023d	a5		 movsd
  0023e	75 ee		 jne	 SHORT $LL62@operator@5

; 421  : 		for(int i = 0; i < MAX_ACC_INVENTORY ; i++ )

  00240	6a 03		 push	 3
  00242	8d 83 00 03 00
	00		 lea	 eax, DWORD PTR [ebx+768]
  00248	59		 pop	 ecx
$LL3@operator@5:

; 422  : 			m_EquipAccessory[i] = rhs.m_EquipAccessory[i];

  00249	8b 55 08	 mov	 edx, DWORD PTR tv447[ebp]
  0024c	8d 34 10	 lea	 esi, DWORD PTR [eax+edx]
  0024f	8b f8		 mov	 edi, eax
  00251	a5		 movsd
  00252	a5		 movsd
  00253	83 c0 0c	 add	 eax, 12			; 0000000cH
  00256	49		 dec	 ecx
  00257	a5		 movsd
  00258	75 ef		 jne	 SHORT $LL3@operator@5

; 423  : 
; 424  : 		return *this;

  0025a	5f		 pop	 edi
  0025b	5e		 pop	 esi
  0025c	8b c3		 mov	 eax, ebx
  0025e	5b		 pop	 ebx

; 425  : 	}

  0025f	c9		 leave
  00260	c2 04 00	 ret	 4
??4CHARACTER@@QAEAAU0@ABU0@@Z ENDP			; CHARACTER::operator=
_TEXT	ENDS
PUBLIC	??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Destroy
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator!=
_TEXT	ENDS
PUBLIC	??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Umove<int *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z PROC ; std::vector<int,std::allocator<int> >::_Umove<int *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z ; std::_Uninitialized_move<int *,int *,std::allocator<int> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ENDP ; std::vector<int,std::allocator<int> >::_Umove<int *>
_TEXT	ENDS
PUBLIC	??0CHARACTER@@QAE@ABU0@@Z			; CHARACTER::CHARACTER
EXTRN	??__C@YGXPAX0IHP6EX00@ZP6EX0@Z@Z:PROC		; `eh vector copy constructor iterator'
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CHARACTER@@QAE@ABU0@@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$??0CHARACTER@@QAE@ABU0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CHARACTER@@QAE@ABU0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$9
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0CHARACTER@@QAE@ABU0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T510443 = 8						; size = 4
___that$ = 8						; size = 4
??0CHARACTER@@QAE@ABU0@@Z PROC				; CHARACTER::CHARACTER, COMDAT
; _this$ = ecx
  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0CHARACTER@@QAE@ABU0@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00011	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@ABV0@@Z ; CEncrypt<int>::CEncrypt<int>
  0001a	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001e	8d 46 30	 lea	 eax, DWORD PTR [esi+48]
  00021	50		 push	 eax
  00022	8d 4f 30	 lea	 ecx, DWORD PTR [edi+48]
  00025	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@ABV0@@Z ; CEncrypt<int>::CEncrypt<int>
  0002a	8d 46 60	 lea	 eax, DWORD PTR [esi+96]
  0002d	50		 push	 eax
  0002e	8d 4f 60	 lea	 ecx, DWORD PTR [edi+96]
  00031	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00035	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@ABV0@@Z ; CEncrypt<int>::CEncrypt<int>
  0003a	8d 86 90 00 00
	00		 lea	 eax, DWORD PTR [esi+144]
  00040	50		 push	 eax
  00041	8d 8f 90 00 00
	00		 lea	 ecx, DWORD PTR [edi+144]
  00047	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0004b	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@ABV0@@Z ; CEncrypt<int>::CEncrypt<int>
  00050	8d 86 c0 00 00
	00		 lea	 eax, DWORD PTR [esi+192]
  00056	50		 push	 eax
  00057	8d 8f c0 00 00
	00		 lea	 ecx, DWORD PTR [edi+192]
  0005d	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00061	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@ABV0@@Z ; CEncrypt<int>::CEncrypt<int>
  00066	8d 86 f0 00 00
	00		 lea	 eax, DWORD PTR [esi+240]
  0006c	50		 push	 eax
  0006d	8d 8f f0 00 00
	00		 lea	 ecx, DWORD PTR [edi+240]
  00073	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00077	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@ABV0@@Z ; CEncrypt<int>::CEncrypt<int>
  0007c	8d 86 20 01 00
	00		 lea	 eax, DWORD PTR [esi+288]
  00082	50		 push	 eax
  00083	8d 8f 20 01 00
	00		 lea	 ecx, DWORD PTR [edi+288]
  00089	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0008d	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@ABV0@@Z ; CEncrypt<int>::CEncrypt<int>
  00092	8d 86 50 01 00
	00		 lea	 eax, DWORD PTR [esi+336]
  00098	50		 push	 eax
  00099	8d 8f 50 01 00
	00		 lea	 ecx, DWORD PTR [edi+336]
  0009f	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  000a3	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@ABV0@@Z ; CEncrypt<int>::CEncrypt<int>
  000a8	8d 86 80 01 00
	00		 lea	 eax, DWORD PTR [esi+384]
  000ae	50		 push	 eax
  000af	8d 8f 80 01 00
	00		 lea	 ecx, DWORD PTR [edi+384]
  000b5	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  000b9	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@ABV0@@Z ; CEncrypt<int>::CEncrypt<int>
  000be	8d 86 b0 01 00
	00		 lea	 eax, DWORD PTR [esi+432]
  000c4	50		 push	 eax
  000c5	8d 8f b0 01 00
	00		 lea	 ecx, DWORD PTR [edi+432]
  000cb	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  000cf	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@ABV0@@Z ; CEncrypt<int>::CEncrypt<int>
  000d4	68 00 00 00 00	 push	 OFFSET ??1?$CEncrypt@H@@UAE@XZ ; CEncrypt<int>::~CEncrypt<int>
  000d9	68 00 00 00 00	 push	 OFFSET ??0?$CEncrypt@H@@QAE@ABV0@@Z ; CEncrypt<int>::CEncrypt<int>
  000de	6a 04		 push	 4
  000e0	6a 30		 push	 48			; 00000030H
  000e2	8d 86 e0 01 00
	00		 lea	 eax, DWORD PTR [esi+480]
  000e8	50		 push	 eax
  000e9	8d 87 e0 01 00
	00		 lea	 eax, DWORD PTR [edi+480]
  000ef	50		 push	 eax
  000f0	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  000f4	e8 00 00 00 00	 call	 ??__C@YGXPAX0IHP6EX00@ZP6EX0@Z@Z
  000f9	8b 86 a0 02 00
	00		 mov	 eax, DWORD PTR [esi+672]
  000ff	89 87 a0 02 00
	00		 mov	 DWORD PTR [edi+672], eax
  00105	8b 86 a4 02 00
	00		 mov	 eax, DWORD PTR [esi+676]
  0010b	89 87 a4 02 00
	00		 mov	 DWORD PTR [edi+676], eax
  00111	66 8b 86 a8 02
	00 00		 mov	 ax, WORD PTR [esi+680]
  00118	66 89 87 a8 02
	00 00		 mov	 WORD PTR [edi+680], ax
  0011f	66 8b 86 aa 02
	00 00		 mov	 ax, WORD PTR [esi+682]
  00126	66 89 87 aa 02
	00 00		 mov	 WORD PTR [edi+682], ax
  0012d	8b 86 ac 02 00
	00		 mov	 eax, DWORD PTR [esi+684]
  00133	89 87 ac 02 00
	00		 mov	 DWORD PTR [edi+684], eax
  00139	8b 86 b0 02 00
	00		 mov	 eax, DWORD PTR [esi+688]
  0013f	89 87 b0 02 00
	00		 mov	 DWORD PTR [edi+688], eax
  00145	8a 86 b4 02 00
	00		 mov	 al, BYTE PTR [esi+692]
  0014b	88 87 b4 02 00
	00		 mov	 BYTE PTR [edi+692], al
  00151	8a 86 b5 02 00
	00		 mov	 al, BYTE PTR [esi+693]
  00157	88 87 b5 02 00
	00		 mov	 BYTE PTR [edi+693], al
  0015d	8a 86 b6 02 00
	00		 mov	 al, BYTE PTR [esi+694]
  00163	88 87 b6 02 00
	00		 mov	 BYTE PTR [edi+694], al
  00169	8b 86 b8 02 00
	00		 mov	 eax, DWORD PTR [esi+696]
  0016f	89 87 b8 02 00
	00		 mov	 DWORD PTR [edi+696], eax
  00175	8a 86 bc 02 00
	00		 mov	 al, BYTE PTR [esi+700]
  0017b	88 87 bc 02 00
	00		 mov	 BYTE PTR [edi+700], al
  00181	8d 8e c0 02 00
	00		 lea	 ecx, DWORD PTR [esi+704]
  00187	8b c1		 mov	 eax, ecx
  00189	2b c6		 sub	 eax, esi
  0018b	8b d6		 mov	 edx, esi
  0018d	c7 45 08 03 00
	00 00		 mov	 DWORD PTR $T510443[ebp], 3
  00194	8d 44 38 08	 lea	 eax, DWORD PTR [eax+edi+8]
  00198	2b d7		 sub	 edx, edi
$LL14@CHARACTER:
  0019a	8b 19		 mov	 ebx, DWORD PTR [ecx]
  0019c	89 58 f8	 mov	 DWORD PTR [eax-8], ebx
  0019f	8b 59 04	 mov	 ebx, DWORD PTR [ecx+4]
  001a2	89 58 fc	 mov	 DWORD PTR [eax-4], ebx
  001a5	8b 1c 02	 mov	 ebx, DWORD PTR [edx+eax]
  001a8	89 18		 mov	 DWORD PTR [eax], ebx
  001aa	8b 59 0c	 mov	 ebx, DWORD PTR [ecx+12]
  001ad	89 58 04	 mov	 DWORD PTR [eax+4], ebx
  001b0	83 c1 10	 add	 ecx, 16			; 00000010H
  001b3	83 c0 10	 add	 eax, 16			; 00000010H
  001b6	ff 4d 08	 dec	 DWORD PTR $T510443[ebp]
  001b9	79 df		 jns	 SHORT $LL14@CHARACTER
  001bb	8d 8e 00 03 00
	00		 lea	 ecx, DWORD PTR [esi+768]
  001c1	8b c1		 mov	 eax, ecx
  001c3	6a 02		 push	 2
  001c5	2b c6		 sub	 eax, esi
  001c7	5b		 pop	 ebx
  001c8	8d 44 38 08	 lea	 eax, DWORD PTR [eax+edi+8]
$LL20@CHARACTER:
  001cc	8b 31		 mov	 esi, DWORD PTR [ecx]
  001ce	89 70 f8	 mov	 DWORD PTR [eax-8], esi
  001d1	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  001d4	89 70 fc	 mov	 DWORD PTR [eax-4], esi
  001d7	8b 34 10	 mov	 esi, DWORD PTR [eax+edx]
  001da	89 30		 mov	 DWORD PTR [eax], esi
  001dc	83 c1 0c	 add	 ecx, 12			; 0000000cH
  001df	83 c0 0c	 add	 eax, 12			; 0000000cH
  001e2	4b		 dec	 ebx
  001e3	79 e7		 jns	 SHORT $LL20@CHARACTER
  001e5	8b c7		 mov	 eax, edi
  001e7	e8 00 00 00 00	 call	 __EH_epilog3
  001ec	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 30	 add	 ecx, 48			; 00000030H
  0000e	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$2:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 60	 add	 ecx, 96			; 00000060H
  00019	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$3:
  0001e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  00027	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$4:
  0002c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00035	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$5:
  0003a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	81 c1 f0 00 00
	00		 add	 ecx, 240		; 000000f0H
  00043	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$6:
  00048	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	81 c1 20 01 00
	00		 add	 ecx, 288		; 00000120H
  00051	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$7:
  00056	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	81 c1 50 01 00
	00		 add	 ecx, 336		; 00000150H
  0005f	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$8:
  00064	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	81 c1 80 01 00
	00		 add	 ecx, 384		; 00000180H
  0006d	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@ABU0@@Z$9:
  00072	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	81 c1 b0 01 00
	00		 add	 ecx, 432		; 000001b0H
  0007b	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__ehhandler$??0CHARACTER@@QAE@ABU0@@Z:
  00080	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00084	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00087	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0008a	33 c8		 xor	 ecx, eax
  0008c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00091	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CHARACTER@@QAE@ABU0@@Z
  00096	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CHARACTER@@QAE@ABU0@@Z ENDP				; CHARACTER::CHARACTER
PUBLIC	??1?$pair@$$CBKUCHARACTER@@@std@@QAE@XZ		; std::pair<unsigned long const ,CHARACTER>::~pair<unsigned long const ,CHARACTER>
; Function compile flags: /Ogsp
;	COMDAT ??1?$pair@$$CBKUCHARACTER@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@$$CBKUCHARACTER@@@std@@QAE@XZ PROC		; std::pair<unsigned long const ,CHARACTER>::~pair<unsigned long const ,CHARACTER>, COMDAT
; _this$ = ecx
  00000	83 c1 04	 add	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??1CHARACTER@@QAE@XZ
??1?$pair@$$CBKUCHARACTER@@@std@@QAE@XZ ENDP		; std::pair<unsigned long const ,CHARACTER>::~pair<unsigned long const ,CHARACTER>
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::begin
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 807  : 		return (iterator(_Lmost(), this));

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 808  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 817  : 		return (iterator(this->_Myhead, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 818  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::end
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 817  : 		return (iterator(this->_Myhead, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 818  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::end
_TEXT	ENDS
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 405  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 406  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::operator++

; 407  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 408  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z
_TEXT	SEGMENT
$T510579 = -4						; size = 4
$T510574 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >, COMDAT
; _this$ = ecx

; 698  : 		{	// construct empty tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	51		 push	 ecx
  00006	89 65 fc	 mov	 DWORD PTR $T510574[ebp], esp
  00009	89 65 fc	 mov	 DWORD PTR $T510579[ebp], esp
  0000c	ff 75 08	 push	 DWORD PTR __Parg$[ebp]
  0000f	8b f1		 mov	 esi, ecx
  00011	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >

; 699  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	c9		 leave
  0001a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::lower_bound
; Function compile flags: /Ogsp
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1449 : 		{	// find leftmost node not less than _Keyval in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1450 : 		return (iterator(_Lbound(_Keyval), this));

  00003	ff 75 0c	 push	 DWORD PTR __Keyval$[ebp]
  00006	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Lbound
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000e	89 01		 mov	 DWORD PTR [ecx], eax
  00010	8b c1		 mov	 eax, ecx

; 1451 : 		}

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z
_TEXT	SEGMENT
$T510614 = -4						; size = 4
$T510609 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >, COMDAT
; _this$ = ecx

; 698  : 		{	// construct empty tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	51		 push	 ecx
  00006	89 65 fc	 mov	 DWORD PTR $T510609[ebp], esp
  00009	89 65 fc	 mov	 DWORD PTR $T510614[ebp], esp
  0000c	ff 75 08	 push	 DWORD PTR __Parg$[ebp]
  0000f	8b f1		 mov	 esi, ecx
  00011	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >

; 699  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	c9		 leave
  0001a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::lower_bound
; Function compile flags: /Ogsp
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1449 : 		{	// find leftmost node not less than _Keyval in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1450 : 		return (iterator(_Lbound(_Keyval), this));

  00003	ff 75 0c	 push	 DWORD PTR __Keyval$[ebp]
  00006	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Lbound
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000e	89 01		 mov	 DWORD PTR [ecx], eax
  00010	8b c1		 mov	 eax, ecx

; 1451 : 		}

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Erase
; Function compile flags: /Ogsp
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1610 : 		{	// free entire subtree, recursively

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1611 : 		for (_Nodeptr _Pnode = _Rootnode;

  00006	8b 7d 08	 mov	 edi, DWORD PTR __Rootnode$[ebp]

; 1612 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

  00009	80 7f 41 00	 cmp	 BYTE PTR [edi+65], 0
  0000d	8b d9		 mov	 ebx, ecx
  0000f	8b f7		 mov	 esi, edi
  00011	75 1b		 jne	 SHORT $LN1@Erase
$LL3@Erase:

; 1613 : 			{	// free subtrees, then node
; 1614 : 			_Erase(this->_Right(_Pnode));

  00013	ff 76 08	 push	 DWORD PTR [esi+8]
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Erase

; 1615 : 			_Pnode = this->_Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 1616 : 			_Dest_val(this->_Alval,
; 1617 : 				_STD addressof(this->_Myval(_Rootnode)));
; 1618 : 
; 1619 : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	80 7e 41 00	 cmp	 BYTE PTR [esi+65], 0
  00029	59		 pop	 ecx
  0002a	8b fe		 mov	 edi, esi
  0002c	74 e5		 je	 SHORT $LL3@Erase
$LN1@Erase:
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx

; 1620 : 			}
; 1621 : 		}

  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::erase
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::erase, COMDAT
; _this$ = ecx

; 1195 : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))
; 1198 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1199 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1200 : 		++_Where;	// save successor iterator for return
; 1201 : 		_Orphan_ptr(*this, _Erasednode);
; 1202 : 
; 1203 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1204 : 		if (this->_Isnil(_Where._Mynode()))

  00005	8b 5d 0c	 mov	 ebx, DWORD PTR __Where$[ebp]
  00008	80 7b 41 00	 cmp	 BYTE PTR [ebx+65], 0
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00011	74 0b		 je	 SHORT $LN40@erase

; 1205 : 			_Xout_of_range("invalid map/set<T> iterator");

  00013	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN329@erase:
$LN40@erase:

; 1206 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1207 : 		++_Where;	// save successor iterator for return

  0001e	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00021	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::operator++

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1211 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1212 : 		_Nodeptr _Pnode = _Erasednode;
; 1213 : 
; 1214 : 		if (this->_Isnil(this->_Left(_Pnode)))

  00026	8b 13		 mov	 edx, DWORD PTR [ebx]
  00028	80 7a 41 00	 cmp	 BYTE PTR [edx+65], 0
  0002c	74 05		 je	 SHORT $LN39@erase

; 1215 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

  0002e	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 1216 : 		else if (this->_Isnil(this->_Right(_Pnode)))

  00031	eb 17		 jmp	 SHORT $LN321@erase
$LN39@erase:
  00033	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00036	80 78 41 00	 cmp	 BYTE PTR [eax+65], 0
  0003a	74 04		 je	 SHORT $LN37@erase

; 1217 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

  0003c	8b fa		 mov	 edi, edx

; 1218 : 		else

  0003e	eb 0a		 jmp	 SHORT $LN321@erase
$LN37@erase:

; 1219 : 			{	// two subtrees, must lift successor node to replace erased
; 1220 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

  00040	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 1221 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

  00043	8b 78 08	 mov	 edi, DWORD PTR [eax+8]

; 1222 : 			}
; 1223 : 
; 1224 : 		if (_Pnode == _Erasednode)

  00046	3b c3		 cmp	 eax, ebx
  00048	75 76		 jne	 SHORT $LN35@erase
$LN321@erase:

; 1225 : 			{	// at most one subtree, relink it
; 1226 : 			_Fixnodeparent = this->_Parent(_Erasednode);
; 1227 : 			if (!this->_Isnil(_Fixnode))

  0004a	80 7f 41 00	 cmp	 BYTE PTR [edi+65], 0
  0004e	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  00051	75 03		 jne	 SHORT $LN34@erase

; 1228 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

  00053	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN34@erase:

; 1229 : 
; 1230 : 			if (_Root() == _Erasednode)

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0005c	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0005f	75 05		 jne	 SHORT $LN33@erase

; 1231 : 				_Root() = _Fixnode;	// link down from root

  00061	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 1232 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

  00064	eb 0b		 jmp	 SHORT $LN30@erase
$LN33@erase:
  00066	39 1e		 cmp	 DWORD PTR [esi], ebx
  00068	75 04		 jne	 SHORT $LN31@erase

; 1233 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  0006a	89 3e		 mov	 DWORD PTR [esi], edi

; 1234 : 			else

  0006c	eb 03		 jmp	 SHORT $LN30@erase
$LN31@erase:

; 1235 : 				this->_Right(_Fixnodeparent) =
; 1236 : 					_Fixnode;	// link down to right

  0006e	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$LN30@erase:

; 1237 : 
; 1238 : 			if (_Lmost() == _Erasednode)

  00071	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00074	39 19		 cmp	 DWORD PTR [ecx], ebx
  00076	75 1c		 jne	 SHORT $LN29@erase

; 1239 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1240 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1241 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

  00078	80 7f 41 00	 cmp	 BYTE PTR [edi+65], 0
  0007c	74 04		 je	 SHORT $LN43@erase
  0007e	8b d6		 mov	 edx, esi
  00080	eb 10		 jmp	 SHORT $LN97@erase
$LN43@erase:
  00082	8b 07		 mov	 eax, DWORD PTR [edi]
  00084	8b d7		 mov	 edx, edi
  00086	eb 04		 jmp	 SHORT $LN323@erase
$LL98@erase:
  00088	8b d0		 mov	 edx, eax
  0008a	8b 02		 mov	 eax, DWORD PTR [edx]
$LN323@erase:
  0008c	80 78 41 00	 cmp	 BYTE PTR [eax+65], 0
  00090	74 f6		 je	 SHORT $LL98@erase
$LN97@erase:
  00092	89 11		 mov	 DWORD PTR [ecx], edx
$LN29@erase:

; 1242 : 
; 1243 : 			if (_Rmost() == _Erasednode)

  00094	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00097	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0009a	39 59 08	 cmp	 DWORD PTR [ecx+8], ebx
  0009d	75 7b		 jne	 SHORT $LN185@erase

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  0009f	80 7f 41 00	 cmp	 BYTE PTR [edi+65], 0
  000a3	74 04		 je	 SHORT $LN45@erase
  000a5	8b d6		 mov	 edx, esi
  000a7	eb 12		 jmp	 SHORT $LN117@erase
$LN45@erase:
  000a9	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000ac	8b d7		 mov	 edx, edi
  000ae	eb 05		 jmp	 SHORT $LN324@erase
$LL118@erase:
  000b0	8b d0		 mov	 edx, eax
  000b2	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
$LN324@erase:
  000b5	80 78 41 00	 cmp	 BYTE PTR [eax+65], 0
  000b9	74 f5		 je	 SHORT $LL118@erase
$LN117@erase:
  000bb	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 1247 : 			}
; 1248 : 		else

  000be	eb 5a		 jmp	 SHORT $LN185@erase
$LN35@erase:

; 1249 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1250 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1251 : 				_Pnode;	// link left up

  000c0	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1252 : 			this->_Left(_Pnode) =
; 1253 : 				this->_Left(_Erasednode);	// link successor down

  000c3	8b 13		 mov	 edx, DWORD PTR [ebx]
  000c5	89 10		 mov	 DWORD PTR [eax], edx

; 1254 : 
; 1255 : 			if (_Pnode == this->_Right(_Erasednode))

  000c7	3b 43 08	 cmp	 eax, DWORD PTR [ebx+8]
  000ca	75 04		 jne	 SHORT $LN26@erase

; 1256 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  000cc	8b f0		 mov	 esi, eax

; 1257 : 			else

  000ce	eb 1a		 jmp	 SHORT $LN25@erase
$LN26@erase:

; 1258 : 				{	// successor further down, link in place of erased
; 1259 : 				_Fixnodeparent =
; 1260 : 					this->_Parent(_Pnode);	// parent is successor's
; 1261 : 				if (!this->_Isnil(_Fixnode))

  000d0	80 7f 41 00	 cmp	 BYTE PTR [edi+65], 0
  000d4	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000d7	75 03		 jne	 SHORT $LN24@erase

; 1262 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  000d9	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN24@erase:

; 1263 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  000dc	89 3e		 mov	 DWORD PTR [esi], edi

; 1264 : 				this->_Right(_Pnode) =
; 1265 : 					this->_Right(_Erasednode);	// link next down

  000de	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  000e1	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1266 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1267 : 					_Pnode;	// right up

  000e4	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000e7	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN25@erase:

; 1268 : 				}
; 1269 : 
; 1270 : 			if (_Root() == _Erasednode)

  000ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000f0	39 59 04	 cmp	 DWORD PTR [ecx+4], ebx
  000f3	75 05		 jne	 SHORT $LN23@erase

; 1271 : 				_Root() = _Pnode;	// link down from root

  000f5	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1272 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

  000f8	eb 0e		 jmp	 SHORT $LN20@erase
$LN23@erase:
  000fa	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000fd	39 19		 cmp	 DWORD PTR [ecx], ebx
  000ff	75 04		 jne	 SHORT $LN21@erase

; 1273 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1274 : 					_Pnode;	// link down to left

  00101	89 01		 mov	 DWORD PTR [ecx], eax

; 1275 : 			else

  00103	eb 03		 jmp	 SHORT $LN20@erase
$LN21@erase:

; 1276 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1277 : 					_Pnode;	// link down to right

  00105	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN20@erase:

; 1278 : 
; 1279 : 			this->_Parent(_Pnode) =
; 1280 : 				this->_Parent(_Erasednode);	// link successor up

  00108	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0010b	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1281 : 			_STD swap(this->_Color(_Pnode),
; 1282 : 				this->_Color(_Erasednode));	// recolor it

  0010e	8a 53 40	 mov	 dl, BYTE PTR [ebx+64]
  00111	8a 48 40	 mov	 cl, BYTE PTR [eax+64]
  00114	88 50 40	 mov	 BYTE PTR [eax+64], dl
  00117	88 4b 40	 mov	 BYTE PTR [ebx+64], cl
$LN185@erase:

; 1283 : 			}
; 1284 : 
; 1285 : 		if (this->_Color(_Erasednode) == this->_Black)

  0011a	80 7b 40 01	 cmp	 BYTE PTR [ebx+64], 1
  0011e	0f 85 03 01 00
	00		 jne	 $LN19@erase

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00124	e9 b2 00 00 00	 jmp	 $LN326@erase
$LL18@erase:
  00129	80 7f 40 01	 cmp	 BYTE PTR [edi+64], 1
  0012d	0f 85 f0 00 00
	00		 jne	 $LN16@erase

; 1290 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

  00133	8b 06		 mov	 eax, DWORD PTR [esi]
  00135	3b f8		 cmp	 edi, eax
  00137	75 6c		 jne	 SHORT $LN15@erase

; 1291 : 					{	// fixup left subtree
; 1292 : 					_Pnode = this->_Right(_Fixnodeparent);

  00139	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 1293 : 					if (this->_Color(_Pnode) == this->_Red)

  0013c	80 78 40 00	 cmp	 BYTE PTR [eax+64], 0
  00140	75 11		 jne	 SHORT $LN14@erase

; 1294 : 						{	// rotate red up from right subtree
; 1295 : 						this->_Color(_Pnode) = this->_Black;

  00142	c6 40 40 01	 mov	 BYTE PTR [eax+64], 1

; 1296 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1297 : 						_Lrotate(_Fixnodeparent);

  00146	56		 push	 esi
  00147	c6 46 40 00	 mov	 BYTE PTR [esi+64], 0
  0014b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Lrotate

; 1298 : 						_Pnode = this->_Right(_Fixnodeparent);

  00150	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN14@erase:

; 1299 : 						}
; 1300 : 
; 1301 : 					if (this->_Isnil(_Pnode))

  00153	80 78 41 00	 cmp	 BYTE PTR [eax+65], 0

; 1302 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1303 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

  00157	75 7d		 jne	 SHORT $LN327@erase

; 1304 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

  00159	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015b	80 79 40 01	 cmp	 BYTE PTR [ecx+64], 1
  0015f	75 09		 jne	 SHORT $LN11@erase
  00161	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00164	80 79 40 01	 cmp	 BYTE PTR [ecx+64], 1
  00168	74 68		 je	 SHORT $LN328@erase
$LN11@erase:

; 1305 : 						{	// redden right subtree with black children
; 1306 : 						this->_Color(_Pnode) = this->_Red;
; 1307 : 						_Fixnode = _Fixnodeparent;
; 1308 : 						}
; 1309 : 					else
; 1310 : 						{	// must rearrange right subtree
; 1311 : 						if (this->_Color(this->_Right(_Pnode))
; 1312 : 							== this->_Black)

  0016a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0016d	80 79 40 01	 cmp	 BYTE PTR [ecx+64], 1
  00171	75 16		 jne	 SHORT $LN9@erase

; 1313 : 							{	// rotate red up from left sub-subtree
; 1314 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

  00173	8b 08		 mov	 ecx, DWORD PTR [eax]
  00175	c6 41 40 01	 mov	 BYTE PTR [ecx+64], 1

; 1315 : 							this->_Color(_Pnode) = this->_Red;
; 1316 : 							_Rrotate(_Pnode);

  00179	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017c	50		 push	 eax
  0017d	c6 40 40 00	 mov	 BYTE PTR [eax+64], 0
  00181	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Rrotate

; 1317 : 							_Pnode = this->_Right(_Fixnodeparent);

  00186	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN9@erase:

; 1318 : 							}
; 1319 : 
; 1320 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  00189	8a 4e 40	 mov	 cl, BYTE PTR [esi+64]
  0018c	88 48 40	 mov	 BYTE PTR [eax+64], cl

; 1321 : 						this->_Color(_Fixnodeparent) = this->_Black;
; 1322 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;
; 1323 : 						_Lrotate(_Fixnodeparent);

  0018f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00192	c6 46 40 01	 mov	 BYTE PTR [esi+64], 1
  00196	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00199	56		 push	 esi
  0019a	c6 40 40 01	 mov	 BYTE PTR [eax+64], 1
  0019e	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Lrotate

; 1324 : 						break;	// tree now recolored/rebalanced

  001a3	eb 7e		 jmp	 SHORT $LN16@erase
$LN15@erase:

; 1325 : 						}
; 1326 : 					}
; 1327 : 				else
; 1328 : 					{	// fixup right subtree
; 1329 : 					_Pnode = this->_Left(_Fixnodeparent);
; 1330 : 					if (this->_Color(_Pnode) == this->_Red)

  001a5	80 78 40 00	 cmp	 BYTE PTR [eax+64], 0
  001a9	75 10		 jne	 SHORT $LN7@erase

; 1331 : 						{	// rotate red up from left subtree
; 1332 : 						this->_Color(_Pnode) = this->_Black;

  001ab	c6 40 40 01	 mov	 BYTE PTR [eax+64], 1

; 1333 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1334 : 						_Rrotate(_Fixnodeparent);

  001af	56		 push	 esi
  001b0	c6 46 40 00	 mov	 BYTE PTR [esi+64], 0
  001b4	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Rrotate

; 1335 : 						_Pnode = this->_Left(_Fixnodeparent);

  001b9	8b 06		 mov	 eax, DWORD PTR [esi]
$LN7@erase:

; 1336 : 						}
; 1337 : 					if (this->_Isnil(_Pnode))

  001bb	80 78 41 00	 cmp	 BYTE PTR [eax+65], 0

; 1338 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1339 : 					else if (this->_Color(this->_Right(_Pnode)) ==

  001bf	75 15		 jne	 SHORT $LN327@erase

; 1340 : 						this->_Black
; 1341 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

  001c1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001c4	80 79 40 01	 cmp	 BYTE PTR [ecx+64], 1
  001c8	75 22		 jne	 SHORT $LN4@erase
  001ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  001cc	80 79 40 01	 cmp	 BYTE PTR [ecx+64], 1
  001d0	75 1a		 jne	 SHORT $LN4@erase
$LN328@erase:

; 1342 : 						{	// redden left subtree with black children
; 1343 : 						this->_Color(_Pnode) = this->_Red;

  001d2	c6 40 40 00	 mov	 BYTE PTR [eax+64], 0
$LN327@erase:

; 1344 : 						_Fixnode = _Fixnodeparent;

  001d6	8b fe		 mov	 edi, esi
  001d8	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
$LN326@erase:

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  001db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001de	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001e1	3b 78 04	 cmp	 edi, DWORD PTR [eax+4]
  001e4	0f 85 3f ff ff
	ff		 jne	 $LL18@erase
  001ea	eb 37		 jmp	 SHORT $LN16@erase
$LN4@erase:

; 1345 : 						}
; 1346 : 					else
; 1347 : 						{	// must rearrange left subtree
; 1348 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

  001ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ee	80 79 40 01	 cmp	 BYTE PTR [ecx+64], 1
  001f2	75 16		 jne	 SHORT $LN2@erase

; 1349 : 							{	// rotate red up from right sub-subtree
; 1350 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

  001f4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001f7	c6 41 40 01	 mov	 BYTE PTR [ecx+64], 1

; 1351 : 							this->_Color(_Pnode) = this->_Red;
; 1352 : 							_Lrotate(_Pnode);

  001fb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001fe	50		 push	 eax
  001ff	c6 40 40 00	 mov	 BYTE PTR [eax+64], 0
  00203	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Lrotate

; 1353 : 							_Pnode = this->_Left(_Fixnodeparent);

  00208	8b 06		 mov	 eax, DWORD PTR [esi]
$LN2@erase:

; 1354 : 							}
; 1355 : 
; 1356 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  0020a	8a 4e 40	 mov	 cl, BYTE PTR [esi+64]
  0020d	88 48 40	 mov	 BYTE PTR [eax+64], cl

; 1357 : 						this->_Color(_Fixnodeparent) = this->_Black;
; 1358 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;
; 1359 : 						_Rrotate(_Fixnodeparent);

  00210	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00213	c6 46 40 01	 mov	 BYTE PTR [esi+64], 1
  00217	8b 00		 mov	 eax, DWORD PTR [eax]
  00219	56		 push	 esi
  0021a	c6 40 40 01	 mov	 BYTE PTR [eax+64], 1
  0021e	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Rrotate
$LN16@erase:

; 1360 : 						break;	// tree now recolored/rebalanced
; 1361 : 						}
; 1362 : 					}
; 1363 : 
; 1364 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

  00223	c6 47 40 01	 mov	 BYTE PTR [edi+64], 1
$LN19@erase:

; 1365 : 			}
; 1366 : 
; 1367 : 		_Dest_val(this->_Alval,
; 1368 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node
; 1369 : 
; 1370 : 		this->_Alnod.deallocate(_Erasednode, 1);

  00227	53		 push	 ebx
  00228	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0022d	59		 pop	 ecx

; 1371 : 
; 1372 : 		if (0 < this->_Mysize)

  0022e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00231	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00234	5f		 pop	 edi
  00235	5e		 pop	 esi
  00236	5b		 pop	 ebx
  00237	85 c0		 test	 eax, eax
  00239	74 04		 je	 SHORT $LN1@erase

; 1373 : 			--this->_Mysize;

  0023b	48		 dec	 eax
  0023c	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@erase:

; 1374 : 
; 1375 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

  0023f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00242	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00245	89 08		 mov	 DWORD PTR [eax], ecx

; 1376 : 		}

  00247	c9		 leave
  00248	c2 08 00	 ret	 8
$LN322@erase:
?erase@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Linsert@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Linsert
; Function compile flags: /Ogsp
;	COMDAT ?_Linsert@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Node$ = 12						; size = 4
$T511172 = 16						; size = 4
__Where$507038 = 16					; size = 4
__Leftish$ = 16						; size = 1
?_Linsert@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Linsert, COMDAT
; _this$ = ecx

; 944  : 		{	// try to insert node at _Node, on left if _Leftish

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 945  : 		const value_type& _Val = this->_Myval(_Node);
; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();

  00008	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0000b	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  0000e	80 78 41 00	 cmp	 BYTE PTR [eax+65], 0
  00012	8b d9		 mov	 ebx, ecx
  00014	b1 01		 mov	 cl, 1
  00016	57		 push	 edi
  00017	88 4d fc	 mov	 BYTE PTR __Addleft$[ebp], cl
  0001a	75 31		 jne	 SHORT $LN151@Linsert
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR __Node$[ebp]
  0001f	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
$LL12@Linsert:

; 951  : 			{	// look for leaf to insert before (_Addleft) or after
; 952  : 			_Wherenode = _Trynode;
; 953  : 			if (_Leftish)

  00022	80 7d 10 00	 cmp	 BYTE PTR __Leftish$[ebp], 0
  00026	8b d8		 mov	 ebx, eax
  00028	74 09		 je	 SHORT $LN10@Linsert

; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,

  0002a	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  0002d	1a c9		 sbb	 cl, cl
  0002f	fe c1		 inc	 cl

; 955  : 					this->_Key(_Trynode),
; 956  : 					this->_Kfn(_Val));	// favor left end
; 957  : 			else

  00031	eb 06		 jmp	 SHORT $LN152@Linsert
$LN10@Linsert:

; 958  : 				_Addleft = _DEBUG_LT_PRED(this->comp,

  00033	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00036	0f 92 c1	 setb	 cl
$LN152@Linsert:
  00039	88 4d fc	 mov	 BYTE PTR __Addleft$[ebp], cl

; 959  : 					this->_Kfn(_Val),
; 960  : 					this->_Key(_Trynode));	// favor right end
; 961  : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 962  : 				: this->_Right(_Trynode);

  0003c	84 c9		 test	 cl, cl
  0003e	74 04		 je	 SHORT $LN15@Linsert
  00040	8b 00		 mov	 eax, DWORD PTR [eax]
  00042	eb 03		 jmp	 SHORT $LN16@Linsert
$LN15@Linsert:
  00044	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$LN16@Linsert:

; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  00047	80 78 41 00	 cmp	 BYTE PTR [eax+65], 0
  0004b	74 d5		 je	 SHORT $LL12@Linsert
$LN151@Linsert:

; 963  : 			}
; 964  : 
; 965  : 		if (this->_Multi)
; 966  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));
; 967  : 		else
; 968  : 			{	// insert only if unique
; 969  : 			iterator _Where = iterator(_Wherenode, this);

  0004d	8b fb		 mov	 edi, ebx
  0004f	89 7d 10	 mov	 DWORD PTR __Where$507038[ebp], edi

; 970  : 			if (!_Addleft)

  00052	84 c9		 test	 cl, cl
  00054	74 30		 je	 SHORT $LN99@Linsert

; 971  : 				;	// need to test if insert after is okay
; 972  : 			else if (_Where == begin())

  00056	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00059	3b 18		 cmp	 ebx, DWORD PTR [eax]
  0005b	75 1e		 jne	 SHORT $LN4@Linsert

; 973  : 				return (_Pairib(_Insert(true, _Wherenode, _Node), true));

  0005d	ff 75 0c	 push	 DWORD PTR __Node$[ebp]
  00060	53		 push	 ebx
  00061	6a 01		 push	 1
$LN153@Linsert:
  00063	8d 45 10	 lea	 eax, DWORD PTR $T511172[ebp]
  00066	50		 push	 eax
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Insert
  0006e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00070	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00073	89 08		 mov	 DWORD PTR [eax], ecx
  00075	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  00079	eb 2c		 jmp	 SHORT $LN1@Linsert
$LN4@Linsert:

; 974  : 			else
; 975  : 				--_Where;	// need to test if insert before is okay

  0007b	8d 4d 10	 lea	 ecx, DWORD PTR __Where$507038[ebp]
  0007e	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::operator--
  00083	8b 7d 10	 mov	 edi, DWORD PTR __Where$507038[ebp]
$LN99@Linsert:

; 976  : 
; 977  : 			if (_DEBUG_LT_PRED(this->comp,

  00086	8b 45 0c	 mov	 eax, DWORD PTR __Node$[ebp]
  00089	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]

; 978  : 				this->_Key(_Where._Mynode()),
; 979  : 				this->_Kfn(_Val)))
; 980  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

  0008c	50		 push	 eax
  0008d	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00090	73 06		 jae	 SHORT $LN2@Linsert
  00092	53		 push	 ebx
  00093	ff 75 fc	 push	 DWORD PTR __Addleft$[ebp]
  00096	eb cb		 jmp	 SHORT $LN153@Linsert
$LN2@Linsert:

; 981  : 			else
; 982  : 				{	// duplicate, don't insert
; 983  : 				_Dest_val(this->_Alval,
; 984  : 					_STD addressof(this->_Myval(_Node)));
; 985  : 
; 986  : 				this->_Alnod.deallocate(_Node, 1);

  00098	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

  0009d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a0	59		 pop	 ecx
  000a1	89 38		 mov	 DWORD PTR [eax], edi
  000a3	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
$LN1@Linsert:
  000a7	5f		 pop	 edi
  000a8	5e		 pop	 esi
  000a9	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  000aa	c9		 leave
  000ab	c2 0c 00	 ret	 12			; 0000000cH
?_Linsert@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Linsert
_TEXT	ENDS
PUBLIC	??$?0AAKABUCHARACTER@@@?$_Pair_base@$$CBKUCHARACTER@@@std@@QAE@AAKABUCHARACTER@@@Z ; std::_Pair_base<unsigned long const ,CHARACTER>::_Pair_base<unsigned long const ,CHARACTER><unsigned long &,CHARACTER const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAKABUCHARACTER@@@?$_Pair_base@$$CBKUCHARACTER@@@std@@QAE@AAKABUCHARACTER@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAKABUCHARACTER@@@?$_Pair_base@$$CBKUCHARACTER@@@std@@QAE@AAKABUCHARACTER@@@Z PROC ; std::_Pair_base<unsigned long const ,CHARACTER>::_Pair_base<unsigned long const ,CHARACTER><unsigned long &,CHARACTER const &>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	56		 push	 esi
  00009	ff 75 0c	 push	 DWORD PTR __Val2$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00011	89 06		 mov	 DWORD PTR [esi], eax
  00013	e8 00 00 00 00	 call	 ??0CHARACTER@@QAE@ABU0@@Z

; 164  : 		}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
??$?0AAKABUCHARACTER@@@?$_Pair_base@$$CBKUCHARACTER@@@std@@QAE@AAKABUCHARACTER@@@Z ENDP ; std::_Pair_base<unsigned long const ,CHARACTER>::_Pair_base<unsigned long const ,CHARACTER><unsigned long &,CHARACTER const &>
_TEXT	ENDS
PUBLIC	??$?0AAKAAUCHARACTER@@@?$_Pair_base@$$CBKUCHARACTER@@@std@@QAE@AAKAAUCHARACTER@@@Z ; std::_Pair_base<unsigned long const ,CHARACTER>::_Pair_base<unsigned long const ,CHARACTER><unsigned long &,CHARACTER &>
; Function compile flags: /Ogsp
;	COMDAT ??$?0AAKAAUCHARACTER@@@?$_Pair_base@$$CBKUCHARACTER@@@std@@QAE@AAKAAUCHARACTER@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAKAAUCHARACTER@@@?$_Pair_base@$$CBKUCHARACTER@@@std@@QAE@AAKAAUCHARACTER@@@Z PROC ; std::_Pair_base<unsigned long const ,CHARACTER>::_Pair_base<unsigned long const ,CHARACTER><unsigned long &,CHARACTER &>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	56		 push	 esi
  00009	ff 75 0c	 push	 DWORD PTR __Val2$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00011	89 06		 mov	 DWORD PTR [esi], eax
  00013	e8 00 00 00 00	 call	 ??0CHARACTER@@QAE@ABU0@@Z

; 164  : 		}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
??$?0AAKAAUCHARACTER@@@?$_Pair_base@$$CBKUCHARACTER@@@std@@QAE@AAKAAUCHARACTER@@@Z ENDP ; std::_Pair_base<unsigned long const ,CHARACTER>::_Pair_base<unsigned long const ,CHARACTER><unsigned long &,CHARACTER &>
_TEXT	ENDS
PUBLIC	??_G?$pair@$$CBKUCHARACTER@@@std@@QAEPAXI@Z	; std::pair<unsigned long const ,CHARACTER>::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_G?$pair@$$CBKUCHARACTER@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$pair@$$CBKUCHARACTER@@@std@@QAEPAXI@Z PROC	; std::pair<unsigned long const ,CHARACTER>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00009	e8 00 00 00 00	 call	 ??1CHARACTER@@QAE@XZ
  0000e	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00012	74 07		 je	 SHORT $LN1@scalar@3
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001a	59		 pop	 ecx
$LN1@scalar@3:
  0001b	8b c6		 mov	 eax, esi
  0001d	5e		 pop	 esi
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??_G?$pair@$$CBKUCHARACTER@@@std@@QAEPAXI@Z ENDP	; std::pair<unsigned long const ,CHARACTER>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@$$QAU32@@Z ; std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >::construct
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@$$QAU32@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@$$QAU32@@Z PROC ; std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 16		 je	 SHORT $LN3@construct@2
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	6a 0c		 push	 12			; 0000000cH
  00013	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
  00016	59		 pop	 ecx
  00017	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  0001a	89 10		 mov	 DWORD PTR [eax], edx
  0001c	f3 a5		 rep movsd
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
$LN3@construct@2:

; 203  : 		}

  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
?construct@?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@$$QAU32@@Z ENDP ; std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >::construct
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@$$CBKUCHARACTER@@@std@@QAE@$$QBK$$QAUCHARACTER@@@Z ; std::_Pair_base<unsigned long const ,CHARACTER>::_Pair_base<unsigned long const ,CHARACTER>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$_Pair_base@$$CBKUCHARACTER@@@std@@QAE@$$QBK$$QAUCHARACTER@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@$$CBKUCHARACTER@@@std@@QAE@$$QBK$$QAUCHARACTER@@@Z PROC ; std::_Pair_base<unsigned long const ,CHARACTER>::_Pair_base<unsigned long const ,CHARACTER>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	56		 push	 esi
  00009	ff 75 0c	 push	 DWORD PTR __Val2$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00011	89 06		 mov	 DWORD PTR [esi], eax
  00013	e8 00 00 00 00	 call	 ??0CHARACTER@@QAE@ABU0@@Z

; 146  : 		}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
??0?$_Pair_base@$$CBKUCHARACTER@@@std@@QAE@$$QBK$$QAUCHARACTER@@@Z ENDP ; std::_Pair_base<unsigned long const ,CHARACTER>::_Pair_base<unsigned long const ,CHARACTER>
_TEXT	ENDS
PUBLIC	??0CHARACTER@@QAE@XZ				; CHARACTER::CHARACTER
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\accessoryenumtype.h
xdata$x	SEGMENT
__ehfuncinfo$??0CHARACTER@@QAE@XZ DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$??0CHARACTER@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CHARACTER@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@XZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@XZ$9
	DD	09H
	DD	FLAT:__unwindfunclet$??0CHARACTER@@QAE@XZ$10
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\characterinfo.h
xdata$x	ENDS
;	COMDAT ??0CHARACTER@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CHARACTER@@QAE@XZ PROC				; CHARACTER::CHARACTER, COMDAT
; _this$ = ecx

; 344  : 	CHARACTER()

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0CHARACTER@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@XZ	; CEncrypt<int>::CEncrypt<int>
  00016	33 ff		 xor	 edi, edi
  00018	8d 4e 30	 lea	 ecx, DWORD PTR [esi+48]
  0001b	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  0001e	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@XZ	; CEncrypt<int>::CEncrypt<int>
  00023	8d 4e 60	 lea	 ecx, DWORD PTR [esi+96]
  00026	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0002a	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@XZ	; CEncrypt<int>::CEncrypt<int>
  0002f	8d 8e 90 00 00
	00		 lea	 ecx, DWORD PTR [esi+144]
  00035	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00039	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@XZ	; CEncrypt<int>::CEncrypt<int>
  0003e	8d 8e c0 00 00
	00		 lea	 ecx, DWORD PTR [esi+192]
  00044	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00048	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@XZ	; CEncrypt<int>::CEncrypt<int>
  0004d	8d 8e f0 00 00
	00		 lea	 ecx, DWORD PTR [esi+240]
  00053	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00057	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@XZ	; CEncrypt<int>::CEncrypt<int>
  0005c	8d 8e 20 01 00
	00		 lea	 ecx, DWORD PTR [esi+288]
  00062	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00066	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@XZ	; CEncrypt<int>::CEncrypt<int>
  0006b	8d 8e 50 01 00
	00		 lea	 ecx, DWORD PTR [esi+336]
  00071	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00075	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@XZ	; CEncrypt<int>::CEncrypt<int>
  0007a	8d 8e 80 01 00
	00		 lea	 ecx, DWORD PTR [esi+384]
  00080	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00084	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@XZ	; CEncrypt<int>::CEncrypt<int>
  00089	8d 8e b0 01 00
	00		 lea	 ecx, DWORD PTR [esi+432]
  0008f	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00093	e8 00 00 00 00	 call	 ??0?$CEncrypt@H@@QAE@XZ	; CEncrypt<int>::CEncrypt<int>
  00098	68 00 00 00 00	 push	 OFFSET ??1?$CEncrypt@H@@UAE@XZ ; CEncrypt<int>::~CEncrypt<int>
  0009d	68 00 00 00 00	 push	 OFFSET ??0?$CEncrypt@H@@QAE@XZ ; CEncrypt<int>::CEncrypt<int>
  000a2	6a 04		 push	 4
  000a4	6a 30		 push	 48			; 00000030H
  000a6	8d 86 e0 01 00
	00		 lea	 eax, DWORD PTR [esi+480]
  000ac	50		 push	 eax
  000ad	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  000b1	e8 00 00 00 00	 call	 ??_L@YGXPAXIHP6EX0@Z1@Z
  000b6	6a 03		 push	 3
  000b8	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  000bc	8d 86 c0 02 00
	00		 lea	 eax, DWORD PTR [esi+704]
  000c2	59		 pop	 ecx
$LL15@CHARACTER@2:
  000c3	89 38		 mov	 DWORD PTR [eax], edi
  000c5	89 78 04	 mov	 DWORD PTR [eax+4], edi
  000c8	89 78 08	 mov	 DWORD PTR [eax+8], edi
  000cb	89 78 0c	 mov	 DWORD PTR [eax+12], edi
  000ce	83 c0 10	 add	 eax, 16			; 00000010H
  000d1	49		 dec	 ecx
  000d2	79 ef		 jns	 SHORT $LL15@CHARACTER@2
  000d4	6a 02		 push	 2
  000d6	8d 86 00 03 00
	00		 lea	 eax, DWORD PTR [esi+768]
  000dc	59		 pop	 ecx
$LL23@CHARACTER@2:
  000dd	89 38		 mov	 DWORD PTR [eax], edi
  000df	89 78 04	 mov	 DWORD PTR [eax+4], edi
  000e2	89 78 08	 mov	 DWORD PTR [eax+8], edi
  000e5	83 c0 0c	 add	 eax, 12			; 0000000cH
  000e8	49		 dec	 ecx
  000e9	79 f2		 jns	 SHORT $LL23@CHARACTER@2

; 345  : 	{
; 346  : 		Init();

  000eb	8b ce		 mov	 ecx, esi
  000ed	e8 00 00 00 00	 call	 ?Init@CHARACTER@@QAEXXZ	; CHARACTER::Init

; 347  : 	}

  000f2	8b c6		 mov	 eax, esi
  000f4	e8 00 00 00 00	 call	 __EH_epilog3
  000f9	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CHARACTER@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 30	 add	 ecx, 48			; 00000030H
  0000e	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@XZ$2:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 60	 add	 ecx, 96			; 00000060H
  00019	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@XZ$3:
  0001e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  00027	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@XZ$4:
  0002c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00035	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@XZ$5:
  0003a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	81 c1 f0 00 00
	00		 add	 ecx, 240		; 000000f0H
  00043	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@XZ$6:
  00048	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	81 c1 20 01 00
	00		 add	 ecx, 288		; 00000120H
  00051	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@XZ$7:
  00056	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	81 c1 50 01 00
	00		 add	 ecx, 336		; 00000150H
  0005f	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@XZ$8:
  00064	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	81 c1 80 01 00
	00		 add	 ecx, 384		; 00000180H
  0006d	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@XZ$9:
  00072	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	81 c1 b0 01 00
	00		 add	 ecx, 432		; 000001b0H
  0007b	e9 00 00 00 00	 jmp	 ??1?$CEncrypt@H@@UAE@XZ	; CEncrypt<int>::~CEncrypt<int>
__unwindfunclet$??0CHARACTER@@QAE@XZ$10:
  00080	68 00 00 00 00	 push	 OFFSET ??1?$CEncrypt@H@@UAE@XZ ; CEncrypt<int>::~CEncrypt<int>
  00085	6a 04		 push	 4
  00087	6a 30		 push	 48			; 00000030H
  00089	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	05 e0 01 00 00	 add	 eax, 480		; 000001e0H
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00097	c3		 ret	 0
__ehhandler$??0CHARACTER@@QAE@XZ:
  00098	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0009c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0009f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  000a2	33 c8		 xor	 ecx, eax
  000a4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a9	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CHARACTER@@QAE@XZ
  000ae	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CHARACTER@@QAE@XZ ENDP				; CHARACTER::CHARACTER
PUBLIC	?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$511720 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z PROC ; std::vector<int,std::allocator<int> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __First_arg$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	8b f1		 mov	 esi, ecx
  0000d	89 07		 mov	 DWORD PTR [edi], eax

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 45 10	 cmp	 eax, DWORD PTR __Last_arg$[ebp]
  00012	74 16		 je	 SHORT $LN1@erase@2

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	ff 75 10	 push	 DWORD PTR __Cat$511720[ebp]
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  0001f	e8 00 00 00 00	 call	 ??$_Move@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<int *,int *>
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

  00027	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN1@erase@2:

; 1212 : 			}
; 1213 : 		return (_First);

  0002a	8b c7		 mov	 eax, edi
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi

; 1214 : 		}

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z ENDP ; std::vector<int,std::allocator<int> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ PROC	; std::vector<int,std::allocator<int> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN12@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN12@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ENDP	; std::vector<int,std::allocator<int> >::_Tidy
_TEXT	ENDS
PUBLIC	?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z ; std::vector<int,std::allocator<int> >::reserve
; Function compile flags: /Ogsp
;	COMDAT ?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z PROC ; std::vector<int,std::allocator<int> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 747  : 		if (max_size() < _Count)

  00003	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	76 0b		 jbe	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN43@reserve:
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  0001a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0001d	2b 06		 sub	 eax, DWORD PTR [esi]
  0001f	c1 f8 02	 sar	 eax, 2
  00022	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00025	73 52		 jae	 SHORT $LN3@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00027	53		 push	 ebx
  00028	57		 push	 edi
  00029	6a 00		 push	 0
  0002b	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate@H@std@@YAPAHIPAH@Z ; std::_Allocate<int>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00033	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00035	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00038	52		 push	 edx
  00039	8b d8		 mov	 ebx, eax
  0003b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003e	53		 push	 ebx
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z ; std::_Uninitialized_move<int *,int *,std::allocator<int> >

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00046	8b 06		 mov	 eax, DWORD PTR [esi]
  00048	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0004b	2b f8		 sub	 edi, eax
  0004d	83 c4 18	 add	 esp, 24			; 00000018H
  00050	c1 ff 02	 sar	 edi, 2

; 761  : 			if (this->_Myfirst != 0)

  00053	85 c0		 test	 eax, eax
  00055	74 07		 je	 SHORT $LN39@reserve

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);
; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0005d	59		 pop	 ecx
$LN39@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  0005e	8b ce		 mov	 ecx, esi
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00066	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00069	8d 04 83	 lea	 eax, DWORD PTR [ebx+eax*4]
  0006c	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 770  : 			this->_Mylast = _Ptr + _Size;

  0006f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00072	5f		 pop	 edi

; 771  : 			this->_Myfirst = _Ptr;

  00073	89 1e		 mov	 DWORD PTR [esi], ebx
  00075	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00078	5b		 pop	 ebx
$LN3@reserve:
  00079	5e		 pop	 esi

; 772  : 			}
; 773  : 		}

  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
$LN42@reserve:
?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z ENDP ; std::vector<int,std::allocator<int> >::reserve
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::find
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z
_TEXT	SEGMENT
$T511875 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::find, COMDAT
; _this$ = ecx

; 1423 : 		{	// find an element in mutable sequence that matches _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1424 : 		iterator _Where = lower_bound(_Keyval);

  00006	8b 7d 0c	 mov	 edi, DWORD PTR __Keyval$[ebp]
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Lbound

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

  00011	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00014	89 45 0c	 mov	 DWORD PTR __Where$[ebp], eax
  00017	3b c6		 cmp	 eax, esi
  00019	74 0c		 je	 SHORT $LN3@find
  0001b	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0001d	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00020	72 05		 jb	 SHORT $LN3@find
  00022	8d 45 0c	 lea	 eax, DWORD PTR __Where$[ebp]
  00025	eb 06		 jmp	 SHORT $LN4@find
$LN3@find:
  00027	89 75 fc	 mov	 DWORD PTR $T511875[ebp], esi
  0002a	8d 45 fc	 lea	 eax, DWORD PTR $T511875[ebp]
$LN4@find:
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00032	5f		 pop	 edi
  00033	89 08		 mov	 DWORD PTR [eax], ecx
  00035	5e		 pop	 esi

; 1429 : 		}

  00036	c9		 leave
  00037	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::find
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::clear, COMDAT
; _this$ = ecx

; 1410 : 		{	// erase all

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 1411 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1412 : 		this->_Orphan_ptr(*this, 0);
; 1413 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1414 : 
; 1415 : 		_Erase(_Root());

  00004	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00007	ff 70 04	 push	 DWORD PTR [eax+4]
  0000a	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Erase

; 1416 : 		_Root() = this->_Myhead;

  0000f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1417 : 		_Lmost() = this->_Myhead;

  00015	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax

; 1418 : 		_Rmost() = this->_Myhead;

  0001a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0001d	89 76 08	 mov	 DWORD PTR [esi+8], esi

; 1419 : 		this->_Mysize = 0;

  00020	83 67 08 00	 and	 DWORD PTR [edi+8], 0
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi

; 1420 : 		}

  00026	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::find
; Function compile flags: /Ogsp
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z
_TEXT	SEGMENT
$T512048 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::find, COMDAT
; _this$ = ecx

; 1423 : 		{	// find an element in mutable sequence that matches _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1424 : 		iterator _Where = lower_bound(_Keyval);

  00006	8b 7d 0c	 mov	 edi, DWORD PTR __Keyval$[ebp]
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Lbound

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

  00011	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00014	89 45 0c	 mov	 DWORD PTR __Where$[ebp], eax
  00017	3b c6		 cmp	 eax, esi
  00019	74 0c		 je	 SHORT $LN3@find@2
  0001b	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0001d	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00020	72 05		 jb	 SHORT $LN3@find@2
  00022	8d 45 0c	 lea	 eax, DWORD PTR __Where$[ebp]
  00025	eb 06		 jmp	 SHORT $LN4@find@2
$LN3@find@2:
  00027	89 75 fc	 mov	 DWORD PTR $T512048[ebp], esi
  0002a	8d 45 fc	 lea	 eax, DWORD PTR $T512048[ebp]
$LN4@find@2:
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00032	5f		 pop	 edi
  00033	89 08		 mov	 DWORD PTR [eax], ecx
  00035	5e		 pop	 esi

; 1429 : 		}

  00036	c9		 leave
  00037	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::find
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T512185 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::erase, COMDAT
; _this$ = ecx

; 1379 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1380 : 		if (_First == begin() && _Last == end())

  00007	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  0000d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0000f	75 13		 jne	 SHORT $LN65@erase@3
  00011	39 45 10	 cmp	 DWORD PTR __Last$[ebp], eax
  00014	75 0e		 jne	 SHORT $LN65@erase@3

; 1381 : 			{	// erase all
; 1382 : 			clear();

  00016	8b ce		 mov	 ecx, esi
  00018	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::clear

; 1383 : 			return (begin());

  0001d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00020	8b 08		 mov	 ecx, DWORD PTR [eax]
  00022	eb 25		 jmp	 SHORT $LN1@erase@3
$LN65@erase@3:

; 1384 : 			}
; 1385 : 		else
; 1386 : 			{	// partial erase, one at a time
; 1387 : 			while (_First != _Last)

  00024	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00027	74 20		 je	 SHORT $LN1@erase@3
  00029	57		 push	 edi
$LL2@erase@3:

; 1388 : 				erase(_First++);

  0002a	8b f9		 mov	 edi, ecx
  0002c	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0002f	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >,std::_Iterator_base0>::operator++
  00034	57		 push	 edi
  00035	8d 45 fc	 lea	 eax, DWORD PTR $T512185[ebp]
  00038	50		 push	 eax
  00039	8b ce		 mov	 ecx, esi
  0003b	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::erase
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00043	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00046	75 e2		 jne	 SHORT $LL2@erase@3
  00048	5f		 pop	 edi
$LN1@erase@3:

; 1389 : 			return (iterator(_First._Ptr, this));

  00049	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0004c	89 08		 mov	 DWORD PTR [eax], ecx
  0004e	5e		 pop	 esi

; 1390 : 			}
; 1391 : 		}

  0004f	c9		 leave
  00050	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::erase
_TEXT	ENDS
PUBLIC	??$?0AAKABUCHARACTER@@@?$pair@$$CBKUCHARACTER@@@std@@QAE@AAKABUCHARACTER@@@Z ; std::pair<unsigned long const ,CHARACTER>::pair<unsigned long const ,CHARACTER><unsigned long &,CHARACTER const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAKABUCHARACTER@@@?$pair@$$CBKUCHARACTER@@@std@@QAE@AAKABUCHARACTER@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAKABUCHARACTER@@@?$pair@$$CBKUCHARACTER@@@std@@QAE@AAKABUCHARACTER@@@Z PROC ; std::pair<unsigned long const ,CHARACTER>::pair<unsigned long const ,CHARACTER><unsigned long &,CHARACTER const &>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	56		 push	 esi
  00009	ff 75 0c	 push	 DWORD PTR __Val2$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00011	89 06		 mov	 DWORD PTR [esi], eax
  00013	e8 00 00 00 00	 call	 ??0CHARACTER@@QAE@ABU0@@Z

; 248  : 		}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
??$?0AAKABUCHARACTER@@@?$pair@$$CBKUCHARACTER@@@std@@QAE@AAKABUCHARACTER@@@Z ENDP ; std::pair<unsigned long const ,CHARACTER>::pair<unsigned long const ,CHARACTER><unsigned long &,CHARACTER const &>
_TEXT	ENDS
PUBLIC	??$?0AAKAAUCHARACTER@@@?$pair@$$CBKUCHARACTER@@@std@@QAE@AAKAAUCHARACTER@@@Z ; std::pair<unsigned long const ,CHARACTER>::pair<unsigned long const ,CHARACTER><unsigned long &,CHARACTER &>
; Function compile flags: /Ogsp
;	COMDAT ??$?0AAKAAUCHARACTER@@@?$pair@$$CBKUCHARACTER@@@std@@QAE@AAKAAUCHARACTER@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAKAAUCHARACTER@@@?$pair@$$CBKUCHARACTER@@@std@@QAE@AAKAAUCHARACTER@@@Z PROC ; std::pair<unsigned long const ,CHARACTER>::pair<unsigned long const ,CHARACTER><unsigned long &,CHARACTER &>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	56		 push	 esi
  00009	ff 75 0c	 push	 DWORD PTR __Val2$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00011	89 06		 mov	 DWORD PTR [esi], eax
  00013	e8 00 00 00 00	 call	 ??0CHARACTER@@QAE@ABU0@@Z

; 248  : 		}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
??$?0AAKAAUCHARACTER@@@?$pair@$$CBKUCHARACTER@@@std@@QAE@AAKAAUCHARACTER@@@Z ENDP ; std::pair<unsigned long const ,CHARACTER>::pair<unsigned long const ,CHARACTER><unsigned long &,CHARACTER &>
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@$$CBKUCHARACTER@@@std@@@std@@YAXPAU?$pair@$$CBKUCHARACTER@@@0@@Z ; std::_Destroy<std::pair<unsigned long const ,CHARACTER> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@U?$pair@$$CBKUCHARACTER@@@std@@@std@@YAXPAU?$pair@$$CBKUCHARACTER@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@$$CBKUCHARACTER@@@std@@@std@@YAXPAU?$pair@$$CBKUCHARACTER@@@0@@Z PROC ; std::_Destroy<std::pair<unsigned long const ,CHARACTER> >, COMDAT

; 62   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	_Ptr->~_Ty();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	83 c1 04	 add	 ecx, 4

; 64   : 	}

  00009	5d		 pop	 ebp

; 63   : 	_Ptr->~_Ty();

  0000a	e9 00 00 00 00	 jmp	 ??1CHARACTER@@QAE@XZ
??$_Destroy@U?$pair@$$CBKUCHARACTER@@@std@@@std@@YAXPAU?$pair@$$CBKUCHARACTER@@@0@@Z ENDP ; std::_Destroy<std::pair<unsigned long const ,CHARACTER> >
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@0@PAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode>,std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@0@PAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@0@PAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode>,std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  0000c	e8 00 00 00 00	 call	 ?construct@?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@$$QAU32@@Z ; std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >::construct

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@0@PAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode>,std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
_TEXT	ENDS
PUBLIC	??$?0$$CBKUCHARACTER@@@?$pair@$$CBKUCHARACTER@@@std@@QAE@$$QAU01@@Z ; std::pair<unsigned long const ,CHARACTER>::pair<unsigned long const ,CHARACTER><unsigned long const ,CHARACTER>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0$$CBKUCHARACTER@@@?$pair@$$CBKUCHARACTER@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0$$CBKUCHARACTER@@@?$pair@$$CBKUCHARACTER@@@std@@QAE@$$QAU01@@Z PROC ; std::pair<unsigned long const ,CHARACTER>::pair<unsigned long const ,CHARACTER><unsigned long const ,CHARACTER>, COMDAT
; _this$ = ecx

; 255  : 		{	// construct from moved compatible pair

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000b	83 c0 04	 add	 eax, 4
  0000e	89 0e		 mov	 DWORD PTR [esi], ecx
  00010	50		 push	 eax
  00011	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00014	e8 00 00 00 00	 call	 ??0CHARACTER@@QAE@ABU0@@Z

; 256  : 		}

  00019	8b c6		 mov	 eax, esi
  0001b	5e		 pop	 esi
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??$?0$$CBKUCHARACTER@@@?$pair@$$CBKUCHARACTER@@@std@@QAE@$$QAU01@@Z ENDP ; std::pair<unsigned long const ,CHARACTER>::pair<unsigned long const ,CHARACTER><unsigned long const ,CHARACTER>
_TEXT	ENDS
PUBLIC	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ ; std::vector<int,std::allocator<int> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T512479 = -4						; size = 4
?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ PROC	; std::vector<int,std::allocator<int> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T512479[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ ENDP	; std::vector<int,std::allocator<int> >::clear
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ; std::vector<int,std::allocator<int> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z PROC ; std::vector<int,std::allocator<int> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx

; 1292 : 		if (max_size() - _Count < _Size)

  0000d	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  00012	2b 55 08	 sub	 edx, DWORD PTR __Count$[ebp]
  00015	c1 f8 02	 sar	 eax, 2
  00018	3b d0		 cmp	 edx, eax
  0001a	73 0b		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve:
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  00027	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0002a	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0002d	2b d1		 sub	 edx, ecx
  0002f	c1 fa 02	 sar	 edx, 2
  00032	3b c2		 cmp	 eax, edx
  00034	76 10		 jbe	 SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  00036	50		 push	 eax
  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z ; std::vector<int,std::allocator<int> >::_Grow_to
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z ; std::vector<int,std::allocator<int> >::reserve
$LN1@Reserve:
  00046	5e		 pop	 esi

; 1298 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN20@Reserve:
?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ENDP ; std::vector<int,std::allocator<int> >::_Reserve
_TEXT	ENDS
PUBLIC	?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@K@Z ; ioGlobalSoldierInfo::GetSoldierData
EXTRN	?GetCharacter@ioMyInfo@@QAEABUCHARACTER@@K@Z:PROC ; ioMyInfo::GetCharacter
EXTRN	?GetCharArray@ioMyInfo@@QAEHK@Z:PROC		; ioMyInfo::GetCharArray
EXTRN	__imp_??8ioHashString@@QBE_NABV0@@Z:PROC
EXTRN	?GetSingleton@ioMyInfo@@SAAAV1@XZ:PROC		; ioMyInfo::GetSingleton
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@K@Z$0
__ehfuncinfo$?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioglobalsoldierinfo.cpp
xdata$x	ENDS
;	COMDAT ?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@K@Z
_TEXT	SEGMENT
$T512565 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_iter$505575 = 12					; size = 4
_rkName$ = 12						; size = 4
_dwCharIndex$ = 16					; size = 4
?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@K@Z PROC ; ioGlobalSoldierInfo::GetSoldierData, COMDAT
; _this$ = ecx

; 93   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@K@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00012	83 65 f0 00	 and	 DWORD PTR $T512565[ebp], 0

; 94   : 	CHARACTER kReturnInfo;

  00016	8b 5d 08	 mov	 ebx, DWORD PTR ___$ReturnUdt$[ebp]
  00019	8b cb		 mov	 ecx, ebx
  0001b	e8 00 00 00 00	 call	 ??0CHARACTER@@QAE@XZ	; CHARACTER::CHARACTER

; 111  : 		}
; 112  : 	}
; 113  : 	return kReturnInfo;

  00020	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00024	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T512565[ebp], 1
  0002b	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00030	8b 4d 0c	 mov	 ecx, DWORD PTR _rkName$[ebp]
  00033	83 c0 1c	 add	 eax, 28			; 0000001cH
  00036	50		 push	 eax
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  0003d	84 c0		 test	 al, al
  0003f	74 23		 je	 SHORT $LN4@GetSoldier

; 95   : 	if( rkName == g_MyInfo.GetPublicID() )
; 96   : 	{
; 97   : 		int iCharArray = g_MyInfo.GetCharArray( dwCharIndex );

  00041	ff 75 10	 push	 DWORD PTR _dwCharIndex$[ebp]
  00044	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00049	8b c8		 mov	 ecx, eax
  0004b	e8 00 00 00 00	 call	 ?GetCharArray@ioMyInfo@@QAEHK@Z ; ioMyInfo::GetCharArray

; 98   : 		if( iCharArray != -1 )

  00050	83 f8 ff	 cmp	 eax, -1
  00053	74 34		 je	 SHORT $LN1@GetSoldier

; 99   : 		{
; 100  : 			const CHARACTER &kCharInfo = g_MyInfo.GetCharacter( iCharArray );

  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  0005b	8b c8		 mov	 ecx, eax
  0005d	e8 00 00 00 00	 call	 ?GetCharacter@ioMyInfo@@QAEABUCHARACTER@@K@Z ; ioMyInfo::GetCharacter

; 101  : 			kReturnInfo = kCharInfo;		
; 102  : 		}
; 103  : 	}
; 104  : 	else

  00062	eb 1d		 jmp	 SHORT $LN34@GetSoldier
$LN4@GetSoldier:

; 105  : 	{
; 106  : 		SoldierDecMap::iterator iter = m_vSoldierMap.find( dwCharIndex );

  00064	8d 45 10	 lea	 eax, DWORD PTR _dwCharIndex$[ebp]
  00067	50		 push	 eax
  00068	8d 45 0c	 lea	 eax, DWORD PTR _iter$505575[ebp]
  0006b	50		 push	 eax
  0006c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0006f	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::find

; 107  : 		if( iter != m_vSoldierMap.end() )

  00074	8b 76 08	 mov	 esi, DWORD PTR [esi+8]
  00077	8b 45 0c	 mov	 eax, DWORD PTR _iter$505575[ebp]
  0007a	3b c6		 cmp	 eax, esi
  0007c	74 0b		 je	 SHORT $LN1@GetSoldier

; 108  : 		{
; 109  : 			const CHARACTER &kCharInfo = iter->second;

  0007e	83 c0 10	 add	 eax, 16			; 00000010H
$LN34@GetSoldier:

; 110  : 			kReturnInfo = kCharInfo;

  00081	50		 push	 eax
  00082	8b cb		 mov	 ecx, ebx
  00084	e8 00 00 00 00	 call	 ??4CHARACTER@@QAEAAU0@ABU0@@Z ; CHARACTER::operator=
$LN1@GetSoldier:

; 111  : 		}
; 112  : 	}
; 113  : 	return kReturnInfo;

  00089	8b c3		 mov	 eax, ebx

; 114  : }

  0008b	e8 00 00 00 00	 call	 __EH_epilog3
  00090	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@K@Z$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T512565[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0c 00 00
	00		 je	 $LN8@GetSoldier
  0000c	83 65 f0 fe	 and	 DWORD PTR $T512565[ebp], -2 ; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1CHARACTER@@QAE@XZ
$LN8@GetSoldier:
  00018	c3		 ret	 0
__ehhandler$?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@K@Z:
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@K@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@K@Z ENDP ; ioGlobalSoldierInfo::GetSoldierData
PUBLIC	?GetSoldierItemCode@ioGlobalSoldierInfo@@QAEKABVioHashString@@KH@Z ; ioGlobalSoldierInfo::GetSoldierItemCode
EXTRN	?GetCharItem@ioMyInfo@@QAEABUITEM_DATA@@HH@Z:PROC ; ioMyInfo::GetCharItem
; Function compile flags: /Ogsp
;	COMDAT ?GetSoldierItemCode@ioGlobalSoldierInfo@@QAEKABVioHashString@@KH@Z
_TEXT	SEGMENT
_iter$505726 = 8					; size = 4
_rkName$ = 8						; size = 4
_dwCharIndex$ = 12					; size = 4
_iSlot$ = 16						; size = 4
?GetSoldierItemCode@ioGlobalSoldierInfo@@QAEKABVioHashString@@KH@Z PROC ; ioGlobalSoldierInfo::GetSoldierItemCode, COMDAT
; _this$ = ecx

; 117  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 118  : 	if( rkName == g_MyInfo.GetPublicID() )

  00006	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _rkName$[ebp]
  0000e	83 c0 1c	 add	 eax, 28			; 0000001cH
  00011	50		 push	 eax
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00018	84 c0		 test	 al, al
  0001a	74 28		 je	 SHORT $LN5@GetSoldier@2

; 119  : 	{
; 120  : 		int iCharArray = g_MyInfo.GetCharArray( dwCharIndex );

  0001c	ff 75 0c	 push	 DWORD PTR _dwCharIndex$[ebp]
  0001f	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00024	8b c8		 mov	 ecx, eax
  00026	e8 00 00 00 00	 call	 ?GetCharArray@ioMyInfo@@QAEHK@Z ; ioMyInfo::GetCharArray

; 121  : 		if( iCharArray != -1 )

  0002b	83 f8 ff	 cmp	 eax, -1
  0002e	74 40		 je	 SHORT $LN1@GetSoldier@2

; 122  : 		{
; 123  : 			return g_MyInfo.GetCharItem( iCharArray, iSlot ).m_item_code;

  00030	ff 75 10	 push	 DWORD PTR _iSlot$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00039	8b c8		 mov	 ecx, eax
  0003b	e8 00 00 00 00	 call	 ?GetCharItem@ioMyInfo@@QAEABUITEM_DATA@@HH@Z ; ioMyInfo::GetCharItem
  00040	8b 00		 mov	 eax, DWORD PTR [eax]
  00042	eb 2e		 jmp	 SHORT $LN6@GetSoldier@2
$LN5@GetSoldier@2:

; 124  : 		}
; 125  : 	}
; 126  : 	else
; 127  : 	{
; 128  : 		SoldierItemMap::iterator iter = m_vSoldierItemMap.find( dwCharIndex );

  00044	8d 45 0c	 lea	 eax, DWORD PTR _dwCharIndex$[ebp]
  00047	50		 push	 eax
  00048	8d 45 08	 lea	 eax, DWORD PTR _iter$505726[ebp]
  0004b	50		 push	 eax
  0004c	8d 8e 38 03 00
	00		 lea	 ecx, DWORD PTR [esi+824]
  00052	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::find

; 129  : 		if( iter != m_vSoldierItemMap.end() )

  00057	8b 45 08	 mov	 eax, DWORD PTR _iter$505726[ebp]
  0005a	3b 86 3c 03 00
	00		 cmp	 eax, DWORD PTR [esi+828]
  00060	74 0e		 je	 SHORT $LN1@GetSoldier@2

; 130  : 		{
; 131  : 			ItemCode &kItemCode = iter->second;
; 132  : 			if( COMPARE( iSlot, 0, MAX_INVENTORY ) )

  00062	8b 4d 10	 mov	 ecx, DWORD PTR _iSlot$[ebp]
  00065	83 f9 03	 cmp	 ecx, 3
  00068	77 06		 ja	 SHORT $LN1@GetSoldier@2

; 133  : 				return kItemCode.m_dwItemCode[iSlot];

  0006a	8b 44 88 10	 mov	 eax, DWORD PTR [eax+ecx*4+16]
  0006e	eb 02		 jmp	 SHORT $LN6@GetSoldier@2
$LN1@GetSoldier@2:

; 134  : 		}
; 135  : 	}
; 136  : 	return 0;

  00070	33 c0		 xor	 eax, eax
$LN6@GetSoldier@2:
  00072	5e		 pop	 esi

; 137  : }

  00073	5d		 pop	 ebp
  00074	c2 0c 00	 ret	 12			; 0000000cH
?GetSoldierItemCode@ioGlobalSoldierInfo@@QAEKABVioHashString@@KH@Z ENDP ; ioGlobalSoldierInfo::GetSoldierItemCode
_TEXT	ENDS
PUBLIC	?GetSoldierItemMaleCustom@ioGlobalSoldierInfo@@QAEKABVioHashString@@KH@Z ; ioGlobalSoldierInfo::GetSoldierItemMaleCustom
; Function compile flags: /Ogsp
;	COMDAT ?GetSoldierItemMaleCustom@ioGlobalSoldierInfo@@QAEKABVioHashString@@KH@Z
_TEXT	SEGMENT
_iter$505878 = 8					; size = 4
_rkName$ = 8						; size = 4
_dwCharIndex$ = 12					; size = 4
_iSlot$ = 16						; size = 4
?GetSoldierItemMaleCustom@ioGlobalSoldierInfo@@QAEKABVioHashString@@KH@Z PROC ; ioGlobalSoldierInfo::GetSoldierItemMaleCustom, COMDAT
; _this$ = ecx

; 140  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 141  : 	if( rkName == g_MyInfo.GetPublicID() )

  00006	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _rkName$[ebp]
  0000e	83 c0 1c	 add	 eax, 28			; 0000001cH
  00011	50		 push	 eax
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00018	84 c0		 test	 al, al
  0001a	74 29		 je	 SHORT $LN5@GetSoldier@3

; 142  : 	{
; 143  : 		int iCharArray = g_MyInfo.GetCharArray( dwCharIndex );

  0001c	ff 75 0c	 push	 DWORD PTR _dwCharIndex$[ebp]
  0001f	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00024	8b c8		 mov	 ecx, eax
  00026	e8 00 00 00 00	 call	 ?GetCharArray@ioMyInfo@@QAEHK@Z ; ioMyInfo::GetCharArray

; 144  : 		if( iCharArray != -1 )

  0002b	83 f8 ff	 cmp	 eax, -1
  0002e	74 41		 je	 SHORT $LN1@GetSoldier@3

; 145  : 		{
; 146  : 			return g_MyInfo.GetCharItem( iCharArray, iSlot ).m_item_male_custom;

  00030	ff 75 10	 push	 DWORD PTR _iSlot$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00039	8b c8		 mov	 ecx, eax
  0003b	e8 00 00 00 00	 call	 ?GetCharItem@ioMyInfo@@QAEABUITEM_DATA@@HH@Z ; ioMyInfo::GetCharItem
  00040	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00043	eb 2e		 jmp	 SHORT $LN6@GetSoldier@3
$LN5@GetSoldier@3:

; 147  : 		}
; 148  : 	}
; 149  : 	else
; 150  : 	{
; 151  : 		SoldierItemMap::iterator iter = m_vSoldierItemMap.find( dwCharIndex );

  00045	8d 45 0c	 lea	 eax, DWORD PTR _dwCharIndex$[ebp]
  00048	50		 push	 eax
  00049	8d 45 08	 lea	 eax, DWORD PTR _iter$505878[ebp]
  0004c	50		 push	 eax
  0004d	8d 8e 38 03 00
	00		 lea	 ecx, DWORD PTR [esi+824]
  00053	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::find

; 152  : 		if( iter != m_vSoldierItemMap.end() )

  00058	8b 45 08	 mov	 eax, DWORD PTR _iter$505878[ebp]
  0005b	3b 86 3c 03 00
	00		 cmp	 eax, DWORD PTR [esi+828]
  00061	74 0e		 je	 SHORT $LN1@GetSoldier@3

; 153  : 		{
; 154  : 			ItemCode &kItemCode = iter->second;
; 155  : 			if( COMPARE( iSlot, 0, MAX_INVENTORY ) )

  00063	8b 4d 10	 mov	 ecx, DWORD PTR _iSlot$[ebp]
  00066	83 f9 03	 cmp	 ecx, 3
  00069	77 06		 ja	 SHORT $LN1@GetSoldier@3

; 156  : 				return kItemCode.m_dwItemMaleCustom[iSlot];

  0006b	8b 44 88 20	 mov	 eax, DWORD PTR [eax+ecx*4+32]
  0006f	eb 02		 jmp	 SHORT $LN6@GetSoldier@3
$LN1@GetSoldier@3:

; 157  : 		}
; 158  : 	}
; 159  : 	return 0;

  00071	33 c0		 xor	 eax, eax
$LN6@GetSoldier@3:
  00073	5e		 pop	 esi

; 160  : }

  00074	5d		 pop	 ebp
  00075	c2 0c 00	 ret	 12			; 0000000cH
?GetSoldierItemMaleCustom@ioGlobalSoldierInfo@@QAEKABVioHashString@@KH@Z ENDP ; ioGlobalSoldierInfo::GetSoldierItemMaleCustom
_TEXT	ENDS
PUBLIC	?GetSoldierItemFemaleCustom@ioGlobalSoldierInfo@@QAEKABVioHashString@@KH@Z ; ioGlobalSoldierInfo::GetSoldierItemFemaleCustom
; Function compile flags: /Ogsp
;	COMDAT ?GetSoldierItemFemaleCustom@ioGlobalSoldierInfo@@QAEKABVioHashString@@KH@Z
_TEXT	SEGMENT
_iter$505894 = 8					; size = 4
_rkName$ = 8						; size = 4
_dwCharIndex$ = 12					; size = 4
_iSlot$ = 16						; size = 4
?GetSoldierItemFemaleCustom@ioGlobalSoldierInfo@@QAEKABVioHashString@@KH@Z PROC ; ioGlobalSoldierInfo::GetSoldierItemFemaleCustom, COMDAT
; _this$ = ecx

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 164  : 	if( rkName == g_MyInfo.GetPublicID() )

  00006	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _rkName$[ebp]
  0000e	83 c0 1c	 add	 eax, 28			; 0000001cH
  00011	50		 push	 eax
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00018	84 c0		 test	 al, al
  0001a	74 29		 je	 SHORT $LN5@GetSoldier@4

; 165  : 	{
; 166  : 		int iCharArray = g_MyInfo.GetCharArray( dwCharIndex );

  0001c	ff 75 0c	 push	 DWORD PTR _dwCharIndex$[ebp]
  0001f	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00024	8b c8		 mov	 ecx, eax
  00026	e8 00 00 00 00	 call	 ?GetCharArray@ioMyInfo@@QAEHK@Z ; ioMyInfo::GetCharArray

; 167  : 		if( iCharArray != -1 )

  0002b	83 f8 ff	 cmp	 eax, -1
  0002e	74 41		 je	 SHORT $LN1@GetSoldier@4

; 168  : 		{
; 169  : 			return g_MyInfo.GetCharItem( iCharArray, iSlot ).m_item_female_custom;

  00030	ff 75 10	 push	 DWORD PTR _iSlot$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00039	8b c8		 mov	 ecx, eax
  0003b	e8 00 00 00 00	 call	 ?GetCharItem@ioMyInfo@@QAEABUITEM_DATA@@HH@Z ; ioMyInfo::GetCharItem
  00040	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00043	eb 2e		 jmp	 SHORT $LN6@GetSoldier@4
$LN5@GetSoldier@4:

; 170  : 		}
; 171  : 	}
; 172  : 	else
; 173  : 	{
; 174  : 		SoldierItemMap::iterator iter = m_vSoldierItemMap.find( dwCharIndex );

  00045	8d 45 0c	 lea	 eax, DWORD PTR _dwCharIndex$[ebp]
  00048	50		 push	 eax
  00049	8d 45 08	 lea	 eax, DWORD PTR _iter$505894[ebp]
  0004c	50		 push	 eax
  0004d	8d 8e 38 03 00
	00		 lea	 ecx, DWORD PTR [esi+824]
  00053	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::find

; 175  : 		if( iter != m_vSoldierItemMap.end() )

  00058	8b 45 08	 mov	 eax, DWORD PTR _iter$505894[ebp]
  0005b	3b 86 3c 03 00
	00		 cmp	 eax, DWORD PTR [esi+828]
  00061	74 0e		 je	 SHORT $LN1@GetSoldier@4

; 176  : 		{
; 177  : 			ItemCode &kItemCode = iter->second;
; 178  : 			if( COMPARE( iSlot, 0, MAX_INVENTORY ) )

  00063	8b 4d 10	 mov	 ecx, DWORD PTR _iSlot$[ebp]
  00066	83 f9 03	 cmp	 ecx, 3
  00069	77 06		 ja	 SHORT $LN1@GetSoldier@4

; 179  : 				return kItemCode.m_dwItemFemaleCustom[iSlot];

  0006b	8b 44 88 30	 mov	 eax, DWORD PTR [eax+ecx*4+48]
  0006f	eb 02		 jmp	 SHORT $LN6@GetSoldier@4
$LN1@GetSoldier@4:

; 180  : 		}
; 181  : 	}
; 182  : 	return 0;

  00071	33 c0		 xor	 eax, eax
$LN6@GetSoldier@4:
  00073	5e		 pop	 esi

; 183  : }

  00074	5d		 pop	 ebp
  00075	c2 0c 00	 ret	 12			; 0000000cH
?GetSoldierItemFemaleCustom@ioGlobalSoldierInfo@@QAEKABVioHashString@@KH@Z ENDP ; ioGlobalSoldierInfo::GetSoldierItemFemaleCustom
_TEXT	ENDS
PUBLIC	?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z ; std::vector<int,std::allocator<int> >::push_back
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z PROC ; std::vector<int,std::allocator<int> >::push_back, COMDAT
; _this$ = ecx

; 631  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 632  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f8		 cmp	 edi, eax
  0000f	73 27		 jae	 SHORT $LN4@push_back
  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	3b cf		 cmp	 ecx, edi
  00015	77 21		 ja	 SHORT $LN4@push_back

; 633  : 			{	// push back an element
; 634  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	2b f9		 sub	 edi, ecx
  00019	c1 ff 02	 sar	 edi, 2

; 635  : 			if (this->_Mylast == this->_Myend)

  0001c	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0001f	75 09		 jne	 SHORT $LN3@push_back

; 636  : 				_Reserve(1);

  00021	6a 01		 push	 1
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ; std::vector<int,std::allocator<int> >::_Reserve
$LN3@push_back:

; 637  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 638  : 			_Cons_val(this->_Alval,
; 639  : 				this->_Mylast,
; 640  : 				_STD forward<_Ty>(this->_Myfirst[_Idx]));

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	85 c0		 test	 eax, eax
  0002f	74 20		 je	 SHORT $LN41@push_back
  00031	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00033	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]

; 641  : 			++this->_Mylast;
; 642  : 			}
; 643  : 		else

  00036	eb 17		 jmp	 SHORT $LN48@push_back
$LN4@push_back:

; 644  : 			{	// push back a non-element
; 645  : 			if (this->_Mylast == this->_Myend)

  00038	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0003b	75 09		 jne	 SHORT $LN1@push_back

; 646  : 				_Reserve(1);

  0003d	6a 01		 push	 1
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ; std::vector<int,std::allocator<int> >::_Reserve
$LN1@push_back:

; 647  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 648  : 			_Cons_val(this->_Alval,
; 649  : 				this->_Mylast,
; 650  : 				_STD forward<_Ty>(_Val));

  00046	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00049	85 c0		 test	 eax, eax
  0004b	74 04		 je	 SHORT $LN41@push_back
  0004d	8b 0f		 mov	 ecx, DWORD PTR [edi]
$LN48@push_back:
  0004f	89 08		 mov	 DWORD PTR [eax], ecx
$LN41@push_back:

; 651  : 			++this->_Mylast;

  00051	83 46 04 04	 add	 DWORD PTR [esi+4], 4
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi

; 652  : 			}
; 653  : 		}

  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z ENDP ; std::vector<int,std::allocator<int> >::push_back
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Tidy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T512987 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1865 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1866 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 10		 mov	 edx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T512987[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::erase

; 1867 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAEXPAU?$pair@$$CBKUCHARACTER@@@2@@Z ; std::allocator<std::pair<unsigned long const ,CHARACTER> >::destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAEXPAU?$pair@$$CBKUCHARACTER@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAEXPAU?$pair@$$CBKUCHARACTER@@@2@@Z PROC ; std::allocator<std::pair<unsigned long const ,CHARACTER> >::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 213  : 		_Destroy(_Ptr);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	83 c1 04	 add	 ecx, 4
  00009	e8 00 00 00 00	 call	 ??1CHARACTER@@QAE@XZ

; 214  : 		}

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?destroy@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAEXPAU?$pair@$$CBKUCHARACTER@@@2@@Z ENDP ; std::allocator<std::pair<unsigned long const ,CHARACTER> >::destroy
_TEXT	ENDS
PUBLIC	??$_Buynode@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Buynode<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??$_Buynode@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Buynode@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Buynode<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >, COMDAT
; _this$ = ecx

; 586  : 		_Nodeptr _Buynode(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f1		 mov	 esi, ecx

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

  00007	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Buynode

; 589  : 
; 590  : 		_TRY_BEGIN
; 591  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Wherenode)),
; 592  : 			_STD forward<_Valty>(_Val));

  0000c	ff 75 08	 push	 DWORD PTR __Val$[ebp]
  0000f	8b f8		 mov	 edi, eax
  00011	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  00014	50		 push	 eax
  00015	8d 4e 0d	 lea	 ecx, DWORD PTR [esi+13]
  00018	e8 00 00 00 00	 call	 ?construct@?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@2@$$QAU32@@Z ; std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >::construct

; 593  : 		_CATCH_ALL
; 594  : 		this->_Alnod.deallocate(_Wherenode, 1);
; 595  : 		_RERAISE;
; 596  : 		_CATCH_END
; 597  : 
; 598  : 		return (_Wherenode);

  0001d	8b c7		 mov	 eax, edi
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi

; 599  : 		}

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??$_Buynode@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Buynode<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAEXPAU?$pair@$$CBKUCHARACTER@@@2@$$QAU32@@Z ; std::allocator<std::pair<unsigned long const ,CHARACTER> >::construct
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAEXPAU?$pair@$$CBKUCHARACTER@@@2@$$QAU32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAEXPAU?$pair@$$CBKUCHARACTER@@@2@$$QAU32@@Z$0
__ehfuncinfo$?construct@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAEXPAU?$pair@$$CBKUCHARACTER@@@2@$$QAU32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAEXPAU?$pair@$$CBKUCHARACTER@@@2@$$QAU32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAEXPAU?$pair@$$CBKUCHARACTER@@@2@$$QAU32@@Z
_TEXT	SEGMENT
$T513135 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAEXPAU?$pair@$$CBKUCHARACTER@@@2@$$QAU32@@Z PROC ; std::allocator<std::pair<unsigned long const ,CHARACTER> >::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?construct@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAEXPAU?$pair@$$CBKUCHARACTER@@@2@$$QAU32@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000f	89 45 f0	 mov	 DWORD PTR $T513135[ebp], eax
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 c0		 test	 eax, eax
  00018	74 13		 je	 SHORT $LN3@construct@3
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0001d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001f	83 c1 04	 add	 ecx, 4
  00022	51		 push	 ecx
  00023	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00026	89 10		 mov	 DWORD PTR [eax], edx
  00028	e8 00 00 00 00	 call	 ??0CHARACTER@@QAE@ABU0@@Z
$LN3@construct@3:

; 203  : 		}

  0002d	e8 00 00 00 00	 call	 __EH_epilog3
  00032	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAEXPAU?$pair@$$CBKUCHARACTER@@@2@$$QAU32@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T513135[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$?construct@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAEXPAU?$pair@$$CBKUCHARACTER@@@2@$$QAU32@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?construct@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAEXPAU?$pair@$$CBKUCHARACTER@@@2@$$QAU32@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAEXPAU?$pair@$$CBKUCHARACTER@@@2@$$QAU32@@Z ENDP ; std::allocator<std::pair<unsigned long const ,CHARACTER> >::construct
PUBLIC	?GetAwardRandSoldier@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@H@Z ; ioGlobalSoldierInfo::GetAwardRandSoldier
EXTRN	?IsActiveClass@ioClassPrice@@QAE_NH@Z:PROC	; ioClassPrice::IsActiveClass
EXTRN	?GetSingleton@ioClassPrice@@SAAAV1@XZ:PROC	; ioClassPrice::GetSingleton
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$?GetAwardRandSoldier@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAwardRandSoldier@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetAwardRandSoldier@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@H@Z$1
__ehfuncinfo$?GetAwardRandSoldier@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetAwardRandSoldier@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioglobalsoldierinfo.cpp
xdata$x	ENDS
;	COMDAT ?GetAwardRandSoldier@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@H@Z
_TEXT	SEGMENT
_vClassType$ = -40					; size = 16
_value$513330 = -24					; size = 4
_value$513326 = -24					; size = 4
$T513305 = -24						; size = 4
_value$513243 = -24					; size = 4
$T513188 = -24						; size = 4
$T513194 = -20						; size = 4
_i$505908 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_iter$505920 = 12					; size = 4
_iSeed$ = 12						; size = 4
?GetAwardRandSoldier@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@H@Z PROC ; ioGlobalSoldierInfo::GetAwardRandSoldier, COMDAT
; _this$ = ecx

; 186  : {

  00000	6a 1c		 push	 28			; 0000001cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?GetAwardRandSoldier@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@H@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b d9		 mov	 ebx, ecx
  0000e	33 f6		 xor	 esi, esi

; 187  : 	CHARACTER kReturnInfo = m_DefCharInfo;

  00010	8d 43 14	 lea	 eax, DWORD PTR [ebx+20]
  00013	89 75 ec	 mov	 DWORD PTR $T513194[ebp], esi
  00016	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00019	50		 push	 eax
  0001a	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
  0001d	e8 00 00 00 00	 call	 ??0CHARACTER@@QAE@ABU0@@Z

; 219  : 				break;
; 220  : 			}
; 221  : 		}
; 222  : 	}
; 223  : 	return kReturnInfo;

  00022	33 ff		 xor	 edi, edi
  00024	47		 inc	 edi
  00025	89 7d ec	 mov	 DWORD PTR $T513194[ebp], edi
  00028	89 75 d8	 mov	 DWORD PTR _vClassType$[ebp], esi
  0002b	89 75 dc	 mov	 DWORD PTR _vClassType$[ebp+4], esi
  0002e	89 75 e0	 mov	 DWORD PTR _vClassType$[ebp+8], esi
  00031	6a 0a		 push	 10			; 0000000aH
  00033	8d 4d d8	 lea	 ecx, DWORD PTR _vClassType$[ebp]
  00036	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  00039	e8 00 00 00 00	 call	 ?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z ; std::vector<int,std::allocator<int> >::reserve
  0003e	e8 00 00 00 00	 call	 ?GetSingleton@ioClassPrice@@SAAAV1@XZ ; ioClassPrice::GetSingleton
  00043	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00046	2b 70 04	 sub	 esi, DWORD PTR [eax+4]
  00049	83 65 f0 00	 and	 DWORD PTR _i$505908[ebp], 0
  0004d	c1 fe 02	 sar	 esi, 2
  00050	85 f6		 test	 esi, esi
  00052	7e 2e		 jle	 SHORT $LN8@GetAwardRa
$LN10@GetAwardRa:

; 194  : 	{
; 195  : 		if( !g_ClassPrice.IsActiveClass( i ) )

  00054	ff 75 f0	 push	 DWORD PTR _i$505908[ebp]
  00057	e8 00 00 00 00	 call	 ?GetSingleton@ioClassPrice@@SAAAV1@XZ ; ioClassPrice::GetSingleton
  0005c	8b c8		 mov	 ecx, eax
  0005e	e8 00 00 00 00	 call	 ?IsActiveClass@ioClassPrice@@QAE_NH@Z ; ioClassPrice::IsActiveClass
  00063	84 c0		 test	 al, al
  00065	74 13		 je	 SHORT $LN9@GetAwardRa

; 196  : 			continue;
; 197  : 		vClassType.push_back( i + 1 );

  00067	8b 45 f0	 mov	 eax, DWORD PTR _i$505908[ebp]
  0006a	40		 inc	 eax
  0006b	89 45 e8	 mov	 DWORD PTR $T513188[ebp], eax
  0006e	8d 45 e8	 lea	 eax, DWORD PTR $T513188[ebp]
  00071	50		 push	 eax
  00072	8d 4d d8	 lea	 ecx, DWORD PTR _vClassType$[ebp]
  00075	e8 00 00 00 00	 call	 ?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z ; std::vector<int,std::allocator<int> >::push_back
$LN9@GetAwardRa:

; 188  : 	
; 189  : 	// Default
; 190  : 	IntVec vClassType;
; 191  : 	vClassType.reserve(10);
; 192  : 	int iSize = g_ClassPrice.MaxClassPrice();
; 193  : 	for (int i = 0; i < iSize ; i++)

  0007a	ff 45 f0	 inc	 DWORD PTR _i$505908[ebp]
  0007d	39 75 f0	 cmp	 DWORD PTR _i$505908[ebp], esi
  00080	7c d2		 jl	 SHORT $LN10@GetAwardRa
$LN8@GetAwardRa:

; 198  : 	}
; 199  : 	int iRand = iSeed%vClassType.size();

  00082	8b 4d dc	 mov	 ecx, DWORD PTR _vClassType$[ebp+4]
  00085	8b 75 d8	 mov	 esi, DWORD PTR _vClassType$[ebp]
  00088	8b 45 0c	 mov	 eax, DWORD PTR _iSeed$[ebp]
  0008b	2b ce		 sub	 ecx, esi
  0008d	c1 f9 02	 sar	 ecx, 2
  00090	33 d2		 xor	 edx, edx
  00092	f7 f1		 div	 ecx

; 200  : 	if( COMPARE( iRand , 0, (int) vClassType.size() ) )

  00094	85 d2		 test	 edx, edx
  00096	78 16		 js	 SHORT $LN36@GetAwardRa
  00098	3b d1		 cmp	 edx, ecx
  0009a	7d 12		 jge	 SHORT $LN36@GetAwardRa

; 201  : 		kReturnInfo.m_class_type = vClassType[iRand];

  0009c	8b 04 96	 mov	 eax, DWORD PTR [esi+edx*4]
  0009f	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000a2	89 45 e8	 mov	 DWORD PTR _value$513243[ebp], eax
  000a5	8d 45 e8	 lea	 eax, DWORD PTR _value$513243[ebp]
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool
$LN36@GetAwardRa:

; 202  : 	vClassType.clear();

  000ae	ff 75 dc	 push	 DWORD PTR _vClassType$[ebp+4]
  000b1	8d 45 e8	 lea	 eax, DWORD PTR $T513305[ebp]
  000b4	ff 75 d8	 push	 DWORD PTR _vClassType$[ebp]
  000b7	8d 4d d8	 lea	 ecx, DWORD PTR _vClassType$[ebp]
  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 ?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase

; 203  : 
; 204  : 	kReturnInfo.m_kindred		= 1;

  000c0	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  000c3	8d 45 e8	 lea	 eax, DWORD PTR _value$513326[ebp]
  000c6	50		 push	 eax
  000c7	8d 4e 30	 lea	 ecx, DWORD PTR [esi+48]
  000ca	89 7d e8	 mov	 DWORD PTR _value$513326[ebp], edi
  000cd	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 205  : 	kReturnInfo.m_sex			= 1;

  000d2	8d 45 e8	 lea	 eax, DWORD PTR _value$513330[ebp]
  000d5	50		 push	 eax
  000d6	8d 4e 60	 lea	 ecx, DWORD PTR [esi+96]
  000d9	89 7d e8	 mov	 DWORD PTR _value$513330[ebp], edi
  000dc	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 206  : 
; 207  : 	// 수집한 정보가 있으면 랜덤으로 선택
; 208  : 	if( !m_vAwardSoldierMap.empty() )

  000e1	8b 83 50 03 00
	00		 mov	 eax, DWORD PTR [ebx+848]
  000e7	85 c0		 test	 eax, eax
  000e9	74 3d		 je	 SHORT $LN2@GetAwardRa

; 209  : 	{
; 210  : 		int iSize   = m_vAwardSoldierMap.size();
; 211  : 		int iRandom = iSeed%max( iSize, 1 );

  000eb	3b c7		 cmp	 eax, edi
  000ed	0f 4f f8	 cmovg	 edi, eax
  000f0	8b 45 0c	 mov	 eax, DWORD PTR _iSeed$[ebp]
  000f3	99		 cdq
  000f4	f7 ff		 idiv	 edi

; 212  : 		SoldierDecMap::iterator iter;
; 213  : 		for( iter = m_vAwardSoldierMap.begin() ; iter != m_vAwardSoldierMap.end() ; ++iter )

  000f6	8b b3 4c 03 00
	00		 mov	 esi, DWORD PTR [ebx+844]
  000fc	8b 06		 mov	 eax, DWORD PTR [esi]
  000fe	89 45 0c	 mov	 DWORD PTR _iter$505920[ebp], eax
  00101	8b fa		 mov	 edi, edx
  00103	3b c6		 cmp	 eax, esi
  00105	74 21		 je	 SHORT $LN2@GetAwardRa
$LL88@GetAwardRa:

; 214  : 		{
; 215  : 			iRandom--;

  00107	4f		 dec	 edi

; 216  : 			if( iRandom < 0 )

  00108	78 0f		 js	 SHORT $LN118@GetAwardRa

; 212  : 		SoldierDecMap::iterator iter;
; 213  : 		for( iter = m_vAwardSoldierMap.begin() ; iter != m_vAwardSoldierMap.end() ; ++iter )

  0010a	8d 4d 0c	 lea	 ecx, DWORD PTR _iter$505920[ebp]
  0010d	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::operator++
  00112	39 75 0c	 cmp	 DWORD PTR _iter$505920[ebp], esi
  00115	75 f0		 jne	 SHORT $LL88@GetAwardRa

; 216  : 			if( iRandom < 0 )

  00117	eb 0f		 jmp	 SHORT $LN2@GetAwardRa
$LN118@GetAwardRa:

; 217  : 			{
; 218  : 				kReturnInfo = iter->second;

  00119	8b 45 0c	 mov	 eax, DWORD PTR _iter$505920[ebp]
  0011c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0011f	83 c0 10	 add	 eax, 16			; 00000010H
  00122	50		 push	 eax
  00123	e8 00 00 00 00	 call	 ??4CHARACTER@@QAEAAU0@ABU0@@Z ; CHARACTER::operator=
$LN2@GetAwardRa:

; 219  : 				break;
; 220  : 			}
; 221  : 		}
; 222  : 	}
; 223  : 	return kReturnInfo;

  00128	8d 4d d8	 lea	 ecx, DWORD PTR _vClassType$[ebp]
  0012b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0012f	e8 00 00 00 00	 call	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
  00134	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 224  : }

  00137	e8 00 00 00 00	 call	 __EH_epilog3
  0013c	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAwardRandSoldier@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@H@Z$0:
  00000	8b 45 ec	 mov	 eax, DWORD PTR $T513194[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0c 00 00
	00		 je	 $LN16@GetAwardRa
  0000c	83 65 ec fe	 and	 DWORD PTR $T513194[ebp], -2 ; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1CHARACTER@@QAE@XZ
$LN16@GetAwardRa:
  00018	c3		 ret	 0
__unwindfunclet$?GetAwardRandSoldier@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@H@Z$1:
  00019	8d 4d d8	 lea	 ecx, DWORD PTR _vClassType$[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__ehhandler$?GetAwardRandSoldier@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@H@Z:
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetAwardRandSoldier@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@H@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetAwardRandSoldier@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@H@Z ENDP ; ioGlobalSoldierInfo::GetAwardRandSoldier
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T513605 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >, COMDAT
; _this$ = ecx

; 790  : 		{	// destroy tree

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 791  : 		_Tidy();

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	8d 45 ec	 lea	 eax, DWORD PTR $T513605[ebp]
  0001f	50		 push	 eax
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::erase

; 792  : 		}

  00027	ff 76 04	 push	 DWORD PTR [esi+4]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	e8 00 00 00 00	 call	 __EH_epilog3
  00035	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >
__ehhandler$??1?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >
PUBLIC	??$insert@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::insert<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
; Function compile flags: /Ogsp
;	COMDAT ??$insert@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::insert<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >, COMDAT
; _this$ = ecx

; 753  : 		_Pairib insert(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 754  : 		{	// try to insert node with value _Val, favoring right side
; 755  : 		return (_Linsert(this->_Buynode(_STD forward<_Valty>(_Val)),
; 756  : 			false));

  00004	6a 00		 push	 0
  00006	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Buynode<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
  00010	50		 push	 eax
  00011	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  00014	8b ce		 mov	 ecx, esi
  00016	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Linsert
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	5e		 pop	 esi

; 757  : 		}

  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
??$insert@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::insert<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@U?$pair@$$CBKUCHARACTER@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@0@PAU?$pair@$$CBKUCHARACTER@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<unsigned long const ,CHARACTER> >,std::pair<unsigned long const ,CHARACTER> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@U?$pair@$$CBKUCHARACTER@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@0@PAU?$pair@$$CBKUCHARACTER@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@U?$pair@$$CBKUCHARACTER@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@0@PAU?$pair@$$CBKUCHARACTER@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<unsigned long const ,CHARACTER> >,std::pair<unsigned long const ,CHARACTER> >, COMDAT

; 286  : 	{	// destroy using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  00006	83 c1 04	 add	 ecx, 4

; 288  : 	}

  00009	5d		 pop	 ebp

; 287  : 	_Alval.destroy(_Pdest);

  0000a	e9 00 00 00 00	 jmp	 ??1CHARACTER@@QAE@XZ
??$_Dest_val@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@U?$pair@$$CBKUCHARACTER@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@0@PAU?$pair@$$CBKUCHARACTER@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<unsigned long const ,CHARACTER> >,std::pair<unsigned long const ,CHARACTER> >
_TEXT	ENDS
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Insert
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1631 : 		{	// add node with value next to _Wherenode, to left if _Addleft

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 1632 : 		if (max_size() - 1 <= this->_Mysize)

  00008	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0000b	3d e0 1b 51 00	 cmp	 eax, 5315552		; 00511be0H
  00010	72 1e		 jb	 SHORT $LN17@Insert@2

; 1633 : 			{	// tree would get too big, fail
; 1634 : 			_Dest_val(this->_Alval,
; 1635 : 				_STD addressof(this->_Myval(_Newnode)));

  00012	8b 75 14	 mov	 esi, DWORD PTR __Newnode$[ebp]
  00015	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00018	e8 00 00 00 00	 call	 ??1CHARACTER@@QAE@XZ

; 1636 : 
; 1637 : 			this->_Alnod.deallocate(_Newnode, 1);

  0001d	56		 push	 esi
  0001e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 1638 : 
; 1639 : 			_Xlength_error("map/set<T> too long");

  00023	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN197@Insert@2:
$LN17@Insert@2:

; 1640 : 			}
; 1641 : 		++this->_Mysize;
; 1642 : 		_Newnode->_Parent = _Wherenode;

  00030	8b 5d 14	 mov	 ebx, DWORD PTR __Newnode$[ebp]
  00033	40		 inc	 eax
  00034	89 47 08	 mov	 DWORD PTR [edi+8], eax
  00037	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0003a	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 1643 : 
; 1644 : 		if (_Wherenode == this->_Myhead)

  0003d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00040	3b c1		 cmp	 eax, ecx
  00042	75 10		 jne	 SHORT $LN16@Insert@2

; 1645 : 			{	// first node in tree, just set head values
; 1646 : 			_Root() = _Newnode;

  00044	89 59 04	 mov	 DWORD PTR [ecx+4], ebx

; 1647 : 			_Lmost() = _Newnode;

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	89 18		 mov	 DWORD PTR [eax], ebx

; 1648 : 			_Rmost() = _Newnode;

  0004c	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004f	89 58 08	 mov	 DWORD PTR [eax+8], ebx
  00052	eb 21		 jmp	 SHORT $LN11@Insert@2
$LN16@Insert@2:

; 1649 : 			}
; 1650 : 		else if (_Addleft)

  00054	80 7d 0c 00	 cmp	 BYTE PTR __Addleft$[ebp], 0
  00058	74 0d		 je	 SHORT $LN14@Insert@2

; 1651 : 			{	// add to left of _Wherenode
; 1652 : 			this->_Left(_Wherenode) = _Newnode;

  0005a	89 18		 mov	 DWORD PTR [eax], ebx

; 1653 : 			if (_Wherenode == _Lmost())

  0005c	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0005f	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00061	75 12		 jne	 SHORT $LN11@Insert@2

; 1654 : 				_Lmost() = _Newnode;

  00063	89 19		 mov	 DWORD PTR [ecx], ebx

; 1655 : 			}
; 1656 : 		else

  00065	eb 0e		 jmp	 SHORT $LN11@Insert@2
$LN14@Insert@2:

; 1657 : 			{	// add to right of _Wherenode
; 1658 : 			this->_Right(_Wherenode) = _Newnode;

  00067	89 58 08	 mov	 DWORD PTR [eax+8], ebx

; 1659 : 			if (_Wherenode == _Rmost())

  0006a	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0006d	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00070	75 03		 jne	 SHORT $LN11@Insert@2

; 1660 : 				_Rmost() = _Newnode;

  00072	89 59 08	 mov	 DWORD PTR [ecx+8], ebx
$LN11@Insert@2:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  00075	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00078	8b f3		 mov	 esi, ebx
  0007a	e9 ae 00 00 00	 jmp	 $LN195@Insert@2
$LL10@Insert@2:

; 1665 : 			if (this->_Parent(_Pnode)
; 1666 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

  0007f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00082	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00085	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00087	75 41		 jne	 SHORT $LN8@Insert@2

; 1667 : 				{	// fixup red-red in left subtree
; 1668 : 				_Wherenode =
; 1669 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

  00089	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 1670 : 				if (this->_Color(_Wherenode) == this->_Red)

  0008c	80 b8 34 03 00
	00 00		 cmp	 BYTE PTR [eax+820], 0

; 1671 : 					{	// parent has two red children, blacken both
; 1672 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;
; 1673 : 					this->_Color(_Wherenode) = this->_Black;
; 1674 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1675 : 						= this->_Red;
; 1676 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));
; 1677 : 					}
; 1678 : 				else

  00093	74 40		 je	 SHORT $LN196@Insert@2

; 1679 : 					{	// parent has red and black children
; 1680 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

  00095	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00098	75 0a		 jne	 SHORT $LN5@Insert@2

; 1681 : 						{	// rotate right child to left
; 1682 : 						_Pnode = this->_Parent(_Pnode);

  0009a	8b f1		 mov	 esi, ecx

; 1683 : 						_Lrotate(_Pnode);

  0009c	56		 push	 esi
  0009d	8b cf		 mov	 ecx, edi
  0009f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Lrotate
$LN5@Insert@2:

; 1684 : 						}
; 1685 : 					this->_Color(this->_Parent(_Pnode)) =
; 1686 : 						this->_Black;	// propagate red up

  000a4	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a7	c6 80 34 03 00
	00 01		 mov	 BYTE PTR [eax+820], 1

; 1687 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1688 : 						this->_Red;

  000ae	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b1	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000b4	c6 80 34 03 00
	00 00		 mov	 BYTE PTR [eax+820], 0

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

  000bb	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000be	ff 70 04	 push	 DWORD PTR [eax+4]
  000c1	8b cf		 mov	 ecx, edi
  000c3	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Rrotate

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  000c8	eb 60		 jmp	 SHORT $LN2@Insert@2
$LN8@Insert@2:

; 1693 : 				{	// fixup red-red in right subtree
; 1694 : 				_Wherenode =
; 1695 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

  000ca	8b 00		 mov	 eax, DWORD PTR [eax]

; 1696 : 				if (this->_Color(_Wherenode) == this->_Red)

  000cc	80 b8 34 03 00
	00 00		 cmp	 BYTE PTR [eax+820], 0
  000d3	75 23		 jne	 SHORT $LN3@Insert@2
$LN196@Insert@2:

; 1697 : 					{	// parent has two red children, blacken both
; 1698 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  000d5	c6 81 34 03 00
	00 01		 mov	 BYTE PTR [ecx+820], 1

; 1699 : 					this->_Color(_Wherenode) = this->_Black;

  000dc	c6 80 34 03 00
	00 01		 mov	 BYTE PTR [eax+820], 1

; 1700 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1701 : 						this->_Red;

  000e3	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000e6	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000e9	c6 80 34 03 00
	00 00		 mov	 BYTE PTR [eax+820], 0

; 1702 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  000f0	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000f3	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 1703 : 					}
; 1704 : 				else

  000f6	eb 32		 jmp	 SHORT $LN2@Insert@2
$LN3@Insert@2:

; 1705 : 					{	// parent has red and black children
; 1706 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

  000f8	3b 31		 cmp	 esi, DWORD PTR [ecx]
  000fa	75 0a		 jne	 SHORT $LN1@Insert@2

; 1707 : 						{	// rotate left child to right
; 1708 : 						_Pnode = this->_Parent(_Pnode);

  000fc	8b f1		 mov	 esi, ecx

; 1709 : 						_Rrotate(_Pnode);

  000fe	56		 push	 esi
  000ff	8b cf		 mov	 ecx, edi
  00101	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Rrotate
$LN1@Insert@2:

; 1710 : 						}
; 1711 : 					this->_Color(this->_Parent(_Pnode)) =
; 1712 : 						this->_Black;	// propagate red up

  00106	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00109	c6 80 34 03 00
	00 01		 mov	 BYTE PTR [eax+820], 1

; 1713 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1714 : 						this->_Red;

  00110	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00113	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00116	c6 80 34 03 00
	00 00		 mov	 BYTE PTR [eax+820], 0

; 1715 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

  0011d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00120	ff 70 04	 push	 DWORD PTR [eax+4]
  00123	8b cf		 mov	 ecx, edi
  00125	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Lrotate
$LN2@Insert@2:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  0012a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
$LN195@Insert@2:
  0012d	80 b8 34 03 00
	00 00		 cmp	 BYTE PTR [eax+820], 0
  00134	0f 84 45 ff ff
	ff		 je	 $LL10@Insert@2

; 1716 : 					}
; 1717 : 				}
; 1718 : 
; 1719 : 		this->_Color(_Root()) = this->_Black;	// root is always black

  0013a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0013d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00140	5f		 pop	 edi
  00141	c6 80 34 03 00
	00 01		 mov	 BYTE PTR [eax+820], 1

; 1720 : 		return (iterator(_Newnode, this));

  00148	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0014b	5e		 pop	 esi
  0014c	89 18		 mov	 DWORD PTR [eax], ebx
  0014e	5b		 pop	 ebx

; 1721 : 		}

  0014f	5d		 pop	 ebp
  00150	c2 10 00	 ret	 16			; 00000010H
$LN194@Insert@2:
?_Insert@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@U?$pair@$$CBKUCHARACTER@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@0@PAU?$pair@$$CBKUCHARACTER@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<unsigned long const ,CHARACTER> >,std::pair<unsigned long const ,CHARACTER>,std::pair<unsigned long const ,CHARACTER> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@U?$pair@$$CBKUCHARACTER@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@0@PAU?$pair@$$CBKUCHARACTER@@@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@U?$pair@$$CBKUCHARACTER@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@0@PAU?$pair@$$CBKUCHARACTER@@@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::pair<unsigned long const ,CHARACTER> >,std::pair<unsigned long const ,CHARACTER>,std::pair<unsigned long const ,CHARACTER> >, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  0000c	e8 00 00 00 00	 call	 ?construct@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAEXPAU?$pair@$$CBKUCHARACTER@@@2@$$QAU32@@Z ; std::allocator<std::pair<unsigned long const ,CHARACTER> >::construct

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@U?$pair@$$CBKUCHARACTER@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@0@PAU?$pair@$$CBKUCHARACTER@@@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::pair<unsigned long const ,CHARACTER> >,std::pair<unsigned long const ,CHARACTER>,std::pair<unsigned long const ,CHARACTER> >
_TEXT	ENDS
PUBLIC	??1?$map@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@@std@@QAE@XZ ; std::map<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> > >::~map<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> > >
; Function compile flags: /Ogsp
;	COMDAT ??1?$map@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@@std@@QAE@XZ PROC ; std::map<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> > >::~map<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> > >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >
??1?$map@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@@std@@QAE@XZ ENDP ; std::map<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> > >::~map<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> > >
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?SyncSoldierItem@ioGlobalSoldierInfo@@QAEXKPBUITEM_DATA@@@Z ; ioGlobalSoldierInfo::SyncSoldierItem
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioglobalsoldierinfo.cpp
;	COMDAT ?SyncSoldierItem@ioGlobalSoldierInfo@@QAEXKPBUITEM_DATA@@@Z
_TEXT	SEGMENT
$T505984 = -140						; size = 52
$T514049 = -88						; size = 8
_iter$505960 = -84					; size = 4
_kItem$505977 = -80					; size = 20
_kItem$505969 = -80					; size = 20
_this$GSCopy$ = -60					; size = 4
tv321 = -56						; size = 4
tv144 = -56						; size = 4
_kItemCode$505972 = -52					; size = 48
__$ArrayPad$ = -4					; size = 4
_dwCharIndex$ = 8					; size = 4
_pItem$ = 12						; size = 4
?SyncSoldierItem@ioGlobalSoldierInfo@@QAEXKPBUITEM_DATA@@@Z PROC ; ioGlobalSoldierInfo::SyncSoldierItem, COMDAT
; _this$ = ecx

; 261  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 262  : 	if( dwCharIndex == 0 ) 

  00013	83 7d 08 00	 cmp	 DWORD PTR _dwCharIndex$[ebp], 0
  00017	56		 push	 esi
  00018	8b f1		 mov	 esi, ecx

; 271  : 			for(int i = 0;i < MAX_INVENTORY;i++)

  0001a	89 75 c4	 mov	 DWORD PTR _this$GSCopy$[ebp], esi
  0001d	0f 84 f1 00 00
	00		 je	 $LN50@SyncSoldie

; 263  : 		return;
; 264  : 
; 265  : 	{
; 266  : 		// 용병 아이템 수집
; 267  : 		SoldierItemMap::iterator iter = m_vSoldierItemMap.find( dwCharIndex );

  00023	53		 push	 ebx
  00024	57		 push	 edi
  00025	8d 45 08	 lea	 eax, DWORD PTR _dwCharIndex$[ebp]
  00028	50		 push	 eax
  00029	8d 45 ac	 lea	 eax, DWORD PTR _iter$505960[ebp]
  0002c	8d 8e 38 03 00
	00		 lea	 ecx, DWORD PTR [esi+824]
  00032	50		 push	 eax
  00033	89 4d c8	 mov	 DWORD PTR tv321[ebp], ecx
  00036	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::find

; 268  : 		if( iter != m_vSoldierItemMap.end() )

  0003b	8b 45 ac	 mov	 eax, DWORD PTR _iter$505960[ebp]

; 269  : 		{
; 270  : 			ItemCode &kItemCode = iter->second;

  0003e	8b 5d 0c	 mov	 ebx, DWORD PTR _pItem$[ebp]
  00041	3b 86 3c 03 00
	00		 cmp	 eax, DWORD PTR [esi+828]
  00047	74 42		 je	 SHORT $LN10@SyncSoldie
  00049	8d 50 30	 lea	 edx, DWORD PTR [eax+48]
  0004c	c7 45 c8 04 00
	00 00		 mov	 DWORD PTR tv144[ebp], 4
$LL9@SyncSoldie:

; 272  : 			{
; 273  : 				ITEM_DATA kItem = pItem[i];

  00053	6a 05		 push	 5
  00055	59		 pop	 ecx
  00056	8b f3		 mov	 esi, ebx
  00058	8d 7d b0	 lea	 edi, DWORD PTR _kItem$505969[ebp]
  0005b	f3 a5		 rep movsd

; 274  : 				if( IsExceptionSyncItem( kItem.m_item_code ) ) continue;

  0005d	8b 75 b0	 mov	 esi, DWORD PTR _kItem$505969[ebp]
  00060	8b 4d c4	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00063	56		 push	 esi
  00064	e8 00 00 00 00	 call	 ?IsExceptionSyncItem@ioGlobalSoldierInfo@@IAE_NK@Z ; ioGlobalSoldierInfo::IsExceptionSyncItem
  00069	84 c0		 test	 al, al
  0006b	75 0e		 jne	 SHORT $LN8@SyncSoldie

; 275  : 
; 276  : 				kItemCode.m_dwItemCode[i] = kItem.m_item_code;
; 277  : 				kItemCode.m_dwItemMaleCustom[i] = kItem.m_item_male_custom;

  0006d	8b 45 bc	 mov	 eax, DWORD PTR _kItem$505969[ebp+12]
  00070	89 42 f0	 mov	 DWORD PTR [edx-16], eax

; 278  : 				kItemCode.m_dwItemFemaleCustom[i] = kItem.m_item_female_custom;

  00073	8b 45 c0	 mov	 eax, DWORD PTR _kItem$505969[ebp+16]
  00076	89 72 e0	 mov	 DWORD PTR [edx-32], esi
  00079	89 02		 mov	 DWORD PTR [edx], eax
$LN8@SyncSoldie:

; 271  : 			for(int i = 0;i < MAX_INVENTORY;i++)

  0007b	83 c3 14	 add	 ebx, 20			; 00000014H
  0007e	83 c2 04	 add	 edx, 4
  00081	ff 4d c8	 dec	 DWORD PTR tv144[ebp]
  00084	75 cd		 jne	 SHORT $LL9@SyncSoldie

; 279  : 			}
; 280  : 		}
; 281  : 		else

  00086	e9 87 00 00 00	 jmp	 $LN58@SyncSoldie
$LN10@SyncSoldie:

; 282  : 		{
; 283  : 			ItemCode kItemCode;

  0008b	33 c0		 xor	 eax, eax
  0008d	8d 7d cc	 lea	 edi, DWORD PTR _kItemCode$505972[ebp]
  00090	ab		 stosd
  00091	ab		 stosd
  00092	ab		 stosd
  00093	ab		 stosd
  00094	33 c0		 xor	 eax, eax
  00096	8d 7d dc	 lea	 edi, DWORD PTR _kItemCode$505972[ebp+16]
  00099	ab		 stosd
  0009a	ab		 stosd
  0009b	ab		 stosd
  0009c	ab		 stosd
  0009d	33 c0		 xor	 eax, eax
  0009f	8d 7d ec	 lea	 edi, DWORD PTR _kItemCode$505972[ebp+32]
  000a2	ab		 stosd
  000a3	ab		 stosd
  000a4	ab		 stosd
  000a5	ab		 stosd

; 284  : 			for(int i = 0;i < MAX_INVENTORY;i++)

  000a6	33 d2		 xor	 edx, edx
$LL4@SyncSoldie:

; 285  : 			{
; 286  : 				ITEM_DATA kItem = pItem[i];

  000a8	6a 05		 push	 5
  000aa	59		 pop	 ecx
  000ab	8b f3		 mov	 esi, ebx
  000ad	8d 7d b0	 lea	 edi, DWORD PTR _kItem$505977[ebp]
  000b0	f3 a5		 rep movsd

; 287  : 				if( IsExceptionSyncItem( kItem.m_item_code ) ) continue;

  000b2	8b 75 b0	 mov	 esi, DWORD PTR _kItem$505977[ebp]
  000b5	8b 4d c4	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  000b8	56		 push	 esi
  000b9	e8 00 00 00 00	 call	 ?IsExceptionSyncItem@ioGlobalSoldierInfo@@IAE_NK@Z ; ioGlobalSoldierInfo::IsExceptionSyncItem
  000be	84 c0		 test	 al, al
  000c0	75 12		 jne	 SHORT $LN3@SyncSoldie

; 288  : 
; 289  : 				kItemCode.m_dwItemCode[i] = kItem.m_item_code;
; 290  : 				kItemCode.m_dwItemMaleCustom[i] = kItem.m_item_male_custom;

  000c2	8b 45 bc	 mov	 eax, DWORD PTR _kItem$505977[ebp+12]
  000c5	89 74 95 cc	 mov	 DWORD PTR _kItemCode$505972[ebp+edx*4], esi
  000c9	89 44 95 dc	 mov	 DWORD PTR _kItemCode$505972[ebp+edx*4+16], eax

; 291  : 				kItemCode.m_dwItemFemaleCustom[i] = kItem.m_item_female_custom;

  000cd	8b 45 c0	 mov	 eax, DWORD PTR _kItem$505977[ebp+16]
  000d0	89 44 95 ec	 mov	 DWORD PTR _kItemCode$505972[ebp+edx*4+32], eax
$LN3@SyncSoldie:

; 284  : 			for(int i = 0;i < MAX_INVENTORY;i++)

  000d4	42		 inc	 edx
  000d5	83 c3 14	 add	 ebx, 20			; 00000014H
  000d8	83 fa 04	 cmp	 edx, 4
  000db	7c cb		 jl	 SHORT $LL4@SyncSoldie

; 292  : 			}
; 293  : 			m_vSoldierItemMap.insert( SoldierItemMap::value_type( dwCharIndex, kItemCode ) );

  000dd	8b 45 08	 mov	 eax, DWORD PTR _dwCharIndex$[ebp]
  000e0	6a 0c		 push	 12			; 0000000cH
  000e2	59		 pop	 ecx
  000e3	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T505984[ebp], eax
  000e9	8d 75 cc	 lea	 esi, DWORD PTR _kItemCode$505972[ebp]
  000ec	8d bd 78 ff ff
	ff		 lea	 edi, DWORD PTR $T505984[ebp+4]
  000f2	6a 00		 push	 0
  000f4	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR $T505984[ebp]
  000fa	f3 a5		 rep movsd
  000fc	8b 4d c8	 mov	 ecx, DWORD PTR tv321[ebp]
  000ff	50		 push	 eax
  00100	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Buynode<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >
  00105	8b 4d c8	 mov	 ecx, DWORD PTR tv321[ebp]
  00108	50		 push	 eax
  00109	8d 45 a8	 lea	 eax, DWORD PTR $T514049[ebp]
  0010c	50		 push	 eax
  0010d	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Linsert
$LN58@SyncSoldie:
  00112	5f		 pop	 edi
  00113	5b		 pop	 ebx
$LN50@SyncSoldie:

; 294  : 		}
; 295  : 	}
; 296  : }

  00114	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00117	33 cd		 xor	 ecx, ebp
  00119	5e		 pop	 esi
  0011a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011f	c9		 leave
  00120	c2 08 00	 ret	 8
?SyncSoldierItem@ioGlobalSoldierInfo@@QAEXKPBUITEM_DATA@@@Z ENDP ; ioGlobalSoldierInfo::SyncSoldierItem
_TEXT	ENDS
PUBLIC	??0?$map@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@@std@@QAE@XZ ; std::map<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> > >::map<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$map@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
$T514184 = -8						; size = 4
$T514186 = -8						; size = 4
$T514173 = -1						; size = 1
??0?$map@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@@std@@QAE@XZ PROC ; std::map<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> > >::map<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> > >, COMDAT
; _this$ = ecx

; 106  : 		{	// construct empty map from defaults

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	51		 push	 ecx
  00007	89 65 f8	 mov	 DWORD PTR $T514186[ebp], esp
  0000a	8d 45 ff	 lea	 eax, DWORD PTR $T514173[ebp]
  0000d	89 65 f8	 mov	 DWORD PTR $T514184[ebp], esp
  00010	50		 push	 eax
  00011	8b f1		 mov	 esi, ecx
  00013	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >

; 107  : 		}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c9		 leave
  0001c	c3		 ret	 0
??0?$map@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@@std@@QAE@XZ ENDP ; std::map<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> > >::map<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> > >
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Erase
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1610 : 		{	// free entire subtree, recursively

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1611 : 		for (_Nodeptr _Pnode = _Rootnode;

  00006	8b 7d 08	 mov	 edi, DWORD PTR __Rootnode$[ebp]

; 1612 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

  00009	80 bf 35 03 00
	00 00		 cmp	 BYTE PTR [edi+821], 0
  00010	8b d9		 mov	 ebx, ecx
  00012	8b f7		 mov	 esi, edi
  00014	75 26		 jne	 SHORT $LN1@Erase@2
$LL3@Erase@2:

; 1613 : 			{	// free subtrees, then node
; 1614 : 			_Erase(this->_Right(_Pnode));

  00016	ff 76 08	 push	 DWORD PTR [esi+8]
  00019	8b cb		 mov	 ecx, ebx
  0001b	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Erase

; 1615 : 			_Pnode = this->_Left(_Pnode);

  00020	8b 36		 mov	 esi, DWORD PTR [esi]

; 1616 : 			_Dest_val(this->_Alval,
; 1617 : 				_STD addressof(this->_Myval(_Rootnode)));

  00022	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00025	e8 00 00 00 00	 call	 ??1CHARACTER@@QAE@XZ

; 1618 : 
; 1619 : 			this->_Alnod.deallocate(_Rootnode, 1);

  0002a	57		 push	 edi
  0002b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00030	80 be 35 03 00
	00 00		 cmp	 BYTE PTR [esi+821], 0
  00037	59		 pop	 ecx
  00038	8b fe		 mov	 edi, esi
  0003a	74 da		 je	 SHORT $LL3@Erase@2
$LN1@Erase@2:
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx

; 1620 : 			}
; 1621 : 		}

  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Tmp$514502 = -1					; size = 1
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::erase, COMDAT
; _this$ = ecx

; 1195 : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	53		 push	 ebx
  00006	56		 push	 esi
  00007	57		 push	 edi

; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))
; 1198 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1199 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1200 : 		++_Where;	// save successor iterator for return
; 1201 : 		_Orphan_ptr(*this, _Erasednode);
; 1202 : 
; 1203 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1204 : 		if (this->_Isnil(_Where._Mynode()))

  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Where$[ebp]
  0000b	80 bf 35 03 00
	00 00		 cmp	 BYTE PTR [edi+821], 0
  00012	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00015	74 0b		 je	 SHORT $LN40@erase@4

; 1205 : 			_Xout_of_range("invalid map/set<T> iterator");

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN325@erase@4:
$LN40@erase@4:

; 1206 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1207 : 		++_Where;	// save successor iterator for return

  00022	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00025	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::operator++

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1211 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1212 : 		_Nodeptr _Pnode = _Erasednode;
; 1213 : 
; 1214 : 		if (this->_Isnil(this->_Left(_Pnode)))

  0002a	8b 17		 mov	 edx, DWORD PTR [edi]
  0002c	80 ba 35 03 00
	00 00		 cmp	 BYTE PTR [edx+821], 0
  00033	74 05		 je	 SHORT $LN39@erase@4

; 1215 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

  00035	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]

; 1216 : 		else if (this->_Isnil(this->_Right(_Pnode)))

  00038	eb 1e		 jmp	 SHORT $LN318@erase@4
$LN39@erase@4:
  0003a	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0003d	80 b8 35 03 00
	00 00		 cmp	 BYTE PTR [eax+821], 0
  00044	74 04		 je	 SHORT $LN37@erase@4

; 1217 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

  00046	8b da		 mov	 ebx, edx

; 1218 : 		else

  00048	eb 0e		 jmp	 SHORT $LN318@erase@4
$LN37@erase@4:

; 1219 : 			{	// two subtrees, must lift successor node to replace erased
; 1220 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

  0004a	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 1221 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

  0004d	8b 58 08	 mov	 ebx, DWORD PTR [eax+8]

; 1222 : 			}
; 1223 : 
; 1224 : 		if (_Pnode == _Erasednode)

  00050	3b c7		 cmp	 eax, edi
  00052	0f 85 81 00 00
	00		 jne	 $LN35@erase@4
$LN318@erase@4:

; 1225 : 			{	// at most one subtree, relink it
; 1226 : 			_Fixnodeparent = this->_Parent(_Erasednode);
; 1227 : 			if (!this->_Isnil(_Fixnode))

  00058	80 bb 35 03 00
	00 00		 cmp	 BYTE PTR [ebx+821], 0
  0005f	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00062	75 03		 jne	 SHORT $LN34@erase@4

; 1228 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

  00064	89 73 04	 mov	 DWORD PTR [ebx+4], esi
$LN34@erase@4:

; 1229 : 
; 1230 : 			if (_Root() == _Erasednode)

  00067	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0006d	39 78 04	 cmp	 DWORD PTR [eax+4], edi
  00070	75 05		 jne	 SHORT $LN33@erase@4

; 1231 : 				_Root() = _Fixnode;	// link down from root

  00072	89 58 04	 mov	 DWORD PTR [eax+4], ebx

; 1232 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

  00075	eb 0b		 jmp	 SHORT $LN30@erase@4
$LN33@erase@4:
  00077	39 3e		 cmp	 DWORD PTR [esi], edi
  00079	75 04		 jne	 SHORT $LN31@erase@4

; 1233 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  0007b	89 1e		 mov	 DWORD PTR [esi], ebx

; 1234 : 			else

  0007d	eb 03		 jmp	 SHORT $LN30@erase@4
$LN31@erase@4:

; 1235 : 				this->_Right(_Fixnodeparent) =
; 1236 : 					_Fixnode;	// link down to right

  0007f	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
$LN30@erase@4:

; 1237 : 
; 1238 : 			if (_Lmost() == _Erasednode)

  00082	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00085	39 38		 cmp	 DWORD PTR [eax], edi
  00087	75 25		 jne	 SHORT $LN29@erase@4

; 1239 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1240 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1241 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

  00089	80 bb 35 03 00
	00 00		 cmp	 BYTE PTR [ebx+821], 0
  00090	74 04		 je	 SHORT $LN43@erase@4
  00092	8b d6		 mov	 edx, esi
  00094	eb 13		 jmp	 SHORT $LN97@erase@4
$LN43@erase@4:
  00096	8b 03		 mov	 eax, DWORD PTR [ebx]
  00098	8b d3		 mov	 edx, ebx
  0009a	eb 04		 jmp	 SHORT $LN320@erase@4
$LL98@erase@4:
  0009c	8b d0		 mov	 edx, eax
  0009e	8b 02		 mov	 eax, DWORD PTR [edx]
$LN320@erase@4:
  000a0	80 b8 35 03 00
	00 00		 cmp	 BYTE PTR [eax+821], 0
  000a7	74 f3		 je	 SHORT $LL98@erase@4
$LN97@erase@4:
  000a9	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000ac	89 10		 mov	 DWORD PTR [eax], edx
$LN29@erase@4:

; 1242 : 
; 1243 : 			if (_Rmost() == _Erasednode)

  000ae	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000b1	39 78 08	 cmp	 DWORD PTR [eax+8], edi
  000b4	0f 85 91 00 00
	00		 jne	 $LN175@erase@4

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  000ba	80 bb 35 03 00
	00 00		 cmp	 BYTE PTR [ebx+821], 0
  000c1	74 04		 je	 SHORT $LN45@erase@4
  000c3	8b c6		 mov	 eax, esi
  000c5	eb 0a		 jmp	 SHORT $LN46@erase@4
$LN45@erase@4:
  000c7	53		 push	 ebx
  000c8	e8 00 00 00 00	 call	 ?_Max@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Max
  000cd	59		 pop	 ecx
  000ce	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
$LN46@erase@4:
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1247 : 			}
; 1248 : 		else

  000d7	eb 72		 jmp	 SHORT $LN175@erase@4
$LN35@erase@4:

; 1249 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1250 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1251 : 				_Pnode;	// link left up

  000d9	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1252 : 			this->_Left(_Pnode) =
; 1253 : 				this->_Left(_Erasednode);	// link successor down

  000dc	8b 17		 mov	 edx, DWORD PTR [edi]
  000de	89 10		 mov	 DWORD PTR [eax], edx

; 1254 : 
; 1255 : 			if (_Pnode == this->_Right(_Erasednode))

  000e0	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  000e3	75 04		 jne	 SHORT $LN26@erase@4

; 1256 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  000e5	8b f0		 mov	 esi, eax

; 1257 : 			else

  000e7	eb 1d		 jmp	 SHORT $LN25@erase@4
$LN26@erase@4:

; 1258 : 				{	// successor further down, link in place of erased
; 1259 : 				_Fixnodeparent =
; 1260 : 					this->_Parent(_Pnode);	// parent is successor's
; 1261 : 				if (!this->_Isnil(_Fixnode))

  000e9	80 bb 35 03 00
	00 00		 cmp	 BYTE PTR [ebx+821], 0
  000f0	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000f3	75 03		 jne	 SHORT $LN24@erase@4

; 1262 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  000f5	89 73 04	 mov	 DWORD PTR [ebx+4], esi
$LN24@erase@4:

; 1263 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  000f8	89 1e		 mov	 DWORD PTR [esi], ebx

; 1264 : 				this->_Right(_Pnode) =
; 1265 : 					this->_Right(_Erasednode);	// link next down

  000fa	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  000fd	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1266 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1267 : 					_Pnode;	// right up

  00100	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00103	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN25@erase@4:

; 1268 : 				}
; 1269 : 
; 1270 : 			if (_Root() == _Erasednode)

  00106	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00109	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0010c	39 79 04	 cmp	 DWORD PTR [ecx+4], edi
  0010f	75 05		 jne	 SHORT $LN23@erase@4

; 1271 : 				_Root() = _Pnode;	// link down from root

  00111	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1272 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

  00114	eb 0e		 jmp	 SHORT $LN20@erase@4
$LN23@erase@4:
  00116	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00119	39 39		 cmp	 DWORD PTR [ecx], edi
  0011b	75 04		 jne	 SHORT $LN21@erase@4

; 1273 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1274 : 					_Pnode;	// link down to left

  0011d	89 01		 mov	 DWORD PTR [ecx], eax

; 1275 : 			else

  0011f	eb 03		 jmp	 SHORT $LN20@erase@4
$LN21@erase@4:

; 1276 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1277 : 					_Pnode;	// link down to right

  00121	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN20@erase@4:

; 1278 : 
; 1279 : 			this->_Parent(_Pnode) =
; 1280 : 				this->_Parent(_Erasednode);	// link successor up

  00124	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00127	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1281 : 			_STD swap(this->_Color(_Pnode),
; 1282 : 				this->_Color(_Erasednode));	// recolor it

  0012a	8a 90 34 03 00
	00		 mov	 dl, BYTE PTR [eax+820]
  00130	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00133	88 55 ff	 mov	 BYTE PTR __Tmp$514502[ebp], dl
  00136	8a 97 34 03 00
	00		 mov	 dl, BYTE PTR [edi+820]
  0013c	88 90 34 03 00
	00		 mov	 BYTE PTR [eax+820], dl
  00142	8a 45 ff	 mov	 al, BYTE PTR __Tmp$514502[ebp]
  00145	88 87 34 03 00
	00		 mov	 BYTE PTR [edi+820], al
$LN175@erase@4:

; 1283 : 			}
; 1284 : 
; 1285 : 		if (this->_Color(_Erasednode) == this->_Black)

  0014b	80 bf 34 03 00
	00 01		 cmp	 BYTE PTR [edi+820], 1
  00152	0f 85 66 01 00
	00		 jne	 $LN19@erase@4

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00158	e9 03 01 00 00	 jmp	 $LN322@erase@4
$LL18@erase@4:
  0015d	80 bb 34 03 00
	00 01		 cmp	 BYTE PTR [ebx+820], 1
  00164	0f 85 4d 01 00
	00		 jne	 $LN16@erase@4

; 1290 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

  0016a	8b 06		 mov	 eax, DWORD PTR [esi]
  0016c	3b d8		 cmp	 ebx, eax
  0016e	0f 85 9e 00 00
	00		 jne	 $LN15@erase@4

; 1291 : 					{	// fixup left subtree
; 1292 : 					_Pnode = this->_Right(_Fixnodeparent);

  00174	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 1293 : 					if (this->_Color(_Pnode) == this->_Red)

  00177	80 b8 34 03 00
	00 00		 cmp	 BYTE PTR [eax+820], 0
  0017e	75 1a		 jne	 SHORT $LN14@erase@4

; 1294 : 						{	// rotate red up from right subtree
; 1295 : 						this->_Color(_Pnode) = this->_Black;

  00180	c6 80 34 03 00
	00 01		 mov	 BYTE PTR [eax+820], 1

; 1296 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1297 : 						_Lrotate(_Fixnodeparent);

  00187	56		 push	 esi
  00188	c6 86 34 03 00
	00 00		 mov	 BYTE PTR [esi+820], 0
  0018f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Lrotate

; 1298 : 						_Pnode = this->_Right(_Fixnodeparent);

  00194	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00197	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
$LN14@erase@4:

; 1299 : 						}
; 1300 : 
; 1301 : 					if (this->_Isnil(_Pnode))

  0019a	80 b8 35 03 00
	00 00		 cmp	 BYTE PTR [eax+821], 0

; 1302 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1303 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

  001a1	0f 85 b4 00 00
	00		 jne	 $LN323@erase@4

; 1304 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

  001a7	8b 10		 mov	 edx, DWORD PTR [eax]
  001a9	80 ba 34 03 00
	00 01		 cmp	 BYTE PTR [edx+820], 1
  001b0	75 10		 jne	 SHORT $LN11@erase@4
  001b2	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  001b5	80 ba 34 03 00
	00 01		 cmp	 BYTE PTR [edx+820], 1
  001bc	0f 84 92 00 00
	00		 je	 $LN324@erase@4
$LN11@erase@4:

; 1305 : 						{	// redden right subtree with black children
; 1306 : 						this->_Color(_Pnode) = this->_Red;
; 1307 : 						_Fixnode = _Fixnodeparent;
; 1308 : 						}
; 1309 : 					else
; 1310 : 						{	// must rearrange right subtree
; 1311 : 						if (this->_Color(this->_Right(_Pnode))
; 1312 : 							== this->_Black)

  001c2	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  001c5	80 ba 34 03 00
	00 01		 cmp	 BYTE PTR [edx+820], 1
  001cc	75 19		 jne	 SHORT $LN9@erase@4

; 1313 : 							{	// rotate red up from left sub-subtree
; 1314 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

  001ce	8b 10		 mov	 edx, DWORD PTR [eax]
  001d0	c6 82 34 03 00
	00 01		 mov	 BYTE PTR [edx+820], 1

; 1315 : 							this->_Color(_Pnode) = this->_Red;
; 1316 : 							_Rrotate(_Pnode);

  001d7	50		 push	 eax
  001d8	c6 80 34 03 00
	00 00		 mov	 BYTE PTR [eax+820], 0
  001df	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Rrotate

; 1317 : 							_Pnode = this->_Right(_Fixnodeparent);

  001e4	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN9@erase@4:

; 1318 : 							}
; 1319 : 
; 1320 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  001e7	8a 8e 34 03 00
	00		 mov	 cl, BYTE PTR [esi+820]
  001ed	88 88 34 03 00
	00		 mov	 BYTE PTR [eax+820], cl

; 1321 : 						this->_Color(_Fixnodeparent) = this->_Black;
; 1322 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;
; 1323 : 						_Lrotate(_Fixnodeparent);

  001f3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001f6	c6 86 34 03 00
	00 01		 mov	 BYTE PTR [esi+820], 1
  001fd	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00200	56		 push	 esi
  00201	c6 80 34 03 00
	00 01		 mov	 BYTE PTR [eax+820], 1
  00208	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Lrotate

; 1324 : 						break;	// tree now recolored/rebalanced

  0020d	e9 a5 00 00 00	 jmp	 $LN16@erase@4
$LN15@erase@4:

; 1325 : 						}
; 1326 : 					}
; 1327 : 				else
; 1328 : 					{	// fixup right subtree
; 1329 : 					_Pnode = this->_Left(_Fixnodeparent);
; 1330 : 					if (this->_Color(_Pnode) == this->_Red)

  00212	80 b8 34 03 00
	00 00		 cmp	 BYTE PTR [eax+820], 0
  00219	75 19		 jne	 SHORT $LN7@erase@4

; 1331 : 						{	// rotate red up from left subtree
; 1332 : 						this->_Color(_Pnode) = this->_Black;

  0021b	c6 80 34 03 00
	00 01		 mov	 BYTE PTR [eax+820], 1

; 1333 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1334 : 						_Rrotate(_Fixnodeparent);

  00222	56		 push	 esi
  00223	c6 86 34 03 00
	00 00		 mov	 BYTE PTR [esi+820], 0
  0022a	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Rrotate

; 1335 : 						_Pnode = this->_Left(_Fixnodeparent);

  0022f	8b 06		 mov	 eax, DWORD PTR [esi]
  00231	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
$LN7@erase@4:

; 1336 : 						}
; 1337 : 					if (this->_Isnil(_Pnode))

  00234	80 b8 35 03 00
	00 00		 cmp	 BYTE PTR [eax+821], 0

; 1338 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1339 : 					else if (this->_Color(this->_Right(_Pnode)) ==

  0023b	75 1e		 jne	 SHORT $LN323@erase@4

; 1340 : 						this->_Black
; 1341 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

  0023d	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00240	80 ba 34 03 00
	00 01		 cmp	 BYTE PTR [edx+820], 1
  00247	75 25		 jne	 SHORT $LN4@erase@4
  00249	8b 10		 mov	 edx, DWORD PTR [eax]
  0024b	80 ba 34 03 00
	00 01		 cmp	 BYTE PTR [edx+820], 1
  00252	75 1a		 jne	 SHORT $LN4@erase@4
$LN324@erase@4:

; 1342 : 						{	// redden left subtree with black children
; 1343 : 						this->_Color(_Pnode) = this->_Red;

  00254	c6 80 34 03 00
	00 00		 mov	 BYTE PTR [eax+820], 0
$LN323@erase@4:

; 1344 : 						_Fixnode = _Fixnodeparent;

  0025b	8b de		 mov	 ebx, esi
  0025d	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
$LN322@erase@4:

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00260	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00263	3b 58 04	 cmp	 ebx, DWORD PTR [eax+4]
  00266	0f 85 f1 fe ff
	ff		 jne	 $LL18@erase@4
  0026c	eb 49		 jmp	 SHORT $LN16@erase@4
$LN4@erase@4:

; 1345 : 						}
; 1346 : 					else
; 1347 : 						{	// must rearrange left subtree
; 1348 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

  0026e	8b 10		 mov	 edx, DWORD PTR [eax]
  00270	80 ba 34 03 00
	00 01		 cmp	 BYTE PTR [edx+820], 1
  00277	75 19		 jne	 SHORT $LN2@erase@4

; 1349 : 							{	// rotate red up from right sub-subtree
; 1350 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

  00279	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0027c	c6 82 34 03 00
	00 01		 mov	 BYTE PTR [edx+820], 1

; 1351 : 							this->_Color(_Pnode) = this->_Red;
; 1352 : 							_Lrotate(_Pnode);

  00283	50		 push	 eax
  00284	c6 80 34 03 00
	00 00		 mov	 BYTE PTR [eax+820], 0
  0028b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Lrotate

; 1353 : 							_Pnode = this->_Left(_Fixnodeparent);

  00290	8b 06		 mov	 eax, DWORD PTR [esi]
$LN2@erase@4:

; 1354 : 							}
; 1355 : 
; 1356 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  00292	8a 8e 34 03 00
	00		 mov	 cl, BYTE PTR [esi+820]
  00298	88 88 34 03 00
	00		 mov	 BYTE PTR [eax+820], cl

; 1357 : 						this->_Color(_Fixnodeparent) = this->_Black;
; 1358 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;
; 1359 : 						_Rrotate(_Fixnodeparent);

  0029e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002a1	c6 86 34 03 00
	00 01		 mov	 BYTE PTR [esi+820], 1
  002a8	8b 00		 mov	 eax, DWORD PTR [eax]
  002aa	56		 push	 esi
  002ab	c6 80 34 03 00
	00 01		 mov	 BYTE PTR [eax+820], 1
  002b2	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Rrotate
$LN16@erase@4:

; 1360 : 						break;	// tree now recolored/rebalanced
; 1361 : 						}
; 1362 : 					}
; 1363 : 
; 1364 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

  002b7	c6 83 34 03 00
	00 01		 mov	 BYTE PTR [ebx+820], 1
$LN19@erase@4:

; 1365 : 			}
; 1366 : 
; 1367 : 		_Dest_val(this->_Alval,
; 1368 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node

  002be	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  002c1	e8 00 00 00 00	 call	 ??1CHARACTER@@QAE@XZ

; 1369 : 
; 1370 : 		this->_Alnod.deallocate(_Erasednode, 1);

  002c6	57		 push	 edi
  002c7	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002cc	59		 pop	 ecx

; 1371 : 
; 1372 : 		if (0 < this->_Mysize)

  002cd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002d0	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  002d3	5f		 pop	 edi
  002d4	5e		 pop	 esi
  002d5	5b		 pop	 ebx
  002d6	85 c0		 test	 eax, eax
  002d8	74 04		 je	 SHORT $LN1@erase@4

; 1373 : 			--this->_Mysize;

  002da	48		 dec	 eax
  002db	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@erase@4:

; 1374 : 
; 1375 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

  002de	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  002e1	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  002e4	89 08		 mov	 DWORD PTR [eax], ecx

; 1376 : 		}

  002e6	c9		 leave
  002e7	c2 08 00	 ret	 8
$LN319@erase@4:
?erase@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Linsert@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Linsert
; Function compile flags: /Ogsp
;	COMDAT ?_Linsert@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Node$ = 12						; size = 4
$T514776 = 16						; size = 4
__Where$506988 = 16					; size = 4
__Leftish$ = 16						; size = 1
?_Linsert@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Linsert, COMDAT
; _this$ = ecx

; 944  : 		{	// try to insert node at _Node, on left if _Leftish

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 945  : 		const value_type& _Val = this->_Myval(_Node);
; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();
; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  00004	8b 55 0c	 mov	 edx, DWORD PTR __Node$[ebp]
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0000e	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00011	80 b8 35 03 00
	00 00		 cmp	 BYTE PTR [eax+821], 0
  00018	8b d9		 mov	 ebx, ecx
  0001a	b1 01		 mov	 cl, 1
  0001c	57		 push	 edi
  0001d	88 4d fc	 mov	 BYTE PTR __Addleft$[ebp], cl
  00020	75 31		 jne	 SHORT $LN11@Linsert@2
  00022	8b 7a 0c	 mov	 edi, DWORD PTR [edx+12]
$LL12@Linsert@2:

; 951  : 			{	// look for leaf to insert before (_Addleft) or after
; 952  : 			_Wherenode = _Trynode;
; 953  : 			if (_Leftish)

  00025	80 7d 10 00	 cmp	 BYTE PTR __Leftish$[ebp], 0
  00029	8b d8		 mov	 ebx, eax
  0002b	74 09		 je	 SHORT $LN10@Linsert@2

; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,

  0002d	39 78 0c	 cmp	 DWORD PTR [eax+12], edi
  00030	1a c9		 sbb	 cl, cl
  00032	fe c1		 inc	 cl

; 955  : 					this->_Key(_Trynode),
; 956  : 					this->_Kfn(_Val));	// favor left end
; 957  : 			else

  00034	eb 06		 jmp	 SHORT $LN161@Linsert@2
$LN10@Linsert@2:

; 958  : 				_Addleft = _DEBUG_LT_PRED(this->comp,

  00036	3b 78 0c	 cmp	 edi, DWORD PTR [eax+12]
  00039	0f 92 c1	 setb	 cl
$LN161@Linsert@2:
  0003c	88 4d fc	 mov	 BYTE PTR __Addleft$[ebp], cl

; 959  : 					this->_Kfn(_Val),
; 960  : 					this->_Key(_Trynode));	// favor right end
; 961  : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 962  : 				: this->_Right(_Trynode);

  0003f	84 c9		 test	 cl, cl
  00041	74 04		 je	 SHORT $LN15@Linsert@2
  00043	8b 00		 mov	 eax, DWORD PTR [eax]
  00045	eb 03		 jmp	 SHORT $LN16@Linsert@2
$LN15@Linsert@2:
  00047	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$LN16@Linsert@2:

; 945  : 		const value_type& _Val = this->_Myval(_Node);
; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();
; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  0004a	80 b8 35 03 00
	00 00		 cmp	 BYTE PTR [eax+821], 0
  00051	74 d2		 je	 SHORT $LL12@Linsert@2
$LN11@Linsert@2:

; 963  : 			}
; 964  : 
; 965  : 		if (this->_Multi)
; 966  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));
; 967  : 		else
; 968  : 			{	// insert only if unique
; 969  : 			iterator _Where = iterator(_Wherenode, this);

  00053	8b fb		 mov	 edi, ebx
  00055	89 7d 10	 mov	 DWORD PTR __Where$506988[ebp], edi

; 970  : 			if (!_Addleft)

  00058	84 c9		 test	 cl, cl
  0005a	74 31		 je	 SHORT $LN99@Linsert@2

; 971  : 				;	// need to test if insert after is okay
; 972  : 			else if (_Where == begin())

  0005c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0005f	3b 18		 cmp	 ebx, DWORD PTR [eax]
  00061	75 1c		 jne	 SHORT $LN4@Linsert@2

; 973  : 				return (_Pairib(_Insert(true, _Wherenode, _Node), true));

  00063	52		 push	 edx
  00064	53		 push	 ebx
  00065	6a 01		 push	 1
$LN162@Linsert@2:
  00067	8d 45 10	 lea	 eax, DWORD PTR $T514776[ebp]
  0006a	50		 push	 eax
  0006b	8b ce		 mov	 ecx, esi
  0006d	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Insert
  00072	8b 08		 mov	 ecx, DWORD PTR [eax]
  00074	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00077	89 08		 mov	 DWORD PTR [eax], ecx
  00079	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  0007d	eb 37		 jmp	 SHORT $LN1@Linsert@2
$LN4@Linsert@2:

; 974  : 			else
; 975  : 				--_Where;	// need to test if insert before is okay

  0007f	8d 4d 10	 lea	 ecx, DWORD PTR __Where$506988[ebp]
  00082	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::operator--
  00087	8b 7d 10	 mov	 edi, DWORD PTR __Where$506988[ebp]
  0008a	8b 55 0c	 mov	 edx, DWORD PTR __Node$[ebp]
$LN99@Linsert@2:

; 976  : 
; 977  : 			if (_DEBUG_LT_PRED(this->comp,

  0008d	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00090	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  00093	73 07		 jae	 SHORT $LN2@Linsert@2

; 978  : 				this->_Key(_Where._Mynode()),
; 979  : 				this->_Kfn(_Val)))
; 980  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

  00095	52		 push	 edx
  00096	53		 push	 ebx
  00097	ff 75 fc	 push	 DWORD PTR __Addleft$[ebp]
  0009a	eb cb		 jmp	 SHORT $LN162@Linsert@2
$LN2@Linsert@2:

; 981  : 			else
; 982  : 				{	// duplicate, don't insert
; 983  : 				_Dest_val(this->_Alval,
; 984  : 					_STD addressof(this->_Myval(_Node)));

  0009c	8d 4a 10	 lea	 ecx, DWORD PTR [edx+16]
  0009f	e8 00 00 00 00	 call	 ??1CHARACTER@@QAE@XZ

; 985  : 
; 986  : 				this->_Alnod.deallocate(_Node, 1);

  000a4	ff 75 0c	 push	 DWORD PTR __Node$[ebp]
  000a7	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

  000ac	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000af	59		 pop	 ecx
  000b0	89 38		 mov	 DWORD PTR [eax], edi
  000b2	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
$LN1@Linsert@2:
  000b6	5f		 pop	 edi
  000b7	5e		 pop	 esi
  000b8	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  000b9	c9		 leave
  000ba	c2 0c 00	 ret	 12			; 0000000cH
?_Linsert@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Linsert
_TEXT	ENDS
PUBLIC	??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Buynode<std::pair<unsigned long const ,CHARACTER> >
EXTRN	__EH_prolog3_catch:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z$0
__unwindtable$??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z$2
__ehfuncinfo$??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z
_TEXT	SEGMENT
__Wherenode$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Val$ = 8						; size = 4
??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Buynode<std::pair<unsigned long const ,CHARACTER> >, COMDAT
; _this$ = ecx

; 586  : 		_Nodeptr _Buynode(_Valty&& _Val)

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

  0000e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Buynode

; 589  : 
; 590  : 		_TRY_BEGIN
; 591  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Wherenode)),
; 592  : 			_STD forward<_Valty>(_Val));

  00013	ff 75 08	 push	 DWORD PTR __Val$[ebp]
  00016	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  0001a	8b f8		 mov	 edi, eax
  0001c	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  0001f	50		 push	 eax
  00020	8d 4e 0d	 lea	 ecx, DWORD PTR [esi+13]
  00023	89 7d ec	 mov	 DWORD PTR __Wherenode$[ebp], edi
  00026	e8 00 00 00 00	 call	 ?construct@?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@std@@QAEXPAU?$pair@$$CBKUCHARACTER@@@2@$$QAU32@@Z ; std::allocator<std::pair<unsigned long const ,CHARACTER> >::construct

; 596  : 		_CATCH_END
; 597  : 
; 598  : 		return (_Wherenode);

  0002b	8b c7		 mov	 eax, edi

; 599  : 		}

  0002d	e8 00 00 00 00	 call	 __EH_epilog3
  00032	c2 04 00	 ret	 4
__catch$??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z$0:

; 593  : 		_CATCH_ALL
; 594  : 		this->_Alnod.deallocate(_Wherenode, 1);

  00035	ff 75 ec	 push	 DWORD PTR __Wherenode$[ebp]
  00038	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003d	59		 pop	 ecx

; 595  : 		_RERAISE;

  0003e	6a 00		 push	 0
  00040	6a 00		 push	 0
  00042	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN23@Buynode@2:
$LN22@Buynode@2:
  00047	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Buynode<std::pair<unsigned long const ,CHARACTER> >
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::clear, COMDAT
; _this$ = ecx

; 1410 : 		{	// erase all

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 1411 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1412 : 		this->_Orphan_ptr(*this, 0);
; 1413 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1414 : 
; 1415 : 		_Erase(_Root());

  00004	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00007	ff 70 04	 push	 DWORD PTR [eax+4]
  0000a	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Erase

; 1416 : 		_Root() = this->_Myhead;

  0000f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1417 : 		_Lmost() = this->_Myhead;

  00015	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax

; 1418 : 		_Rmost() = this->_Myhead;

  0001a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0001d	89 76 08	 mov	 DWORD PTR [esi+8], esi

; 1419 : 		this->_Mysize = 0;

  00020	83 67 08 00	 and	 DWORD PTR [edi+8], 0
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi

; 1420 : 		}

  00026	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::clear
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T515223 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::erase, COMDAT
; _this$ = ecx

; 1379 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1380 : 		if (_First == begin() && _Last == end())

  00007	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  0000d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0000f	75 13		 jne	 SHORT $LN65@erase@5
  00011	39 45 10	 cmp	 DWORD PTR __Last$[ebp], eax
  00014	75 0e		 jne	 SHORT $LN65@erase@5

; 1381 : 			{	// erase all
; 1382 : 			clear();

  00016	8b ce		 mov	 ecx, esi
  00018	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::clear

; 1383 : 			return (begin());

  0001d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00020	8b 08		 mov	 ecx, DWORD PTR [eax]
  00022	eb 25		 jmp	 SHORT $LN1@erase@5
$LN65@erase@5:

; 1384 : 			}
; 1385 : 		else
; 1386 : 			{	// partial erase, one at a time
; 1387 : 			while (_First != _Last)

  00024	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00027	74 20		 je	 SHORT $LN1@erase@5
  00029	57		 push	 edi
$LL2@erase@5:

; 1388 : 				erase(_First++);

  0002a	8b f9		 mov	 edi, ecx
  0002c	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0002f	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >,std::_Iterator_base0>::operator++
  00034	57		 push	 edi
  00035	8d 45 fc	 lea	 eax, DWORD PTR $T515223[ebp]
  00038	50		 push	 eax
  00039	8b ce		 mov	 ecx, esi
  0003b	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::erase
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00043	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00046	75 e2		 jne	 SHORT $LL2@erase@5
  00048	5f		 pop	 edi
$LN1@erase@5:

; 1389 : 			return (iterator(_First._Ptr, this));

  00049	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0004c	89 08		 mov	 DWORD PTR [eax], ecx
  0004e	5e		 pop	 esi

; 1390 : 			}
; 1391 : 		}

  0004f	c9		 leave
  00050	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::erase
_TEXT	ENDS
PUBLIC	??$insert@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::insert<std::pair<unsigned long const ,CHARACTER> >
; Function compile flags: /Ogsp
;	COMDAT ??$insert@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::insert<std::pair<unsigned long const ,CHARACTER> >, COMDAT
; _this$ = ecx

; 753  : 		_Pairib insert(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 754  : 		{	// try to insert node with value _Val, favoring right side
; 755  : 		return (_Linsert(this->_Buynode(_STD forward<_Valty>(_Val)),
; 756  : 			false));

  00004	6a 00		 push	 0
  00006	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Buynode<std::pair<unsigned long const ,CHARACTER> >
  00010	50		 push	 eax
  00011	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  00014	8b ce		 mov	 ecx, esi
  00016	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Linsert
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	5e		 pop	 esi

; 757  : 		}

  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
??$insert@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::insert<std::pair<unsigned long const ,CHARACTER> >
_TEXT	ENDS
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@KHHH@Z ; ioGlobalSoldierInfo::GetSoldierData
EXTRN	__EH_epilog3_GS:PROC
EXTRN	__EH_prolog3_GS:PROC
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
xdata$x	SEGMENT
__unwindtable$?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@KHHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@KHHH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@KHHH@Z$1
__ehfuncinfo$?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@KHHH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@KHHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioglobalsoldierinfo.cpp
xdata$x	ENDS
;	COMDAT ?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@KHHH@Z
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -844				; size = 4
$T515421 = -840						; size = 4
$T515417 = -836						; size = 8
_value$515636 = -832					; size = 4
_iter$505524 = -832					; size = 4
_iter$505241 = -832					; size = 4
_value$515435 = -828					; size = 4
_value$515431 = -828					; size = 4
_value$515427 = -828					; size = 4
_value$515633 = -828					; size = 4
_kCharInfo$505104 = -828				; size = 4
$T505396 = -824						; size = 808
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_rkName$ = 12						; size = 4
_dwCharIndex$ = 16					; size = 4
_iClassType$ = 20					; size = 4
_iKindred$ = 24						; size = 4
_iSex$ = 28						; size = 4
?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@KHHH@Z PROC ; ioGlobalSoldierInfo::GetSoldierData, COMDAT
; _this$ = ecx

; 39   : {

  00000	68 40 03 00 00	 push	 832			; 00000340H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@KHHH@Z
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000f	8b 5d 08	 mov	 ebx, DWORD PTR ___$ReturnUdt$[ebp]
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	8b 7d 0c	 mov	 edi, DWORD PTR _rkName$[ebp]
  00019	83 a5 b8 fc ff
	ff 00		 and	 DWORD PTR $T515421[ebp], 0
  00020	8b f1		 mov	 esi, ecx

; 40   : 	CHARACTER kReturnInfo = m_DefCharInfo;

  00022	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00025	50		 push	 eax
  00026	8b cb		 mov	 ecx, ebx
  00028	89 9d b4 fc ff
	ff		 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], ebx
  0002e	e8 00 00 00 00	 call	 ??0CHARACTER@@QAE@ABU0@@Z

; 86   : 			}
; 87   : 		}
; 88   : 	}
; 89   : 	return kReturnInfo;

  00033	8b 45 14	 mov	 eax, DWORD PTR _iClassType$[ebp]
  00036	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	89 85 c4 fc ff
	ff		 mov	 DWORD PTR _value$515427[ebp], eax
  00040	8d 85 c4 fc ff
	ff		 lea	 eax, DWORD PTR _value$515427[ebp]
  00046	50		 push	 eax
  00047	8b cb		 mov	 ecx, ebx
  00049	c7 85 b8 fc ff
	ff 01 00 00 00	 mov	 DWORD PTR $T515421[ebp], 1
  00053	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool
  00058	8b 45 18	 mov	 eax, DWORD PTR _iKindred$[ebp]
  0005b	89 85 c4 fc ff
	ff		 mov	 DWORD PTR _value$515431[ebp], eax
  00061	8d 85 c4 fc ff
	ff		 lea	 eax, DWORD PTR _value$515431[ebp]
  00067	50		 push	 eax
  00068	8d 4b 30	 lea	 ecx, DWORD PTR [ebx+48]
  0006b	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool
  00070	8b 45 1c	 mov	 eax, DWORD PTR _iSex$[ebp]
  00073	89 85 c4 fc ff
	ff		 mov	 DWORD PTR _value$515435[ebp], eax
  00079	8d 85 c4 fc ff
	ff		 lea	 eax, DWORD PTR _value$515435[ebp]
  0007f	50		 push	 eax
  00080	8d 4b 60	 lea	 ecx, DWORD PTR [ebx+96]
  00083	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool
  00088	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  0008d	83 c0 1c	 add	 eax, 28			; 0000001cH
  00090	50		 push	 eax
  00091	8b cf		 mov	 ecx, edi
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00099	84 c0		 test	 al, al
  0009b	0f 84 bc 00 00
	00		 je	 $LN10@GetSoldier@5

; 41   : 
; 42   : 	// 기본이 되는 정보는 서버에서 받았음.
; 43   : 	kReturnInfo.m_class_type = iClassType;
; 44   : 	kReturnInfo.m_kindred    = iKindred;
; 45   : 	kReturnInfo.m_sex        = iSex;
; 46   : 	
; 47   : 	if( rkName == g_MyInfo.GetPublicID() )
; 48   : 	{
; 49   : 		int iCharArray = g_MyInfo.GetCharArray( dwCharIndex );

  000a1	ff 75 10	 push	 DWORD PTR _dwCharIndex$[ebp]
  000a4	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  000a9	8b c8		 mov	 ecx, eax
  000ab	e8 00 00 00 00	 call	 ?GetCharArray@ioMyInfo@@QAEHK@Z ; ioMyInfo::GetCharArray

; 50   : 		if( iCharArray != -1 )

  000b0	83 f8 ff	 cmp	 eax, -1
  000b3	0f 84 93 01 00
	00		 je	 $LN1@GetSoldier@5

; 51   : 		{
; 52   : 			const CHARACTER &kCharInfo = g_MyInfo.GetCharacter( iCharArray );

  000b9	50		 push	 eax
  000ba	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  000bf	8b c8		 mov	 ecx, eax
  000c1	e8 00 00 00 00	 call	 ?GetCharacter@ioMyInfo@@QAEABUCHARACTER@@K@Z ; ioMyInfo::GetCharacter

; 53   : 			kReturnInfo = kCharInfo;

  000c6	50		 push	 eax
  000c7	8b cb		 mov	 ecx, ebx
  000c9	89 85 c4 fc ff
	ff		 mov	 DWORD PTR _kCharInfo$505104[ebp], eax
  000cf	e8 00 00 00 00	 call	 ??4CHARACTER@@QAEAAU0@ABU0@@Z ; CHARACTER::operator=

; 54   : 
; 55   : 			// 시상식에 표시할 용병 정보( 자신의 용병도 출전한 용병만 허용 )
; 56   : 			SoldierDecMap::iterator iter = m_vAwardSoldierMap.find( dwCharIndex );

  000d4	8d 45 10	 lea	 eax, DWORD PTR _dwCharIndex$[ebp]
  000d7	50		 push	 eax
  000d8	8d 85 c0 fc ff
	ff		 lea	 eax, DWORD PTR _iter$505241[ebp]
  000de	8d be 48 03 00
	00		 lea	 edi, DWORD PTR [esi+840]
  000e4	50		 push	 eax
  000e5	8b cf		 mov	 ecx, edi
  000e7	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::find

; 57   : 			if( iter != m_vAwardSoldierMap.end() )

  000ec	8b b6 4c 03 00
	00		 mov	 esi, DWORD PTR [esi+844]
  000f2	8b 85 c0 fc ff
	ff		 mov	 eax, DWORD PTR _iter$505241[ebp]

; 58   : 			{
; 59   : 				CHARACTER &rkCharInfo = iter->second;
; 60   : 				rkCharInfo = kCharInfo;

  000f8	ff b5 c4 fc ff
	ff		 push	 DWORD PTR _kCharInfo$505104[ebp]
  000fe	3b c6		 cmp	 eax, esi
  00100	74 0d		 je	 SHORT $LN8@GetSoldier@5
  00102	8d 48 10	 lea	 ecx, DWORD PTR [eax+16]
  00105	e8 00 00 00 00	 call	 ??4CHARACTER@@QAEAAU0@ABU0@@Z ; CHARACTER::operator=

; 61   : 			}
; 62   : 			else

  0010a	e9 3d 01 00 00	 jmp	 $LN1@GetSoldier@5
$LN8@GetSoldier@5:

; 63   : 			{
; 64   : 				m_vAwardSoldierMap.insert( SoldierDecMap::value_type( dwCharIndex, kCharInfo ) );

  0010f	8b 45 10	 mov	 eax, DWORD PTR _dwCharIndex$[ebp]
  00112	8d 8d cc fc ff
	ff		 lea	 ecx, DWORD PTR $T505396[ebp+4]
  00118	89 85 c8 fc ff
	ff		 mov	 DWORD PTR $T505396[ebp], eax
  0011e	e8 00 00 00 00	 call	 ??0CHARACTER@@QAE@ABU0@@Z
  00123	6a 00		 push	 0
  00125	8d 85 c8 fc ff
	ff		 lea	 eax, DWORD PTR $T505396[ebp]
  0012b	50		 push	 eax
  0012c	8b cf		 mov	 ecx, edi
  0012e	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00135	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Buynode<std::pair<unsigned long const ,CHARACTER> >
  0013a	50		 push	 eax
  0013b	8d 85 bc fc ff
	ff		 lea	 eax, DWORD PTR $T515417[ebp]
  00141	50		 push	 eax
  00142	8b cf		 mov	 ecx, edi
  00144	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Linsert
  00149	8d 8d cc fc ff
	ff		 lea	 ecx, DWORD PTR $T505396[ebp+4]
  0014f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00153	e8 00 00 00 00	 call	 ??1CHARACTER@@QAE@XZ

; 65   : 			}
; 66   : 		}
; 67   : 	}
; 68   : 	else

  00158	e9 ef 00 00 00	 jmp	 $LN1@GetSoldier@5
$LN10@GetSoldier@5:

; 69   : 	{
; 70   : 		SoldierDecMap::iterator iter = m_vSoldierMap.find( dwCharIndex );

  0015d	8d 45 10	 lea	 eax, DWORD PTR _dwCharIndex$[ebp]
  00160	50		 push	 eax
  00161	8d 85 c0 fc ff
	ff		 lea	 eax, DWORD PTR _iter$505524[ebp]
  00167	50		 push	 eax
  00168	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0016b	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::find

; 71   : 		if( iter != m_vSoldierMap.end() )

  00170	8b 76 08	 mov	 esi, DWORD PTR [esi+8]
  00173	8b 85 c0 fc ff
	ff		 mov	 eax, DWORD PTR _iter$505524[ebp]
  00179	3b c6		 cmp	 eax, esi
  0017b	0f 84 cb 00 00
	00		 je	 $LN1@GetSoldier@5

; 72   : 		{
; 73   : 			CHARACTER &kCharInfo = iter->second;

  00181	8d 70 10	 lea	 esi, DWORD PTR [eax+16]

; 74   : 			if( kReturnInfo.m_class_type == kCharInfo.m_class_type )

  00184	8d 85 c4 fc ff
	ff		 lea	 eax, DWORD PTR _value$515633[ebp]
  0018a	50		 push	 eax
  0018b	8b ce		 mov	 ecx, esi
  0018d	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ; CEncrypt<int>::DecryptValueToPool
  00192	8d 85 c0 fc ff
	ff		 lea	 eax, DWORD PTR _value$515636[ebp]
  00198	50		 push	 eax
  00199	8b cb		 mov	 ecx, ebx
  0019b	e8 00 00 00 00	 call	 ?DecryptValueToPool@?$CEncrypt@H@@QAEXPAH@Z ; CEncrypt<int>::DecryptValueToPool
  001a0	8b 85 c0 fc ff
	ff		 mov	 eax, DWORD PTR _value$515636[ebp]
  001a6	3b 85 c4 fc ff
	ff		 cmp	 eax, DWORD PTR _value$515633[ebp]
  001ac	0f 85 9a 00 00
	00		 jne	 $LN1@GetSoldier@5

; 75   : 			{
; 76   : 				kReturnInfo.m_beard	     = kCharInfo.m_beard;

  001b2	8d 86 90 00 00
	00		 lea	 eax, DWORD PTR [esi+144]
  001b8	50		 push	 eax
  001b9	8d 8b 90 00 00
	00		 lea	 ecx, DWORD PTR [ebx+144]
  001bf	e8 00 00 00 00	 call	 ??4?$CEncrypt@H@@QAE_NAAV0@@Z ; CEncrypt<int>::operator=

; 77   : 				kReturnInfo.m_face	     = kCharInfo.m_face;

  001c4	8d 86 c0 00 00
	00		 lea	 eax, DWORD PTR [esi+192]
  001ca	50		 push	 eax
  001cb	8d 8b c0 00 00
	00		 lea	 ecx, DWORD PTR [ebx+192]
  001d1	e8 00 00 00 00	 call	 ??4?$CEncrypt@H@@QAE_NAAV0@@Z ; CEncrypt<int>::operator=

; 78   : 				kReturnInfo.m_hair	     = kCharInfo.m_hair;

  001d6	8d 86 f0 00 00
	00		 lea	 eax, DWORD PTR [esi+240]
  001dc	50		 push	 eax
  001dd	8d 8b f0 00 00
	00		 lea	 ecx, DWORD PTR [ebx+240]
  001e3	e8 00 00 00 00	 call	 ??4?$CEncrypt@H@@QAE_NAAV0@@Z ; CEncrypt<int>::operator=

; 79   : 				kReturnInfo.m_skin_color = kCharInfo.m_skin_color;

  001e8	8d 86 20 01 00
	00		 lea	 eax, DWORD PTR [esi+288]
  001ee	50		 push	 eax
  001ef	8d 8b 20 01 00
	00		 lea	 ecx, DWORD PTR [ebx+288]
  001f5	e8 00 00 00 00	 call	 ??4?$CEncrypt@H@@QAE_NAAV0@@Z ; CEncrypt<int>::operator=

; 80   : 				kReturnInfo.m_hair_color = kCharInfo.m_hair_color;

  001fa	8d 86 50 01 00
	00		 lea	 eax, DWORD PTR [esi+336]
  00200	50		 push	 eax
  00201	8d 8b 50 01 00
	00		 lea	 ecx, DWORD PTR [ebx+336]
  00207	e8 00 00 00 00	 call	 ??4?$CEncrypt@H@@QAE_NAAV0@@Z ; CEncrypt<int>::operator=

; 81   : 				kReturnInfo.m_accessories= kCharInfo.m_accessories;

  0020c	8d 86 80 01 00
	00		 lea	 eax, DWORD PTR [esi+384]
  00212	50		 push	 eax
  00213	8d 8b 80 01 00
	00		 lea	 ecx, DWORD PTR [ebx+384]
  00219	e8 00 00 00 00	 call	 ??4?$CEncrypt@H@@QAE_NAAV0@@Z ; CEncrypt<int>::operator=

; 82   : 				kReturnInfo.m_underwear  = kCharInfo.m_underwear;

  0021e	8d 86 b0 01 00
	00		 lea	 eax, DWORD PTR [esi+432]
  00224	50		 push	 eax
  00225	8d 8b b0 01 00
	00		 lea	 ecx, DWORD PTR [ebx+432]
  0022b	e8 00 00 00 00	 call	 ??4?$CEncrypt@H@@QAE_NAAV0@@Z ; CEncrypt<int>::operator=

; 83   : 
; 84   : 				for ( int i=0; i<MAX_INVENTORY; i++ )

  00230	8b ce		 mov	 ecx, esi
  00232	6a 04		 push	 4
  00234	8d 83 c0 02 00
	00		 lea	 eax, DWORD PTR [ebx+704]
  0023a	2b cb		 sub	 ecx, ebx
  0023c	5a		 pop	 edx
$LL3@GetSoldier@5:

; 85   : 					kReturnInfo.m_EquipCostume[i] = kCharInfo.m_EquipCostume[i];

  0023d	8d 34 01	 lea	 esi, DWORD PTR [ecx+eax]
  00240	8b f8		 mov	 edi, eax
  00242	a5		 movsd
  00243	a5		 movsd
  00244	a5		 movsd
  00245	83 c0 10	 add	 eax, 16			; 00000010H
  00248	4a		 dec	 edx
  00249	a5		 movsd
  0024a	75 f1		 jne	 SHORT $LL3@GetSoldier@5
$LN1@GetSoldier@5:

; 86   : 			}
; 87   : 		}
; 88   : 	}
; 89   : 	return kReturnInfo;

  0024c	8b c3		 mov	 eax, ebx

; 90   : }

  0024e	e8 00 00 00 00	 call	 __EH_epilog3_GS
  00253	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@KHHH@Z$0:
  00000	8b 85 b8 fc ff
	ff		 mov	 eax, DWORD PTR $T515421[ebp]
  00006	83 e0 01	 and	 eax, 1
  00009	0f 84 12 00 00
	00		 je	 $LN14@GetSoldier@5
  0000f	83 a5 b8 fc ff
	ff fe		 and	 DWORD PTR $T515421[ebp], -2 ; fffffffeH
  00016	8b 8d b4 fc ff
	ff		 mov	 ecx, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1CHARACTER@@QAE@XZ
$LN14@GetSoldier@5:
  00021	c3		 ret	 0
__unwindfunclet$?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@KHHH@Z$1:
  00022	8d 8d c8 fc ff
	ff		 lea	 ecx, DWORD PTR $T505396[ebp]
  00028	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBKUCHARACTER@@@std@@QAE@XZ
__ehhandler$?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@KHHH@Z:
  0002d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00031	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00034	8b 8a b0 fc ff
	ff		 mov	 ecx, DWORD PTR [edx-848]
  0003a	33 c8		 xor	 ecx, eax
  0003c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00041	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00044	33 c8		 xor	 ecx, eax
  00046	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@KHHH@Z
  00050	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetSoldierData@ioGlobalSoldierInfo@@QAE?AUCHARACTER@@ABVioHashString@@KHHH@Z ENDP ; ioGlobalSoldierInfo::GetSoldierData
PUBLIC	?SyncSoldierData@ioGlobalSoldierInfo@@QAEXKUCHARACTER@@@Z ; ioGlobalSoldierInfo::SyncSoldierData
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SyncSoldierData@ioGlobalSoldierInfo@@QAEXKUCHARACTER@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SyncSoldierData@ioGlobalSoldierInfo@@QAEXKUCHARACTER@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SyncSoldierData@ioGlobalSoldierInfo@@QAEXKUCHARACTER@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?SyncSoldierData@ioGlobalSoldierInfo@@QAEXKUCHARACTER@@@Z$2
__ehfuncinfo$?SyncSoldierData@ioGlobalSoldierInfo@@QAEXKUCHARACTER@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?SyncSoldierData@ioGlobalSoldierInfo@@QAEXKUCHARACTER@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?SyncSoldierData@ioGlobalSoldierInfo@@QAEXKUCHARACTER@@@Z
_TEXT	SEGMENT
$T515657 = -832						; size = 8
$T515655 = -832						; size = 8
_iter$505946 = -828					; size = 4
_iter$505933 = -828					; size = 4
$T505952 = -824						; size = 808
$T505944 = -824						; size = 808
__$EHRec$ = -12						; size = 12
_dwCharIndex$ = 8					; size = 4
_kCharInfo$ = 12					; size = 804
?SyncSoldierData@ioGlobalSoldierInfo@@QAEXKUCHARACTER@@@Z PROC ; ioGlobalSoldierInfo::SyncSoldierData, COMDAT
; _this$ = ecx

; 227  : {

  00000	68 34 03 00 00	 push	 820			; 00000334H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?SyncSoldierData@ioGlobalSoldierInfo@@QAEXKUCHARACTER@@@Z
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000f	8b f1		 mov	 esi, ecx

; 228  : 	if( dwCharIndex == 0 ) 

  00011	8b 5d 08	 mov	 ebx, DWORD PTR _dwCharIndex$[ebp]
  00014	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00018	85 db		 test	 ebx, ebx

; 229  : 		return;

  0001a	0f 84 ee 00 00
	00		 je	 $LN1@SyncSoldie@2

; 230  : 
; 231  : 	{
; 232  : 		// 용병 정보 수집
; 233  : 		SoldierDecMap::iterator iter = m_vSoldierMap.find( dwCharIndex );

  00020	8d 45 08	 lea	 eax, DWORD PTR _dwCharIndex$[ebp]
  00023	50		 push	 eax
  00024	8d 85 c4 fc ff
	ff		 lea	 eax, DWORD PTR _iter$505933[ebp]
  0002a	50		 push	 eax
  0002b	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0002e	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::find

; 234  : 		if( iter != m_vSoldierMap.end() )

  00033	8b 8d c4 fc ff
	ff		 mov	 ecx, DWORD PTR _iter$505933[ebp]

; 235  : 		{
; 236  : 			CHARACTER &rkCharInfo = iter->second;
; 237  : 			rkCharInfo = kCharInfo;

  00039	8d 45 0c	 lea	 eax, DWORD PTR _kCharInfo$[ebp]
  0003c	50		 push	 eax
  0003d	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00040	74 0a		 je	 SHORT $LN4@SyncSoldie@2
  00042	83 c1 10	 add	 ecx, 16			; 00000010H
  00045	e8 00 00 00 00	 call	 ??4CHARACTER@@QAEAAU0@ABU0@@Z ; CHARACTER::operator=

; 238  : 		}
; 239  : 		else

  0004a	eb 45		 jmp	 SHORT $LN3@SyncSoldie@2
$LN4@SyncSoldie@2:

; 240  : 		{
; 241  : 			m_vSoldierMap.insert( SoldierDecMap::value_type( dwCharIndex, kCharInfo ) );

  0004c	8d 8d cc fc ff
	ff		 lea	 ecx, DWORD PTR $T505944[ebp+4]
  00052	89 9d c8 fc ff
	ff		 mov	 DWORD PTR $T505944[ebp], ebx
  00058	e8 00 00 00 00	 call	 ??0CHARACTER@@QAE@ABU0@@Z
  0005d	6a 00		 push	 0
  0005f	8d 85 c8 fc ff
	ff		 lea	 eax, DWORD PTR $T505944[ebp]
  00065	50		 push	 eax
  00066	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00069	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0006d	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Buynode<std::pair<unsigned long const ,CHARACTER> >
  00072	50		 push	 eax
  00073	8d 85 c0 fc ff
	ff		 lea	 eax, DWORD PTR $T515655[ebp]
  00079	50		 push	 eax
  0007a	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0007d	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Linsert
  00082	8d 8d cc fc ff
	ff		 lea	 ecx, DWORD PTR $T505944[ebp+4]
  00088	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0008c	e8 00 00 00 00	 call	 ??1CHARACTER@@QAE@XZ
$LN3@SyncSoldie@2:

; 242  : 		}
; 243  : 	}
; 244  : 
; 245  : 	{
; 246  : 		// 시상식에 표시할 용병 정보
; 247  : 		SoldierDecMap::iterator iter = m_vAwardSoldierMap.find( dwCharIndex );

  00091	8d 45 08	 lea	 eax, DWORD PTR _dwCharIndex$[ebp]
  00094	50		 push	 eax
  00095	8d 85 c4 fc ff
	ff		 lea	 eax, DWORD PTR _iter$505946[ebp]
  0009b	8d be 48 03 00
	00		 lea	 edi, DWORD PTR [esi+840]
  000a1	50		 push	 eax
  000a2	8b cf		 mov	 ecx, edi
  000a4	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::find

; 248  : 		if( iter != m_vAwardSoldierMap.end() )

  000a9	8b b6 4c 03 00
	00		 mov	 esi, DWORD PTR [esi+844]
  000af	8b 85 c4 fc ff
	ff		 mov	 eax, DWORD PTR _iter$505946[ebp]
  000b5	3b c6		 cmp	 eax, esi
  000b7	74 0e		 je	 SHORT $LN2@SyncSoldie@2

; 249  : 		{
; 250  : 			CHARACTER &rkCharInfo = iter->second;

  000b9	8d 48 10	 lea	 ecx, DWORD PTR [eax+16]

; 251  : 			rkCharInfo = kCharInfo;

  000bc	8d 45 0c	 lea	 eax, DWORD PTR _kCharInfo$[ebp]
  000bf	50		 push	 eax
  000c0	e8 00 00 00 00	 call	 ??4CHARACTER@@QAEAAU0@ABU0@@Z ; CHARACTER::operator=

; 252  : 		}
; 253  : 		else

  000c5	eb 47		 jmp	 SHORT $LN1@SyncSoldie@2
$LN2@SyncSoldie@2:

; 254  : 		{
; 255  : 			m_vAwardSoldierMap.insert( SoldierDecMap::value_type( dwCharIndex, kCharInfo ) );

  000c7	8d 45 0c	 lea	 eax, DWORD PTR _kCharInfo$[ebp]
  000ca	50		 push	 eax
  000cb	8d 8d cc fc ff
	ff		 lea	 ecx, DWORD PTR $T505952[ebp+4]
  000d1	89 9d c8 fc ff
	ff		 mov	 DWORD PTR $T505952[ebp], ebx
  000d7	e8 00 00 00 00	 call	 ??0CHARACTER@@QAE@ABU0@@Z
  000dc	6a 00		 push	 0
  000de	8d 85 c8 fc ff
	ff		 lea	 eax, DWORD PTR $T505952[ebp]
  000e4	50		 push	 eax
  000e5	8b cf		 mov	 ecx, edi
  000e7	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000eb	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBKUCHARACTER@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUCHARACTER@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Buynode<std::pair<unsigned long const ,CHARACTER> >
  000f0	50		 push	 eax
  000f1	8d 85 c0 fc ff
	ff		 lea	 eax, DWORD PTR $T515657[ebp]
  000f7	50		 push	 eax
  000f8	8b cf		 mov	 ecx, edi
  000fa	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Linsert
  000ff	8d 8d cc fc ff
	ff		 lea	 ecx, DWORD PTR $T505952[ebp+4]
  00105	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00109	e8 00 00 00 00	 call	 ??1CHARACTER@@QAE@XZ
$LN1@SyncSoldie@2:

; 256  : 		}
; 257  : 	}
; 258  : }

  0010e	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00112	8d 4d 0c	 lea	 ecx, DWORD PTR _kCharInfo$[ebp]
  00115	e8 00 00 00 00	 call	 ??1CHARACTER@@QAE@XZ
  0011a	e8 00 00 00 00	 call	 __EH_epilog3_GS
  0011f	c2 28 03	 ret	 808			; 00000328H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SyncSoldierData@ioGlobalSoldierInfo@@QAEXKUCHARACTER@@@Z$0:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _kCharInfo$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CHARACTER@@QAE@XZ
__unwindfunclet$?SyncSoldierData@ioGlobalSoldierInfo@@QAEXKUCHARACTER@@@Z$1:
  00008	8d 8d c8 fc ff
	ff		 lea	 ecx, DWORD PTR $T505944[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBKUCHARACTER@@@std@@QAE@XZ
__unwindfunclet$?SyncSoldierData@ioGlobalSoldierInfo@@QAEXKUCHARACTER@@@Z$2:
  00013	8d 8d c8 fc ff
	ff		 lea	 ecx, DWORD PTR $T505952[ebp]
  00019	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBKUCHARACTER@@@std@@QAE@XZ
__ehhandler$?SyncSoldierData@ioGlobalSoldierInfo@@QAEXKUCHARACTER@@@Z:
  0001e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00022	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00025	8b 8a bc fc ff
	ff		 mov	 ecx, DWORD PTR [edx-836]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SyncSoldierData@ioGlobalSoldierInfo@@QAEXKUCHARACTER@@@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SyncSoldierData@ioGlobalSoldierInfo@@QAEXKUCHARACTER@@@Z ENDP ; ioGlobalSoldierInfo::SyncSoldierData
PUBLIC	?ClearAwardSoldierMap@ioGlobalSoldierInfo@@QAEXXZ ; ioGlobalSoldierInfo::ClearAwardSoldierMap
; Function compile flags: /Ogsp
;	COMDAT ?ClearAwardSoldierMap@ioGlobalSoldierInfo@@QAEXXZ
_TEXT	SEGMENT
?ClearAwardSoldierMap@ioGlobalSoldierInfo@@QAEXXZ PROC	; ioGlobalSoldierInfo::ClearAwardSoldierMap, COMDAT
; _this$ = ecx

; 319  : 	m_vAwardSoldierMap.clear();

  00000	81 c1 48 03 00
	00		 add	 ecx, 840		; 00000348H
  00006	e9 00 00 00 00	 jmp	 ?clear@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::clear
?ClearAwardSoldierMap@ioGlobalSoldierInfo@@QAEXXZ ENDP	; ioGlobalSoldierInfo::ClearAwardSoldierMap
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Tidy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T515922 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1865 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1866 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 10		 mov	 edx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T515922[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::erase

; 1867 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T516114 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >, COMDAT
; _this$ = ecx

; 790  : 		{	// destroy tree

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 791  : 		_Tidy();

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	8d 45 ec	 lea	 eax, DWORD PTR $T516114[ebp]
  0001f	50		 push	 eax
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::erase

; 792  : 		}

  00027	ff 76 04	 push	 DWORD PTR [esi+4]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	e8 00 00 00 00	 call	 __EH_epilog3
  00035	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >
__ehhandler$??1?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >
PUBLIC	??1?$map@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> > >::~map<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> > >
; Function compile flags: /Ogsp
;	COMDAT ??1?$map@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@@std@@QAE@XZ PROC ; std::map<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> > >::~map<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> > >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >
??1?$map@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> > >::~map<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> > >
_TEXT	ENDS
PUBLIC	??_7ioGlobalSoldierInfo@@6B@			; ioGlobalSoldierInfo::`vftable'
PUBLIC	??1ioGlobalSoldierInfo@@UAE@XZ			; ioGlobalSoldierInfo::~ioGlobalSoldierInfo
PUBLIC	??_R4ioGlobalSoldierInfo@@6B@			; ioGlobalSoldierInfo::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioGlobalSoldierInfo@@@8			; ioGlobalSoldierInfo `RTTI Type Descriptor'
PUBLIC	??_R3ioGlobalSoldierInfo@@8			; ioGlobalSoldierInfo::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioGlobalSoldierInfo@@8			; ioGlobalSoldierInfo::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioGlobalSoldierInfo@@8		; ioGlobalSoldierInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@?$Singleton@VioGlobalSoldierInfo@@@@8 ; Singleton<ioGlobalSoldierInfo>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AV?$Singleton@VioGlobalSoldierInfo@@@@@8	; Singleton<ioGlobalSoldierInfo> `RTTI Type Descriptor'
PUBLIC	??_R3?$Singleton@VioGlobalSoldierInfo@@@@8	; Singleton<ioGlobalSoldierInfo>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$Singleton@VioGlobalSoldierInfo@@@@8	; Singleton<ioGlobalSoldierInfo>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$Singleton@VioGlobalSoldierInfo@@@@8 ; Singleton<ioGlobalSoldierInfo>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_EioGlobalSoldierInfo@@UAEPAXI@Z:PROC		; ioGlobalSoldierInfo::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$Singleton@VioGlobalSoldierInfo@@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
rdata$r	SEGMENT
??_R1A@?0A@EA@?$Singleton@VioGlobalSoldierInfo@@@@8 DD FLAT:??_R0?AV?$Singleton@VioGlobalSoldierInfo@@@@@8 ; Singleton<ioGlobalSoldierInfo>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioGlobalSoldierInfo@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$Singleton@VioGlobalSoldierInfo@@@@8
rdata$r	SEGMENT
??_R2?$Singleton@VioGlobalSoldierInfo@@@@8 DD FLAT:??_R1A@?0A@EA@?$Singleton@VioGlobalSoldierInfo@@@@8 ; Singleton<ioGlobalSoldierInfo>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$Singleton@VioGlobalSoldierInfo@@@@8
rdata$r	SEGMENT
??_R3?$Singleton@VioGlobalSoldierInfo@@@@8 DD 00H	; Singleton<ioGlobalSoldierInfo>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$Singleton@VioGlobalSoldierInfo@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$Singleton@VioGlobalSoldierInfo@@@@@8
_DATA	SEGMENT
??_R0?AV?$Singleton@VioGlobalSoldierInfo@@@@@8 DD FLAT:??_7type_info@@6B@ ; Singleton<ioGlobalSoldierInfo> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$Singleton@VioGlobalSoldierInfo@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@?$Singleton@VioGlobalSoldierInfo@@@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$Singleton@VioGlobalSoldierInfo@@@@8 DD FLAT:??_R0?AV?$Singleton@VioGlobalSoldierInfo@@@@@8 ; Singleton<ioGlobalSoldierInfo>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioGlobalSoldierInfo@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioGlobalSoldierInfo@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioGlobalSoldierInfo@@8 DD FLAT:??_R0?AVioGlobalSoldierInfo@@@8 ; ioGlobalSoldierInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioGlobalSoldierInfo@@8
rdata$r	ENDS
;	COMDAT ??_R2ioGlobalSoldierInfo@@8
rdata$r	SEGMENT
??_R2ioGlobalSoldierInfo@@8 DD FLAT:??_R1A@?0A@EA@ioGlobalSoldierInfo@@8 ; ioGlobalSoldierInfo::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@?$Singleton@VioGlobalSoldierInfo@@@@8
rdata$r	ENDS
;	COMDAT ??_R3ioGlobalSoldierInfo@@8
rdata$r	SEGMENT
??_R3ioGlobalSoldierInfo@@8 DD 00H			; ioGlobalSoldierInfo::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioGlobalSoldierInfo@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioGlobalSoldierInfo@@@8
_DATA	SEGMENT
??_R0?AVioGlobalSoldierInfo@@@8 DD FLAT:??_7type_info@@6B@ ; ioGlobalSoldierInfo `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioGlobalSoldierInfo@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioGlobalSoldierInfo@@6B@
rdata$r	SEGMENT
??_R4ioGlobalSoldierInfo@@6B@ DD 00H			; ioGlobalSoldierInfo::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioGlobalSoldierInfo@@@8
	DD	FLAT:??_R3ioGlobalSoldierInfo@@8
rdata$r	ENDS
;	COMDAT ??_7ioGlobalSoldierInfo@@6B@
CONST	SEGMENT
??_7ioGlobalSoldierInfo@@6B@ DD FLAT:??_R4ioGlobalSoldierInfo@@6B@ ; ioGlobalSoldierInfo::`vftable'
	DD	FLAT:??_EioGlobalSoldierInfo@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1ioGlobalSoldierInfo@@UAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1ioGlobalSoldierInfo@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1ioGlobalSoldierInfo@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioGlobalSoldierInfo@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ioGlobalSoldierInfo@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1ioGlobalSoldierInfo@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1ioGlobalSoldierInfo@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1ioGlobalSoldierInfo@@UAE@XZ$4
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioglobalsoldierinfo.cpp
xdata$x	ENDS
;	COMDAT ??1ioGlobalSoldierInfo@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioGlobalSoldierInfo@@UAE@XZ PROC			; ioGlobalSoldierInfo::~ioGlobalSoldierInfo, COMDAT
; _this$ = ecx

; 27   : {	

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioGlobalSoldierInfo@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioGlobalSoldierInfo@@6B@

; 28   : 	m_vSoldierMap.clear();

  00017	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0001a	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  00021	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::clear

; 29   : 	m_vSoldierItemMap.clear();

  00026	8d 8e 38 03 00
	00		 lea	 ecx, DWORD PTR [esi+824]
  0002c	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::clear

; 30   : 	m_vAwardSoldierMap.clear();

  00031	8d 8e 48 03 00
	00		 lea	 ecx, DWORD PTR [esi+840]
  00037	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::clear

; 31   : }

  0003c	8d 8e 48 03 00
	00		 lea	 ecx, DWORD PTR [esi+840]
  00042	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00046	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >
  0004b	8d 8e 38 03 00
	00		 lea	 ecx, DWORD PTR [esi+824]
  00051	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00055	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >
  0005a	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  0005d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00061	e8 00 00 00 00	 call	 ??1CHARACTER@@QAE@XZ
  00066	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00069	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0006d	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >
  00072	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioGlobalSoldierInfo@@@@1PAVioGlobalSoldierInfo@@A, 0 ; Singleton<ioGlobalSoldierInfo>::ms_Singleton
  00079	e8 00 00 00 00	 call	 __EH_epilog3
  0007e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioGlobalSoldierInfo@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioGlobalSoldierInfo@@@@QAE@XZ ; Singleton<ioGlobalSoldierInfo>::~Singleton<ioGlobalSoldierInfo>
__unwindfunclet$??1ioGlobalSoldierInfo@@UAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 04	 add	 ecx, 4
  00011	e9 00 00 00 00	 jmp	 ??1?$map@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@@std@@QAE@XZ
__unwindfunclet$??1ioGlobalSoldierInfo@@UAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 14	 add	 ecx, 20			; 00000014H
  0001c	e9 00 00 00 00	 jmp	 ??1CHARACTER@@QAE@XZ
__unwindfunclet$??1ioGlobalSoldierInfo@@UAE@XZ$3:
  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  0002a	e9 00 00 00 00	 jmp	 ??1?$map@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@@std@@QAE@XZ
__unwindfunclet$??1ioGlobalSoldierInfo@@UAE@XZ$4:
  0002f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	81 c1 48 03 00
	00		 add	 ecx, 840		; 00000348H
  00038	e9 00 00 00 00	 jmp	 ??1?$map@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@@std@@QAE@XZ
__ehhandler$??1ioGlobalSoldierInfo@@UAE@XZ:
  0003d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00041	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00044	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00047	33 c8		 xor	 ecx, eax
  00049	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioGlobalSoldierInfo@@UAE@XZ
  00053	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioGlobalSoldierInfo@@UAE@XZ ENDP			; ioGlobalSoldierInfo::~ioGlobalSoldierInfo
PUBLIC	??0?$map@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> > >::map<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$map@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T516198 = -8						; size = 4
$T516200 = -8						; size = 4
$T516187 = -1						; size = 1
??0?$map@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@@std@@QAE@XZ PROC ; std::map<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> > >::map<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> > >, COMDAT
; _this$ = ecx

; 106  : 		{	// construct empty map from defaults

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	51		 push	 ecx
  00007	89 65 f8	 mov	 DWORD PTR $T516200[ebp], esp
  0000a	8d 45 ff	 lea	 eax, DWORD PTR $T516187[ebp]
  0000d	89 65 f8	 mov	 DWORD PTR $T516198[ebp], esp
  00010	50		 push	 eax
  00011	8b f1		 mov	 esi, ecx
  00013	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >

; 107  : 		}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c9		 leave
  0001c	c3		 ret	 0
??0?$map@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> > >::map<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> > >
_TEXT	ENDS
PUBLIC	??0ioGlobalSoldierInfo@@QAE@XZ			; ioGlobalSoldierInfo::ioGlobalSoldierInfo
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
xdata$x	SEGMENT
__ehfuncinfo$??0ioGlobalSoldierInfo@@QAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0ioGlobalSoldierInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0ioGlobalSoldierInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioGlobalSoldierInfo@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ioGlobalSoldierInfo@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0ioGlobalSoldierInfo@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0ioGlobalSoldierInfo@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0ioGlobalSoldierInfo@@QAE@XZ$4
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioglobalsoldierinfo.cpp
xdata$x	ENDS
;	COMDAT ??0ioGlobalSoldierInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
_value$516356 = -24					; size = 4
$T516295 = -24						; size = 4
$T516307 = -24						; size = 4
$T516264 = -24						; size = 4
$T516276 = -24						; size = 4
$T516233 = -24						; size = 4
$T516245 = -24						; size = 4
tv297 = -20						; size = 4
_value$516352 = -20					; size = 4
_value$516348 = -20					; size = 4
_value$516344 = -20					; size = 4
_value$516340 = -20					; size = 4
_value$516336 = -20					; size = 4
_value$516332 = -20					; size = 4
_value$516328 = -20					; size = 4
_value$516324 = -20					; size = 4
_value$516320 = -20					; size = 4
_value$516316 = -20					; size = 4
$T516303 = -13						; size = 1
$T516272 = -13						; size = 1
$T516241 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??0ioGlobalSoldierInfo@@QAE@XZ PROC			; ioGlobalSoldierInfo::ioGlobalSoldierInfo, COMDAT
; _this$ = ecx

; 9    : {

  00000	6a 10		 push	 16			; 00000010H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioGlobalSoldierInfo@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 e4	 mov	 DWORD PTR _this$[ebp], esi
  00011	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00014	8d 41 fc	 lea	 eax, DWORD PTR [ecx-4]
  00017	a3 00 00 00 00	 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioGlobalSoldierInfo@@@@1PAVioGlobalSoldierInfo@@A, eax ; Singleton<ioGlobalSoldierInfo>::ms_Singleton
  0001c	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00020	51		 push	 ecx
  00021	89 65 e8	 mov	 DWORD PTR $T516245[ebp], esp
  00024	8d 45 f3	 lea	 eax, DWORD PTR $T516241[ebp]
  00027	89 65 e8	 mov	 DWORD PTR $T516233[ebp], esp
  0002a	50		 push	 eax
  0002b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioGlobalSoldierInfo@@6B@
  00031	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >
  00036	33 db		 xor	 ebx, ebx
  00038	43		 inc	 ebx
  00039	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  0003c	88 5d fc	 mov	 BYTE PTR __$EHRec$[ebp+8], bl
  0003f	e8 00 00 00 00	 call	 ??0CHARACTER@@QAE@XZ	; CHARACTER::CHARACTER
  00044	8d 8e 38 03 00
	00		 lea	 ecx, DWORD PTR [esi+824]
  0004a	51		 push	 ecx
  0004b	89 65 e8	 mov	 DWORD PTR $T516276[ebp], esp
  0004e	8d 45 f3	 lea	 eax, DWORD PTR $T516272[ebp]
  00051	89 65 e8	 mov	 DWORD PTR $T516264[ebp], esp
  00054	50		 push	 eax
  00055	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00059	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,ioGlobalSoldierInfo::ItemCode,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioGlobalSoldierInfo::ItemCode> >,0> >
  0005e	8d 8e 48 03 00
	00		 lea	 ecx, DWORD PTR [esi+840]
  00064	51		 push	 ecx
  00065	89 65 e8	 mov	 DWORD PTR $T516307[ebp], esp
  00068	8d 45 f3	 lea	 eax, DWORD PTR $T516303[ebp]
  0006b	89 65 e8	 mov	 DWORD PTR $T516295[ebp], esp
  0006e	50		 push	 eax
  0006f	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00073	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CHARACTER,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CHARACTER> >,0> >

; 10   : 	m_DefCharInfo.m_class_type = 0;

  00078	83 65 ec 00	 and	 DWORD PTR _value$516316[ebp], 0
  0007c	8d 45 ec	 lea	 eax, DWORD PTR _value$516316[ebp]
  0007f	50		 push	 eax
  00080	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00083	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00087	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 11   : 	m_DefCharInfo.m_kindred	   = 0;

  0008c	83 65 ec 00	 and	 DWORD PTR _value$516320[ebp], 0
  00090	8d 45 ec	 lea	 eax, DWORD PTR _value$516320[ebp]
  00093	50		 push	 eax
  00094	8d 4e 44	 lea	 ecx, DWORD PTR [esi+68]
  00097	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 12   : 	m_DefCharInfo.m_sex		   = 0;

  0009c	83 65 ec 00	 and	 DWORD PTR _value$516324[ebp], 0
  000a0	8d 45 ec	 lea	 eax, DWORD PTR _value$516324[ebp]
  000a3	50		 push	 eax
  000a4	8d 4e 74	 lea	 ecx, DWORD PTR [esi+116]
  000a7	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 13   : 	m_DefCharInfo.m_beard	   = 1;

  000ac	8d 45 ec	 lea	 eax, DWORD PTR _value$516328[ebp]
  000af	50		 push	 eax
  000b0	8d 8e a4 00 00
	00		 lea	 ecx, DWORD PTR [esi+164]
  000b6	89 5d ec	 mov	 DWORD PTR _value$516328[ebp], ebx
  000b9	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 14   : 	m_DefCharInfo.m_face	   = 1;

  000be	8d 45 ec	 lea	 eax, DWORD PTR _value$516332[ebp]
  000c1	50		 push	 eax
  000c2	8d 8e d4 00 00
	00		 lea	 ecx, DWORD PTR [esi+212]
  000c8	89 5d ec	 mov	 DWORD PTR _value$516332[ebp], ebx
  000cb	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 15   : 	m_DefCharInfo.m_hair	   = 1;

  000d0	8d 45 ec	 lea	 eax, DWORD PTR _value$516336[ebp]
  000d3	50		 push	 eax
  000d4	8d 8e 04 01 00
	00		 lea	 ecx, DWORD PTR [esi+260]
  000da	89 5d ec	 mov	 DWORD PTR _value$516336[ebp], ebx
  000dd	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 16   : 	m_DefCharInfo.m_skin_color = 1;

  000e2	8d 45 ec	 lea	 eax, DWORD PTR _value$516340[ebp]
  000e5	50		 push	 eax
  000e6	8d 8e 34 01 00
	00		 lea	 ecx, DWORD PTR [esi+308]
  000ec	89 5d ec	 mov	 DWORD PTR _value$516340[ebp], ebx
  000ef	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 17   : 	m_DefCharInfo.m_hair_color = 1;

  000f4	8d 45 ec	 lea	 eax, DWORD PTR _value$516344[ebp]
  000f7	50		 push	 eax
  000f8	8d 8e 64 01 00
	00		 lea	 ecx, DWORD PTR [esi+356]
  000fe	89 5d ec	 mov	 DWORD PTR _value$516344[ebp], ebx
  00101	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 18   : 	m_DefCharInfo.m_accessories= 1;

  00106	8d 45 ec	 lea	 eax, DWORD PTR _value$516348[ebp]
  00109	89 5d ec	 mov	 DWORD PTR _value$516348[ebp], ebx
  0010c	50		 push	 eax
  0010d	8d 8e 94 01 00
	00		 lea	 ecx, DWORD PTR [esi+404]
  00113	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool

; 19   : 	m_DefCharInfo.m_underwear  = 1;

  00118	8d 45 ec	 lea	 eax, DWORD PTR _value$516352[ebp]
  0011b	50		 push	 eax
  0011c	8d 8e c4 01 00
	00		 lea	 ecx, DWORD PTR [esi+452]
  00122	89 5d ec	 mov	 DWORD PTR _value$516352[ebp], ebx
  00125	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool
  0012a	8d be f4 01 00
	00		 lea	 edi, DWORD PTR [esi+500]
  00130	c7 45 ec 04 00
	00 00		 mov	 DWORD PTR tv297[ebp], 4
$LL3@ioGlobalSo:

; 20   : 	for (int i = 0; i < MAX_INVENTORY ; i++)
; 21   : 		 m_DefCharInfo.m_extra_item[i] = 0;

  00137	83 65 e8 00	 and	 DWORD PTR _value$516356[ebp], 0
  0013b	8d 45 e8	 lea	 eax, DWORD PTR _value$516356[ebp]
  0013e	50		 push	 eax
  0013f	8b cf		 mov	 ecx, edi
  00141	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@H@@AAEXPBD@Z ; CEncrypt<int>::EncryptValueToPool
  00146	83 c7 30	 add	 edi, 48			; 00000030H
  00149	ff 4d ec	 dec	 DWORD PTR tv297[ebp]
  0014c	75 e9		 jne	 SHORT $LL3@ioGlobalSo

; 22   : 	m_DefCharInfo.m_iLimitSecond = 0;

  0014e	83 a6 b8 02 00
	00 00		 and	 DWORD PTR [esi+696], 0

; 23   : 	m_DefCharInfo.m_bActive      = true;

  00155	88 9e c8 02 00
	00		 mov	 BYTE PTR [esi+712], bl

; 24   : }

  0015b	8b c6		 mov	 eax, esi
  0015d	e8 00 00 00 00	 call	 __EH_epilog3
  00162	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioGlobalSoldierInfo@@QAE@XZ$0:
  00000	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioGlobalSoldierInfo@@@@QAE@XZ ; Singleton<ioGlobalSoldierInfo>::~Singleton<ioGlobalSoldierInfo>
__unwindfunclet$??0ioGlobalSoldierInfo@@QAE@XZ$1:
  0000b	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 04	 add	 ecx, 4
  00011	e9 00 00 00 00	 jmp	 ??1?$map@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@@std@@QAE@XZ
__unwindfunclet$??0ioGlobalSoldierInfo@@QAE@XZ$2:
  00016	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 14	 add	 ecx, 20			; 00000014H
  0001c	e9 00 00 00 00	 jmp	 ??1CHARACTER@@QAE@XZ
__unwindfunclet$??0ioGlobalSoldierInfo@@QAE@XZ$3:
  00021	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  0002a	e9 00 00 00 00	 jmp	 ??1?$map@KUItemCode@ioGlobalSoldierInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUItemCode@ioGlobalSoldierInfo@@@std@@@4@@std@@QAE@XZ
__unwindfunclet$??0ioGlobalSoldierInfo@@QAE@XZ$4:
  0002f	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	81 c1 48 03 00
	00		 add	 ecx, 840		; 00000348H
  00038	e9 00 00 00 00	 jmp	 ??1?$map@KUCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUCHARACTER@@@std@@@3@@std@@QAE@XZ
__ehhandler$??0ioGlobalSoldierInfo@@QAE@XZ:
  0003d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00041	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00044	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00047	33 c8		 xor	 ecx, eax
  00049	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioGlobalSoldierInfo@@QAE@XZ
  00053	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioGlobalSoldierInfo@@QAE@XZ ENDP			; ioGlobalSoldierInfo::ioGlobalSoldierInfo
; Function compile flags: /Ogsp
;	COMDAT ??_GioGlobalSoldierInfo@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioGlobalSoldierInfo@@UAEPAXI@Z PROC			; ioGlobalSoldierInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioGlobalSoldierInfo@@UAE@XZ ; ioGlobalSoldierInfo::~ioGlobalSoldierInfo
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@4
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@4:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioGlobalSoldierInfo@@UAEPAXI@Z ENDP			; ioGlobalSoldierInfo::`scalar deleting destructor'
_TEXT	ENDS
END
