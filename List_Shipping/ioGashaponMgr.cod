; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioGashaponMgr.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?ms_Singleton@?$Singleton@VioGashaponMgr@@@@1PAVioGashaponMgr@@A ; Singleton<ioGashaponMgr>::ms_Singleton
;	COMDAT ?ms_Singleton@?$Singleton@VioGashaponMgr@@@@1PAVioGashaponMgr@@A
_BSS	SEGMENT
?ms_Singleton@?$Singleton@VioGashaponMgr@@@@1PAVioGashaponMgr@@A DD 01H DUP (?) ; Singleton<ioGashaponMgr>::ms_Singleton
_BSS	ENDS
PUBLIC	??1GashaponPresent@@QAE@XZ			; GashaponPresent::~GashaponPresent
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iogashaponmgr.cpp
;	COMDAT ??1GashaponPresent@@QAE@XZ
_TEXT	SEGMENT
??1GashaponPresent@@QAE@XZ PROC				; GashaponPresent::~GashaponPresent, COMDAT
; _this$ = ecx

; 11   : }

  00000	c3		 ret	 0
??1GashaponPresent@@QAE@XZ ENDP				; GashaponPresent::~GashaponPresent
_TEXT	ENDS
PUBLIC	?Clear@GashaponPresent@@QAEXXZ			; GashaponPresent::Clear
; Function compile flags: /Ogsp
;	COMDAT ?Clear@GashaponPresent@@QAEXXZ
_TEXT	SEGMENT
?Clear@GashaponPresent@@QAEXXZ PROC			; GashaponPresent::Clear, COMDAT
; _this$ = ecx

; 15   : 	m_iType			  = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 89 01	 mov	 WORD PTR [ecx], ax

; 16   : 	m_iValue1		  = 0;

  00005	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 17   : 	m_iValue2		  = 0;

  00008	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 18   : 	m_iOrder		  = 0;

  0000b	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 19   : 	m_iSpecialAddType = 0;

  0000e	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 20   : }

  00011	c3		 ret	 0
?Clear@GashaponPresent@@QAEXXZ ENDP			; GashaponPresent::Clear
_TEXT	ENDS
PUBLIC	?IsEmpty@GashaponPresent@@QAE_NXZ		; GashaponPresent::IsEmpty
; Function compile flags: /Ogsp
;	COMDAT ?IsEmpty@GashaponPresent@@QAE_NXZ
_TEXT	SEGMENT
?IsEmpty@GashaponPresent@@QAE_NXZ PROC			; GashaponPresent::IsEmpty, COMDAT
; _this$ = ecx

; 24   : 	if( m_iType <= 0 && m_iValue1 <= 0 && m_iValue2 <= 0 )

  00000	33 c0		 xor	 eax, eax
  00002	66 39 01	 cmp	 WORD PTR [ecx], ax
  00005	7f 0d		 jg	 SHORT $LN1@IsEmpty
  00007	39 41 04	 cmp	 DWORD PTR [ecx+4], eax
  0000a	7f 08		 jg	 SHORT $LN1@IsEmpty
  0000c	39 41 08	 cmp	 DWORD PTR [ecx+8], eax
  0000f	7f 03		 jg	 SHORT $LN1@IsEmpty

; 25   : 		return true;

  00011	b0 01		 mov	 al, 1

; 28   : }

  00013	c3		 ret	 0
$LN1@IsEmpty:

; 26   : 
; 27   : 	return false;

  00014	32 c0		 xor	 al, al

; 28   : }

  00016	c3		 ret	 0
?IsEmpty@GashaponPresent@@QAE_NXZ ENDP			; GashaponPresent::IsEmpty
_TEXT	ENDS
PUBLIC	??9@YA_NABVGashaponPresent@@0@Z			; operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9@YA_NABVGashaponPresent@@0@Z
_TEXT	SEGMENT
_lhs$ = 8						; size = 4
_rhs$ = 12						; size = 4
??9@YA_NABVGashaponPresent@@0@Z PROC			; operator!=, COMDAT

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 34   : 	if( lhs.m_iType == rhs.m_iType && lhs.m_iValue1 == rhs.m_iValue1 && lhs.m_iValue2 == rhs.m_iValue2 )

  00003	8b 45 08	 mov	 eax, DWORD PTR _lhs$[ebp]
  00006	66 8b 10	 mov	 dx, WORD PTR [eax]
  00009	8b 4d 0c	 mov	 ecx, DWORD PTR _rhs$[ebp]
  0000c	66 3b 11	 cmp	 dx, WORD PTR [ecx]
  0000f	75 14		 jne	 SHORT $LN1@operator
  00011	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00014	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00017	75 0c		 jne	 SHORT $LN1@operator
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  0001f	75 04		 jne	 SHORT $LN1@operator

; 35   : 		return false;

  00021	32 c0		 xor	 al, al

; 38   : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
$LN1@operator:

; 36   : 
; 37   : 	return true;

  00025	b0 01		 mov	 al, 1

; 38   : }

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??9@YA_NABVGashaponPresent@@0@Z ENDP			; operator!=
_TEXT	ENDS
PUBLIC	??8@YA_NABVGashaponPresent@@0@Z			; operator==
; Function compile flags: /Ogsp
;	COMDAT ??8@YA_NABVGashaponPresent@@0@Z
_TEXT	SEGMENT
_lhs$ = 8						; size = 4
_rhs$ = 12						; size = 4
??8@YA_NABVGashaponPresent@@0@Z PROC			; operator==, COMDAT

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 42   : 	if( lhs.m_iType == rhs.m_iType && lhs.m_iValue1 == rhs.m_iValue1 && lhs.m_iValue2 == rhs.m_iValue2 )

  00003	8b 45 08	 mov	 eax, DWORD PTR _lhs$[ebp]
  00006	66 8b 10	 mov	 dx, WORD PTR [eax]
  00009	8b 4d 0c	 mov	 ecx, DWORD PTR _rhs$[ebp]
  0000c	66 3b 11	 cmp	 dx, WORD PTR [ecx]
  0000f	75 14		 jne	 SHORT $LN1@operator@2
  00011	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00014	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00017	75 0c		 jne	 SHORT $LN1@operator@2
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  0001f	75 04		 jne	 SHORT $LN1@operator@2

; 43   : 		return true;

  00021	b0 01		 mov	 al, 1

; 46   : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
$LN1@operator@2:

; 44   : 
; 45   : 	return false;

  00025	32 c0		 xor	 al, al

; 46   : }

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??8@YA_NABVGashaponPresent@@0@Z ENDP			; operator==
_TEXT	ENDS
PUBLIC	??1ioINILoader_e@@QAE@XZ			; ioINILoader_e::~ioINILoader_e
EXTRN	__imp_??1ioINILoader@@QAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1ioINILoader_e@@QAE@XZ
_TEXT	SEGMENT
??1ioINILoader_e@@QAE@XZ PROC				; ioINILoader_e::~ioINILoader_e, COMDAT
; _this$ = ecx
  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
??1ioINILoader_e@@QAE@XZ ENDP				; ioINILoader_e::~ioINILoader_e
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1exception@std@@UAE@XZ
  00012	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00016	74 07		 je	 SHORT $LN1@scalar
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	59		 pop	 ecx
$LN1@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	return (_Where);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 58   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 62   : 	}

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??0?$Singleton@VioGashaponMgr@@@@QAE@XZ		; Singleton<ioGashaponMgr>::Singleton<ioGashaponMgr>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
;	COMDAT ??0?$Singleton@VioGashaponMgr@@@@QAE@XZ
_TEXT	SEGMENT
??0?$Singleton@VioGashaponMgr@@@@QAE@XZ PROC		; Singleton<ioGashaponMgr>::Singleton<ioGashaponMgr>, COMDAT
; _this$ = ecx

; 27   : 	Singleton()

  00000	8b c1		 mov	 eax, ecx

; 28   : 	{
; 29   : 		assert( !ms_Singleton );
; 30   : 		int offset = (int)(T*)1 - (int)(Singleton <T>*)(T*)1;
; 31   : 		ms_Singleton = (T*)((int)this + offset);

  00002	8d 48 fc	 lea	 ecx, DWORD PTR [eax-4]
  00005	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioGashaponMgr@@@@1PAVioGashaponMgr@@A, ecx ; Singleton<ioGashaponMgr>::ms_Singleton

; 32   : 	}

  0000b	c3		 ret	 0
??0?$Singleton@VioGashaponMgr@@@@QAE@XZ ENDP		; Singleton<ioGashaponMgr>::Singleton<ioGashaponMgr>
_TEXT	ENDS
PUBLIC	??1?$Singleton@VioGashaponMgr@@@@QAE@XZ		; Singleton<ioGashaponMgr>::~Singleton<ioGashaponMgr>
; Function compile flags: /Ogsp
;	COMDAT ??1?$Singleton@VioGashaponMgr@@@@QAE@XZ
_TEXT	SEGMENT
??1?$Singleton@VioGashaponMgr@@@@QAE@XZ PROC		; Singleton<ioGashaponMgr>::~Singleton<ioGashaponMgr>, COMDAT
; _this$ = ecx

; 36   : 		assert( ms_Singleton );
; 37   : 		ms_Singleton = 0;

  00000	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioGashaponMgr@@@@1PAVioGashaponMgr@@A, 0 ; Singleton<ioGashaponMgr>::ms_Singleton

; 38   : 	}

  00007	c3		 ret	 0
??1?$Singleton@VioGashaponMgr@@@@QAE@XZ ENDP		; Singleton<ioGashaponMgr>::~Singleton<ioGashaponMgr>
_TEXT	ENDS
PUBLIC	?GetSingleton@?$Singleton@VioGashaponMgr@@@@SAAAVioGashaponMgr@@XZ ; Singleton<ioGashaponMgr>::GetSingleton
; Function compile flags: /Ogsp
;	COMDAT ?GetSingleton@?$Singleton@VioGashaponMgr@@@@SAAAVioGashaponMgr@@XZ
_TEXT	SEGMENT
?GetSingleton@?$Singleton@VioGashaponMgr@@@@SAAAVioGashaponMgr@@XZ PROC ; Singleton<ioGashaponMgr>::GetSingleton, COMDAT

; 42   : 		assert( ms_Singleton );
; 43   : 		return (*ms_Singleton);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioGashaponMgr@@@@1PAVioGashaponMgr@@A ; Singleton<ioGashaponMgr>::ms_Singleton

; 44   : 	}

  00005	c3		 ret	 0
?GetSingleton@?$Singleton@VioGashaponMgr@@@@SAAAVioGashaponMgr@@XZ ENDP ; Singleton<ioGashaponMgr>::GetSingleton
_TEXT	ENDS
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xfunctional
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@K@std@@QBE_NABK0@Z PROC			; std::less<unsigned long>::operator(), COMDAT
; _this$ = ecx

; 124  : 		{	// apply operator< to operands

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 125  : 		return (_Left < _Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000b	3b 01		 cmp	 eax, DWORD PTR [ecx]
  0000d	1b c0		 sbb	 eax, eax
  0000f	f7 d8		 neg	 eax

; 126  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBE_NPBVGashaponPresent@@@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBE_NPBVGashaponPresent@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBE_NPBVGashaponPresent@@@Z PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBE_NPBVGashaponPresent@@@Z ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBEXPAVGashaponPresent@@0@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBEXPAVGashaponPresent@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBEXPAVGashaponPresent@@0@Z PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBEXPAVGashaponPresent@@0@Z ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator==
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())
; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 331  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::_Mynode
; Function compile flags: /Ogsp
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 123  : 		}

  00002	c3		 ret	 0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
PUBLIC	?capacity@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 14		 push	 20			; 00000014H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 778  : 		}

  0000b	c3		 ret	 0
?capacity@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::capacity
_TEXT	ENDS
PUBLIC	?size@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::size
; Function compile flags: /Ogsp
;	COMDAT ?size@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 14		 push	 20			; 00000014H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 880  : 		}

  0000b	c3		 ret	 0
?size@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::size
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBEXXZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
  0000b	cc		 int	 3
?_Xlen@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBEXXZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Xlen
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBKUGashaponPresentInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Myval
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBKUGashaponPresentInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBKUGashaponPresentInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 637  : 		return ((reference)(*_Pnode)._Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 638  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBKUGashaponPresentInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Node>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 		if (this->_Getcont() == 0
; 233  : 			|| this->_Ptr == 0
; 234  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)
; 235  : 			{	// report error
; 236  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 237  : 			_SCL_SECURE_OUT_OF_RANGE;
; 238  : 			}
; 239  : 
; 240  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 241  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 242  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 243  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 244  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 245  : 
; 246  : 		return (_Mytree::_Myval(this->_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 247  : 		}

  00005	c3		 ret	 0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@VGashaponPresent@@@std@@QBEIXZ ; std::allocator<GashaponPresent>::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@VGashaponPresent@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@VGashaponPresent@@@std@@QBEIXZ PROC ; std::allocator<GashaponPresent>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@VGashaponPresent@@@std@@QBEIXZ ENDP ; std::allocator<GashaponPresent>::max_size
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Color
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 607  : 		return ((char&)(*_Pnode)._Color);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 24	 add	 eax, 36			; 00000024H

; 608  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Isnil
; Function compile flags: /Ogsp
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 612  : 		return ((char&)(*_Pnode)._Isnil);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 25	 add	 eax, 37			; 00000025H

; 613  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Left
; Function compile flags: /Ogsp
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Parent
; Function compile flags: /Ogsp
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 628  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Right
; Function compile flags: /Ogsp
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 633  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Right
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 44   : 		this->_Adopt(_Plist);
; 45   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Rmost
; Function compile flags: /Ogsp
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1784 : 		return (this->_Right(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1785 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Max
; Function compile flags: /Ogsp
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Max
$LL2@Max:

; 643  : 			_Pnode = _Right(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Max:

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	80 79 25 00	 cmp	 BYTE PTR [ecx+37], 0
  00011	74 f5		 je	 SHORT $LL2@Max

; 644  : 		return (_Pnode);
; 645  : 		}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Max@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Min
; Function compile flags: /Ogsp
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Min
$LL2@Min:

; 650  : 			_Pnode = _Left(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Min:

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	80 79 25 00	 cmp	 BYTE PTR [ecx+37], 0
  00010	74 f6		 je	 SHORT $LL2@Min

; 651  : 		return (_Pnode);
; 652  : 		}

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?_Min@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Min
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0>::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC ; std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0>::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0>, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 41   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0>::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0>
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	53		 push	 ebx
  00005	32 db		 xor	 bl, bl
  00007	38 59 25	 cmp	 BYTE PTR [ecx+37], bl
  0000a	75 2d		 jne	 SHORT $LN3@operator@3

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

  0000c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000f	38 5a 25	 cmp	 BYTE PTR [edx+37], bl
  00012	75 0d		 jne	 SHORT $LN34@operator@3

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

$LL18@operator@3:
  00014	8b ca		 mov	 ecx, edx
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	38 5a 25	 cmp	 BYTE PTR [edx+37], bl
  0001b	74 f7		 je	 SHORT $LL18@operator@3
  0001d	89 08		 mov	 DWORD PTR [eax], ecx
  0001f	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  00020	c3		 ret	 0
$LN34@operator@3:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00021	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00024	eb 0c		 jmp	 SHORT $LN38@operator@3
$LL2@operator@3:
  00026	8b 08		 mov	 ecx, DWORD PTR [eax]
  00028	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  0002b	75 0a		 jne	 SHORT $LN1@operator@3

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
$LN38@operator@3:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00032	38 5a 25	 cmp	 BYTE PTR [edx+37], bl
  00035	74 ef		 je	 SHORT $LL2@operator@3
$LN1@operator@3:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

  00037	89 10		 mov	 DWORD PTR [eax], edx
$LN3@operator@3:
  00039	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  0003a	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
PUBLIC	??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ		; sprintf_s<260>
EXTRN	__imp__vsprintf_s:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\stdio.h
;	COMDAT ??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Format$ = 12						; size = 4
??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ PROC		; sprintf_s<260>, COMDAT

; 323  : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(int, sprintf_s, vsprintf_s, _Deref_post_z_ char, _Dest, _In_z_ _Printf_format_string_ const char *, _Format)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000a	68 04 01 00 00	 push	 260			; 00000104H
  0000f	ff 75 08	 push	 DWORD PTR __Dest$[ebp]
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__vsprintf_s
  00018	83 c4 10	 add	 esp, 16			; 00000010H
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ ENDP		; sprintf_s<260>
_TEXT	ENDS
PUBLIC	??$addressof@$$CBVGashaponPresent@@@std@@YAPBVGashaponPresent@@ABV1@@Z ; std::addressof<GashaponPresent const >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@$$CBVGashaponPresent@@@std@@YAPBVGashaponPresent@@ABV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBVGashaponPresent@@@std@@YAPBVGashaponPresent@@ABV1@@Z PROC ; std::addressof<GashaponPresent const >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@$$CBVGashaponPresent@@@std@@YAPBVGashaponPresent@@ABV1@@Z ENDP ; std::addressof<GashaponPresent const >
_TEXT	ENDS
PUBLIC	??$_Kfn@$$CBKUGashaponPresentInfo@@@?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z ; std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0>::_Kfn<unsigned long const ,GashaponPresentInfo>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??$_Kfn@$$CBKUGashaponPresentInfo@@@?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBKUGashaponPresentInfo@@@?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z PROC ; std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0>::_Kfn<unsigned long const ,GashaponPresentInfo>, COMDAT

; 66   : 		static const _Kty& _Kfn(const _STD pair<_Ty1, _Ty2>& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 		{	// extract key from element value
; 68   : 		return (_Val.first);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 69   : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Kfn@$$CBKUGashaponPresentInfo@@@?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z ENDP ; std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0>::_Kfn<unsigned long const ,GashaponPresentInfo>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@VGashaponPresent@@@std@@YAPAVGashaponPresent@@IPAV1@@Z ; std::_Allocate<GashaponPresent>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@VGashaponPresent@@@std@@YAPAVGashaponPresent@@IPAV1@@Z
_TEXT	SEGMENT
$T508622 = -12						; size = 12
$T508627 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@VGashaponPresent@@@std@@YAPAVGashaponPresent@@IPAV1@@Z PROC ; std::_Allocate<GashaponPresent>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 cc cc cc
	0c		 cmp	 ecx, 214748364		; 0cccccccH
  00015	77 0e		 ja	 SHORT $LN1@Allocate
  00017	6b c9 14	 imul	 ecx, 20			; 00000014H
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T508627[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T508627[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T508622[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T508622[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T508622[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@VGashaponPresent@@@std@@YAPAVGashaponPresent@@IPAV1@@Z ENDP ; std::_Allocate<GashaponPresent>
_TEXT	ENDS
PUBLIC	??$addressof@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@YAPAU?$pair@$$CBKUGashaponPresentInfo@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned long const ,GashaponPresentInfo> >
; Function compile flags: /Ogsp
;	COMDAT ??$addressof@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@YAPAU?$pair@$$CBKUGashaponPresentInfo@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@YAPAU?$pair@$$CBKUGashaponPresentInfo@@@0@AAU10@@Z PROC ; std::addressof<std::pair<unsigned long const ,GashaponPresentInfo> >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@YAPAU?$pair@$$CBKUGashaponPresentInfo@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<unsigned long const ,GashaponPresentInfo> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Node><std::pair<unsigned long const ,GashaponPresentInfo> >
; Function compile flags: /Ogsp
;	COMDAT ??$?0U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Node><std::pair<unsigned long const ,GashaponPresentInfo> >, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Node><std::pair<unsigned long const ,GashaponPresentInfo> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Node>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T508637 = -12						; size = 12
$T508641 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate@2

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 66 66 66
	06		 cmp	 ecx, 107374182		; 06666666H
  00015	77 0e		 ja	 SHORT $LN1@Allocate@2
  00017	6b c9 28	 imul	 ecx, 40			; 00000028H
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T508641[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T508641[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T508637[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T508637[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T508637[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate@2:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 aa aa aa 0a	 mov	 eax, 178956970		; 0aaaaaaaH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >::max_size
_TEXT	ENDS
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator--
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 83   : 		{	// predecrement

  00000	8b c1		 mov	 eax, ecx

; 84   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	53		 push	 ebx
  00005	32 db		 xor	 bl, bl
  00007	38 59 25	 cmp	 BYTE PTR [ecx+37], bl
  0000a	74 07		 je	 SHORT $LN8@operator@4

; 85   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

  0000c	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
  00011	5b		 pop	 ebx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00012	c3		 ret	 0
$LN8@operator@4:

; 86   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	38 5a 25	 cmp	 BYTE PTR [edx+37], bl
  00018	74 07		 je	 SHORT $LN44@operator@4

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0001a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001d	eb 17		 jmp	 SHORT $LN46@operator@4

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

$LL22@operator@4:
  0001f	8b d1		 mov	 edx, ecx
$LN44@operator@4:
  00021	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00024	38 59 25	 cmp	 BYTE PTR [ecx+37], bl
  00027	74 f6		 je	 SHORT $LL22@operator@4

; 89   : 		else

  00029	eb 17		 jmp	 SHORT $LN45@operator@4
$LL4@operator@4:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0002f	75 0a		 jne	 SHORT $LN3@operator@4

; 94   : 				_Ptr = _Pnode;	// ==> parent while left subtree

  00031	89 10		 mov	 DWORD PTR [eax], edx
  00033	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
$LN46@operator@4:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  00036	38 5a 25	 cmp	 BYTE PTR [edx+37], bl
  00039	74 f0		 je	 SHORT $LL4@operator@4
$LN3@operator@4:

; 95   : 			if (_Mytree::_Isnil(_Ptr))

  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	38 59 25	 cmp	 BYTE PTR [ecx+37], bl
  00040	75 02		 jne	 SHORT $LN1@operator@4
$LN45@operator@4:

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

  00042	89 10		 mov	 DWORD PTR [eax], edx
$LN1@operator@4:
  00044	5b		 pop	 ebx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00045	c3		 ret	 0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
PUBLIC	??$forward@AAUGashaponPresentInfo@@@std@@YAAAUGashaponPresentInfo@@AAU1@@Z ; std::forward<GashaponPresentInfo &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAUGashaponPresentInfo@@@std@@YAAAUGashaponPresentInfo@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUGashaponPresentInfo@@@std@@YAAAUGashaponPresentInfo@@AAU1@@Z PROC ; std::forward<GashaponPresentInfo &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAUGashaponPresentInfo@@@std@@YAAAUGashaponPresentInfo@@AAU1@@Z ENDP ; std::forward<GashaponPresentInfo &>
_TEXT	ENDS
PUBLIC	??$forward@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@YA$$QAU?$pair@$$CBKUGashaponPresentInfo@@@0@AAU10@@Z ; std::forward<std::pair<unsigned long const ,GashaponPresentInfo> >
; Function compile flags: /Ogsp
;	COMDAT ??$forward@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@YA$$QAU?$pair@$$CBKUGashaponPresentInfo@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@YA$$QAU?$pair@$$CBKUGashaponPresentInfo@@@0@AAU10@@Z PROC ; std::forward<std::pair<unsigned long const ,GashaponPresentInfo> >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@YA$$QAU?$pair@$$CBKUGashaponPresentInfo@@@0@AAU10@@Z ENDP ; std::forward<std::pair<unsigned long const ,GashaponPresentInfo> >
_TEXT	ENDS
PUBLIC	??$forward@AAVGashaponPresent@@@std@@YAAAVGashaponPresent@@AAV1@@Z ; std::forward<GashaponPresent &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@AAVGashaponPresent@@@std@@YAAAVGashaponPresent@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAVGashaponPresent@@@std@@YAAAVGashaponPresent@@AAV1@@Z PROC ; std::forward<GashaponPresent &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAVGashaponPresent@@@std@@YAAAVGashaponPresent@@AAV1@@Z ENDP ; std::forward<GashaponPresent &>
_TEXT	ENDS
PUBLIC	??$construct@AAVGashaponPresent@@@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@AAV2@@Z ; std::allocator<GashaponPresent>::construct<GashaponPresent &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAVGashaponPresent@@@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@AAV2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAVGashaponPresent@@@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@AAV2@@Z PROC ; std::allocator<GashaponPresent>::construct<GashaponPresent &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN3@construct
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	6a 05		 push	 5
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN3@construct:
  00015	5f		 pop	 edi

; 209  : 		}

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
??$construct@AAVGashaponPresent@@@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@AAV2@@Z ENDP ; std::allocator<GashaponPresent>::construct<GashaponPresent &>
_TEXT	ENDS
PUBLIC	??$forward@ABVGashaponPresent@@@std@@YAABVGashaponPresent@@ABV1@@Z ; std::forward<GashaponPresent const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABVGashaponPresent@@@std@@YAABVGashaponPresent@@ABV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABVGashaponPresent@@@std@@YAABVGashaponPresent@@ABV1@@Z PROC ; std::forward<GashaponPresent const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABVGashaponPresent@@@std@@YAABVGashaponPresent@@ABV1@@Z ENDP ; std::forward<GashaponPresent const &>
_TEXT	ENDS
PUBLIC	??$_Construct@VGashaponPresent@@ABV1@@std@@YAXPAVGashaponPresent@@ABV1@@Z ; std::_Construct<GashaponPresent,GashaponPresent const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Construct@VGashaponPresent@@ABV1@@std@@YAXPAVGashaponPresent@@ABV1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@VGashaponPresent@@ABV1@@std@@YAXPAVGashaponPresent@@ABV1@@Z PROC ; std::_Construct<GashaponPresent,GashaponPresent const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN3@Construct
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	6a 05		 push	 5
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN3@Construct:
  00015	5f		 pop	 edi

; 49   : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Construct@VGashaponPresent@@ABV1@@std@@YAXPAVGashaponPresent@@ABV1@@Z ENDP ; std::_Construct<GashaponPresent,GashaponPresent const &>
_TEXT	ENDS
PUBLIC	??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > > &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > > &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > > &>
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QAE@PAVGashaponPresent@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QAE@PAVGashaponPresent@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QAE@PAVGashaponPresent@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QAE@PAVGashaponPresent@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >
_TEXT	ENDS
PUBLIC	??$_Val_type@PAVGashaponPresent@@@std@@YAPAVGashaponPresent@@PAV1@@Z ; std::_Val_type<GashaponPresent *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAVGashaponPresent@@@std@@YAPAVGashaponPresent@@PAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAVGashaponPresent@@@std@@YAPAVGashaponPresent@@PAV1@@Z PROC ; std::_Val_type<GashaponPresent *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAVGashaponPresent@@@std@@YAPAVGashaponPresent@@PAV1@@Z ENDP ; std::_Val_type<GashaponPresent *>
_TEXT	ENDS
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > > &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > > &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$forward@VGashaponPresent@@@std@@YA$$QAVGashaponPresent@@AAV1@@Z ; std::forward<GashaponPresent>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@VGashaponPresent@@@std@@YA$$QAVGashaponPresent@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@VGashaponPresent@@@std@@YA$$QAVGashaponPresent@@AAV1@@Z PROC ; std::forward<GashaponPresent>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@VGashaponPresent@@@std@@YA$$QAVGashaponPresent@@AAV1@@Z ENDP ; std::forward<GashaponPresent>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@PAVGashaponPresent@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@0@AAPAVGashaponPresent@@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >,GashaponPresent *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@PAVGashaponPresent@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@0@AAPAVGashaponPresent@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@PAVGashaponPresent@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@0@AAPAVGashaponPresent@@@Z PROC ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >,GashaponPresent *>, COMDAT

; 485  : 	{	// return pointer category from arbitrary arguments

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 486  : 	_Nonscalar_ptr_iterator_tag _Cat;
; 487  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 488  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@PAVGashaponPresent@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@0@AAPAVGashaponPresent@@@Z ENDP ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >,GashaponPresent *>
_TEXT	ENDS
PUBLIC	??$forward@$$CBK@std@@YA$$QBKABK@Z		; std::forward<unsigned long const >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@$$CBK@std@@YA$$QBKABK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@$$CBK@std@@YA$$QBKABK@Z PROC			; std::forward<unsigned long const >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@$$CBK@std@@YA$$QBKABK@Z ENDP			; std::forward<unsigned long const >
_TEXT	ENDS
PUBLIC	??$forward@UGashaponPresentInfo@@@std@@YA$$QAUGashaponPresentInfo@@AAU1@@Z ; std::forward<GashaponPresentInfo>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@UGashaponPresentInfo@@@std@@YA$$QAUGashaponPresentInfo@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UGashaponPresentInfo@@@std@@YA$$QAUGashaponPresentInfo@@AAU1@@Z PROC ; std::forward<GashaponPresentInfo>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@UGashaponPresentInfo@@@std@@YA$$QAUGashaponPresentInfo@@AAU1@@Z ENDP ; std::forward<GashaponPresentInfo>
_TEXT	ENDS
PUBLIC	??$move@ABK@std@@YA$$QBKABK@Z			; std::move<unsigned long const &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@ABK@std@@YA$$QBKABK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@ABK@std@@YA$$QBKABK@Z PROC			; std::move<unsigned long const &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@ABK@std@@YA$$QBKABK@Z ENDP			; std::move<unsigned long const &>
_TEXT	ENDS
PUBLIC	??$move@AAUGashaponPresentInfo@@@std@@YA$$QAUGashaponPresentInfo@@AAU1@@Z ; std::move<GashaponPresentInfo &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@AAUGashaponPresentInfo@@@std@@YA$$QAUGashaponPresentInfo@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUGashaponPresentInfo@@@std@@YA$$QAUGashaponPresentInfo@@AAU1@@Z PROC ; std::move<GashaponPresentInfo &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAUGashaponPresentInfo@@@std@@YA$$QAUGashaponPresentInfo@@AAU1@@Z ENDP ; std::move<GashaponPresentInfo &>
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBEABVGashaponPresent@@XZ ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBEABVGashaponPresent@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBEABVGashaponPresent@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::operator*, COMDAT
; _this$ = ecx

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 85   : 		}

  00002	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBEABVGashaponPresent@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::operator++, COMDAT
; _this$ = ecx

; 93   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

  00002	83 00 14	 add	 DWORD PTR [eax], 20	; 00000014H

; 111  : 		return (*this);
; 112  : 		}

  00005	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::operator++
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::_Compat
; Function compile flags: /Ogsp
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::_Compat
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ ; std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >::~_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >::~_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >::~_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >
_TEXT	ENDS
PUBLIC	??0?$allocator@VGashaponPresent@@@std@@QAE@XZ	; std::allocator<GashaponPresent>::allocator<GashaponPresent>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@VGashaponPresent@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@VGashaponPresent@@@std@@QAE@XZ PROC	; std::allocator<GashaponPresent>::allocator<GashaponPresent>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@VGashaponPresent@@@std@@QAE@XZ ENDP	; std::allocator<GashaponPresent>::allocator<GashaponPresent>
_TEXT	ENDS
PUBLIC	??0?$allocator@VGashaponPresent@@@std@@QAE@ABV01@@Z ; std::allocator<GashaponPresent>::allocator<GashaponPresent>
; Function compile flags: /Ogsp
;	COMDAT ??0?$allocator@VGashaponPresent@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@VGashaponPresent@@@std@@QAE@ABV01@@Z PROC ; std::allocator<GashaponPresent>::allocator<GashaponPresent>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@VGashaponPresent@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<GashaponPresent>::allocator<GashaponPresent>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@I@Z ; std::allocator<GashaponPresent>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@I@Z PROC ; std::allocator<GashaponPresent>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@I@Z ENDP ; std::allocator<GashaponPresent>::deallocate
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$forward@AAH@std@@YAAAHAAH@Z			; std::forward<int &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAH@std@@YAAAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAH@std@@YAAAHAAH@Z PROC			; std::forward<int &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAH@std@@YAAAHAAH@Z ENDP			; std::forward<int &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@VGashaponPresent@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVGashaponPresent@@0@Z ; std::_Ptr_cat<GashaponPresent,GashaponPresent>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@VGashaponPresent@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVGashaponPresent@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@VGashaponPresent@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVGashaponPresent@@0@Z PROC ; std::_Ptr_cat<GashaponPresent,GashaponPresent>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@VGashaponPresent@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVGashaponPresent@@0@Z ENDP ; std::_Ptr_cat<GashaponPresent,GashaponPresent>
_TEXT	ENDS
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT

; 94   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 95   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 96   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
_TEXT	ENDS
PUBLIC	??$move@AA_N@std@@YA$$QA_NAA_N@Z		; std::move<bool &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@AA_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AA_N@std@@YA$$QA_NAA_N@Z PROC			; std::move<bool &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AA_N@std@@YA$$QA_NAA_N@Z ENDP			; std::move<bool &>
_TEXT	ENDS
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
PUBLIC	??_GGashaponPresent@@QAEPAXI@Z			; GashaponPresent::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_GGashaponPresent@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GGashaponPresent@@QAEPAXI@Z PROC			; GashaponPresent::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	74 07		 je	 SHORT $LN1@scalar@2
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	59		 pop	 ecx
$LN1@scalar@2:
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??_GGashaponPresent@@QAEPAXI@Z ENDP			; GashaponPresent::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0GashaponPresent@@QAE@XZ			; GashaponPresent::GashaponPresent
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iogashaponmgr.cpp
;	COMDAT ??0GashaponPresent@@QAE@XZ
_TEXT	SEGMENT
??0GashaponPresent@@QAE@XZ PROC				; GashaponPresent::GashaponPresent, COMDAT
; _this$ = ecx

; 5    : {

  00000	8b c1		 mov	 eax, ecx

; 6    : 	Clear();

  00002	33 c9		 xor	 ecx, ecx
  00004	66 89 08	 mov	 WORD PTR [eax], cx
  00007	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0000a	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0000d	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  00010	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 7    : }

  00013	c3		 ret	 0
??0GashaponPresent@@QAE@XZ ENDP				; GashaponPresent::GashaponPresent
_TEXT	ENDS
PUBLIC	?GetSingleton@ioGashaponMgr@@SAAAV1@XZ		; ioGashaponMgr::GetSingleton
; Function compile flags: /Ogsp
;	COMDAT ?GetSingleton@ioGashaponMgr@@SAAAV1@XZ
_TEXT	SEGMENT
?GetSingleton@ioGashaponMgr@@SAAAV1@XZ PROC		; ioGashaponMgr::GetSingleton, COMDAT

; 53   : 	return Singleton< ioGashaponMgr >::GetSingleton();

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioGashaponMgr@@@@1PAVioGashaponMgr@@A ; Singleton<ioGashaponMgr>::ms_Singleton

; 54   : }

  00005	c3		 ret	 0
?GetSingleton@ioGashaponMgr@@SAAAV1@XZ ENDP		; ioGashaponMgr::GetSingleton
_TEXT	ENDS
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator!=
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator!=, COMDAT
; _this$ = ecx

; 334  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 335  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 336  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >, COMDAT
; _this$ = ecx

; 555  : 		this->_Alnod.deallocate(this->_Myhead, 1);

  00000	ff 71 04	 push	 DWORD PTR [ecx+4]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx

; 556  : 		}

  00009	c3		 ret	 0
??1?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Key
; Function compile flags: /Ogsp
;	COMDAT ?_Key@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Key, COMDAT

; 616  : 		{	// return reference to key in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 617  : 		return ((key_type&)_Traits::_Kfn(_Myval(_Pnode)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 618  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Key@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Key
_TEXT	ENDS
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 396  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 397  : 		}

  00005	c3		 ret	 0
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator*, COMDAT
; _this$ = ecx

; 49   : 		return (_Mytree::_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 50   : 		}

  00005	c3		 ret	 0
??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator*
_TEXT	ENDS
PUBLIC	?max_size@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?max_size@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBEIXZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBEII@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBEII@Z PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	6a 14		 push	 20			; 00000014H
  0000a	99		 cdq
  0000b	59		 pop	 ecx
  0000c	f7 f9		 idiv	 ecx

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0000e	ba cc cc cc 0c	 mov	 edx, 214748364		; 0cccccccH
  00013	8b c8		 mov	 ecx, eax
  00015	d1 e9		 shr	 ecx, 1
  00017	2b d1		 sub	 edx, ecx
  00019	3b d0		 cmp	 edx, eax
  0001b	73 04		 jae	 SHORT $LN4@Grow_to
  0001d	33 c0		 xor	 eax, eax
  0001f	eb 02		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00021	03 c1		 add	 eax, ecx
$LN5@Grow_to:

; 1279 : 		if (_Capacity < _Count)

  00023	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00026	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?_Grow_to@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBEII@Z ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Grow_to
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 214  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@VGashaponPresent@@@std@@QAEPAVGashaponPresent@@I@Z ; std::allocator<GashaponPresent>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@VGashaponPresent@@@std@@QAEPAVGashaponPresent@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@VGashaponPresent@@@std@@QAEPAVGashaponPresent@@I@Z PROC ; std::allocator<GashaponPresent>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@VGashaponPresent@@@std@@YAPAVGashaponPresent@@IPAV1@@Z ; std::_Allocate<GashaponPresent>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@VGashaponPresent@@@std@@QAEPAVGashaponPresent@@I@Z ENDP ; std::allocator<GashaponPresent>::allocate
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Lmost
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1759 : 		return (this->_Left(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1760 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Root
; Function compile flags: /Ogsp
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1790 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >, COMDAT
; _this$ = ecx

; 482  : 		{	// construct traits from _Parg and allocators from _Al

  00000	8b c1		 mov	 eax, ecx

; 483  : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Node>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Node>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Lrotate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00009	56		 push	 esi

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

  0000f	8b 30		 mov	 esi, DWORD PTR [eax]
  00011	80 7e 25 00	 cmp	 BYTE PTR [esi+37], 0
  00015	75 03		 jne	 SHORT $LN5@Lrotate

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Lrotate:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 05		 jne	 SHORT $LN4@Lrotate

; 1772 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

  0002c	eb 0e		 jmp	 SHORT $LN1@Lrotate
$LN4@Lrotate:
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00033	75 04		 jne	 SHORT $LN2@Lrotate

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  00035	89 01		 mov	 DWORD PTR [ecx], eax

; 1775 : 		else

  00037	eb 03		 jmp	 SHORT $LN1@Lrotate
$LN2@Lrotate:

; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00039	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@Lrotate:

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0003c	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  0003e	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Rrotate
; Function compile flags: /Ogsp
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	56		 push	 esi

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

  00009	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000c	89 32		 mov	 DWORD PTR [edx], esi

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

  0000e	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00011	80 7e 25 00	 cmp	 BYTE PTR [esi+37], 0
  00015	75 03		 jne	 SHORT $LN5@Rrotate

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Rrotate:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 05		 jne	 SHORT $LN4@Rrotate

; 1802 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

  0002c	eb 0f		 jmp	 SHORT $LN1@Rrotate
$LN4@Rrotate:
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00034	75 05		 jne	 SHORT $LN2@Rrotate

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00036	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1805 : 		else

  00039	eb 02		 jmp	 SHORT $LN1@Rrotate
$LN2@Rrotate:

; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  0003b	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@Rrotate:

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  0003d	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00040	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))
; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 257  : 			_SCL_SECURE_OUT_OF_RANGE;
; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator++

; 266  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 267  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$SetTitle_e@$06@ioINILoader@@QAEXAAY06$$CBD@Z	; ioINILoader::SetTitle_e<7>
EXTRN	__imp_?SetTitle@ioINILoader@@QAEXPBD@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$SetTitle_e@$06@ioINILoader@@QAEXAAY06$$CBD@Z
_TEXT	SEGMENT
__t$ = -16						; size = 7
__$ArrayPad$ = -4					; size = 4
_t$ = 8							; size = 4
??$SetTitle_e@$06@ioINILoader@@QAEXAAY06$$CBD@Z PROC	; ioINILoader::SetTitle_e<7>, COMDAT
; _this$ = ecx

; 188  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]

; 189  : 		_ENCSTR(t, _t);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 c0 00 00
	00		 je	 $LN96@SetTitle_e
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 f0	 mov	 BYTE PTR __t$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 a9 00 00
	00		 je	 $LN95@SetTitle_e
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 f1	 mov	 BYTE PTR __t$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 92 00 00
	00		 je	 $LN94@SetTitle_e
  00042	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00045	88 55 f2	 mov	 BYTE PTR __t$[ebp+2], dl
  00048	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004b	84 d2		 test	 dl, dl
  0004d	74 7f		 je	 SHORT $LN93@SetTitle_e
  0004f	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00052	88 55 f3	 mov	 BYTE PTR __t$[ebp+3], dl
  00055	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00058	84 d2		 test	 dl, dl
  0005a	74 6c		 je	 SHORT $LN92@SetTitle_e
  0005c	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0005f	88 55 f4	 mov	 BYTE PTR __t$[ebp+4], dl
  00062	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00065	84 d2		 test	 dl, dl
  00067	74 59		 je	 SHORT $LN91@SetTitle_e
  00069	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0006c	80 78 06 00	 cmp	 BYTE PTR [eax+6], 0
  00070	88 55 f5	 mov	 BYTE PTR __t$[ebp+5], dl
  00073	74 6f		 je	 SHORT $LN1@SetTitle_e
  00075	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00078	84 d2		 test	 dl, dl
  0007a	74 40		 je	 SHORT $LN89@SetTitle_e
  0007c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0007f	88 55 f7	 mov	 BYTE PTR __t$[ebp+7], dl
  00082	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  00085	84 d2		 test	 dl, dl
  00087	74 2d		 je	 SHORT $LN88@SetTitle_e
  00089	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0008c	88 55 f8	 mov	 BYTE PTR __t$[ebp+8], dl
  0008f	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  00092	84 d2		 test	 dl, dl
  00094	74 1a		 je	 SHORT $LN87@SetTitle_e
  00096	8a 40 0a	 mov	 al, BYTE PTR [eax+10]
  00099	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0009c	88 55 f9	 mov	 BYTE PTR __t$[ebp+9], dl
  0009f	84 c0		 test	 al, al
  000a1	74 07		 je	 SHORT $LN86@SetTitle_e
  000a3	34 eb		 xor	 al, -21			; ffffffebH
  000a5	88 45 fa	 mov	 BYTE PTR __t$[ebp+10], al
  000a8	eb 3a		 jmp	 SHORT $LN1@SetTitle_e
$LN86@SetTitle_e:
  000aa	c6 45 fa eb	 mov	 BYTE PTR __t$[ebp+10], -21 ; ffffffebH
  000ae	eb 34		 jmp	 SHORT $LN1@SetTitle_e
$LN87@SetTitle_e:
  000b0	c6 45 f9 ec	 mov	 BYTE PTR __t$[ebp+9], -20 ; ffffffecH
  000b4	eb 2e		 jmp	 SHORT $LN1@SetTitle_e
$LN88@SetTitle_e:
  000b6	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  000ba	eb 28		 jmp	 SHORT $LN1@SetTitle_e
$LN89@SetTitle_e:
  000bc	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  000c0	eb 22		 jmp	 SHORT $LN1@SetTitle_e
$LN91@SetTitle_e:
  000c2	c6 45 f5 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  000c6	eb 1c		 jmp	 SHORT $LN1@SetTitle_e
$LN92@SetTitle_e:
  000c8	c6 45 f4 ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  000cc	eb 16		 jmp	 SHORT $LN1@SetTitle_e
$LN93@SetTitle_e:
  000ce	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  000d2	eb 10		 jmp	 SHORT $LN1@SetTitle_e
$LN94@SetTitle_e:
  000d4	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  000d8	eb 0a		 jmp	 SHORT $LN1@SetTitle_e
$LN95@SetTitle_e:
  000da	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  000de	eb 04		 jmp	 SHORT $LN1@SetTitle_e
$LN96@SetTitle_e:
  000e0	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@SetTitle_e:
  000e4	81 75 f0 ed ec
	eb ea		 xor	 DWORD PTR __t$[ebp], -353637139 ; eaebecedH
  000eb	6a 04		 push	 4
  000ed	c6 45 f6 00	 mov	 BYTE PTR __t$[ebp+6], 0
  000f1	58		 pop	 eax
$LL101@SetTitle_e:
  000f2	8b c8		 mov	 ecx, eax
  000f4	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  000fa	79 05		 jns	 SHORT $LN111@SetTitle_e
  000fc	49		 dec	 ecx
  000fd	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00100	41		 inc	 ecx
$LN111@SetTitle_e:
  00101	b2 ed		 mov	 dl, -19			; ffffffedH
  00103	2a d1		 sub	 dl, cl
  00105	30 54 05 f0	 xor	 BYTE PTR __t$[ebp+eax], dl
  00109	40		 inc	 eax
  0010a	83 f8 06	 cmp	 eax, 6
  0010d	7c e3		 jl	 SHORT $LL101@SetTitle_e

; 190  : 		SetTitle(_t);

  0010f	8d 45 f0	 lea	 eax, DWORD PTR __t$[ebp]
  00112	50		 push	 eax
  00113	8b ce		 mov	 ecx, esi
  00115	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 191  : 	}

  0011b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0011e	33 cd		 xor	 ecx, ebp
  00120	5e		 pop	 esi
  00121	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00126	c9		 leave
  00127	c2 04 00	 ret	 4
??$SetTitle_e@$06@ioINILoader@@QAEXAAY06$$CBD@Z ENDP	; ioINILoader::SetTitle_e<7>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$07@ioINILoader@@QAEHAAY07$$CBDH@Z	; ioINILoader::LoadInt_e<8>
EXTRN	__imp_?LoadInt@ioINILoader@@QAEHPBDH@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$07@ioINILoader@@QAEHAAY07$$CBDH@Z
_TEXT	SEGMENT
__k$ = -16						; size = 8
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$07@ioINILoader@@QAEHAAY07$$CBDH@Z PROC	; ioINILoader::LoadInt_e<8>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 d7 00 00
	00		 je	 $LN96@LoadInt_e
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 f0	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 c0 00 00
	00		 je	 $LN95@LoadInt_e
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 f1	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 a9 00 00
	00		 je	 $LN94@LoadInt_e
  00042	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00045	88 55 f2	 mov	 BYTE PTR __k$[ebp+2], dl
  00048	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004b	84 d2		 test	 dl, dl
  0004d	0f 84 92 00 00
	00		 je	 $LN93@LoadInt_e
  00053	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00056	88 55 f3	 mov	 BYTE PTR __k$[ebp+3], dl
  00059	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005c	84 d2		 test	 dl, dl
  0005e	74 7f		 je	 SHORT $LN92@LoadInt_e
  00060	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00063	88 55 f4	 mov	 BYTE PTR __k$[ebp+4], dl
  00066	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00069	84 d2		 test	 dl, dl
  0006b	74 6c		 je	 SHORT $LN91@LoadInt_e
  0006d	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00070	88 55 f5	 mov	 BYTE PTR __k$[ebp+5], dl
  00073	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00076	84 d2		 test	 dl, dl
  00078	74 59		 je	 SHORT $LN90@LoadInt_e
  0007a	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0007d	80 78 07 00	 cmp	 BYTE PTR [eax+7], 0
  00081	88 55 f6	 mov	 BYTE PTR __k$[ebp+6], dl
  00084	74 75		 je	 SHORT $LN1@LoadInt_e
  00086	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  00089	84 d2		 test	 dl, dl
  0008b	74 40		 je	 SHORT $LN88@LoadInt_e
  0008d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00090	88 55 f8	 mov	 BYTE PTR __k$[ebp+8], dl
  00093	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  00096	84 d2		 test	 dl, dl
  00098	74 2d		 je	 SHORT $LN87@LoadInt_e
  0009a	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0009d	88 55 f9	 mov	 BYTE PTR __k$[ebp+9], dl
  000a0	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000a3	84 d2		 test	 dl, dl
  000a5	74 1a		 je	 SHORT $LN86@LoadInt_e
  000a7	8a 40 0b	 mov	 al, BYTE PTR [eax+11]
  000aa	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000ad	88 55 fa	 mov	 BYTE PTR __k$[ebp+10], dl
  000b0	84 c0		 test	 al, al
  000b2	74 07		 je	 SHORT $LN85@LoadInt_e
  000b4	34 ea		 xor	 al, -22			; ffffffeaH
  000b6	88 45 fb	 mov	 BYTE PTR __k$[ebp+11], al
  000b9	eb 40		 jmp	 SHORT $LN1@LoadInt_e
$LN85@LoadInt_e:
  000bb	c6 45 fb ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  000bf	eb 3a		 jmp	 SHORT $LN1@LoadInt_e
$LN86@LoadInt_e:
  000c1	c6 45 fa eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  000c5	eb 34		 jmp	 SHORT $LN1@LoadInt_e
$LN87@LoadInt_e:
  000c7	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  000cb	eb 2e		 jmp	 SHORT $LN1@LoadInt_e
$LN88@LoadInt_e:
  000cd	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  000d1	eb 28		 jmp	 SHORT $LN1@LoadInt_e
$LN90@LoadInt_e:
  000d3	c6 45 f6 eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  000d7	eb 22		 jmp	 SHORT $LN1@LoadInt_e
$LN91@LoadInt_e:
  000d9	c6 45 f5 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  000dd	eb 1c		 jmp	 SHORT $LN1@LoadInt_e
$LN92@LoadInt_e:
  000df	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  000e3	eb 16		 jmp	 SHORT $LN1@LoadInt_e
$LN93@LoadInt_e:
  000e5	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  000e9	eb 10		 jmp	 SHORT $LN1@LoadInt_e
$LN94@LoadInt_e:
  000eb	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  000ef	eb 0a		 jmp	 SHORT $LN1@LoadInt_e
$LN95@LoadInt_e:
  000f1	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  000f5	eb 04		 jmp	 SHORT $LN1@LoadInt_e
$LN96@LoadInt_e:
  000f7	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e:
  000fb	81 75 f0 ed ec
	eb ea		 xor	 DWORD PTR __k$[ebp], -353637139 ; eaebecedH
  00102	6a 04		 push	 4
  00104	c6 45 f7 00	 mov	 BYTE PTR __k$[ebp+7], 0
  00108	58		 pop	 eax
$LL101@LoadInt_e:
  00109	8b c8		 mov	 ecx, eax
  0010b	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00111	79 05		 jns	 SHORT $LN111@LoadInt_e
  00113	49		 dec	 ecx
  00114	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00117	41		 inc	 ecx
$LN111@LoadInt_e:
  00118	b2 ed		 mov	 dl, -19			; ffffffedH
  0011a	2a d1		 sub	 dl, cl
  0011c	30 54 05 f0	 xor	 BYTE PTR __k$[ebp+eax], dl
  00120	40		 inc	 eax
  00121	83 f8 07	 cmp	 eax, 7
  00124	7c e3		 jl	 SHORT $LL101@LoadInt_e

; 120  : 		return LoadInt(_k, i);

  00126	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  00129	8d 45 f0	 lea	 eax, DWORD PTR __k$[ebp]
  0012c	50		 push	 eax
  0012d	8b ce		 mov	 ecx, esi
  0012f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  00135	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00138	33 cd		 xor	 ecx, ebp
  0013a	5e		 pop	 esi
  0013b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00140	c9		 leave
  00141	c2 08 00	 ret	 8
??$LoadInt_e@$07@ioINILoader@@QAEHAAY07$$CBDH@Z ENDP	; ioINILoader::LoadInt_e<8>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@AAV3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@AAV2@@Z ; std::_Cons_val<std::allocator<GashaponPresent>,GashaponPresent,GashaponPresent &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@AAV3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@AAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@AAV3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@AAV2@@Z PROC ; std::_Cons_val<std::allocator<GashaponPresent>,GashaponPresent,GashaponPresent &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00004	8b 7d 0c	 mov	 edi, DWORD PTR __Pdest$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN7@Cons_val
  0000b	56		 push	 esi
  0000c	8b 75 10	 mov	 esi, DWORD PTR __Src$[ebp]
  0000f	6a 05		 push	 5
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN7@Cons_val:
  00015	5f		 pop	 edi

; 281  : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@AAV3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@AAV2@@Z ENDP ; std::_Cons_val<std::allocator<GashaponPresent>,GashaponPresent,GashaponPresent &>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@ABV3@@Z ; std::allocator<GashaponPresent>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@ABV3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@ABV3@@Z PROC ; std::allocator<GashaponPresent>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 197  : 		_Construct(_Ptr, _Val);

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN5@construct@2
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	6a 05		 push	 5
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN5@construct@2:
  00015	5f		 pop	 edi

; 198  : 		}

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?construct@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@ABV3@@Z ENDP ; std::allocator<GashaponPresent>::construct
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::max_size, COMDAT
; _this$ = ecx

; 874  : 		return (this->_Alval.max_size());

  00000	b8 aa aa aa 0a	 mov	 eax, 178956970		; 0aaaaaaaH

; 875  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 146  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator--
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 277  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 278  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 279  : 		if (this->_Getcont() == 0
; 280  : 			|| this->_Ptr == 0)
; 281  : 			{	// report error
; 282  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 283  : 			_SCL_SECURE_OUT_OF_RANGE;
; 284  : 			}
; 285  : 
; 286  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 287  : 		--(*(_Mybase *)this);
; 288  : 		if (_Ptrsav == this->_Ptr)
; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 291  : 			_SCL_SECURE_OUT_OF_RANGE;
; 292  : 			}
; 293  : 
; 294  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 295  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 296  : 
; 297  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 298  : 		--(*(_Mybase *)this);
; 299  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 300  : 
; 301  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 302  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator--

; 303  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 304  : 
; 305  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 306  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??$encodeString@$0CA@@ioINILoader_e@@AAEPADAAY0CA@$$CBDPAD@Z ; ioINILoader_e::encodeString<32>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$encodeString@$0CA@@ioINILoader_e@@AAEPADAAY0CA@$$CBDPAD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_e$ = 12						; size = 4
??$encodeString@$0CA@@ioINILoader_e@@AAEPADAAY0CA@$$CBDPAD@Z PROC ; ioINILoader_e::encodeString<32>, COMDAT
; _this$ = ecx

; 215  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 216  : 		__ENCSTR(s, e);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _s$[ebp]
  00006	8a 11		 mov	 dl, BYTE PTR [ecx]
  00008	8b 45 0c	 mov	 eax, DWORD PTR _e$[ebp]
  0000b	53		 push	 ebx
  0000c	84 d2		 test	 dl, dl
  0000e	0f 84 6a 04 00
	00		 je	 $LN96@encodeStri
  00014	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00017	88 10		 mov	 BYTE PTR [eax], dl
  00019	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  0001c	84 d2		 test	 dl, dl
  0001e	0f 84 54 04 00
	00		 je	 $LN95@encodeStri
  00024	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00027	88 50 01	 mov	 BYTE PTR [eax+1], dl
  0002a	8a 51 02	 mov	 dl, BYTE PTR [ecx+2]
  0002d	84 d2		 test	 dl, dl
  0002f	0f 84 3d 04 00
	00		 je	 $LN94@encodeStri
  00035	b3 eb		 mov	 bl, -21			; ffffffebH
  00037	32 d3		 xor	 dl, bl
  00039	88 50 02	 mov	 BYTE PTR [eax+2], dl
  0003c	8a 51 03	 mov	 dl, BYTE PTR [ecx+3]
  0003f	84 d2		 test	 dl, dl
  00041	0f 84 25 04 00
	00		 je	 $LN93@encodeStri
  00047	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0004a	88 50 03	 mov	 BYTE PTR [eax+3], dl
  0004d	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  00050	84 d2		 test	 dl, dl
  00052	0f 84 0e 04 00
	00		 je	 $LN92@encodeStri
  00058	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0005b	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0005e	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  00061	84 d2		 test	 dl, dl
  00063	0f 84 f7 03 00
	00		 je	 $LN91@encodeStri
  00069	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0006c	88 50 05	 mov	 BYTE PTR [eax+5], dl
  0006f	8a 51 06	 mov	 dl, BYTE PTR [ecx+6]
  00072	84 d2		 test	 dl, dl
  00074	0f 84 e1 03 00
	00		 je	 $LN90@encodeStri
  0007a	32 d3		 xor	 dl, bl
  0007c	88 50 06	 mov	 BYTE PTR [eax+6], dl
  0007f	8a 51 07	 mov	 dl, BYTE PTR [ecx+7]
  00082	84 d2		 test	 dl, dl
  00084	0f 84 cb 03 00
	00		 je	 $LN89@encodeStri
  0008a	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0008d	88 50 07	 mov	 BYTE PTR [eax+7], dl
  00090	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  00093	84 d2		 test	 dl, dl
  00095	0f 84 b4 03 00
	00		 je	 $LN88@encodeStri
  0009b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0009e	88 50 08	 mov	 BYTE PTR [eax+8], dl
  000a1	8a 51 09	 mov	 dl, BYTE PTR [ecx+9]
  000a4	84 d2		 test	 dl, dl
  000a6	0f 84 9d 03 00
	00		 je	 $LN87@encodeStri
  000ac	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000af	88 50 09	 mov	 BYTE PTR [eax+9], dl
  000b2	8a 51 0a	 mov	 dl, BYTE PTR [ecx+10]
  000b5	84 d2		 test	 dl, dl
  000b7	0f 84 87 03 00
	00		 je	 $LN86@encodeStri
  000bd	32 d3		 xor	 dl, bl
  000bf	88 50 0a	 mov	 BYTE PTR [eax+10], dl
  000c2	8a 51 0b	 mov	 dl, BYTE PTR [ecx+11]
  000c5	84 d2		 test	 dl, dl
  000c7	0f 84 71 03 00
	00		 je	 $LN85@encodeStri
  000cd	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d0	88 50 0b	 mov	 BYTE PTR [eax+11], dl
  000d3	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
  000d6	84 d2		 test	 dl, dl
  000d8	0f 84 5a 03 00
	00		 je	 $LN84@encodeStri
  000de	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e1	88 50 0c	 mov	 BYTE PTR [eax+12], dl
  000e4	8a 51 0d	 mov	 dl, BYTE PTR [ecx+13]
  000e7	84 d2		 test	 dl, dl
  000e9	0f 84 43 03 00
	00		 je	 $LN83@encodeStri
  000ef	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000f2	88 50 0d	 mov	 BYTE PTR [eax+13], dl
  000f5	8a 51 0e	 mov	 dl, BYTE PTR [ecx+14]
  000f8	84 d2		 test	 dl, dl
  000fa	0f 84 2d 03 00
	00		 je	 $LN82@encodeStri
  00100	32 d3		 xor	 dl, bl
  00102	88 50 0e	 mov	 BYTE PTR [eax+14], dl
  00105	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  00108	84 d2		 test	 dl, dl
  0010a	0f 84 17 03 00
	00		 je	 $LN81@encodeStri
  00110	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00113	88 50 0f	 mov	 BYTE PTR [eax+15], dl
  00116	8a 51 10	 mov	 dl, BYTE PTR [ecx+16]
  00119	84 d2		 test	 dl, dl
  0011b	0f 84 00 03 00
	00		 je	 $LN80@encodeStri
  00121	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00124	88 50 10	 mov	 BYTE PTR [eax+16], dl
  00127	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  0012a	84 d2		 test	 dl, dl
  0012c	0f 84 e9 02 00
	00		 je	 $LN79@encodeStri
  00132	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00135	88 50 11	 mov	 BYTE PTR [eax+17], dl
  00138	8a 51 12	 mov	 dl, BYTE PTR [ecx+18]
  0013b	84 d2		 test	 dl, dl
  0013d	0f 84 d3 02 00
	00		 je	 $LN78@encodeStri
  00143	32 d3		 xor	 dl, bl
  00145	88 50 12	 mov	 BYTE PTR [eax+18], dl
  00148	8a 51 13	 mov	 dl, BYTE PTR [ecx+19]
  0014b	84 d2		 test	 dl, dl
  0014d	0f 84 bd 02 00
	00		 je	 $LN77@encodeStri
  00153	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00156	88 50 13	 mov	 BYTE PTR [eax+19], dl
  00159	8a 51 14	 mov	 dl, BYTE PTR [ecx+20]
  0015c	84 d2		 test	 dl, dl
  0015e	0f 84 a6 02 00
	00		 je	 $LN76@encodeStri
  00164	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00167	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0016a	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0016d	84 d2		 test	 dl, dl
  0016f	0f 84 8f 02 00
	00		 je	 $LN75@encodeStri
  00175	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00178	88 50 15	 mov	 BYTE PTR [eax+21], dl
  0017b	8a 51 16	 mov	 dl, BYTE PTR [ecx+22]
  0017e	84 d2		 test	 dl, dl
  00180	0f 84 79 02 00
	00		 je	 $LN74@encodeStri
  00186	32 d3		 xor	 dl, bl
  00188	88 50 16	 mov	 BYTE PTR [eax+22], dl
  0018b	8a 51 17	 mov	 dl, BYTE PTR [ecx+23]
  0018e	84 d2		 test	 dl, dl
  00190	0f 84 60 02 00
	00		 je	 $LN73@encodeStri
  00196	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00199	88 50 17	 mov	 BYTE PTR [eax+23], dl
  0019c	8a 51 18	 mov	 dl, BYTE PTR [ecx+24]
  0019f	84 d2		 test	 dl, dl
  001a1	0f 84 46 02 00
	00		 je	 $LN72@encodeStri
  001a7	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001aa	88 50 18	 mov	 BYTE PTR [eax+24], dl
  001ad	8a 51 19	 mov	 dl, BYTE PTR [ecx+25]
  001b0	84 d2		 test	 dl, dl
  001b2	0f 84 2c 02 00
	00		 je	 $LN71@encodeStri
  001b8	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001bb	88 50 19	 mov	 BYTE PTR [eax+25], dl
  001be	8a 51 1a	 mov	 dl, BYTE PTR [ecx+26]
  001c1	84 d2		 test	 dl, dl
  001c3	0f 84 13 02 00
	00		 je	 $LN70@encodeStri
  001c9	32 d3		 xor	 dl, bl
  001cb	88 50 1a	 mov	 BYTE PTR [eax+26], dl
  001ce	8a 51 1b	 mov	 dl, BYTE PTR [ecx+27]
  001d1	84 d2		 test	 dl, dl
  001d3	0f 84 fa 01 00
	00		 je	 $LN69@encodeStri
  001d9	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001dc	88 50 1b	 mov	 BYTE PTR [eax+27], dl
  001df	8a 51 1c	 mov	 dl, BYTE PTR [ecx+28]
  001e2	84 d2		 test	 dl, dl
  001e4	0f 84 e0 01 00
	00		 je	 $LN68@encodeStri
  001ea	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001ed	88 50 1c	 mov	 BYTE PTR [eax+28], dl
  001f0	8a 51 1d	 mov	 dl, BYTE PTR [ecx+29]
  001f3	84 d2		 test	 dl, dl
  001f5	0f 84 c6 01 00
	00		 je	 $LN67@encodeStri
  001fb	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001fe	88 50 1d	 mov	 BYTE PTR [eax+29], dl
  00201	8a 51 1e	 mov	 dl, BYTE PTR [ecx+30]
  00204	84 d2		 test	 dl, dl
  00206	0f 84 ad 01 00
	00		 je	 $LN66@encodeStri
  0020c	32 d3		 xor	 dl, bl
  0020e	88 50 1e	 mov	 BYTE PTR [eax+30], dl
  00211	8a 51 1f	 mov	 dl, BYTE PTR [ecx+31]
  00214	84 d2		 test	 dl, dl
  00216	0f 84 94 01 00
	00		 je	 $LN65@encodeStri
  0021c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0021f	88 50 1f	 mov	 BYTE PTR [eax+31], dl
  00222	8a 51 20	 mov	 dl, BYTE PTR [ecx+32]
  00225	84 d2		 test	 dl, dl
  00227	0f 84 7a 01 00
	00		 je	 $LN64@encodeStri
  0022d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00230	88 50 20	 mov	 BYTE PTR [eax+32], dl
  00233	8a 51 21	 mov	 dl, BYTE PTR [ecx+33]
  00236	84 d2		 test	 dl, dl
  00238	0f 84 60 01 00
	00		 je	 $LN63@encodeStri
  0023e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00241	88 50 21	 mov	 BYTE PTR [eax+33], dl
  00244	8a 51 22	 mov	 dl, BYTE PTR [ecx+34]
  00247	84 d2		 test	 dl, dl
  00249	0f 84 47 01 00
	00		 je	 $LN62@encodeStri
  0024f	32 d3		 xor	 dl, bl
  00251	88 50 22	 mov	 BYTE PTR [eax+34], dl
  00254	8a 51 23	 mov	 dl, BYTE PTR [ecx+35]
  00257	84 d2		 test	 dl, dl
  00259	0f 84 2e 01 00
	00		 je	 $LN61@encodeStri
  0025f	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00262	88 50 23	 mov	 BYTE PTR [eax+35], dl
  00265	8a 51 24	 mov	 dl, BYTE PTR [ecx+36]
  00268	84 d2		 test	 dl, dl
  0026a	0f 84 14 01 00
	00		 je	 $LN60@encodeStri
  00270	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00273	88 50 24	 mov	 BYTE PTR [eax+36], dl
  00276	8a 51 25	 mov	 dl, BYTE PTR [ecx+37]
  00279	84 d2		 test	 dl, dl
  0027b	0f 84 fa 00 00
	00		 je	 $LN59@encodeStri
  00281	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00284	88 50 25	 mov	 BYTE PTR [eax+37], dl
  00287	8a 51 26	 mov	 dl, BYTE PTR [ecx+38]
  0028a	84 d2		 test	 dl, dl
  0028c	0f 84 e1 00 00
	00		 je	 $LN58@encodeStri
  00292	32 d3		 xor	 dl, bl
  00294	88 50 26	 mov	 BYTE PTR [eax+38], dl
  00297	8a 51 27	 mov	 dl, BYTE PTR [ecx+39]
  0029a	84 d2		 test	 dl, dl
  0029c	0f 84 c8 00 00
	00		 je	 $LN57@encodeStri
  002a2	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002a5	88 50 27	 mov	 BYTE PTR [eax+39], dl
  002a8	8a 51 28	 mov	 dl, BYTE PTR [ecx+40]
  002ab	84 d2		 test	 dl, dl
  002ad	0f 84 ae 00 00
	00		 je	 $LN56@encodeStri
  002b3	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002b6	88 50 28	 mov	 BYTE PTR [eax+40], dl
  002b9	8a 51 29	 mov	 dl, BYTE PTR [ecx+41]
  002bc	84 d2		 test	 dl, dl
  002be	0f 84 94 00 00
	00		 je	 $LN55@encodeStri
  002c4	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002c7	88 50 29	 mov	 BYTE PTR [eax+41], dl
  002ca	8a 51 2a	 mov	 dl, BYTE PTR [ecx+42]
  002cd	84 d2		 test	 dl, dl
  002cf	74 7f		 je	 SHORT $LN54@encodeStri
  002d1	32 d3		 xor	 dl, bl
  002d3	88 50 2a	 mov	 BYTE PTR [eax+42], dl
  002d6	8a 51 2b	 mov	 dl, BYTE PTR [ecx+43]
  002d9	84 d2		 test	 dl, dl
  002db	74 6a		 je	 SHORT $LN53@encodeStri
  002dd	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002e0	88 50 2b	 mov	 BYTE PTR [eax+43], dl
  002e3	8a 51 2c	 mov	 dl, BYTE PTR [ecx+44]
  002e6	84 d2		 test	 dl, dl
  002e8	74 54		 je	 SHORT $LN52@encodeStri
  002ea	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002ed	88 50 2c	 mov	 BYTE PTR [eax+44], dl
  002f0	8a 51 2d	 mov	 dl, BYTE PTR [ecx+45]
  002f3	84 d2		 test	 dl, dl
  002f5	74 3e		 je	 SHORT $LN51@encodeStri
  002f7	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002fa	88 50 2d	 mov	 BYTE PTR [eax+45], dl
  002fd	8a 51 2e	 mov	 dl, BYTE PTR [ecx+46]
  00300	84 d2		 test	 dl, dl
  00302	74 29		 je	 SHORT $LN50@encodeStri
  00304	32 d3		 xor	 dl, bl
  00306	88 50 2e	 mov	 BYTE PTR [eax+46], dl
  00309	8a 51 2f	 mov	 dl, BYTE PTR [ecx+47]
  0030c	84 d2		 test	 dl, dl
  0030e	74 14		 je	 SHORT $LN49@encodeStri
  00310	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00313	88 50 2f	 mov	 BYTE PTR [eax+47], dl
  00316	8a 49 30	 mov	 cl, BYTE PTR [ecx+48]
  00319	80 f1 ed	 xor	 cl, -19			; ffffffedH
  0031c	88 48 30	 mov	 BYTE PTR [eax+48], cl
  0031f	e9 5d 01 00 00	 jmp	 $LN1@encodeStri
$LN49@encodeStri:
  00324	c6 40 2f ea	 mov	 BYTE PTR [eax+47], -22	; ffffffeaH
  00328	e9 54 01 00 00	 jmp	 $LN1@encodeStri
$LN50@encodeStri:
  0032d	88 58 2e	 mov	 BYTE PTR [eax+46], bl
  00330	e9 4c 01 00 00	 jmp	 $LN1@encodeStri
$LN51@encodeStri:
  00335	c6 40 2d ec	 mov	 BYTE PTR [eax+45], -20	; ffffffecH
  00339	e9 43 01 00 00	 jmp	 $LN1@encodeStri
$LN52@encodeStri:
  0033e	c6 40 2c ed	 mov	 BYTE PTR [eax+44], -19	; ffffffedH
  00342	e9 3a 01 00 00	 jmp	 $LN1@encodeStri
$LN53@encodeStri:
  00347	c6 40 2b ea	 mov	 BYTE PTR [eax+43], -22	; ffffffeaH
  0034b	e9 31 01 00 00	 jmp	 $LN1@encodeStri
$LN54@encodeStri:
  00350	88 58 2a	 mov	 BYTE PTR [eax+42], bl
  00353	e9 29 01 00 00	 jmp	 $LN1@encodeStri
$LN55@encodeStri:
  00358	c6 40 29 ec	 mov	 BYTE PTR [eax+41], -20	; ffffffecH
  0035c	e9 20 01 00 00	 jmp	 $LN1@encodeStri
$LN56@encodeStri:
  00361	c6 40 28 ed	 mov	 BYTE PTR [eax+40], -19	; ffffffedH
  00365	e9 17 01 00 00	 jmp	 $LN1@encodeStri
$LN57@encodeStri:
  0036a	c6 40 27 ea	 mov	 BYTE PTR [eax+39], -22	; ffffffeaH
  0036e	e9 0e 01 00 00	 jmp	 $LN1@encodeStri
$LN58@encodeStri:
  00373	88 58 26	 mov	 BYTE PTR [eax+38], bl
  00376	e9 06 01 00 00	 jmp	 $LN1@encodeStri
$LN59@encodeStri:
  0037b	c6 40 25 ec	 mov	 BYTE PTR [eax+37], -20	; ffffffecH
  0037f	e9 fd 00 00 00	 jmp	 $LN1@encodeStri
$LN60@encodeStri:
  00384	c6 40 24 ed	 mov	 BYTE PTR [eax+36], -19	; ffffffedH
  00388	e9 f4 00 00 00	 jmp	 $LN1@encodeStri
$LN61@encodeStri:
  0038d	c6 40 23 ea	 mov	 BYTE PTR [eax+35], -22	; ffffffeaH
  00391	e9 eb 00 00 00	 jmp	 $LN1@encodeStri
$LN62@encodeStri:
  00396	88 58 22	 mov	 BYTE PTR [eax+34], bl
  00399	e9 e3 00 00 00	 jmp	 $LN1@encodeStri
$LN63@encodeStri:
  0039e	c6 40 21 ec	 mov	 BYTE PTR [eax+33], -20	; ffffffecH
  003a2	e9 da 00 00 00	 jmp	 $LN1@encodeStri
$LN64@encodeStri:
  003a7	c6 40 20 ed	 mov	 BYTE PTR [eax+32], -19	; ffffffedH
  003ab	e9 d1 00 00 00	 jmp	 $LN1@encodeStri
$LN65@encodeStri:
  003b0	c6 40 1f ea	 mov	 BYTE PTR [eax+31], -22	; ffffffeaH
  003b4	e9 c8 00 00 00	 jmp	 $LN1@encodeStri
$LN66@encodeStri:
  003b9	88 58 1e	 mov	 BYTE PTR [eax+30], bl
  003bc	e9 c0 00 00 00	 jmp	 $LN1@encodeStri
$LN67@encodeStri:
  003c1	c6 40 1d ec	 mov	 BYTE PTR [eax+29], -20	; ffffffecH
  003c5	e9 b7 00 00 00	 jmp	 $LN1@encodeStri
$LN68@encodeStri:
  003ca	c6 40 1c ed	 mov	 BYTE PTR [eax+28], -19	; ffffffedH
  003ce	e9 ae 00 00 00	 jmp	 $LN1@encodeStri
$LN69@encodeStri:
  003d3	c6 40 1b ea	 mov	 BYTE PTR [eax+27], -22	; ffffffeaH
  003d7	e9 a5 00 00 00	 jmp	 $LN1@encodeStri
$LN70@encodeStri:
  003dc	88 58 1a	 mov	 BYTE PTR [eax+26], bl
  003df	e9 9d 00 00 00	 jmp	 $LN1@encodeStri
$LN71@encodeStri:
  003e4	c6 40 19 ec	 mov	 BYTE PTR [eax+25], -20	; ffffffecH
  003e8	e9 94 00 00 00	 jmp	 $LN1@encodeStri
$LN72@encodeStri:
  003ed	c6 40 18 ed	 mov	 BYTE PTR [eax+24], -19	; ffffffedH
  003f1	e9 8b 00 00 00	 jmp	 $LN1@encodeStri
$LN73@encodeStri:
  003f6	c6 40 17 ea	 mov	 BYTE PTR [eax+23], -22	; ffffffeaH
  003fa	e9 82 00 00 00	 jmp	 $LN1@encodeStri
$LN74@encodeStri:
  003ff	88 58 16	 mov	 BYTE PTR [eax+22], bl
  00402	eb 7d		 jmp	 SHORT $LN1@encodeStri
$LN75@encodeStri:
  00404	c6 40 15 ec	 mov	 BYTE PTR [eax+21], -20	; ffffffecH
  00408	eb 77		 jmp	 SHORT $LN1@encodeStri
$LN76@encodeStri:
  0040a	c6 40 14 ed	 mov	 BYTE PTR [eax+20], -19	; ffffffedH
  0040e	eb 71		 jmp	 SHORT $LN1@encodeStri
$LN77@encodeStri:
  00410	c6 40 13 ea	 mov	 BYTE PTR [eax+19], -22	; ffffffeaH
  00414	eb 6b		 jmp	 SHORT $LN1@encodeStri
$LN78@encodeStri:
  00416	88 58 12	 mov	 BYTE PTR [eax+18], bl
  00419	eb 66		 jmp	 SHORT $LN1@encodeStri
$LN79@encodeStri:
  0041b	c6 40 11 ec	 mov	 BYTE PTR [eax+17], -20	; ffffffecH
  0041f	eb 60		 jmp	 SHORT $LN1@encodeStri
$LN80@encodeStri:
  00421	c6 40 10 ed	 mov	 BYTE PTR [eax+16], -19	; ffffffedH
  00425	eb 5a		 jmp	 SHORT $LN1@encodeStri
$LN81@encodeStri:
  00427	c6 40 0f ea	 mov	 BYTE PTR [eax+15], -22	; ffffffeaH
  0042b	eb 54		 jmp	 SHORT $LN1@encodeStri
$LN82@encodeStri:
  0042d	88 58 0e	 mov	 BYTE PTR [eax+14], bl
  00430	eb 4f		 jmp	 SHORT $LN1@encodeStri
$LN83@encodeStri:
  00432	c6 40 0d ec	 mov	 BYTE PTR [eax+13], -20	; ffffffecH
  00436	eb 49		 jmp	 SHORT $LN1@encodeStri
$LN84@encodeStri:
  00438	c6 40 0c ed	 mov	 BYTE PTR [eax+12], -19	; ffffffedH
  0043c	eb 43		 jmp	 SHORT $LN1@encodeStri
$LN85@encodeStri:
  0043e	c6 40 0b ea	 mov	 BYTE PTR [eax+11], -22	; ffffffeaH
  00442	eb 3d		 jmp	 SHORT $LN1@encodeStri
$LN86@encodeStri:
  00444	88 58 0a	 mov	 BYTE PTR [eax+10], bl
  00447	eb 38		 jmp	 SHORT $LN1@encodeStri
$LN87@encodeStri:
  00449	c6 40 09 ec	 mov	 BYTE PTR [eax+9], -20	; ffffffecH
  0044d	eb 32		 jmp	 SHORT $LN1@encodeStri
$LN88@encodeStri:
  0044f	c6 40 08 ed	 mov	 BYTE PTR [eax+8], -19	; ffffffedH
  00453	eb 2c		 jmp	 SHORT $LN1@encodeStri
$LN89@encodeStri:
  00455	c6 40 07 ea	 mov	 BYTE PTR [eax+7], -22	; ffffffeaH
  00459	eb 26		 jmp	 SHORT $LN1@encodeStri
$LN90@encodeStri:
  0045b	88 58 06	 mov	 BYTE PTR [eax+6], bl
  0045e	eb 21		 jmp	 SHORT $LN1@encodeStri
$LN91@encodeStri:
  00460	c6 40 05 ec	 mov	 BYTE PTR [eax+5], -20	; ffffffecH
  00464	eb 1b		 jmp	 SHORT $LN1@encodeStri
$LN92@encodeStri:
  00466	c6 40 04 ed	 mov	 BYTE PTR [eax+4], -19	; ffffffedH
  0046a	eb 15		 jmp	 SHORT $LN1@encodeStri
$LN93@encodeStri:
  0046c	c6 40 03 ea	 mov	 BYTE PTR [eax+3], -22	; ffffffeaH
  00470	eb 0f		 jmp	 SHORT $LN1@encodeStri
$LN94@encodeStri:
  00472	c6 40 02 eb	 mov	 BYTE PTR [eax+2], -21	; ffffffebH
  00476	eb 09		 jmp	 SHORT $LN1@encodeStri
$LN95@encodeStri:
  00478	c6 40 01 ec	 mov	 BYTE PTR [eax+1], -20	; ffffffecH
  0047c	eb 03		 jmp	 SHORT $LN1@encodeStri
$LN96@encodeStri:
  0047e	c6 00 ed	 mov	 BYTE PTR [eax], -19	; ffffffedH
$LN1@encodeStri:
  00481	6a 07		 push	 7
  00483	5a		 pop	 edx
  00484	8b c8		 mov	 ecx, eax
  00486	c6 40 1f 00	 mov	 BYTE PTR [eax+31], 0
  0048a	5b		 pop	 ebx
$LL104@encodeStri:
  0048b	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  00491	83 c1 04	 add	 ecx, 4
  00494	4a		 dec	 edx
  00495	75 f4		 jne	 SHORT $LL104@encodeStri
  00497	56		 push	 esi
  00498	6a 1c		 push	 28			; 0000001cH
  0049a	5e		 pop	 esi
$LL101@encodeStri:
  0049b	8b ce		 mov	 ecx, esi
  0049d	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  004a3	79 05		 jns	 SHORT $LN111@encodeStri
  004a5	49		 dec	 ecx
  004a6	83 c9 fc	 or	 ecx, -4			; fffffffcH
  004a9	41		 inc	 ecx
$LN111@encodeStri:
  004aa	b2 ed		 mov	 dl, -19			; ffffffedH
  004ac	2a d1		 sub	 dl, cl
  004ae	30 14 06	 xor	 BYTE PTR [esi+eax], dl
  004b1	46		 inc	 esi
  004b2	83 fe 1f	 cmp	 esi, 31			; 0000001fH
  004b5	7c e4		 jl	 SHORT $LL101@encodeStri
  004b7	5e		 pop	 esi

; 217  : 		return e;
; 218  : 	}

  004b8	5d		 pop	 ebp
  004b9	c2 08 00	 ret	 8
??$encodeString@$0CA@@ioINILoader_e@@AAEPADAAY0CA@$$CBDPAD@Z ENDP ; ioINILoader_e::encodeString<32>
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Buynode
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
$T509241 = -16						; size = 12
$T509225 = -4						; size = 4
?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 559  : 		{	// allocate a node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00007	6a 28		 push	 40			; 00000028H
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	59		 pop	 ecx
  00011	33 c9		 xor	 ecx, ecx
  00013	3b c1		 cmp	 eax, ecx
  00015	74 18		 je	 SHORT $LN5@Buynode

; 561  : 
; 562  : 		this->_Left(_Wherenode) = this->_Myhead;

  00017	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001a	89 10		 mov	 DWORD PTR [eax], edx

; 563  : 		this->_Parent(_Wherenode) = this->_Myhead;

  0001c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001f	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 564  : 		this->_Right(_Wherenode) = this->_Myhead;

  00022	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00025	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 565  : 		this->_Color(_Wherenode) = this->_Red;

  00028	66 89 48 24	 mov	 WORD PTR [eax+36], cx
  0002c	5e		 pop	 esi

; 566  : 		this->_Isnil(_Wherenode) = false;
; 567  : 		return (_Wherenode);
; 568  : 		}

  0002d	c9		 leave
  0002e	c3		 ret	 0

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

$LN5@Buynode:
  0002f	8d 45 fc	 lea	 eax, DWORD PTR $T509225[ebp]
  00032	89 4d fc	 mov	 DWORD PTR $T509225[ebp], ecx
  00035	50		 push	 eax
  00036	8d 4d f0	 lea	 ecx, DWORD PTR $T509241[ebp]
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  0003f	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00044	8d 45 f0	 lea	 eax, DWORD PTR $T509241[ebp]
  00047	50		 push	 eax
  00048	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T509241[ebp], OFFSET ??_7bad_alloc@std@@6B@
  0004f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN27@Buynode:
$LN26@Buynode:
  00054	cc		 int	 3
?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?begin@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@XZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::begin
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?begin@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@XZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::begin, COMDAT
; _this$ = ecx

; 786  : 		{	// return iterator for beginning of nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 787  : 		return (const_iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 788  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@XZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@XZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@XZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::end, COMDAT
; _this$ = ecx

; 796  : 		{	// return iterator for end of nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 797  : 		return (const_iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 798  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@2@XZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::end
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAE_NI@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Buy
; Function compile flags: /Ogsp
;	COMDAT ?_Buy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAE_NI@Z PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Buy, COMDAT
; _this$ = ecx

; 1250 : 		{	// allocate array with _Capacity elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1251 : 		this->_Myfirst = 0;

  00004	33 c0		 xor	 eax, eax
  00006	57		 push	 edi

; 1252 : 		this->_Mylast = 0;
; 1253 : 		this->_Myend = 0;
; 1254 : 
; 1255 : 		if (_Capacity == 0)

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Capacity$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 06		 mov	 DWORD PTR [esi], eax
  0000e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00011	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00014	3b f8		 cmp	 edi, eax
  00016	75 04		 jne	 SHORT $LN4@Buy

; 1256 : 			return (false);

  00018	32 c0		 xor	 al, al
  0001a	eb 2b		 jmp	 SHORT $LN5@Buy
$LN4@Buy:

; 1257 : 		else if (max_size() < _Capacity)

  0001c	81 ff cc cc cc
	0c		 cmp	 edi, 214748364		; 0cccccccH
  00022	76 0b		 jbe	 SHORT $LN2@Buy

; 1258 : 			_Xlen();	// result too long

  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN19@Buy:
$LN2@Buy:

; 1259 : 		else
; 1260 : 			{	// nonempty array, allocate storage
; 1261 : 			this->_Myfirst = this->_Alval.allocate(_Capacity);

  0002f	50		 push	 eax
  00030	57		 push	 edi
  00031	e8 00 00 00 00	 call	 ??$_Allocate@VGashaponPresent@@@std@@YAPAVGashaponPresent@@IPAV1@@Z ; std::_Allocate<GashaponPresent>

; 1262 : 			this->_Mylast = this->_Myfirst;
; 1263 : 			this->_Myend = this->_Myfirst + _Capacity;

  00036	6b ff 14	 imul	 edi, 20			; 00000014H
  00039	03 f8		 add	 edi, eax
  0003b	59		 pop	 ecx
  0003c	89 06		 mov	 DWORD PTR [esi], eax
  0003e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00041	59		 pop	 ecx
  00042	89 7e 08	 mov	 DWORD PTR [esi+8], edi

; 1264 : 			}
; 1265 : 		return (true);

  00045	b0 01		 mov	 al, 1
$LN5@Buy:
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi

; 1266 : 		}

  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
$LN18@Buy:
?_Buy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Buy
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > > &,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 164  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@$$QAV3@@Z ; std::allocator<GashaponPresent>::construct
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@$$QAV3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@$$QAV3@@Z PROC ; std::allocator<GashaponPresent>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  00004	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN3@construct@3
  0000b	56		 push	 esi
  0000c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0000f	6a 05		 push	 5
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN3@construct@3:
  00015	5f		 pop	 edi

; 203  : 		}

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?construct@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@$$QAV3@@Z ENDP ; std::allocator<GashaponPresent>::construct
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::operator==
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::operator==
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@V?$allocator@VGashaponPresent@@@1@@Z ; std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@V?$allocator@VGashaponPresent@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@V?$allocator@VGashaponPresent@@@1@@Z PROC ; std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@V?$allocator@VGashaponPresent@@@1@@Z ENDP ; std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> >
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 101  : 	{	// exchange values stored at _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 102  : 	_Ty _Tmp = _Move(_Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8a 08		 mov	 cl, BYTE PTR [eax]
  00008	56		 push	 esi

; 103  : 	_Left = _Move(_Right);

  00009	8b 75 0c	 mov	 esi, DWORD PTR __Right$[ebp]
  0000c	8a 16		 mov	 dl, BYTE PTR [esi]
  0000e	88 10		 mov	 BYTE PTR [eax], dl

; 104  : 	_Right = _Move(_Tmp);

  00010	88 0e		 mov	 BYTE PTR [esi], cl
  00012	5e		 pop	 esi

; 105  : 	}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??$_Destroy@VGashaponPresent@@@std@@YAXPAVGashaponPresent@@@Z ; std::_Destroy<GashaponPresent>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@VGashaponPresent@@@std@@YAXPAVGashaponPresent@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@VGashaponPresent@@@std@@YAXPAVGashaponPresent@@@Z PROC ; std::_Destroy<GashaponPresent>, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@VGashaponPresent@@@std@@YAXPAVGashaponPresent@@@Z ENDP ; std::_Destroy<GashaponPresent>
_TEXT	ENDS
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator->
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ
_TEXT	SEGMENT
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator->, COMDAT
; _this$ = ecx

; 401  : 		return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 402  : 		}

  00005	c3		 ret	 0
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator->
_TEXT	ENDS
PUBLIC	??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPBU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator->
; Function compile flags: /Ogsp
;	COMDAT ??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPBU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ
_TEXT	SEGMENT
??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPBU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator->, COMDAT
; _this$ = ecx

; 54   : 		return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 55   : 		}

  00005	c3		 ret	 0
??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPBU?$pair@$$CBKUGashaponPresentInfo@@@1@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator->
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >, COMDAT
; _this$ = ecx

; 378  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 379  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 807  : 		return (iterator(_Lmost(), this));

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 808  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::begin
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Lbound
; Function compile flags: /Ogsp
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 1741 : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1742 : 		_Nodeptr _Pnode = _Root();

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00009	80 79 25 00	 cmp	 BYTE PTR [ecx+37], 0
  0000d	75 19		 jne	 SHORT $LN3@Lbound
  0000f	8b 55 08	 mov	 edx, DWORD PTR __Keyval$[ebp]
  00012	8b 12		 mov	 edx, DWORD PTR [edx]
$LL4@Lbound:

; 1746 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $LN2@Lbound

; 1747 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1748 : 			else

  0001c	eb 04		 jmp	 SHORT $LN1@Lbound
$LN2@Lbound:

; 1749 : 				{	// _Pnode not less than _Keyval, remember it
; 1750 : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 1751 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN1@Lbound:

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00022	80 79 25 00	 cmp	 BYTE PTR [ecx+37], 0
  00026	74 ec		 je	 SHORT $LL4@Lbound
$LN3@Lbound:

; 1752 : 				}
; 1753 : 
; 1754 : 		return (_Wherenode);	// return best remembered candidate
; 1755 : 		}

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z
_TEXT	SEGMENT
$T509546 = -16						; size = 12
$T509524 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >, COMDAT
; _this$ = ecx

; 542  : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 543  : 		this->_Mysize = 0;

  00009	83 66 08 00	 and	 DWORD PTR [esi+8], 0

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

  0000d	6a 28		 push	 40			; 00000028H
  0000f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00014	59		 pop	 ecx
  00015	85 c0		 test	 eax, eax
  00017	74 26		 je	 SHORT $LN15@Tree_val
  00019	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 545  : 
; 546  : 		this->_Left(this->_Myhead) = this->_Myhead;

  0001c	89 00		 mov	 DWORD PTR [eax], eax

; 547  : 		this->_Parent(this->_Myhead) = this->_Myhead;

  0001e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00021	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 548  : 		this->_Right(this->_Myhead) = this->_Myhead;

  00024	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00027	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 549  : 		this->_Color(this->_Myhead) = this->_Black;

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	c6 40 24 01	 mov	 BYTE PTR [eax+36], 1

; 550  : 		this->_Isnil(this->_Myhead) = true;

  00031	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00034	c6 40 25 01	 mov	 BYTE PTR [eax+37], 1

; 551  : 		}

  00038	8b c6		 mov	 eax, esi
  0003a	5e		 pop	 esi
  0003b	c9		 leave
  0003c	c2 08 00	 ret	 8

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

$LN15@Tree_val:
  0003f	83 65 fc 00	 and	 DWORD PTR $T509524[ebp], 0
  00043	8d 45 fc	 lea	 eax, DWORD PTR $T509524[ebp]
  00046	50		 push	 eax
  00047	8d 4d f0	 lea	 ecx, DWORD PTR $T509546[ebp]
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00050	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00055	8d 45 f0	 lea	 eax, DWORD PTR $T509546[ebp]
  00058	50		 push	 eax
  00059	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T509546[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00060	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN37@Tree_val:
$LN36@Tree_val:
  00065	cc		 int	 3
??0?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 270  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 271  : 		_Myiter _Tmp = *this;

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 06		 mov	 DWORD PTR [esi], eax

; 272  : 		++*this;

  0000b	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator++

; 273  : 		return (_Tmp);

  00010	8b c6		 mov	 eax, esi
  00012	5e		 pop	 esi

; 274  : 		}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??$?0$0CA@@ioINILoader_e@@QAE@AAY0CA@$$CBD_N@Z	; ioINILoader_e::ioINILoader_e<32>
EXTRN	__imp_??0ioINILoader@@QAE@PBD_N@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$?0$0CA@@ioINILoader_e@@QAE@AAY0CA@$$CBD_N@Z
_TEXT	SEGMENT
_fn$ = 8						; size = 4
_b$ = 12						; size = 1
??$?0$0CA@@ioINILoader_e@@QAE@AAY0CA@$$CBD_N@Z PROC	; ioINILoader_e::ioINILoader_e<32>, COMDAT
; _this$ = ecx

; 224  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	8b 4d 08	 mov	 ecx, DWORD PTR _fn$[ebp]
  0000b	8a 11		 mov	 dl, BYTE PTR [ecx]
  0000d	8d 87 50 03 00
	00		 lea	 eax, DWORD PTR [edi+848]
  00013	84 d2		 test	 dl, dl
  00015	0f 84 6a 04 00
	00		 je	 $LN99@ioINILoade
  0001b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0001e	88 10		 mov	 BYTE PTR [eax], dl
  00020	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  00023	84 d2		 test	 dl, dl
  00025	0f 84 54 04 00
	00		 je	 $LN98@ioINILoade
  0002b	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0002e	88 50 01	 mov	 BYTE PTR [eax+1], dl
  00031	8a 51 02	 mov	 dl, BYTE PTR [ecx+2]
  00034	84 d2		 test	 dl, dl
  00036	0f 84 3d 04 00
	00		 je	 $LN97@ioINILoade
  0003c	b3 eb		 mov	 bl, -21			; ffffffebH
  0003e	32 d3		 xor	 dl, bl
  00040	88 50 02	 mov	 BYTE PTR [eax+2], dl
  00043	8a 51 03	 mov	 dl, BYTE PTR [ecx+3]
  00046	84 d2		 test	 dl, dl
  00048	0f 84 25 04 00
	00		 je	 $LN96@ioINILoade
  0004e	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00051	88 50 03	 mov	 BYTE PTR [eax+3], dl
  00054	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  00057	84 d2		 test	 dl, dl
  00059	0f 84 0e 04 00
	00		 je	 $LN95@ioINILoade
  0005f	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00062	88 50 04	 mov	 BYTE PTR [eax+4], dl
  00065	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  00068	84 d2		 test	 dl, dl
  0006a	0f 84 f7 03 00
	00		 je	 $LN94@ioINILoade
  00070	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00073	88 50 05	 mov	 BYTE PTR [eax+5], dl
  00076	8a 51 06	 mov	 dl, BYTE PTR [ecx+6]
  00079	84 d2		 test	 dl, dl
  0007b	0f 84 e1 03 00
	00		 je	 $LN93@ioINILoade
  00081	32 d3		 xor	 dl, bl
  00083	88 50 06	 mov	 BYTE PTR [eax+6], dl
  00086	8a 51 07	 mov	 dl, BYTE PTR [ecx+7]
  00089	84 d2		 test	 dl, dl
  0008b	0f 84 cb 03 00
	00		 je	 $LN92@ioINILoade
  00091	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00094	88 50 07	 mov	 BYTE PTR [eax+7], dl
  00097	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  0009a	84 d2		 test	 dl, dl
  0009c	0f 84 b4 03 00
	00		 je	 $LN91@ioINILoade
  000a2	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a5	88 50 08	 mov	 BYTE PTR [eax+8], dl
  000a8	8a 51 09	 mov	 dl, BYTE PTR [ecx+9]
  000ab	84 d2		 test	 dl, dl
  000ad	0f 84 9d 03 00
	00		 je	 $LN90@ioINILoade
  000b3	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b6	88 50 09	 mov	 BYTE PTR [eax+9], dl
  000b9	8a 51 0a	 mov	 dl, BYTE PTR [ecx+10]
  000bc	84 d2		 test	 dl, dl
  000be	0f 84 87 03 00
	00		 je	 $LN89@ioINILoade
  000c4	32 d3		 xor	 dl, bl
  000c6	88 50 0a	 mov	 BYTE PTR [eax+10], dl
  000c9	8a 51 0b	 mov	 dl, BYTE PTR [ecx+11]
  000cc	84 d2		 test	 dl, dl
  000ce	0f 84 71 03 00
	00		 je	 $LN88@ioINILoade
  000d4	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d7	88 50 0b	 mov	 BYTE PTR [eax+11], dl
  000da	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
  000dd	84 d2		 test	 dl, dl
  000df	0f 84 5a 03 00
	00		 je	 $LN87@ioINILoade
  000e5	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e8	88 50 0c	 mov	 BYTE PTR [eax+12], dl
  000eb	8a 51 0d	 mov	 dl, BYTE PTR [ecx+13]
  000ee	84 d2		 test	 dl, dl
  000f0	0f 84 43 03 00
	00		 je	 $LN86@ioINILoade
  000f6	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000f9	88 50 0d	 mov	 BYTE PTR [eax+13], dl
  000fc	8a 51 0e	 mov	 dl, BYTE PTR [ecx+14]
  000ff	84 d2		 test	 dl, dl
  00101	0f 84 2d 03 00
	00		 je	 $LN85@ioINILoade
  00107	32 d3		 xor	 dl, bl
  00109	88 50 0e	 mov	 BYTE PTR [eax+14], dl
  0010c	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  0010f	84 d2		 test	 dl, dl
  00111	0f 84 17 03 00
	00		 je	 $LN84@ioINILoade
  00117	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0011a	88 50 0f	 mov	 BYTE PTR [eax+15], dl
  0011d	8a 51 10	 mov	 dl, BYTE PTR [ecx+16]
  00120	84 d2		 test	 dl, dl
  00122	0f 84 00 03 00
	00		 je	 $LN83@ioINILoade
  00128	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0012b	88 50 10	 mov	 BYTE PTR [eax+16], dl
  0012e	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  00131	84 d2		 test	 dl, dl
  00133	0f 84 e9 02 00
	00		 je	 $LN82@ioINILoade
  00139	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0013c	88 50 11	 mov	 BYTE PTR [eax+17], dl
  0013f	8a 51 12	 mov	 dl, BYTE PTR [ecx+18]
  00142	84 d2		 test	 dl, dl
  00144	0f 84 d3 02 00
	00		 je	 $LN81@ioINILoade
  0014a	32 d3		 xor	 dl, bl
  0014c	88 50 12	 mov	 BYTE PTR [eax+18], dl
  0014f	8a 51 13	 mov	 dl, BYTE PTR [ecx+19]
  00152	84 d2		 test	 dl, dl
  00154	0f 84 bd 02 00
	00		 je	 $LN80@ioINILoade
  0015a	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0015d	88 50 13	 mov	 BYTE PTR [eax+19], dl
  00160	8a 51 14	 mov	 dl, BYTE PTR [ecx+20]
  00163	84 d2		 test	 dl, dl
  00165	0f 84 a6 02 00
	00		 je	 $LN79@ioINILoade
  0016b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0016e	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00171	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00174	84 d2		 test	 dl, dl
  00176	0f 84 8f 02 00
	00		 je	 $LN78@ioINILoade
  0017c	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0017f	88 50 15	 mov	 BYTE PTR [eax+21], dl
  00182	8a 51 16	 mov	 dl, BYTE PTR [ecx+22]
  00185	84 d2		 test	 dl, dl
  00187	0f 84 79 02 00
	00		 je	 $LN77@ioINILoade
  0018d	32 d3		 xor	 dl, bl
  0018f	88 50 16	 mov	 BYTE PTR [eax+22], dl
  00192	8a 51 17	 mov	 dl, BYTE PTR [ecx+23]
  00195	84 d2		 test	 dl, dl
  00197	0f 84 60 02 00
	00		 je	 $LN76@ioINILoade
  0019d	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001a0	88 50 17	 mov	 BYTE PTR [eax+23], dl
  001a3	8a 51 18	 mov	 dl, BYTE PTR [ecx+24]
  001a6	84 d2		 test	 dl, dl
  001a8	0f 84 46 02 00
	00		 je	 $LN75@ioINILoade
  001ae	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001b1	88 50 18	 mov	 BYTE PTR [eax+24], dl
  001b4	8a 51 19	 mov	 dl, BYTE PTR [ecx+25]
  001b7	84 d2		 test	 dl, dl
  001b9	0f 84 2c 02 00
	00		 je	 $LN74@ioINILoade
  001bf	80 f2 ec	 xor	 dl, -20			; ffffffecH
  001c2	88 50 19	 mov	 BYTE PTR [eax+25], dl
  001c5	8a 51 1a	 mov	 dl, BYTE PTR [ecx+26]
  001c8	84 d2		 test	 dl, dl
  001ca	0f 84 13 02 00
	00		 je	 $LN73@ioINILoade
  001d0	32 d3		 xor	 dl, bl
  001d2	88 50 1a	 mov	 BYTE PTR [eax+26], dl
  001d5	8a 51 1b	 mov	 dl, BYTE PTR [ecx+27]
  001d8	84 d2		 test	 dl, dl
  001da	0f 84 fa 01 00
	00		 je	 $LN72@ioINILoade
  001e0	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  001e3	88 50 1b	 mov	 BYTE PTR [eax+27], dl
  001e6	8a 51 1c	 mov	 dl, BYTE PTR [ecx+28]
  001e9	84 d2		 test	 dl, dl
  001eb	0f 84 e0 01 00
	00		 je	 $LN71@ioINILoade
  001f1	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001f4	88 50 1c	 mov	 BYTE PTR [eax+28], dl
  001f7	8a 51 1d	 mov	 dl, BYTE PTR [ecx+29]
  001fa	84 d2		 test	 dl, dl
  001fc	0f 84 c6 01 00
	00		 je	 $LN70@ioINILoade
  00202	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00205	88 50 1d	 mov	 BYTE PTR [eax+29], dl
  00208	8a 51 1e	 mov	 dl, BYTE PTR [ecx+30]
  0020b	84 d2		 test	 dl, dl
  0020d	0f 84 ad 01 00
	00		 je	 $LN69@ioINILoade
  00213	32 d3		 xor	 dl, bl
  00215	88 50 1e	 mov	 BYTE PTR [eax+30], dl
  00218	8a 51 1f	 mov	 dl, BYTE PTR [ecx+31]
  0021b	84 d2		 test	 dl, dl
  0021d	0f 84 94 01 00
	00		 je	 $LN68@ioINILoade
  00223	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00226	88 50 1f	 mov	 BYTE PTR [eax+31], dl
  00229	8a 51 20	 mov	 dl, BYTE PTR [ecx+32]
  0022c	84 d2		 test	 dl, dl
  0022e	0f 84 7a 01 00
	00		 je	 $LN67@ioINILoade
  00234	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00237	88 50 20	 mov	 BYTE PTR [eax+32], dl
  0023a	8a 51 21	 mov	 dl, BYTE PTR [ecx+33]
  0023d	84 d2		 test	 dl, dl
  0023f	0f 84 60 01 00
	00		 je	 $LN66@ioINILoade
  00245	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00248	88 50 21	 mov	 BYTE PTR [eax+33], dl
  0024b	8a 51 22	 mov	 dl, BYTE PTR [ecx+34]
  0024e	84 d2		 test	 dl, dl
  00250	0f 84 47 01 00
	00		 je	 $LN65@ioINILoade
  00256	32 d3		 xor	 dl, bl
  00258	88 50 22	 mov	 BYTE PTR [eax+34], dl
  0025b	8a 51 23	 mov	 dl, BYTE PTR [ecx+35]
  0025e	84 d2		 test	 dl, dl
  00260	0f 84 2e 01 00
	00		 je	 $LN64@ioINILoade
  00266	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00269	88 50 23	 mov	 BYTE PTR [eax+35], dl
  0026c	8a 51 24	 mov	 dl, BYTE PTR [ecx+36]
  0026f	84 d2		 test	 dl, dl
  00271	0f 84 14 01 00
	00		 je	 $LN63@ioINILoade
  00277	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0027a	88 50 24	 mov	 BYTE PTR [eax+36], dl
  0027d	8a 51 25	 mov	 dl, BYTE PTR [ecx+37]
  00280	84 d2		 test	 dl, dl
  00282	0f 84 fa 00 00
	00		 je	 $LN62@ioINILoade
  00288	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0028b	88 50 25	 mov	 BYTE PTR [eax+37], dl
  0028e	8a 51 26	 mov	 dl, BYTE PTR [ecx+38]
  00291	84 d2		 test	 dl, dl
  00293	0f 84 e1 00 00
	00		 je	 $LN61@ioINILoade
  00299	32 d3		 xor	 dl, bl
  0029b	88 50 26	 mov	 BYTE PTR [eax+38], dl
  0029e	8a 51 27	 mov	 dl, BYTE PTR [ecx+39]
  002a1	84 d2		 test	 dl, dl
  002a3	0f 84 c8 00 00
	00		 je	 $LN60@ioINILoade
  002a9	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002ac	88 50 27	 mov	 BYTE PTR [eax+39], dl
  002af	8a 51 28	 mov	 dl, BYTE PTR [ecx+40]
  002b2	84 d2		 test	 dl, dl
  002b4	0f 84 ae 00 00
	00		 je	 $LN59@ioINILoade
  002ba	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002bd	88 50 28	 mov	 BYTE PTR [eax+40], dl
  002c0	8a 51 29	 mov	 dl, BYTE PTR [ecx+41]
  002c3	84 d2		 test	 dl, dl
  002c5	0f 84 94 00 00
	00		 je	 $LN58@ioINILoade
  002cb	80 f2 ec	 xor	 dl, -20			; ffffffecH
  002ce	88 50 29	 mov	 BYTE PTR [eax+41], dl
  002d1	8a 51 2a	 mov	 dl, BYTE PTR [ecx+42]
  002d4	84 d2		 test	 dl, dl
  002d6	74 7f		 je	 SHORT $LN57@ioINILoade
  002d8	32 d3		 xor	 dl, bl
  002da	88 50 2a	 mov	 BYTE PTR [eax+42], dl
  002dd	8a 51 2b	 mov	 dl, BYTE PTR [ecx+43]
  002e0	84 d2		 test	 dl, dl
  002e2	74 6a		 je	 SHORT $LN56@ioINILoade
  002e4	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  002e7	88 50 2b	 mov	 BYTE PTR [eax+43], dl
  002ea	8a 51 2c	 mov	 dl, BYTE PTR [ecx+44]
  002ed	84 d2		 test	 dl, dl
  002ef	74 54		 je	 SHORT $LN55@ioINILoade
  002f1	80 f2 ed	 xor	 dl, -19			; ffffffedH
  002f4	88 50 2c	 mov	 BYTE PTR [eax+44], dl
  002f7	8a 51 2d	 mov	 dl, BYTE PTR [ecx+45]
  002fa	84 d2		 test	 dl, dl
  002fc	74 3e		 je	 SHORT $LN54@ioINILoade
  002fe	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00301	88 50 2d	 mov	 BYTE PTR [eax+45], dl
  00304	8a 51 2e	 mov	 dl, BYTE PTR [ecx+46]
  00307	84 d2		 test	 dl, dl
  00309	74 29		 je	 SHORT $LN53@ioINILoade
  0030b	32 d3		 xor	 dl, bl
  0030d	88 50 2e	 mov	 BYTE PTR [eax+46], dl
  00310	8a 51 2f	 mov	 dl, BYTE PTR [ecx+47]
  00313	84 d2		 test	 dl, dl
  00315	74 14		 je	 SHORT $LN52@ioINILoade
  00317	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0031a	88 50 2f	 mov	 BYTE PTR [eax+47], dl
  0031d	8a 49 30	 mov	 cl, BYTE PTR [ecx+48]
  00320	80 f1 ed	 xor	 cl, -19			; ffffffedH
  00323	88 48 30	 mov	 BYTE PTR [eax+48], cl
  00326	e9 5d 01 00 00	 jmp	 $LN4@ioINILoade
$LN52@ioINILoade:
  0032b	c6 40 2f ea	 mov	 BYTE PTR [eax+47], -22	; ffffffeaH
  0032f	e9 54 01 00 00	 jmp	 $LN4@ioINILoade
$LN53@ioINILoade:
  00334	88 58 2e	 mov	 BYTE PTR [eax+46], bl
  00337	e9 4c 01 00 00	 jmp	 $LN4@ioINILoade
$LN54@ioINILoade:
  0033c	c6 40 2d ec	 mov	 BYTE PTR [eax+45], -20	; ffffffecH
  00340	e9 43 01 00 00	 jmp	 $LN4@ioINILoade
$LN55@ioINILoade:
  00345	c6 40 2c ed	 mov	 BYTE PTR [eax+44], -19	; ffffffedH
  00349	e9 3a 01 00 00	 jmp	 $LN4@ioINILoade
$LN56@ioINILoade:
  0034e	c6 40 2b ea	 mov	 BYTE PTR [eax+43], -22	; ffffffeaH
  00352	e9 31 01 00 00	 jmp	 $LN4@ioINILoade
$LN57@ioINILoade:
  00357	88 58 2a	 mov	 BYTE PTR [eax+42], bl
  0035a	e9 29 01 00 00	 jmp	 $LN4@ioINILoade
$LN58@ioINILoade:
  0035f	c6 40 29 ec	 mov	 BYTE PTR [eax+41], -20	; ffffffecH
  00363	e9 20 01 00 00	 jmp	 $LN4@ioINILoade
$LN59@ioINILoade:
  00368	c6 40 28 ed	 mov	 BYTE PTR [eax+40], -19	; ffffffedH
  0036c	e9 17 01 00 00	 jmp	 $LN4@ioINILoade
$LN60@ioINILoade:
  00371	c6 40 27 ea	 mov	 BYTE PTR [eax+39], -22	; ffffffeaH
  00375	e9 0e 01 00 00	 jmp	 $LN4@ioINILoade
$LN61@ioINILoade:
  0037a	88 58 26	 mov	 BYTE PTR [eax+38], bl
  0037d	e9 06 01 00 00	 jmp	 $LN4@ioINILoade
$LN62@ioINILoade:
  00382	c6 40 25 ec	 mov	 BYTE PTR [eax+37], -20	; ffffffecH
  00386	e9 fd 00 00 00	 jmp	 $LN4@ioINILoade
$LN63@ioINILoade:
  0038b	c6 40 24 ed	 mov	 BYTE PTR [eax+36], -19	; ffffffedH
  0038f	e9 f4 00 00 00	 jmp	 $LN4@ioINILoade
$LN64@ioINILoade:
  00394	c6 40 23 ea	 mov	 BYTE PTR [eax+35], -22	; ffffffeaH
  00398	e9 eb 00 00 00	 jmp	 $LN4@ioINILoade
$LN65@ioINILoade:
  0039d	88 58 22	 mov	 BYTE PTR [eax+34], bl
  003a0	e9 e3 00 00 00	 jmp	 $LN4@ioINILoade
$LN66@ioINILoade:
  003a5	c6 40 21 ec	 mov	 BYTE PTR [eax+33], -20	; ffffffecH
  003a9	e9 da 00 00 00	 jmp	 $LN4@ioINILoade
$LN67@ioINILoade:
  003ae	c6 40 20 ed	 mov	 BYTE PTR [eax+32], -19	; ffffffedH
  003b2	e9 d1 00 00 00	 jmp	 $LN4@ioINILoade
$LN68@ioINILoade:
  003b7	c6 40 1f ea	 mov	 BYTE PTR [eax+31], -22	; ffffffeaH
  003bb	e9 c8 00 00 00	 jmp	 $LN4@ioINILoade
$LN69@ioINILoade:
  003c0	88 58 1e	 mov	 BYTE PTR [eax+30], bl
  003c3	e9 c0 00 00 00	 jmp	 $LN4@ioINILoade
$LN70@ioINILoade:
  003c8	c6 40 1d ec	 mov	 BYTE PTR [eax+29], -20	; ffffffecH
  003cc	e9 b7 00 00 00	 jmp	 $LN4@ioINILoade
$LN71@ioINILoade:
  003d1	c6 40 1c ed	 mov	 BYTE PTR [eax+28], -19	; ffffffedH
  003d5	e9 ae 00 00 00	 jmp	 $LN4@ioINILoade
$LN72@ioINILoade:
  003da	c6 40 1b ea	 mov	 BYTE PTR [eax+27], -22	; ffffffeaH
  003de	e9 a5 00 00 00	 jmp	 $LN4@ioINILoade
$LN73@ioINILoade:
  003e3	88 58 1a	 mov	 BYTE PTR [eax+26], bl
  003e6	e9 9d 00 00 00	 jmp	 $LN4@ioINILoade
$LN74@ioINILoade:
  003eb	c6 40 19 ec	 mov	 BYTE PTR [eax+25], -20	; ffffffecH
  003ef	e9 94 00 00 00	 jmp	 $LN4@ioINILoade
$LN75@ioINILoade:
  003f4	c6 40 18 ed	 mov	 BYTE PTR [eax+24], -19	; ffffffedH
  003f8	e9 8b 00 00 00	 jmp	 $LN4@ioINILoade
$LN76@ioINILoade:
  003fd	c6 40 17 ea	 mov	 BYTE PTR [eax+23], -22	; ffffffeaH
  00401	e9 82 00 00 00	 jmp	 $LN4@ioINILoade
$LN77@ioINILoade:
  00406	88 58 16	 mov	 BYTE PTR [eax+22], bl
  00409	eb 7d		 jmp	 SHORT $LN4@ioINILoade
$LN78@ioINILoade:
  0040b	c6 40 15 ec	 mov	 BYTE PTR [eax+21], -20	; ffffffecH
  0040f	eb 77		 jmp	 SHORT $LN4@ioINILoade
$LN79@ioINILoade:
  00411	c6 40 14 ed	 mov	 BYTE PTR [eax+20], -19	; ffffffedH
  00415	eb 71		 jmp	 SHORT $LN4@ioINILoade
$LN80@ioINILoade:
  00417	c6 40 13 ea	 mov	 BYTE PTR [eax+19], -22	; ffffffeaH
  0041b	eb 6b		 jmp	 SHORT $LN4@ioINILoade
$LN81@ioINILoade:
  0041d	88 58 12	 mov	 BYTE PTR [eax+18], bl
  00420	eb 66		 jmp	 SHORT $LN4@ioINILoade
$LN82@ioINILoade:
  00422	c6 40 11 ec	 mov	 BYTE PTR [eax+17], -20	; ffffffecH
  00426	eb 60		 jmp	 SHORT $LN4@ioINILoade
$LN83@ioINILoade:
  00428	c6 40 10 ed	 mov	 BYTE PTR [eax+16], -19	; ffffffedH
  0042c	eb 5a		 jmp	 SHORT $LN4@ioINILoade
$LN84@ioINILoade:
  0042e	c6 40 0f ea	 mov	 BYTE PTR [eax+15], -22	; ffffffeaH
  00432	eb 54		 jmp	 SHORT $LN4@ioINILoade
$LN85@ioINILoade:
  00434	88 58 0e	 mov	 BYTE PTR [eax+14], bl
  00437	eb 4f		 jmp	 SHORT $LN4@ioINILoade
$LN86@ioINILoade:
  00439	c6 40 0d ec	 mov	 BYTE PTR [eax+13], -20	; ffffffecH
  0043d	eb 49		 jmp	 SHORT $LN4@ioINILoade
$LN87@ioINILoade:
  0043f	c6 40 0c ed	 mov	 BYTE PTR [eax+12], -19	; ffffffedH
  00443	eb 43		 jmp	 SHORT $LN4@ioINILoade
$LN88@ioINILoade:
  00445	c6 40 0b ea	 mov	 BYTE PTR [eax+11], -22	; ffffffeaH
  00449	eb 3d		 jmp	 SHORT $LN4@ioINILoade
$LN89@ioINILoade:
  0044b	88 58 0a	 mov	 BYTE PTR [eax+10], bl
  0044e	eb 38		 jmp	 SHORT $LN4@ioINILoade
$LN90@ioINILoade:
  00450	c6 40 09 ec	 mov	 BYTE PTR [eax+9], -20	; ffffffecH
  00454	eb 32		 jmp	 SHORT $LN4@ioINILoade
$LN91@ioINILoade:
  00456	c6 40 08 ed	 mov	 BYTE PTR [eax+8], -19	; ffffffedH
  0045a	eb 2c		 jmp	 SHORT $LN4@ioINILoade
$LN92@ioINILoade:
  0045c	c6 40 07 ea	 mov	 BYTE PTR [eax+7], -22	; ffffffeaH
  00460	eb 26		 jmp	 SHORT $LN4@ioINILoade
$LN93@ioINILoade:
  00462	88 58 06	 mov	 BYTE PTR [eax+6], bl
  00465	eb 21		 jmp	 SHORT $LN4@ioINILoade
$LN94@ioINILoade:
  00467	c6 40 05 ec	 mov	 BYTE PTR [eax+5], -20	; ffffffecH
  0046b	eb 1b		 jmp	 SHORT $LN4@ioINILoade
$LN95@ioINILoade:
  0046d	c6 40 04 ed	 mov	 BYTE PTR [eax+4], -19	; ffffffedH
  00471	eb 15		 jmp	 SHORT $LN4@ioINILoade
$LN96@ioINILoade:
  00473	c6 40 03 ea	 mov	 BYTE PTR [eax+3], -22	; ffffffeaH
  00477	eb 0f		 jmp	 SHORT $LN4@ioINILoade
$LN97@ioINILoade:
  00479	c6 40 02 eb	 mov	 BYTE PTR [eax+2], -21	; ffffffebH
  0047d	eb 09		 jmp	 SHORT $LN4@ioINILoade
$LN98@ioINILoade:
  0047f	c6 40 01 ec	 mov	 BYTE PTR [eax+1], -20	; ffffffecH
  00483	eb 03		 jmp	 SHORT $LN4@ioINILoade
$LN99@ioINILoade:
  00485	c6 00 ed	 mov	 BYTE PTR [eax], -19	; ffffffedH
$LN4@ioINILoade:
  00488	6a 07		 push	 7
  0048a	8b c8		 mov	 ecx, eax
  0048c	c6 40 1f 00	 mov	 BYTE PTR [eax+31], 0
  00490	5a		 pop	 edx
$LL107@ioINILoade:
  00491	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  00497	83 c1 04	 add	 ecx, 4
  0049a	4a		 dec	 edx
  0049b	75 f4		 jne	 SHORT $LL107@ioINILoade
  0049d	6a 1c		 push	 28			; 0000001cH
  0049f	5e		 pop	 esi
$LL104@ioINILoade:
  004a0	8b ce		 mov	 ecx, esi
  004a2	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  004a8	79 05		 jns	 SHORT $LN114@ioINILoade
  004aa	49		 dec	 ecx
  004ab	83 c9 fc	 or	 ecx, -4			; fffffffcH
  004ae	41		 inc	 ecx
$LN114@ioINILoade:
  004af	b2 ed		 mov	 dl, -19			; ffffffedH
  004b1	2a d1		 sub	 dl, cl
  004b3	30 14 06	 xor	 BYTE PTR [esi+eax], dl
  004b6	46		 inc	 esi
  004b7	83 fe 1f	 cmp	 esi, 31			; 0000001fH
  004ba	7c e4		 jl	 SHORT $LL104@ioINILoade
  004bc	ff 75 0c	 push	 DWORD PTR _b$[ebp]
  004bf	8b cf		 mov	 ecx, edi
  004c1	50		 push	 eax
  004c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@PBD_N@Z

; 225  : 	}

  004c8	8b c7		 mov	 eax, edi
  004ca	5f		 pop	 edi
  004cb	5e		 pop	 esi
  004cc	5b		 pop	 ebx
  004cd	5d		 pop	 ebp
  004ce	c2 08 00	 ret	 8
??$?0$0CA@@ioINILoader_e@@QAE@AAY0CA@$$CBD_N@Z ENDP	; ioINILoader_e::ioINILoader_e<32>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@ABV3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@ABV2@@Z ; std::_Cons_val<std::allocator<GashaponPresent>,GashaponPresent,GashaponPresent const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@ABV3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@ABV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@ABV3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@ABV2@@Z PROC ; std::_Cons_val<std::allocator<GashaponPresent>,GashaponPresent,GashaponPresent const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00004	8b 7d 0c	 mov	 edi, DWORD PTR __Pdest$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN9@Cons_val@2
  0000b	56		 push	 esi
  0000c	8b 75 10	 mov	 esi, DWORD PTR __Src$[ebp]
  0000f	6a 05		 push	 5
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN9@Cons_val@2:
  00015	5f		 pop	 edi

; 281  : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@ABV3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@ABV2@@Z ENDP ; std::_Cons_val<std::allocator<GashaponPresent>,GashaponPresent,GashaponPresent const &>
_TEXT	ENDS
PUBLIC	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 227  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 228  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator--
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 418  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 419  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator--

; 420  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 421  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > > &,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 248  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@V3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@$$QAV2@@Z ; std::_Cons_val<std::allocator<GashaponPresent>,GashaponPresent,GashaponPresent>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@V3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@$$QAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@V3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@$$QAV2@@Z PROC ; std::_Cons_val<std::allocator<GashaponPresent>,GashaponPresent,GashaponPresent>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00004	8b 7d 0c	 mov	 edi, DWORD PTR __Pdest$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	74 0a		 je	 SHORT $LN7@Cons_val@3
  0000b	56		 push	 esi
  0000c	8b 75 10	 mov	 esi, DWORD PTR __Src$[ebp]
  0000f	6a 05		 push	 5
  00011	59		 pop	 ecx
  00012	f3 a5		 rep movsd
  00014	5e		 pop	 esi
$LN7@Cons_val@3:
  00015	5f		 pop	 edi

; 281  : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@V3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@$$QAV2@@Z ENDP ; std::_Cons_val<std::allocator<GashaponPresent>,GashaponPresent,GashaponPresent>
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::operator!=
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >::operator!=
_TEXT	ENDS
PUBLIC	??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::vector<GashaponPresent,std::allocator<GashaponPresent> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::vector<GashaponPresent,std::allocator<GashaponPresent> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::vector<GashaponPresent,std::allocator<GashaponPresent> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@@Z ; std::allocator<GashaponPresent>::destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@@Z PROC ; std::allocator<GashaponPresent>::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@VGashaponPresent@@@std@@QAEXPAVGashaponPresent@@@Z ENDP ; std::allocator<GashaponPresent>::destroy
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::end
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 817  : 		return (iterator(this->_Myhead, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 818  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::end
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z
_TEXT	SEGMENT
$T509903 = -4						; size = 4
$T509898 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >, COMDAT
; _this$ = ecx

; 698  : 		{	// construct empty tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	51		 push	 ecx
  00006	89 65 fc	 mov	 DWORD PTR $T509898[ebp], esp
  00009	89 65 fc	 mov	 DWORD PTR $T509903[ebp], esp
  0000c	ff 75 08	 push	 DWORD PTR __Parg$[ebp]
  0000f	8b f1		 mov	 esi, ecx
  00011	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >

; 699  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	c9		 leave
  0001a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::lower_bound
; Function compile flags: /Ogsp
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1449 : 		{	// find leftmost node not less than _Keyval in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1450 : 		return (iterator(_Lbound(_Keyval), this));

  00003	ff 75 0c	 push	 DWORD PTR __Keyval$[ebp]
  00006	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Lbound
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000e	89 01		 mov	 DWORD PTR [ecx], eax
  00010	8b c1		 mov	 eax, ecx

; 1451 : 		}

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@@Z ; std::_Dest_val<std::allocator<GashaponPresent>,GashaponPresent>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@@Z PROC ; std::_Dest_val<std::allocator<GashaponPresent>,GashaponPresent>, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@@Z ENDP ; std::_Dest_val<std::allocator<GashaponPresent>,GashaponPresent>
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::find
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z
_TEXT	SEGMENT
$T509966 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::find, COMDAT
; _this$ = ecx

; 1423 : 		{	// find an element in mutable sequence that matches _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1424 : 		iterator _Where = lower_bound(_Keyval);

  00006	8b 7d 0c	 mov	 edi, DWORD PTR __Keyval$[ebp]
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Lbound

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

  00011	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00014	89 45 0c	 mov	 DWORD PTR __Where$[ebp], eax
  00017	3b c6		 cmp	 eax, esi
  00019	74 0c		 je	 SHORT $LN3@find
  0001b	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0001d	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00020	72 05		 jb	 SHORT $LN3@find
  00022	8d 45 0c	 lea	 eax, DWORD PTR __Where$[ebp]
  00025	eb 06		 jmp	 SHORT $LN4@find
$LN3@find:
  00027	89 75 fc	 mov	 DWORD PTR $T509966[ebp], esi
  0002a	8d 45 fc	 lea	 eax, DWORD PTR $T509966[ebp]
$LN4@find:
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00032	5f		 pop	 edi
  00033	89 08		 mov	 DWORD PTR [eax], ecx
  00035	5e		 pop	 esi

; 1429 : 		}

  00036	c9		 leave
  00037	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::find
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@V1@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent>,GashaponPresent>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@V1@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@V1@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent>,GashaponPresent>, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 16		 jmp	 SHORT $LN29@Uninit_mov
$LL6@Uninit_mov:

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

  00009	56		 push	 esi
  0000a	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000d	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@V3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@$$QAV2@@Z ; std::_Cons_val<std::allocator<GashaponPresent>,GashaponPresent,GashaponPresent>
  00015	83 45 10 14	 add	 DWORD PTR __Dest$[ebp], 20 ; 00000014H
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001c	83 c6 14	 add	 esi, 20			; 00000014H
$LN29@Uninit_mov:

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  0001f	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00022	75 e5		 jne	 SHORT $LL6@Uninit_mov

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)
; 434  : 		_Dest_val(_Al, _Next);
; 435  : 	_RERAISE;
; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

  00024	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00027	5e		 pop	 esi

; 438  : 	}

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$_Uninit_move@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@V1@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent>,GashaponPresent>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@PAVGashaponPresent@@V?$allocator@VGashaponPresent@@@2@@std@@YAPAVGashaponPresent@@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@0@0PAV1@AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >,GashaponPresent *,std::allocator<GashaponPresent> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@PAVGashaponPresent@@V?$allocator@VGashaponPresent@@@2@@std@@YAPAVGashaponPresent@@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@0@0PAV1@AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@PAVGashaponPresent@@V?$allocator@VGashaponPresent@@@2@@std@@YAPAVGashaponPresent@@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@0@0PAV1@AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >,GashaponPresent *,std::allocator<GashaponPresent> >, COMDAT

; 369  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;
; 373  : 
; 374  : 	_TRY_BEGIN
; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

  00003	eb 19		 jmp	 SHORT $LN40@Uninit_cop
$LL14@Uninit_cop:

; 376  : 		_Cons_val(_Al, _Dest, *_First);

  00005	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00008	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000b	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000e	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@ABV3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@ABV2@@Z ; std::_Cons_val<std::allocator<GashaponPresent>,GashaponPresent,GashaponPresent const &>
  00013	83 45 10 14	 add	 DWORD PTR __Dest$[ebp], 20 ; 00000014H
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001a	83 45 08 14	 add	 DWORD PTR __First$[ebp], 20 ; 00000014H
$LN40@Uninit_cop:

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;
; 373  : 
; 374  : 	_TRY_BEGIN
; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

  0001e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00021	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00024	75 df		 jne	 SHORT $LL14@Uninit_cop

; 377  : 	_CATCH_ALL
; 378  : 	for (; _Next != _Dest; ++_Next)
; 379  : 		_Dest_val(_Al, _Next);
; 380  : 	_RERAISE;
; 381  : 	_CATCH_END
; 382  : 	return (_Dest);

  00026	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 383  : 	}

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@PAVGashaponPresent@@V?$allocator@VGashaponPresent@@@2@@std@@YAPAVGashaponPresent@@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@0@0PAV1@AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >,GashaponPresent *,std::allocator<GashaponPresent> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@VGashaponPresent@@@std@@@std@@YAXPAVGashaponPresent@@0AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<GashaponPresent> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@VGashaponPresent@@@std@@@std@@YAXPAVGashaponPresent@@0AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@VGashaponPresent@@@std@@@std@@YAXPAVGashaponPresent@@0AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<GashaponPresent> >, COMDAT

; 96   : 	for (; _First != _Last; ++_First)
; 97   : 		_Dest_val(_Al, _First);
; 98   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@VGashaponPresent@@@std@@@std@@YAXPAVGashaponPresent@@0AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<GashaponPresent> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@@Z ; std::_Uninitialized_move<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@@Z
_TEXT	SEGMENT
__Cat$510275 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@@Z PROC ; std::_Uninitialized_move<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$510275[ebp]
  00007	6a 00		 push	 0
  00009	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000c	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00012	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00015	e8 00 00 00 00	 call	 ??$_Uninit_move@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@V1@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent>,GashaponPresent>
  0001a	83 c4 18	 add	 esp, 24			; 00000018H

; 472  : 	}

  0001d	c9		 leave
  0001e	c3		 ret	 0
??$_Uninitialized_move@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@@Z ENDP ; std::_Uninitialized_move<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@PAVGashaponPresent@@V?$allocator@VGashaponPresent@@@2@@std@@YAPAVGashaponPresent@@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@0@0PAV1@AAV?$allocator@VGashaponPresent@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >,GashaponPresent *,std::allocator<GashaponPresent> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@PAVGashaponPresent@@V?$allocator@VGashaponPresent@@@2@@std@@YAPAVGashaponPresent@@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@0@0PAV1@AAV?$allocator@VGashaponPresent@@@0@@Z
_TEXT	SEGMENT
__Cat$510285 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@PAVGashaponPresent@@V?$allocator@VGashaponPresent@@@2@@std@@YAPAVGashaponPresent@@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@0@0PAV1@AAV?$allocator@VGashaponPresent@@@0@@Z PROC ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >,GashaponPresent *,std::allocator<GashaponPresent> >, COMDAT

; 412  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 413  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 414  : 		_Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$510285[ebp]
  00007	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000a	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00010	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00013	e8 00 00 00 00	 call	 ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@PAVGashaponPresent@@V?$allocator@VGashaponPresent@@@2@@std@@YAPAVGashaponPresent@@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@0@0PAV1@AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >,GashaponPresent *,std::allocator<GashaponPresent> >
  00018	83 c4 14	 add	 esp, 20			; 00000014H

; 415  : 	}

  0001b	c9		 leave
  0001c	c3		 ret	 0
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@PAVGashaponPresent@@V?$allocator@VGashaponPresent@@@2@@std@@YAPAVGashaponPresent@@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@0@0PAV1@AAV?$allocator@VGashaponPresent@@@0@@Z ENDP ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >,GashaponPresent *,std::allocator<GashaponPresent> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@VGashaponPresent@@@std@@@std@@YAXPAVGashaponPresent@@0AAV?$allocator@VGashaponPresent@@@0@@Z ; std::_Destroy_range<std::allocator<GashaponPresent> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@VGashaponPresent@@@std@@@std@@YAXPAVGashaponPresent@@0AAV?$allocator@VGashaponPresent@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@VGashaponPresent@@@std@@@std@@YAXPAVGashaponPresent@@0AAV?$allocator@VGashaponPresent@@@0@@Z PROC ; std::_Destroy_range<std::allocator<GashaponPresent> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@VGashaponPresent@@@std@@@std@@YAXPAVGashaponPresent@@0AAV?$allocator@VGashaponPresent@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<GashaponPresent> >
_TEXT	ENDS
PUBLIC	??$_Umove@PAVGashaponPresent@@@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEPAVGashaponPresent@@PAV2@00@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Umove<GashaponPresent *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??$_Umove@PAVGashaponPresent@@@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEPAVGashaponPresent@@PAV2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAVGashaponPresent@@@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEPAVGashaponPresent@@PAV2@00@Z PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Umove<GashaponPresent *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@@Z ; std::_Uninitialized_move<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAVGashaponPresent@@@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEPAVGashaponPresent@@PAV2@00@Z ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Umove<GashaponPresent *>
_TEXT	ENDS
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEPAVGashaponPresent@@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@1@0PAV2@@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > > >
; Function compile flags: /Ogsp
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEPAVGashaponPresent@@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@1@0PAV2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$510368 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEPAVGashaponPresent@@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@1@0PAV2@@Z PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > > >, COMDAT
; _this$ = ecx

; 1315 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1316 : 		{	// copy initializing [_First, _Last), using allocator
; 1317 : 		return (_Uninitialized_copy(_First, _Last,
; 1318 : 			_Ptr, this->_Alval));

  00003	ff 75 10	 push	 DWORD PTR __Cat$510368[ebp]
  00006	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00009	51		 push	 ecx
  0000a	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00010	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00013	e8 00 00 00 00	 call	 ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@PAVGashaponPresent@@V?$allocator@VGashaponPresent@@@2@@std@@YAPAVGashaponPresent@@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@0@0PAV1@AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >,GashaponPresent *,std::allocator<GashaponPresent> >
  00018	83 c4 14	 add	 esp, 20			; 00000014H

; 1319 : 		}

  0001b	5d		 pop	 ebp
  0001c	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEPAVGashaponPresent@@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@1@0PAV2@@Z ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > > >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXPAVGashaponPresent@@0@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXPAVGashaponPresent@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXPAVGashaponPresent@@0@Z PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXPAVGashaponPresent@@0@Z ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Destroy
_TEXT	ENDS
PUBLIC	?reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXI@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::reserve
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3_catch:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Ptr$506667 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXI@Z PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXI@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx

; 747  : 		if (max_size() < _Count)

  0000e	81 7d 08 cc cc
	cc 0c		 cmp	 DWORD PTR __Count$[ebp], 214748364 ; 0cccccccH
  00015	76 0b		 jbe	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN61@reserve:
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  00022	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00025	2b 06		 sub	 eax, DWORD PTR [esi]
  00027	6a 14		 push	 20			; 00000014H
  00029	99		 cdq
  0002a	59		 pop	 ecx
  0002b	f7 f9		 idiv	 ecx
  0002d	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00030	73 71		 jae	 SHORT $LN3@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00032	6a 00		 push	 0
  00034	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00037	e8 00 00 00 00	 call	 ??$_Allocate@VGashaponPresent@@@std@@YAPAVGashaponPresent@@IPAV1@@Z ; std::_Allocate<GashaponPresent>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  0003c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0003e	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00042	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00045	52		 push	 edx
  00046	89 45 ec	 mov	 DWORD PTR __Ptr$506667[ebp], eax
  00049	ff 75 ec	 push	 DWORD PTR __Ptr$506667[ebp]
  0004c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004f	50		 push	 eax
  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAVGashaponPresent@@PAV1@V?$allocator@VGashaponPresent@@@std@@@std@@YAPAVGashaponPresent@@PAV1@00AAV?$allocator@VGashaponPresent@@@0@@Z ; std::_Uninitialized_move<GashaponPresent *,GashaponPresent *,std::allocator<GashaponPresent> >

; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00056	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00059	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005b	83 c4 18	 add	 esp, 24			; 00000018H
  0005e	8b c3		 mov	 eax, ebx
  00060	2b c1		 sub	 eax, ecx
  00062	6a 14		 push	 20			; 00000014H
  00064	99		 cdq
  00065	5f		 pop	 edi
  00066	f7 ff		 idiv	 edi
  00068	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  0006c	8b f8		 mov	 edi, eax
  0006e	85 c9		 test	 ecx, ecx
  00070	74 11		 je	 SHORT $LN53@reserve

; 761  : 			if (this->_Myfirst != 0)

  00072	eb 03		 jmp	 SHORT $LN60@reserve

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);

$LL39@reserve:
  00074	83 c1 14	 add	 ecx, 20			; 00000014H
$LN60@reserve:
  00077	3b cb		 cmp	 ecx, ebx
  00079	75 f9		 jne	 SHORT $LL39@reserve

; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  0007b	ff 36		 push	 DWORD PTR [esi]
  0007d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00082	59		 pop	 ecx
$LN53@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  00083	8b ce		 mov	 ecx, esi
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;
; 770  : 			this->_Mylast = _Ptr + _Size;

  0008b	6b ff 14	 imul	 edi, 20			; 00000014H
  0008e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00091	8b 4d ec	 mov	 ecx, DWORD PTR __Ptr$506667[ebp]
  00094	6b c0 14	 imul	 eax, 20			; 00000014H
  00097	03 c1		 add	 eax, ecx
  00099	03 f9		 add	 edi, ecx
  0009b	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0009e	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 771  : 			this->_Myfirst = _Ptr;

  000a1	89 0e		 mov	 DWORD PTR [esi], ecx
$LN3@reserve:

; 772  : 			}
; 773  : 		}

  000a3	e8 00 00 00 00	 call	 __EH_epilog3
  000a8	c2 04 00	 ret	 4
__catch$?reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXI@Z$0:

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

  000ab	ff 75 ec	 push	 DWORD PTR __Ptr$506667[ebp]
  000ae	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000b3	59		 pop	 ecx

; 757  : 			_RERAISE;

  000b4	6a 00		 push	 0
  000b6	6a 00		 push	 0
  000b8	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN62@reserve:
$LN59@reserve:
  000bd	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXI@Z ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::reserve
PUBLIC	?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN26@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN26@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXI@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXI@Z PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx
  0000d	57		 push	 edi
  0000e	99		 cdq
  0000f	6a 14		 push	 20			; 00000014H
  00011	5f		 pop	 edi
  00012	f7 ff		 idiv	 edi
  00014	8b f8		 mov	 edi, eax

; 1292 : 		if (max_size() - _Count < _Size)

  00016	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH
  0001b	2b 45 08	 sub	 eax, DWORD PTR __Count$[ebp]
  0001e	3b c7		 cmp	 eax, edi
  00020	73 0b		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve:
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  0002d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00030	2b c1		 sub	 eax, ecx
  00032	6a 14		 push	 20			; 00000014H
  00034	99		 cdq
  00035	59		 pop	 ecx
  00036	f7 f9		 idiv	 ecx
  00038	03 7d 08	 add	 edi, DWORD PTR __Count$[ebp]
  0003b	3b f8		 cmp	 edi, eax
  0003d	76 10		 jbe	 SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  0003f	57		 push	 edi
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IBEII@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Grow_to
  00047	50		 push	 eax
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXI@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::reserve
$LN1@Reserve:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1298 : 		}

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
$LN20@Reserve:
?_Reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXI@Z ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Reserve
_TEXT	ENDS
PUBLIC	??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::vector<GashaponPresent,std::allocator<GashaponPresent> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__catchsym$??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z$0
__unwindtable$??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z$2
__ehfuncinfo$??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Cat$510871 = 8					; size = 1
__Right$ = 8						; size = 4
??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::vector<GashaponPresent,std::allocator<GashaponPresent> >, COMDAT
; _this$ = ecx

; 535  : 		{	// construct by copying _Right

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi

; 536  : 		if (_Buy(_Right.size()))

  00011	8b 7d 08	 mov	 edi, DWORD PTR __Right$[ebp]
  00014	33 db		 xor	 ebx, ebx
  00016	89 1e		 mov	 DWORD PTR [esi], ebx
  00018	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  0001b	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  0001e	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00021	2b 07		 sub	 eax, DWORD PTR [edi]
  00023	6a 14		 push	 20			; 00000014H
  00025	59		 pop	 ecx
  00026	99		 cdq
  00027	f7 f9		 idiv	 ecx
  00029	8b ce		 mov	 ecx, esi
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ?_Buy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAE_NI@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Buy
  00031	84 c0		 test	 al, al
  00033	74 1f		 je	 SHORT $LN7@vector

; 537  : 			_TRY_BEGIN
; 538  : 			this->_Mylast = _Ucopy(_Right.begin(), _Right.end(),
; 539  : 				this->_Myfirst);

  00035	ff 75 08	 push	 DWORD PTR __Cat$510871[ebp]
  00038	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0003a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0003d	8b 3f		 mov	 edi, DWORD PTR [edi]
  0003f	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00042	52		 push	 edx
  00043	51		 push	 ecx
  00044	50		 push	 eax
  00045	57		 push	 edi
  00046	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+12], ebx
  00049	e8 00 00 00 00	 call	 ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@std@@PAVGashaponPresent@@V?$allocator@VGashaponPresent@@@2@@std@@YAPAVGashaponPresent@@V?$_Vector_const_iterator@V?$_Vector_val@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@@0@0PAV1@AAV?$allocator@VGashaponPresent@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<GashaponPresent,std::allocator<GashaponPresent> > >,GashaponPresent *,std::allocator<GashaponPresent> >
  0004e	83 c4 14	 add	 esp, 20			; 00000014H
  00051	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN7@vector:

; 543  : 			_CATCH_END
; 544  : 		}

  00054	8b c6		 mov	 eax, esi
  00056	e8 00 00 00 00	 call	 __EH_epilog3
  0005b	c2 04 00	 ret	 4
__catch$??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z$0:

; 540  : 			_CATCH_ALL
; 541  : 			_Tidy();

  0005e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	e8 00 00 00 00	 call	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy

; 542  : 			_RERAISE;

  00066	33 db		 xor	 ebx, ebx
  00068	53		 push	 ebx
  00069	53		 push	 ebx
  0006a	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN38@vector:
$LN37@vector:
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::vector<GashaponPresent,std::allocator<GashaponPresent> >
PUBLIC	??1?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::~vector<GashaponPresent,std::allocator<GashaponPresent> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::~vector<GashaponPresent,std::allocator<GashaponPresent> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy
??1?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@XZ ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::~vector<GashaponPresent,std::allocator<GashaponPresent> >
_TEXT	ENDS
PUBLIC	??1GashaponPresentInfo@@QAE@XZ			; GashaponPresentInfo::~GashaponPresentInfo
; Function compile flags: /Ogsp
;	COMDAT ??1GashaponPresentInfo@@QAE@XZ
_TEXT	SEGMENT
??1GashaponPresentInfo@@QAE@XZ PROC			; GashaponPresentInfo::~GashaponPresentInfo, COMDAT
; _this$ = ecx
  00000	83 c1 04	 add	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy
??1GashaponPresentInfo@@QAE@XZ ENDP			; GashaponPresentInfo::~GashaponPresentInfo
_TEXT	ENDS
PUBLIC	??1?$_Pair_base@$$CBKUGashaponPresentInfo@@@std@@QAE@XZ ; std::_Pair_base<unsigned long const ,GashaponPresentInfo>::~_Pair_base<unsigned long const ,GashaponPresentInfo>
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Pair_base@$$CBKUGashaponPresentInfo@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Pair_base@$$CBKUGashaponPresentInfo@@@std@@QAE@XZ PROC ; std::_Pair_base<unsigned long const ,GashaponPresentInfo>::~_Pair_base<unsigned long const ,GashaponPresentInfo>, COMDAT
; _this$ = ecx
  00000	83 c1 08	 add	 ecx, 8
  00003	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy
??1?$_Pair_base@$$CBKUGashaponPresentInfo@@@std@@QAE@XZ ENDP ; std::_Pair_base<unsigned long const ,GashaponPresentInfo>::~_Pair_base<unsigned long const ,GashaponPresentInfo>
_TEXT	ENDS
PUBLIC	?push_back@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXABVGashaponPresent@@@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::push_back
; Function compile flags: /Ogsp
;	COMDAT ?push_back@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXABVGashaponPresent@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXABVGashaponPresent@@@Z PROC ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f9		 cmp	 edi, ecx
  0000f	73 34		 jae	 SHORT $LN4@push_back
  00011	8b 16		 mov	 edx, DWORD PTR [esi]
  00013	3b d7		 cmp	 edx, edi
  00015	77 2e		 ja	 SHORT $LN4@push_back

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	8b c7		 mov	 eax, edi
  00019	2b c2		 sub	 eax, edx
  0001b	6a 14		 push	 20			; 00000014H
  0001d	99		 cdq
  0001e	5f		 pop	 edi
  0001f	f7 ff		 idiv	 edi
  00021	8b f8		 mov	 edi, eax

; 980  : 			if (this->_Mylast == this->_Myend)

  00023	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00026	75 09		 jne	 SHORT $LN3@push_back

; 981  : 				_Reserve(1);

  00028	6a 01		 push	 1
  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?_Reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXI@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Reserve
$LN3@push_back:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  00031	6b ff 14	 imul	 edi, 20			; 00000014H
  00034	03 3e		 add	 edi, DWORD PTR [esi]
  00036	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00039	57		 push	 edi
  0003a	ff 76 04	 push	 DWORD PTR [esi+4]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@AAV3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@AAV2@@Z ; std::_Cons_val<std::allocator<GashaponPresent>,GashaponPresent,GashaponPresent &>

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00043	eb 1b		 jmp	 SHORT $LN20@push_back
$LN4@push_back:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00045	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00048	75 09		 jne	 SHORT $LN1@push_back

; 991  : 				_Reserve(1);

  0004a	6a 01		 push	 1
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ?_Reserve@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXI@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Reserve
$LN1@push_back:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00053	57		 push	 edi
  00054	ff 76 04	 push	 DWORD PTR [esi+4]
  00057	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@VGashaponPresent@@@std@@VGashaponPresent@@ABV3@@std@@YAXAAV?$allocator@VGashaponPresent@@@0@PAVGashaponPresent@@ABV2@@Z ; std::_Cons_val<std::allocator<GashaponPresent>,GashaponPresent,GashaponPresent const &>
$LN20@push_back:
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH

; 996  : 			++this->_Mylast;

  00063	83 46 04 14	 add	 DWORD PTR [esi+4], 20	; 00000014H
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
?push_back@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXABVGashaponPresent@@@Z ENDP ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::push_back
_TEXT	ENDS
PUBLIC	??0GashaponPresentInfo@@QAE@ABU0@@Z		; GashaponPresentInfo::GashaponPresentInfo
; Function compile flags: /Ogsp
;	COMDAT ??0GashaponPresentInfo@@QAE@ABU0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0GashaponPresentInfo@@QAE@ABU0@@Z PROC		; GashaponPresentInfo::GashaponPresentInfo, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000b	83 c0 04	 add	 eax, 4
  0000e	89 0e		 mov	 DWORD PTR [esi], ecx
  00010	50		 push	 eax
  00011	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00014	e8 00 00 00 00	 call	 ??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::vector<GashaponPresent,std::allocator<GashaponPresent> >
  00019	8b c6		 mov	 eax, esi
  0001b	5e		 pop	 esi
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??0GashaponPresentInfo@@QAE@ABU0@@Z ENDP		; GashaponPresentInfo::GashaponPresentInfo
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@$$CBKUGashaponPresentInfo@@@std@@QAE@$$QBK$$QAUGashaponPresentInfo@@@Z ; std::_Pair_base<unsigned long const ,GashaponPresentInfo>::_Pair_base<unsigned long const ,GashaponPresentInfo>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$_Pair_base@$$CBKUGashaponPresentInfo@@@std@@QAE@$$QBK$$QAUGashaponPresentInfo@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@$$CBKUGashaponPresentInfo@@@std@@QAE@$$QBK$$QAUGashaponPresentInfo@@@Z PROC ; std::_Pair_base<unsigned long const ,GashaponPresentInfo>::_Pair_base<unsigned long const ,GashaponPresentInfo>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	89 06		 mov	 DWORD PTR [esi], eax
  0000d	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  00010	8b 08		 mov	 ecx, DWORD PTR [eax]
  00012	83 c0 04	 add	 eax, 4
  00015	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  00018	50		 push	 eax
  00019	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  0001c	e8 00 00 00 00	 call	 ??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::vector<GashaponPresent,std::allocator<GashaponPresent> >

; 146  : 		}

  00021	8b c6		 mov	 eax, esi
  00023	5e		 pop	 esi
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
??0?$_Pair_base@$$CBKUGashaponPresentInfo@@@std@@QAE@$$QBK$$QAUGashaponPresentInfo@@@Z ENDP ; std::_Pair_base<unsigned long const ,GashaponPresentInfo>::_Pair_base<unsigned long const ,GashaponPresentInfo>
_TEXT	ENDS
PUBLIC	??0GashaponPresentInfo@@QAE@XZ			; GashaponPresentInfo::GashaponPresentInfo
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iogashaponmgr.h
;	COMDAT ??0GashaponPresentInfo@@QAE@XZ
_TEXT	SEGMENT
??0GashaponPresentInfo@@QAE@XZ PROC			; GashaponPresentInfo::GashaponPresentInfo, COMDAT
; _this$ = ecx

; 31   : 	GashaponPresentInfo()

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00007	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0000a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 32   : 	{
; 33   : 		m_iEtcItemType = 0;

  0000d	89 08		 mov	 DWORD PTR [eax], ecx

; 34   : 	}

  0000f	c3		 ret	 0
??0GashaponPresentInfo@@QAE@XZ ENDP			; GashaponPresentInfo::GashaponPresentInfo
_TEXT	ENDS
PUBLIC	??1?$pair@$$CBKUGashaponPresentInfo@@@std@@QAE@XZ ; std::pair<unsigned long const ,GashaponPresentInfo>::~pair<unsigned long const ,GashaponPresentInfo>
; Function compile flags: /Ogsp
;	COMDAT ??1?$pair@$$CBKUGashaponPresentInfo@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@$$CBKUGashaponPresentInfo@@@std@@QAE@XZ PROC	; std::pair<unsigned long const ,GashaponPresentInfo>::~pair<unsigned long const ,GashaponPresentInfo>, COMDAT
; _this$ = ecx
  00000	83 c1 08	 add	 ecx, 8
  00003	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy
??1?$pair@$$CBKUGashaponPresentInfo@@@std@@QAE@XZ ENDP	; std::pair<unsigned long const ,GashaponPresentInfo>::~pair<unsigned long const ,GashaponPresentInfo>
_TEXT	ENDS
PUBLIC	??_C@_07MNAECOIF@MaxItem?$AA@			; `string'
PUBLIC	_rkLoader$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?LoadGashaponList@ioGashaponMgr@@QAEXAAVioINILoader@@AAUGashaponPresentInfo@@@Z ; ioGashaponMgr::LoadGashaponList
EXTRN	_memset:PROC
;	COMDAT ??_C@_07MNAECOIF@MaxItem?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iogashaponmgr.cpp
CONST	SEGMENT
??_C@_07MNAECOIF@MaxItem?$AA@ DB 'MaxItem', 00H		; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?LoadGashaponList@ioGashaponMgr@@QAEXAAVioINILoader@@AAUGashaponPresentInfo@@@Z
_TEXT	SEGMENT
_Present$505705 = -324					; size = 20
tv3377 = -304						; size = 4
tv1077 = -300						; size = 4
_rkLoader$GSCopy$ = -296				; size = 4
_szKey$ = -292						; size = 260
___encStr$506323 = -32					; size = 23
___encStr$506171 = -28					; size = 16
___encStr$506019 = -28					; size = 17
___encStr$505867 = -28					; size = 17
___encStr$505709 = -24					; size = 15
__$ArrayPad$ = -4					; size = 4
_rkLoader$ = 8						; size = 4
_kInfo$ = 12						; size = 4
?LoadGashaponList@ioGashaponMgr@@QAEXAAVioINILoader@@AAUGashaponPresentInfo@@@Z PROC ; ioGashaponMgr::LoadGashaponList, COMDAT
; _this$ = ecx

; 93   : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 44 01 00
	00		 sub	 esp, 324		; 00000144H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _rkLoader$[ebp]
  00018	57		 push	 edi
  00019	8b 7d 0c	 mov	 edi, DWORD PTR _kInfo$[ebp]

; 94   : 	char szKey[MAX_PATH] = "";

  0001c	33 db		 xor	 ebx, ebx
  0001e	68 03 01 00 00	 push	 259			; 00000103H
  00023	8d 85 dd fe ff
	ff		 lea	 eax, DWORD PTR _szKey$[ebp+1]
  00029	53		 push	 ebx
  0002a	50		 push	 eax

; 97   : 	{
; 98   : 		GashaponPresent Present;
; 99   : 
; 100  : 		sprintf_s_e( szKey, "Present%d_Type", i + 1 );

  0002b	89 b5 d8 fe ff
	ff		 mov	 DWORD PTR _rkLoader$GSCopy$[ebp], esi
  00031	88 9d dc fe ff
	ff		 mov	 BYTE PTR _szKey$[ebp], bl
  00037	e8 00 00 00 00	 call	 _memset
  0003c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003f	53		 push	 ebx
  00040	8b ce		 mov	 ecx, esi
  00042	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_07MNAECOIF@MaxItem?$AA@
  0004d	ff d6		 call	 esi
  0004f	3b c3		 cmp	 eax, ebx
  00051	0f 8e 62 02 00
	00		 jle	 $LN496@LoadGashap

; 95   : 	int iMaxItem = rkLoader.LoadInt( "MaxItem", 0 );
; 96   : 	for (int i = 0; i < iMaxItem ; i++ )

  00057	83 c7 04	 add	 edi, 4
  0005a	89 bd d0 fe ff
	ff		 mov	 DWORD PTR tv3377[ebp], edi

; 97   : 	{
; 98   : 		GashaponPresent Present;
; 99   : 
; 100  : 		sprintf_s_e( szKey, "Present%d_Type", i + 1 );

  00060	33 ff		 xor	 edi, edi
  00062	47		 inc	 edi
  00063	89 85 d4 fe ff
	ff		 mov	 DWORD PTR tv1077[ebp], eax
$LL498@LoadGashap:
  00069	6a 03		 push	 3
  0006b	c7 45 e8 bd 9e
	8e 99		 mov	 DWORD PTR ___encStr$505709[ebp], -1718706499 ; 998e9ebdH
  00072	c7 45 ec 88 82
	9f cf		 mov	 DWORD PTR ___encStr$505709[ebp+4], -811629944 ; cf9f8288H
  00079	c7 45 f0 89 b3
	bf 93		 mov	 DWORD PTR ___encStr$505709[ebp+8], -1816153207 ; 93bfb389H
  00080	66 c7 45 f4 9d
	89		 mov	 WORD PTR ___encStr$505709[ebp+12], 35229 ; 0000899dH
  00086	8d 45 e8	 lea	 eax, DWORD PTR ___encStr$505709[ebp]
  00089	88 5d f6	 mov	 BYTE PTR ___encStr$505709[ebp+14], bl
  0008c	59		 pop	 ecx
$LL510@LoadGashap:
  0008d	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00093	83 c0 04	 add	 eax, 4
  00096	49		 dec	 ecx
  00097	75 f4		 jne	 SHORT $LL510@LoadGashap
  00099	6a 0c		 push	 12			; 0000000cH
  0009b	58		 pop	 eax
$LL507@LoadGashap:
  0009c	8b c8		 mov	 ecx, eax
  0009e	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  000a4	79 05		 jns	 SHORT $LN569@LoadGashap
  000a6	49		 dec	 ecx
  000a7	83 c9 fc	 or	 ecx, -4			; fffffffcH
  000aa	41		 inc	 ecx
$LN569@LoadGashap:
  000ab	b2 ed		 mov	 dl, -19			; ffffffedH
  000ad	2a d1		 sub	 dl, cl
  000af	30 54 05 e8	 xor	 BYTE PTR ___encStr$505709[ebp+eax], dl
  000b3	40		 inc	 eax
  000b4	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  000b7	7c e3		 jl	 SHORT $LL507@LoadGashap
  000b9	57		 push	 edi
  000ba	8d 45 e8	 lea	 eax, DWORD PTR ___encStr$505709[ebp]
  000bd	50		 push	 eax
  000be	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _szKey$[ebp]
  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ ; sprintf_s<260>

; 101  : 		Present.m_iType = (short)rkLoader.LoadInt( szKey, 0 );

  000ca	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  000d0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d3	53		 push	 ebx
  000d4	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _szKey$[ebp]
  000da	50		 push	 eax
  000db	ff d6		 call	 esi
  000dd	6a 04		 push	 4
  000df	66 89 85 bc fe
	ff ff		 mov	 WORD PTR _Present$505705[ebp], ax

; 102  : 
; 103  : 		sprintf_s_e( szKey, "Present%d_Value1", i + 1 );

  000e6	c7 45 e4 bd 9e
	8e 99		 mov	 DWORD PTR ___encStr$505867[ebp], -1718706499 ; 998e9ebdH
  000ed	c7 45 e8 88 82
	9f cf		 mov	 DWORD PTR ___encStr$505867[ebp+4], -811629944 ; cf9f8288H
  000f4	c7 45 ec 89 b3
	bd 8b		 mov	 DWORD PTR ___encStr$505867[ebp+8], -1950502007 ; 8bbdb389H
  000fb	c7 45 f0 81 99
	8e db		 mov	 DWORD PTR ___encStr$505867[ebp+12], -611411583 ; db8e9981H
  00102	8d 45 e4	 lea	 eax, DWORD PTR ___encStr$505867[ebp]
  00105	88 5d f4	 mov	 BYTE PTR ___encStr$505867[ebp+16], bl
  00108	59		 pop	 ecx
$LL518@LoadGashap:
  00109	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0010f	83 c0 04	 add	 eax, 4
  00112	49		 dec	 ecx
  00113	75 f4		 jne	 SHORT $LL518@LoadGashap
  00115	57		 push	 edi
  00116	8d 45 e4	 lea	 eax, DWORD PTR ___encStr$505867[ebp]
  00119	50		 push	 eax
  0011a	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _szKey$[ebp]
  00120	50		 push	 eax
  00121	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ ; sprintf_s<260>

; 104  : 		Present.m_iValue1 = rkLoader.LoadInt( szKey, 0 );

  00126	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  0012c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0012f	53		 push	 ebx
  00130	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _szKey$[ebp]
  00136	50		 push	 eax
  00137	ff d6		 call	 esi
  00139	6a 04		 push	 4
  0013b	89 85 c0 fe ff
	ff		 mov	 DWORD PTR _Present$505705[ebp+4], eax

; 105  : 
; 106  : 		sprintf_s_e( szKey, "Present%d_Value2", i + 1 );

  00141	c7 45 e4 bd 9e
	8e 99		 mov	 DWORD PTR ___encStr$506019[ebp], -1718706499 ; 998e9ebdH
  00148	c7 45 e8 88 82
	9f cf		 mov	 DWORD PTR ___encStr$506019[ebp+4], -811629944 ; cf9f8288H
  0014f	c7 45 ec 89 b3
	bd 8b		 mov	 DWORD PTR ___encStr$506019[ebp+8], -1950502007 ; 8bbdb389H
  00156	c7 45 f0 81 99
	8e d8		 mov	 DWORD PTR ___encStr$506019[ebp+12], -661743231 ; d88e9981H
  0015d	8d 45 e4	 lea	 eax, DWORD PTR ___encStr$506019[ebp]
  00160	88 5d f4	 mov	 BYTE PTR ___encStr$506019[ebp+16], bl
  00163	59		 pop	 ecx
$LL526@LoadGashap:
  00164	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0016a	83 c0 04	 add	 eax, 4
  0016d	49		 dec	 ecx
  0016e	75 f4		 jne	 SHORT $LL526@LoadGashap
  00170	57		 push	 edi
  00171	8d 45 e4	 lea	 eax, DWORD PTR ___encStr$506019[ebp]
  00174	50		 push	 eax
  00175	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _szKey$[ebp]
  0017b	50		 push	 eax
  0017c	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ ; sprintf_s<260>

; 107  : 		Present.m_iValue2 = rkLoader.LoadInt( szKey, 0 );

  00181	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  00187	83 c4 0c	 add	 esp, 12			; 0000000cH
  0018a	53		 push	 ebx
  0018b	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _szKey$[ebp]
  00191	50		 push	 eax
  00192	ff d6		 call	 esi
  00194	6a 03		 push	 3
  00196	89 85 c4 fe ff
	ff		 mov	 DWORD PTR _Present$505705[ebp+8], eax

; 108  : 
; 109  : 		sprintf_s_e( szKey, "Present%d_order", i + 1 );

  0019c	c7 45 e4 bd 9e
	8e 99		 mov	 DWORD PTR ___encStr$506171[ebp], -1718706499 ; 998e9ebdH
  001a3	c7 45 e8 88 82
	9f cf		 mov	 DWORD PTR ___encStr$506171[ebp+4], -811629944 ; cf9f8288H
  001aa	c7 45 ec 89 b3
	84 98		 mov	 DWORD PTR ___encStr$506171[ebp+8], -1736133751 ; 9884b389H
  001b1	8d 45 e4	 lea	 eax, DWORD PTR ___encStr$506171[ebp]
  001b4	c7 45 f0 89 89
	99 00		 mov	 DWORD PTR ___encStr$506171[ebp+12], 10062217 ; 00998989H
  001bb	59		 pop	 ecx
$LL534@LoadGashap:
  001bc	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001c2	83 c0 04	 add	 eax, 4
  001c5	49		 dec	 ecx
  001c6	75 f4		 jne	 SHORT $LL534@LoadGashap
  001c8	6a 0c		 push	 12			; 0000000cH
  001ca	58		 pop	 eax
$LL531@LoadGashap:
  001cb	8b c8		 mov	 ecx, eax
  001cd	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  001d3	79 05		 jns	 SHORT $LN570@LoadGashap
  001d5	49		 dec	 ecx
  001d6	83 c9 fc	 or	 ecx, -4			; fffffffcH
  001d9	41		 inc	 ecx
$LN570@LoadGashap:
  001da	b2 ed		 mov	 dl, -19			; ffffffedH
  001dc	2a d1		 sub	 dl, cl
  001de	30 54 05 e4	 xor	 BYTE PTR ___encStr$506171[ebp+eax], dl
  001e2	40		 inc	 eax
  001e3	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  001e6	7c e3		 jl	 SHORT $LL531@LoadGashap
  001e8	57		 push	 edi
  001e9	8d 45 e4	 lea	 eax, DWORD PTR ___encStr$506171[ebp]
  001ec	50		 push	 eax
  001ed	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _szKey$[ebp]
  001f3	50		 push	 eax
  001f4	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ ; sprintf_s<260>

; 110  : 		Present.m_iOrder = rkLoader.LoadInt( szKey, 0 );

  001f9	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  001ff	83 c4 0c	 add	 esp, 12			; 0000000cH
  00202	53		 push	 ebx
  00203	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _szKey$[ebp]
  00209	50		 push	 eax
  0020a	ff d6		 call	 esi
  0020c	6a 05		 push	 5
  0020e	89 85 c8 fe ff
	ff		 mov	 DWORD PTR _Present$505705[ebp+12], eax

; 111  : 
; 112  : 		sprintf_s_e( szKey, "Present%d_Special_Type", i + 1 );

  00214	c7 45 e0 bd 9e
	8e 99		 mov	 DWORD PTR ___encStr$506323[ebp], -1718706499 ; 998e9ebdH
  0021b	c7 45 e4 88 82
	9f cf		 mov	 DWORD PTR ___encStr$506323[ebp+4], -811629944 ; cf9f8288H
  00222	c7 45 e8 89 b3
	b8 9a		 mov	 DWORD PTR ___encStr$506323[ebp+8], -1699171447 ; 9ab8b389H
  00229	c7 45 ec 88 8f
	82 8b		 mov	 DWORD PTR ___encStr$506323[ebp+12], -1954377848 ; 8b828f88H
  00230	c7 45 f0 81 b3
	bf 93		 mov	 DWORD PTR ___encStr$506323[ebp+16], -1816153215 ; 93bfb381H
  00237	66 c7 45 f4 9d
	89		 mov	 WORD PTR ___encStr$506323[ebp+20], 35229 ; 0000899dH
  0023d	8d 45 e0	 lea	 eax, DWORD PTR ___encStr$506323[ebp]
  00240	88 5d f6	 mov	 BYTE PTR ___encStr$506323[ebp+22], bl
  00243	59		 pop	 ecx
$LL542@LoadGashap:
  00244	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0024a	83 c0 04	 add	 eax, 4
  0024d	49		 dec	 ecx
  0024e	75 f4		 jne	 SHORT $LL542@LoadGashap
  00250	6a 14		 push	 20			; 00000014H
  00252	58		 pop	 eax
$LL539@LoadGashap:
  00253	8b c8		 mov	 ecx, eax
  00255	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0025b	79 05		 jns	 SHORT $LN571@LoadGashap
  0025d	49		 dec	 ecx
  0025e	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00261	41		 inc	 ecx
$LN571@LoadGashap:
  00262	b2 ed		 mov	 dl, -19			; ffffffedH
  00264	2a d1		 sub	 dl, cl
  00266	30 54 05 e0	 xor	 BYTE PTR ___encStr$506323[ebp+eax], dl
  0026a	40		 inc	 eax
  0026b	83 f8 16	 cmp	 eax, 22			; 00000016H
  0026e	7c e3		 jl	 SHORT $LL539@LoadGashap
  00270	57		 push	 edi
  00271	8d 45 e0	 lea	 eax, DWORD PTR ___encStr$506323[ebp]
  00274	50		 push	 eax
  00275	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _szKey$[ebp]
  0027b	50		 push	 eax
  0027c	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAE@@@YAHAAY0BAE@DPBDZZ ; sprintf_s<260>

; 113  : 		Present.m_iSpecialAddType = rkLoader.LoadInt( szKey, 0 );

  00281	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  00287	83 c4 0c	 add	 esp, 12			; 0000000cH
  0028a	53		 push	 ebx
  0028b	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _szKey$[ebp]
  00291	50		 push	 eax
  00292	ff d6		 call	 esi

; 114  : 
; 115  : 		kInfo.m_vPresent.push_back( Present );

  00294	8b 8d d0 fe ff
	ff		 mov	 ecx, DWORD PTR tv3377[ebp]
  0029a	89 85 cc fe ff
	ff		 mov	 DWORD PTR _Present$505705[ebp+16], eax
  002a0	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _Present$505705[ebp]
  002a6	50		 push	 eax
  002a7	e8 00 00 00 00	 call	 ?push_back@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAEXABVGashaponPresent@@@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::push_back
  002ac	47		 inc	 edi
  002ad	ff 8d d4 fe ff
	ff		 dec	 DWORD PTR tv1077[ebp]
  002b3	0f 85 b0 fd ff
	ff		 jne	 $LL498@LoadGashap
$LN496@LoadGashap:

; 116  : 	}
; 117  : }

  002b9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002bc	5f		 pop	 edi
  002bd	5e		 pop	 esi
  002be	33 cd		 xor	 ecx, ebp
  002c0	5b		 pop	 ebx
  002c1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002c6	c9		 leave
  002c7	c2 08 00	 ret	 8
?LoadGashaponList@ioGashaponMgr@@QAEXAAVioINILoader@@AAUGashaponPresentInfo@@@Z ENDP ; ioGashaponMgr::LoadGashaponList
_TEXT	ENDS
PUBLIC	?FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z ; ioGashaponMgr::FindGashaponPresentInfo
EXTRN	_atexit:PROC
;	COMDAT ?kNone@?1??FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z@4U3@A
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
_BSS	SEGMENT
?kNone@?1??FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z@4U3@A DB 014H DUP (?) ; `ioGashaponMgr::FindGashaponPresentInfo'::`2'::kNone
_BSS	ENDS
;	COMDAT ?$S1@?1??FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z@4IA
_BSS	SEGMENT
?$S1@?1??FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z@4IA DD 01H DUP (?) ; `ioGashaponMgr::FindGashaponPresentInfo'::`2'::$S1
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iogashaponmgr.cpp
_BSS	ENDS
;	COMDAT ?FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z
_TEXT	SEGMENT
_iter$ = -4						; size = 4
$T511134 = 8						; size = 4
_iEtcItemType$ = 8					; size = 4
?FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z PROC ; ioGashaponMgr::FindGashaponPresentInfo, COMDAT
; _this$ = ecx

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 121  : 	static GashaponPresentInfo kNone;

  00004	f6 05 00 00 00
	00 01		 test	 BYTE PTR ?$S1@?1??FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z@4IA, 1
  0000b	56		 push	 esi
  0000c	8b f1		 mov	 esi, ecx
  0000e	75 28		 jne	 SHORT $LN2@FindGashap
  00010	83 0d 00 00 00
	00 01		 or	 DWORD PTR ?$S1@?1??FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z@4IA, 1
  00017	33 c0		 xor	 eax, eax
  00019	68 00 00 00 00	 push	 OFFSET ??__FkNone@?1??FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z@YAXXZ ; `ioGashaponMgr::FindGashaponPresentInfo'::`2'::`dynamic atexit destructor for 'kNone''
  0001e	a3 04 00 00 00	 mov	 DWORD PTR ?kNone@?1??FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z@4U3@A+4, eax
  00023	a3 08 00 00 00	 mov	 DWORD PTR ?kNone@?1??FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z@4U3@A+8, eax
  00028	a3 0c 00 00 00	 mov	 DWORD PTR ?kNone@?1??FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z@4U3@A+12, eax
  0002d	a3 00 00 00 00	 mov	 DWORD PTR ?kNone@?1??FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z@4U3@A, eax
  00032	e8 00 00 00 00	 call	 _atexit
  00037	59		 pop	 ecx
$LN2@FindGashap:

; 122  : 	GashaponPresentInfoMap::iterator iter = m_GashaponPresentInfoMap.find( iEtcItemType );

  00038	8b 45 08	 mov	 eax, DWORD PTR _iEtcItemType$[ebp]
  0003b	89 45 08	 mov	 DWORD PTR $T511134[ebp], eax
  0003e	8d 45 08	 lea	 eax, DWORD PTR $T511134[ebp]
  00041	50		 push	 eax
  00042	8d 45 fc	 lea	 eax, DWORD PTR _iter$[ebp]
  00045	50		 push	 eax
  00046	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00049	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::find

; 123  : 	if( iter != m_GashaponPresentInfoMap.end() )

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _iter$[ebp]
  00051	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  00054	5e		 pop	 esi
  00055	74 05		 je	 SHORT $LN1@FindGashap

; 124  : 	{		
; 125  : 		return iter->second;

  00057	83 c0 10	 add	 eax, 16			; 00000010H
  0005a	eb 05		 jmp	 SHORT $LN3@FindGashap
$LN1@FindGashap:

; 126  : 	}
; 127  : 
; 128  : 	return kNone;

  0005c	b8 00 00 00 00	 mov	 eax, OFFSET ?kNone@?1??FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z@4U3@A
$LN3@FindGashap:

; 129  : }

  00061	c9		 leave
  00062	c2 04 00	 ret	 4
?FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z ENDP ; ioGashaponMgr::FindGashaponPresentInfo
_TEXT	ENDS
PUBLIC	?FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z ; ioGashaponMgr::FindGashaponPresentList
;	COMDAT ?kNone@?1??FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z@4V34@A
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
_BSS	SEGMENT
?kNone@?1??FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z@4V34@A DB 010H DUP (?) ; `ioGashaponMgr::FindGashaponPresentList'::`2'::kNone
_BSS	ENDS
;	COMDAT ?$S2@?1??FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z@4IA
_BSS	SEGMENT
?$S2@?1??FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z@4IA DD 01H DUP (?) ; `ioGashaponMgr::FindGashaponPresentList'::`2'::$S2
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iogashaponmgr.cpp
_BSS	ENDS
;	COMDAT ?FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z
_TEXT	SEGMENT
$T511245 = -4						; size = 4
$T511244 = 8						; size = 4
_iEtcItemType$ = 8					; size = 4
?FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z PROC ; ioGashaponMgr::FindGashaponPresentList, COMDAT
; _this$ = ecx

; 132  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 133  : 	static vGashaponPresent kNone;

  00004	f6 05 00 00 00
	00 01		 test	 BYTE PTR ?$S2@?1??FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z@4IA, 1
  0000b	56		 push	 esi
  0000c	8b f1		 mov	 esi, ecx
  0000e	75 23		 jne	 SHORT $LN2@FindGashap@2
  00010	83 0d 00 00 00
	00 01		 or	 DWORD PTR ?$S2@?1??FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z@4IA, 1
  00017	33 c0		 xor	 eax, eax
  00019	68 00 00 00 00	 push	 OFFSET ??__FkNone@?1??FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z@YAXXZ ; `ioGashaponMgr::FindGashaponPresentList'::`2'::`dynamic atexit destructor for 'kNone''
  0001e	a3 00 00 00 00	 mov	 DWORD PTR ?kNone@?1??FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z@4V34@A, eax
  00023	a3 04 00 00 00	 mov	 DWORD PTR ?kNone@?1??FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z@4V34@A+4, eax
  00028	a3 08 00 00 00	 mov	 DWORD PTR ?kNone@?1??FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z@4V34@A+8, eax
  0002d	e8 00 00 00 00	 call	 _atexit
  00032	59		 pop	 ecx
$LN2@FindGashap@2:

; 134  : 	GashaponPresentInfoMap::const_iterator iter = m_GashaponPresentInfoMap.find( iEtcItemType );

  00033	8b 45 08	 mov	 eax, DWORD PTR _iEtcItemType$[ebp]
  00036	89 45 08	 mov	 DWORD PTR $T511244[ebp], eax
  00039	8d 45 08	 lea	 eax, DWORD PTR $T511244[ebp]
  0003c	50		 push	 eax
  0003d	8d 45 fc	 lea	 eax, DWORD PTR $T511245[ebp]
  00040	50		 push	 eax
  00041	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00044	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::find
  00049	8b 00		 mov	 eax, DWORD PTR [eax]

; 135  : 	if( iter != m_GashaponPresentInfoMap.end() )

  0004b	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0004e	5e		 pop	 esi
  0004f	74 05		 je	 SHORT $LN1@FindGashap@2

; 136  : 	{
; 137  : 		const GashaponPresentInfo& kInfo = iter->second;
; 138  : 		return kInfo.m_vPresent;

  00051	83 c0 14	 add	 eax, 20			; 00000014H
  00054	eb 05		 jmp	 SHORT $LN3@FindGashap@2
$LN1@FindGashap@2:

; 139  : 	}
; 140  : 
; 141  : 	return kNone;

  00056	b8 00 00 00 00	 mov	 eax, OFFSET ?kNone@?1??FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z@4V34@A
$LN3@FindGashap@2:

; 142  : }

  0005b	c9		 leave
  0005c	c2 04 00	 ret	 4
?FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z ENDP ; ioGashaponMgr::FindGashaponPresentList
_TEXT	ENDS
PUBLIC	??$?0AAHAAUGashaponPresentInfo@@@?$_Pair_base@$$CBKUGashaponPresentInfo@@@std@@QAE@AAHAAUGashaponPresentInfo@@@Z ; std::_Pair_base<unsigned long const ,GashaponPresentInfo>::_Pair_base<unsigned long const ,GashaponPresentInfo><int &,GashaponPresentInfo &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAHAAUGashaponPresentInfo@@@?$_Pair_base@$$CBKUGashaponPresentInfo@@@std@@QAE@AAHAAUGashaponPresentInfo@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAHAAUGashaponPresentInfo@@@?$_Pair_base@$$CBKUGashaponPresentInfo@@@std@@QAE@AAHAAUGashaponPresentInfo@@@Z PROC ; std::_Pair_base<unsigned long const ,GashaponPresentInfo>::_Pair_base<unsigned long const ,GashaponPresentInfo><int &,GashaponPresentInfo &>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	89 06		 mov	 DWORD PTR [esi], eax
  0000d	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  00010	8b 08		 mov	 ecx, DWORD PTR [eax]
  00012	83 c0 04	 add	 eax, 4
  00015	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  00018	50		 push	 eax
  00019	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  0001c	e8 00 00 00 00	 call	 ??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::vector<GashaponPresent,std::allocator<GashaponPresent> >

; 164  : 		}

  00021	8b c6		 mov	 eax, esi
  00023	5e		 pop	 esi
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
??$?0AAHAAUGashaponPresentInfo@@@?$_Pair_base@$$CBKUGashaponPresentInfo@@@std@@QAE@AAHAAUGashaponPresentInfo@@@Z ENDP ; std::_Pair_base<unsigned long const ,GashaponPresentInfo>::_Pair_base<unsigned long const ,GashaponPresentInfo><int &,GashaponPresentInfo &>
_TEXT	ENDS
PUBLIC	??_G?$pair@$$CBKUGashaponPresentInfo@@@std@@QAEPAXI@Z ; std::pair<unsigned long const ,GashaponPresentInfo>::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_G?$pair@$$CBKUGashaponPresentInfo@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$pair@$$CBKUGashaponPresentInfo@@@std@@QAEPAXI@Z PROC ; std::pair<unsigned long const ,GashaponPresentInfo>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00009	e8 00 00 00 00	 call	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy
  0000e	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00012	74 07		 je	 SHORT $LN1@scalar@3
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001a	59		 pop	 ecx
$LN1@scalar@3:
  0001b	8b c6		 mov	 eax, esi
  0001d	5e		 pop	 esi
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??_G?$pair@$$CBKUGashaponPresentInfo@@@std@@QAEPAXI@Z ENDP ; std::pair<unsigned long const ,GashaponPresentInfo>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$?0$$CBKUGashaponPresentInfo@@@?$pair@$$CBKUGashaponPresentInfo@@@std@@QAE@$$QAU01@@Z ; std::pair<unsigned long const ,GashaponPresentInfo>::pair<unsigned long const ,GashaponPresentInfo><unsigned long const ,GashaponPresentInfo>
; Function compile flags: /Ogsp
;	COMDAT ??$?0$$CBKUGashaponPresentInfo@@@?$pair@$$CBKUGashaponPresentInfo@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0$$CBKUGashaponPresentInfo@@@?$pair@$$CBKUGashaponPresentInfo@@@std@@QAE@$$QAU01@@Z PROC ; std::pair<unsigned long const ,GashaponPresentInfo>::pair<unsigned long const ,GashaponPresentInfo><unsigned long const ,GashaponPresentInfo>, COMDAT
; _this$ = ecx

; 255  : 		{	// construct from moved compatible pair

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  0000c	51		 push	 ecx
  0000d	50		 push	 eax
  0000e	8b ce		 mov	 ecx, esi
  00010	e8 00 00 00 00	 call	 ??0?$_Pair_base@$$CBKUGashaponPresentInfo@@@std@@QAE@$$QBK$$QAUGashaponPresentInfo@@@Z ; std::_Pair_base<unsigned long const ,GashaponPresentInfo>::_Pair_base<unsigned long const ,GashaponPresentInfo>

; 256  : 		}

  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??$?0$$CBKUGashaponPresentInfo@@@?$pair@$$CBKUGashaponPresentInfo@@@std@@QAE@$$QAU01@@Z ENDP ; std::pair<unsigned long const ,GashaponPresentInfo>::pair<unsigned long const ,GashaponPresentInfo><unsigned long const ,GashaponPresentInfo>
_TEXT	ENDS
PUBLIC	??$?0AAHAAUGashaponPresentInfo@@@?$pair@$$CBKUGashaponPresentInfo@@@std@@QAE@AAHAAUGashaponPresentInfo@@@Z ; std::pair<unsigned long const ,GashaponPresentInfo>::pair<unsigned long const ,GashaponPresentInfo><int &,GashaponPresentInfo &>
; Function compile flags: /Ogsp
;	COMDAT ??$?0AAHAAUGashaponPresentInfo@@@?$pair@$$CBKUGashaponPresentInfo@@@std@@QAE@AAHAAUGashaponPresentInfo@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAHAAUGashaponPresentInfo@@@?$pair@$$CBKUGashaponPresentInfo@@@std@@QAE@AAHAAUGashaponPresentInfo@@@Z PROC ; std::pair<unsigned long const ,GashaponPresentInfo>::pair<unsigned long const ,GashaponPresentInfo><int &,GashaponPresentInfo &>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 0c	 push	 DWORD PTR __Val2$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 08	 push	 DWORD PTR __Val1$[ebp]
  0000c	e8 00 00 00 00	 call	 ??$?0AAHAAUGashaponPresentInfo@@@?$_Pair_base@$$CBKUGashaponPresentInfo@@@std@@QAE@AAHAAUGashaponPresentInfo@@@Z ; std::_Pair_base<unsigned long const ,GashaponPresentInfo>::_Pair_base<unsigned long const ,GashaponPresentInfo><int &,GashaponPresentInfo &>

; 248  : 		}

  00011	8b c6		 mov	 eax, esi
  00013	5e		 pop	 esi
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAHAAUGashaponPresentInfo@@@?$pair@$$CBKUGashaponPresentInfo@@@std@@QAE@AAHAAUGashaponPresentInfo@@@Z ENDP ; std::pair<unsigned long const ,GashaponPresentInfo>::pair<unsigned long const ,GashaponPresentInfo><int &,GashaponPresentInfo &>
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@YAXPAU?$pair@$$CBKUGashaponPresentInfo@@@0@@Z ; std::_Destroy<std::pair<unsigned long const ,GashaponPresentInfo> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@YAXPAU?$pair@$$CBKUGashaponPresentInfo@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@YAXPAU?$pair@$$CBKUGashaponPresentInfo@@@0@@Z PROC ; std::_Destroy<std::pair<unsigned long const ,GashaponPresentInfo> >, COMDAT

; 62   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	_Ptr->~_Ty();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	83 c1 08	 add	 ecx, 8

; 64   : 	}

  00009	5d		 pop	 ebp

; 63   : 	_Ptr->~_Ty();

  0000a	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy
??$_Destroy@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@YAXPAU?$pair@$$CBKUGashaponPresentInfo@@@0@@Z ENDP ; std::_Destroy<std::pair<unsigned long const ,GashaponPresentInfo> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUGashaponPresentInfo@@@2@$$QAU32@@Z ; std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >::construct
EXTRN	__EH_prolog3:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUGashaponPresentInfo@@@2@$$QAU32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUGashaponPresentInfo@@@2@$$QAU32@@Z$0
__ehfuncinfo$?construct@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUGashaponPresentInfo@@@2@$$QAU32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUGashaponPresentInfo@@@2@$$QAU32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUGashaponPresentInfo@@@2@$$QAU32@@Z
_TEXT	SEGMENT
$T511464 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUGashaponPresentInfo@@@2@$$QAU32@@Z PROC ; std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?construct@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUGashaponPresentInfo@@@2@$$QAU32@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0000f	89 4d f0	 mov	 DWORD PTR $T511464[ebp], ecx
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 c9		 test	 ecx, ecx
  00018	74 0d		 je	 SHORT $LN3@construct@4
  0001a	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  0001d	8d 50 04	 lea	 edx, DWORD PTR [eax+4]
  00020	52		 push	 edx
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??0?$_Pair_base@$$CBKUGashaponPresentInfo@@@std@@QAE@$$QBK$$QAUGashaponPresentInfo@@@Z ; std::_Pair_base<unsigned long const ,GashaponPresentInfo>::_Pair_base<unsigned long const ,GashaponPresentInfo>
$LN3@construct@4:

; 203  : 		}

  00027	e8 00 00 00 00	 call	 __EH_epilog3
  0002c	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUGashaponPresentInfo@@@2@$$QAU32@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T511464[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$?construct@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUGashaponPresentInfo@@@2@$$QAU32@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?construct@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUGashaponPresentInfo@@@2@$$QAU32@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUGashaponPresentInfo@@@2@$$QAU32@@Z ENDP ; std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >::construct
PUBLIC	?destroy@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUGashaponPresentInfo@@@2@@Z ; std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >::destroy
; Function compile flags: /Ogsp
;	COMDAT ?destroy@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUGashaponPresentInfo@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUGashaponPresentInfo@@@2@@Z PROC ; std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 213  : 		_Destroy(_Ptr);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	83 c1 08	 add	 ecx, 8
  00009	e8 00 00 00 00	 call	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy

; 214  : 		}

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?destroy@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUGashaponPresentInfo@@@2@@Z ENDP ; std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >::destroy
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@U?$pair@$$CBKUGashaponPresentInfo@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@0@PAU?$pair@$$CBKUGashaponPresentInfo@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,std::pair<unsigned long const ,GashaponPresentInfo>,std::pair<unsigned long const ,GashaponPresentInfo> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@U?$pair@$$CBKUGashaponPresentInfo@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@0@PAU?$pair@$$CBKUGashaponPresentInfo@@@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@U?$pair@$$CBKUGashaponPresentInfo@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@0@PAU?$pair@$$CBKUGashaponPresentInfo@@@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,std::pair<unsigned long const ,GashaponPresentInfo>,std::pair<unsigned long const ,GashaponPresentInfo> >, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  0000c	e8 00 00 00 00	 call	 ?construct@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUGashaponPresentInfo@@@2@$$QAU32@@Z ; std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >::construct

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@U?$pair@$$CBKUGashaponPresentInfo@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@0@PAU?$pair@$$CBKUGashaponPresentInfo@@@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,std::pair<unsigned long const ,GashaponPresentInfo>,std::pair<unsigned long const ,GashaponPresentInfo> >
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@U?$pair@$$CBKUGashaponPresentInfo@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@0@PAU?$pair@$$CBKUGashaponPresentInfo@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,std::pair<unsigned long const ,GashaponPresentInfo> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@U?$pair@$$CBKUGashaponPresentInfo@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@0@PAU?$pair@$$CBKUGashaponPresentInfo@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@U?$pair@$$CBKUGashaponPresentInfo@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@0@PAU?$pair@$$CBKUGashaponPresentInfo@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,std::pair<unsigned long const ,GashaponPresentInfo> >, COMDAT

; 286  : 	{	// destroy using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  00006	83 c1 08	 add	 ecx, 8

; 288  : 	}

  00009	5d		 pop	 ebp

; 287  : 	_Alval.destroy(_Pdest);

  0000a	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy
??$_Dest_val@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@U?$pair@$$CBKUGashaponPresentInfo@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@0@PAU?$pair@$$CBKUGashaponPresentInfo@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,std::pair<unsigned long const ,GashaponPresentInfo> >
_TEXT	ENDS
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Insert
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1631 : 		{	// add node with value next to _Wherenode, to left if _Addleft

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 1632 : 		if (max_size() - 1 <= this->_Mysize)

  00008	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0000b	3d a9 aa aa 0a	 cmp	 eax, 178956969		; 0aaaaaa9H
  00010	72 1e		 jb	 SHORT $LN17@Insert

; 1633 : 			{	// tree would get too big, fail
; 1634 : 			_Dest_val(this->_Alval,
; 1635 : 				_STD addressof(this->_Myval(_Newnode)));

  00012	8b 75 14	 mov	 esi, DWORD PTR __Newnode$[ebp]
  00015	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00018	e8 00 00 00 00	 call	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy

; 1636 : 
; 1637 : 			this->_Alnod.deallocate(_Newnode, 1);

  0001d	56		 push	 esi
  0001e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 1638 : 
; 1639 : 			_Xlength_error("map/set<T> too long");

  00023	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN204@Insert:
$LN17@Insert:

; 1640 : 			}
; 1641 : 		++this->_Mysize;
; 1642 : 		_Newnode->_Parent = _Wherenode;

  00030	8b 5d 14	 mov	 ebx, DWORD PTR __Newnode$[ebp]
  00033	40		 inc	 eax
  00034	89 47 08	 mov	 DWORD PTR [edi+8], eax
  00037	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0003a	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 1643 : 
; 1644 : 		if (_Wherenode == this->_Myhead)

  0003d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00040	3b c1		 cmp	 eax, ecx
  00042	75 10		 jne	 SHORT $LN16@Insert

; 1645 : 			{	// first node in tree, just set head values
; 1646 : 			_Root() = _Newnode;

  00044	89 59 04	 mov	 DWORD PTR [ecx+4], ebx

; 1647 : 			_Lmost() = _Newnode;

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	89 18		 mov	 DWORD PTR [eax], ebx

; 1648 : 			_Rmost() = _Newnode;

  0004c	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004f	89 58 08	 mov	 DWORD PTR [eax+8], ebx
  00052	eb 21		 jmp	 SHORT $LN11@Insert
$LN16@Insert:

; 1649 : 			}
; 1650 : 		else if (_Addleft)

  00054	80 7d 0c 00	 cmp	 BYTE PTR __Addleft$[ebp], 0
  00058	74 0d		 je	 SHORT $LN14@Insert

; 1651 : 			{	// add to left of _Wherenode
; 1652 : 			this->_Left(_Wherenode) = _Newnode;

  0005a	89 18		 mov	 DWORD PTR [eax], ebx

; 1653 : 			if (_Wherenode == _Lmost())

  0005c	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0005f	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00061	75 12		 jne	 SHORT $LN11@Insert

; 1654 : 				_Lmost() = _Newnode;

  00063	89 19		 mov	 DWORD PTR [ecx], ebx

; 1655 : 			}
; 1656 : 		else

  00065	eb 0e		 jmp	 SHORT $LN11@Insert
$LN14@Insert:

; 1657 : 			{	// add to right of _Wherenode
; 1658 : 			this->_Right(_Wherenode) = _Newnode;

  00067	89 58 08	 mov	 DWORD PTR [eax+8], ebx

; 1659 : 			if (_Wherenode == _Rmost())

  0006a	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0006d	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00070	75 03		 jne	 SHORT $LN11@Insert

; 1660 : 				_Rmost() = _Newnode;

  00072	89 59 08	 mov	 DWORD PTR [ecx+8], ebx
$LN11@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  00075	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00078	8b f3		 mov	 esi, ebx
  0007a	e9 93 00 00 00	 jmp	 $LN202@Insert
$LL10@Insert:

; 1665 : 			if (this->_Parent(_Pnode)
; 1666 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

  0007f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00082	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00085	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00087	75 38		 jne	 SHORT $LN8@Insert

; 1667 : 				{	// fixup red-red in left subtree
; 1668 : 				_Wherenode =
; 1669 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

  00089	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1670 : 				if (this->_Color(_Wherenode) == this->_Red)

  0008c	80 79 24 00	 cmp	 BYTE PTR [ecx+36], 0

; 1671 : 					{	// parent has two red children, blacken both
; 1672 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;
; 1673 : 					this->_Color(_Wherenode) = this->_Black;
; 1674 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1675 : 						= this->_Red;
; 1676 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));
; 1677 : 					}
; 1678 : 				else

  00090	74 37		 je	 SHORT $LN203@Insert

; 1679 : 					{	// parent has red and black children
; 1680 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

  00092	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00095	75 0a		 jne	 SHORT $LN5@Insert

; 1681 : 						{	// rotate right child to left
; 1682 : 						_Pnode = this->_Parent(_Pnode);

  00097	8b f0		 mov	 esi, eax

; 1683 : 						_Lrotate(_Pnode);

  00099	56		 push	 esi
  0009a	8b cf		 mov	 ecx, edi
  0009c	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Lrotate
$LN5@Insert:

; 1684 : 						}
; 1685 : 					this->_Color(this->_Parent(_Pnode)) =
; 1686 : 						this->_Black;	// propagate red up

  000a1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a4	c6 40 24 01	 mov	 BYTE PTR [eax+36], 1

; 1687 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1688 : 						this->_Red;

  000a8	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000ab	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000ae	c6 40 24 00	 mov	 BYTE PTR [eax+36], 0

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

  000b2	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b5	ff 70 04	 push	 DWORD PTR [eax+4]
  000b8	8b cf		 mov	 ecx, edi
  000ba	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Rrotate

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  000bf	eb 4e		 jmp	 SHORT $LN2@Insert
$LN8@Insert:

; 1693 : 				{	// fixup red-red in right subtree
; 1694 : 				_Wherenode =
; 1695 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

  000c1	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1696 : 				if (this->_Color(_Wherenode) == this->_Red)

  000c3	80 79 24 00	 cmp	 BYTE PTR [ecx+36], 0
  000c7	75 1a		 jne	 SHORT $LN3@Insert
$LN203@Insert:

; 1697 : 					{	// parent has two red children, blacken both
; 1698 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  000c9	c6 40 24 01	 mov	 BYTE PTR [eax+36], 1

; 1699 : 					this->_Color(_Wherenode) = this->_Black;

  000cd	c6 41 24 01	 mov	 BYTE PTR [ecx+36], 1

; 1700 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1701 : 						this->_Red;

  000d1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000d4	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000d7	c6 40 24 00	 mov	 BYTE PTR [eax+36], 0

; 1702 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  000db	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000de	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 1703 : 					}
; 1704 : 				else

  000e1	eb 2c		 jmp	 SHORT $LN2@Insert
$LN3@Insert:

; 1705 : 					{	// parent has red and black children
; 1706 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

  000e3	3b 30		 cmp	 esi, DWORD PTR [eax]
  000e5	75 0a		 jne	 SHORT $LN1@Insert

; 1707 : 						{	// rotate left child to right
; 1708 : 						_Pnode = this->_Parent(_Pnode);

  000e7	8b f0		 mov	 esi, eax

; 1709 : 						_Rrotate(_Pnode);

  000e9	56		 push	 esi
  000ea	8b cf		 mov	 ecx, edi
  000ec	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Rrotate
$LN1@Insert:

; 1710 : 						}
; 1711 : 					this->_Color(this->_Parent(_Pnode)) =
; 1712 : 						this->_Black;	// propagate red up

  000f1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000f4	c6 40 24 01	 mov	 BYTE PTR [eax+36], 1

; 1713 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1714 : 						this->_Red;

  000f8	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000fb	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000fe	c6 40 24 00	 mov	 BYTE PTR [eax+36], 0

; 1715 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

  00102	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00105	ff 70 04	 push	 DWORD PTR [eax+4]
  00108	8b cf		 mov	 ecx, edi
  0010a	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Lrotate
$LN2@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  0010f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
$LN202@Insert:
  00112	80 78 24 00	 cmp	 BYTE PTR [eax+36], 0
  00116	0f 84 63 ff ff
	ff		 je	 $LL10@Insert

; 1716 : 					}
; 1717 : 				}
; 1718 : 
; 1719 : 		this->_Color(_Root()) = this->_Black;	// root is always black

  0011c	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0011f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00122	5f		 pop	 edi
  00123	c6 40 24 01	 mov	 BYTE PTR [eax+36], 1

; 1720 : 		return (iterator(_Newnode, this));

  00127	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0012a	5e		 pop	 esi
  0012b	89 18		 mov	 DWORD PTR [eax], ebx
  0012d	5b		 pop	 ebx

; 1721 : 		}

  0012e	5d		 pop	 ebp
  0012f	c2 10 00	 ret	 16			; 00000010H
$LN201@Insert:
?_Insert@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??$_Buynode@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Buynode<std::pair<unsigned long const ,GashaponPresentInfo> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??$_Buynode@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z$0
__unwindtable$??$_Buynode@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z$2
__ehfuncinfo$??$_Buynode@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??$_Buynode@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z
_TEXT	SEGMENT
__Wherenode$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Val$ = 8						; size = 4
??$_Buynode@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Buynode<std::pair<unsigned long const ,GashaponPresentInfo> >, COMDAT
; _this$ = ecx

; 586  : 		_Nodeptr _Buynode(_Valty&& _Val)

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Buynode@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

  0000e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Buynode

; 589  : 
; 590  : 		_TRY_BEGIN
; 591  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Wherenode)),
; 592  : 			_STD forward<_Valty>(_Val));

  00013	ff 75 08	 push	 DWORD PTR __Val$[ebp]
  00016	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  0001a	8b f8		 mov	 edi, eax
  0001c	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  0001f	50		 push	 eax
  00020	8d 4e 0d	 lea	 ecx, DWORD PTR [esi+13]
  00023	89 7d ec	 mov	 DWORD PTR __Wherenode$[ebp], edi
  00026	e8 00 00 00 00	 call	 ?construct@?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@std@@QAEXPAU?$pair@$$CBKUGashaponPresentInfo@@@2@$$QAU32@@Z ; std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >::construct

; 596  : 		_CATCH_END
; 597  : 
; 598  : 		return (_Wherenode);

  0002b	8b c7		 mov	 eax, edi

; 599  : 		}

  0002d	e8 00 00 00 00	 call	 __EH_epilog3
  00032	c2 04 00	 ret	 4
__catch$??$_Buynode@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z$0:

; 593  : 		_CATCH_ALL
; 594  : 		this->_Alnod.deallocate(_Wherenode, 1);

  00035	ff 75 ec	 push	 DWORD PTR __Wherenode$[ebp]
  00038	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003d	59		 pop	 ecx

; 595  : 		_RERAISE;

  0003e	6a 00		 push	 0
  00040	6a 00		 push	 0
  00042	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN23@Buynode@2:
$LN22@Buynode@2:
  00047	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Buynode@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Buynode@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Buynode<std::pair<unsigned long const ,GashaponPresentInfo> >
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::erase
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::erase, COMDAT
; _this$ = ecx

; 1195 : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))
; 1198 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1199 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1200 : 		++_Where;	// save successor iterator for return
; 1201 : 		_Orphan_ptr(*this, _Erasednode);
; 1202 : 
; 1203 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1204 : 		if (this->_Isnil(_Where._Mynode()))

  00005	8b 5d 0c	 mov	 ebx, DWORD PTR __Where$[ebp]
  00008	80 7b 25 00	 cmp	 BYTE PTR [ebx+37], 0
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00011	74 0b		 je	 SHORT $LN40@erase

; 1205 : 			_Xout_of_range("invalid map/set<T> iterator");

  00013	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN345@erase:
$LN40@erase:

; 1206 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1207 : 		++_Where;	// save successor iterator for return

  0001e	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00021	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator++

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1211 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1212 : 		_Nodeptr _Pnode = _Erasednode;
; 1213 : 
; 1214 : 		if (this->_Isnil(this->_Left(_Pnode)))

  00026	8b 13		 mov	 edx, DWORD PTR [ebx]
  00028	80 7a 25 00	 cmp	 BYTE PTR [edx+37], 0
  0002c	74 05		 je	 SHORT $LN39@erase

; 1215 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

  0002e	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 1216 : 		else if (this->_Isnil(this->_Right(_Pnode)))

  00031	eb 17		 jmp	 SHORT $LN337@erase
$LN39@erase:
  00033	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00036	80 78 25 00	 cmp	 BYTE PTR [eax+37], 0
  0003a	74 04		 je	 SHORT $LN37@erase

; 1217 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

  0003c	8b fa		 mov	 edi, edx

; 1218 : 		else

  0003e	eb 0a		 jmp	 SHORT $LN337@erase
$LN37@erase:

; 1219 : 			{	// two subtrees, must lift successor node to replace erased
; 1220 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

  00040	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 1221 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

  00043	8b 78 08	 mov	 edi, DWORD PTR [eax+8]

; 1222 : 			}
; 1223 : 
; 1224 : 		if (_Pnode == _Erasednode)

  00046	3b c3		 cmp	 eax, ebx
  00048	75 76		 jne	 SHORT $LN35@erase
$LN337@erase:

; 1225 : 			{	// at most one subtree, relink it
; 1226 : 			_Fixnodeparent = this->_Parent(_Erasednode);
; 1227 : 			if (!this->_Isnil(_Fixnode))

  0004a	80 7f 25 00	 cmp	 BYTE PTR [edi+37], 0
  0004e	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  00051	75 03		 jne	 SHORT $LN34@erase

; 1228 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

  00053	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN34@erase:

; 1229 : 
; 1230 : 			if (_Root() == _Erasednode)

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0005c	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0005f	75 05		 jne	 SHORT $LN33@erase

; 1231 : 				_Root() = _Fixnode;	// link down from root

  00061	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 1232 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

  00064	eb 0b		 jmp	 SHORT $LN30@erase
$LN33@erase:
  00066	39 1e		 cmp	 DWORD PTR [esi], ebx
  00068	75 04		 jne	 SHORT $LN31@erase

; 1233 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  0006a	89 3e		 mov	 DWORD PTR [esi], edi

; 1234 : 			else

  0006c	eb 03		 jmp	 SHORT $LN30@erase
$LN31@erase:

; 1235 : 				this->_Right(_Fixnodeparent) =
; 1236 : 					_Fixnode;	// link down to right

  0006e	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$LN30@erase:

; 1237 : 
; 1238 : 			if (_Lmost() == _Erasednode)

  00071	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00074	39 19		 cmp	 DWORD PTR [ecx], ebx
  00076	75 1c		 jne	 SHORT $LN29@erase

; 1239 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1240 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1241 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

  00078	80 7f 25 00	 cmp	 BYTE PTR [edi+37], 0
  0007c	74 04		 je	 SHORT $LN43@erase
  0007e	8b d6		 mov	 edx, esi
  00080	eb 10		 jmp	 SHORT $LN97@erase
$LN43@erase:
  00082	8b 07		 mov	 eax, DWORD PTR [edi]
  00084	8b d7		 mov	 edx, edi
  00086	eb 04		 jmp	 SHORT $LN339@erase
$LL98@erase:
  00088	8b d0		 mov	 edx, eax
  0008a	8b 02		 mov	 eax, DWORD PTR [edx]
$LN339@erase:
  0008c	80 78 25 00	 cmp	 BYTE PTR [eax+37], 0
  00090	74 f6		 je	 SHORT $LL98@erase
$LN97@erase:
  00092	89 11		 mov	 DWORD PTR [ecx], edx
$LN29@erase:

; 1242 : 
; 1243 : 			if (_Rmost() == _Erasednode)

  00094	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00097	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0009a	39 59 08	 cmp	 DWORD PTR [ecx+8], ebx
  0009d	75 7b		 jne	 SHORT $LN185@erase

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  0009f	80 7f 25 00	 cmp	 BYTE PTR [edi+37], 0
  000a3	74 04		 je	 SHORT $LN45@erase
  000a5	8b d6		 mov	 edx, esi
  000a7	eb 12		 jmp	 SHORT $LN117@erase
$LN45@erase:
  000a9	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000ac	8b d7		 mov	 edx, edi
  000ae	eb 05		 jmp	 SHORT $LN340@erase
$LL118@erase:
  000b0	8b d0		 mov	 edx, eax
  000b2	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
$LN340@erase:
  000b5	80 78 25 00	 cmp	 BYTE PTR [eax+37], 0
  000b9	74 f5		 je	 SHORT $LL118@erase
$LN117@erase:
  000bb	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 1247 : 			}
; 1248 : 		else

  000be	eb 5a		 jmp	 SHORT $LN185@erase
$LN35@erase:

; 1249 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1250 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1251 : 				_Pnode;	// link left up

  000c0	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1252 : 			this->_Left(_Pnode) =
; 1253 : 				this->_Left(_Erasednode);	// link successor down

  000c3	8b 13		 mov	 edx, DWORD PTR [ebx]
  000c5	89 10		 mov	 DWORD PTR [eax], edx

; 1254 : 
; 1255 : 			if (_Pnode == this->_Right(_Erasednode))

  000c7	3b 43 08	 cmp	 eax, DWORD PTR [ebx+8]
  000ca	75 04		 jne	 SHORT $LN26@erase

; 1256 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  000cc	8b f0		 mov	 esi, eax

; 1257 : 			else

  000ce	eb 1a		 jmp	 SHORT $LN25@erase
$LN26@erase:

; 1258 : 				{	// successor further down, link in place of erased
; 1259 : 				_Fixnodeparent =
; 1260 : 					this->_Parent(_Pnode);	// parent is successor's
; 1261 : 				if (!this->_Isnil(_Fixnode))

  000d0	80 7f 25 00	 cmp	 BYTE PTR [edi+37], 0
  000d4	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000d7	75 03		 jne	 SHORT $LN24@erase

; 1262 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  000d9	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN24@erase:

; 1263 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  000dc	89 3e		 mov	 DWORD PTR [esi], edi

; 1264 : 				this->_Right(_Pnode) =
; 1265 : 					this->_Right(_Erasednode);	// link next down

  000de	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  000e1	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1266 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1267 : 					_Pnode;	// right up

  000e4	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000e7	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN25@erase:

; 1268 : 				}
; 1269 : 
; 1270 : 			if (_Root() == _Erasednode)

  000ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000f0	39 59 04	 cmp	 DWORD PTR [ecx+4], ebx
  000f3	75 05		 jne	 SHORT $LN23@erase

; 1271 : 				_Root() = _Pnode;	// link down from root

  000f5	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1272 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

  000f8	eb 0e		 jmp	 SHORT $LN20@erase
$LN23@erase:
  000fa	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000fd	39 19		 cmp	 DWORD PTR [ecx], ebx
  000ff	75 04		 jne	 SHORT $LN21@erase

; 1273 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1274 : 					_Pnode;	// link down to left

  00101	89 01		 mov	 DWORD PTR [ecx], eax

; 1275 : 			else

  00103	eb 03		 jmp	 SHORT $LN20@erase
$LN21@erase:

; 1276 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1277 : 					_Pnode;	// link down to right

  00105	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN20@erase:

; 1278 : 
; 1279 : 			this->_Parent(_Pnode) =
; 1280 : 				this->_Parent(_Erasednode);	// link successor up

  00108	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0010b	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1281 : 			_STD swap(this->_Color(_Pnode),
; 1282 : 				this->_Color(_Erasednode));	// recolor it

  0010e	8a 53 24	 mov	 dl, BYTE PTR [ebx+36]
  00111	8a 48 24	 mov	 cl, BYTE PTR [eax+36]
  00114	88 50 24	 mov	 BYTE PTR [eax+36], dl
  00117	88 4b 24	 mov	 BYTE PTR [ebx+36], cl
$LN185@erase:

; 1283 : 			}
; 1284 : 
; 1285 : 		if (this->_Color(_Erasednode) == this->_Black)

  0011a	80 7b 24 01	 cmp	 BYTE PTR [ebx+36], 1
  0011e	0f 85 03 01 00
	00		 jne	 $LN19@erase

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00124	e9 b2 00 00 00	 jmp	 $LN342@erase
$LL18@erase:
  00129	80 7f 24 01	 cmp	 BYTE PTR [edi+36], 1
  0012d	0f 85 f0 00 00
	00		 jne	 $LN16@erase

; 1290 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

  00133	8b 06		 mov	 eax, DWORD PTR [esi]
  00135	3b f8		 cmp	 edi, eax
  00137	75 6c		 jne	 SHORT $LN15@erase

; 1291 : 					{	// fixup left subtree
; 1292 : 					_Pnode = this->_Right(_Fixnodeparent);

  00139	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 1293 : 					if (this->_Color(_Pnode) == this->_Red)

  0013c	80 78 24 00	 cmp	 BYTE PTR [eax+36], 0
  00140	75 11		 jne	 SHORT $LN14@erase

; 1294 : 						{	// rotate red up from right subtree
; 1295 : 						this->_Color(_Pnode) = this->_Black;

  00142	c6 40 24 01	 mov	 BYTE PTR [eax+36], 1

; 1296 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1297 : 						_Lrotate(_Fixnodeparent);

  00146	56		 push	 esi
  00147	c6 46 24 00	 mov	 BYTE PTR [esi+36], 0
  0014b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Lrotate

; 1298 : 						_Pnode = this->_Right(_Fixnodeparent);

  00150	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN14@erase:

; 1299 : 						}
; 1300 : 
; 1301 : 					if (this->_Isnil(_Pnode))

  00153	80 78 25 00	 cmp	 BYTE PTR [eax+37], 0

; 1302 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1303 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

  00157	75 7d		 jne	 SHORT $LN343@erase

; 1304 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

  00159	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015b	80 79 24 01	 cmp	 BYTE PTR [ecx+36], 1
  0015f	75 09		 jne	 SHORT $LN11@erase
  00161	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00164	80 79 24 01	 cmp	 BYTE PTR [ecx+36], 1
  00168	74 68		 je	 SHORT $LN344@erase
$LN11@erase:

; 1305 : 						{	// redden right subtree with black children
; 1306 : 						this->_Color(_Pnode) = this->_Red;
; 1307 : 						_Fixnode = _Fixnodeparent;
; 1308 : 						}
; 1309 : 					else
; 1310 : 						{	// must rearrange right subtree
; 1311 : 						if (this->_Color(this->_Right(_Pnode))
; 1312 : 							== this->_Black)

  0016a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0016d	80 79 24 01	 cmp	 BYTE PTR [ecx+36], 1
  00171	75 16		 jne	 SHORT $LN9@erase

; 1313 : 							{	// rotate red up from left sub-subtree
; 1314 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

  00173	8b 08		 mov	 ecx, DWORD PTR [eax]
  00175	c6 41 24 01	 mov	 BYTE PTR [ecx+36], 1

; 1315 : 							this->_Color(_Pnode) = this->_Red;
; 1316 : 							_Rrotate(_Pnode);

  00179	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017c	50		 push	 eax
  0017d	c6 40 24 00	 mov	 BYTE PTR [eax+36], 0
  00181	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Rrotate

; 1317 : 							_Pnode = this->_Right(_Fixnodeparent);

  00186	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN9@erase:

; 1318 : 							}
; 1319 : 
; 1320 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  00189	8a 4e 24	 mov	 cl, BYTE PTR [esi+36]
  0018c	88 48 24	 mov	 BYTE PTR [eax+36], cl

; 1321 : 						this->_Color(_Fixnodeparent) = this->_Black;
; 1322 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;
; 1323 : 						_Lrotate(_Fixnodeparent);

  0018f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00192	c6 46 24 01	 mov	 BYTE PTR [esi+36], 1
  00196	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00199	56		 push	 esi
  0019a	c6 40 24 01	 mov	 BYTE PTR [eax+36], 1
  0019e	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Lrotate

; 1324 : 						break;	// tree now recolored/rebalanced

  001a3	eb 7e		 jmp	 SHORT $LN16@erase
$LN15@erase:

; 1325 : 						}
; 1326 : 					}
; 1327 : 				else
; 1328 : 					{	// fixup right subtree
; 1329 : 					_Pnode = this->_Left(_Fixnodeparent);
; 1330 : 					if (this->_Color(_Pnode) == this->_Red)

  001a5	80 78 24 00	 cmp	 BYTE PTR [eax+36], 0
  001a9	75 10		 jne	 SHORT $LN7@erase

; 1331 : 						{	// rotate red up from left subtree
; 1332 : 						this->_Color(_Pnode) = this->_Black;

  001ab	c6 40 24 01	 mov	 BYTE PTR [eax+36], 1

; 1333 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1334 : 						_Rrotate(_Fixnodeparent);

  001af	56		 push	 esi
  001b0	c6 46 24 00	 mov	 BYTE PTR [esi+36], 0
  001b4	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Rrotate

; 1335 : 						_Pnode = this->_Left(_Fixnodeparent);

  001b9	8b 06		 mov	 eax, DWORD PTR [esi]
$LN7@erase:

; 1336 : 						}
; 1337 : 					if (this->_Isnil(_Pnode))

  001bb	80 78 25 00	 cmp	 BYTE PTR [eax+37], 0

; 1338 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1339 : 					else if (this->_Color(this->_Right(_Pnode)) ==

  001bf	75 15		 jne	 SHORT $LN343@erase

; 1340 : 						this->_Black
; 1341 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

  001c1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001c4	80 79 24 01	 cmp	 BYTE PTR [ecx+36], 1
  001c8	75 22		 jne	 SHORT $LN4@erase
  001ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  001cc	80 79 24 01	 cmp	 BYTE PTR [ecx+36], 1
  001d0	75 1a		 jne	 SHORT $LN4@erase
$LN344@erase:

; 1342 : 						{	// redden left subtree with black children
; 1343 : 						this->_Color(_Pnode) = this->_Red;

  001d2	c6 40 24 00	 mov	 BYTE PTR [eax+36], 0
$LN343@erase:

; 1344 : 						_Fixnode = _Fixnodeparent;

  001d6	8b fe		 mov	 edi, esi
  001d8	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
$LN342@erase:

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  001db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001de	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001e1	3b 78 04	 cmp	 edi, DWORD PTR [eax+4]
  001e4	0f 85 3f ff ff
	ff		 jne	 $LL18@erase
  001ea	eb 37		 jmp	 SHORT $LN16@erase
$LN4@erase:

; 1345 : 						}
; 1346 : 					else
; 1347 : 						{	// must rearrange left subtree
; 1348 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

  001ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ee	80 79 24 01	 cmp	 BYTE PTR [ecx+36], 1
  001f2	75 16		 jne	 SHORT $LN2@erase

; 1349 : 							{	// rotate red up from right sub-subtree
; 1350 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

  001f4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001f7	c6 41 24 01	 mov	 BYTE PTR [ecx+36], 1

; 1351 : 							this->_Color(_Pnode) = this->_Red;
; 1352 : 							_Lrotate(_Pnode);

  001fb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001fe	50		 push	 eax
  001ff	c6 40 24 00	 mov	 BYTE PTR [eax+36], 0
  00203	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Lrotate

; 1353 : 							_Pnode = this->_Left(_Fixnodeparent);

  00208	8b 06		 mov	 eax, DWORD PTR [esi]
$LN2@erase:

; 1354 : 							}
; 1355 : 
; 1356 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  0020a	8a 4e 24	 mov	 cl, BYTE PTR [esi+36]
  0020d	88 48 24	 mov	 BYTE PTR [eax+36], cl

; 1357 : 						this->_Color(_Fixnodeparent) = this->_Black;
; 1358 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;
; 1359 : 						_Rrotate(_Fixnodeparent);

  00210	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00213	c6 46 24 01	 mov	 BYTE PTR [esi+36], 1
  00217	8b 00		 mov	 eax, DWORD PTR [eax]
  00219	56		 push	 esi
  0021a	c6 40 24 01	 mov	 BYTE PTR [eax+36], 1
  0021e	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Rrotate
$LN16@erase:

; 1360 : 						break;	// tree now recolored/rebalanced
; 1361 : 						}
; 1362 : 					}
; 1363 : 
; 1364 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

  00223	c6 47 24 01	 mov	 BYTE PTR [edi+36], 1
$LN19@erase:

; 1365 : 			}
; 1366 : 
; 1367 : 		_Dest_val(this->_Alval,
; 1368 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node

  00227	8d 4b 14	 lea	 ecx, DWORD PTR [ebx+20]
  0022a	e8 00 00 00 00	 call	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy

; 1369 : 
; 1370 : 		this->_Alnod.deallocate(_Erasednode, 1);

  0022f	53		 push	 ebx
  00230	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00235	59		 pop	 ecx

; 1371 : 
; 1372 : 		if (0 < this->_Mysize)

  00236	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00239	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0023c	5f		 pop	 edi
  0023d	5e		 pop	 esi
  0023e	5b		 pop	 ebx
  0023f	85 c0		 test	 eax, eax
  00241	74 04		 je	 SHORT $LN1@erase

; 1373 : 			--this->_Mysize;

  00243	48		 dec	 eax
  00244	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@erase:

; 1374 : 
; 1375 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

  00247	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0024a	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  0024d	89 08		 mov	 DWORD PTR [eax], ecx

; 1376 : 		}

  0024f	c9		 leave
  00250	c2 08 00	 ret	 8
$LN338@erase:
?erase@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Erase
; Function compile flags: /Ogsp
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1610 : 		{	// free entire subtree, recursively

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1611 : 		for (_Nodeptr _Pnode = _Rootnode;

  00006	8b 7d 08	 mov	 edi, DWORD PTR __Rootnode$[ebp]

; 1612 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

  00009	80 7f 25 00	 cmp	 BYTE PTR [edi+37], 0
  0000d	8b d9		 mov	 ebx, ecx
  0000f	8b f7		 mov	 esi, edi
  00011	75 23		 jne	 SHORT $LN1@Erase
$LL3@Erase:

; 1613 : 			{	// free subtrees, then node
; 1614 : 			_Erase(this->_Right(_Pnode));

  00013	ff 76 08	 push	 DWORD PTR [esi+8]
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Erase

; 1615 : 			_Pnode = this->_Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 1616 : 			_Dest_val(this->_Alval,
; 1617 : 				_STD addressof(this->_Myval(_Rootnode)));

  0001f	8d 4f 14	 lea	 ecx, DWORD PTR [edi+20]
  00022	e8 00 00 00 00	 call	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy

; 1618 : 
; 1619 : 			this->_Alnod.deallocate(_Rootnode, 1);

  00027	57		 push	 edi
  00028	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002d	80 7e 25 00	 cmp	 BYTE PTR [esi+37], 0
  00031	59		 pop	 ecx
  00032	8b fe		 mov	 edi, esi
  00034	74 dd		 je	 SHORT $LL3@Erase
$LN1@Erase:
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx

; 1620 : 			}
; 1621 : 		}

  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?_Linsert@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Linsert
; Function compile flags: /Ogsp
;	COMDAT ?_Linsert@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Node$ = 12						; size = 4
$T512808 = 16						; size = 4
__Where$507403 = 16					; size = 4
__Leftish$ = 16						; size = 1
?_Linsert@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Linsert, COMDAT
; _this$ = ecx

; 944  : 		{	// try to insert node at _Node, on left if _Leftish

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 945  : 		const value_type& _Val = this->_Myval(_Node);
; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();
; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  00004	8b 55 0c	 mov	 edx, DWORD PTR __Node$[ebp]
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0000e	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00011	80 78 25 00	 cmp	 BYTE PTR [eax+37], 0
  00015	8b d9		 mov	 ebx, ecx
  00017	b1 01		 mov	 cl, 1
  00019	57		 push	 edi
  0001a	88 4d fc	 mov	 BYTE PTR __Addleft$[ebp], cl
  0001d	75 2e		 jne	 SHORT $LN11@Linsert
  0001f	8b 7a 0c	 mov	 edi, DWORD PTR [edx+12]
$LL12@Linsert:

; 951  : 			{	// look for leaf to insert before (_Addleft) or after
; 952  : 			_Wherenode = _Trynode;
; 953  : 			if (_Leftish)

  00022	80 7d 10 00	 cmp	 BYTE PTR __Leftish$[ebp], 0
  00026	8b d8		 mov	 ebx, eax
  00028	74 09		 je	 SHORT $LN10@Linsert

; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,

  0002a	39 78 0c	 cmp	 DWORD PTR [eax+12], edi
  0002d	1a c9		 sbb	 cl, cl
  0002f	fe c1		 inc	 cl

; 955  : 					this->_Key(_Trynode),
; 956  : 					this->_Kfn(_Val));	// favor left end
; 957  : 			else

  00031	eb 06		 jmp	 SHORT $LN168@Linsert
$LN10@Linsert:

; 958  : 				_Addleft = _DEBUG_LT_PRED(this->comp,

  00033	3b 78 0c	 cmp	 edi, DWORD PTR [eax+12]
  00036	0f 92 c1	 setb	 cl
$LN168@Linsert:
  00039	88 4d fc	 mov	 BYTE PTR __Addleft$[ebp], cl

; 959  : 					this->_Kfn(_Val),
; 960  : 					this->_Key(_Trynode));	// favor right end
; 961  : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 962  : 				: this->_Right(_Trynode);

  0003c	84 c9		 test	 cl, cl
  0003e	74 04		 je	 SHORT $LN15@Linsert
  00040	8b 00		 mov	 eax, DWORD PTR [eax]
  00042	eb 03		 jmp	 SHORT $LN16@Linsert
$LN15@Linsert:
  00044	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$LN16@Linsert:

; 945  : 		const value_type& _Val = this->_Myval(_Node);
; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();
; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  00047	80 78 25 00	 cmp	 BYTE PTR [eax+37], 0
  0004b	74 d5		 je	 SHORT $LL12@Linsert
$LN11@Linsert:

; 963  : 			}
; 964  : 
; 965  : 		if (this->_Multi)
; 966  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));
; 967  : 		else
; 968  : 			{	// insert only if unique
; 969  : 			iterator _Where = iterator(_Wherenode, this);

  0004d	8b fb		 mov	 edi, ebx
  0004f	89 7d 10	 mov	 DWORD PTR __Where$507403[ebp], edi

; 970  : 			if (!_Addleft)

  00052	84 c9		 test	 cl, cl
  00054	74 31		 je	 SHORT $LN99@Linsert

; 971  : 				;	// need to test if insert after is okay
; 972  : 			else if (_Where == begin())

  00056	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00059	3b 18		 cmp	 ebx, DWORD PTR [eax]
  0005b	75 1c		 jne	 SHORT $LN4@Linsert

; 973  : 				return (_Pairib(_Insert(true, _Wherenode, _Node), true));

  0005d	52		 push	 edx
  0005e	53		 push	 ebx
  0005f	6a 01		 push	 1
$LN169@Linsert:
  00061	8d 45 10	 lea	 eax, DWORD PTR $T512808[ebp]
  00064	50		 push	 eax
  00065	8b ce		 mov	 ecx, esi
  00067	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Insert
  0006c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00071	89 08		 mov	 DWORD PTR [eax], ecx
  00073	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  00077	eb 37		 jmp	 SHORT $LN1@Linsert
$LN4@Linsert:

; 974  : 			else
; 975  : 				--_Where;	// need to test if insert before is okay

  00079	8d 4d 10	 lea	 ecx, DWORD PTR __Where$507403[ebp]
  0007c	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator--
  00081	8b 7d 10	 mov	 edi, DWORD PTR __Where$507403[ebp]
  00084	8b 55 0c	 mov	 edx, DWORD PTR __Node$[ebp]
$LN99@Linsert:

; 976  : 
; 977  : 			if (_DEBUG_LT_PRED(this->comp,

  00087	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  0008a	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  0008d	73 07		 jae	 SHORT $LN2@Linsert

; 978  : 				this->_Key(_Where._Mynode()),
; 979  : 				this->_Kfn(_Val)))
; 980  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

  0008f	52		 push	 edx
  00090	53		 push	 ebx
  00091	ff 75 fc	 push	 DWORD PTR __Addleft$[ebp]
  00094	eb cb		 jmp	 SHORT $LN169@Linsert
$LN2@Linsert:

; 981  : 			else
; 982  : 				{	// duplicate, don't insert
; 983  : 				_Dest_val(this->_Alval,
; 984  : 					_STD addressof(this->_Myval(_Node)));

  00096	8d 4a 14	 lea	 ecx, DWORD PTR [edx+20]
  00099	e8 00 00 00 00	 call	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy

; 985  : 
; 986  : 				this->_Alnod.deallocate(_Node, 1);

  0009e	ff 75 0c	 push	 DWORD PTR __Node$[ebp]
  000a1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

  000a6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a9	59		 pop	 ecx
  000aa	89 38		 mov	 DWORD PTR [eax], edi
  000ac	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
$LN1@Linsert:
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  000b3	c9		 leave
  000b4	c2 0c 00	 ret	 12			; 0000000cH
?_Linsert@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Linsert
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::clear, COMDAT
; _this$ = ecx

; 1410 : 		{	// erase all

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 1411 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1412 : 		this->_Orphan_ptr(*this, 0);
; 1413 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1414 : 
; 1415 : 		_Erase(_Root());

  00004	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00007	ff 70 04	 push	 DWORD PTR [eax+4]
  0000a	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Erase

; 1416 : 		_Root() = this->_Myhead;

  0000f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1417 : 		_Lmost() = this->_Myhead;

  00015	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax

; 1418 : 		_Rmost() = this->_Myhead;

  0001a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0001d	89 76 08	 mov	 DWORD PTR [esi+8], esi

; 1419 : 		this->_Mysize = 0;

  00020	83 67 08 00	 and	 DWORD PTR [edi+8], 0
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi

; 1420 : 		}

  00026	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::clear
_TEXT	ENDS
PUBLIC	??$insert@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::insert<std::pair<unsigned long const ,GashaponPresentInfo> >
; Function compile flags: /Ogsp
;	COMDAT ??$insert@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::insert<std::pair<unsigned long const ,GashaponPresentInfo> >, COMDAT
; _this$ = ecx

; 753  : 		_Pairib insert(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 754  : 		{	// try to insert node with value _Val, favoring right side
; 755  : 		return (_Linsert(this->_Buynode(_STD forward<_Valty>(_Val)),
; 756  : 			false));

  00004	6a 00		 push	 0
  00006	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Buynode<std::pair<unsigned long const ,GashaponPresentInfo> >
  00010	50		 push	 eax
  00011	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  00014	8b ce		 mov	 ecx, esi
  00016	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Linsert
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	5e		 pop	 esi

; 757  : 		}

  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
??$insert@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::insert<std::pair<unsigned long const ,GashaponPresentInfo> >
_TEXT	ENDS
PUBLIC	??_C@_0M@PINBEDCN@EtcItemType?$AA@		; `string'
PUBLIC	_this$GSCopy$
PUBLIC	?Initialize@ioGashaponMgr@@UAEXXZ		; ioGashaponMgr::Initialize
EXTRN	__imp__wsprintfA:PROC
EXTRN	__EH_epilog3_GS:PROC
EXTRN	__EH_prolog3_GS:PROC
;	COMDAT ??_C@_0M@PINBEDCN@EtcItemType?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iogashaponmgr.cpp
CONST	SEGMENT
??_C@_0M@PINBEDCN@EtcItemType?$AA@ DB 'EtcItemType', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Initialize@ioGashaponMgr@@UAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Initialize@ioGashaponMgr@@UAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Initialize@ioGashaponMgr@@UAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?Initialize@ioGashaponMgr@@UAEXXZ$2
__ehfuncinfo$?Initialize@ioGashaponMgr@@UAEXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Initialize@ioGashaponMgr@@UAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?Initialize@ioGashaponMgr@@UAEXXZ
_TEXT	SEGMENT
$T513273 = -1280					; size = 24
_kInfo$505285 = -1256					; size = 20
tv3302 = -1236						; size = 4
_iMaxItem$ = -1232					; size = 4
_this$GSCopy$ = -1228					; size = 4
_kLoader$ = -1224					; size = 912
_szTtitle$505131 = -312					; size = 260
___encStr$505135 = -52					; size = 18
__k$513654 = -28					; size = 8
__t$513529 = -28					; size = 7
$T513274 = -24						; size = 8
__$EHRec$ = -12						; size = 12
?Initialize@ioGashaponMgr@@UAEXXZ PROC			; ioGashaponMgr::Initialize, COMDAT
; _this$ = ecx

; 65   : {

  00000	68 f4 04 00 00	 push	 1268			; 000004f4H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?Initialize@ioGashaponMgr@@UAEXXZ
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS

; 66   : #ifdef LOCAL_DBG
; 67   : 	return;
; 68   : #endif
; 69   : 	
; 70   : 	ioINILoader_e kLoader( "config/sp2_gashapon_present.ini" );

  0000f	6a 07		 push	 7
  00011	89 8d 34 fb ff
	ff		 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  00017	c7 85 88 fe ff
	ff 8e 83 85 8c	 mov	 DWORD PTR _kLoader$[ebp+848], -1937407090 ; 8c85838eH
  00021	c7 85 8c fe ff
	ff 84 8b c4 99	 mov	 DWORD PTR _kLoader$[ebp+852], -1715172476 ; 99c48b84H
  0002b	c7 85 90 fe ff
	ff 9d de b4 8d	 mov	 DWORD PTR _kLoader$[ebp+856], -1917526371 ; 8db4de9dH
  00035	c7 85 94 fe ff
	ff 8c 9f 83 8b	 mov	 DWORD PTR _kLoader$[ebp+860], -1954308212 ; 8b839f8cH
  0003f	c7 85 98 fe ff
	ff 9d 83 85 b5	 mov	 DWORD PTR _kLoader$[ebp+864], -1249541219 ; b585839dH
  00049	c7 85 9c fe ff
	ff 9d 9e 8e 99	 mov	 DWORD PTR _kLoader$[ebp+868], -1718706531 ; 998e9e9dH
  00053	c7 85 a0 fe ff
	ff 88 82 9f c4	 mov	 DWORD PTR _kLoader$[ebp+872], -996179320 ; c49f8288H
  0005d	8d 85 88 fe ff
	ff		 lea	 eax, DWORD PTR _kLoader$[ebp+848]
  00063	33 db		 xor	 ebx, ebx
  00065	c7 85 a4 fe ff
	ff 84 82 82 00	 mov	 DWORD PTR _kLoader$[ebp+876], 8553092 ; 00828284H
  0006f	59		 pop	 ecx
  00070	be ed ec eb ea	 mov	 esi, -353637139		; eaebecedH
$LL215@Initialize:
  00075	31 30		 xor	 DWORD PTR [eax], esi
  00077	83 c0 04	 add	 eax, 4
  0007a	49		 dec	 ecx
  0007b	75 f8		 jne	 SHORT $LL215@Initialize
  0007d	6a 1c		 push	 28			; 0000001cH
  0007f	5f		 pop	 edi
$LL212@Initialize:
  00080	8b c7		 mov	 eax, edi
  00082	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  00087	79 05		 jns	 SHORT $LN512@Initialize
  00089	48		 dec	 eax
  0008a	83 c8 fc	 or	 eax, -4			; fffffffcH
  0008d	40		 inc	 eax
$LN512@Initialize:
  0008e	b1 ed		 mov	 cl, -19			; ffffffedH
  00090	2a c8		 sub	 cl, al
  00092	30 8c 3d 88 fe
	ff ff		 xor	 BYTE PTR _kLoader$[ebp+edi+848], cl
  00099	47		 inc	 edi
  0009a	83 ff 1f	 cmp	 edi, 31			; 0000001fH
  0009d	7c e1		 jl	 SHORT $LL212@Initialize
  0009f	6a 01		 push	 1
  000a1	8d 85 88 fe ff
	ff		 lea	 eax, DWORD PTR _kLoader$[ebp+848]
  000a7	50		 push	 eax
  000a8	8d 8d 38 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  000ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioINILoader@@QAE@PBD_N@Z

; 71   : 	kLoader.SetTitle_e( "Common" );

  000b4	6a 04		 push	 4
  000b6	c7 45 e4 ae 83
	86 87		 mov	 DWORD PTR __t$513529[ebp], -2021227602 ; 878683aeH
  000bd	31 75 e4	 xor	 DWORD PTR __t$513529[ebp], esi
  000c0	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  000c3	66 c7 45 e8 82
	82		 mov	 WORD PTR __t$513529[ebp+4], 33410 ; 00008282H
  000c9	88 5d ea	 mov	 BYTE PTR __t$513529[ebp+6], bl
  000cc	5f		 pop	 edi
$LL318@Initialize:
  000cd	8b c7		 mov	 eax, edi
  000cf	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  000d4	79 05		 jns	 SHORT $LN513@Initialize
  000d6	48		 dec	 eax
  000d7	83 c8 fc	 or	 eax, -4			; fffffffcH
  000da	40		 inc	 eax
$LN513@Initialize:
  000db	b1 ed		 mov	 cl, -19			; ffffffedH
  000dd	2a c8		 sub	 cl, al
  000df	30 4c 3d e4	 xor	 BYTE PTR __t$513529[ebp+edi], cl
  000e3	47		 inc	 edi
  000e4	83 ff 06	 cmp	 edi, 6
  000e7	7c e4		 jl	 SHORT $LL318@Initialize
  000e9	8d 45 e4	 lea	 eax, DWORD PTR __t$513529[ebp]
  000ec	50		 push	 eax
  000ed	8d 8d 38 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  000f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 72   : 	int iMaxItem = kLoader.LoadInt_e( "MaxInfo", 0 );

  000f9	6a 04		 push	 4
  000fb	c7 45 e4 a0 8d
	93 a3		 mov	 DWORD PTR __k$513654[ebp], -1550611040 ; a3938da0H
  00102	31 75 e4	 xor	 DWORD PTR __k$513654[ebp], esi
  00105	c7 45 e8 83 8a
	84 00		 mov	 DWORD PTR __k$513654[ebp+4], 8686211 ; 00848a83H
  0010c	5f		 pop	 edi
$LL424@Initialize:
  0010d	8b c7		 mov	 eax, edi
  0010f	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  00114	79 05		 jns	 SHORT $LN514@Initialize
  00116	48		 dec	 eax
  00117	83 c8 fc	 or	 eax, -4			; fffffffcH
  0011a	40		 inc	 eax
$LN514@Initialize:
  0011b	b1 ed		 mov	 cl, -19			; ffffffedH
  0011d	2a c8		 sub	 cl, al
  0011f	30 4c 3d e4	 xor	 BYTE PTR __k$513654[ebp+edi], cl
  00123	47		 inc	 edi
  00124	83 ff 07	 cmp	 edi, 7
  00127	7c e4		 jl	 SHORT $LL424@Initialize
  00129	53		 push	 ebx
  0012a	8d 45 e4	 lea	 eax, DWORD PTR __k$513654[ebp]
  0012d	50		 push	 eax
  0012e	8d 8d 38 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00134	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 73   : 
; 74   : 	for( int i = 0; i < iMaxItem; ++i )

  0013a	33 c9		 xor	 ecx, ecx
  0013c	89 85 30 fb ff
	ff		 mov	 DWORD PTR _iMaxItem$[ebp], eax
  00142	3b c3		 cmp	 eax, ebx
  00144	0f 8e 32 01 00
	00		 jle	 $LN101@Initialize
$LN103@Initialize:

; 72   : 	int iMaxItem = kLoader.LoadInt_e( "MaxInfo", 0 );

  0014a	6a 04		 push	 4

; 75   : 	{
; 76   : 		char szTtitle[MAX_PATH];
; 77   : 		wsprintf_e( szTtitle, "GashaponPresent%d", i+1 );

  0014c	c7 45 cc aa 8d
	98 82		 mov	 DWORD PTR ___encStr$505135[ebp], -2103931478 ; 82988daaH
  00153	c7 45 d0 8c 9c
	84 84		 mov	 DWORD PTR ___encStr$505135[ebp+4], -2071683956 ; 84849c8cH
  0015a	c7 45 d4 bd 9e
	8e 99		 mov	 DWORD PTR ___encStr$505135[ebp+8], -1718706499 ; 998e9ebdH
  00161	c7 45 d8 88 82
	9f cf		 mov	 DWORD PTR ___encStr$505135[ebp+12], -811629944 ; cf9f8288H
  00168	8d 45 cc	 lea	 eax, DWORD PTR ___encStr$505135[ebp]
  0016b	66 c7 45 dc 89
	00		 mov	 WORD PTR ___encStr$505135[ebp+16], 137 ; 00000089H
  00171	5a		 pop	 edx
$LL435@Initialize:
  00172	31 30		 xor	 DWORD PTR [eax], esi
  00174	83 c0 04	 add	 eax, 4
  00177	4a		 dec	 edx
  00178	75 f8		 jne	 SHORT $LL435@Initialize
  0017a	80 75 dc ed	 xor	 BYTE PTR ___encStr$505135[ebp+16], -19 ; ffffffedH
  0017e	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00181	50		 push	 eax
  00182	89 85 2c fb ff
	ff		 mov	 DWORD PTR tv3302[ebp], eax
  00188	8d 45 cc	 lea	 eax, DWORD PTR ___encStr$505135[ebp]
  0018b	50		 push	 eax
  0018c	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _szTtitle$505131[ebp]
  00192	50		 push	 eax
  00193	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  00199	83 c4 0c	 add	 esp, 12			; 0000000cH

; 78   : 		kLoader.SetTitle( szTtitle );

  0019c	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _szTtitle$505131[ebp]
  001a2	50		 push	 eax
  001a3	8d 8d 38 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  001a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 79   : 
; 80   : 		GashaponPresentInfo kInfo;

  001af	89 9d 1c fb ff
	ff		 mov	 DWORD PTR _kInfo$505285[ebp+4], ebx
  001b5	89 9d 20 fb ff
	ff		 mov	 DWORD PTR _kInfo$505285[ebp+8], ebx
  001bb	89 9d 24 fb ff
	ff		 mov	 DWORD PTR _kInfo$505285[ebp+12], ebx
  001c1	89 9d 18 fb ff
	ff		 mov	 DWORD PTR _kInfo$505285[ebp], ebx

; 81   : 		int iEtcItemType = kLoader.LoadInt( "EtcItemType", 0 );

  001c7	53		 push	 ebx
  001c8	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PINBEDCN@EtcItemType?$AA@
  001cd	8d 8d 38 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  001d3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  001d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z
  001dd	8b f8		 mov	 edi, eax

; 82   : 		if( 0 < iEtcItemType )

  001df	3b fb		 cmp	 edi, ebx
  001e1	7e 79		 jle	 SHORT $LN478@Initialize

; 83   : 		{
; 84   : 			kInfo.m_iEtcItemType = iEtcItemType;
; 85   : 			LoadGashaponList( kLoader, kInfo );

  001e3	8b 8d 34 fb ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  001e9	8d 85 18 fb ff
	ff		 lea	 eax, DWORD PTR _kInfo$505285[ebp]
  001ef	50		 push	 eax
  001f0	8d 85 38 fb ff
	ff		 lea	 eax, DWORD PTR _kLoader$[ebp]
  001f6	50		 push	 eax
  001f7	89 bd 18 fb ff
	ff		 mov	 DWORD PTR _kInfo$505285[ebp], edi
  001fd	e8 00 00 00 00	 call	 ?LoadGashaponList@ioGashaponMgr@@QAEXAAVioINILoader@@AAUGashaponPresentInfo@@@Z ; ioGashaponMgr::LoadGashaponList

; 86   : 
; 87   : 			m_GashaponPresentInfoMap.insert( GashaponPresentInfoMap::value_type( iEtcItemType, kInfo ) );

  00202	8b 85 18 fb ff
	ff		 mov	 eax, DWORD PTR _kInfo$505285[ebp]
  00208	89 85 04 fb ff
	ff		 mov	 DWORD PTR $T513273[ebp+4], eax
  0020e	8d 85 1c fb ff
	ff		 lea	 eax, DWORD PTR _kInfo$505285[ebp+4]
  00214	50		 push	 eax
  00215	8d 8d 08 fb ff
	ff		 lea	 ecx, DWORD PTR $T513273[ebp+8]
  0021b	89 bd 00 fb ff
	ff		 mov	 DWORD PTR $T513273[ebp], edi
  00221	e8 00 00 00 00	 call	 ??0?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@QAE@ABV01@@Z ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::vector<GashaponPresent,std::allocator<GashaponPresent> >
  00226	8b bd 34 fb ff
	ff		 mov	 edi, DWORD PTR _this$GSCopy$[ebp]
  0022c	53		 push	 ebx
  0022d	8d 85 00 fb ff
	ff		 lea	 eax, DWORD PTR $T513273[ebp]
  00233	50		 push	 eax
  00234	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00237	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0023b	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBKUGashaponPresentInfo@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Buynode<std::pair<unsigned long const ,GashaponPresentInfo> >
  00240	50		 push	 eax
  00241	8d 45 e8	 lea	 eax, DWORD PTR $T513274[ebp]
  00244	50		 push	 eax
  00245	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00248	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Linsert
  0024d	8d 8d 08 fb ff
	ff		 lea	 ecx, DWORD PTR $T513273[ebp+8]
  00253	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00257	e8 00 00 00 00	 call	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy
$LN478@Initialize:

; 88   : 		}
; 89   : 	}

  0025c	8d 8d 1c fb ff
	ff		 lea	 ecx, DWORD PTR _kInfo$505285[ebp+4]
  00262	88 5d fc	 mov	 BYTE PTR __$EHRec$[ebp+8], bl
  00265	e8 00 00 00 00	 call	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy
  0026a	8b 8d 2c fb ff
	ff		 mov	 ecx, DWORD PTR tv3302[ebp]
  00270	3b 8d 30 fb ff
	ff		 cmp	 ecx, DWORD PTR _iMaxItem$[ebp]
  00276	0f 8c ce fe ff
	ff		 jl	 $LN103@Initialize
$LN101@Initialize:

; 90   : }

  0027c	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00280	8d 8d 38 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00286	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioINILoader@@QAE@XZ
  0028c	e8 00 00 00 00	 call	 __EH_epilog3_GS
  00291	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Initialize@ioGashaponMgr@@UAEXXZ$0:
  00000	8d 8d 38 fb ff
	ff		 lea	 ecx, DWORD PTR _kLoader$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1ioINILoader_e@@QAE@XZ
__unwindfunclet$?Initialize@ioGashaponMgr@@UAEXXZ$1:
  0000b	8d 8d 18 fb ff
	ff		 lea	 ecx, DWORD PTR _kInfo$505285[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1GashaponPresentInfo@@QAE@XZ
__unwindfunclet$?Initialize@ioGashaponMgr@@UAEXXZ$2:
  00016	8d 8d 00 fb ff
	ff		 lea	 ecx, DWORD PTR $T513273[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBKUGashaponPresentInfo@@@std@@QAE@XZ
__ehhandler$?Initialize@ioGashaponMgr@@UAEXXZ:
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 8a fc fa ff
	ff		 mov	 ecx, DWORD PTR [edx-1284]
  0002e	33 c8		 xor	 ecx, eax
  00030	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00035	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00038	33 c8		 xor	 ecx, eax
  0003a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Initialize@ioGashaponMgr@@UAEXXZ
  00044	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Initialize@ioGashaponMgr@@UAEXXZ ENDP			; ioGashaponMgr::Initialize
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::erase
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T513961 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::erase, COMDAT
; _this$ = ecx

; 1379 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1380 : 		if (_First == begin() && _Last == end())

  00007	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  0000d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0000f	75 13		 jne	 SHORT $LN65@erase@2
  00011	39 45 10	 cmp	 DWORD PTR __Last$[ebp], eax
  00014	75 0e		 jne	 SHORT $LN65@erase@2

; 1381 : 			{	// erase all
; 1382 : 			clear();

  00016	8b ce		 mov	 ecx, esi
  00018	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::clear

; 1383 : 			return (begin());

  0001d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00020	8b 08		 mov	 ecx, DWORD PTR [eax]
  00022	eb 25		 jmp	 SHORT $LN1@erase@2
$LN65@erase@2:

; 1384 : 			}
; 1385 : 		else
; 1386 : 			{	// partial erase, one at a time
; 1387 : 			while (_First != _Last)

  00024	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00027	74 20		 je	 SHORT $LN1@erase@2
  00029	57		 push	 edi
$LL2@erase@2:

; 1388 : 				erase(_First++);

  0002a	8b f9		 mov	 edi, ecx
  0002c	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0002f	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >,std::_Iterator_base0>::operator++
  00034	57		 push	 edi
  00035	8d 45 fc	 lea	 eax, DWORD PTR $T513961[ebp]
  00038	50		 push	 eax
  00039	8b ce		 mov	 ecx, esi
  0003b	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::erase
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00043	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00046	75 e2		 jne	 SHORT $LL2@erase@2
  00048	5f		 pop	 edi
$LN1@erase@2:

; 1389 : 			return (iterator(_First._Ptr, this));

  00049	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0004c	89 08		 mov	 DWORD PTR [eax], ecx
  0004e	5e		 pop	 esi

; 1390 : 			}
; 1391 : 		}

  0004f	c9		 leave
  00050	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Tidy
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T514152 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1865 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1866 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 10		 mov	 edx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T514152[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::erase

; 1867 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T514337 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >, COMDAT
; _this$ = ecx

; 790  : 		{	// destroy tree

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 791  : 		_Tidy();

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	8d 45 ec	 lea	 eax, DWORD PTR $T514337[ebp]
  0001f	50		 push	 eax
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::erase

; 792  : 		}

  00027	ff 76 04	 push	 DWORD PTR [esi+4]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	e8 00 00 00 00	 call	 __EH_epilog3
  00035	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >
__ehhandler$??1?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >
PUBLIC	??1?$map@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> > >::~map<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> > >
; Function compile flags: /Ogsp
;	COMDAT ??1?$map@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@@std@@QAE@XZ PROC ; std::map<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> > >::~map<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> > >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >
??1?$map@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> > >::~map<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> > >
_TEXT	ENDS
PUBLIC	??_7ioGashaponMgr@@6B@				; ioGashaponMgr::`vftable'
PUBLIC	??1ioGashaponMgr@@UAE@XZ			; ioGashaponMgr::~ioGashaponMgr
PUBLIC	??_R4ioGashaponMgr@@6B@				; ioGashaponMgr::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioGashaponMgr@@@8			; ioGashaponMgr `RTTI Type Descriptor'
PUBLIC	??_R3ioGashaponMgr@@8				; ioGashaponMgr::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioGashaponMgr@@8				; ioGashaponMgr::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioGashaponMgr@@8			; ioGashaponMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@?$Singleton@VioGashaponMgr@@@@8	; Singleton<ioGashaponMgr>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AV?$Singleton@VioGashaponMgr@@@@@8	; Singleton<ioGashaponMgr> `RTTI Type Descriptor'
PUBLIC	??_R3?$Singleton@VioGashaponMgr@@@@8		; Singleton<ioGashaponMgr>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$Singleton@VioGashaponMgr@@@@8		; Singleton<ioGashaponMgr>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$Singleton@VioGashaponMgr@@@@8	; Singleton<ioGashaponMgr>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_EioGashaponMgr@@UAEPAXI@Z:PROC		; ioGashaponMgr::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$Singleton@VioGashaponMgr@@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
rdata$r	SEGMENT
??_R1A@?0A@EA@?$Singleton@VioGashaponMgr@@@@8 DD FLAT:??_R0?AV?$Singleton@VioGashaponMgr@@@@@8 ; Singleton<ioGashaponMgr>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioGashaponMgr@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$Singleton@VioGashaponMgr@@@@8
rdata$r	SEGMENT
??_R2?$Singleton@VioGashaponMgr@@@@8 DD FLAT:??_R1A@?0A@EA@?$Singleton@VioGashaponMgr@@@@8 ; Singleton<ioGashaponMgr>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$Singleton@VioGashaponMgr@@@@8
rdata$r	SEGMENT
??_R3?$Singleton@VioGashaponMgr@@@@8 DD 00H		; Singleton<ioGashaponMgr>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$Singleton@VioGashaponMgr@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$Singleton@VioGashaponMgr@@@@@8
_DATA	SEGMENT
??_R0?AV?$Singleton@VioGashaponMgr@@@@@8 DD FLAT:??_7type_info@@6B@ ; Singleton<ioGashaponMgr> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$Singleton@VioGashaponMgr@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@?$Singleton@VioGashaponMgr@@@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$Singleton@VioGashaponMgr@@@@8 DD FLAT:??_R0?AV?$Singleton@VioGashaponMgr@@@@@8 ; Singleton<ioGashaponMgr>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioGashaponMgr@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioGashaponMgr@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioGashaponMgr@@8 DD FLAT:??_R0?AVioGashaponMgr@@@8 ; ioGashaponMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioGashaponMgr@@8
rdata$r	ENDS
;	COMDAT ??_R2ioGashaponMgr@@8
rdata$r	SEGMENT
??_R2ioGashaponMgr@@8 DD FLAT:??_R1A@?0A@EA@ioGashaponMgr@@8 ; ioGashaponMgr::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@?$Singleton@VioGashaponMgr@@@@8
rdata$r	ENDS
;	COMDAT ??_R3ioGashaponMgr@@8
rdata$r	SEGMENT
??_R3ioGashaponMgr@@8 DD 00H				; ioGashaponMgr::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioGashaponMgr@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioGashaponMgr@@@8
_DATA	SEGMENT
??_R0?AVioGashaponMgr@@@8 DD FLAT:??_7type_info@@6B@	; ioGashaponMgr `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioGashaponMgr@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioGashaponMgr@@6B@
rdata$r	SEGMENT
??_R4ioGashaponMgr@@6B@ DD 00H				; ioGashaponMgr::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioGashaponMgr@@@8
	DD	FLAT:??_R3ioGashaponMgr@@8
rdata$r	ENDS
;	COMDAT ??_7ioGashaponMgr@@6B@
CONST	SEGMENT
??_7ioGashaponMgr@@6B@ DD FLAT:??_R4ioGashaponMgr@@6B@	; ioGashaponMgr::`vftable'
	DD	FLAT:?Initialize@ioGashaponMgr@@UAEXXZ
	DD	FLAT:??_EioGashaponMgr@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ioGashaponMgr@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioGashaponMgr@@UAE@XZ$0
__ehfuncinfo$??1ioGashaponMgr@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ioGashaponMgr@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iogashaponmgr.cpp
xdata$x	ENDS
;	COMDAT ??1ioGashaponMgr@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioGashaponMgr@@UAE@XZ PROC				; ioGashaponMgr::~ioGashaponMgr, COMDAT
; _this$ = ecx

; 61   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioGashaponMgr@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ioGashaponMgr@@6B@
  00015	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 62   : }

  00019	83 c1 04	 add	 ecx, 4
  0001c	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >
  00021	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioGashaponMgr@@@@1PAVioGashaponMgr@@A, 0 ; Singleton<ioGashaponMgr>::ms_Singleton
  00028	e8 00 00 00 00	 call	 __EH_epilog3
  0002d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioGashaponMgr@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioGashaponMgr@@@@QAE@XZ ; Singleton<ioGashaponMgr>::~Singleton<ioGashaponMgr>
__ehhandler$??1ioGashaponMgr@@UAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioGashaponMgr@@UAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioGashaponMgr@@UAE@XZ ENDP				; ioGashaponMgr::~ioGashaponMgr
PUBLIC	??0?$map@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> > >::map<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$map@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T514415 = -8						; size = 4
$T514417 = -8						; size = 4
$T514404 = -1						; size = 1
??0?$map@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@@std@@QAE@XZ PROC ; std::map<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> > >::map<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> > >, COMDAT
; _this$ = ecx

; 106  : 		{	// construct empty map from defaults

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	51		 push	 ecx
  00007	89 65 f8	 mov	 DWORD PTR $T514417[ebp], esp
  0000a	8d 45 ff	 lea	 eax, DWORD PTR $T514404[ebp]
  0000d	89 65 f8	 mov	 DWORD PTR $T514415[ebp], esp
  00010	50		 push	 eax
  00011	8b f1		 mov	 esi, ecx
  00013	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >

; 107  : 		}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c9		 leave
  0001c	c3		 ret	 0
??0?$map@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> > >::map<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> > >
_TEXT	ENDS
PUBLIC	??0ioGashaponMgr@@QAE@XZ			; ioGashaponMgr::ioGashaponMgr
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??0ioGashaponMgr@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioGashaponMgr@@QAE@XZ$0
__ehfuncinfo$??0ioGashaponMgr@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ioGashaponMgr@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iogashaponmgr.cpp
xdata$x	ENDS
;	COMDAT ??0ioGashaponMgr@@QAE@XZ
_TEXT	SEGMENT
$T514447 = -24						; size = 4
$T514459 = -24						; size = 4
_this$ = -20						; size = 4
$T514455 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??0ioGashaponMgr@@QAE@XZ PROC				; ioGashaponMgr::ioGashaponMgr, COMDAT
; _this$ = ecx

; 57   : {	

  00000	6a 0c		 push	 12			; 0000000cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioGashaponMgr@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00011	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00014	8d 41 fc	 lea	 eax, DWORD PTR [ecx-4]
  00017	a3 00 00 00 00	 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioGashaponMgr@@@@1PAVioGashaponMgr@@A, eax ; Singleton<ioGashaponMgr>::ms_Singleton
  0001c	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00020	51		 push	 ecx
  00021	89 65 e8	 mov	 DWORD PTR $T514459[ebp], esp
  00024	8d 45 f3	 lea	 eax, DWORD PTR $T514455[ebp]
  00027	89 65 e8	 mov	 DWORD PTR $T514447[ebp], esp
  0002a	50		 push	 eax
  0002b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioGashaponMgr@@6B@
  00031	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@KUGashaponPresentInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUGashaponPresentInfo@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,GashaponPresentInfo,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,GashaponPresentInfo> >,0> >

; 58   : }

  00036	8b c6		 mov	 eax, esi
  00038	e8 00 00 00 00	 call	 __EH_epilog3
  0003d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioGashaponMgr@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioGashaponMgr@@@@QAE@XZ ; Singleton<ioGashaponMgr>::~Singleton<ioGashaponMgr>
__ehhandler$??0ioGashaponMgr@@QAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioGashaponMgr@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioGashaponMgr@@QAE@XZ ENDP				; ioGashaponMgr::ioGashaponMgr
; Function compile flags: /Ogsp
;	COMDAT ??_GioGashaponMgr@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioGashaponMgr@@UAEPAXI@Z PROC			; ioGashaponMgr::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioGashaponMgr@@UAE@XZ ; ioGashaponMgr::~ioGashaponMgr
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@4
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@4:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioGashaponMgr@@UAEPAXI@Z ENDP			; ioGashaponMgr::`scalar deleting destructor'
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??__FkNone@?1??FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z@YAXXZ
text$yd	SEGMENT
??__FkNone@?1??FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z@YAXXZ PROC ; `ioGashaponMgr::FindGashaponPresentInfo'::`2'::`dynamic atexit destructor for 'kNone'', COMDAT
  00000	b9 04 00 00 00	 mov	 ecx, OFFSET ?kNone@?1??FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z@4U3@A+4
  00005	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy
??__FkNone@?1??FindGashaponPresentInfo@ioGashaponMgr@@QAEABUGashaponPresentInfo@@H@Z@YAXXZ ENDP ; `ioGashaponMgr::FindGashaponPresentInfo'::`2'::`dynamic atexit destructor for 'kNone''
; Function compile flags: /Ogsp
text$yd	ENDS
;	COMDAT ??__FkNone@?1??FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z@YAXXZ
text$yd	SEGMENT
??__FkNone@?1??FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z@YAXXZ PROC ; `ioGashaponMgr::FindGashaponPresentList'::`2'::`dynamic atexit destructor for 'kNone'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?kNone@?1??FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z@4V34@A
  00005	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresent,std::allocator<GashaponPresent> >::_Tidy
??__FkNone@?1??FindGashaponPresentList@ioGashaponMgr@@QAEABV?$vector@VGashaponPresent@@V?$allocator@VGashaponPresent@@@std@@@std@@H@Z@YAXXZ ENDP ; `ioGashaponMgr::FindGashaponPresentList'::`2'::`dynamic atexit destructor for 'kNone''
text$yd	ENDS
END
