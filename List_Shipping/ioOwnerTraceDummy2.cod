; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioOwnerTraceDummy2.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
;	COMDAT ?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB DD 01H ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
CONST	ENDS
PUBLIC	?GetCreator@ioBaseChar@@QAEPAVioPlayStage@@XZ	; ioBaseChar::GetCreator
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iobasechar.h
;	COMDAT ?GetCreator@ioBaseChar@@QAEPAVioPlayStage@@XZ
_TEXT	SEGMENT
?GetCreator@ioBaseChar@@QAEPAVioPlayStage@@XZ PROC	; ioBaseChar::GetCreator, COMDAT
; _this$ = ecx

; 4013 : 	inline ioPlayStage* GetCreator() { return m_pCreator; }

  00000	8b 81 44 03 00
	00		 mov	 eax, DWORD PTR [ecx+836]
  00006	c3		 ret	 0
?GetCreator@ioBaseChar@@QAEPAVioPlayStage@@XZ ENDP	; ioBaseChar::GetCreator
_TEXT	ENDS
PUBLIC	??_7ioOwnerTraceDummy2@@6BioWorldEventReceiver@@@ ; ioOwnerTraceDummy2::`vftable'
PUBLIC	??_7ioOwnerTraceDummy2@@6BioPlayEntity@@@	; ioOwnerTraceDummy2::`vftable'
PUBLIC	??1ioOwnerTraceDummy2@@UAE@XZ			; ioOwnerTraceDummy2::~ioOwnerTraceDummy2
PUBLIC	??_R4ioOwnerTraceDummy2@@6BioPlayEntity@@@	; ioOwnerTraceDummy2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioOwnerTraceDummy2@@@8			; ioOwnerTraceDummy2 `RTTI Type Descriptor'
PUBLIC	??_R3ioOwnerTraceDummy2@@8			; ioOwnerTraceDummy2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioOwnerTraceDummy2@@8			; ioOwnerTraceDummy2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioOwnerTraceDummy2@@8		; ioOwnerTraceDummy2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioDummyChar@@8			; ioDummyChar::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioDummyChar@@@8				; ioDummyChar `RTTI Type Descriptor'
PUBLIC	??_R3ioDummyChar@@8				; ioDummyChar::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioDummyChar@@8				; ioDummyChar::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioPlayEntity@@8			; ioPlayEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioPlayEntity@@@8			; ioPlayEntity `RTTI Type Descriptor'
PUBLIC	??_R3ioPlayEntity@@8				; ioPlayEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioPlayEntity@@8				; ioPlayEntity::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioGameEntity@@8			; ioGameEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioGameEntity@@@8			; ioGameEntity `RTTI Type Descriptor'
PUBLIC	??_R3ioGameEntity@@8				; ioGameEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioGameEntity@@8				; ioGameEntity::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioEntityEvent@@8			; ioEntityEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioEntityEvent@@@8			; ioEntityEvent `RTTI Type Descriptor'
PUBLIC	??_R3ioEntityEvent@@8				; ioEntityEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioEntityEvent@@8				; ioEntityEvent::`RTTI Base Class Array'
PUBLIC	??_R1BMI@?0A@EA@ioWorldEventReceiver@@8		; ioWorldEventReceiver::`RTTI Base Class Descriptor at (456,-1,0,64)'
PUBLIC	??_R0?AVioWorldEventReceiver@@@8		; ioWorldEventReceiver `RTTI Type Descriptor'
PUBLIC	??_R3ioWorldEventReceiver@@8			; ioWorldEventReceiver::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioWorldEventReceiver@@8			; ioWorldEventReceiver::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioWorldEventReceiver@@8		; ioWorldEventReceiver::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?IsMountAvailable@ioOwnerTraceDummy2@@UBE_NXZ	; ioOwnerTraceDummy2::IsMountAvailable
PUBLIC	?IsMountingAvailable@ioOwnerTraceDummy2@@UBE_NXZ ; ioOwnerTraceDummy2::IsMountingAvailable
PUBLIC	?IsNowMountEnable@ioOwnerTraceDummy2@@UBE_NXZ	; ioOwnerTraceDummy2::IsNowMountEnable
PUBLIC	?LoadProperty@ioOwnerTraceDummy2@@UAEXAAVioINILoader@@@Z ; ioOwnerTraceDummy2::LoadProperty
PUBLIC	?SetTeam@ioPlayEntity@@UAEXW4TeamType@@@Z	; ioPlayEntity::SetTeam
PUBLIC	?InitDummyCharInfo@ioOwnerTraceDummy2@@UAEXHKABUD3DXVECTOR3@@0M_N@Z ; ioOwnerTraceDummy2::InitDummyCharInfo
PUBLIC	?ProcessState@ioOwnerTraceDummy2@@MAEXMK@Z	; ioOwnerTraceDummy2::ProcessState
PUBLIC	?IsDummyCharMidSync@ioDummyChar@@UAE_NXZ	; ioDummyChar::IsDummyCharMidSync
PUBLIC	?SetDieState@ioOwnerTraceDummy2@@UAEX_N@Z	; ioOwnerTraceDummy2::SetDieState
PUBLIC	??_R4ioOwnerTraceDummy2@@6BioWorldEventReceiver@@@ ; ioOwnerTraceDummy2::`RTTI Complete Object Locator'
PUBLIC	??_EioOwnerTraceDummy2@@WBMI@AEPAXI@Z		; [thunk]:ioOwnerTraceDummy2::`vector deleting destructor'
EXTRN	??1ioDummyChar@@UAE@XZ:PROC			; ioDummyChar::~ioDummyChar
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?AddEntityEvent@ioDummyChar@@UAEXPAVioEntity@@@Z:PROC ; ioDummyChar::AddEntityEvent
EXTRN	??_EioOwnerTraceDummy2@@UAEPAXI@Z:PROC		; ioOwnerTraceDummy2::`vector deleting destructor'
EXTRN	?Update@ioDummyChar@@UAEXMKK@Z:PROC		; ioDummyChar::Update
EXTRN	?UpdateAfter@ioDummyChar@@UAEXM@Z:PROC		; ioDummyChar::UpdateAfter
EXTRN	?GetTypeID@ioPlayEntity@@UBEHXZ:PROC		; ioPlayEntity::GetTypeID
EXTRN	?IsNeedCheckMapCollision@ioDummyChar@@UBE_NXZ:PROC ; ioDummyChar::IsNeedCheckMapCollision
EXTRN	?IsAllWeaponDefence@ioGameEntity@@UBE_NXZ:PROC	; ioGameEntity::IsAllWeaponDefence
EXTRN	?HasEntity@ioGameEntity@@UAE_NABVioHashString@@@Z:PROC ; ioGameEntity::HasEntity
EXTRN	?AddEntity@ioGameEntity@@UAEPAVioEntity@@ABVioHashString@@@Z:PROC ; ioGameEntity::AddEntity
EXTRN	?DestroyEntity@ioGameEntity@@UAE_NABVioHashString@@@Z:PROC ; ioGameEntity::DestroyEntity
EXTRN	?GetEntity@ioGameEntity@@UAEPAVioEntity@@ABVioHashString@@@Z:PROC ; ioGameEntity::GetEntity
EXTRN	?UpdateBound@ioGameEntity@@MBEXXZ:PROC		; ioGameEntity::UpdateBound
EXTRN	?UpdateBottomHeight@ioDummyChar@@MBEXXZ:PROC	; ioDummyChar::UpdateBottomHeight
EXTRN	?NeedUpdateBottomHeight@ioDummyChar@@UAEXXZ:PROC ; ioDummyChar::NeedUpdateBottomHeight
EXTRN	?SetWorldPosition@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z:PROC ; ioGameEntity::SetWorldPosition
EXTRN	?SetWorldOrientation@ioGameEntity@@UAEXABUD3DXQUATERNION@@@Z:PROC ; ioGameEntity::SetWorldOrientation
EXTRN	?SetWorldScale@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z:PROC ; ioGameEntity::SetWorldScale
EXTRN	?Translate@ioDummyChar@@UAEXABUD3DXVECTOR3@@@Z:PROC ; ioDummyChar::Translate
EXTRN	?TranslateByConveyer@ioDummyChar@@UAEXABUD3DXVECTOR3@@@Z:PROC ; ioDummyChar::TranslateByConveyer
EXTRN	?TranslateByWorldEntity@ioDummyChar@@UAEXABUD3DXVECTOR3@@@Z:PROC ; ioDummyChar::TranslateByWorldEntity
EXTRN	?MapCollisionPushingTranslate@ioDummyChar@@UAEXABUD3DXVECTOR3@@@Z:PROC ; ioDummyChar::MapCollisionPushingTranslate
EXTRN	?DontMoveCollisionPushingTranslate@ioGameEntity@@UAEXPAV1@ABUD3DXVECTOR3@@@Z:PROC ; ioGameEntity::DontMoveCollisionPushingTranslate
EXTRN	?Rotate@ioGameEntity@@UAEXABUD3DXVECTOR3@@MW4TransformSpace@ioNode@@@Z:PROC ; ioGameEntity::Rotate
EXTRN	?Scale@ioGameEntity@@UAEXMMM@Z:PROC		; ioGameEntity::Scale
EXTRN	?Scale@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z:PROC ; ioGameEntity::Scale
EXTRN	?GetWorldPosition@ioGameEntity@@UBEABUD3DXVECTOR3@@XZ:PROC ; ioGameEntity::GetWorldPosition
EXTRN	?GetWorldOrientation@ioGameEntity@@UBEABUD3DXQUATERNION@@XZ:PROC ; ioGameEntity::GetWorldOrientation
EXTRN	?GetWorldScale@ioGameEntity@@UBEABUD3DXVECTOR3@@XZ:PROC ; ioGameEntity::GetWorldScale
EXTRN	?ApplyWeapon@ioDummyChar@@UAE?AW4ApplyWeaponExp@@PAVioWeapon@@@Z:PROC ; ioDummyChar::ApplyWeapon
EXTRN	?IsCollisionAvailableWeapon@ioDummyChar@@UAE_NPAVioWeapon@@@Z:PROC ; ioDummyChar::IsCollisionAvailableWeapon
EXTRN	?IsCollisionAvailableRange@ioPlayEntity@@UAE_NPAVioWeapon@@@Z:PROC ; ioPlayEntity::IsCollisionAvailableRange
EXTRN	?IsEntityCollisionSkipState@ioDummyChar@@UBE_NPAVioGameEntity@@@Z:PROC ; ioDummyChar::IsEntityCollisionSkipState
EXTRN	?IsCharCollisionSkipState@ioDummyChar@@UBE_NW4TeamType@@H@Z:PROC ; ioDummyChar::IsCharCollisionSkipState
EXTRN	?IsWoundedCollision@ioPlayEntity@@UBE_NABVioOrientBox@@PAUD3DXVECTOR3@@@Z:PROC ; ioPlayEntity::IsWoundedCollision
EXTRN	?GetAttackCollisionBox@ioDummyChar@@UAE?AVioOrientBox@@W4AniCollisionType@@_N@Z:PROC ; ioDummyChar::GetAttackCollisionBox
EXTRN	?CheckSphereDistance@ioPlayEntity@@UBE_NABUD3DXVECTOR3@@MAAM@Z:PROC ; ioPlayEntity::CheckSphereDistance
EXTRN	?CheckSpherePoint@ioPlayEntity@@UBE_NABUD3DXVECTOR3@@MAAU2@@Z:PROC ; ioPlayEntity::CheckSpherePoint
EXTRN	?CheckCylinderPoint@ioPlayEntity@@UBE_NABVioCylinder@@ABUD3DXVECTOR3@@AAU3@@Z:PROC ; ioPlayEntity::CheckCylinderPoint
EXTRN	?GetSubType@ioDummyChar@@UBE?AW4PlaySubType@ioPlayEntity@@XZ:PROC ; ioDummyChar::GetSubType
EXTRN	?GetArmorType@ioDummyChar@@UBE?AW4ArmorType@@XZ:PROC ; ioDummyChar::GetArmorType
EXTRN	?DontMoveEntityLevel@ioDummyChar@@UBEHXZ:PROC	; ioDummyChar::DontMoveEntityLevel
EXTRN	?NotifyDontMoveCollisionPushingSkip@ioPlayEntity@@UAEXPAVioGameEntity@@@Z:PROC ; ioPlayEntity::NotifyDontMoveCollisionPushingSkip
EXTRN	?GetWorldEventReceiver@ioDummyChar@@UAEPAVioWorldEventReceiver@@XZ:PROC ; ioDummyChar::GetWorldEventReceiver
EXTRN	?Revival@ioPlayEntity@@UAEXXZ:PROC		; ioPlayEntity::Revival
EXTRN	?UpdateGauge@ioDummyChar@@UAEXXZ:PROC		; ioDummyChar::UpdateGauge
EXTRN	?RenderGauge@ioDummyChar@@UAEXXZ:PROC		; ioDummyChar::RenderGauge
EXTRN	?FillMaxHP@ioPlayEntity@@UAEXXZ:PROC		; ioPlayEntity::FillMaxHP
EXTRN	?ProcessRecovery@ioPlayEntity@@MAEXXZ:PROC	; ioPlayEntity::ProcessRecovery
EXTRN	?AddHeadDamageInfo@ioPlayEntity@@UAEXH_N@Z:PROC	; ioPlayEntity::AddHeadDamageInfo
EXTRN	?RenderHeadInfoList@ioPlayEntity@@UAEXHH@Z:PROC	; ioPlayEntity::RenderHeadInfoList
EXTRN	?UpdateHeadInfoList@ioPlayEntity@@MAEXK@Z:PROC	; ioPlayEntity::UpdateHeadInfoList
EXTRN	?TestMapCollision@ioDummyChar@@UAE_NPAVioOpcodeShape@@PAVioPlayStage@@PBUD3DXMATRIX@@@Z:PROC ; ioDummyChar::TestMapCollision
EXTRN	?CheckEntityCollision@ioDummyChar@@UAEXPAVioPlayEntity@@@Z:PROC ; ioDummyChar::CheckEntityCollision
EXTRN	?GetDummyGrassType@ioDummyChar@@UAEHXZ:PROC	; ioDummyChar::GetDummyGrassType
EXTRN	?IsActivateWeapon@ioDummyChar@@UAE_NXZ:PROC	; ioDummyChar::IsActivateWeapon
EXTRN	?IsDummyVsDummyCollisionSkipState@ioDummyChar@@UAE_NPBV1@@Z:PROC ; ioDummyChar::IsDummyVsDummyCollisionSkipState
EXTRN	?ProcessPos@ioDummyChar@@MAEXM@Z:PROC		; ioDummyChar::ProcessPos
EXTRN	?ProcessDelayState@ioDummyChar@@MAEXM@Z:PROC	; ioDummyChar::ProcessDelayState
EXTRN	?ProcessMoveState@ioDummyChar@@MAEXM@Z:PROC	; ioDummyChar::ProcessMoveState
EXTRN	?ProcessDashState@ioDummyChar@@MAEXM@Z:PROC	; ioDummyChar::ProcessDashState
EXTRN	?ProcessAttackState@ioDummyChar@@MAEXMK@Z:PROC	; ioDummyChar::ProcessAttackState
EXTRN	?ApplyDummyCharSync@ioDummyChar@@UAEXPAVioPlayStage@@AAVSP2Packet@@@Z:PROC ; ioDummyChar::ApplyDummyCharSync
EXTRN	?SetDelayState@ioDummyChar@@UAEX_N@Z:PROC	; ioDummyChar::SetDelayState
EXTRN	?SetMoveState@ioDummyChar@@UAEXXZ:PROC		; ioDummyChar::SetMoveState
EXTRN	?SetDieState@ioDummyChar@@UAEX_N0@Z:PROC	; ioDummyChar::SetDieState
EXTRN	?SetDashState@ioDummyChar@@UAEXXZ:PROC		; ioDummyChar::SetDashState
EXTRN	?SetAttackState@ioDummyChar@@UAEXXZ:PROC	; ioDummyChar::SetAttackState
EXTRN	?DropZoneCheck@ioDummyChar@@MAEXXZ:PROC		; ioDummyChar::DropZoneCheck
EXTRN	?SendAttackInfoToSkill@ioDummyChar@@MAEXXZ:PROC	; ioDummyChar::SendAttackInfoToSkill
EXTRN	?CheckCollisionWeapon@ioDummyChar@@UAEXPAVioBaseChar@@@Z:PROC ; ioDummyChar::CheckCollisionWeapon
EXTRN	?TranslateMountEntity@ioDummyChar@@MAEXABUD3DXVECTOR3@@@Z:PROC ; ioDummyChar::TranslateMountEntity
EXTRN	?ClearMountEntity@ioDummyChar@@MAEXXZ:PROC	; ioDummyChar::ClearMountEntity
EXTRN	?UpdateMountedEntityList@ioDummyChar@@MAEXXZ:PROC ; ioDummyChar::UpdateMountedEntityList
EXTRN	?UpdateMountedWeaponList@ioDummyChar@@MAEXXZ:PROC ; ioDummyChar::UpdateMountedWeaponList
EXTRN	?SetWorldPositionMountEntity@ioDummyChar@@MAEXM@Z:PROC ; ioDummyChar::SetWorldPositionMountEntity
EXTRN	?DummyDieClearMountEntity@ioDummyChar@@MAEXXZ:PROC ; ioDummyChar::DummyDieClearMountEntity
EXTRN	?FillDummyCharMidSync@ioDummyChar@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z:PROC ; ioDummyChar::FillDummyCharMidSync
EXTRN	?ApplyDummyCharMidSync@ioDummyChar@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z:PROC ; ioDummyChar::ApplyDummyCharMidSync
EXTRN	?GetSkillMaxActiveCnt@ioDummyChar@@UAEHXZ:PROC	; ioDummyChar::GetSkillMaxActiveCnt
EXTRN	?GetSkillCurActiveCnt@ioDummyChar@@UAEHXZ:PROC	; ioDummyChar::GetSkillCurActiveCnt
EXTRN	?OnTelepotation@ioDummyChar@@UAEXABUD3DXVECTOR3@@@Z:PROC ; ioDummyChar::OnTelepotation
EXTRN	?OnFireZoneDamage@ioDummyChar@@UAEXMABVioHashString@@@Z:PROC ; ioDummyChar::OnFireZoneDamage
EXTRN	?OnPoisonZoneDamage@ioDummyChar@@UAEXXZ:PROC	; ioDummyChar::OnPoisonZoneDamage
;	COMDAT ??_R4ioOwnerTraceDummy2@@6BioWorldEventReceiver@@@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioownertracedummy2.cpp
rdata$r	SEGMENT
??_R4ioOwnerTraceDummy2@@6BioWorldEventReceiver@@@ DD 00H ; ioOwnerTraceDummy2::`RTTI Complete Object Locator'
	DD	01c8H
	DD	00H
	DD	FLAT:??_R0?AVioOwnerTraceDummy2@@@8
	DD	FLAT:??_R3ioOwnerTraceDummy2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioWorldEventReceiver@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioWorldEventReceiver@@8 DD FLAT:??_R0?AVioWorldEventReceiver@@@8 ; ioWorldEventReceiver::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioWorldEventReceiver@@8
rdata$r	ENDS
;	COMDAT ??_R2ioWorldEventReceiver@@8
rdata$r	SEGMENT
??_R2ioWorldEventReceiver@@8 DD FLAT:??_R1A@?0A@EA@ioWorldEventReceiver@@8 ; ioWorldEventReceiver::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioWorldEventReceiver@@8
rdata$r	SEGMENT
??_R3ioWorldEventReceiver@@8 DD 00H			; ioWorldEventReceiver::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioWorldEventReceiver@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioWorldEventReceiver@@@8
_DATA	SEGMENT
??_R0?AVioWorldEventReceiver@@@8 DD FLAT:??_7type_info@@6B@ ; ioWorldEventReceiver `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWorldEventReceiver@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BMI@?0A@EA@ioWorldEventReceiver@@8
rdata$r	SEGMENT
??_R1BMI@?0A@EA@ioWorldEventReceiver@@8 DD FLAT:??_R0?AVioWorldEventReceiver@@@8 ; ioWorldEventReceiver::`RTTI Base Class Descriptor at (456,-1,0,64)'
	DD	00H
	DD	01c8H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioWorldEventReceiver@@8
rdata$r	ENDS
;	COMDAT ??_R2ioEntityEvent@@8
rdata$r	SEGMENT
??_R2ioEntityEvent@@8 DD FLAT:??_R1A@?0A@EA@ioEntityEvent@@8 ; ioEntityEvent::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioEntityEvent@@8
rdata$r	SEGMENT
??_R3ioEntityEvent@@8 DD 00H				; ioEntityEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioEntityEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioEntityEvent@@@8
_DATA	SEGMENT
??_R0?AVioEntityEvent@@@8 DD FLAT:??_7type_info@@6B@	; ioEntityEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioEntityEvent@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioEntityEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioEntityEvent@@8 DD FLAT:??_R0?AVioEntityEvent@@@8 ; ioEntityEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioEntityEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2ioGameEntity@@8
rdata$r	SEGMENT
??_R2ioGameEntity@@8 DD FLAT:??_R1A@?0A@EA@ioGameEntity@@8 ; ioGameEntity::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioEntityEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3ioGameEntity@@8
rdata$r	SEGMENT
??_R3ioGameEntity@@8 DD 00H				; ioGameEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioGameEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioGameEntity@@@8
_DATA	SEGMENT
??_R0?AVioGameEntity@@@8 DD FLAT:??_7type_info@@6B@	; ioGameEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioGameEntity@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioGameEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioGameEntity@@8 DD FLAT:??_R0?AVioGameEntity@@@8 ; ioGameEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioGameEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2ioPlayEntity@@8
rdata$r	SEGMENT
??_R2ioPlayEntity@@8 DD FLAT:??_R1A@?0A@EA@ioPlayEntity@@8 ; ioPlayEntity::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioGameEntity@@8
	DD	FLAT:??_R1A@?0A@EA@ioEntityEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3ioPlayEntity@@8
rdata$r	SEGMENT
??_R3ioPlayEntity@@8 DD 00H				; ioPlayEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ioPlayEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioPlayEntity@@@8
_DATA	SEGMENT
??_R0?AVioPlayEntity@@@8 DD FLAT:??_7type_info@@6B@	; ioPlayEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioPlayEntity@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioPlayEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioPlayEntity@@8 DD FLAT:??_R0?AVioPlayEntity@@@8 ; ioPlayEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioPlayEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2ioDummyChar@@8
rdata$r	SEGMENT
??_R2ioDummyChar@@8 DD FLAT:??_R1A@?0A@EA@ioDummyChar@@8 ; ioDummyChar::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioPlayEntity@@8
	DD	FLAT:??_R1A@?0A@EA@ioGameEntity@@8
	DD	FLAT:??_R1A@?0A@EA@ioEntityEvent@@8
	DD	FLAT:??_R1BMI@?0A@EA@ioWorldEventReceiver@@8
rdata$r	ENDS
;	COMDAT ??_R3ioDummyChar@@8
rdata$r	SEGMENT
??_R3ioDummyChar@@8 DD 00H				; ioDummyChar::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2ioDummyChar@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioDummyChar@@@8
_DATA	SEGMENT
??_R0?AVioDummyChar@@@8 DD FLAT:??_7type_info@@6B@	; ioDummyChar `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioDummyChar@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioDummyChar@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioDummyChar@@8 DD FLAT:??_R0?AVioDummyChar@@@8 ; ioDummyChar::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioDummyChar@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioOwnerTraceDummy2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioOwnerTraceDummy2@@8 DD FLAT:??_R0?AVioOwnerTraceDummy2@@@8 ; ioOwnerTraceDummy2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioOwnerTraceDummy2@@8
rdata$r	ENDS
;	COMDAT ??_R2ioOwnerTraceDummy2@@8
rdata$r	SEGMENT
??_R2ioOwnerTraceDummy2@@8 DD FLAT:??_R1A@?0A@EA@ioOwnerTraceDummy2@@8 ; ioOwnerTraceDummy2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioDummyChar@@8
	DD	FLAT:??_R1A@?0A@EA@ioPlayEntity@@8
	DD	FLAT:??_R1A@?0A@EA@ioGameEntity@@8
	DD	FLAT:??_R1A@?0A@EA@ioEntityEvent@@8
	DD	FLAT:??_R1BMI@?0A@EA@ioWorldEventReceiver@@8
rdata$r	ENDS
;	COMDAT ??_R3ioOwnerTraceDummy2@@8
rdata$r	SEGMENT
??_R3ioOwnerTraceDummy2@@8 DD 00H			; ioOwnerTraceDummy2::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2ioOwnerTraceDummy2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioOwnerTraceDummy2@@@8
_DATA	SEGMENT
??_R0?AVioOwnerTraceDummy2@@@8 DD FLAT:??_7type_info@@6B@ ; ioOwnerTraceDummy2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioOwnerTraceDummy2@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioOwnerTraceDummy2@@6BioPlayEntity@@@
rdata$r	SEGMENT
??_R4ioOwnerTraceDummy2@@6BioPlayEntity@@@ DD 00H	; ioOwnerTraceDummy2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioOwnerTraceDummy2@@@8
	DD	FLAT:??_R3ioOwnerTraceDummy2@@8
rdata$r	ENDS
;	COMDAT ??_7ioOwnerTraceDummy2@@6BioWorldEventReceiver@@@
CONST	SEGMENT
??_7ioOwnerTraceDummy2@@6BioWorldEventReceiver@@@ DD FLAT:??_R4ioOwnerTraceDummy2@@6BioWorldEventReceiver@@@ ; ioOwnerTraceDummy2::`vftable'
	DD	FLAT:?OnTelepotation@ioDummyChar@@UAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?OnFireZoneDamage@ioDummyChar@@UAEXMABVioHashString@@@Z
	DD	FLAT:?OnPoisonZoneDamage@ioDummyChar@@UAEXXZ
	DD	FLAT:??_EioOwnerTraceDummy2@@WBMI@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7ioOwnerTraceDummy2@@6BioPlayEntity@@@
CONST	SEGMENT
??_7ioOwnerTraceDummy2@@6BioPlayEntity@@@ DD FLAT:??_R4ioOwnerTraceDummy2@@6BioPlayEntity@@@ ; ioOwnerTraceDummy2::`vftable'
	DD	FLAT:?AddEntityEvent@ioDummyChar@@UAEXPAVioEntity@@@Z
	DD	FLAT:??_EioOwnerTraceDummy2@@UAEPAXI@Z
	DD	FLAT:?Update@ioDummyChar@@UAEXMKK@Z
	DD	FLAT:?UpdateAfter@ioDummyChar@@UAEXM@Z
	DD	FLAT:?GetTypeID@ioPlayEntity@@UBEHXZ
	DD	FLAT:?IsNeedCheckMapCollision@ioDummyChar@@UBE_NXZ
	DD	FLAT:?IsMountAvailable@ioOwnerTraceDummy2@@UBE_NXZ
	DD	FLAT:?IsMountingAvailable@ioOwnerTraceDummy2@@UBE_NXZ
	DD	FLAT:?IsNowMountEnable@ioOwnerTraceDummy2@@UBE_NXZ
	DD	FLAT:?IsAllWeaponDefence@ioGameEntity@@UBE_NXZ
	DD	FLAT:?HasEntity@ioGameEntity@@UAE_NABVioHashString@@@Z
	DD	FLAT:?AddEntity@ioGameEntity@@UAEPAVioEntity@@ABVioHashString@@@Z
	DD	FLAT:?DestroyEntity@ioGameEntity@@UAE_NABVioHashString@@@Z
	DD	FLAT:?GetEntity@ioGameEntity@@UAEPAVioEntity@@ABVioHashString@@@Z
	DD	FLAT:?UpdateBound@ioGameEntity@@MBEXXZ
	DD	FLAT:?UpdateBottomHeight@ioDummyChar@@MBEXXZ
	DD	FLAT:?NeedUpdateBottomHeight@ioDummyChar@@UAEXXZ
	DD	FLAT:?SetWorldPosition@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?SetWorldOrientation@ioGameEntity@@UAEXABUD3DXQUATERNION@@@Z
	DD	FLAT:?SetWorldScale@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?Translate@ioDummyChar@@UAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?TranslateByConveyer@ioDummyChar@@UAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?TranslateByWorldEntity@ioDummyChar@@UAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?MapCollisionPushingTranslate@ioDummyChar@@UAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?DontMoveCollisionPushingTranslate@ioGameEntity@@UAEXPAV1@ABUD3DXVECTOR3@@@Z
	DD	FLAT:?Rotate@ioGameEntity@@UAEXABUD3DXVECTOR3@@MW4TransformSpace@ioNode@@@Z
	DD	FLAT:?Scale@ioGameEntity@@UAEXMMM@Z
	DD	FLAT:?Scale@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?GetWorldPosition@ioGameEntity@@UBEABUD3DXVECTOR3@@XZ
	DD	FLAT:?GetWorldOrientation@ioGameEntity@@UBEABUD3DXQUATERNION@@XZ
	DD	FLAT:?GetWorldScale@ioGameEntity@@UBEABUD3DXVECTOR3@@XZ
	DD	FLAT:?ApplyWeapon@ioDummyChar@@UAE?AW4ApplyWeaponExp@@PAVioWeapon@@@Z
	DD	FLAT:?IsCollisionAvailableWeapon@ioDummyChar@@UAE_NPAVioWeapon@@@Z
	DD	FLAT:?IsCollisionAvailableRange@ioPlayEntity@@UAE_NPAVioWeapon@@@Z
	DD	FLAT:?IsEntityCollisionSkipState@ioDummyChar@@UBE_NPAVioGameEntity@@@Z
	DD	FLAT:?IsCharCollisionSkipState@ioDummyChar@@UBE_NW4TeamType@@H@Z
	DD	FLAT:?IsWoundedCollision@ioPlayEntity@@UBE_NABVioOrientBox@@PAUD3DXVECTOR3@@@Z
	DD	FLAT:?GetAttackCollisionBox@ioDummyChar@@UAE?AVioOrientBox@@W4AniCollisionType@@_N@Z
	DD	FLAT:?CheckSphereDistance@ioPlayEntity@@UBE_NABUD3DXVECTOR3@@MAAM@Z
	DD	FLAT:?CheckSpherePoint@ioPlayEntity@@UBE_NABUD3DXVECTOR3@@MAAU2@@Z
	DD	FLAT:?CheckCylinderPoint@ioPlayEntity@@UBE_NABVioCylinder@@ABUD3DXVECTOR3@@AAU3@@Z
	DD	FLAT:?GetSubType@ioDummyChar@@UBE?AW4PlaySubType@ioPlayEntity@@XZ
	DD	FLAT:?GetArmorType@ioDummyChar@@UBE?AW4ArmorType@@XZ
	DD	FLAT:?DontMoveEntityLevel@ioDummyChar@@UBEHXZ
	DD	FLAT:?NotifyDontMoveCollisionPushingSkip@ioPlayEntity@@UAEXPAVioGameEntity@@@Z
	DD	FLAT:?LoadProperty@ioOwnerTraceDummy2@@UAEXAAVioINILoader@@@Z
	DD	FLAT:?GetWorldEventReceiver@ioDummyChar@@UAEPAVioWorldEventReceiver@@XZ
	DD	FLAT:?Revival@ioPlayEntity@@UAEXXZ
	DD	FLAT:?UpdateGauge@ioDummyChar@@UAEXXZ
	DD	FLAT:?RenderGauge@ioDummyChar@@UAEXXZ
	DD	FLAT:?FillMaxHP@ioPlayEntity@@UAEXXZ
	DD	FLAT:?ProcessRecovery@ioPlayEntity@@MAEXXZ
	DD	FLAT:?AddHeadDamageInfo@ioPlayEntity@@UAEXH_N@Z
	DD	FLAT:?RenderHeadInfoList@ioPlayEntity@@UAEXHH@Z
	DD	FLAT:?UpdateHeadInfoList@ioPlayEntity@@MAEXK@Z
	DD	FLAT:?SetTeam@ioPlayEntity@@UAEXW4TeamType@@@Z
	DD	FLAT:?InitDummyCharInfo@ioOwnerTraceDummy2@@UAEXHKABUD3DXVECTOR3@@0M_N@Z
	DD	FLAT:?TestMapCollision@ioDummyChar@@UAE_NPAVioOpcodeShape@@PAVioPlayStage@@PBUD3DXMATRIX@@@Z
	DD	FLAT:?CheckEntityCollision@ioDummyChar@@UAEXPAVioPlayEntity@@@Z
	DD	FLAT:?GetDummyGrassType@ioDummyChar@@UAEHXZ
	DD	FLAT:?IsActivateWeapon@ioDummyChar@@UAE_NXZ
	DD	FLAT:?IsDummyVsDummyCollisionSkipState@ioDummyChar@@UAE_NPBV1@@Z
	DD	FLAT:?ProcessState@ioOwnerTraceDummy2@@MAEXMK@Z
	DD	FLAT:?ProcessPos@ioDummyChar@@MAEXM@Z
	DD	FLAT:?ProcessDelayState@ioDummyChar@@MAEXM@Z
	DD	FLAT:?ProcessMoveState@ioDummyChar@@MAEXM@Z
	DD	FLAT:?ProcessDashState@ioDummyChar@@MAEXM@Z
	DD	FLAT:?ProcessAttackState@ioDummyChar@@MAEXMK@Z
	DD	FLAT:?ApplyDummyCharSync@ioDummyChar@@UAEXPAVioPlayStage@@AAVSP2Packet@@@Z
	DD	FLAT:?SetDelayState@ioDummyChar@@UAEX_N@Z
	DD	FLAT:?SetMoveState@ioDummyChar@@UAEXXZ
	DD	FLAT:?SetDieState@ioDummyChar@@UAEX_N0@Z
	DD	FLAT:?SetDashState@ioDummyChar@@UAEXXZ
	DD	FLAT:?SetAttackState@ioDummyChar@@UAEXXZ
	DD	FLAT:?DropZoneCheck@ioDummyChar@@MAEXXZ
	DD	FLAT:?SendAttackInfoToSkill@ioDummyChar@@MAEXXZ
	DD	FLAT:?CheckCollisionWeapon@ioDummyChar@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?TranslateMountEntity@ioDummyChar@@MAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?ClearMountEntity@ioDummyChar@@MAEXXZ
	DD	FLAT:?UpdateMountedEntityList@ioDummyChar@@MAEXXZ
	DD	FLAT:?UpdateMountedWeaponList@ioDummyChar@@MAEXXZ
	DD	FLAT:?SetWorldPositionMountEntity@ioDummyChar@@MAEXM@Z
	DD	FLAT:?DummyDieClearMountEntity@ioDummyChar@@MAEXXZ
	DD	FLAT:?IsDummyCharMidSync@ioDummyChar@@UAE_NXZ
	DD	FLAT:?FillDummyCharMidSync@ioDummyChar@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?ApplyDummyCharMidSync@ioDummyChar@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?GetSkillMaxActiveCnt@ioDummyChar@@UAEHXZ
	DD	FLAT:?GetSkillCurActiveCnt@ioDummyChar@@UAEHXZ
	DD	FLAT:?SetDieState@ioOwnerTraceDummy2@@UAEX_N@Z
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??1ioOwnerTraceDummy2@@UAE@XZ
_TEXT	SEGMENT
??1ioOwnerTraceDummy2@@UAE@XZ PROC			; ioOwnerTraceDummy2::~ioOwnerTraceDummy2, COMDAT
; _this$ = ecx

; 15   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ioOwnerTraceDummy2@@6BioPlayEntity@@@
  00006	c7 81 c8 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+456], OFFSET ??_7ioOwnerTraceDummy2@@6BioWorldEventReceiver@@@

; 16   : }

  00010	e9 00 00 00 00	 jmp	 ??1ioDummyChar@@UAE@XZ	; ioDummyChar::~ioDummyChar
??1ioOwnerTraceDummy2@@UAE@XZ ENDP			; ioOwnerTraceDummy2::~ioOwnerTraceDummy2
_TEXT	ENDS
EXTRN	?InitDummyCharInfo@ioDummyChar@@UAEXHKABUD3DXVECTOR3@@0M_N@Z:PROC ; ioDummyChar::InitDummyCharInfo
EXTRN	__fltused:DWORD
; Function compile flags: /Ogsp
;	COMDAT ?InitDummyCharInfo@ioOwnerTraceDummy2@@UAEXHKABUD3DXVECTOR3@@0M_N@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
_dwCreateGapTime$ = 12					; size = 4
_vPos$ = 16						; size = 4
_vScale$ = 20						; size = 4
_fStartAngle$ = 24					; size = 4
_bNetWork$ = 28						; size = 1
?InitDummyCharInfo@ioOwnerTraceDummy2@@UAEXHKABUD3DXVECTOR3@@0M_N@Z PROC ; ioOwnerTraceDummy2::InitDummyCharInfo, COMDAT
; _this$ = ecx

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	__super::InitDummyCharInfo( iIndex, dwCreateGapTime, vPos, vScale, fStartAngle, bNetWork );

  00003	ff 75 1c	 push	 DWORD PTR _bNetWork$[ebp]
  00006	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _fStartAngle$[ebp]
  0000b	51		 push	 ecx
  0000c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00011	ff 75 14	 push	 DWORD PTR _vScale$[ebp]
  00014	ff 75 10	 push	 DWORD PTR _vPos$[ebp]
  00017	ff 75 0c	 push	 DWORD PTR _dwCreateGapTime$[ebp]
  0001a	ff 75 08	 push	 DWORD PTR _iIndex$[ebp]
  0001d	e8 00 00 00 00	 call	 ?InitDummyCharInfo@ioDummyChar@@UAEXHKABUD3DXVECTOR3@@0M_N@Z ; ioDummyChar::InitDummyCharInfo

; 32   : }

  00022	5d		 pop	 ebp
  00023	c2 18 00	 ret	 24			; 00000018H
?InitDummyCharInfo@ioOwnerTraceDummy2@@UAEXHKABUD3DXVECTOR3@@0M_N@Z ENDP ; ioOwnerTraceDummy2::InitDummyCharInfo
_TEXT	ENDS
PUBLIC	?OnProcessChargeAttack@ioOwnerTraceDummy2@@IAEXM@Z ; ioOwnerTraceDummy2::OnProcessChargeAttack
EXTRN	?IsAttackKeyDown@ioBaseChar@@QBE_NXZ:PROC	; ioBaseChar::IsAttackKeyDown
EXTRN	?GetOwner@ioDummyChar@@QBEPAVioBaseChar@@XZ:PROC ; ioDummyChar::GetOwner
; Function compile flags: /Ogsp
;	COMDAT ?OnProcessChargeAttack@ioOwnerTraceDummy2@@IAEXM@Z
_TEXT	SEGMENT
_fTimePerSec$ = 8					; size = 4
?OnProcessChargeAttack@ioOwnerTraceDummy2@@IAEXM@Z PROC	; ioOwnerTraceDummy2::OnProcessChargeAttack, COMDAT
; _this$ = ecx

; 73   : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 74   : 	ioBaseChar *pOwner = GetOwner();

  00004	e8 00 00 00 00	 call	 ?GetOwner@ioDummyChar@@QBEPAVioBaseChar@@XZ ; ioDummyChar::GetOwner
  00009	8b f0		 mov	 esi, eax

; 75   : 	if( !pOwner ) return;

  0000b	85 f6		 test	 esi, esi
  0000d	74 25		 je	 SHORT $LN1@OnProcessC

; 76   : 
; 77   : 	if( pOwner->IsNeedProcess() )

  0000f	8b 06		 mov	 eax, DWORD PTR [esi]
  00011	8b ce		 mov	 ecx, esi
  00013	ff 90 00 01 00
	00		 call	 DWORD PTR [eax+256]
  00019	84 c0		 test	 al, al
  0001b	74 17		 je	 SHORT $LN1@OnProcessC

; 78   : 	{
; 79   : 		if( !pOwner->IsAttackKeyDown() )

  0001d	8b ce		 mov	 ecx, esi
  0001f	e8 00 00 00 00	 call	 ?IsAttackKeyDown@ioBaseChar@@QBE_NXZ ; ioBaseChar::IsAttackKeyDown
  00024	84 c0		 test	 al, al
  00026	75 0c		 jne	 SHORT $LN1@OnProcessC

; 80   : 		{
; 81   : 			SetDelayState( true );

  00028	8b 07		 mov	 eax, DWORD PTR [edi]
  0002a	6a 01		 push	 1
  0002c	8b cf		 mov	 ecx, edi
  0002e	ff 90 14 01 00
	00		 call	 DWORD PTR [eax+276]
$LN1@OnProcessC:

; 82   : 		}
; 83   : 	}
; 84   : }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	c2 04 00	 ret	 4
?OnProcessChargeAttack@ioOwnerTraceDummy2@@IAEXM@Z ENDP	; ioOwnerTraceDummy2::OnProcessChargeAttack
_TEXT	ENDS
PUBLIC	?OnProcessStartState@ioOwnerTraceDummy2@@IAEXXZ	; ioOwnerTraceDummy2::OnProcessStartState
EXTRN	__imp_?GetLoopSec@ioFrameTimer@@QBEKXZ:PROC
EXTRN	__imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?OnProcessStartState@ioOwnerTraceDummy2@@IAEXXZ
_TEXT	SEGMENT
?OnProcessStartState@ioOwnerTraceDummy2@@IAEXXZ PROC	; ioOwnerTraceDummy2::OnProcessStartState, COMDAT
; _this$ = ecx

; 97   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 98   : 	DWORD dwCurTime = FRAMEGETTIME();

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00009	8b c8		 mov	 ecx, eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ

; 99   : 	if( m_dwStartAniEndTime == 0 || m_dwStartAniEndTime < dwCurTime )

  00011	8b 8e e4 06 00
	00		 mov	 ecx, DWORD PTR [esi+1764]
  00017	85 c9		 test	 ecx, ecx
  00019	74 04		 je	 SHORT $LN2@OnProcessS
  0001b	3b c8		 cmp	 ecx, eax
  0001d	73 14		 jae	 SHORT $LN1@OnProcessS
$LN2@OnProcessS:

; 100  : 	{
; 101  : 		SetDelayState( false );

  0001f	8b 06		 mov	 eax, DWORD PTR [esi]
  00021	6a 00		 push	 0
  00023	8b ce		 mov	 ecx, esi
  00025	ff 90 14 01 00
	00		 call	 DWORD PTR [eax+276]

; 102  : 
; 103  : 		ioBaseChar *pOwner = GetOwner();

  0002b	8b ce		 mov	 ecx, esi
  0002d	5e		 pop	 esi
  0002e	e9 00 00 00 00	 jmp	 ?GetOwner@ioDummyChar@@QBEPAVioBaseChar@@XZ ; ioDummyChar::GetOwner
$LN1@OnProcessS:
  00033	5e		 pop	 esi

; 104  : 		if ( !pOwner )
; 105  : 			return;
; 106  : 	}
; 107  : }

  00034	c3		 ret	 0
?OnProcessStartState@ioOwnerTraceDummy2@@IAEXXZ ENDP	; ioOwnerTraceDummy2::OnProcessStartState
_TEXT	ENDS
EXTRN	?RemoveSummonDummyInfo@ioPlayStage@@QAEXH_N@Z:PROC ; ioPlayStage::RemoveSummonDummyInfo
; Function compile flags: /Ogsp
;	COMDAT ?SetDieState@ioOwnerTraceDummy2@@UAEX_N@Z
_TEXT	SEGMENT
_bEffect$ = 8						; size = 1
?SetDieState@ioOwnerTraceDummy2@@UAEX_N@Z PROC		; ioOwnerTraceDummy2::SetDieState, COMDAT
; _this$ = ecx

; 110  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 111  : 	ioBaseChar *pOwner = GetOwner();

  00006	e8 00 00 00 00	 call	 ?GetOwner@ioDummyChar@@QBEPAVioBaseChar@@XZ ; ioDummyChar::GetOwner

; 112  : 	if( !pOwner ) 

  0000b	85 c0		 test	 eax, eax
  0000d	74 23		 je	 SHORT $LN3@SetDieStat

; 113  : 		return;
; 114  : 
; 115  : 	ioPlayStage *pStage = pOwner->GetCreator();

  0000f	8b 88 44 03 00
	00		 mov	 ecx, DWORD PTR [eax+836]

; 116  : 	if( !pStage ) 

  00015	85 c9		 test	 ecx, ecx
  00017	74 19		 je	 SHORT $LN3@SetDieStat

; 117  : 		return;
; 118  : 
; 119  : 	pStage->RemoveSummonDummyInfo( m_iCreateIndex, false );

  00019	6a 00		 push	 0
  0001b	ff b6 dc 01 00
	00		 push	 DWORD PTR [esi+476]
  00021	e8 00 00 00 00	 call	 ?RemoveSummonDummyInfo@ioPlayStage@@QAEXH_N@Z ; ioPlayStage::RemoveSummonDummyInfo

; 120  : 
; 121  : 	ioDummyChar::SetDieState( bEffect );

  00026	6a 00		 push	 0
  00028	ff 75 08	 push	 DWORD PTR _bEffect$[ebp]
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?SetDieState@ioDummyChar@@UAEX_N0@Z ; ioDummyChar::SetDieState
$LN3@SetDieStat:
  00032	5e		 pop	 esi

; 122  : }

  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
?SetDieState@ioOwnerTraceDummy2@@UAEX_N@Z ENDP		; ioOwnerTraceDummy2::SetDieState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsMountingAvailable@ioOwnerTraceDummy2@@UBE_NXZ
_TEXT	SEGMENT
?IsMountingAvailable@ioOwnerTraceDummy2@@UBE_NXZ PROC	; ioOwnerTraceDummy2::IsMountingAvailable, COMDAT
; _this$ = ecx

; 126  : 	return false;

  00000	32 c0		 xor	 al, al

; 127  : }

  00002	c3		 ret	 0
?IsMountingAvailable@ioOwnerTraceDummy2@@UBE_NXZ ENDP	; ioOwnerTraceDummy2::IsMountingAvailable
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsMountAvailable@ioOwnerTraceDummy2@@UBE_NXZ
_TEXT	SEGMENT
?IsMountAvailable@ioOwnerTraceDummy2@@UBE_NXZ PROC	; ioOwnerTraceDummy2::IsMountAvailable, COMDAT
; _this$ = ecx

; 131  : 	return false;

  00000	32 c0		 xor	 al, al

; 132  : }

  00002	c3		 ret	 0
?IsMountAvailable@ioOwnerTraceDummy2@@UBE_NXZ ENDP	; ioOwnerTraceDummy2::IsMountAvailable
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsNowMountEnable@ioOwnerTraceDummy2@@UBE_NXZ
_TEXT	SEGMENT
?IsNowMountEnable@ioOwnerTraceDummy2@@UBE_NXZ PROC	; ioOwnerTraceDummy2::IsNowMountEnable, COMDAT
; _this$ = ecx

; 136  : 	return false;

  00000	32 c0		 xor	 al, al

; 137  : }

  00002	c3		 ret	 0
?IsNowMountEnable@ioOwnerTraceDummy2@@UBE_NXZ ENDP	; ioOwnerTraceDummy2::IsNowMountEnable
; Function compile flags: /Odsp
_TEXT	ENDS
;	COMDAT ??_EioOwnerTraceDummy2@@WBMI@AEPAXI@Z
_TEXT	SEGMENT
??_EioOwnerTraceDummy2@@WBMI@AEPAXI@Z PROC		; [thunk]:ioOwnerTraceDummy2::`vector deleting destructor', COMDAT
  00000	81 e9 c8 01 00
	00		 sub	 ecx, 456		; 000001c8H
  00006	e9 00 00 00 00	 jmp	 ??_EioOwnerTraceDummy2@@UAEPAXI@Z
??_EioOwnerTraceDummy2@@WBMI@AEPAXI@Z ENDP		; [thunk]:ioOwnerTraceDummy2::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.h
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 165  :     D3DXVECTOR3() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	??0D3DXVECTOR3@@QAE@MMM@Z			; D3DXVECTOR3::D3DXVECTOR3
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.inl
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_fz$ = 16						; size = 4
??0D3DXVECTOR3@@QAE@MMM@Z PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 303  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 304  :     x = fx;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00008	8b c1		 mov	 eax, ecx
  0000a	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 305  :     y = fy;

  0000e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00013	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 306  :     z = fz;

  00018	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fz$[ebp]
  0001d	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 307  : }

  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
??0D3DXVECTOR3@@QAE@MMM@Z ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z			; D3DXVECTOR3::operator+
; Function compile flags: /Ogsp
;	COMDAT ??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z PROC			; D3DXVECTOR3::operator+, COMDAT
; _this$ = ecx

; 380  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 381  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  00006	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  0000a	f3 0f 10 09	 movss	 xmm1, DWORD PTR [ecx]
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	0f 5a c0	 cvtps2pd xmm0, xmm0
  00014	0f 5a c9	 cvtps2pd xmm1, xmm1
  00017	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0001b	f3 0f 10 49 04	 movss	 xmm1, DWORD PTR [ecx+4]
  00020	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00024	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00028	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  0002d	0f 5a c0	 cvtps2pd xmm0, xmm0
  00030	0f 5a c9	 cvtps2pd xmm1, xmm1
  00033	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00037	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  0003c	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00040	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
  00045	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  0004a	0f 5a c0	 cvtps2pd xmm0, xmm0
  0004d	0f 5a c9	 cvtps2pd xmm1, xmm1
  00050	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00054	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00058	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 382  : }

  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator+
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iodummychar.h
_TEXT	ENDS
;	COMDAT ?IsDummyCharMidSync@ioDummyChar@@UAE_NXZ
_TEXT	SEGMENT
?IsDummyCharMidSync@ioDummyChar@@UAE_NXZ PROC		; ioDummyChar::IsDummyCharMidSync, COMDAT
; _this$ = ecx

; 742  : 	virtual bool IsDummyCharMidSync(){ return false; }

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?IsDummyCharMidSync@ioDummyChar@@UAE_NXZ ENDP		; ioDummyChar::IsDummyCharMidSync
_TEXT	ENDS
PUBLIC	?EncryptValueToPool@?$CEncrypt@W4TeamType@@@@AAEXPBD@Z ; CEncrypt<enum TeamType>::EncryptValueToPool
EXTRN	?EncryptByte@ccddaabb@@QAEXPBDPADH@Z:PROC	; ccddaabb::EncryptByte
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
;	COMDAT ?EncryptValueToPool@?$CEncrypt@W4TeamType@@@@AAEXPBD@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
?EncryptValueToPool@?$CEncrypt@W4TeamType@@@@AAEXPBD@Z PROC ; CEncrypt<enum TeamType>::EncryptValueToPool, COMDAT
; _this$ = ecx

; 67   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 		m_RC5.EncryptByte( value, m_MemPool, max(m_ValueSize, DEFAULT_ENCRYPT) );

  00003	0f b7 41 06	 movzx	 eax, WORD PTR [ecx+6]
  00007	83 f8 04	 cmp	 eax, 4
  0000a	77 03		 ja	 SHORT $LN4@EncryptVal
  0000c	6a 04		 push	 4
  0000e	58		 pop	 eax
$LN4@EncryptVal:
  0000f	50		 push	 eax
  00010	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  00013	50		 push	 eax
  00014	ff 75 08	 push	 DWORD PTR _value$[ebp]
  00017	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0001a	e8 00 00 00 00	 call	 ?EncryptByte@ccddaabb@@QAEXPBDPADH@Z ; ccddaabb::EncryptByte

; 69   : 		
; 70   : 	}

  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?EncryptValueToPool@?$CEncrypt@W4TeamType@@@@AAEXPBD@Z ENDP ; CEncrypt<enum TeamType>::EncryptValueToPool
_TEXT	ENDS
PUBLIC	??0ioOwnerTraceDummy2@@QAE@PAVioEntityGroup@@PAVioPlayMode@@@Z ; ioOwnerTraceDummy2::ioOwnerTraceDummy2
EXTRN	??0ioDummyChar@@QAE@PAVioEntityGroup@@PAVioPlayMode@@@Z:PROC ; ioDummyChar::ioDummyChar
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioownertracedummy2.cpp
;	COMDAT ??0ioOwnerTraceDummy2@@QAE@PAVioEntityGroup@@PAVioPlayMode@@@Z
_TEXT	SEGMENT
_pGrp$ = 8						; size = 4
_pMode$ = 12						; size = 4
??0ioOwnerTraceDummy2@@QAE@PAVioEntityGroup@@PAVioPlayMode@@@Z PROC ; ioOwnerTraceDummy2::ioOwnerTraceDummy2, COMDAT
; _this$ = ecx

; 10   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 0c	 push	 DWORD PTR _pMode$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 08	 push	 DWORD PTR _pGrp$[ebp]
  0000c	e8 00 00 00 00	 call	 ??0ioDummyChar@@QAE@PAVioEntityGroup@@PAVioPlayMode@@@Z ; ioDummyChar::ioDummyChar
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioOwnerTraceDummy2@@6BioPlayEntity@@@
  00017	c7 86 c8 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+456], OFFSET ??_7ioOwnerTraceDummy2@@6BioWorldEventReceiver@@@

; 11   : }

  00021	8b c6		 mov	 eax, esi
  00023	5e		 pop	 esi
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
??0ioOwnerTraceDummy2@@QAE@PAVioEntityGroup@@PAVioPlayMode@@@Z ENDP ; ioOwnerTraceDummy2::ioOwnerTraceDummy2
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GioOwnerTraceDummy2@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioOwnerTraceDummy2@@UAEPAXI@Z PROC			; ioOwnerTraceDummy2::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioOwnerTraceDummy2@@UAE@XZ ; ioOwnerTraceDummy2::~ioOwnerTraceDummy2
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioOwnerTraceDummy2@@UAEPAXI@Z ENDP			; ioOwnerTraceDummy2::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ProcessPos@ioOwnerTraceDummy2@@IAEXPAVioBaseChar@@M@Z ; ioOwnerTraceDummy2::ProcessPos
EXTRN	__imp_??D@YA?AUD3DXVECTOR3@@ABUD3DXQUATERNION@@ABU0@@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogsp
;	COMDAT ?ProcessPos@ioOwnerTraceDummy2@@IAEXPAVioBaseChar@@M@Z
_TEXT	SEGMENT
$T530821 = -28						; size = 12
_vPos$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_pOwner$ = 8						; size = 4
_fTimePerSec$ = 12					; size = 4
?ProcessPos@ioOwnerTraceDummy2@@IAEXPAVioBaseChar@@M@Z PROC ; ioOwnerTraceDummy2::ProcessPos, COMDAT
; _this$ = ecx

; 87   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _pOwner$[ebp]
  00014	57		 push	 edi
  00015	8b f9		 mov	 edi, ecx

; 88   : 	if( !pOwner )

  00017	85 f6		 test	 esi, esi
  00019	0f 84 96 00 00
	00		 je	 $LN2@ProcessPos

; 89   : 		return;
; 90   : 
; 91   : 	D3DXVECTOR3 vPos = pOwner->GetWorldPosition() + ( pOwner->GetWorldOrientation() * m_vFollowOffset );

  0001f	53		 push	 ebx
  00020	8d 87 84 14 00
	00		 lea	 eax, DWORD PTR [edi+5252]
  00026	50		 push	 eax
  00027	8b 06		 mov	 eax, DWORD PTR [esi]
  00029	8b ce		 mov	 ecx, esi
  0002b	ff 50 74	 call	 DWORD PTR [eax+116]
  0002e	50		 push	 eax
  0002f	8d 45 e4	 lea	 eax, DWORD PTR $T530821[ebp]
  00032	50		 push	 eax
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??D@YA?AUD3DXVECTOR3@@ABUD3DXQUATERNION@@ABU0@@Z
  00039	8b d8		 mov	 ebx, eax
  0003b	8b 06		 mov	 eax, DWORD PTR [esi]
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00040	8b ce		 mov	 ecx, esi
  00042	ff 50 70	 call	 DWORD PTR [eax+112]
  00045	f3 0f 10 48 04	 movss	 xmm1, DWORD PTR [eax+4]
  0004a	f3 0f 10 43 04	 movss	 xmm0, DWORD PTR [ebx+4]
  0004f	f3 0f 10 50 08	 movss	 xmm2, DWORD PTR [eax+8]
  00054	f3 0f 10 1b	 movss	 xmm3, DWORD PTR [ebx]
  00058	0f 5a c9	 cvtps2pd xmm1, xmm1
  0005b	0f 5a c0	 cvtps2pd xmm0, xmm0
  0005e	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00062	f3 0f 10 4b 08	 movss	 xmm1, DWORD PTR [ebx+8]
  00067	0f 5a d2	 cvtps2pd xmm2, xmm2
  0006a	0f 5a c9	 cvtps2pd xmm1, xmm1
  0006d	f2 0f 58 ca	 addsd	 xmm1, xmm2
  00071	f3 0f 10 10	 movss	 xmm2, DWORD PTR [eax]

; 92   : 	SetWorldPosition( vPos );

  00075	8b 07		 mov	 eax, DWORD PTR [edi]
  00077	0f 5a d2	 cvtps2pd xmm2, xmm2
  0007a	8d 4d f0	 lea	 ecx, DWORD PTR _vPos$[ebp]
  0007d	0f 5a db	 cvtps2pd xmm3, xmm3
  00080	f2 0f 58 d3	 addsd	 xmm2, xmm3
  00084	51		 push	 ecx
  00085	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00089	66 0f 5a c9	 cvtpd2ps xmm1, xmm1
  0008d	66 0f 5a d2	 cvtpd2ps xmm2, xmm2
  00091	8b cf		 mov	 ecx, edi
  00093	f3 0f 11 55 f0	 movss	 DWORD PTR _vPos$[ebp], xmm2
  00098	f3 0f 11 45 f4	 movss	 DWORD PTR _vPos$[ebp+4], xmm0
  0009d	f3 0f 11 4d f8	 movss	 DWORD PTR _vPos$[ebp+8], xmm1
  000a2	ff 50 44	 call	 DWORD PTR [eax+68]

; 93   : 	SetWorldOrientation( pOwner->GetWorldOrientation() );

  000a5	8b 06		 mov	 eax, DWORD PTR [esi]
  000a7	8b 1f		 mov	 ebx, DWORD PTR [edi]
  000a9	8b ce		 mov	 ecx, esi
  000ab	ff 50 74	 call	 DWORD PTR [eax+116]
  000ae	50		 push	 eax
  000af	8b cf		 mov	 ecx, edi
  000b1	ff 53 48	 call	 DWORD PTR [ebx+72]
  000b4	5b		 pop	 ebx
$LN2@ProcessPos:

; 94   : }

  000b5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b8	5f		 pop	 edi
  000b9	33 cd		 xor	 ecx, ebp
  000bb	5e		 pop	 esi
  000bc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c1	c9		 leave
  000c2	c2 08 00	 ret	 8
?ProcessPos@ioOwnerTraceDummy2@@IAEXPAVioBaseChar@@M@Z ENDP ; ioOwnerTraceDummy2::ProcessPos
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadFloat_e@$0BA@@ioINILoader@@QAEMAAY0BA@$$CBDM@Z ; ioINILoader::LoadFloat_e<16>
EXTRN	__imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$LoadFloat_e@$0BA@@ioINILoader@@QAEMAAY0BA@$$CBDM@Z
_TEXT	SEGMENT
__k$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_f$ = 12						; size = 4
??$LoadFloat_e@$0BA@@ioINILoader@@QAEMAAY0BA@$$CBDM@Z PROC ; ioINILoader::LoadFloat_e<16>, COMDAT
; _this$ = ecx

; 135  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 136  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 8c 01 00
	00		 je	 $LN96@LoadFloat_
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e8	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 75 01 00
	00		 je	 $LN95@LoadFloat_
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 e9	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 5e 01 00
	00		 je	 $LN94@LoadFloat_
  00042	b1 eb		 mov	 cl, -21			; ffffffebH
  00044	32 d1		 xor	 dl, cl
  00046	88 55 ea	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 46 01 00
	00		 je	 $LN93@LoadFloat_
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 eb	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 2f 01 00
	00		 je	 $LN92@LoadFloat_
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 ec	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 18 01 00
	00		 je	 $LN91@LoadFloat_
  00076	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00079	88 55 ed	 mov	 BYTE PTR __k$[ebp+5], dl
  0007c	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007f	84 d2		 test	 dl, dl
  00081	0f 84 02 01 00
	00		 je	 $LN90@LoadFloat_
  00087	32 d1		 xor	 dl, cl
  00089	88 55 ee	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 ec 00 00
	00		 je	 $LN89@LoadFloat_
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 ef	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 d5 00 00
	00		 je	 $LN88@LoadFloat_
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 f0	 mov	 BYTE PTR __k$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 be 00 00
	00		 je	 $LN87@LoadFloat_
  000b9	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000bc	88 55 f1	 mov	 BYTE PTR __k$[ebp+9], dl
  000bf	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c2	84 d2		 test	 dl, dl
  000c4	0f 84 a8 00 00
	00		 je	 $LN86@LoadFloat_
  000ca	32 d1		 xor	 dl, cl
  000cc	88 55 f2	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	0f 84 92 00 00
	00		 je	 $LN85@LoadFloat_
  000da	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000dd	88 55 f3	 mov	 BYTE PTR __k$[ebp+11], dl
  000e0	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e3	84 d2		 test	 dl, dl
  000e5	74 7f		 je	 SHORT $LN84@LoadFloat_
  000e7	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ea	88 55 f4	 mov	 BYTE PTR __k$[ebp+12], dl
  000ed	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f0	84 d2		 test	 dl, dl
  000f2	74 6c		 je	 SHORT $LN83@LoadFloat_
  000f4	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000f7	88 55 f5	 mov	 BYTE PTR __k$[ebp+13], dl
  000fa	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000fd	84 d2		 test	 dl, dl
  000ff	74 5a		 je	 SHORT $LN82@LoadFloat_
  00101	32 d1		 xor	 dl, cl
  00103	80 78 0f 00	 cmp	 BYTE PTR [eax+15], 0
  00107	88 55 f6	 mov	 BYTE PTR __k$[ebp+14], dl
  0010a	0f 84 a0 00 00
	00		 je	 $LN1@LoadFloat_
  00110	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00113	84 d2		 test	 dl, dl
  00115	74 3e		 je	 SHORT $LN80@LoadFloat_
  00117	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0011a	88 55 f8	 mov	 BYTE PTR __k$[ebp+16], dl
  0011d	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00120	84 d2		 test	 dl, dl
  00122	74 2b		 je	 SHORT $LN79@LoadFloat_
  00124	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00127	88 55 f9	 mov	 BYTE PTR __k$[ebp+17], dl
  0012a	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  0012d	84 d2		 test	 dl, dl
  0012f	74 19		 je	 SHORT $LN78@LoadFloat_
  00131	8a 40 13	 mov	 al, BYTE PTR [eax+19]
  00134	32 d1		 xor	 dl, cl
  00136	88 55 fa	 mov	 BYTE PTR __k$[ebp+18], dl
  00139	84 c0		 test	 al, al
  0013b	74 07		 je	 SHORT $LN77@LoadFloat_
  0013d	34 ea		 xor	 al, -22			; ffffffeaH
  0013f	88 45 fb	 mov	 BYTE PTR __k$[ebp+19], al
  00142	eb 6c		 jmp	 SHORT $LN1@LoadFloat_
$LN77@LoadFloat_:
  00144	c6 45 fb ea	 mov	 BYTE PTR __k$[ebp+19], -22 ; ffffffeaH
  00148	eb 66		 jmp	 SHORT $LN1@LoadFloat_
$LN78@LoadFloat_:
  0014a	88 4d fa	 mov	 BYTE PTR __k$[ebp+18], cl
  0014d	eb 61		 jmp	 SHORT $LN1@LoadFloat_
$LN79@LoadFloat_:
  0014f	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+17], -20 ; ffffffecH
  00153	eb 5b		 jmp	 SHORT $LN1@LoadFloat_
$LN80@LoadFloat_:
  00155	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  00159	eb 55		 jmp	 SHORT $LN1@LoadFloat_
$LN82@LoadFloat_:
  0015b	88 4d f6	 mov	 BYTE PTR __k$[ebp+14], cl
  0015e	eb 50		 jmp	 SHORT $LN1@LoadFloat_
$LN83@LoadFloat_:
  00160	c6 45 f5 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  00164	eb 4a		 jmp	 SHORT $LN1@LoadFloat_
$LN84@LoadFloat_:
  00166	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  0016a	eb 44		 jmp	 SHORT $LN1@LoadFloat_
$LN85@LoadFloat_:
  0016c	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00170	eb 3e		 jmp	 SHORT $LN1@LoadFloat_
$LN86@LoadFloat_:
  00172	88 4d f2	 mov	 BYTE PTR __k$[ebp+10], cl
  00175	eb 39		 jmp	 SHORT $LN1@LoadFloat_
$LN87@LoadFloat_:
  00177	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  0017b	eb 33		 jmp	 SHORT $LN1@LoadFloat_
$LN88@LoadFloat_:
  0017d	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00181	eb 2d		 jmp	 SHORT $LN1@LoadFloat_
$LN89@LoadFloat_:
  00183	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  00187	eb 27		 jmp	 SHORT $LN1@LoadFloat_
$LN90@LoadFloat_:
  00189	88 4d ee	 mov	 BYTE PTR __k$[ebp+6], cl
  0018c	eb 22		 jmp	 SHORT $LN1@LoadFloat_
$LN91@LoadFloat_:
  0018e	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  00192	eb 1c		 jmp	 SHORT $LN1@LoadFloat_
$LN92@LoadFloat_:
  00194	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00198	eb 16		 jmp	 SHORT $LN1@LoadFloat_
$LN93@LoadFloat_:
  0019a	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  0019e	eb 10		 jmp	 SHORT $LN1@LoadFloat_
$LN94@LoadFloat_:
  001a0	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  001a4	eb 0a		 jmp	 SHORT $LN1@LoadFloat_
$LN95@LoadFloat_:
  001a6	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  001aa	eb 04		 jmp	 SHORT $LN1@LoadFloat_
$LN96@LoadFloat_:
  001ac	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadFloat_:
  001b0	6a 03		 push	 3
  001b2	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001b5	c6 45 f7 00	 mov	 BYTE PTR __k$[ebp+15], 0
  001b9	5a		 pop	 edx
$LL104@LoadFloat_:
  001ba	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001c0	83 c0 04	 add	 eax, 4
  001c3	4a		 dec	 edx
  001c4	75 f4		 jne	 SHORT $LL104@LoadFloat_
  001c6	6a 0c		 push	 12			; 0000000cH
  001c8	58		 pop	 eax
$LL101@LoadFloat_:
  001c9	8b c8		 mov	 ecx, eax
  001cb	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  001d1	79 05		 jns	 SHORT $LN111@LoadFloat_
  001d3	49		 dec	 ecx
  001d4	83 c9 fc	 or	 ecx, -4			; fffffffcH
  001d7	41		 inc	 ecx
$LN111@LoadFloat_:
  001d8	b2 ed		 mov	 dl, -19			; ffffffedH
  001da	2a d1		 sub	 dl, cl
  001dc	30 54 05 e8	 xor	 BYTE PTR __k$[ebp+eax], dl
  001e0	40		 inc	 eax
  001e1	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  001e4	7c e3		 jl	 SHORT $LL101@LoadFloat_

; 137  : 		return LoadFloat(_k, f);

  001e6	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _f$[ebp]
  001eb	51		 push	 ecx
  001ec	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f4	50		 push	 eax
  001f5	8b ce		 mov	 ecx, esi
  001f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z

; 138  : 	}

  001fd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00200	33 cd		 xor	 ecx, ebp
  00202	5e		 pop	 esi
  00203	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00208	c9		 leave
  00209	c2 08 00	 ret	 8
??$LoadFloat_e@$0BA@@ioINILoader@@QAEMAAY0BA@$$CBDM@Z ENDP ; ioINILoader::LoadFloat_e<16>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadFloat_e@$0O@@ioINILoader@@QAEMAAY0O@$$CBDM@Z ; ioINILoader::LoadFloat_e<14>
; Function compile flags: /Ogsp
;	COMDAT ??$LoadFloat_e@$0O@@ioINILoader@@QAEMAAY0O@$$CBDM@Z
_TEXT	SEGMENT
__k$ = -24						; size = 14
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_f$ = 12						; size = 4
??$LoadFloat_e@$0O@@ioINILoader@@QAEMAAY0O@$$CBDM@Z PROC ; ioINILoader::LoadFloat_e<14>, COMDAT
; _this$ = ecx

; 135  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 136  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 64 01 00
	00		 je	 $LN96@LoadFloat_@2
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e8	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 4d 01 00
	00		 je	 $LN95@LoadFloat_@2
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 e9	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 36 01 00
	00		 je	 $LN94@LoadFloat_@2
  00042	b1 eb		 mov	 cl, -21			; ffffffebH
  00044	32 d1		 xor	 dl, cl
  00046	88 55 ea	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 1e 01 00
	00		 je	 $LN93@LoadFloat_@2
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 eb	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 07 01 00
	00		 je	 $LN92@LoadFloat_@2
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 ec	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 f0 00 00
	00		 je	 $LN91@LoadFloat_@2
  00076	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00079	88 55 ed	 mov	 BYTE PTR __k$[ebp+5], dl
  0007c	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007f	84 d2		 test	 dl, dl
  00081	0f 84 da 00 00
	00		 je	 $LN90@LoadFloat_@2
  00087	32 d1		 xor	 dl, cl
  00089	88 55 ee	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 c4 00 00
	00		 je	 $LN89@LoadFloat_@2
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 ef	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 ad 00 00
	00		 je	 $LN88@LoadFloat_@2
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 f0	 mov	 BYTE PTR __k$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 96 00 00
	00		 je	 $LN87@LoadFloat_@2
  000b9	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000bc	88 55 f1	 mov	 BYTE PTR __k$[ebp+9], dl
  000bf	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c2	84 d2		 test	 dl, dl
  000c4	0f 84 80 00 00
	00		 je	 $LN86@LoadFloat_@2
  000ca	32 d1		 xor	 dl, cl
  000cc	88 55 f2	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	74 6e		 je	 SHORT $LN85@LoadFloat_@2
  000d6	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d9	88 55 f3	 mov	 BYTE PTR __k$[ebp+11], dl
  000dc	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000df	84 d2		 test	 dl, dl
  000e1	74 5b		 je	 SHORT $LN84@LoadFloat_@2
  000e3	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e6	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000ea	88 55 f4	 mov	 BYTE PTR __k$[ebp+12], dl
  000ed	0f 84 95 00 00
	00		 je	 $LN1@LoadFloat_@2
  000f3	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000f6	84 d2		 test	 dl, dl
  000f8	74 3f		 je	 SHORT $LN82@LoadFloat_@2
  000fa	32 d1		 xor	 dl, cl
  000fc	88 55 f6	 mov	 BYTE PTR __k$[ebp+14], dl
  000ff	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00102	84 d2		 test	 dl, dl
  00104	74 2d		 je	 SHORT $LN81@LoadFloat_@2
  00106	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00109	88 55 f7	 mov	 BYTE PTR __k$[ebp+15], dl
  0010c	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  0010f	84 d2		 test	 dl, dl
  00111	74 1a		 je	 SHORT $LN80@LoadFloat_@2
  00113	8a 40 11	 mov	 al, BYTE PTR [eax+17]
  00116	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00119	88 55 f8	 mov	 BYTE PTR __k$[ebp+16], dl
  0011c	84 c0		 test	 al, al
  0011e	74 07		 je	 SHORT $LN79@LoadFloat_@2
  00120	34 ec		 xor	 al, -20			; ffffffecH
  00122	88 45 f9	 mov	 BYTE PTR __k$[ebp+17], al
  00125	eb 61		 jmp	 SHORT $LN1@LoadFloat_@2
$LN79@LoadFloat_@2:
  00127	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+17], -20 ; ffffffecH
  0012b	eb 5b		 jmp	 SHORT $LN1@LoadFloat_@2
$LN80@LoadFloat_@2:
  0012d	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  00131	eb 55		 jmp	 SHORT $LN1@LoadFloat_@2
$LN81@LoadFloat_@2:
  00133	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00137	eb 4f		 jmp	 SHORT $LN1@LoadFloat_@2
$LN82@LoadFloat_@2:
  00139	88 4d f6	 mov	 BYTE PTR __k$[ebp+14], cl
  0013c	eb 4a		 jmp	 SHORT $LN1@LoadFloat_@2
$LN84@LoadFloat_@2:
  0013e	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00142	eb 44		 jmp	 SHORT $LN1@LoadFloat_@2
$LN85@LoadFloat_@2:
  00144	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00148	eb 3e		 jmp	 SHORT $LN1@LoadFloat_@2
$LN86@LoadFloat_@2:
  0014a	88 4d f2	 mov	 BYTE PTR __k$[ebp+10], cl
  0014d	eb 39		 jmp	 SHORT $LN1@LoadFloat_@2
$LN87@LoadFloat_@2:
  0014f	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  00153	eb 33		 jmp	 SHORT $LN1@LoadFloat_@2
$LN88@LoadFloat_@2:
  00155	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00159	eb 2d		 jmp	 SHORT $LN1@LoadFloat_@2
$LN89@LoadFloat_@2:
  0015b	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  0015f	eb 27		 jmp	 SHORT $LN1@LoadFloat_@2
$LN90@LoadFloat_@2:
  00161	88 4d ee	 mov	 BYTE PTR __k$[ebp+6], cl
  00164	eb 22		 jmp	 SHORT $LN1@LoadFloat_@2
$LN91@LoadFloat_@2:
  00166	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  0016a	eb 1c		 jmp	 SHORT $LN1@LoadFloat_@2
$LN92@LoadFloat_@2:
  0016c	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00170	eb 16		 jmp	 SHORT $LN1@LoadFloat_@2
$LN93@LoadFloat_@2:
  00172	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00176	eb 10		 jmp	 SHORT $LN1@LoadFloat_@2
$LN94@LoadFloat_@2:
  00178	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0017c	eb 0a		 jmp	 SHORT $LN1@LoadFloat_@2
$LN95@LoadFloat_@2:
  0017e	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00182	eb 04		 jmp	 SHORT $LN1@LoadFloat_@2
$LN96@LoadFloat_@2:
  00184	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadFloat_@2:
  00188	6a 03		 push	 3
  0018a	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  0018d	c6 45 f5 00	 mov	 BYTE PTR __k$[ebp+13], 0
  00191	5a		 pop	 edx
$LL104@LoadFloat_@2:
  00192	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00198	83 c0 04	 add	 eax, 4
  0019b	4a		 dec	 edx
  0019c	75 f4		 jne	 SHORT $LL104@LoadFloat_@2

; 137  : 		return LoadFloat(_k, f);

  0019e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _f$[ebp]
  001a3	80 75 f4 ed	 xor	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  001a7	51		 push	 ecx
  001a8	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b0	50		 push	 eax
  001b1	8b ce		 mov	 ecx, esi
  001b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z

; 138  : 	}

  001b9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001bc	33 cd		 xor	 ecx, ebp
  001be	5e		 pop	 esi
  001bf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001c4	c9		 leave
  001c5	c2 08 00	 ret	 8
??$LoadFloat_e@$0O@@ioINILoader@@QAEMAAY0O@$$CBDM@Z ENDP ; ioINILoader::LoadFloat_e<14>
_TEXT	ENDS
PUBLIC	??4?$CEncrypt@W4TeamType@@@@QAE?AW4TeamType@@W41@@Z ; CEncrypt<enum TeamType>::operator=
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
;	COMDAT ??4?$CEncrypt@W4TeamType@@@@QAE?AW4TeamType@@W41@@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
_inValue$ = 8						; size = 4
??4?$CEncrypt@W4TeamType@@@@QAE?AW4TeamType@@W41@@Z PROC ; CEncrypt<enum TeamType>::operator=, COMDAT
; _this$ = ecx

; 2965 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2966 : 		type value = inValue;

  00003	8b 45 08	 mov	 eax, DWORD PTR _inValue$[ebp]
  00006	89 45 08	 mov	 DWORD PTR _value$[ebp], eax

; 2967 : 		EncryptValueToPool((char*)&value);

  00009	8d 45 08	 lea	 eax, DWORD PTR _value$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@W4TeamType@@@@AAEXPBD@Z ; CEncrypt<enum TeamType>::EncryptValueToPool

; 2968 : #ifdef _NOTUSE
; 2969 : 		m_value = inValue;
; 2970 : 		Debug();
; 2971 : #endif
; 2972 : 		return value;

  00012	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]

; 2973 : 	}

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
??4?$CEncrypt@W4TeamType@@@@QAE?AW4TeamType@@W41@@Z ENDP ; CEncrypt<enum TeamType>::operator=
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?LoadProperty@ioDummyChar@@UAEXAAVioINILoader@@@Z:PROC ; ioDummyChar::LoadProperty
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioownertracedummy2.cpp
;	COMDAT ?LoadProperty@ioOwnerTraceDummy2@@UAEXAAVioINILoader@@@Z
_TEXT	SEGMENT
__k$532069 = -24					; size = 14
__k$531944 = -24					; size = 16
__k$531819 = -24					; size = 16
__k$531694 = -24					; size = 16
__$ArrayPad$ = -4					; size = 4
_rkLoader$ = 8						; size = 4
?LoadProperty@ioOwnerTraceDummy2@@UAEXAAVioINILoader@@@Z PROC ; ioOwnerTraceDummy2::LoadProperty, COMDAT
; _this$ = ecx

; 19   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	8b 7d 08	 mov	 edi, DWORD PTR _rkLoader$[ebp]

; 20   : 	ioDummyChar::LoadProperty( rkLoader );

  00016	57		 push	 edi
  00017	8b f1		 mov	 esi, ecx
  00019	e8 00 00 00 00	 call	 ?LoadProperty@ioDummyChar@@UAEXAAVioINILoader@@@Z ; ioDummyChar::LoadProperty

; 21   : 
; 22   : 	m_vFollowOffset.x	= rkLoader.LoadFloat_e( "follow_offset_x", 0.0f );

  0001e	6a 03		 push	 3
  00020	5b		 pop	 ebx
  00021	c7 45 e8 8b 83
	87 86		 mov	 DWORD PTR __k$531694[ebp], -2037939317 ; 8687838bH
  00028	c7 45 ec 82 9b
	b4 85		 mov	 DWORD PTR __k$531694[ebp+4], -2051761278 ; 85b49b82H
  0002f	c7 45 f0 8b 8a
	98 8f		 mov	 DWORD PTR __k$531694[ebp+8], -1885828469 ; 8f988a8bH
  00036	8d 45 e8	 lea	 eax, DWORD PTR __k$531694[ebp]
  00039	c7 45 f4 99 b3
	93 00		 mov	 DWORD PTR __k$531694[ebp+12], 9679769 ; 0093b399H
  00040	8b cb		 mov	 ecx, ebx
$LL106@LoadProper:
  00042	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00048	83 c0 04	 add	 eax, 4
  0004b	49		 dec	 ecx
  0004c	75 f4		 jne	 SHORT $LL106@LoadProper
  0004e	6a 0c		 push	 12			; 0000000cH
  00050	58		 pop	 eax
$LL103@LoadProper:
  00051	8b c8		 mov	 ecx, eax
  00053	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00059	79 05		 jns	 SHORT $LN443@LoadProper
  0005b	49		 dec	 ecx
  0005c	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0005f	41		 inc	 ecx
$LN443@LoadProper:
  00060	b2 ed		 mov	 dl, -19			; ffffffedH
  00062	2a d1		 sub	 dl, cl
  00064	30 54 05 e8	 xor	 BYTE PTR __k$531694[ebp+eax], dl
  00068	40		 inc	 eax
  00069	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  0006c	7c e3		 jl	 SHORT $LL103@LoadProper
  0006e	0f 57 c0	 xorps	 xmm0, xmm0
  00071	51		 push	 ecx
  00072	8d 45 e8	 lea	 eax, DWORD PTR __k$531694[ebp]
  00075	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007a	50		 push	 eax
  0007b	8b cf		 mov	 ecx, edi
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z
  00083	d9 9e 84 14 00
	00		 fstp	 DWORD PTR [esi+5252]

; 23   : 	m_vFollowOffset.y	= rkLoader.LoadFloat_e( "follow_offset_y", 0.0f );

  00089	c7 45 e8 8b 83
	87 86		 mov	 DWORD PTR __k$531819[ebp], -2037939317 ; 8687838bH
  00090	c7 45 ec 82 9b
	b4 85		 mov	 DWORD PTR __k$531819[ebp+4], -2051761278 ; 85b49b82H
  00097	c7 45 f0 8b 8a
	98 8f		 mov	 DWORD PTR __k$531819[ebp+8], -1885828469 ; 8f988a8bH
  0009e	8d 45 e8	 lea	 eax, DWORD PTR __k$531819[ebp]
  000a1	c7 45 f4 99 b3
	92 00		 mov	 DWORD PTR __k$531819[ebp+12], 9614233 ; 0092b399H
  000a8	8b cb		 mov	 ecx, ebx
$LL212@LoadProper:
  000aa	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  000b0	83 c0 04	 add	 eax, 4
  000b3	49		 dec	 ecx
  000b4	75 f4		 jne	 SHORT $LL212@LoadProper
  000b6	6a 0c		 push	 12			; 0000000cH
  000b8	58		 pop	 eax
$LL209@LoadProper:
  000b9	8b c8		 mov	 ecx, eax
  000bb	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  000c1	79 05		 jns	 SHORT $LN444@LoadProper
  000c3	49		 dec	 ecx
  000c4	83 c9 fc	 or	 ecx, -4			; fffffffcH
  000c7	41		 inc	 ecx
$LN444@LoadProper:
  000c8	b2 ed		 mov	 dl, -19			; ffffffedH
  000ca	2a d1		 sub	 dl, cl
  000cc	30 54 05 e8	 xor	 BYTE PTR __k$531819[ebp+eax], dl
  000d0	40		 inc	 eax
  000d1	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  000d4	7c e3		 jl	 SHORT $LL209@LoadProper
  000d6	0f 57 c0	 xorps	 xmm0, xmm0
  000d9	51		 push	 ecx
  000da	8d 45 e8	 lea	 eax, DWORD PTR __k$531819[ebp]
  000dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e2	50		 push	 eax
  000e3	8b cf		 mov	 ecx, edi
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z
  000eb	d9 9e 88 14 00
	00		 fstp	 DWORD PTR [esi+5256]

; 24   : 	m_vFollowOffset.z	= rkLoader.LoadFloat_e( "follow_offset_z", 0.0f );

  000f1	c7 45 e8 8b 83
	87 86		 mov	 DWORD PTR __k$531944[ebp], -2037939317 ; 8687838bH
  000f8	c7 45 ec 82 9b
	b4 85		 mov	 DWORD PTR __k$531944[ebp+4], -2051761278 ; 85b49b82H
  000ff	c7 45 f0 8b 8a
	98 8f		 mov	 DWORD PTR __k$531944[ebp+8], -1885828469 ; 8f988a8bH
  00106	8d 45 e8	 lea	 eax, DWORD PTR __k$531944[ebp]
  00109	c7 45 f4 99 b3
	91 00		 mov	 DWORD PTR __k$531944[ebp+12], 9548697 ; 0091b399H
  00110	8b cb		 mov	 ecx, ebx
$LL318@LoadProper:
  00112	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00118	83 c0 04	 add	 eax, 4
  0011b	49		 dec	 ecx
  0011c	75 f4		 jne	 SHORT $LL318@LoadProper
  0011e	6a 0c		 push	 12			; 0000000cH
  00120	58		 pop	 eax
$LL315@LoadProper:
  00121	8b c8		 mov	 ecx, eax
  00123	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00129	79 05		 jns	 SHORT $LN445@LoadProper
  0012b	49		 dec	 ecx
  0012c	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0012f	41		 inc	 ecx
$LN445@LoadProper:
  00130	b2 ed		 mov	 dl, -19			; ffffffedH
  00132	2a d1		 sub	 dl, cl
  00134	30 54 05 e8	 xor	 BYTE PTR __k$531944[ebp+eax], dl
  00138	40		 inc	 eax
  00139	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  0013c	7c e3		 jl	 SHORT $LL315@LoadProper
  0013e	0f 57 c0	 xorps	 xmm0, xmm0
  00141	51		 push	 ecx
  00142	8d 45 e8	 lea	 eax, DWORD PTR __k$531944[ebp]
  00145	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014a	50		 push	 eax
  0014b	8b cf		 mov	 ecx, edi
  0014d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z
  00153	d9 9e 8c 14 00
	00		 fstp	 DWORD PTR [esi+5260]

; 25   : 	m_fFollowLength		= rkLoader.LoadFloat_e( "follow_length", 0.0f );

  00159	c7 45 e8 8b 83
	87 86		 mov	 DWORD PTR __k$532069[ebp], -2037939317 ; 8687838bH
  00160	c7 45 ec 82 9b
	b4 86		 mov	 DWORD PTR __k$532069[ebp+4], -2034984062 ; 86b49b82H
  00167	c7 45 f0 88 82
	8c 9e		 mov	 DWORD PTR __k$532069[ebp+8], -1634958712 ; 9e8c8288H
  0016e	8d 45 e8	 lea	 eax, DWORD PTR __k$532069[ebp]
  00171	66 c7 45 f4 85
	00		 mov	 WORD PTR __k$532069[ebp+12], 133 ; 00000085H
$LL424@LoadProper:
  00177	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0017d	83 c0 04	 add	 eax, 4
  00180	4b		 dec	 ebx
  00181	75 f4		 jne	 SHORT $LL424@LoadProper
  00183	0f 57 c0	 xorps	 xmm0, xmm0
  00186	80 75 f4 ed	 xor	 BYTE PTR __k$532069[ebp+12], -19 ; ffffffedH
  0018a	51		 push	 ecx
  0018b	8d 45 e8	 lea	 eax, DWORD PTR __k$532069[ebp]
  0018e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00193	50		 push	 eax
  00194	8b cf		 mov	 ecx, edi
  00196	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z
  0019c	d9 9e 80 14 00
	00		 fstp	 DWORD PTR [esi+5248]

; 26   : }

  001a2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a5	5f		 pop	 edi
  001a6	5e		 pop	 esi
  001a7	33 cd		 xor	 ecx, ebp
  001a9	5b		 pop	 ebx
  001aa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001af	c9		 leave
  001b0	c2 04 00	 ret	 4
?LoadProperty@ioOwnerTraceDummy2@@UAEXAAVioINILoader@@@Z ENDP ; ioOwnerTraceDummy2::LoadProperty
_TEXT	ENDS
EXTRN	?ProcessEffectUpdate@ioDummyChar@@IAEXM@Z:PROC	; ioDummyChar::ProcessEffectUpdate
EXTRN	?SendDieState@ioDummyChar@@QAEX_N@Z:PROC	; ioDummyChar::SendDieState
EXTRN	?CheckAttackKeyControl@ioDummyChar@@IAE_NXZ:PROC ; ioDummyChar::CheckAttackKeyControl
EXTRN	?CheckExtraAniJump@ioDummyChar@@IAEXXZ:PROC	; ioDummyChar::CheckExtraAniJump
EXTRN	?CheckReservedSliding@ioDummyChar@@QAEXXZ:PROC	; ioDummyChar::CheckReservedSliding
; Function compile flags: /Ogsp
;	COMDAT ?ProcessState@ioOwnerTraceDummy2@@MAEXMK@Z
_TEXT	SEGMENT
_fTimerPerSec$ = 8					; size = 4
_dwPreTime$ = 12					; size = 4
?ProcessState@ioOwnerTraceDummy2@@MAEXMK@Z PROC		; ioOwnerTraceDummy2::ProcessState, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 36   : 	ioBaseChar* pOwner = GetOwner();

  00007	e8 00 00 00 00	 call	 ?GetOwner@ioDummyChar@@QBEPAVioBaseChar@@XZ ; ioDummyChar::GetOwner
  0000c	8b d8		 mov	 ebx, eax

; 37   : 	if( !pOwner )

  0000e	85 db		 test	 ebx, ebx
  00010	75 10		 jne	 SHORT $LN8@ProcessSta

; 38   : 	{
; 39   : 		SetDieState( false );

  00012	8b 06		 mov	 eax, DWORD PTR [esi]
  00014	53		 push	 ebx
  00015	8b ce		 mov	 ecx, esi
  00017	ff 90 60 01 00
	00		 call	 DWORD PTR [eax+352]

; 40   : 		return;

  0001d	e9 d2 00 00 00	 jmp	 $LN9@ProcessSta
$LN8@ProcessSta:

; 41   : 	}
; 42   : 
; 43   : 	switch( m_State )

  00022	8b 86 30 02 00
	00		 mov	 eax, DWORD PTR [esi+560]
  00028	48		 dec	 eax
  00029	74 52		 je	 SHORT $LN5@ProcessSta
  0002b	48		 dec	 eax
  0002c	74 46		 je	 SHORT $LN4@ProcessSta
  0002e	83 e8 03	 sub	 eax, 3
  00031	74 19		 je	 SHORT $LN3@ProcessSta
  00033	83 e8 03	 sub	 eax, 3
  00036	75 4c		 jne	 SHORT $LN6@ProcessSta

; 56   : 	case DCS_CONTROL_ATTACK:
; 57   : 		OnProcessChargeAttack( fTimerPerSec );

  00038	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fTimerPerSec$[ebp]
  0003d	51		 push	 ecx
  0003e	8b ce		 mov	 ecx, esi
  00040	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00045	e8 00 00 00 00	 call	 ?OnProcessChargeAttack@ioOwnerTraceDummy2@@IAEXM@Z ; ioOwnerTraceDummy2::OnProcessChargeAttack

; 58   : 		break;

  0004a	eb 38		 jmp	 SHORT $LN6@ProcessSta
$LN3@ProcessSta:

; 51   : 	case DCS_ATTACK:
; 52   : 		CheckReservedSliding();

  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ?CheckReservedSliding@ioDummyChar@@QAEXXZ ; ioDummyChar::CheckReservedSliding

; 53   : 		CheckExtraAniJump();

  00053	8b ce		 mov	 ecx, esi
  00055	e8 00 00 00 00	 call	 ?CheckExtraAniJump@ioDummyChar@@IAEXXZ ; ioDummyChar::CheckExtraAniJump

; 54   : 		ProcessAttackState( fTimerPerSec, dwPreTime );

  0005a	ff 75 0c	 push	 DWORD PTR _dwPreTime$[ebp]
  0005d	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fTimerPerSec$[ebp]
  00062	8b 06		 mov	 eax, DWORD PTR [esi]
  00064	51		 push	 ecx
  00065	8b ce		 mov	 ecx, esi
  00067	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006c	ff 90 0c 01 00
	00		 call	 DWORD PTR [eax+268]

; 55   : 		break;

  00072	eb 10		 jmp	 SHORT $LN6@ProcessSta
$LN4@ProcessSta:

; 47   : 		break;
; 48   : 	case DCS_DELAY:
; 49   : 		CheckAttackKeyControl();

  00074	8b ce		 mov	 ecx, esi
  00076	e8 00 00 00 00	 call	 ?CheckAttackKeyControl@ioDummyChar@@IAE_NXZ ; ioDummyChar::CheckAttackKeyControl

; 50   : 		break;

  0007b	eb 07		 jmp	 SHORT $LN6@ProcessSta
$LN5@ProcessSta:

; 44   : 	{
; 45   : 	case DCS_START:
; 46   : 		OnProcessStartState();

  0007d	8b ce		 mov	 ecx, esi
  0007f	e8 00 00 00 00	 call	 ?OnProcessStartState@ioOwnerTraceDummy2@@IAEXXZ ; ioOwnerTraceDummy2::OnProcessStartState
$LN6@ProcessSta:

; 59   : 	}
; 60   : 
; 61   : 
; 62   : 	if( pOwner->IsNeedProcess() && m_dwLifeTime && (DWORD)(m_dwStartTime + m_dwLifeTime) < FRAMEGETTIME() && m_State != DCS_ATTACK )

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	57		 push	 edi
  00087	8b cb		 mov	 ecx, ebx
  00089	ff 90 00 01 00
	00		 call	 DWORD PTR [eax+256]
  0008f	84 c0		 test	 al, al
  00091	74 3b		 je	 SHORT $LN1@ProcessSta
  00093	83 be 10 0b 00
	00 00		 cmp	 DWORD PTR [esi+2832], 0
  0009a	74 32		 je	 SHORT $LN1@ProcessSta
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  000a2	8b c8		 mov	 ecx, eax
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  000aa	8b 8e 14 0b 00
	00		 mov	 ecx, DWORD PTR [esi+2836]
  000b0	03 8e 10 0b 00
	00		 add	 ecx, DWORD PTR [esi+2832]
  000b6	3b c8		 cmp	 ecx, eax
  000b8	73 14		 jae	 SHORT $LN1@ProcessSta
  000ba	83 be 30 02 00
	00 05		 cmp	 DWORD PTR [esi+560], 5
  000c1	74 0b		 je	 SHORT $LN1@ProcessSta

; 63   : 	{
; 64   : 		SendDieState( true );

  000c3	6a 01		 push	 1
  000c5	8b ce		 mov	 ecx, esi
  000c7	e8 00 00 00 00	 call	 ?SendDieState@ioDummyChar@@QAEX_N@Z ; ioDummyChar::SendDieState

; 65   : 		return;

  000cc	eb 25		 jmp	 SHORT $LN11@ProcessSta
$LN1@ProcessSta:

; 66   : 	}
; 67   : 
; 68   : 	ProcessEffectUpdate( fTimerPerSec );

  000ce	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fTimerPerSec$[ebp]
  000d3	51		 push	 ecx
  000d4	8b ce		 mov	 ecx, esi
  000d6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000db	e8 00 00 00 00	 call	 ?ProcessEffectUpdate@ioDummyChar@@IAEXM@Z ; ioDummyChar::ProcessEffectUpdate

; 69   : 	ProcessPos( pOwner, fTimerPerSec );

  000e0	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fTimerPerSec$[ebp]
  000e5	51		 push	 ecx
  000e6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000eb	53		 push	 ebx
  000ec	8b ce		 mov	 ecx, esi
  000ee	e8 00 00 00 00	 call	 ?ProcessPos@ioOwnerTraceDummy2@@IAEXPAVioBaseChar@@M@Z ; ioOwnerTraceDummy2::ProcessPos
$LN11@ProcessSta:
  000f3	5f		 pop	 edi
$LN9@ProcessSta:
  000f4	5e		 pop	 esi
  000f5	5b		 pop	 ebx

; 70   : }

  000f6	5d		 pop	 ebp
  000f7	c2 08 00	 ret	 8
?ProcessState@ioOwnerTraceDummy2@@MAEXMK@Z ENDP		; ioOwnerTraceDummy2::ProcessState
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioplayentity.h
_TEXT	ENDS
;	COMDAT ?SetTeam@ioPlayEntity@@UAEXW4TeamType@@@Z
_TEXT	SEGMENT
_value$532197 = 8					; size = 4
_eType$ = 8						; size = 4
?SetTeam@ioPlayEntity@@UAEXW4TeamType@@@Z PROC		; ioPlayEntity::SetTeam, COMDAT
; _this$ = ecx

; 106  : 	virtual void SetTeam( TeamType eType ) { m_TeamType = eType; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _eType$[ebp]
  00006	89 45 08	 mov	 DWORD PTR _value$532197[ebp], eax
  00009	8d 45 08	 lea	 eax, DWORD PTR _value$532197[ebp]
  0000c	50		 push	 eax
  0000d	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  00013	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@W4TeamType@@@@AAEXPBD@Z ; CEncrypt<enum TeamType>::EncryptValueToPool
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?SetTeam@ioPlayEntity@@UAEXW4TeamType@@@Z ENDP		; ioPlayEntity::SetTeam
_TEXT	ENDS
END
