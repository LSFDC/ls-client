; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioConveyer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
;	COMDAT ?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB DD 01H ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
CONST	ENDS
PUBLIC	?return1@@YAIXZ					; return1
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
;	COMDAT ?return1@@YAIXZ
_TEXT	SEGMENT
?return1@@YAIXZ PROC					; return1, COMDAT

; 17   : 	__forceinline unsigned int return1() { __asm mov eax, 1 };

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?return1@@YAIXZ ENDP					; return1
_TEXT	ENDS
PUBLIC	?return100@@YAIXZ				; return100
; Function compile flags: /Ogsp
;	COMDAT ?return100@@YAIXZ
_TEXT	SEGMENT
?return100@@YAIXZ PROC					; return100, COMDAT

; 25   : 	__forceinline unsigned int return100() { __asm mov eax, 100 };

  00000	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  00005	c3		 ret	 0
?return100@@YAIXZ ENDP					; return100
_TEXT	ENDS
PUBLIC	?GetConveyerDisable@ioBaseChar@@QAE_NXZ		; ioBaseChar::GetConveyerDisable
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iobasechar.h
;	COMDAT ?GetConveyerDisable@ioBaseChar@@QAE_NXZ
_TEXT	SEGMENT
?GetConveyerDisable@ioBaseChar@@QAE_NXZ PROC		; ioBaseChar::GetConveyerDisable, COMDAT
; _this$ = ecx

; 4149 : 	bool GetConveyerDisable() { return m_bDisableConveyer; }

  00000	8a 81 1d 3b 00
	00		 mov	 al, BYTE PTR [ecx+15133]
  00006	c3		 ret	 0
?GetConveyerDisable@ioBaseChar@@QAE_NXZ ENDP		; ioBaseChar::GetConveyerDisable
_TEXT	ENDS
PUBLIC	??_R0?AVioWeapon@@@8				; ioWeapon `RTTI Type Descriptor'
PUBLIC	??_R0?AVioBoundBombWeapon@@@8			; ioBoundBombWeapon `RTTI Type Descriptor'
PUBLIC	?ToBoundBombWeapon@@YAPAVioBoundBombWeapon@@PAVioWeapon@@@Z ; ToBoundBombWeapon
EXTRN	___RTDynamicCast:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R0?AVioWeapon@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioboundbombweapon.h
_DATA	SEGMENT
??_R0?AVioWeapon@@@8 DD FLAT:??_7type_info@@6B@		; ioWeapon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWeapon@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVioBoundBombWeapon@@@8
_DATA	SEGMENT
??_R0?AVioBoundBombWeapon@@@8 DD FLAT:??_7type_info@@6B@ ; ioBoundBombWeapon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioBoundBombWeapon@@', 00H
; Function compile flags: /Ogsp
_DATA	ENDS
;	COMDAT ?ToBoundBombWeapon@@YAPAVioBoundBombWeapon@@PAVioWeapon@@@Z
_TEXT	SEGMENT
_pWeapon$ = 8						; size = 4
?ToBoundBombWeapon@@YAPAVioBoundBombWeapon@@PAVioWeapon@@@Z PROC ; ToBoundBombWeapon, COMDAT

; 123  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 124  : 	if( !pWeapon || pWeapon->GetType() != ioWeapon::WT_BOUNDBOMB )

  00004	8b 75 08	 mov	 esi, DWORD PTR _pWeapon$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 28		 je	 SHORT $LN1@ToBoundBom
  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
  0000d	8b ce		 mov	 ecx, esi
  0000f	ff 90 10 01 00
	00		 call	 DWORD PTR [eax+272]
  00015	83 f8 15	 cmp	 eax, 21			; 00000015H
  00018	75 19		 jne	 SHORT $LN1@ToBoundBom

; 126  : 
; 127  : 	return dynamic_cast< ioBoundBombWeapon* >( pWeapon );

  0001a	6a 00		 push	 0
  0001c	68 00 00 00 00	 push	 OFFSET ??_R0?AVioBoundBombWeapon@@@8
  00021	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWeapon@@@8
  00026	6a 00		 push	 0
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ___RTDynamicCast
  0002e	83 c4 14	 add	 esp, 20			; 00000014H
  00031	eb 02		 jmp	 SHORT $LN3@ToBoundBom
$LN1@ToBoundBom:

; 125  : 		return NULL;

  00033	33 c0		 xor	 eax, eax
$LN3@ToBoundBom:
  00035	5e		 pop	 esi

; 128  : }

  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?ToBoundBombWeapon@@YAPAVioBoundBombWeapon@@PAVioWeapon@@@Z ENDP ; ToBoundBombWeapon
_TEXT	ENDS
PUBLIC	??_R0?AVioMapAttachWeapon@@@8			; ioMapAttachWeapon `RTTI Type Descriptor'
PUBLIC	?ToMapAttachWeapon@@YAPAVioMapAttachWeapon@@PAVioWeapon@@@Z ; ToMapAttachWeapon
;	COMDAT ??_R0?AVioMapAttachWeapon@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomapattachweapon.h
_DATA	SEGMENT
??_R0?AVioMapAttachWeapon@@@8 DD FLAT:??_7type_info@@6B@ ; ioMapAttachWeapon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioMapAttachWeapon@@', 00H
; Function compile flags: /Ogsp
_DATA	ENDS
;	COMDAT ?ToMapAttachWeapon@@YAPAVioMapAttachWeapon@@PAVioWeapon@@@Z
_TEXT	SEGMENT
_pWeapon$ = 8						; size = 4
?ToMapAttachWeapon@@YAPAVioMapAttachWeapon@@PAVioWeapon@@@Z PROC ; ToMapAttachWeapon, COMDAT

; 88   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 89   : 	if( !pWeapon || pWeapon->GetType() != ioWeapon::WT_MAP_ATTACH )

  00004	8b 75 08	 mov	 esi, DWORD PTR _pWeapon$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 28		 je	 SHORT $LN1@ToMapAttac
  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
  0000d	8b ce		 mov	 ecx, esi
  0000f	ff 90 10 01 00
	00		 call	 DWORD PTR [eax+272]
  00015	83 f8 1b	 cmp	 eax, 27			; 0000001bH
  00018	75 19		 jne	 SHORT $LN1@ToMapAttac

; 91   : 
; 92   : 	return dynamic_cast< ioMapAttachWeapon* >( pWeapon );

  0001a	6a 00		 push	 0
  0001c	68 00 00 00 00	 push	 OFFSET ??_R0?AVioMapAttachWeapon@@@8
  00021	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWeapon@@@8
  00026	6a 00		 push	 0
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ___RTDynamicCast
  0002e	83 c4 14	 add	 esp, 20			; 00000014H
  00031	eb 02		 jmp	 SHORT $LN3@ToMapAttac
$LN1@ToMapAttac:

; 90   : 		return NULL;

  00033	33 c0		 xor	 eax, eax
$LN3@ToMapAttac:
  00035	5e		 pop	 esi

; 93   : }

  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?ToMapAttachWeapon@@YAPAVioMapAttachWeapon@@PAVioWeapon@@@Z ENDP ; ToMapAttachWeapon
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	??_R0?AVioMineWeapon@@@8			; ioMineWeapon `RTTI Type Descriptor'
PUBLIC	?ToMineWeapon@@YAPAVioMineWeapon@@PAVioWeapon@@@Z ; ToMineWeapon
;	COMDAT ??_R0?AVioMineWeapon@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomineweapon.h
_DATA	SEGMENT
??_R0?AVioMineWeapon@@@8 DD FLAT:??_7type_info@@6B@	; ioMineWeapon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioMineWeapon@@', 00H
; Function compile flags: /Ogsp
_DATA	ENDS
;	COMDAT ?ToMineWeapon@@YAPAVioMineWeapon@@PAVioWeapon@@@Z
_TEXT	SEGMENT
_pWeapon$ = 8						; size = 4
?ToMineWeapon@@YAPAVioMineWeapon@@PAVioWeapon@@@Z PROC	; ToMineWeapon, COMDAT

; 140  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 141  : 	if( !pWeapon || pWeapon->GetType() != ioWeapon::WT_MINE )

  00004	8b 75 08	 mov	 esi, DWORD PTR _pWeapon$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 28		 je	 SHORT $LN1@ToMineWeap
  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
  0000d	8b ce		 mov	 ecx, esi
  0000f	ff 90 10 01 00
	00		 call	 DWORD PTR [eax+272]
  00015	83 f8 05	 cmp	 eax, 5
  00018	75 19		 jne	 SHORT $LN1@ToMineWeap

; 143  : 
; 144  : 	return dynamic_cast< ioMineWeapon* >( pWeapon );

  0001a	6a 00		 push	 0
  0001c	68 00 00 00 00	 push	 OFFSET ??_R0?AVioMineWeapon@@@8
  00021	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWeapon@@@8
  00026	6a 00		 push	 0
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ___RTDynamicCast
  0002e	83 c4 14	 add	 esp, 20			; 00000014H
  00031	eb 02		 jmp	 SHORT $LN3@ToMineWeap
$LN1@ToMineWeap:

; 142  : 		return NULL;

  00033	33 c0		 xor	 eax, eax
$LN3@ToMineWeap:
  00035	5e		 pop	 esi

; 145  : }

  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?ToMineWeapon@@YAPAVioMineWeapon@@PAVioWeapon@@@Z ENDP	; ToMineWeapon
_TEXT	ENDS
PUBLIC	??_R0?AVioMineWeapon2@@@8			; ioMineWeapon2 `RTTI Type Descriptor'
PUBLIC	?ToMineWeapon2@@YAPAVioMineWeapon2@@PAVioWeapon@@@Z ; ToMineWeapon2
;	COMDAT ??_R0?AVioMineWeapon2@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomineweapon2.h
_DATA	SEGMENT
??_R0?AVioMineWeapon2@@@8 DD FLAT:??_7type_info@@6B@	; ioMineWeapon2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioMineWeapon2@@', 00H
; Function compile flags: /Ogsp
_DATA	ENDS
;	COMDAT ?ToMineWeapon2@@YAPAVioMineWeapon2@@PAVioWeapon@@@Z
_TEXT	SEGMENT
_pWeapon$ = 8						; size = 4
?ToMineWeapon2@@YAPAVioMineWeapon2@@PAVioWeapon@@@Z PROC ; ToMineWeapon2, COMDAT

; 196  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 197  : 	if( !pWeapon || pWeapon->GetType() != ioWeapon::WT_MINE2 )

  00004	8b 75 08	 mov	 esi, DWORD PTR _pWeapon$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 28		 je	 SHORT $LN1@ToMineWeap@2
  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
  0000d	8b ce		 mov	 ecx, esi
  0000f	ff 90 10 01 00
	00		 call	 DWORD PTR [eax+272]
  00015	83 f8 43	 cmp	 eax, 67			; 00000043H
  00018	75 19		 jne	 SHORT $LN1@ToMineWeap@2

; 199  : 
; 200  : 	return dynamic_cast< ioMineWeapon2* >( pWeapon );

  0001a	6a 00		 push	 0
  0001c	68 00 00 00 00	 push	 OFFSET ??_R0?AVioMineWeapon2@@@8
  00021	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWeapon@@@8
  00026	6a 00		 push	 0
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ___RTDynamicCast
  0002e	83 c4 14	 add	 esp, 20			; 00000014H
  00031	eb 02		 jmp	 SHORT $LN3@ToMineWeap@2
$LN1@ToMineWeap@2:

; 198  : 		return NULL;

  00033	33 c0		 xor	 eax, eax
$LN3@ToMineWeap@2:
  00035	5e		 pop	 esi

; 201  : }

  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?ToMineWeapon2@@YAPAVioMineWeapon2@@PAVioWeapon@@@Z ENDP ; ToMineWeapon2
_TEXT	ENDS
PUBLIC	??_R0?AVioMineWeapon3@@@8			; ioMineWeapon3 `RTTI Type Descriptor'
PUBLIC	?ToMineWeapon3@@YAPAVioMineWeapon3@@PAVioWeapon@@@Z ; ToMineWeapon3
;	COMDAT ??_R0?AVioMineWeapon3@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomineweapon3.h
_DATA	SEGMENT
??_R0?AVioMineWeapon3@@@8 DD FLAT:??_7type_info@@6B@	; ioMineWeapon3 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioMineWeapon3@@', 00H
; Function compile flags: /Ogsp
_DATA	ENDS
;	COMDAT ?ToMineWeapon3@@YAPAVioMineWeapon3@@PAVioWeapon@@@Z
_TEXT	SEGMENT
_pWeapon$ = 8						; size = 4
?ToMineWeapon3@@YAPAVioMineWeapon3@@PAVioWeapon@@@Z PROC ; ToMineWeapon3, COMDAT

; 218  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 219  : 	if( !pWeapon || pWeapon->GetType() != ioWeapon::WT_MINE3 )

  00004	8b 75 08	 mov	 esi, DWORD PTR _pWeapon$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 28		 je	 SHORT $LN1@ToMineWeap@3
  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
  0000d	8b ce		 mov	 ecx, esi
  0000f	ff 90 10 01 00
	00		 call	 DWORD PTR [eax+272]
  00015	83 f8 5a	 cmp	 eax, 90			; 0000005aH
  00018	75 19		 jne	 SHORT $LN1@ToMineWeap@3

; 221  : 
; 222  : 	return dynamic_cast< ioMineWeapon3* >( pWeapon );

  0001a	6a 00		 push	 0
  0001c	68 00 00 00 00	 push	 OFFSET ??_R0?AVioMineWeapon3@@@8
  00021	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWeapon@@@8
  00026	6a 00		 push	 0
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ___RTDynamicCast
  0002e	83 c4 14	 add	 esp, 20			; 00000014H
  00031	eb 02		 jmp	 SHORT $LN3@ToMineWeap@3
$LN1@ToMineWeap@3:

; 220  : 		return NULL;

  00033	33 c0		 xor	 eax, eax
$LN3@ToMineWeap@3:
  00035	5e		 pop	 esi

; 223  : }

  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?ToMineWeapon3@@YAPAVioMineWeapon3@@PAVioWeapon@@@Z ENDP ; ToMineWeapon3
_TEXT	ENDS
PUBLIC	??_R0?AVioMineWeapon4@@@8			; ioMineWeapon4 `RTTI Type Descriptor'
PUBLIC	?ToMineWeapon4@@YAPAVioMineWeapon4@@PAVioWeapon@@@Z ; ToMineWeapon4
;	COMDAT ??_R0?AVioMineWeapon4@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomineweapon4.h
_DATA	SEGMENT
??_R0?AVioMineWeapon4@@@8 DD FLAT:??_7type_info@@6B@	; ioMineWeapon4 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioMineWeapon4@@', 00H
; Function compile flags: /Ogsp
_DATA	ENDS
;	COMDAT ?ToMineWeapon4@@YAPAVioMineWeapon4@@PAVioWeapon@@@Z
_TEXT	SEGMENT
_pWeapon$ = 8						; size = 4
?ToMineWeapon4@@YAPAVioMineWeapon4@@PAVioWeapon@@@Z PROC ; ToMineWeapon4, COMDAT

; 145  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 146  : 	if( !pWeapon || pWeapon->GetType() != ioWeapon::WT_MINE4 )

  00004	8b 75 08	 mov	 esi, DWORD PTR _pWeapon$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 28		 je	 SHORT $LN1@ToMineWeap@4
  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
  0000d	8b ce		 mov	 ecx, esi
  0000f	ff 90 10 01 00
	00		 call	 DWORD PTR [eax+272]
  00015	83 f8 61	 cmp	 eax, 97			; 00000061H
  00018	75 19		 jne	 SHORT $LN1@ToMineWeap@4

; 148  : 
; 149  : 	return dynamic_cast< ioMineWeapon4* >( pWeapon );

  0001a	6a 00		 push	 0
  0001c	68 00 00 00 00	 push	 OFFSET ??_R0?AVioMineWeapon4@@@8
  00021	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWeapon@@@8
  00026	6a 00		 push	 0
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ___RTDynamicCast
  0002e	83 c4 14	 add	 esp, 20			; 00000014H
  00031	eb 02		 jmp	 SHORT $LN3@ToMineWeap@4
$LN1@ToMineWeap@4:

; 147  : 		return NULL;

  00033	33 c0		 xor	 eax, eax
$LN3@ToMineWeap@4:
  00035	5e		 pop	 esi

; 150  : }

  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?ToMineWeapon4@@YAPAVioMineWeapon4@@PAVioWeapon@@@Z ENDP ; ToMineWeapon4
_TEXT	ENDS
PUBLIC	?GetResultList@FL_CollisionPlayEntity@@QBEABV?$list@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@XZ ; FL_CollisionPlayEntity::GetResultList
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\findlistpredicateimpl.h
;	COMDAT ?GetResultList@FL_CollisionPlayEntity@@QBEABV?$list@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@XZ
_TEXT	SEGMENT
?GetResultList@FL_CollisionPlayEntity@@QBEABV?$list@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@XZ PROC ; FL_CollisionPlayEntity::GetResultList, COMDAT
; _this$ = ecx

; 17   : 	const PlayEntityList& GetResultList() const { return m_ResultList; }

  00000	8d 41 4c	 lea	 eax, DWORD PTR [ecx+76]
  00003	c3		 ret	 0
?GetResultList@FL_CollisionPlayEntity@@QBEABV?$list@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@XZ ENDP ; FL_CollisionPlayEntity::GetResultList
_TEXT	ENDS
PUBLIC	??_7ioConveyer@@6B@				; ioConveyer::`vftable'
PUBLIC	??1ioConveyer@@UAE@XZ				; ioConveyer::~ioConveyer
PUBLIC	??_R4ioConveyer@@6B@				; ioConveyer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioConveyer@@@8				; ioConveyer `RTTI Type Descriptor'
PUBLIC	??_R3ioConveyer@@8				; ioConveyer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioConveyer@@8				; ioConveyer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioConveyer@@8			; ioConveyer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioPlayEntity@@8			; ioPlayEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioPlayEntity@@@8			; ioPlayEntity `RTTI Type Descriptor'
PUBLIC	??_R3ioPlayEntity@@8				; ioPlayEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioPlayEntity@@8				; ioPlayEntity::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioGameEntity@@8			; ioGameEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioGameEntity@@@8			; ioGameEntity `RTTI Type Descriptor'
PUBLIC	??_R3ioGameEntity@@8				; ioGameEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioGameEntity@@8				; ioGameEntity::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioEntityEvent@@8			; ioEntityEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioEntityEvent@@@8			; ioEntityEvent `RTTI Type Descriptor'
PUBLIC	??_R3ioEntityEvent@@8				; ioEntityEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioEntityEvent@@8				; ioEntityEvent::`RTTI Base Class Array'
PUBLIC	?Update@ioConveyer@@UAEXMKK@Z			; ioConveyer::Update
PUBLIC	?UpdateAfter@ioConveyer@@UAEXM@Z		; ioConveyer::UpdateAfter
PUBLIC	?IsMountingAvailable@ioConveyer@@UBE_NXZ	; ioConveyer::IsMountingAvailable
PUBLIC	?UpdateBottomHeight@ioConveyer@@MBEXXZ		; ioConveyer::UpdateBottomHeight
PUBLIC	?NeedUpdateBottomHeight@ioGameEntity@@UAEXXZ	; ioGameEntity::NeedUpdateBottomHeight
PUBLIC	?ApplyWeapon@ioConveyer@@UAE?AW4ApplyWeaponExp@@PAVioWeapon@@@Z ; ioConveyer::ApplyWeapon
PUBLIC	?IsCollisionAvailableWeapon@ioConveyer@@UAE_NPAVioWeapon@@@Z ; ioConveyer::IsCollisionAvailableWeapon
PUBLIC	?IsEntityCollisionSkipState@ioConveyer@@UBE_NPAVioGameEntity@@@Z ; ioConveyer::IsEntityCollisionSkipState
PUBLIC	?IsWoundedCollision@ioConveyer@@UBE_NABVioOrientBox@@PAUD3DXVECTOR3@@@Z ; ioConveyer::IsWoundedCollision
PUBLIC	?GetSubType@ioConveyer@@UBE?AW4PlaySubType@ioPlayEntity@@XZ ; ioConveyer::GetSubType
PUBLIC	?GetArmorType@ioConveyer@@UBE?AW4ArmorType@@XZ	; ioConveyer::GetArmorType
PUBLIC	?DontMoveEntityLevel@ioConveyer@@UBEHXZ		; ioConveyer::DontMoveEntityLevel
PUBLIC	?LoadProperty@ioConveyer@@UAEXAAVioINILoader@@@Z ; ioConveyer::LoadProperty
PUBLIC	?SetTeam@ioPlayEntity@@UAEXW4TeamType@@@Z	; ioPlayEntity::SetTeam
EXTRN	??1ioPlayEntity@@UAE@XZ:PROC			; ioPlayEntity::~ioPlayEntity
EXTRN	?AddEntityEvent@ioEntityEvent@@UAEXPAVioEntity@@@Z:PROC ; ioEntityEvent::AddEntityEvent
EXTRN	??_EioConveyer@@UAEPAXI@Z:PROC			; ioConveyer::`vector deleting destructor'
EXTRN	?GetTypeID@ioPlayEntity@@UBEHXZ:PROC		; ioPlayEntity::GetTypeID
EXTRN	?IsNeedCheckMapCollision@ioGameEntity@@UBE_NXZ:PROC ; ioGameEntity::IsNeedCheckMapCollision
EXTRN	?IsMountAvailable@ioGameEntity@@UBE_NXZ:PROC	; ioGameEntity::IsMountAvailable
EXTRN	?IsNowMountEnable@ioGameEntity@@UBE_NXZ:PROC	; ioGameEntity::IsNowMountEnable
EXTRN	?IsAllWeaponDefence@ioGameEntity@@UBE_NXZ:PROC	; ioGameEntity::IsAllWeaponDefence
EXTRN	?HasEntity@ioGameEntity@@UAE_NABVioHashString@@@Z:PROC ; ioGameEntity::HasEntity
EXTRN	?AddEntity@ioGameEntity@@UAEPAVioEntity@@ABVioHashString@@@Z:PROC ; ioGameEntity::AddEntity
EXTRN	?DestroyEntity@ioGameEntity@@UAE_NABVioHashString@@@Z:PROC ; ioGameEntity::DestroyEntity
EXTRN	?GetEntity@ioGameEntity@@UAEPAVioEntity@@ABVioHashString@@@Z:PROC ; ioGameEntity::GetEntity
EXTRN	?UpdateBound@ioGameEntity@@MBEXXZ:PROC		; ioGameEntity::UpdateBound
EXTRN	?SetWorldPosition@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z:PROC ; ioGameEntity::SetWorldPosition
EXTRN	?SetWorldOrientation@ioGameEntity@@UAEXABUD3DXQUATERNION@@@Z:PROC ; ioGameEntity::SetWorldOrientation
EXTRN	?SetWorldScale@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z:PROC ; ioGameEntity::SetWorldScale
EXTRN	?Translate@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z:PROC ; ioGameEntity::Translate
EXTRN	?TranslateByConveyer@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z:PROC ; ioGameEntity::TranslateByConveyer
EXTRN	?TranslateByWorldEntity@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z:PROC ; ioGameEntity::TranslateByWorldEntity
EXTRN	?MapCollisionPushingTranslate@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z:PROC ; ioGameEntity::MapCollisionPushingTranslate
EXTRN	?DontMoveCollisionPushingTranslate@ioGameEntity@@UAEXPAV1@ABUD3DXVECTOR3@@@Z:PROC ; ioGameEntity::DontMoveCollisionPushingTranslate
EXTRN	?Rotate@ioGameEntity@@UAEXABUD3DXVECTOR3@@MW4TransformSpace@ioNode@@@Z:PROC ; ioGameEntity::Rotate
EXTRN	?Scale@ioGameEntity@@UAEXMMM@Z:PROC		; ioGameEntity::Scale
EXTRN	?Scale@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z:PROC ; ioGameEntity::Scale
EXTRN	?GetWorldPosition@ioGameEntity@@UBEABUD3DXVECTOR3@@XZ:PROC ; ioGameEntity::GetWorldPosition
EXTRN	?GetWorldOrientation@ioGameEntity@@UBEABUD3DXQUATERNION@@XZ:PROC ; ioGameEntity::GetWorldOrientation
EXTRN	?GetWorldScale@ioGameEntity@@UBEABUD3DXVECTOR3@@XZ:PROC ; ioGameEntity::GetWorldScale
EXTRN	?IsCollisionAvailableRange@ioPlayEntity@@UAE_NPAVioWeapon@@@Z:PROC ; ioPlayEntity::IsCollisionAvailableRange
EXTRN	?IsCharCollisionSkipState@ioPlayEntity@@UBE_NW4TeamType@@H@Z:PROC ; ioPlayEntity::IsCharCollisionSkipState
EXTRN	?GetAttackCollisionBox@ioPlayEntity@@UAE?AVioOrientBox@@W4AniCollisionType@@_N@Z:PROC ; ioPlayEntity::GetAttackCollisionBox
EXTRN	?CheckSphereDistance@ioPlayEntity@@UBE_NABUD3DXVECTOR3@@MAAM@Z:PROC ; ioPlayEntity::CheckSphereDistance
EXTRN	?CheckSpherePoint@ioPlayEntity@@UBE_NABUD3DXVECTOR3@@MAAU2@@Z:PROC ; ioPlayEntity::CheckSpherePoint
EXTRN	?CheckCylinderPoint@ioPlayEntity@@UBE_NABVioCylinder@@ABUD3DXVECTOR3@@AAU3@@Z:PROC ; ioPlayEntity::CheckCylinderPoint
EXTRN	?NotifyDontMoveCollisionPushingSkip@ioPlayEntity@@UAEXPAVioGameEntity@@@Z:PROC ; ioPlayEntity::NotifyDontMoveCollisionPushingSkip
EXTRN	?GetWorldEventReceiver@ioPlayEntity@@UAEPAVioWorldEventReceiver@@XZ:PROC ; ioPlayEntity::GetWorldEventReceiver
EXTRN	?Revival@ioPlayEntity@@UAEXXZ:PROC		; ioPlayEntity::Revival
EXTRN	?UpdateGauge@ioPlayEntity@@UAEXXZ:PROC		; ioPlayEntity::UpdateGauge
EXTRN	?RenderGauge@ioPlayEntity@@UAEXXZ:PROC		; ioPlayEntity::RenderGauge
EXTRN	?FillMaxHP@ioPlayEntity@@UAEXXZ:PROC		; ioPlayEntity::FillMaxHP
EXTRN	?ProcessRecovery@ioPlayEntity@@MAEXXZ:PROC	; ioPlayEntity::ProcessRecovery
EXTRN	?AddHeadDamageInfo@ioPlayEntity@@UAEXH_N@Z:PROC	; ioPlayEntity::AddHeadDamageInfo
EXTRN	?RenderHeadInfoList@ioPlayEntity@@UAEXHH@Z:PROC	; ioPlayEntity::RenderHeadInfoList
EXTRN	?UpdateHeadInfoList@ioPlayEntity@@MAEXK@Z:PROC	; ioPlayEntity::UpdateHeadInfoList
;	COMDAT ??_R2ioEntityEvent@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioconveyer.cpp
rdata$r	SEGMENT
??_R2ioEntityEvent@@8 DD FLAT:??_R1A@?0A@EA@ioEntityEvent@@8 ; ioEntityEvent::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioEntityEvent@@8
rdata$r	SEGMENT
??_R3ioEntityEvent@@8 DD 00H				; ioEntityEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioEntityEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioEntityEvent@@@8
_DATA	SEGMENT
??_R0?AVioEntityEvent@@@8 DD FLAT:??_7type_info@@6B@	; ioEntityEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioEntityEvent@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioEntityEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioEntityEvent@@8 DD FLAT:??_R0?AVioEntityEvent@@@8 ; ioEntityEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioEntityEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2ioGameEntity@@8
rdata$r	SEGMENT
??_R2ioGameEntity@@8 DD FLAT:??_R1A@?0A@EA@ioGameEntity@@8 ; ioGameEntity::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioEntityEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3ioGameEntity@@8
rdata$r	SEGMENT
??_R3ioGameEntity@@8 DD 00H				; ioGameEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioGameEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioGameEntity@@@8
_DATA	SEGMENT
??_R0?AVioGameEntity@@@8 DD FLAT:??_7type_info@@6B@	; ioGameEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioGameEntity@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioGameEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioGameEntity@@8 DD FLAT:??_R0?AVioGameEntity@@@8 ; ioGameEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioGameEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2ioPlayEntity@@8
rdata$r	SEGMENT
??_R2ioPlayEntity@@8 DD FLAT:??_R1A@?0A@EA@ioPlayEntity@@8 ; ioPlayEntity::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioGameEntity@@8
	DD	FLAT:??_R1A@?0A@EA@ioEntityEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3ioPlayEntity@@8
rdata$r	SEGMENT
??_R3ioPlayEntity@@8 DD 00H				; ioPlayEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ioPlayEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioPlayEntity@@@8
_DATA	SEGMENT
??_R0?AVioPlayEntity@@@8 DD FLAT:??_7type_info@@6B@	; ioPlayEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioPlayEntity@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioPlayEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioPlayEntity@@8 DD FLAT:??_R0?AVioPlayEntity@@@8 ; ioPlayEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioPlayEntity@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioConveyer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioConveyer@@8 DD FLAT:??_R0?AVioConveyer@@@8 ; ioConveyer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioConveyer@@8
rdata$r	ENDS
;	COMDAT ??_R2ioConveyer@@8
rdata$r	SEGMENT
??_R2ioConveyer@@8 DD FLAT:??_R1A@?0A@EA@ioConveyer@@8	; ioConveyer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioPlayEntity@@8
	DD	FLAT:??_R1A@?0A@EA@ioGameEntity@@8
	DD	FLAT:??_R1A@?0A@EA@ioEntityEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3ioConveyer@@8
rdata$r	SEGMENT
??_R3ioConveyer@@8 DD 00H				; ioConveyer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2ioConveyer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioConveyer@@@8
_DATA	SEGMENT
??_R0?AVioConveyer@@@8 DD FLAT:??_7type_info@@6B@	; ioConveyer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioConveyer@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioConveyer@@6B@
rdata$r	SEGMENT
??_R4ioConveyer@@6B@ DD 00H				; ioConveyer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioConveyer@@@8
	DD	FLAT:??_R3ioConveyer@@8
rdata$r	ENDS
;	COMDAT ??_7ioConveyer@@6B@
CONST	SEGMENT
??_7ioConveyer@@6B@ DD FLAT:??_R4ioConveyer@@6B@	; ioConveyer::`vftable'
	DD	FLAT:?AddEntityEvent@ioEntityEvent@@UAEXPAVioEntity@@@Z
	DD	FLAT:??_EioConveyer@@UAEPAXI@Z
	DD	FLAT:?Update@ioConveyer@@UAEXMKK@Z
	DD	FLAT:?UpdateAfter@ioConveyer@@UAEXM@Z
	DD	FLAT:?GetTypeID@ioPlayEntity@@UBEHXZ
	DD	FLAT:?IsNeedCheckMapCollision@ioGameEntity@@UBE_NXZ
	DD	FLAT:?IsMountAvailable@ioGameEntity@@UBE_NXZ
	DD	FLAT:?IsMountingAvailable@ioConveyer@@UBE_NXZ
	DD	FLAT:?IsNowMountEnable@ioGameEntity@@UBE_NXZ
	DD	FLAT:?IsAllWeaponDefence@ioGameEntity@@UBE_NXZ
	DD	FLAT:?HasEntity@ioGameEntity@@UAE_NABVioHashString@@@Z
	DD	FLAT:?AddEntity@ioGameEntity@@UAEPAVioEntity@@ABVioHashString@@@Z
	DD	FLAT:?DestroyEntity@ioGameEntity@@UAE_NABVioHashString@@@Z
	DD	FLAT:?GetEntity@ioGameEntity@@UAEPAVioEntity@@ABVioHashString@@@Z
	DD	FLAT:?UpdateBound@ioGameEntity@@MBEXXZ
	DD	FLAT:?UpdateBottomHeight@ioConveyer@@MBEXXZ
	DD	FLAT:?NeedUpdateBottomHeight@ioGameEntity@@UAEXXZ
	DD	FLAT:?SetWorldPosition@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?SetWorldOrientation@ioGameEntity@@UAEXABUD3DXQUATERNION@@@Z
	DD	FLAT:?SetWorldScale@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?Translate@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?TranslateByConveyer@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?TranslateByWorldEntity@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?MapCollisionPushingTranslate@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?DontMoveCollisionPushingTranslate@ioGameEntity@@UAEXPAV1@ABUD3DXVECTOR3@@@Z
	DD	FLAT:?Rotate@ioGameEntity@@UAEXABUD3DXVECTOR3@@MW4TransformSpace@ioNode@@@Z
	DD	FLAT:?Scale@ioGameEntity@@UAEXMMM@Z
	DD	FLAT:?Scale@ioGameEntity@@UAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?GetWorldPosition@ioGameEntity@@UBEABUD3DXVECTOR3@@XZ
	DD	FLAT:?GetWorldOrientation@ioGameEntity@@UBEABUD3DXQUATERNION@@XZ
	DD	FLAT:?GetWorldScale@ioGameEntity@@UBEABUD3DXVECTOR3@@XZ
	DD	FLAT:?ApplyWeapon@ioConveyer@@UAE?AW4ApplyWeaponExp@@PAVioWeapon@@@Z
	DD	FLAT:?IsCollisionAvailableWeapon@ioConveyer@@UAE_NPAVioWeapon@@@Z
	DD	FLAT:?IsCollisionAvailableRange@ioPlayEntity@@UAE_NPAVioWeapon@@@Z
	DD	FLAT:?IsEntityCollisionSkipState@ioConveyer@@UBE_NPAVioGameEntity@@@Z
	DD	FLAT:?IsCharCollisionSkipState@ioPlayEntity@@UBE_NW4TeamType@@H@Z
	DD	FLAT:?IsWoundedCollision@ioConveyer@@UBE_NABVioOrientBox@@PAUD3DXVECTOR3@@@Z
	DD	FLAT:?GetAttackCollisionBox@ioPlayEntity@@UAE?AVioOrientBox@@W4AniCollisionType@@_N@Z
	DD	FLAT:?CheckSphereDistance@ioPlayEntity@@UBE_NABUD3DXVECTOR3@@MAAM@Z
	DD	FLAT:?CheckSpherePoint@ioPlayEntity@@UBE_NABUD3DXVECTOR3@@MAAU2@@Z
	DD	FLAT:?CheckCylinderPoint@ioPlayEntity@@UBE_NABVioCylinder@@ABUD3DXVECTOR3@@AAU3@@Z
	DD	FLAT:?GetSubType@ioConveyer@@UBE?AW4PlaySubType@ioPlayEntity@@XZ
	DD	FLAT:?GetArmorType@ioConveyer@@UBE?AW4ArmorType@@XZ
	DD	FLAT:?DontMoveEntityLevel@ioConveyer@@UBEHXZ
	DD	FLAT:?NotifyDontMoveCollisionPushingSkip@ioPlayEntity@@UAEXPAVioGameEntity@@@Z
	DD	FLAT:?LoadProperty@ioConveyer@@UAEXAAVioINILoader@@@Z
	DD	FLAT:?GetWorldEventReceiver@ioPlayEntity@@UAEPAVioWorldEventReceiver@@XZ
	DD	FLAT:?Revival@ioPlayEntity@@UAEXXZ
	DD	FLAT:?UpdateGauge@ioPlayEntity@@UAEXXZ
	DD	FLAT:?RenderGauge@ioPlayEntity@@UAEXXZ
	DD	FLAT:?FillMaxHP@ioPlayEntity@@UAEXXZ
	DD	FLAT:?ProcessRecovery@ioPlayEntity@@MAEXXZ
	DD	FLAT:?AddHeadDamageInfo@ioPlayEntity@@UAEXH_N@Z
	DD	FLAT:?RenderHeadInfoList@ioPlayEntity@@UAEXHH@Z
	DD	FLAT:?UpdateHeadInfoList@ioPlayEntity@@MAEXK@Z
	DD	FLAT:?SetTeam@ioPlayEntity@@UAEXW4TeamType@@@Z
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??1ioConveyer@@UAE@XZ
_TEXT	SEGMENT
??1ioConveyer@@UAE@XZ PROC				; ioConveyer::~ioConveyer, COMDAT
; _this$ = ecx

; 28   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ioConveyer@@6B@

; 29   : }

  00006	e9 00 00 00 00	 jmp	 ??1ioPlayEntity@@UAE@XZ	; ioPlayEntity::~ioPlayEntity
??1ioConveyer@@UAE@XZ ENDP				; ioConveyer::~ioConveyer
_TEXT	ENDS
EXTRN	?UpdateAfter@ioGameEntity@@UAEXM@Z:PROC		; ioGameEntity::UpdateAfter
EXTRN	__fltused:DWORD
; Function compile flags: /Ogsp
;	COMDAT ?UpdateAfter@ioConveyer@@UAEXM@Z
_TEXT	SEGMENT
_fFrameGap$ = 8						; size = 4
?UpdateAfter@ioConveyer@@UAEXM@Z PROC			; ioConveyer::UpdateAfter, COMDAT
; _this$ = ecx

; 107  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 108  : 	if( m_pGroup )

  00006	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  0000a	74 13		 je	 SHORT $LN1@UpdateAfte

; 109  : 	{
; 110  : 		m_pGroup->Update( fFrameGap );

  0000c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0000f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fFrameGap$[ebp]
  00014	8b 01		 mov	 eax, DWORD PTR [ecx]
  00016	51		 push	 ecx
  00017	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001c	ff 50 40	 call	 DWORD PTR [eax+64]
$LN1@UpdateAfte:

; 111  : 	}
; 112  : 
; 113  : 	ioPlayEntity::UpdateAfter( fFrameGap );

  0001f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fFrameGap$[ebp]
  00024	51		 push	 ecx
  00025	8b ce		 mov	 ecx, esi
  00027	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002c	e8 00 00 00 00	 call	 ?UpdateAfter@ioGameEntity@@UAEXM@Z ; ioGameEntity::UpdateAfter
  00031	5e		 pop	 esi

; 114  : }

  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
?UpdateAfter@ioConveyer@@UAEXM@Z ENDP			; ioConveyer::UpdateAfter
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsMountingAvailable@ioConveyer@@UBE_NXZ
_TEXT	SEGMENT
?IsMountingAvailable@ioConveyer@@UBE_NXZ PROC		; ioConveyer::IsMountingAvailable, COMDAT
; _this$ = ecx

; 118  : 	return false;

  00000	32 c0		 xor	 al, al

; 119  : }

  00002	c3		 ret	 0
?IsMountingAvailable@ioConveyer@@UBE_NXZ ENDP		; ioConveyer::IsMountingAvailable
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?UpdateBottomHeight@ioConveyer@@MBEXXZ
_TEXT	SEGMENT
?UpdateBottomHeight@ioConveyer@@MBEXXZ PROC		; ioConveyer::UpdateBottomHeight, COMDAT
; _this$ = ecx

; 122  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 123  : 	m_fCurBottomHeight = GetWorldPosition().y;

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 50 70	 call	 DWORD PTR [eax+112]
  00008	d9 40 04	 fld	 DWORD PTR [eax+4]
  0000b	d9 9e 84 00 00
	00		 fstp	 DWORD PTR [esi+132]
  00011	5e		 pop	 esi

; 124  : }

  00012	c3		 ret	 0
?UpdateBottomHeight@ioConveyer@@MBEXXZ ENDP		; ioConveyer::UpdateBottomHeight
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?ApplyWeapon@ioConveyer@@UAE?AW4ApplyWeaponExp@@PAVioWeapon@@@Z
_TEXT	SEGMENT
_pWeapon$ = 8						; size = 4
?ApplyWeapon@ioConveyer@@UAE?AW4ApplyWeaponExp@@PAVioWeapon@@@Z PROC ; ioConveyer::ApplyWeapon, COMDAT
; _this$ = ecx

; 128  : 	return AWE_NO_EXPLOSION;

  00000	33 c0		 xor	 eax, eax

; 129  : }

  00002	c2 04 00	 ret	 4
?ApplyWeapon@ioConveyer@@UAE?AW4ApplyWeaponExp@@PAVioWeapon@@@Z ENDP ; ioConveyer::ApplyWeapon
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsCollisionAvailableWeapon@ioConveyer@@UAE_NPAVioWeapon@@@Z
_TEXT	SEGMENT
_pWeapon$ = 8						; size = 4
?IsCollisionAvailableWeapon@ioConveyer@@UAE_NPAVioWeapon@@@Z PROC ; ioConveyer::IsCollisionAvailableWeapon, COMDAT
; _this$ = ecx

; 133  : 	return false;

  00000	32 c0		 xor	 al, al

; 134  : }

  00002	c2 04 00	 ret	 4
?IsCollisionAvailableWeapon@ioConveyer@@UAE_NPAVioWeapon@@@Z ENDP ; ioConveyer::IsCollisionAvailableWeapon
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsEntityCollisionSkipState@ioConveyer@@UBE_NPAVioGameEntity@@@Z
_TEXT	SEGMENT
_pColEntity$ = 8					; size = 4
?IsEntityCollisionSkipState@ioConveyer@@UBE_NPAVioGameEntity@@@Z PROC ; ioConveyer::IsEntityCollisionSkipState, COMDAT
; _this$ = ecx

; 138  : 	return true;

  00000	b0 01		 mov	 al, 1

; 139  : }

  00002	c2 04 00	 ret	 4
?IsEntityCollisionSkipState@ioConveyer@@UBE_NPAVioGameEntity@@@Z ENDP ; ioConveyer::IsEntityCollisionSkipState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsWoundedCollision@ioConveyer@@UBE_NABVioOrientBox@@PAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_rkAttackBox$ = 8					; size = 4
_pColPoint$ = 12					; size = 4
?IsWoundedCollision@ioConveyer@@UBE_NABVioOrientBox@@PAUD3DXVECTOR3@@@Z PROC ; ioConveyer::IsWoundedCollision, COMDAT
; _this$ = ecx

; 143  : 	return false;

  00000	32 c0		 xor	 al, al

; 144  : }

  00002	c2 08 00	 ret	 8
?IsWoundedCollision@ioConveyer@@UBE_NABVioOrientBox@@PAUD3DXVECTOR3@@@Z ENDP ; ioConveyer::IsWoundedCollision
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?GetSubType@ioConveyer@@UBE?AW4PlaySubType@ioPlayEntity@@XZ
_TEXT	SEGMENT
?GetSubType@ioConveyer@@UBE?AW4PlaySubType@ioPlayEntity@@XZ PROC ; ioConveyer::GetSubType, COMDAT
; _this$ = ecx

; 148  : 	return PST_CONVEYER;

  00000	6a 05		 push	 5
  00002	58		 pop	 eax

; 149  : }

  00003	c3		 ret	 0
?GetSubType@ioConveyer@@UBE?AW4PlaySubType@ioPlayEntity@@XZ ENDP ; ioConveyer::GetSubType
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?GetArmorType@ioConveyer@@UBE?AW4ArmorType@@XZ
_TEXT	SEGMENT
?GetArmorType@ioConveyer@@UBE?AW4ArmorType@@XZ PROC	; ioConveyer::GetArmorType, COMDAT
; _this$ = ecx

; 153  : 	return AT_UNARMOR;

  00000	33 c0		 xor	 eax, eax

; 154  : }

  00002	c3		 ret	 0
?GetArmorType@ioConveyer@@UBE?AW4ArmorType@@XZ ENDP	; ioConveyer::GetArmorType
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?DontMoveEntityLevel@ioConveyer@@UBEHXZ
_TEXT	SEGMENT
?DontMoveEntityLevel@ioConveyer@@UBEHXZ PROC		; ioConveyer::DontMoveEntityLevel, COMDAT
; _this$ = ecx

; 158  : 	return 5;

  00000	6a 05		 push	 5
  00002	58		 pop	 eax

; 159  : }

  00003	c3		 ret	 0
?DontMoveEntityLevel@ioConveyer@@UBEHXZ ENDP		; ioConveyer::DontMoveEntityLevel
_TEXT	ENDS
PUBLIC	?EnableWorldFunction@ioConveyer@@QAEX_N@Z	; ioConveyer::EnableWorldFunction
; Function compile flags: /Ogsp
;	COMDAT ?EnableWorldFunction@ioConveyer@@QAEX_N@Z
_TEXT	SEGMENT
_bEnable$ = 8						; size = 1
?EnableWorldFunction@ioConveyer@@QAEX_N@Z PROC		; ioConveyer::EnableWorldFunction, COMDAT
; _this$ = ecx

; 162  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 163  : 	m_bEnableFunction = bEnable;

  00003	8a 45 08	 mov	 al, BYTE PTR _bEnable$[ebp]
  00006	88 81 dc 01 00
	00		 mov	 BYTE PTR [ecx+476], al

; 164  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?EnableWorldFunction@ioConveyer@@QAEX_N@Z ENDP		; ioConveyer::EnableWorldFunction
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE@XZ ; std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> >::~_Vector_val<ioWeapon *,std::allocator<ioWeapon *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> >::~_Vector_val<ioWeapon *,std::allocator<ioWeapon *> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> >::~_Vector_val<ioWeapon *,std::allocator<ioWeapon *> >
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVioWeapon@@@std@@QAE@XZ	; std::allocator<ioWeapon *>::allocator<ioWeapon *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAVioWeapon@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAVioWeapon@@@std@@QAE@XZ PROC		; std::allocator<ioWeapon *>::allocator<ioWeapon *>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@PAVioWeapon@@@std@@QAE@XZ ENDP		; std::allocator<ioWeapon *>::allocator<ioWeapon *>
_TEXT	ENDS
PUBLIC	?_Nextnode@?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@2@PAU342@@Z ; std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> >::_Nextnode
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
;	COMDAT ?_Nextnode@?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@2@PAU342@@Z PROC ; std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> >::_Nextnode, COMDAT

; 560  : 		{	// return reference to successor pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 561  : 		return ((_Nodepref)(*_Pnode)._Next);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 562  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Nextnode@?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@2@PAU342@@Z ENDP ; std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> >::_Nextnode
_TEXT	ENDS
PUBLIC	?_Myval@?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@SAAAPAVioPlayEntity@@PAU_Node@?$_List_nod@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@2@@Z ; std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> >::_Myval
; Function compile flags: /Ogsp
;	COMDAT ?_Myval@?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@SAAAPAVioPlayEntity@@PAU_Node@?$_List_nod@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@SAAAPAVioPlayEntity@@PAU_Node@?$_List_nod@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@2@@Z PROC ; std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> >::_Myval, COMDAT

; 570  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 571  : 		return ((reference)(*_Pnode)._Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 572  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@SAAAPAVioPlayEntity@@PAU_Node@?$_List_nod@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@2@@Z ENDP ; std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> >::_Myval
_TEXT	ENDS
PUBLIC	??8?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> > >::operator==, COMDAT
; _this$ = ecx

; 281  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 282  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 283  : 		if (this->_Getcont() == 0
; 284  : 			|| this->_Getcont() != _Right._Getcont())
; 285  : 			{	// report error
; 286  : 			_DEBUG_ERROR("list iterators incompatible");
; 287  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 288  : 			}
; 289  : 
; 290  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 291  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 292  : 			&& this->_Getcont() == _Right._Getcont());
; 293  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 294  : 
; 295  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 296  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> > >::operator==
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBEABQAVioWeapon@@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBEABQAVioWeapon@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBEABQAVioWeapon@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::operator*, COMDAT
; _this$ = ecx

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 85   : 		}

  00002	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBEABQAVioWeapon@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::operator++, COMDAT
; _this$ = ecx

; 93   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 111  : 		return (*this);
; 112  : 		}

  00005	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVioWeapon@@@std@@QAE@ABV01@@Z	; std::allocator<ioWeapon *>::allocator<ioWeapon *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAVioWeapon@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAVioWeapon@@@std@@QAE@ABV01@@Z PROC	; std::allocator<ioWeapon *>::allocator<ioWeapon *>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@PAVioWeapon@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<ioWeapon *>::allocator<ioWeapon *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVioWeapon@@@std@@QAEXPAPAVioWeapon@@I@Z ; std::allocator<ioWeapon *>::deallocate
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@PAVioWeapon@@@std@@QAEXPAPAVioWeapon@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVioWeapon@@@std@@QAEXPAPAVioWeapon@@I@Z PROC ; std::allocator<ioWeapon *>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVioWeapon@@@std@@QAEXPAPAVioWeapon@@I@Z ENDP ; std::allocator<ioWeapon *>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_List_nod@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@1@PBV?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> >,std::_Iterator_base0>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_List_nod@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@1@PBV?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_List_nod@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@1@PBV?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 41   : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 42   : 		this->_Adopt(_Plist);
; 43   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_List_unchecked_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_List_nod@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@1@PBV?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QAE@PAPAVioWeapon@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QAE@PAPAVioWeapon@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QAE@PAPAVioWeapon@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QAE@PAPAVioWeapon@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::_Compat
; Function compile flags: /Ogsp
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::_Compat
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAVioWeapon@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioWeapon@@0@Z ; std::_Ptr_cat<ioWeapon *,ioWeapon *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAVioWeapon@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioWeapon@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVioWeapon@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioWeapon@@0@Z PROC ; std::_Ptr_cat<ioWeapon *,ioWeapon *>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@PAVioWeapon@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVioWeapon@@0@Z ENDP ; std::_Ptr_cat<ioWeapon *,ioWeapon *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVioWeapon@@@std@@@std@@YAXPAPAVioWeapon@@0AAV?$allocator@PAVioWeapon@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ioWeapon *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVioWeapon@@@std@@@std@@YAXPAPAVioWeapon@@0AAV?$allocator@PAVioWeapon@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAVioWeapon@@@std@@@std@@YAXPAPAVioWeapon@@0AAV?$allocator@PAVioWeapon@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ioWeapon *> >, COMDAT

; 105  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAVioWeapon@@@std@@@std@@YAXPAPAVioWeapon@@0AAV?$allocator@PAVioWeapon@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioWeapon *> >
_TEXT	ENDS
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.h
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 165  :     D3DXVECTOR3() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	??0D3DXVECTOR3@@QAE@MMM@Z			; D3DXVECTOR3::D3DXVECTOR3
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.inl
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_fz$ = 16						; size = 4
??0D3DXVECTOR3@@QAE@MMM@Z PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 303  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 304  :     x = fx;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00008	8b c1		 mov	 eax, ecx
  0000a	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 305  :     y = fy;

  0000e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00013	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 306  :     z = fz;

  00018	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fz$[ebp]
  0001d	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 307  : }

  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
??0D3DXVECTOR3@@QAE@MMM@Z ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	??DD3DXVECTOR3@@QBE?AU0@M@Z			; D3DXVECTOR3::operator*
; Function compile flags: /Ogsp
;	COMDAT ??DD3DXVECTOR3@@QBE?AU0@M@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_f$ = 12						; size = 4
??DD3DXVECTOR3@@QBE?AU0@M@Z PROC			; D3DXVECTOR3::operator*, COMDAT
; _this$ = ecx

; 392  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 393  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00003	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _f$[ebp]
  00008	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000f	0f 5a c0	 cvtps2pd xmm0, xmm0
  00012	0f 5a c9	 cvtps2pd xmm1, xmm1
  00015	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00019	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _f$[ebp]
  0001e	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00022	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00026	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  0002b	0f 5a c0	 cvtps2pd xmm0, xmm0
  0002e	0f 5a c9	 cvtps2pd xmm1, xmm1
  00031	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00035	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _f$[ebp]
  0003a	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0003e	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
  00043	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00048	0f 5a c0	 cvtps2pd xmm0, xmm0
  0004b	0f 5a c9	 cvtps2pd xmm1, xmm1
  0004e	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00052	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00056	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 394  : }

  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
??DD3DXVECTOR3@@QBE?AU0@M@Z ENDP			; D3DXVECTOR3::operator*
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iogameentity.h
_TEXT	ENDS
;	COMDAT ?NeedUpdateBottomHeight@ioGameEntity@@UAEXXZ
_TEXT	SEGMENT
?NeedUpdateBottomHeight@ioGameEntity@@UAEXXZ PROC	; ioGameEntity::NeedUpdateBottomHeight, COMDAT
; _this$ = ecx

; 133  : 	virtual void NeedUpdateBottomHeight() { m_bNeedUpdateBottomHeight = true; }

  00000	c6 81 89 00 00
	00 01		 mov	 BYTE PTR [ecx+137], 1
  00007	c3		 ret	 0
?NeedUpdateBottomHeight@ioGameEntity@@UAEXXZ ENDP	; ioGameEntity::NeedUpdateBottomHeight
_TEXT	ENDS
PUBLIC	?ToPlayEntity@@YAPAVioPlayEntity@@PAVioGameEntity@@@Z ; ToPlayEntity
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioplayentity.h
;	COMDAT ?ToPlayEntity@@YAPAVioPlayEntity@@PAVioGameEntity@@@Z
_TEXT	SEGMENT
_pObj$ = 8						; size = 4
?ToPlayEntity@@YAPAVioPlayEntity@@PAVioGameEntity@@@Z PROC ; ToPlayEntity, COMDAT

; 121  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 122  : 	if( !pObj || pObj->GetTypeID() != ioGameEntity::GET_PLAY_ENTITY )

  00004	8b 75 08	 mov	 esi, DWORD PTR _pObj$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 25		 je	 SHORT $LN1@ToPlayEnti
  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
  0000d	8b ce		 mov	 ecx, esi
  0000f	ff 50 10	 call	 DWORD PTR [eax+16]
  00012	83 f8 01	 cmp	 eax, 1
  00015	75 19		 jne	 SHORT $LN1@ToPlayEnti

; 124  : 
; 125  : 	return dynamic_cast< ioPlayEntity* >( pObj );

  00017	6a 00		 push	 0
  00019	68 00 00 00 00	 push	 OFFSET ??_R0?AVioPlayEntity@@@8
  0001e	68 00 00 00 00	 push	 OFFSET ??_R0?AVioGameEntity@@@8
  00023	6a 00		 push	 0
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 ___RTDynamicCast
  0002b	83 c4 14	 add	 esp, 20			; 00000014H
  0002e	eb 02		 jmp	 SHORT $LN3@ToPlayEnti
$LN1@ToPlayEnti:

; 123  : 		return NULL;

  00030	33 c0		 xor	 eax, eax
$LN3@ToPlayEnti:
  00032	5e		 pop	 esi

; 126  : }

  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?ToPlayEntity@@YAPAVioPlayEntity@@PAVioGameEntity@@@Z ENDP ; ToPlayEntity
_TEXT	ENDS
PUBLIC	?GetCreator@ioPlayMode@@QBEPAVioPlayStage@@XZ	; ioPlayMode::GetCreator
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioplaymode.h
;	COMDAT ?GetCreator@ioPlayMode@@QBEPAVioPlayStage@@XZ
_TEXT	SEGMENT
?GetCreator@ioPlayMode@@QBEPAVioPlayStage@@XZ PROC	; ioPlayMode::GetCreator, COMDAT
; _this$ = ecx

; 631  : 	inline ioPlayStage* GetCreator() const { return m_pCreator; }

  00000	8b 41 34	 mov	 eax, DWORD PTR [ecx+52]
  00003	c3		 ret	 0
?GetCreator@ioPlayMode@@QBEPAVioPlayStage@@XZ ENDP	; ioPlayMode::GetCreator
_TEXT	ENDS
PUBLIC	??_R0?AVioPushStruct@@@8			; ioPushStruct `RTTI Type Descriptor'
PUBLIC	?ToPushStruct@@YAPAVioPushStruct@@PAVioGameEntity@@@Z ; ToPushStruct
;	COMDAT ??_R0?AVioPushStruct@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iopushstruct.h
_DATA	SEGMENT
??_R0?AVioPushStruct@@@8 DD FLAT:??_7type_info@@6B@	; ioPushStruct `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioPushStruct@@', 00H
; Function compile flags: /Ogsp
_DATA	ENDS
;	COMDAT ?ToPushStruct@@YAPAVioPushStruct@@PAVioGameEntity@@@Z
_TEXT	SEGMENT
_pObj$ = 8						; size = 4
?ToPushStruct@@YAPAVioPushStruct@@PAVioGameEntity@@@Z PROC ; ToPushStruct, COMDAT

; 440  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 441  : 	ioPlayEntity *pPlay = ToPlayEntity( pObj );

  00004	ff 75 08	 push	 DWORD PTR _pObj$[ebp]
  00007	e8 00 00 00 00	 call	 ?ToPlayEntity@@YAPAVioPlayEntity@@PAVioGameEntity@@@Z ; ToPlayEntity
  0000c	8b f0		 mov	 esi, eax
  0000e	59		 pop	 ecx

; 442  : 	if( !pPlay || pPlay->GetSubType() != ioPlayEntity::PST_PUSHSTRUCT )

  0000f	85 f6		 test	 esi, esi
  00011	74 28		 je	 SHORT $LN1@ToPushStru
  00013	8b 06		 mov	 eax, DWORD PTR [esi]
  00015	8b ce		 mov	 ecx, esi
  00017	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  0001d	83 f8 02	 cmp	 eax, 2
  00020	75 19		 jne	 SHORT $LN1@ToPushStru

; 444  : 
; 445  : 	return dynamic_cast< ioPushStruct* >( pPlay );

  00022	6a 00		 push	 0
  00024	68 00 00 00 00	 push	 OFFSET ??_R0?AVioPushStruct@@@8
  00029	68 00 00 00 00	 push	 OFFSET ??_R0?AVioPlayEntity@@@8
  0002e	6a 00		 push	 0
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ___RTDynamicCast
  00036	83 c4 14	 add	 esp, 20			; 00000014H
  00039	eb 02		 jmp	 SHORT $LN3@ToPushStru
$LN1@ToPushStru:

; 443  : 		return NULL;

  0003b	33 c0		 xor	 eax, eax
$LN3@ToPushStru:
  0003d	5e		 pop	 esi

; 446  : }

  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?ToPushStruct@@YAPAVioPushStruct@@PAVioGameEntity@@@Z ENDP ; ToPushStruct
_TEXT	ENDS
PUBLIC	?EncryptValueToPool@?$CEncrypt@W4TeamType@@@@AAEXPBD@Z ; CEncrypt<enum TeamType>::EncryptValueToPool
EXTRN	?EncryptByte@ccddaabb@@QAEXPBDPADH@Z:PROC	; ccddaabb::EncryptByte
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
;	COMDAT ?EncryptValueToPool@?$CEncrypt@W4TeamType@@@@AAEXPBD@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
?EncryptValueToPool@?$CEncrypt@W4TeamType@@@@AAEXPBD@Z PROC ; CEncrypt<enum TeamType>::EncryptValueToPool, COMDAT
; _this$ = ecx

; 67   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 		m_RC5.EncryptByte( value, m_MemPool, max(m_ValueSize, DEFAULT_ENCRYPT) );

  00003	0f b7 41 06	 movzx	 eax, WORD PTR [ecx+6]
  00007	83 f8 04	 cmp	 eax, 4
  0000a	77 03		 ja	 SHORT $LN4@EncryptVal
  0000c	6a 04		 push	 4
  0000e	58		 pop	 eax
$LN4@EncryptVal:
  0000f	50		 push	 eax
  00010	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  00013	50		 push	 eax
  00014	ff 75 08	 push	 DWORD PTR _value$[ebp]
  00017	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0001a	e8 00 00 00 00	 call	 ?EncryptByte@ccddaabb@@QAEXPBDPADH@Z ; ccddaabb::EncryptByte

; 69   : 		
; 70   : 	}

  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?EncryptValueToPool@?$CEncrypt@W4TeamType@@@@AAEXPBD@Z ENDP ; CEncrypt<enum TeamType>::EncryptValueToPool
_TEXT	ENDS
PUBLIC	??_R0?AVioBaseChar@@@8				; ioBaseChar `RTTI Type Descriptor'
PUBLIC	?ToBaseChar@@YAPAVioBaseChar@@PAVioGameEntity@@@Z ; ToBaseChar
;	COMDAT ??_R0?AVioBaseChar@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iobasechar.h
_DATA	SEGMENT
??_R0?AVioBaseChar@@@8 DD FLAT:??_7type_info@@6B@	; ioBaseChar `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioBaseChar@@', 00H
; Function compile flags: /Ogsp
_DATA	ENDS
;	COMDAT ?ToBaseChar@@YAPAVioBaseChar@@PAVioGameEntity@@@Z
_TEXT	SEGMENT
_pObj$ = 8						; size = 4
?ToBaseChar@@YAPAVioBaseChar@@PAVioGameEntity@@@Z PROC	; ToBaseChar, COMDAT

; 4326 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 4327 : 	ioPlayEntity *pPlay = ToPlayEntity( pObj );

  00004	ff 75 08	 push	 DWORD PTR _pObj$[ebp]
  00007	e8 00 00 00 00	 call	 ?ToPlayEntity@@YAPAVioPlayEntity@@PAVioGameEntity@@@Z ; ToPlayEntity
  0000c	8b f0		 mov	 esi, eax
  0000e	59		 pop	 ecx

; 4328 : 	if( !pPlay || pPlay->GetSubType() != ioPlayEntity::PST_CHAR )

  0000f	85 f6		 test	 esi, esi
  00011	74 25		 je	 SHORT $LN1@ToBaseChar
  00013	8b 06		 mov	 eax, DWORD PTR [esi]
  00015	8b ce		 mov	 ecx, esi
  00017	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  0001d	85 c0		 test	 eax, eax
  0001f	75 17		 jne	 SHORT $LN1@ToBaseChar

; 4330 : 
; 4331 : 	return dynamic_cast< ioBaseChar* >( pPlay );

  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET ??_R0?AVioBaseChar@@@8
  00027	68 00 00 00 00	 push	 OFFSET ??_R0?AVioPlayEntity@@@8
  0002c	50		 push	 eax
  0002d	56		 push	 esi
  0002e	e8 00 00 00 00	 call	 ___RTDynamicCast
  00033	83 c4 14	 add	 esp, 20			; 00000014H
  00036	eb 02		 jmp	 SHORT $LN3@ToBaseChar
$LN1@ToBaseChar:

; 4329 : 		return NULL;

  00038	33 c0		 xor	 eax, eax
$LN3@ToBaseChar:
  0003a	5e		 pop	 esi

; 4332 : }

  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
?ToBaseChar@@YAPAVioBaseChar@@PAVioGameEntity@@@Z ENDP	; ToBaseChar
_TEXT	ENDS
PUBLIC	??_R0?AVioTeleportZone@@@8			; ioTeleportZone `RTTI Type Descriptor'
PUBLIC	?ToTeleportZone@@YAPAVioTeleportZone@@PAVioGameEntity@@@Z ; ToTeleportZone
;	COMDAT ??_R0?AVioTeleportZone@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioteleportzone.h
_DATA	SEGMENT
??_R0?AVioTeleportZone@@@8 DD FLAT:??_7type_info@@6B@	; ioTeleportZone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioTeleportZone@@', 00H
; Function compile flags: /Ogsp
_DATA	ENDS
;	COMDAT ?ToTeleportZone@@YAPAVioTeleportZone@@PAVioGameEntity@@@Z
_TEXT	SEGMENT
_pObj$ = 8						; size = 4
?ToTeleportZone@@YAPAVioTeleportZone@@PAVioGameEntity@@@Z PROC ; ToTeleportZone, COMDAT

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 57   : 	ioPlayEntity *pPlay = ToPlayEntity( pObj );

  00004	ff 75 08	 push	 DWORD PTR _pObj$[ebp]
  00007	e8 00 00 00 00	 call	 ?ToPlayEntity@@YAPAVioPlayEntity@@PAVioGameEntity@@@Z ; ToPlayEntity
  0000c	8b f0		 mov	 esi, eax
  0000e	59		 pop	 ecx

; 58   : 	if( !pPlay || pPlay->GetSubType() != ioPlayEntity::PST_TELEPORT_ZONE )

  0000f	85 f6		 test	 esi, esi
  00011	74 28		 je	 SHORT $LN1@ToTeleport
  00013	8b 06		 mov	 eax, DWORD PTR [esi]
  00015	8b ce		 mov	 ecx, esi
  00017	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  0001d	83 f8 04	 cmp	 eax, 4
  00020	75 19		 jne	 SHORT $LN1@ToTeleport

; 60   : 
; 61   : 	return dynamic_cast< ioTeleportZone* >( pPlay );

  00022	6a 00		 push	 0
  00024	68 00 00 00 00	 push	 OFFSET ??_R0?AVioTeleportZone@@@8
  00029	68 00 00 00 00	 push	 OFFSET ??_R0?AVioPlayEntity@@@8
  0002e	6a 00		 push	 0
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ___RTDynamicCast
  00036	83 c4 14	 add	 esp, 20			; 00000014H
  00039	eb 02		 jmp	 SHORT $LN3@ToTeleport
$LN1@ToTeleport:

; 59   : 		return NULL;

  0003b	33 c0		 xor	 eax, eax
$LN3@ToTeleport:
  0003d	5e		 pop	 esi

; 62   : }

  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?ToTeleportZone@@YAPAVioTeleportZone@@PAVioGameEntity@@@Z ENDP ; ToTeleportZone
_TEXT	ENDS
PUBLIC	__real@4f800000
PUBLIC	??0ioConveyer@@QAE@PAVioEntityGroup@@PAVioPlayMode@@H@Z ; ioConveyer::ioConveyer
EXTRN	??0ioPlayEntity@@QAE@PAVioEntityGroup@@PAVioPlayMode@@@Z:PROC ; ioPlayEntity::ioPlayEntity
;	COMDAT __real@4f800000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioconveyer.cpp
CONST	ENDS
;	COMDAT ??0ioConveyer@@QAE@PAVioEntityGroup@@PAVioPlayMode@@H@Z
_TEXT	SEGMENT
$T548128 = -12						; size = 12
_pGrp$ = 8						; size = 4
tv178 = 12						; size = 4
tv167 = 12						; size = 4
_pMode$ = 12						; size = 4
_iCreateIndex$ = 16					; size = 4
??0ioConveyer@@QAE@PAVioEntityGroup@@PAVioPlayMode@@H@Z PROC ; ioConveyer::ioConveyer, COMDAT
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	ff 75 0c	 push	 DWORD PTR _pMode$[ebp]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	ff 75 08	 push	 DWORD PTR _pGrp$[ebp]
  00011	e8 00 00 00 00	 call	 ??0ioPlayEntity@@QAE@PAVioEntityGroup@@PAVioPlayMode@@@Z ; ioPlayEntity::ioPlayEntity

; 19   : 	m_iCreateIndex = iCreateIndex;

  00016	8b 45 10	 mov	 eax, DWORD PTR _iCreateIndex$[ebp]
  00019	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7ioConveyer@@6B@
  0001f	89 83 c8 01 00
	00		 mov	 DWORD PTR [ebx+456], eax

; 20   : 
; 21   : 	m_vMoveDir = D3DXVECTOR3( 0.0f, 0.0f, FLOAT1 );

  00025	b8 01 00 00 00	 mov	 eax, 1
  0002a	0f 57 c0	 xorps	 xmm0, xmm0
  0002d	89 45 0c	 mov	 DWORD PTR tv178[ebp], eax
  00030	db 45 0c	 fild	 DWORD PTR tv178[ebp]
  00033	f3 0f 11 45 f4	 movss	 DWORD PTR $T548128[ebp], xmm0
  00038	f3 0f 11 45 f8	 movss	 DWORD PTR $T548128[ebp+4], xmm0
  0003d	85 c0		 test	 eax, eax
  0003f	79 06		 jns	 SHORT $LN12@ioConveyer
  00041	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN12@ioConveyer:
  00047	d9 5d fc	 fstp	 DWORD PTR $T548128[ebp+8]
  0004a	8d bb cc 01 00
	00		 lea	 edi, DWORD PTR [ebx+460]
  00050	8d 75 f4	 lea	 esi, DWORD PTR $T548128[ebp]
  00053	a5		 movsd
  00054	a5		 movsd
  00055	a5		 movsd

; 22   : 	m_fMoveSpeed = FLOAT100;

  00056	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  0005b	89 45 0c	 mov	 DWORD PTR tv167[ebp], eax
  0005e	db 45 0c	 fild	 DWORD PTR tv167[ebp]
  00061	85 c0		 test	 eax, eax
  00063	79 06		 jns	 SHORT $LN13@ioConveyer
  00065	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN13@ioConveyer:
  0006b	5f		 pop	 edi
  0006c	d9 9b d8 01 00
	00		 fstp	 DWORD PTR [ebx+472]
  00072	5e		 pop	 esi

; 23   : 
; 24   : 	m_bEnableFunction = true;

  00073	c6 83 dc 01 00
	00 01		 mov	 BYTE PTR [ebx+476], 1

; 25   : }

  0007a	8b c3		 mov	 eax, ebx
  0007c	5b		 pop	 ebx
  0007d	c9		 leave
  0007e	c2 0c 00	 ret	 12			; 0000000cH
??0ioConveyer@@QAE@PAVioEntityGroup@@PAVioPlayMode@@H@Z ENDP ; ioConveyer::ioConveyer
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GioConveyer@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioConveyer@@UAEPAXI@Z PROC				; ioConveyer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioConveyer@@6B@
  0000c	e8 00 00 00 00	 call	 ??1ioPlayEntity@@UAE@XZ	; ioPlayEntity::~ioPlayEntity
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 07		 je	 SHORT $LN1@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001d	59		 pop	 ecx
$LN1@scalar:
  0001e	8b c6		 mov	 eax, esi
  00020	5e		 pop	 esi
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??_GioConveyer@@UAEPAXI@Z ENDP				; ioConveyer::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??D?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QBEABQAVioPlayEntity@@XZ ; std::_List_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QBEABQAVioPlayEntity@@XZ
_TEXT	SEGMENT
??D?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QBEABQAVioPlayEntity@@XZ PROC ; std::_List_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> > >::operator*, COMDAT
; _this$ = ecx

; 202  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 203  : 		if (this->_Getcont() == 0
; 204  : 			|| this->_Ptr == 0
; 205  : 			|| this->_Ptr == ((_Mylist *)this->_Getcont())->_Myhead)
; 206  : 			{	// report error
; 207  : 			_DEBUG_ERROR("list iterator not dereferencable");
; 208  : 			_SCL_SECURE_OUT_OF_RANGE;
; 209  : 			}
; 210  : 
; 211  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 212  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 213  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 214  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 215  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 216  : 
; 217  : 		return (_Mylist::_Myval(this->_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 08	 add	 eax, 8

; 218  : 		}

  00005	c3		 ret	 0
??D?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QBEABQAVioPlayEntity@@XZ ENDP ; std::_List_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> > >::operator++, COMDAT
; _this$ = ecx

; 221  : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 222  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 223  : 		if (this->_Getcont() == 0
; 224  : 			|| this->_Ptr == 0
; 225  : 			|| this->_Ptr == ((_Mylist *)this->_Getcont())->_Myhead)
; 226  : 			{	// report error
; 227  : 			_DEBUG_ERROR("list iterator not incrementable");
; 228  : 			_SCL_SECURE_OUT_OF_RANGE;
; 229  : 			}
; 230  : 
; 231  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 232  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 233  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 234  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 235  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 236  : 
; 237  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 238  : 		return (*this);
; 239  : 		}

  00008	c3		 ret	 0
??E?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> > >::operator++
_TEXT	ENDS
PUBLIC	??9?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> > >::operator!=, COMDAT
; _this$ = ecx

; 299  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 300  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 301  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> > >::operator!=
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBEAAPAVioWeapon@@XZ ; std::_Vector_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBEAAPAVioWeapon@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBEAAPAVioWeapon@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::operator*, COMDAT
; _this$ = ecx

; 322  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 323  : 		}

  00002	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBEAAPAVioWeapon@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::operator++, COMDAT
; _this$ = ecx

; 331  : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 332  : 		++*(_Mybase *)this;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 333  : 		return (*this);
; 334  : 		}

  00005	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE@V?$allocator@PAVioWeapon@@@1@@Z ; std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> >::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE@V?$allocator@PAVioWeapon@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE@V?$allocator@PAVioWeapon@@@1@@Z PROC ; std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> >::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE@V?$allocator@PAVioWeapon@@@1@@Z ENDP ; std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> >::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> >
_TEXT	ENDS
PUBLIC	??0?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@1@PBV?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> > >::_List_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@1@PBV?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@1@PBV?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> > >::_List_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> > >, COMDAT
; _this$ = ecx

; 184  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 185  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@1@PBV?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> > >::_List_const_iterator<std::_List_val<ioPlayEntity *,std::allocator<ioPlayEntity *> > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QAE@PAPAVioWeapon@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::_Vector_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QAE@PAPAVioWeapon@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QAE@PAPAVioWeapon@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::_Vector_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QAE@PAPAVioWeapon@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::_Vector_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::operator==
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadFloat_e@$0L@@ioINILoader@@QAEMAAY0L@$$CBDM@Z ; ioINILoader::LoadFloat_e<11>
EXTRN	__imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$LoadFloat_e@$0L@@ioINILoader@@QAEMAAY0L@$$CBDM@Z
_TEXT	SEGMENT
__k$ = -20						; size = 11
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_f$ = 12						; size = 4
??$LoadFloat_e@$0L@@ioINILoader@@QAEMAAY0L@$$CBDM@Z PROC ; ioINILoader::LoadFloat_e<11>, COMDAT
; _this$ = ecx

; 135  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 136  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 24 01 00
	00		 je	 $LN96@LoadFloat_
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 ec	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 0d 01 00
	00		 je	 $LN95@LoadFloat_
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 ed	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 f6 00 00
	00		 je	 $LN94@LoadFloat_
  00042	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00045	88 55 ee	 mov	 BYTE PTR __k$[ebp+2], dl
  00048	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004b	84 d2		 test	 dl, dl
  0004d	0f 84 df 00 00
	00		 je	 $LN93@LoadFloat_
  00053	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00056	88 55 ef	 mov	 BYTE PTR __k$[ebp+3], dl
  00059	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005c	84 d2		 test	 dl, dl
  0005e	0f 84 c8 00 00
	00		 je	 $LN92@LoadFloat_
  00064	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00067	88 55 f0	 mov	 BYTE PTR __k$[ebp+4], dl
  0006a	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006d	84 d2		 test	 dl, dl
  0006f	0f 84 b1 00 00
	00		 je	 $LN91@LoadFloat_
  00075	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00078	88 55 f1	 mov	 BYTE PTR __k$[ebp+5], dl
  0007b	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007e	84 d2		 test	 dl, dl
  00080	0f 84 9a 00 00
	00		 je	 $LN90@LoadFloat_
  00086	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00089	88 55 f2	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 83 00 00
	00		 je	 $LN89@LoadFloat_
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 f3	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	74 70		 je	 SHORT $LN88@LoadFloat_
  000a4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a7	88 55 f4	 mov	 BYTE PTR __k$[ebp+8], dl
  000aa	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000ad	84 d2		 test	 dl, dl
  000af	74 5d		 je	 SHORT $LN87@LoadFloat_
  000b1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b4	80 78 0a 00	 cmp	 BYTE PTR [eax+10], 0
  000b8	88 55 f5	 mov	 BYTE PTR __k$[ebp+9], dl
  000bb	0f 84 87 00 00
	00		 je	 $LN1@LoadFloat_
  000c1	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000c4	84 d2		 test	 dl, dl
  000c6	74 40		 je	 SHORT $LN85@LoadFloat_
  000c8	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000cb	88 55 f7	 mov	 BYTE PTR __k$[ebp+11], dl
  000ce	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000d1	84 d2		 test	 dl, dl
  000d3	74 2d		 je	 SHORT $LN84@LoadFloat_
  000d5	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000d8	88 55 f8	 mov	 BYTE PTR __k$[ebp+12], dl
  000db	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000de	84 d2		 test	 dl, dl
  000e0	74 1a		 je	 SHORT $LN83@LoadFloat_
  000e2	8a 40 0e	 mov	 al, BYTE PTR [eax+14]
  000e5	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000e8	88 55 f9	 mov	 BYTE PTR __k$[ebp+13], dl
  000eb	84 c0		 test	 al, al
  000ed	74 07		 je	 SHORT $LN82@LoadFloat_
  000ef	34 eb		 xor	 al, -21			; ffffffebH
  000f1	88 45 fa	 mov	 BYTE PTR __k$[ebp+14], al
  000f4	eb 52		 jmp	 SHORT $LN1@LoadFloat_
$LN82@LoadFloat_:
  000f6	c6 45 fa eb	 mov	 BYTE PTR __k$[ebp+14], -21 ; ffffffebH
  000fa	eb 4c		 jmp	 SHORT $LN1@LoadFloat_
$LN83@LoadFloat_:
  000fc	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  00100	eb 46		 jmp	 SHORT $LN1@LoadFloat_
$LN84@LoadFloat_:
  00102	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00106	eb 40		 jmp	 SHORT $LN1@LoadFloat_
$LN85@LoadFloat_:
  00108	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  0010c	eb 3a		 jmp	 SHORT $LN1@LoadFloat_
$LN87@LoadFloat_:
  0010e	c6 45 f5 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  00112	eb 34		 jmp	 SHORT $LN1@LoadFloat_
$LN88@LoadFloat_:
  00114	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00118	eb 2e		 jmp	 SHORT $LN1@LoadFloat_
$LN89@LoadFloat_:
  0011a	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  0011e	eb 28		 jmp	 SHORT $LN1@LoadFloat_
$LN90@LoadFloat_:
  00120	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  00124	eb 22		 jmp	 SHORT $LN1@LoadFloat_
$LN91@LoadFloat_:
  00126	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  0012a	eb 1c		 jmp	 SHORT $LN1@LoadFloat_
$LN92@LoadFloat_:
  0012c	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00130	eb 16		 jmp	 SHORT $LN1@LoadFloat_
$LN93@LoadFloat_:
  00132	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00136	eb 10		 jmp	 SHORT $LN1@LoadFloat_
$LN94@LoadFloat_:
  00138	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0013c	eb 0a		 jmp	 SHORT $LN1@LoadFloat_
$LN95@LoadFloat_:
  0013e	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00142	eb 04		 jmp	 SHORT $LN1@LoadFloat_
$LN96@LoadFloat_:
  00144	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadFloat_:
  00148	6a 02		 push	 2
  0014a	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  0014d	c6 45 f6 00	 mov	 BYTE PTR __k$[ebp+10], 0
  00151	5a		 pop	 edx
$LL104@LoadFloat_:
  00152	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00158	83 c0 04	 add	 eax, 4
  0015b	4a		 dec	 edx
  0015c	75 f4		 jne	 SHORT $LL104@LoadFloat_
  0015e	6a 08		 push	 8
  00160	58		 pop	 eax
$LL101@LoadFloat_:
  00161	8b c8		 mov	 ecx, eax
  00163	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00169	79 05		 jns	 SHORT $LN111@LoadFloat_
  0016b	49		 dec	 ecx
  0016c	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0016f	41		 inc	 ecx
$LN111@LoadFloat_:
  00170	b2 ed		 mov	 dl, -19			; ffffffedH
  00172	2a d1		 sub	 dl, cl
  00174	30 54 05 ec	 xor	 BYTE PTR __k$[ebp+eax], dl
  00178	40		 inc	 eax
  00179	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0017c	7c e3		 jl	 SHORT $LL101@LoadFloat_

; 137  : 		return LoadFloat(_k, f);

  0017e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _f$[ebp]
  00183	51		 push	 ecx
  00184	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  00187	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018c	50		 push	 eax
  0018d	8b ce		 mov	 ecx, esi
  0018f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z

; 138  : 	}

  00195	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00198	33 cd		 xor	 ecx, ebp
  0019a	5e		 pop	 esi
  0019b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a0	c9		 leave
  001a1	c2 08 00	 ret	 8
??$LoadFloat_e@$0L@@ioINILoader@@QAEMAAY0L@$$CBDM@Z ENDP ; ioINILoader::LoadFloat_e<11>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadBool_e@$0BF@@ioINILoader@@QAE_NAAY0BF@$$CBD_N@Z ; ioINILoader::LoadBool_e<21>
EXTRN	__imp_?LoadBool@ioINILoader@@QAE_NPBD_N@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$LoadBool_e@$0BF@@ioINILoader@@QAE_NAAY0BF@$$CBD_N@Z
_TEXT	SEGMENT
__k$ = -32						; size = 21
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_b$ = 12						; size = 1
??$LoadBool_e@$0BF@@ioINILoader@@QAE_NAAY0BF@$$CBD_N@Z PROC ; ioINILoader::LoadBool_e<21>, COMDAT
; _this$ = ecx

; 101  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 102  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	84 d2		 test	 dl, dl
  0001b	0f 84 f7 01 00
	00		 je	 $LN96@LoadBool_e
  00021	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00024	88 55 e0	 mov	 BYTE PTR __k$[ebp], dl
  00027	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0002a	84 d2		 test	 dl, dl
  0002c	0f 84 e0 01 00
	00		 je	 $LN95@LoadBool_e
  00032	b1 ec		 mov	 cl, -20			; ffffffecH
  00034	32 d1		 xor	 dl, cl
  00036	88 55 e1	 mov	 BYTE PTR __k$[ebp+1], dl
  00039	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003c	84 d2		 test	 dl, dl
  0003e	0f 84 c8 01 00
	00		 je	 $LN94@LoadBool_e
  00044	b3 eb		 mov	 bl, -21			; ffffffebH
  00046	32 d3		 xor	 dl, bl
  00048	88 55 e2	 mov	 BYTE PTR __k$[ebp+2], dl
  0004b	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004e	84 d2		 test	 dl, dl
  00050	0f 84 b0 01 00
	00		 je	 $LN93@LoadBool_e
  00056	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00059	88 55 e3	 mov	 BYTE PTR __k$[ebp+3], dl
  0005c	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005f	84 d2		 test	 dl, dl
  00061	0f 84 99 01 00
	00		 je	 $LN92@LoadBool_e
  00067	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0006a	88 55 e4	 mov	 BYTE PTR __k$[ebp+4], dl
  0006d	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00070	84 d2		 test	 dl, dl
  00072	0f 84 83 01 00
	00		 je	 $LN91@LoadBool_e
  00078	32 d1		 xor	 dl, cl
  0007a	88 55 e5	 mov	 BYTE PTR __k$[ebp+5], dl
  0007d	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00080	84 d2		 test	 dl, dl
  00082	0f 84 6e 01 00
	00		 je	 $LN90@LoadBool_e
  00088	32 d3		 xor	 dl, bl
  0008a	88 55 e6	 mov	 BYTE PTR __k$[ebp+6], dl
  0008d	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00090	84 d2		 test	 dl, dl
  00092	0f 84 58 01 00
	00		 je	 $LN89@LoadBool_e
  00098	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009b	88 55 e7	 mov	 BYTE PTR __k$[ebp+7], dl
  0009e	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a1	84 d2		 test	 dl, dl
  000a3	0f 84 41 01 00
	00		 je	 $LN88@LoadBool_e
  000a9	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ac	88 55 e8	 mov	 BYTE PTR __k$[ebp+8], dl
  000af	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b2	84 d2		 test	 dl, dl
  000b4	0f 84 2b 01 00
	00		 je	 $LN87@LoadBool_e
  000ba	32 d1		 xor	 dl, cl
  000bc	88 55 e9	 mov	 BYTE PTR __k$[ebp+9], dl
  000bf	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c2	84 d2		 test	 dl, dl
  000c4	0f 84 16 01 00
	00		 je	 $LN86@LoadBool_e
  000ca	32 d3		 xor	 dl, bl
  000cc	88 55 ea	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	0f 84 00 01 00
	00		 je	 $LN85@LoadBool_e
  000da	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000dd	88 55 eb	 mov	 BYTE PTR __k$[ebp+11], dl
  000e0	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e3	84 d2		 test	 dl, dl
  000e5	0f 84 e9 00 00
	00		 je	 $LN84@LoadBool_e
  000eb	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ee	88 55 ec	 mov	 BYTE PTR __k$[ebp+12], dl
  000f1	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f4	84 d2		 test	 dl, dl
  000f6	0f 84 d3 00 00
	00		 je	 $LN83@LoadBool_e
  000fc	32 d1		 xor	 dl, cl
  000fe	88 55 ed	 mov	 BYTE PTR __k$[ebp+13], dl
  00101	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  00104	84 d2		 test	 dl, dl
  00106	0f 84 be 00 00
	00		 je	 $LN82@LoadBool_e
  0010c	32 d3		 xor	 dl, bl
  0010e	88 55 ee	 mov	 BYTE PTR __k$[ebp+14], dl
  00111	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00114	84 d2		 test	 dl, dl
  00116	0f 84 a8 00 00
	00		 je	 $LN81@LoadBool_e
  0011c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0011f	88 55 ef	 mov	 BYTE PTR __k$[ebp+15], dl
  00122	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00125	84 d2		 test	 dl, dl
  00127	0f 84 91 00 00
	00		 je	 $LN80@LoadBool_e
  0012d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00130	88 55 f0	 mov	 BYTE PTR __k$[ebp+16], dl
  00133	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00136	84 d2		 test	 dl, dl
  00138	74 7f		 je	 SHORT $LN79@LoadBool_e
  0013a	32 d1		 xor	 dl, cl
  0013c	88 55 f1	 mov	 BYTE PTR __k$[ebp+17], dl
  0013f	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  00142	84 d2		 test	 dl, dl
  00144	74 6e		 je	 SHORT $LN78@LoadBool_e
  00146	32 d3		 xor	 dl, bl
  00148	88 55 f2	 mov	 BYTE PTR __k$[ebp+18], dl
  0014b	8a 50 13	 mov	 dl, BYTE PTR [eax+19]
  0014e	84 d2		 test	 dl, dl
  00150	74 5c		 je	 SHORT $LN77@LoadBool_e
  00152	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00155	80 78 14 00	 cmp	 BYTE PTR [eax+20], 0
  00159	88 55 f3	 mov	 BYTE PTR __k$[ebp+19], dl
  0015c	0f 84 ba 00 00
	00		 je	 $LN1@LoadBool_e
  00162	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00165	84 d2		 test	 dl, dl
  00167	74 40		 je	 SHORT $LN75@LoadBool_e
  00169	32 d1		 xor	 dl, cl
  0016b	88 55 f5	 mov	 BYTE PTR __k$[ebp+21], dl
  0016e	8a 50 16	 mov	 dl, BYTE PTR [eax+22]
  00171	84 d2		 test	 dl, dl
  00173	74 2f		 je	 SHORT $LN74@LoadBool_e
  00175	32 d3		 xor	 dl, bl
  00177	88 55 f6	 mov	 BYTE PTR __k$[ebp+22], dl
  0017a	8a 50 17	 mov	 dl, BYTE PTR [eax+23]
  0017d	84 d2		 test	 dl, dl
  0017f	74 1d		 je	 SHORT $LN73@LoadBool_e
  00181	8a 40 18	 mov	 al, BYTE PTR [eax+24]
  00184	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00187	88 55 f7	 mov	 BYTE PTR __k$[ebp+23], dl
  0018a	84 c0		 test	 al, al
  0018c	74 0a		 je	 SHORT $LN72@LoadBool_e
  0018e	34 ed		 xor	 al, -19			; ffffffedH
  00190	88 45 f8	 mov	 BYTE PTR __k$[ebp+24], al
  00193	e9 84 00 00 00	 jmp	 $LN1@LoadBool_e
$LN72@LoadBool_e:
  00198	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+24], -19 ; ffffffedH
  0019c	eb 7e		 jmp	 SHORT $LN1@LoadBool_e
$LN73@LoadBool_e:
  0019e	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+23], -22 ; ffffffeaH
  001a2	eb 78		 jmp	 SHORT $LN1@LoadBool_e
$LN74@LoadBool_e:
  001a4	88 5d f6	 mov	 BYTE PTR __k$[ebp+22], bl
  001a7	eb 73		 jmp	 SHORT $LN1@LoadBool_e
$LN75@LoadBool_e:
  001a9	88 4d f5	 mov	 BYTE PTR __k$[ebp+21], cl
  001ac	eb 6e		 jmp	 SHORT $LN1@LoadBool_e
$LN77@LoadBool_e:
  001ae	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+19], -22 ; ffffffeaH
  001b2	eb 68		 jmp	 SHORT $LN1@LoadBool_e
$LN78@LoadBool_e:
  001b4	88 5d f2	 mov	 BYTE PTR __k$[ebp+18], bl
  001b7	eb 63		 jmp	 SHORT $LN1@LoadBool_e
$LN79@LoadBool_e:
  001b9	88 4d f1	 mov	 BYTE PTR __k$[ebp+17], cl
  001bc	eb 5e		 jmp	 SHORT $LN1@LoadBool_e
$LN80@LoadBool_e:
  001be	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  001c2	eb 58		 jmp	 SHORT $LN1@LoadBool_e
$LN81@LoadBool_e:
  001c4	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  001c8	eb 52		 jmp	 SHORT $LN1@LoadBool_e
$LN82@LoadBool_e:
  001ca	88 5d ee	 mov	 BYTE PTR __k$[ebp+14], bl
  001cd	eb 4d		 jmp	 SHORT $LN1@LoadBool_e
$LN83@LoadBool_e:
  001cf	88 4d ed	 mov	 BYTE PTR __k$[ebp+13], cl
  001d2	eb 48		 jmp	 SHORT $LN1@LoadBool_e
$LN84@LoadBool_e:
  001d4	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  001d8	eb 42		 jmp	 SHORT $LN1@LoadBool_e
$LN85@LoadBool_e:
  001da	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  001de	eb 3c		 jmp	 SHORT $LN1@LoadBool_e
$LN86@LoadBool_e:
  001e0	88 5d ea	 mov	 BYTE PTR __k$[ebp+10], bl
  001e3	eb 37		 jmp	 SHORT $LN1@LoadBool_e
$LN87@LoadBool_e:
  001e5	88 4d e9	 mov	 BYTE PTR __k$[ebp+9], cl
  001e8	eb 32		 jmp	 SHORT $LN1@LoadBool_e
$LN88@LoadBool_e:
  001ea	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  001ee	eb 2c		 jmp	 SHORT $LN1@LoadBool_e
$LN89@LoadBool_e:
  001f0	c6 45 e7 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  001f4	eb 26		 jmp	 SHORT $LN1@LoadBool_e
$LN90@LoadBool_e:
  001f6	88 5d e6	 mov	 BYTE PTR __k$[ebp+6], bl
  001f9	eb 21		 jmp	 SHORT $LN1@LoadBool_e
$LN91@LoadBool_e:
  001fb	88 4d e5	 mov	 BYTE PTR __k$[ebp+5], cl
  001fe	eb 1c		 jmp	 SHORT $LN1@LoadBool_e
$LN92@LoadBool_e:
  00200	c6 45 e4 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00204	eb 16		 jmp	 SHORT $LN1@LoadBool_e
$LN93@LoadBool_e:
  00206	c6 45 e3 ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  0020a	eb 10		 jmp	 SHORT $LN1@LoadBool_e
$LN94@LoadBool_e:
  0020c	c6 45 e2 eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  00210	eb 0a		 jmp	 SHORT $LN1@LoadBool_e
$LN95@LoadBool_e:
  00212	c6 45 e1 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00216	eb 04		 jmp	 SHORT $LN1@LoadBool_e
$LN96@LoadBool_e:
  00218	c6 45 e0 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadBool_e:
  0021c	6a 05		 push	 5
  0021e	8d 45 e0	 lea	 eax, DWORD PTR __k$[ebp]
  00221	c6 45 f4 00	 mov	 BYTE PTR __k$[ebp+20], 0
  00225	5a		 pop	 edx
$LL104@LoadBool_e:
  00226	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0022c	83 c0 04	 add	 eax, 4
  0022f	4a		 dec	 edx
  00230	75 f4		 jne	 SHORT $LL104@LoadBool_e

; 103  : 		return LoadBool(_k, b);

  00232	ff 75 0c	 push	 DWORD PTR _b$[ebp]
  00235	8d 45 e0	 lea	 eax, DWORD PTR __k$[ebp]
  00238	50		 push	 eax
  00239	8b ce		 mov	 ecx, esi
  0023b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadBool@ioINILoader@@QAE_NPBD_N@Z

; 104  : 	}

  00241	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00244	5e		 pop	 esi
  00245	33 cd		 xor	 ecx, ebp
  00247	5b		 pop	 ebx
  00248	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0024d	c9		 leave
  0024e	c2 08 00	 ret	 8
??$LoadBool_e@$0BF@@ioINILoader@@QAE_NAAY0BF@$$CBD_N@Z ENDP ; ioINILoader::LoadBool_e<21>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVioWeapon@@@std@@@std@@YAXPAPAVioWeapon@@0AAV?$allocator@PAVioWeapon@@@0@@Z ; std::_Destroy_range<std::allocator<ioWeapon *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVioWeapon@@@std@@@std@@YAXPAPAVioWeapon@@0AAV?$allocator@PAVioWeapon@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVioWeapon@@@std@@@std@@YAXPAPAVioWeapon@@0AAV?$allocator@PAVioWeapon@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ioWeapon *> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAVioWeapon@@@std@@@std@@YAXPAPAVioWeapon@@0AAV?$allocator@PAVioWeapon@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioWeapon *> >
_TEXT	ENDS
PUBLIC	??4?$CEncrypt@W4TeamType@@@@QAE?AW4TeamType@@W41@@Z ; CEncrypt<enum TeamType>::operator=
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\encryptvalue.h
;	COMDAT ??4?$CEncrypt@W4TeamType@@@@QAE?AW4TeamType@@W41@@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
_inValue$ = 8						; size = 4
??4?$CEncrypt@W4TeamType@@@@QAE?AW4TeamType@@W41@@Z PROC ; CEncrypt<enum TeamType>::operator=, COMDAT
; _this$ = ecx

; 2965 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2966 : 		type value = inValue;

  00003	8b 45 08	 mov	 eax, DWORD PTR _inValue$[ebp]
  00006	89 45 08	 mov	 DWORD PTR _value$[ebp], eax

; 2967 : 		EncryptValueToPool((char*)&value);

  00009	8d 45 08	 lea	 eax, DWORD PTR _value$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@W4TeamType@@@@AAEXPBD@Z ; CEncrypt<enum TeamType>::EncryptValueToPool

; 2968 : #ifdef _NOTUSE
; 2969 : 		m_value = inValue;
; 2970 : 		Debug();
; 2971 : #endif
; 2972 : 		return value;

  00012	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]

; 2973 : 	}

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
??4?$CEncrypt@W4TeamType@@@@QAE?AW4TeamType@@W41@@Z ENDP ; CEncrypt<enum TeamType>::operator=
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_D3DXVec3Normalize@8:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioconveyer.cpp
;	COMDAT ?LoadProperty@ioConveyer@@UAEXAAVioINILoader@@@Z
_TEXT	SEGMENT
tv4557 = -36						; size = 4
tv4547 = -36						; size = 4
$T550673 = -36						; size = 4
__k$550956 = -32					; size = 21
__k$550870 = -24					; size = 11
__k$550741 = -24					; size = 11
__k$550612 = -24					; size = 11
__k$550487 = -24					; size = 11
__$ArrayPad$ = -4					; size = 4
_rkLoader$ = 8						; size = 4
?LoadProperty@ioConveyer@@UAEXAAVioINILoader@@@Z PROC	; ioConveyer::LoadProperty, COMDAT
; _this$ = ecx

; 32   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _rkLoader$[ebp]
  00014	56		 push	 esi

; 33   : 	m_vMoveDir.x = rkLoader.LoadFloat_e( "move_dir_x", 0.0f );

  00015	6a 02		 push	 2
  00017	8b f1		 mov	 esi, ecx
  00019	c7 45 e8 80 83
	9d 8f		 mov	 DWORD PTR __k$550487[ebp], -1885502592 ; 8f9d8380H
  00020	c7 45 ec b2 88
	82 98		 mov	 DWORD PTR __k$550487[ebp+4], -1736275790 ; 988288b2H
  00027	66 c7 45 f0 b2
	94		 mov	 WORD PTR __k$550487[ebp+8], 38066 ; 000094b2H
  0002d	8d 45 e8	 lea	 eax, DWORD PTR __k$550487[ebp]
  00030	c6 45 f2 00	 mov	 BYTE PTR __k$550487[ebp+10], 0
  00034	59		 pop	 ecx
$LL106@LoadProper:
  00035	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0003b	83 c0 04	 add	 eax, 4
  0003e	49		 dec	 ecx
  0003f	75 f4		 jne	 SHORT $LL106@LoadProper
  00041	57		 push	 edi
  00042	6a 08		 push	 8
  00044	5f		 pop	 edi
$LL103@LoadProper:
  00045	8b c7		 mov	 eax, edi
  00047	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  0004c	79 05		 jns	 SHORT $LN557@LoadProper
  0004e	48		 dec	 eax
  0004f	83 c8 fc	 or	 eax, -4			; fffffffcH
  00052	40		 inc	 eax
$LN557@LoadProper:
  00053	b1 ed		 mov	 cl, -19			; ffffffedH
  00055	2a c8		 sub	 cl, al
  00057	30 4c 3d e8	 xor	 BYTE PTR __k$550487[ebp+edi], cl
  0005b	47		 inc	 edi
  0005c	83 ff 0a	 cmp	 edi, 10			; 0000000aH
  0005f	7c e4		 jl	 SHORT $LL103@LoadProper
  00061	0f 57 c0	 xorps	 xmm0, xmm0
  00064	51		 push	 ecx
  00065	8d 45 e8	 lea	 eax, DWORD PTR __k$550487[ebp]
  00068	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006d	50		 push	 eax
  0006e	8b cb		 mov	 ecx, ebx
  00070	8d be cc 01 00
	00		 lea	 edi, DWORD PTR [esi+460]
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z
  0007c	d9 1f		 fstp	 DWORD PTR [edi]
  0007e	6a 02		 push	 2

; 34   : 	m_vMoveDir.y = rkLoader.LoadFloat_e( "move_dir_y", 0.0f );

  00080	c7 45 e8 80 83
	9d 8f		 mov	 DWORD PTR __k$550612[ebp], -1885502592 ; 8f9d8380H
  00087	c7 45 ec b2 88
	82 98		 mov	 DWORD PTR __k$550612[ebp+4], -1736275790 ; 988288b2H
  0008e	66 c7 45 f0 b2
	95		 mov	 WORD PTR __k$550612[ebp+8], 38322 ; 000095b2H
  00094	8d 45 e8	 lea	 eax, DWORD PTR __k$550612[ebp]
  00097	c6 45 f2 00	 mov	 BYTE PTR __k$550612[ebp+10], 0
  0009b	59		 pop	 ecx
$LL212@LoadProper:
  0009c	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  000a2	83 c0 04	 add	 eax, 4
  000a5	49		 dec	 ecx
  000a6	75 f4		 jne	 SHORT $LL212@LoadProper
  000a8	6a 08		 push	 8
  000aa	58		 pop	 eax
$LL209@LoadProper:
  000ab	8b c8		 mov	 ecx, eax
  000ad	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  000b3	79 05		 jns	 SHORT $LN558@LoadProper
  000b5	49		 dec	 ecx
  000b6	83 c9 fc	 or	 ecx, -4			; fffffffcH
  000b9	41		 inc	 ecx
$LN558@LoadProper:
  000ba	b2 ed		 mov	 dl, -19			; ffffffedH
  000bc	2a d1		 sub	 dl, cl
  000be	30 54 05 e8	 xor	 BYTE PTR __k$550612[ebp+eax], dl
  000c2	40		 inc	 eax
  000c3	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  000c6	7c e3		 jl	 SHORT $LL209@LoadProper
  000c8	0f 57 c0	 xorps	 xmm0, xmm0
  000cb	51		 push	 ecx
  000cc	8d 45 e8	 lea	 eax, DWORD PTR __k$550612[ebp]
  000cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d4	50		 push	 eax
  000d5	8b cb		 mov	 ecx, ebx
  000d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z
  000dd	d9 9e d0 01 00
	00		 fstp	 DWORD PTR [esi+464]

; 35   : 	m_vMoveDir.z = rkLoader.LoadFloat_e( "move_dir_z", FLOAT1 );

  000e3	b8 01 00 00 00	 mov	 eax, 1
  000e8	6a 02		 push	 2
  000ea	89 45 dc	 mov	 DWORD PTR $T550673[ebp], eax
  000ed	c7 45 e8 80 83
	9d 8f		 mov	 DWORD PTR __k$550741[ebp], -1885502592 ; 8f9d8380H
  000f4	c7 45 ec b2 88
	82 98		 mov	 DWORD PTR __k$550741[ebp+4], -1736275790 ; 988288b2H
  000fb	66 c7 45 f0 b2
	96		 mov	 WORD PTR __k$550741[ebp+8], 38578 ; 000096b2H
  00101	8d 4d e8	 lea	 ecx, DWORD PTR __k$550741[ebp]
  00104	c6 45 f2 00	 mov	 BYTE PTR __k$550741[ebp+10], 0
  00108	58		 pop	 eax
$LL320@LoadProper:
  00109	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  0010f	83 c1 04	 add	 ecx, 4
  00112	48		 dec	 eax
  00113	75 f4		 jne	 SHORT $LL320@LoadProper
  00115	6a 08		 push	 8
  00117	59		 pop	 ecx
$LL317@LoadProper:
  00118	8b c1		 mov	 eax, ecx
  0011a	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  0011f	79 05		 jns	 SHORT $LN559@LoadProper
  00121	48		 dec	 eax
  00122	83 c8 fc	 or	 eax, -4			; fffffffcH
  00125	40		 inc	 eax
$LN559@LoadProper:
  00126	b2 ed		 mov	 dl, -19			; ffffffedH
  00128	2a d0		 sub	 dl, al
  0012a	30 54 0d e8	 xor	 BYTE PTR __k$550741[ebp+ecx], dl
  0012e	41		 inc	 ecx
  0012f	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  00132	7c e4		 jl	 SHORT $LL317@LoadProper
  00134	8b 45 dc	 mov	 eax, DWORD PTR $T550673[ebp]
  00137	db 45 dc	 fild	 DWORD PTR $T550673[ebp]
  0013a	85 c0		 test	 eax, eax
  0013c	79 06		 jns	 SHORT $LN560@LoadProper
  0013e	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN560@LoadProper:
  00144	51		 push	 ecx
  00145	8d 45 e8	 lea	 eax, DWORD PTR __k$550741[ebp]
  00148	d9 1c 24	 fstp	 DWORD PTR [esp]
  0014b	50		 push	 eax
  0014c	8b cb		 mov	 ecx, ebx
  0014e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z
  00154	d9 9e d4 01 00
	00		 fstp	 DWORD PTR [esi+468]

; 36   : 	D3DXVec3Normalize( &m_vMoveDir, &m_vMoveDir );

  0015a	57		 push	 edi
  0015b	57		 push	 edi
  0015c	e8 00 00 00 00	 call	 _D3DXVec3Normalize@8

; 37   : 
; 38   : 	m_fMoveSpeed = rkLoader.LoadFloat_e( "move_speed", FLOAT100 );

  00161	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  00166	6a 02		 push	 2
  00168	c7 45 e8 80 83
	9d 8f		 mov	 DWORD PTR __k$550870[ebp], -1885502592 ; 8f9d8380H
  0016f	c7 45 ec b2 9f
	9b 8f		 mov	 DWORD PTR __k$550870[ebp+4], -1885626446 ; 8f9b9fb2H
  00176	66 c7 45 f0 88
	88		 mov	 WORD PTR __k$550870[ebp+8], 34952 ; 00008888H
  0017c	8d 4d e8	 lea	 ecx, DWORD PTR __k$550870[ebp]
  0017f	c6 45 f2 00	 mov	 BYTE PTR __k$550870[ebp+10], 0
  00183	5a		 pop	 edx
$LL428@LoadProper:
  00184	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  0018a	83 c1 04	 add	 ecx, 4
  0018d	4a		 dec	 edx
  0018e	75 f4		 jne	 SHORT $LL428@LoadProper
  00190	6a 08		 push	 8
  00192	5f		 pop	 edi
$LL425@LoadProper:
  00193	8b cf		 mov	 ecx, edi
  00195	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0019b	79 05		 jns	 SHORT $LN561@LoadProper
  0019d	49		 dec	 ecx
  0019e	83 c9 fc	 or	 ecx, -4			; fffffffcH
  001a1	41		 inc	 ecx
$LN561@LoadProper:
  001a2	b2 ed		 mov	 dl, -19			; ffffffedH
  001a4	2a d1		 sub	 dl, cl
  001a6	30 54 3d e8	 xor	 BYTE PTR __k$550870[ebp+edi], dl
  001aa	47		 inc	 edi
  001ab	83 ff 0a	 cmp	 edi, 10			; 0000000aH
  001ae	7c e3		 jl	 SHORT $LL425@LoadProper
  001b0	89 45 dc	 mov	 DWORD PTR tv4547[ebp], eax
  001b3	db 45 dc	 fild	 DWORD PTR tv4547[ebp]
  001b6	85 c0		 test	 eax, eax
  001b8	79 06		 jns	 SHORT $LN562@LoadProper
  001ba	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN562@LoadProper:
  001c0	51		 push	 ecx
  001c1	8d 45 e8	 lea	 eax, DWORD PTR __k$550870[ebp]
  001c4	d9 1c 24	 fstp	 DWORD PTR [esp]
  001c7	50		 push	 eax
  001c8	8b cb		 mov	 ecx, ebx
  001ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z
  001d0	d9 9e d8 01 00
	00		 fstp	 DWORD PTR [esi+472]
  001d6	6a 05		 push	 5
  001d8	59		 pop	 ecx

; 39   : 
; 40   : 	m_bNotMovePushStruct = rkLoader.LoadBool_e( "not_move_push_struct", 0 );

  001d9	c7 45 e0 83 83
	9f b5		 mov	 DWORD PTR __k$550956[ebp], -1247837309 ; b59f8383H
  001e0	c7 45 e4 80 83
	9d 8f		 mov	 DWORD PTR __k$550956[ebp+4], -1885502592 ; 8f9d8380H
  001e7	c7 45 e8 b2 9c
	9e 99		 mov	 DWORD PTR __k$550956[ebp+8], -1717658446 ; 999e9cb2H
  001ee	c7 45 ec 85 b3
	98 9e		 mov	 DWORD PTR __k$550956[ebp+12], -1634159739 ; 9e98b385H
  001f5	c7 45 f0 9f 99
	88 9e		 mov	 DWORD PTR __k$550956[ebp+16], -1635214945 ; 9e88999fH
  001fc	8d 45 e0	 lea	 eax, DWORD PTR __k$550956[ebp]
  001ff	c6 45 f4 00	 mov	 BYTE PTR __k$550956[ebp+20], 0
  00203	5f		 pop	 edi
$LL534@LoadProper:
  00204	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0020a	83 c0 04	 add	 eax, 4
  0020d	49		 dec	 ecx
  0020e	75 f4		 jne	 SHORT $LL534@LoadProper
  00210	51		 push	 ecx
  00211	8d 45 e0	 lea	 eax, DWORD PTR __k$550956[ebp]
  00214	50		 push	 eax
  00215	8b cb		 mov	 ecx, ebx
  00217	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadBool@ioINILoader@@QAE_NPBD_N@Z

; 41   : }

  0021d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00220	88 86 dd 01 00
	00		 mov	 BYTE PTR [esi+477], al
  00226	5e		 pop	 esi
  00227	33 cd		 xor	 ecx, ebp
  00229	5b		 pop	 ebx
  0022a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0022f	c9		 leave
  00230	c2 04 00	 ret	 4
?LoadProperty@ioConveyer@@UAEXAAVioINILoader@@@Z ENDP	; ioConveyer::LoadProperty
_TEXT	ENDS
PUBLIC	??0?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE@XZ ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::vector<ioWeapon *,std::allocator<ioWeapon *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE@XZ PROC ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::vector<ioWeapon *,std::allocator<ioWeapon *> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::vector<ioWeapon *,std::allocator<ioWeapon *> >
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@2@XZ ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@2@XZ PROC ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@2@XZ ENDP ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@2@XZ ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@2@XZ PROC ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@2@XZ ENDP ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::end
_TEXT	ENDS
PUBLIC	?begin@?$list@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@2@XZ ; std::list<ioPlayEntity *,std::allocator<ioPlayEntity *> >::begin
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
;	COMDAT ?begin@?$list@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@2@XZ PROC ; std::list<ioPlayEntity *,std::allocator<ioPlayEntity *> >::begin, COMDAT
; _this$ = ecx

; 786  : 		{	// return iterator for beginning of nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 787  : 		return (const_iterator(this->_Nextnode(this->_Myhead), this));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 08		 mov	 ecx, DWORD PTR [eax]
  00007	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx

; 788  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?begin@?$list@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@2@XZ ENDP ; std::list<ioPlayEntity *,std::allocator<ioPlayEntity *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$list@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@2@XZ ; std::list<ioPlayEntity *,std::allocator<ioPlayEntity *> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$list@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$list@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@2@XZ PROC ; std::list<ioPlayEntity *,std::allocator<ioPlayEntity *> >::end, COMDAT
; _this$ = ecx

; 796  : 		{	// return iterator for end of nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 797  : 		return (const_iterator(this->_Myhead, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 798  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?end@?$list@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@PAVioPlayEntity@@V?$allocator@PAVioPlayEntity@@@std@@@std@@@2@XZ ENDP ; std::list<ioPlayEntity *,std::allocator<ioPlayEntity *> >::end
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::operator!=
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioWeapon *,std::allocator<ioWeapon *> > >::operator!=
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@IAEXPAPAVioWeapon@@0@Z ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@IAEXPAPAVioWeapon@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@IAEXPAPAVioWeapon@@0@Z PROC ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@IAEXPAPAVioWeapon@@0@Z ENDP ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::_Destroy
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioplayentity.h
_TEXT	ENDS
;	COMDAT ?SetTeam@ioPlayEntity@@UAEXW4TeamType@@@Z
_TEXT	SEGMENT
_value$551209 = 8					; size = 4
_eType$ = 8						; size = 4
?SetTeam@ioPlayEntity@@UAEXW4TeamType@@@Z PROC		; ioPlayEntity::SetTeam, COMDAT
; _this$ = ecx

; 106  : 	virtual void SetTeam( TeamType eType ) { m_TeamType = eType; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _eType$[ebp]
  00006	89 45 08	 mov	 DWORD PTR _value$551209[ebp], eax
  00009	8d 45 08	 lea	 eax, DWORD PTR _value$551209[ebp]
  0000c	50		 push	 eax
  0000d	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  00013	e8 00 00 00 00	 call	 ?EncryptValueToPool@?$CEncrypt@W4TeamType@@@@AAEXPBD@Z ; CEncrypt<enum TeamType>::EncryptValueToPool
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?SetTeam@ioPlayEntity@@UAEXW4TeamType@@@Z ENDP		; ioPlayEntity::SetTeam
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@IAEXXZ ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::_Tidy
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@IAEXXZ PROC ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN12@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN12@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@IAEXXZ ENDP ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::_Tidy
_TEXT	ENDS
PUBLIC	??1?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE@XZ ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::~vector<ioWeapon *,std::allocator<ioWeapon *> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE@XZ PROC ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::~vector<ioWeapon *,std::allocator<ioWeapon *> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@IAEXXZ ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::_Tidy
??1?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::~vector<ioWeapon *,std::allocator<ioWeapon *> >
_TEXT	ENDS
EXTRN	??1FL_CollisionPlayEntity@@UAE@XZ:PROC		; FL_CollisionPlayEntity::~FL_CollisionPlayEntity
EXTRN	?TranslateByConveyer@ioMapAttachWeapon@@QAEXABUD3DXVECTOR3@@@Z:PROC ; ioMapAttachWeapon::TranslateByConveyer
EXTRN	?TranslateByConveyer@ioBoundBombWeapon@@QAEXABUD3DXVECTOR3@@@Z:PROC ; ioBoundBombWeapon::TranslateByConveyer
EXTRN	?TranslateByConveyer@ioMineWeapon4@@QAEXABUD3DXVECTOR3@@@Z:PROC ; ioMineWeapon4::TranslateByConveyer
EXTRN	?TranslateByConveyer@ioMineWeapon3@@QAEXABUD3DXVECTOR3@@@Z:PROC ; ioMineWeapon3::TranslateByConveyer
EXTRN	?TranslateByConveyer@ioMineWeapon2@@QAEXABUD3DXVECTOR3@@@Z:PROC ; ioMineWeapon2::TranslateByConveyer
EXTRN	?TranslateByConveyer@ioMineWeapon@@QAEXABUD3DXVECTOR3@@@Z:PROC ; ioMineWeapon::TranslateByConveyer
EXTRN	?UpdateMountedWeaponListByBox@ioPlayStage@@QAE_NPAVioGameEntity@@AAV?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@Z:PROC ; ioPlayStage::UpdateMountedWeaponListByBox
EXTRN	?FindEntityList@ioPlayStage@@QAE_NAAVFindListPredicate@@@Z:PROC ; ioPlayStage::FindEntityList
EXTRN	??0FL_CollisionPlayEntity@@QAE@ABVioOrientBox@@PAVioPlayEntity@@@Z:PROC ; FL_CollisionPlayEntity::FL_CollisionPlayEntity
EXTRN	?GetWorldCollisionBox@ioGameEntity@@QBEABVioOrientBox@@XZ:PROC ; ioGameEntity::GetWorldCollisionBox
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__EH_epilog3_GS:PROC
EXTRN	__EH_prolog3_GS:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Update@ioConveyer@@UAEXMKK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Update@ioConveyer@@UAEXMKK@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Update@ioConveyer@@UAEXMKK@Z$1
__ehfuncinfo$?Update@ioConveyer@@UAEXMKK@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Update@ioConveyer@@UAEXMKK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioconveyer.cpp
xdata$x	ENDS
;	COMDAT ?Update@ioConveyer@@UAEXMKK@Z
_TEXT	SEGMENT
_pMine3$548450 = -144					; size = 4
_pMine4$548451 = -140					; size = 4
_vMountedWeaponList$ = -136				; size = 16
_pBound$548452 = -120					; size = 4
_kFind$ = -116						; size = 88
_vMoveAmt$ = -28					; size = 12
__$EHRec$ = -12						; size = 12
_fTimePerSec$ = 8					; size = 4
_dwPreTime$ = 12					; size = 4
_dwCurTime$ = 16					; size = 4
?Update@ioConveyer@@UAEXMKK@Z PROC			; ioConveyer::Update, COMDAT
; _this$ = ecx

; 44   : {

  00000	68 84 00 00 00	 push	 132			; 00000084H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?Update@ioConveyer@@UAEXMKK@Z
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000f	8b f1		 mov	 esi, ecx

; 45   : 	if( !m_bEnableFunction )	return;

  00011	80 be dc 01 00
	00 00		 cmp	 BYTE PTR [esi+476], 0
  00018	0f 84 0b 02 00
	00		 je	 $LN26@Update

; 46   : 
; 47   : 	ioPlayStage *pStage = m_pModeParent->GetCreator();

  0001e	8b 86 8c 00 00
	00		 mov	 eax, DWORD PTR [esi+140]
  00024	8b 58 34	 mov	 ebx, DWORD PTR [eax+52]

; 48   : 	if( !pStage )	return;

  00027	85 db		 test	 ebx, ebx
  00029	0f 84 fa 01 00
	00		 je	 $LN26@Update

; 49   : 
; 50   : 	D3DXVECTOR3 vMoveAmt = m_vMoveDir * ( m_fMoveSpeed * fTimePerSec );

  0002f	f3 0f 10 86 d8
	01 00 00	 movss	 xmm0, DWORD PTR [esi+472]
  00037	f3 0f 10 4d 08	 movss	 xmm1, DWORD PTR _fTimePerSec$[ebp]
  0003c	0f 5a c9	 cvtps2pd xmm1, xmm1
  0003f	0f 5a c0	 cvtps2pd xmm0, xmm0
  00042	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00046	f3 0f 10 8e cc
	01 00 00	 movss	 xmm1, DWORD PTR [esi+460]
  0004e	0f 57 d2	 xorps	 xmm2, xmm2
  00051	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00055	f3 0f 5a d0	 cvtss2sd xmm2, xmm0
  00059	0f 57 db	 xorps	 xmm3, xmm3
  0005c	f3 0f 5a d8	 cvtss2sd xmm3, xmm0
  00060	0f 5a c9	 cvtps2pd xmm1, xmm1
  00063	f2 0f 59 ca	 mulsd	 xmm1, xmm2
  00067	f3 0f 10 96 d0
	01 00 00	 movss	 xmm2, DWORD PTR [esi+464]
  0006f	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00073	0f 5a d2	 cvtps2pd xmm2, xmm2
  00076	f2 0f 59 d3	 mulsd	 xmm2, xmm3
  0007a	f3 0f 10 9e d4
	01 00 00	 movss	 xmm3, DWORD PTR [esi+468]
  00082	0f 5a db	 cvtps2pd xmm3, xmm3
  00085	f2 0f 59 d8	 mulsd	 xmm3, xmm0
  00089	66 0f 5a c9	 cvtpd2ps xmm1, xmm1
  0008d	66 0f 5a d2	 cvtpd2ps xmm2, xmm2
  00091	66 0f 5a c3	 cvtpd2ps xmm0, xmm3

; 51   : 
; 52   : 	FL_CollisionPlayEntity kFind( GetWorldCollisionBox(), this );

  00095	56		 push	 esi
  00096	f3 0f 11 4d e4	 movss	 DWORD PTR _vMoveAmt$[ebp], xmm1
  0009b	f3 0f 11 55 e8	 movss	 DWORD PTR _vMoveAmt$[ebp+4], xmm2
  000a0	f3 0f 11 45 ec	 movss	 DWORD PTR _vMoveAmt$[ebp+8], xmm0
  000a5	e8 00 00 00 00	 call	 ?GetWorldCollisionBox@ioGameEntity@@QBEABVioOrientBox@@XZ ; ioGameEntity::GetWorldCollisionBox
  000aa	50		 push	 eax
  000ab	8d 4d 8c	 lea	 ecx, DWORD PTR _kFind$[ebp]
  000ae	e8 00 00 00 00	 call	 ??0FL_CollisionPlayEntity@@QAE@ABVioOrientBox@@PAVioPlayEntity@@@Z ; FL_CollisionPlayEntity::FL_CollisionPlayEntity
  000b3	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 53   : 	if( pStage->FindEntityList( kFind ) )

  000b7	8d 45 8c	 lea	 eax, DWORD PTR _kFind$[ebp]
  000ba	50		 push	 eax
  000bb	8b cb		 mov	 ecx, ebx
  000bd	e8 00 00 00 00	 call	 ?FindEntityList@ioPlayStage@@QAE_NAAVFindListPredicate@@@Z ; ioPlayStage::FindEntityList
  000c2	84 c0		 test	 al, al
  000c4	74 55		 je	 SHORT $LN20@Update

; 54   : 	{
; 55   : 		const PlayEntityList &rkEntityList = kFind.GetResultList();
; 56   : 
; 57   : 		PlayEntityList::const_iterator iter = rkEntityList.begin();

  000c6	8b 45 d8	 mov	 eax, DWORD PTR _kFind$[ebp+76]
  000c9	8b 38		 mov	 edi, DWORD PTR [eax]

; 58   : 		for( ; iter!=rkEntityList.end() ; ++iter )

  000cb	3b f8		 cmp	 edi, eax
  000cd	74 4c		 je	 SHORT $LN20@Update
$LL48@Update:

; 59   : 		{
; 60   : 			if( m_bNotMovePushStruct && ToPushStruct( (*iter) ) )

  000cf	80 be dd 01 00
	00 00		 cmp	 BYTE PTR [esi+477], 0
  000d6	74 0d		 je	 SHORT $LN19@Update
  000d8	ff 77 08	 push	 DWORD PTR [edi+8]
  000db	e8 00 00 00 00	 call	 ?ToPushStruct@@YAPAVioPushStruct@@PAVioGameEntity@@@Z ; ToPushStruct
  000e0	59		 pop	 ecx
  000e1	85 c0		 test	 eax, eax
  000e3	75 2f		 jne	 SHORT $LN21@Update
$LN19@Update:

; 61   : 				continue;
; 62   : 
; 63   : 			if( ToTeleportZone( (*iter) ) )

  000e5	ff 77 08	 push	 DWORD PTR [edi+8]
  000e8	e8 00 00 00 00	 call	 ?ToTeleportZone@@YAPAVioTeleportZone@@PAVioGameEntity@@@Z ; ToTeleportZone
  000ed	59		 pop	 ecx
  000ee	85 c0		 test	 eax, eax
  000f0	75 22		 jne	 SHORT $LN21@Update

; 64   : 				continue;
; 65   : 
; 66   : 			ioBaseChar* pChar = ToBaseChar( (*iter) );

  000f2	ff 77 08	 push	 DWORD PTR [edi+8]
  000f5	e8 00 00 00 00	 call	 ?ToBaseChar@@YAPAVioBaseChar@@PAVioGameEntity@@@Z ; ToBaseChar
  000fa	59		 pop	 ecx

; 67   : 			if ( pChar )

  000fb	85 c0		 test	 eax, eax
  000fd	74 09		 je	 SHORT $LN16@Update

; 68   : 			{
; 69   : 				if( pChar->GetConveyerDisable() )

  000ff	80 b8 1d 3b 00
	00 00		 cmp	 BYTE PTR [eax+15133], 0
  00106	75 0c		 jne	 SHORT $LN21@Update
$LN16@Update:

; 70   : 					continue;
; 71   : 			}
; 72   : 
; 73   : 			(*iter)->TranslateByConveyer( vMoveAmt );

  00108	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0010b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0010d	8d 55 e4	 lea	 edx, DWORD PTR _vMoveAmt$[ebp]
  00110	52		 push	 edx
  00111	ff 50 54	 call	 DWORD PTR [eax+84]
$LN21@Update:

; 58   : 		for( ; iter!=rkEntityList.end() ; ++iter )

  00114	8b 3f		 mov	 edi, DWORD PTR [edi]
  00116	3b 7d d8	 cmp	 edi, DWORD PTR _kFind$[ebp+76]
  00119	75 b4		 jne	 SHORT $LL48@Update
$LN20@Update:

; 74   : 		}
; 75   : 	}
; 76   : 
; 77   : 	MountedWeaponList vMountedWeaponList;

  0011b	33 c0		 xor	 eax, eax
  0011d	89 85 78 ff ff
	ff		 mov	 DWORD PTR _vMountedWeaponList$[ebp], eax
  00123	89 85 7c ff ff
	ff		 mov	 DWORD PTR _vMountedWeaponList$[ebp+4], eax
  00129	89 45 80	 mov	 DWORD PTR _vMountedWeaponList$[ebp+8], eax

; 78   : 	if( pStage->UpdateMountedWeaponListByBox( this, vMountedWeaponList ) )

  0012c	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _vMountedWeaponList$[ebp]
  00132	50		 push	 eax
  00133	56		 push	 esi
  00134	8b cb		 mov	 ecx, ebx
  00136	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0013a	e8 00 00 00 00	 call	 ?UpdateMountedWeaponListByBox@ioPlayStage@@QAE_NPAVioGameEntity@@AAV?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@@Z ; ioPlayStage::UpdateMountedWeaponListByBox
  0013f	84 c0		 test	 al, al
  00141	0f 84 c7 00 00
	00		 je	 $LN12@Update

; 79   : 	{
; 80   : 		MountedWeaponList::iterator iMount = vMountedWeaponList.begin();

  00147	8b b5 78 ff ff
	ff		 mov	 esi, DWORD PTR _vMountedWeaponList$[ebp]
  0014d	e9 b0 00 00 00	 jmp	 $LN150@Update

; 81   : 		for( ; iMount!=vMountedWeaponList.end() ; ++iMount )

$LL100@Update:

; 82   : 		{
; 83   : 			ioMineWeapon *pMine = ToMineWeapon( *iMount );

  00152	ff 36		 push	 DWORD PTR [esi]
  00154	e8 00 00 00 00	 call	 ?ToMineWeapon@@YAPAVioMineWeapon@@PAVioWeapon@@@Z ; ToMineWeapon

; 84   : 			ioMineWeapon2 *pMine2 = ToMineWeapon2( *iMount );

  00159	ff 36		 push	 DWORD PTR [esi]
  0015b	8b f8		 mov	 edi, eax
  0015d	e8 00 00 00 00	 call	 ?ToMineWeapon2@@YAPAVioMineWeapon2@@PAVioWeapon@@@Z ; ToMineWeapon2

; 85   : 			ioMineWeapon3 *pMine3 = ToMineWeapon3( *iMount );

  00162	ff 36		 push	 DWORD PTR [esi]
  00164	8b d8		 mov	 ebx, eax
  00166	e8 00 00 00 00	 call	 ?ToMineWeapon3@@YAPAVioMineWeapon3@@PAVioWeapon@@@Z ; ToMineWeapon3

; 86   : 			ioMineWeapon4 *pMine4 = ToMineWeapon4( *iMount );

  0016b	ff 36		 push	 DWORD PTR [esi]
  0016d	89 85 70 ff ff
	ff		 mov	 DWORD PTR _pMine3$548450[ebp], eax
  00173	e8 00 00 00 00	 call	 ?ToMineWeapon4@@YAPAVioMineWeapon4@@PAVioWeapon@@@Z ; ToMineWeapon4

; 87   : 			ioBoundBombWeapon *pBound = ToBoundBombWeapon( *iMount );

  00178	ff 36		 push	 DWORD PTR [esi]
  0017a	89 85 74 ff ff
	ff		 mov	 DWORD PTR _pMine4$548451[ebp], eax
  00180	e8 00 00 00 00	 call	 ?ToBoundBombWeapon@@YAPAVioBoundBombWeapon@@PAVioWeapon@@@Z ; ToBoundBombWeapon

; 88   : 			ioMapAttachWeapon *pAttach = ToMapAttachWeapon( *iMount );

  00185	ff 36		 push	 DWORD PTR [esi]
  00187	89 45 88	 mov	 DWORD PTR _pBound$548452[ebp], eax
  0018a	e8 00 00 00 00	 call	 ?ToMapAttachWeapon@@YAPAVioMapAttachWeapon@@PAVioWeapon@@@Z ; ToMapAttachWeapon
  0018f	83 c4 18	 add	 esp, 24			; 00000018H

; 89   : 
; 90   : 			if( pMine )

  00192	85 ff		 test	 edi, edi
  00194	74 0d		 je	 SHORT $LN11@Update

; 91   : 				pMine->TranslateByConveyer( vMoveAmt );

  00196	8d 45 e4	 lea	 eax, DWORD PTR _vMoveAmt$[ebp]
  00199	50		 push	 eax
  0019a	8b cf		 mov	 ecx, edi
  0019c	e8 00 00 00 00	 call	 ?TranslateByConveyer@ioMineWeapon@@QAEXABUD3DXVECTOR3@@@Z ; ioMineWeapon::TranslateByConveyer
  001a1	eb 5c		 jmp	 SHORT $LN13@Update
$LN11@Update:

; 92   : 			else if( pMine2 )

  001a3	85 db		 test	 ebx, ebx
  001a5	74 0d		 je	 SHORT $LN9@Update

; 93   : 				pMine2->TranslateByConveyer( vMoveAmt );

  001a7	8d 45 e4	 lea	 eax, DWORD PTR _vMoveAmt$[ebp]
  001aa	50		 push	 eax
  001ab	8b cb		 mov	 ecx, ebx
  001ad	e8 00 00 00 00	 call	 ?TranslateByConveyer@ioMineWeapon2@@QAEXABUD3DXVECTOR3@@@Z ; ioMineWeapon2::TranslateByConveyer
  001b2	eb 4b		 jmp	 SHORT $LN13@Update
$LN9@Update:

; 94   : 			else if( pMine3 )

  001b4	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _pMine3$548450[ebp]
  001ba	85 c9		 test	 ecx, ecx
  001bc	74 0b		 je	 SHORT $LN7@Update

; 95   : 				pMine3->TranslateByConveyer( vMoveAmt );

  001be	8d 45 e4	 lea	 eax, DWORD PTR _vMoveAmt$[ebp]
  001c1	50		 push	 eax
  001c2	e8 00 00 00 00	 call	 ?TranslateByConveyer@ioMineWeapon3@@QAEXABUD3DXVECTOR3@@@Z ; ioMineWeapon3::TranslateByConveyer
  001c7	eb 36		 jmp	 SHORT $LN13@Update
$LN7@Update:

; 96   : 			else if( pMine4 )

  001c9	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _pMine4$548451[ebp]
  001cf	85 c9		 test	 ecx, ecx
  001d1	74 0b		 je	 SHORT $LN5@Update

; 97   : 				pMine4->TranslateByConveyer( vMoveAmt );

  001d3	8d 45 e4	 lea	 eax, DWORD PTR _vMoveAmt$[ebp]
  001d6	50		 push	 eax
  001d7	e8 00 00 00 00	 call	 ?TranslateByConveyer@ioMineWeapon4@@QAEXABUD3DXVECTOR3@@@Z ; ioMineWeapon4::TranslateByConveyer
  001dc	eb 21		 jmp	 SHORT $LN13@Update
$LN5@Update:

; 98   : 			else if( pBound )

  001de	8b 4d 88	 mov	 ecx, DWORD PTR _pBound$548452[ebp]
  001e1	85 c9		 test	 ecx, ecx
  001e3	74 0b		 je	 SHORT $LN3@Update

; 99   : 				pBound->TranslateByConveyer( vMoveAmt );

  001e5	8d 45 e4	 lea	 eax, DWORD PTR _vMoveAmt$[ebp]
  001e8	50		 push	 eax
  001e9	e8 00 00 00 00	 call	 ?TranslateByConveyer@ioBoundBombWeapon@@QAEXABUD3DXVECTOR3@@@Z ; ioBoundBombWeapon::TranslateByConveyer
  001ee	eb 0f		 jmp	 SHORT $LN13@Update
$LN3@Update:

; 100  : 			else if( pAttach )

  001f0	85 c0		 test	 eax, eax
  001f2	74 0b		 je	 SHORT $LN13@Update

; 101  : 				pAttach->TranslateByConveyer( vMoveAmt );

  001f4	8d 4d e4	 lea	 ecx, DWORD PTR _vMoveAmt$[ebp]
  001f7	51		 push	 ecx
  001f8	8b c8		 mov	 ecx, eax
  001fa	e8 00 00 00 00	 call	 ?TranslateByConveyer@ioMapAttachWeapon@@QAEXABUD3DXVECTOR3@@@Z ; ioMapAttachWeapon::TranslateByConveyer
$LN13@Update:

; 81   : 		for( ; iMount!=vMountedWeaponList.end() ; ++iMount )

  001ff	83 c6 04	 add	 esi, 4
$LN150@Update:
  00202	3b b5 7c ff ff
	ff		 cmp	 esi, DWORD PTR _vMountedWeaponList$[ebp+4]
  00208	0f 85 44 ff ff
	ff		 jne	 $LL100@Update
$LN12@Update:

; 102  : 		}
; 103  : 	}
; 104  : }

  0020e	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _vMountedWeaponList$[ebp]
  00214	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00218	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@IAEXXZ ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::_Tidy
  0021d	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00221	8d 4d 8c	 lea	 ecx, DWORD PTR _kFind$[ebp]
  00224	e8 00 00 00 00	 call	 ??1FL_CollisionPlayEntity@@UAE@XZ ; FL_CollisionPlayEntity::~FL_CollisionPlayEntity
$LN26@Update:
  00229	e8 00 00 00 00	 call	 __EH_epilog3_GS
  0022e	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Update@ioConveyer@@UAEXMKK@Z$0:
  00000	8d 4d 8c	 lea	 ecx, DWORD PTR _kFind$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1FL_CollisionPlayEntity@@UAE@XZ ; FL_CollisionPlayEntity::~FL_CollisionPlayEntity
__unwindfunclet$?Update@ioConveyer@@UAEXMKK@Z$1:
  00008	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _vMountedWeaponList$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@PAVioWeapon@@V?$allocator@PAVioWeapon@@@std@@@std@@QAE@XZ ; std::vector<ioWeapon *,std::allocator<ioWeapon *> >::~vector<ioWeapon *,std::allocator<ioWeapon *> >
__ehhandler$?Update@ioConveyer@@UAEXMKK@Z:
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 8a 6c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-148]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Update@ioConveyer@@UAEXMKK@Z
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Update@ioConveyer@@UAEXMKK@Z ENDP			; ioConveyer::Update
END
