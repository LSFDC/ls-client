; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioEtcItem2.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_7ioEtcItemConsumption@@6B@			; ioEtcItemConsumption::`vftable'
PUBLIC	??0ioEtcItemConsumption@@QAE@XZ			; ioEtcItemConsumption::ioEtcItemConsumption
PUBLIC	??_R4ioEtcItemConsumption@@6B@			; ioEtcItemConsumption::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioEtcItemConsumption@@@8		; ioEtcItemConsumption `RTTI Type Descriptor'
PUBLIC	??_R3ioEtcItemConsumption@@8			; ioEtcItemConsumption::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioEtcItemConsumption@@8			; ioEtcItemConsumption::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioEtcItemConsumption@@8		; ioEtcItemConsumption::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioEtcItem@@8			; ioEtcItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioEtcItem@@@8				; ioEtcItem `RTTI Type Descriptor'
PUBLIC	??_R3ioEtcItem@@8				; ioEtcItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioEtcItem@@8				; ioEtcItem::`RTTI Base Class Array'
PUBLIC	?LoadProperty@ioEtcItemConsumption@@UAEXAAVioINILoader@@@Z ; ioEtcItemConsumption::LoadProperty
PUBLIC	?SetUse@ioEtcItem@@UAEXXZ			; ioEtcItem::SetUse
PUBLIC	?Execute@ioEtcItem@@UBEXXZ			; ioEtcItem::Execute
PUBLIC	?SendBuy@ioEtcItem@@UAEXXZ			; ioEtcItem::SendBuy
PUBLIC	?OnInit@ioEtcItemConsumption@@UAEXPAVioUserEtcItem@@PAVioPlayStage@@@Z ; ioEtcItemConsumption::OnInit
PUBLIC	?OnUse@ioEtcItemConsumption@@UAEXHAAVSP2Packet@@PAVioUserEtcItem@@PAVioPlayStage@@@Z ; ioEtcItemConsumption::OnUse
PUBLIC	?OnSell@ioEtcItemConsumption@@UAEXHAAVSP2Packet@@PAVioUserEtcItem@@@Z ; ioEtcItemConsumption::OnSell
PUBLIC	?OnBuy@ioEtcItemConsumption@@UAEXXZ		; ioEtcItemConsumption::OnBuy
PUBLIC	?OnUseBtnPush@ioEtcItemConsumption@@UAE_NHPAVioUserEtcItem@@_N@Z ; ioEtcItemConsumption::OnUseBtnPush
PUBLIC	?OnAction@ioEtcItem@@UAEXAAVSP2Packet@@PAVioPlayStage@@@Z ; ioEtcItem::OnAction
PUBLIC	?OnUseSwitchBtnPush@ioEtcItem@@UAE_NPAVioUserEtcItem@@_NPAVioPlayStage@@@Z ; ioEtcItem::OnUseSwitchBtnPush
PUBLIC	?OnUseSwitch@ioEtcItem@@UAEXAAVSP2Packet@@PAVioPlayStage@@@Z ; ioEtcItem::OnUseSwitch
PUBLIC	?IsBuyCondition@ioEtcItem@@UAE_NH@Z		; ioEtcItem::IsBuyCondition
PUBLIC	?IsShop3DChar@ioEtcItem@@UAE_NXZ		; ioEtcItem::IsShop3DChar
PUBLIC	?GetType@ioEtcItemConsumption@@UBEKXZ		; ioEtcItemConsumption::GetType
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
EXTRN	??1ioEtcItem@@UAE@XZ:PROC			; ioEtcItem::~ioEtcItem
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
EXTRN	??0ioEtcItem@@QAE@XZ:PROC			; ioEtcItem::ioEtcItem
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?OnSellBtnPush@ioEtcItem@@UAE_NHPAVioUserEtcItem@@PAVioWnd@@@Z:PROC ; ioEtcItem::OnSellBtnPush
EXTRN	??_EioEtcItemConsumption@@UAEPAXI@Z:PROC	; ioEtcItemConsumption::`vector deleting destructor'
;	COMDAT ??_R2ioEtcItem@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioetcitem2.cpp
rdata$r	SEGMENT
??_R2ioEtcItem@@8 DD FLAT:??_R1A@?0A@EA@ioEtcItem@@8	; ioEtcItem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioEtcItem@@8
rdata$r	SEGMENT
??_R3ioEtcItem@@8 DD 00H				; ioEtcItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioEtcItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioEtcItem@@@8
_DATA	SEGMENT
??_R0?AVioEtcItem@@@8 DD FLAT:??_7type_info@@6B@	; ioEtcItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioEtcItem@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioEtcItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioEtcItem@@8 DD FLAT:??_R0?AVioEtcItem@@@8 ; ioEtcItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioEtcItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioEtcItemConsumption@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioEtcItemConsumption@@8 DD FLAT:??_R0?AVioEtcItemConsumption@@@8 ; ioEtcItemConsumption::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioEtcItemConsumption@@8
rdata$r	ENDS
;	COMDAT ??_R2ioEtcItemConsumption@@8
rdata$r	SEGMENT
??_R2ioEtcItemConsumption@@8 DD FLAT:??_R1A@?0A@EA@ioEtcItemConsumption@@8 ; ioEtcItemConsumption::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioEtcItem@@8
rdata$r	ENDS
;	COMDAT ??_R3ioEtcItemConsumption@@8
rdata$r	SEGMENT
??_R3ioEtcItemConsumption@@8 DD 00H			; ioEtcItemConsumption::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioEtcItemConsumption@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioEtcItemConsumption@@@8
_DATA	SEGMENT
??_R0?AVioEtcItemConsumption@@@8 DD FLAT:??_7type_info@@6B@ ; ioEtcItemConsumption `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioEtcItemConsumption@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioEtcItemConsumption@@6B@
rdata$r	SEGMENT
??_R4ioEtcItemConsumption@@6B@ DD 00H			; ioEtcItemConsumption::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioEtcItemConsumption@@@8
	DD	FLAT:??_R3ioEtcItemConsumption@@8
rdata$r	ENDS
;	COMDAT ??_7ioEtcItemConsumption@@6B@
CONST	SEGMENT
??_7ioEtcItemConsumption@@6B@ DD FLAT:??_R4ioEtcItemConsumption@@6B@ ; ioEtcItemConsumption::`vftable'
	DD	FLAT:?LoadProperty@ioEtcItemConsumption@@UAEXAAVioINILoader@@@Z
	DD	FLAT:?SetUse@ioEtcItem@@UAEXXZ
	DD	FLAT:?Execute@ioEtcItem@@UBEXXZ
	DD	FLAT:?SendBuy@ioEtcItem@@UAEXXZ
	DD	FLAT:?OnInit@ioEtcItemConsumption@@UAEXPAVioUserEtcItem@@PAVioPlayStage@@@Z
	DD	FLAT:?OnUse@ioEtcItemConsumption@@UAEXHAAVSP2Packet@@PAVioUserEtcItem@@PAVioPlayStage@@@Z
	DD	FLAT:?OnSell@ioEtcItemConsumption@@UAEXHAAVSP2Packet@@PAVioUserEtcItem@@@Z
	DD	FLAT:?OnBuy@ioEtcItemConsumption@@UAEXXZ
	DD	FLAT:?OnUseBtnPush@ioEtcItemConsumption@@UAE_NHPAVioUserEtcItem@@_N@Z
	DD	FLAT:?OnSellBtnPush@ioEtcItem@@UAE_NHPAVioUserEtcItem@@PAVioWnd@@@Z
	DD	FLAT:?OnAction@ioEtcItem@@UAEXAAVSP2Packet@@PAVioPlayStage@@@Z
	DD	FLAT:?OnUseSwitchBtnPush@ioEtcItem@@UAE_NPAVioUserEtcItem@@_NPAVioPlayStage@@@Z
	DD	FLAT:?OnUseSwitch@ioEtcItem@@UAEXAAVSP2Packet@@PAVioPlayStage@@@Z
	DD	FLAT:?IsBuyCondition@ioEtcItem@@UAE_NH@Z
	DD	FLAT:?IsShop3DChar@ioEtcItem@@UAE_NXZ
	DD	FLAT:??_EioEtcItemConsumption@@UAEPAXI@Z
	DD	FLAT:?GetType@ioEtcItemConsumption@@UBEKXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ioEtcItemConsumption@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioEtcItemConsumption@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ioEtcItemConsumption@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0ioEtcItemConsumption@@QAE@XZ$2
__ehfuncinfo$??0ioEtcItemConsumption@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0ioEtcItemConsumption@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0ioEtcItemConsumption@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ioEtcItemConsumption@@QAE@XZ PROC			; ioEtcItemConsumption::ioEtcItemConsumption, COMDAT
; _this$ = ecx

; 11   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioEtcItemConsumption@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	e8 00 00 00 00	 call	 ??0ioEtcItem@@QAE@XZ	; ioEtcItem::ioEtcItem
  00016	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??0ioHashString@@QAE@XZ
  0001c	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00020	8d 8e 88 01 00
	00		 lea	 ecx, DWORD PTR [esi+392]
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioEtcItemConsumption@@6B@
  0002c	ff d7		 call	 edi
  0002e	8d 8e 98 01 00
	00		 lea	 ecx, DWORD PTR [esi+408]
  00034	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00038	ff d7		 call	 edi
  0003a	8d 8e a8 01 00
	00		 lea	 ecx, DWORD PTR [esi+424]
  00040	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00044	ff d7		 call	 edi

; 12   : 
; 13   : }

  00046	8b c6		 mov	 eax, esi
  00048	e8 00 00 00 00	 call	 __EH_epilog3
  0004d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioEtcItemConsumption@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioEtcItem@@UAE@XZ	; ioEtcItem::~ioEtcItem
__unwindfunclet$??0ioEtcItemConsumption@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 88 01 00
	00		 add	 ecx, 392		; 00000188H
  00011	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??0ioEtcItemConsumption@@QAE@XZ$2:
  00017	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	81 c1 98 01 00
	00		 add	 ecx, 408		; 00000198H
  00020	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??0ioEtcItemConsumption@@QAE@XZ:
  00026	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002d	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00030	33 c8		 xor	 ecx, eax
  00032	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00037	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioEtcItemConsumption@@QAE@XZ
  0003c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioEtcItemConsumption@@QAE@XZ ENDP			; ioEtcItemConsumption::ioEtcItemConsumption
PUBLIC	??1ioEtcItemConsumption@@UAE@XZ			; ioEtcItemConsumption::~ioEtcItemConsumption
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ioEtcItemConsumption@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioEtcItemConsumption@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ioEtcItemConsumption@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1ioEtcItemConsumption@@UAE@XZ$2
__ehfuncinfo$??1ioEtcItemConsumption@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1ioEtcItemConsumption@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1ioEtcItemConsumption@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioEtcItemConsumption@@UAE@XZ PROC			; ioEtcItemConsumption::~ioEtcItemConsumption, COMDAT
; _this$ = ecx

; 16   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioEtcItemConsumption@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioEtcItemConsumption@@6B@

; 17   : 
; 18   : }

  00017	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??1ioHashString@@QAE@XZ
  0001d	8d 8e a8 01 00
	00		 lea	 ecx, DWORD PTR [esi+424]
  00023	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  0002a	ff d7		 call	 edi
  0002c	8d 8e 98 01 00
	00		 lea	 ecx, DWORD PTR [esi+408]
  00032	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00036	ff d7		 call	 edi
  00038	8d 8e 88 01 00
	00		 lea	 ecx, DWORD PTR [esi+392]
  0003e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00042	ff d7		 call	 edi
  00044	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ??1ioEtcItem@@UAE@XZ	; ioEtcItem::~ioEtcItem
  0004f	e8 00 00 00 00	 call	 __EH_epilog3
  00054	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioEtcItemConsumption@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioEtcItem@@UAE@XZ	; ioEtcItem::~ioEtcItem
__unwindfunclet$??1ioEtcItemConsumption@@UAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 88 01 00
	00		 add	 ecx, 392		; 00000188H
  00011	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??1ioEtcItemConsumption@@UAE@XZ$2:
  00017	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	81 c1 98 01 00
	00		 add	 ecx, 408		; 00000198H
  00020	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??1ioEtcItemConsumption@@UAE@XZ:
  00026	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002d	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00030	33 c8		 xor	 ecx, eax
  00032	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00037	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioEtcItemConsumption@@UAE@XZ
  0003c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioEtcItemConsumption@@UAE@XZ ENDP			; ioEtcItemConsumption::~ioEtcItemConsumption
PUBLIC	??_C@_0BJ@ENDOALOO@?$CFs?5pUserEtcItem?5?$DN?$DN?5NULL?4?$AA@ ; `string'
PUBLIC	??_C@_0BN@MGOFKCCL@ioEtcItemConsumption?3?3OnInit?$AA@ ; `string'
EXTRN	__imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ:PROC
EXTRN	__imp_?LOG@@3VCLog@@A:BYTE
;	COMDAT ??_C@_0BJ@ENDOALOO@?$CFs?5pUserEtcItem?5?$DN?$DN?5NULL?4?$AA@
CONST	SEGMENT
??_C@_0BJ@ENDOALOO@?$CFs?5pUserEtcItem?5?$DN?$DN?5NULL?4?$AA@ DB '%s pUse'
	DB	'rEtcItem == NULL.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MGOFKCCL@ioEtcItemConsumption?3?3OnInit?$AA@
CONST	SEGMENT
??_C@_0BN@MGOFKCCL@ioEtcItemConsumption?3?3OnInit?$AA@ DB 'ioEtcItemConsu'
	DB	'mption::OnInit', 00H			; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?OnInit@ioEtcItemConsumption@@UAEXPAVioUserEtcItem@@PAVioPlayStage@@@Z
_TEXT	SEGMENT
_pUserEtcItem$ = 8					; size = 4
_pPlayStage$ = 12					; size = 4
?OnInit@ioEtcItemConsumption@@UAEXPAVioUserEtcItem@@PAVioPlayStage@@@Z PROC ; ioEtcItemConsumption::OnInit, COMDAT
; _this$ = ecx

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 22   : 	if( !pUserEtcItem )

  00003	83 7d 08 00	 cmp	 DWORD PTR _pUserEtcItem$[ebp], 0
  00007	75 1b		 jne	 SHORT $LN1@OnInit

; 23   : 	{
; 24   : 		LOG.PrintTimeAndLog( 0, "%s pUserEtcItem == NULL.", __FUNCTION__ );

  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@MGOFKCCL@ioEtcItemConsumption?3?3OnInit?$AA@
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@ENDOALOO@?$CFs?5pUserEtcItem?5?$DN?$DN?5NULL?4?$AA@
  00013	6a 00		 push	 0
  00015	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  00021	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@OnInit:

; 25   : 		return;
; 26   : 	}
; 27   : }

  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
?OnInit@ioEtcItemConsumption@@UAEXPAVioUserEtcItem@@PAVioPlayStage@@@Z ENDP ; ioEtcItemConsumption::OnInit
_TEXT	ENDS
EXTRN	?UpdateItem@ioSlotMgr@@QAEXK@Z:PROC		; ioSlotMgr::UpdateItem
EXTRN	?GetSingleton@ioSlotMgr@@SAAAV1@XZ:PROC		; ioSlotMgr::GetSingleton
; Function compile flags: /Ogsp
;	COMDAT ?OnBuy@ioEtcItemConsumption@@UAEXXZ
_TEXT	SEGMENT
?OnBuy@ioEtcItemConsumption@@UAEXXZ PROC		; ioEtcItemConsumption::OnBuy, COMDAT
; _this$ = ecx

; 61   : 	g_SlotMgr.UpdateItem(m_dwType);

  00000	ff 71 24	 push	 DWORD PTR [ecx+36]
  00003	e8 00 00 00 00	 call	 ?GetSingleton@ioSlotMgr@@SAAAV1@XZ ; ioSlotMgr::GetSingleton
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?UpdateItem@ioSlotMgr@@QAEXK@Z ; ioSlotMgr::UpdateItem

; 62   : }

  0000f	c3		 ret	 0
?OnBuy@ioEtcItemConsumption@@UAEXXZ ENDP		; ioEtcItemConsumption::OnBuy
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?OnUseBtnPush@ioEtcItemConsumption@@UAE_NHPAVioUserEtcItem@@_N@Z
_TEXT	SEGMENT
_iType$ = 8						; size = 4
_pUserEtcItem$ = 12					; size = 4
_bPresentLimitCheck$ = 16				; size = 1
?OnUseBtnPush@ioEtcItemConsumption@@UAE_NHPAVioUserEtcItem@@_N@Z PROC ; ioEtcItemConsumption::OnUseBtnPush, COMDAT
; _this$ = ecx

; 66   : 	return true;

  00000	b0 01		 mov	 al, 1

; 67   : }

  00002	c2 0c 00	 ret	 12			; 0000000cH
?OnUseBtnPush@ioEtcItemConsumption@@UAE_NHPAVioUserEtcItem@@_N@Z ENDP ; ioEtcItemConsumption::OnUseBtnPush
_TEXT	ENDS
EXTRN	?OnSell@ioEtcItem@@UAEXHAAVSP2Packet@@PAVioUserEtcItem@@@Z:PROC ; ioEtcItem::OnSell
; Function compile flags: /Ogsp
;	COMDAT ?OnSell@ioEtcItemConsumption@@UAEXHAAVSP2Packet@@PAVioUserEtcItem@@@Z
_TEXT	SEGMENT
_iType$ = 8						; size = 4
_rkPacket$ = 12						; size = 4
_pUserEtcItem$ = 16					; size = 4
?OnSell@ioEtcItemConsumption@@UAEXHAAVSP2Packet@@PAVioUserEtcItem@@@Z PROC ; ioEtcItemConsumption::OnSell, COMDAT
; _this$ = ecx

; 70   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   : }

  00003	5d		 pop	 ebp

; 71   : 	ioEtcItem::OnSell( iType, rkPacket, pUserEtcItem );

  00004	e9 00 00 00 00	 jmp	 ?OnSell@ioEtcItem@@UAEXHAAVSP2Packet@@PAVioUserEtcItem@@@Z ; ioEtcItem::OnSell
?OnSell@ioEtcItemConsumption@@UAEXHAAVSP2Packet@@PAVioUserEtcItem@@@Z ENDP ; ioEtcItemConsumption::OnSell
_TEXT	ENDS
PUBLIC	??_7ioEtcItemRevive@@6B@			; ioEtcItemRevive::`vftable'
PUBLIC	??0ioEtcItemRevive@@QAE@XZ			; ioEtcItemRevive::ioEtcItemRevive
PUBLIC	??_R4ioEtcItemRevive@@6B@			; ioEtcItemRevive::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioEtcItemRevive@@@8			; ioEtcItemRevive `RTTI Type Descriptor'
PUBLIC	??_R3ioEtcItemRevive@@8				; ioEtcItemRevive::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioEtcItemRevive@@8				; ioEtcItemRevive::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioEtcItemRevive@@8		; ioEtcItemRevive::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?OnUse@ioEtcItemRevive@@UAEXHAAVSP2Packet@@PAVioUserEtcItem@@PAVioPlayStage@@@Z ; ioEtcItemRevive::OnUse
PUBLIC	?OnBuy@ioEtcItemRevive@@UAEXXZ			; ioEtcItemRevive::OnBuy
PUBLIC	?GetType@ioEtcItemRevive@@UBEKXZ		; ioEtcItemRevive::GetType
EXTRN	??_EioEtcItemRevive@@UAEPAXI@Z:PROC		; ioEtcItemRevive::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@ioEtcItemRevive@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioEtcItemRevive@@8 DD FLAT:??_R0?AVioEtcItemRevive@@@8 ; ioEtcItemRevive::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioEtcItemRevive@@8
rdata$r	ENDS
;	COMDAT ??_R2ioEtcItemRevive@@8
rdata$r	SEGMENT
??_R2ioEtcItemRevive@@8 DD FLAT:??_R1A@?0A@EA@ioEtcItemRevive@@8 ; ioEtcItemRevive::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioEtcItemConsumption@@8
	DD	FLAT:??_R1A@?0A@EA@ioEtcItem@@8
rdata$r	ENDS
;	COMDAT ??_R3ioEtcItemRevive@@8
rdata$r	SEGMENT
??_R3ioEtcItemRevive@@8 DD 00H				; ioEtcItemRevive::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ioEtcItemRevive@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioEtcItemRevive@@@8
_DATA	SEGMENT
??_R0?AVioEtcItemRevive@@@8 DD FLAT:??_7type_info@@6B@	; ioEtcItemRevive `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioEtcItemRevive@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioEtcItemRevive@@6B@
rdata$r	SEGMENT
??_R4ioEtcItemRevive@@6B@ DD 00H			; ioEtcItemRevive::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioEtcItemRevive@@@8
	DD	FLAT:??_R3ioEtcItemRevive@@8
rdata$r	ENDS
;	COMDAT ??_7ioEtcItemRevive@@6B@
CONST	SEGMENT
??_7ioEtcItemRevive@@6B@ DD FLAT:??_R4ioEtcItemRevive@@6B@ ; ioEtcItemRevive::`vftable'
	DD	FLAT:?LoadProperty@ioEtcItemConsumption@@UAEXAAVioINILoader@@@Z
	DD	FLAT:?SetUse@ioEtcItem@@UAEXXZ
	DD	FLAT:?Execute@ioEtcItem@@UBEXXZ
	DD	FLAT:?SendBuy@ioEtcItem@@UAEXXZ
	DD	FLAT:?OnInit@ioEtcItemConsumption@@UAEXPAVioUserEtcItem@@PAVioPlayStage@@@Z
	DD	FLAT:?OnUse@ioEtcItemRevive@@UAEXHAAVSP2Packet@@PAVioUserEtcItem@@PAVioPlayStage@@@Z
	DD	FLAT:?OnSell@ioEtcItemConsumption@@UAEXHAAVSP2Packet@@PAVioUserEtcItem@@@Z
	DD	FLAT:?OnBuy@ioEtcItemRevive@@UAEXXZ
	DD	FLAT:?OnUseBtnPush@ioEtcItemConsumption@@UAE_NHPAVioUserEtcItem@@_N@Z
	DD	FLAT:?OnSellBtnPush@ioEtcItem@@UAE_NHPAVioUserEtcItem@@PAVioWnd@@@Z
	DD	FLAT:?OnAction@ioEtcItem@@UAEXAAVSP2Packet@@PAVioPlayStage@@@Z
	DD	FLAT:?OnUseSwitchBtnPush@ioEtcItem@@UAE_NPAVioUserEtcItem@@_NPAVioPlayStage@@@Z
	DD	FLAT:?OnUseSwitch@ioEtcItem@@UAEXAAVSP2Packet@@PAVioPlayStage@@@Z
	DD	FLAT:?IsBuyCondition@ioEtcItem@@UAE_NH@Z
	DD	FLAT:?IsShop3DChar@ioEtcItem@@UAE_NXZ
	DD	FLAT:??_EioEtcItemRevive@@UAEPAXI@Z
	DD	FLAT:?GetType@ioEtcItemRevive@@UBEKXZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0ioEtcItemRevive@@QAE@XZ
_TEXT	SEGMENT
??0ioEtcItemRevive@@QAE@XZ PROC				; ioEtcItemRevive::ioEtcItemRevive, COMDAT
; _this$ = ecx

; 102  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??0ioEtcItemConsumption@@QAE@XZ ; ioEtcItemConsumption::ioEtcItemConsumption
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioEtcItemRevive@@6B@

; 103  : 
; 104  : }

  0000e	8b c6		 mov	 eax, esi
  00010	5e		 pop	 esi
  00011	c3		 ret	 0
??0ioEtcItemRevive@@QAE@XZ ENDP				; ioEtcItemRevive::ioEtcItemRevive
_TEXT	ENDS
PUBLIC	??1ioEtcItemRevive@@UAE@XZ			; ioEtcItemRevive::~ioEtcItemRevive
; Function compile flags: /Ogsp
;	COMDAT ??1ioEtcItemRevive@@UAE@XZ
_TEXT	SEGMENT
??1ioEtcItemRevive@@UAE@XZ PROC				; ioEtcItemRevive::~ioEtcItemRevive, COMDAT
; _this$ = ecx

; 107  : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ioEtcItemRevive@@6B@

; 108  : 
; 109  : }

  00006	e9 00 00 00 00	 jmp	 ??1ioEtcItemConsumption@@UAE@XZ ; ioEtcItemConsumption::~ioEtcItemConsumption
??1ioEtcItemRevive@@UAE@XZ ENDP				; ioEtcItemRevive::~ioEtcItemRevive
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?OnBuy@ioEtcItemRevive@@UAEXXZ
_TEXT	SEGMENT
?OnBuy@ioEtcItemRevive@@UAEXXZ PROC			; ioEtcItemRevive::OnBuy, COMDAT
; _this$ = ecx

; 144  : 	g_SlotMgr.UpdateItem(m_dwType);

  00000	ff 71 24	 push	 DWORD PTR [ecx+36]
  00003	e8 00 00 00 00	 call	 ?GetSingleton@ioSlotMgr@@SAAAV1@XZ ; ioSlotMgr::GetSingleton
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?UpdateItem@ioSlotMgr@@QAEXK@Z ; ioSlotMgr::UpdateItem

; 145  : }

  0000f	c3		 ret	 0
?OnBuy@ioEtcItemRevive@@UAEXXZ ENDP			; ioEtcItemRevive::OnBuy
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
PUBLIC	??0ETCITEMSLOT@ioUserEtcItem@@QAE@XZ		; ioUserEtcItem::ETCITEMSLOT::ETCITEMSLOT
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iouseretcitem.h
;	COMDAT ??0ETCITEMSLOT@ioUserEtcItem@@QAE@XZ
_TEXT	SEGMENT
??0ETCITEMSLOT@ioUserEtcItem@@QAE@XZ PROC		; ioUserEtcItem::ETCITEMSLOT::ETCITEMSLOT, COMDAT
; _this$ = ecx

; 22   : 		ETCITEMSLOT()

  00000	8b c1		 mov	 eax, ecx

; 23   : 		{
; 24   : 			m_iType   = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 25   : 			m_iValue1 = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 26   : 			m_iValue2 = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 27   : 		}

  0000c	c3		 ret	 0
??0ETCITEMSLOT@ioUserEtcItem@@QAE@XZ ENDP		; ioUserEtcItem::ETCITEMSLOT::ETCITEMSLOT
_TEXT	ENDS
PUBLIC	?GetUse@ETCITEMSLOT@ioUserEtcItem@@QAEHXZ	; ioUserEtcItem::ETCITEMSLOT::GetUse
; Function compile flags: /Ogsp
;	COMDAT ?GetUse@ETCITEMSLOT@ioUserEtcItem@@QAEHXZ
_TEXT	SEGMENT
?GetUse@ETCITEMSLOT@ioUserEtcItem@@QAEHXZ PROC		; ioUserEtcItem::ETCITEMSLOT::GetUse, COMDAT
; _this$ = ecx

; 35   : 			return m_iValue1;

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 36   : 		}

  00003	c3		 ret	 0
?GetUse@ETCITEMSLOT@ioUserEtcItem@@QAEHXZ ENDP		; ioUserEtcItem::ETCITEMSLOT::GetUse
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioetcitem.h
_TEXT	ENDS
;	COMDAT ?SetUse@ioEtcItem@@UAEXXZ
_TEXT	SEGMENT
?SetUse@ioEtcItem@@UAEXXZ PROC				; ioEtcItem::SetUse, COMDAT
; _this$ = ecx

; 415  : 	virtual void   SetUse(){}

  00000	c3		 ret	 0
?SetUse@ioEtcItem@@UAEXXZ ENDP				; ioEtcItem::SetUse
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?Execute@ioEtcItem@@UBEXXZ
_TEXT	SEGMENT
?Execute@ioEtcItem@@UBEXXZ PROC				; ioEtcItem::Execute, COMDAT
; _this$ = ecx

; 416  : 	virtual void   Execute() const{}

  00000	c3		 ret	 0
?Execute@ioEtcItem@@UBEXXZ ENDP				; ioEtcItem::Execute
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?SendBuy@ioEtcItem@@UAEXXZ
_TEXT	SEGMENT
?SendBuy@ioEtcItem@@UAEXXZ PROC				; ioEtcItem::SendBuy, COMDAT
; _this$ = ecx

; 417  : 	virtual void   SendBuy(){}

  00000	c3		 ret	 0
?SendBuy@ioEtcItem@@UAEXXZ ENDP				; ioEtcItem::SendBuy
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?OnAction@ioEtcItem@@UAEXAAVSP2Packet@@PAVioPlayStage@@@Z
_TEXT	SEGMENT
_rkPacket$ = 8						; size = 4
_pPlayStage$ = 12					; size = 4
?OnAction@ioEtcItem@@UAEXAAVSP2Packet@@PAVioPlayStage@@@Z PROC ; ioEtcItem::OnAction, COMDAT
; _this$ = ecx

; 492  : 	virtual void OnAction( SP2Packet &rkPacket, ioPlayStage *pPlayStage ){}

  00000	c2 08 00	 ret	 8
?OnAction@ioEtcItem@@UAEXAAVSP2Packet@@PAVioPlayStage@@@Z ENDP ; ioEtcItem::OnAction
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?OnUseSwitchBtnPush@ioEtcItem@@UAE_NPAVioUserEtcItem@@_NPAVioPlayStage@@@Z
_TEXT	SEGMENT
_pUserEtcItem$ = 8					; size = 4
_bUseOn$ = 12						; size = 1
_pPlayStage$ = 16					; size = 4
?OnUseSwitchBtnPush@ioEtcItem@@UAE_NPAVioUserEtcItem@@_NPAVioPlayStage@@@Z PROC ; ioEtcItem::OnUseSwitchBtnPush, COMDAT
; _this$ = ecx

; 493  : 	virtual bool OnUseSwitchBtnPush( ioUserEtcItem *pUserEtcItem, bool bUseOn, ioPlayStage *pPlayStage ){ return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 0c 00	 ret	 12			; 0000000cH
?OnUseSwitchBtnPush@ioEtcItem@@UAE_NPAVioUserEtcItem@@_NPAVioPlayStage@@@Z ENDP ; ioEtcItem::OnUseSwitchBtnPush
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?OnUseSwitch@ioEtcItem@@UAEXAAVSP2Packet@@PAVioPlayStage@@@Z
_TEXT	SEGMENT
_rkPacket$ = 8						; size = 4
_pPlayStage$ = 12					; size = 4
?OnUseSwitch@ioEtcItem@@UAEXAAVSP2Packet@@PAVioPlayStage@@@Z PROC ; ioEtcItem::OnUseSwitch, COMDAT
; _this$ = ecx

; 494  : 	virtual void OnUseSwitch( SP2Packet &rkPacket, ioPlayStage *pPlayStage ){}

  00000	c2 08 00	 ret	 8
?OnUseSwitch@ioEtcItem@@UAEXAAVSP2Packet@@PAVioPlayStage@@@Z ENDP ; ioEtcItem::OnUseSwitch
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsBuyCondition@ioEtcItem@@UAE_NH@Z
_TEXT	SEGMENT
_iUse$ = 8						; size = 4
?IsBuyCondition@ioEtcItem@@UAE_NH@Z PROC		; ioEtcItem::IsBuyCondition, COMDAT
; _this$ = ecx

; 495  : 	virtual bool IsBuyCondition( int iUse ){ return true; }

  00000	b0 01		 mov	 al, 1
  00002	c2 04 00	 ret	 4
?IsBuyCondition@ioEtcItem@@UAE_NH@Z ENDP		; ioEtcItem::IsBuyCondition
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsShop3DChar@ioEtcItem@@UAE_NXZ
_TEXT	SEGMENT
?IsShop3DChar@ioEtcItem@@UAE_NXZ PROC			; ioEtcItem::IsShop3DChar, COMDAT
; _this$ = ecx

; 496  : 	virtual bool IsShop3DChar(){ return false; }

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?IsShop3DChar@ioEtcItem@@UAE_NXZ ENDP			; ioEtcItem::IsShop3DChar
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?GetType@ioEtcItemConsumption@@UBEKXZ
_TEXT	SEGMENT
?GetType@ioEtcItemConsumption@@UBEKXZ PROC		; ioEtcItemConsumption::GetType, COMDAT
; _this$ = ecx

; 1662 : 	virtual DWORD GetType() const { return m_dwType; }

  00000	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  00003	c3		 ret	 0
?GetType@ioEtcItemConsumption@@UBEKXZ ENDP		; ioEtcItemConsumption::GetType
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?GetType@ioEtcItemRevive@@UBEKXZ
_TEXT	SEGMENT
?GetType@ioEtcItemRevive@@UBEKXZ PROC			; ioEtcItemRevive::GetType, COMDAT
; _this$ = ecx

; 1692 : 	virtual DWORD GetType() const { return m_dwType; }

  00000	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  00003	c3		 ret	 0
?GetType@ioEtcItemRevive@@UBEKXZ ENDP			; ioEtcItemRevive::GetType
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GioEtcItemConsumption@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioEtcItemConsumption@@UAEPAXI@Z PROC		; ioEtcItemConsumption::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioEtcItemConsumption@@UAE@XZ ; ioEtcItemConsumption::~ioEtcItemConsumption
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioEtcItemConsumption@@UAEPAXI@Z ENDP		; ioEtcItemConsumption::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_0BM@BMJHLLBH@ioEtcItemConsumption?3?3OnUse?$AA@ ; `string'
EXTRN	?SetEtcItem@ioUserEtcItem@@QAEXABUETCITEMSLOT@1@@Z:PROC ; ioUserEtcItem::SetEtcItem
EXTRN	?DeleteEtcItem@ioUserEtcItem@@QAEXH@Z:PROC	; ioUserEtcItem::DeleteEtcItem
EXTRN	??5SP2Packet@@QAEAAV0@AAH@Z:PROC		; SP2Packet::operator>>
;	COMDAT ??_C@_0BM@BMJHLLBH@ioEtcItemConsumption?3?3OnUse?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iouseretcitem.h
CONST	SEGMENT
??_C@_0BM@BMJHLLBH@ioEtcItemConsumption?3?3OnUse?$AA@ DB 'ioEtcItemConsum'
	DB	'ption::OnUse', 00H				; `string'
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioetcitem2.cpp
CONST	ENDS
;	COMDAT ?OnUse@ioEtcItemConsumption@@UAEXHAAVSP2Packet@@PAVioUserEtcItem@@PAVioPlayStage@@@Z
_TEXT	SEGMENT
_kSlot$ = -12						; size = 12
_iType$ = 8						; size = 4
_rkPacket$ = 12						; size = 4
_pUserEtcItem$ = 16					; size = 4
_pPlayStage$ = 20					; size = 4
?OnUse@ioEtcItemConsumption@@UAEXHAAVSP2Packet@@PAVioUserEtcItem@@PAVioPlayStage@@@Z PROC ; ioEtcItemConsumption::OnUse, COMDAT
; _this$ = ecx

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi

; 31   : 	if( !pUserEtcItem )

  00007	33 f6		 xor	 esi, esi
  00009	57		 push	 edi
  0000a	8b f9		 mov	 edi, ecx
  0000c	39 75 10	 cmp	 DWORD PTR _pUserEtcItem$[ebp], esi
  0000f	75 1c		 jne	 SHORT $LN4@OnUse

; 32   : 	{
; 33   : 		LOG.PrintTimeAndLog( 0, "%s pUserEtcItem == NULL.", __FUNCTION__ );

  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@BMJHLLBH@ioEtcItemConsumption?3?3OnUse?$AA@
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@ENDOALOO@?$CFs?5pUserEtcItem?5?$DN?$DN?5NULL?4?$AA@
  0001b	56		 push	 esi
  0001c	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  00028	83 c4 10	 add	 esp, 16			; 00000010H

; 34   : 		return;

  0002b	eb 4e		 jmp	 SHORT $LN5@OnUse
$LN4@OnUse:

; 35   : 	}
; 36   : 
; 37   : 	ioUserEtcItem::ETCITEMSLOT kSlot;
; 38   : 	kSlot.m_iType = iType;

  0002d	8b 45 08	 mov	 eax, DWORD PTR _iType$[ebp]

; 39   : 
; 40   : 	rkPacket >> kSlot.m_iValue1;

  00030	8b 4d 0c	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  00033	89 45 f4	 mov	 DWORD PTR _kSlot$[ebp], eax
  00036	8d 45 f8	 lea	 eax, DWORD PTR _kSlot$[ebp+4]
  00039	50		 push	 eax
  0003a	89 75 f8	 mov	 DWORD PTR _kSlot$[ebp+4], esi
  0003d	89 75 fc	 mov	 DWORD PTR _kSlot$[ebp+8], esi
  00040	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>

; 41   : 	rkPacket >> kSlot.m_iValue2;

  00045	8b 4d 0c	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  00048	8d 45 fc	 lea	 eax, DWORD PTR _kSlot$[ebp+8]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>

; 42   : 
; 43   : 	if( kSlot.m_iValue1 == 0 )
; 44   : 	{
; 45   : 		pUserEtcItem->DeleteEtcItem( kSlot.m_iType );

  00051	8b 4d 10	 mov	 ecx, DWORD PTR _pUserEtcItem$[ebp]
  00054	39 75 f8	 cmp	 DWORD PTR _kSlot$[ebp+4], esi
  00057	75 0a		 jne	 SHORT $LN3@OnUse
  00059	ff 75 f4	 push	 DWORD PTR _kSlot$[ebp]
  0005c	e8 00 00 00 00	 call	 ?DeleteEtcItem@ioUserEtcItem@@QAEXH@Z ; ioUserEtcItem::DeleteEtcItem

; 46   : 	}
; 47   : 	else

  00061	eb 09		 jmp	 SHORT $LN2@OnUse
$LN3@OnUse:

; 48   : 	{
; 49   : 		pUserEtcItem->SetEtcItem( kSlot );

  00063	8d 45 f4	 lea	 eax, DWORD PTR _kSlot$[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?SetEtcItem@ioUserEtcItem@@QAEXABUETCITEMSLOT@1@@Z ; ioUserEtcItem::SetEtcItem
$LN2@OnUse:

; 50   : 	}
; 51   : 
; 52   : 	if( kSlot.GetUse() == 0 )
; 53   : 	{
; 54   : 	}
; 55   : 
; 56   : 	g_SlotMgr.UpdateItem(m_dwType);

  0006c	ff 77 24	 push	 DWORD PTR [edi+36]
  0006f	e8 00 00 00 00	 call	 ?GetSingleton@ioSlotMgr@@SAAAV1@XZ ; ioSlotMgr::GetSingleton
  00074	8b c8		 mov	 ecx, eax
  00076	e8 00 00 00 00	 call	 ?UpdateItem@ioSlotMgr@@QAEXK@Z ; ioSlotMgr::UpdateItem
$LN5@OnUse:
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi

; 57   : }

  0007d	c9		 leave
  0007e	c2 10 00	 ret	 16			; 00000010H
?OnUse@ioEtcItemConsumption@@UAEXHAAVSP2Packet@@PAVioUserEtcItem@@PAVioPlayStage@@@Z ENDP ; ioEtcItemConsumption::OnUse
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GioEtcItemRevive@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioEtcItemRevive@@UAEPAXI@Z PROC			; ioEtcItemRevive::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioEtcItemRevive@@6B@
  0000c	e8 00 00 00 00	 call	 ??1ioEtcItemConsumption@@UAE@XZ ; ioEtcItemConsumption::~ioEtcItemConsumption
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 07		 je	 SHORT $LN1@scalar@2
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001d	59		 pop	 ecx
$LN1@scalar@2:
  0001e	8b c6		 mov	 eax, esi
  00020	5e		 pop	 esi
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??_GioEtcItemRevive@@UAEPAXI@Z ENDP			; ioEtcItemRevive::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_0BH@LNNEOHGN@ioEtcItemRevive?3?3OnUse?$AA@ ; `string'
;	COMDAT ??_C@_0BH@LNNEOHGN@ioEtcItemRevive?3?3OnUse?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iouseretcitem.h
CONST	SEGMENT
??_C@_0BH@LNNEOHGN@ioEtcItemRevive?3?3OnUse?$AA@ DB 'ioEtcItemRevive::OnU'
	DB	'se', 00H					; `string'
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioetcitem2.cpp
CONST	ENDS
;	COMDAT ?OnUse@ioEtcItemRevive@@UAEXHAAVSP2Packet@@PAVioUserEtcItem@@PAVioPlayStage@@@Z
_TEXT	SEGMENT
_kSlot$ = -12						; size = 12
_iType$ = 8						; size = 4
_rkPacket$ = 12						; size = 4
_pUserEtcItem$ = 16					; size = 4
_pPlayStage$ = 20					; size = 4
?OnUse@ioEtcItemRevive@@UAEXHAAVSP2Packet@@PAVioUserEtcItem@@PAVioPlayStage@@@Z PROC ; ioEtcItemRevive::OnUse, COMDAT
; _this$ = ecx

; 112  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi

; 113  : 	if( !pUserEtcItem )

  00007	33 f6		 xor	 esi, esi
  00009	57		 push	 edi
  0000a	8b f9		 mov	 edi, ecx
  0000c	39 75 10	 cmp	 DWORD PTR _pUserEtcItem$[ebp], esi
  0000f	75 1c		 jne	 SHORT $LN4@OnUse@2

; 114  : 	{
; 115  : 		LOG.PrintTimeAndLog( 0, "%s pUserEtcItem == NULL.", __FUNCTION__ );

  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LNNEOHGN@ioEtcItemRevive?3?3OnUse?$AA@
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@ENDOALOO@?$CFs?5pUserEtcItem?5?$DN?$DN?5NULL?4?$AA@
  0001b	56		 push	 esi
  0001c	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  00028	83 c4 10	 add	 esp, 16			; 00000010H

; 116  : 		return;

  0002b	eb 4e		 jmp	 SHORT $LN5@OnUse@2
$LN4@OnUse@2:

; 117  : 	}
; 118  : 
; 119  : 	ioUserEtcItem::ETCITEMSLOT kSlot;
; 120  : 	kSlot.m_iType = iType;

  0002d	8b 45 08	 mov	 eax, DWORD PTR _iType$[ebp]

; 121  : 
; 122  : 	rkPacket >> kSlot.m_iValue1;

  00030	8b 4d 0c	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  00033	89 45 f4	 mov	 DWORD PTR _kSlot$[ebp], eax
  00036	8d 45 f8	 lea	 eax, DWORD PTR _kSlot$[ebp+4]
  00039	50		 push	 eax
  0003a	89 75 f8	 mov	 DWORD PTR _kSlot$[ebp+4], esi
  0003d	89 75 fc	 mov	 DWORD PTR _kSlot$[ebp+8], esi
  00040	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>

; 123  : 	rkPacket >> kSlot.m_iValue2;

  00045	8b 4d 0c	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  00048	8d 45 fc	 lea	 eax, DWORD PTR _kSlot$[ebp+8]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>

; 124  : 
; 125  : 	if( kSlot.m_iValue1 == 0 )
; 126  : 	{
; 127  : 		pUserEtcItem->DeleteEtcItem( kSlot.m_iType );

  00051	8b 4d 10	 mov	 ecx, DWORD PTR _pUserEtcItem$[ebp]
  00054	39 75 f8	 cmp	 DWORD PTR _kSlot$[ebp+4], esi
  00057	75 0a		 jne	 SHORT $LN3@OnUse@2
  00059	ff 75 f4	 push	 DWORD PTR _kSlot$[ebp]
  0005c	e8 00 00 00 00	 call	 ?DeleteEtcItem@ioUserEtcItem@@QAEXH@Z ; ioUserEtcItem::DeleteEtcItem

; 128  : 	}
; 129  : 	else

  00061	eb 09		 jmp	 SHORT $LN2@OnUse@2
$LN3@OnUse@2:

; 130  : 	{
; 131  : 		pUserEtcItem->SetEtcItem( kSlot );

  00063	8d 45 f4	 lea	 eax, DWORD PTR _kSlot$[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?SetEtcItem@ioUserEtcItem@@QAEXABUETCITEMSLOT@1@@Z ; ioUserEtcItem::SetEtcItem
$LN2@OnUse@2:

; 132  : 	}
; 133  : 
; 134  : 	if( kSlot.GetUse() == 0 )
; 135  : 	{
; 136  : 	}
; 137  : 
; 138  : 	g_SlotMgr.UpdateItem(m_dwType);

  0006c	ff 77 24	 push	 DWORD PTR [edi+36]
  0006f	e8 00 00 00 00	 call	 ?GetSingleton@ioSlotMgr@@SAAAV1@XZ ; ioSlotMgr::GetSingleton
  00074	8b c8		 mov	 ecx, eax
  00076	e8 00 00 00 00	 call	 ?UpdateItem@ioSlotMgr@@QAEXK@Z ; ioSlotMgr::UpdateItem
$LN5@OnUse@2:
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi

; 139  : }

  0007d	c9		 leave
  0007e	c2 10 00	 ret	 16			; 00000010H
?OnUse@ioEtcItemRevive@@UAEXHAAVSP2Packet@@PAVioUserEtcItem@@PAVioPlayStage@@@Z ENDP ; ioEtcItemRevive::OnUse
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadString_e@$0N@@ioINILoader@@QAEXAAY0N@$$CBDAAY00$$CBDPADH@Z ; ioINILoader::LoadString_e<13>
EXTRN	__imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$LoadString_e@$0N@@ioINILoader@@QAEXAAY0N@$$CBDAAY00$$CBDPADH@Z
_TEXT	SEGMENT
_this$GSCopy$ = -28					; size = 4
__k$ = -24						; size = 13
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_d$ = 12						; size = 4
_b$ = 16						; size = 4
_i$ = 20						; size = 4
??$LoadString_e@$0N@@ioINILoader@@QAEXAAY0N@$$CBDAAY00$$CBDPADH@Z PROC ; ioINILoader::LoadString_e<13>, COMDAT
; _this$ = ecx

; 161  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 162  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b 75 0c	 mov	 esi, DWORD PTR _d$[ebp]
  00019	57		 push	 edi
  0001a	8b 7d 10	 mov	 edi, DWORD PTR _b$[ebp]
  0001d	89 4d e4	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  00020	84 d2		 test	 dl, dl
  00022	0f 84 4d 01 00
	00		 je	 $LN96@LoadString
  00028	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0002b	88 55 e8	 mov	 BYTE PTR __k$[ebp], dl
  0002e	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00031	84 d2		 test	 dl, dl
  00033	0f 84 36 01 00
	00		 je	 $LN95@LoadString
  00039	b1 ec		 mov	 cl, -20			; ffffffecH
  0003b	32 d1		 xor	 dl, cl
  0003d	88 55 e9	 mov	 BYTE PTR __k$[ebp+1], dl
  00040	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  00043	84 d2		 test	 dl, dl
  00045	0f 84 1e 01 00
	00		 je	 $LN94@LoadString
  0004b	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0004e	88 55 ea	 mov	 BYTE PTR __k$[ebp+2], dl
  00051	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  00054	84 d2		 test	 dl, dl
  00056	0f 84 07 01 00
	00		 je	 $LN93@LoadString
  0005c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0005f	88 55 eb	 mov	 BYTE PTR __k$[ebp+3], dl
  00062	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00065	84 d2		 test	 dl, dl
  00067	0f 84 f0 00 00
	00		 je	 $LN92@LoadString
  0006d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00070	88 55 ec	 mov	 BYTE PTR __k$[ebp+4], dl
  00073	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00076	84 d2		 test	 dl, dl
  00078	0f 84 da 00 00
	00		 je	 $LN91@LoadString
  0007e	32 d1		 xor	 dl, cl
  00080	88 55 ed	 mov	 BYTE PTR __k$[ebp+5], dl
  00083	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00086	84 d2		 test	 dl, dl
  00088	0f 84 c4 00 00
	00		 je	 $LN90@LoadString
  0008e	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00091	88 55 ee	 mov	 BYTE PTR __k$[ebp+6], dl
  00094	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00097	84 d2		 test	 dl, dl
  00099	0f 84 ad 00 00
	00		 je	 $LN89@LoadString
  0009f	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000a2	88 55 ef	 mov	 BYTE PTR __k$[ebp+7], dl
  000a5	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a8	84 d2		 test	 dl, dl
  000aa	0f 84 96 00 00
	00		 je	 $LN88@LoadString
  000b0	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000b3	88 55 f0	 mov	 BYTE PTR __k$[ebp+8], dl
  000b6	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b9	84 d2		 test	 dl, dl
  000bb	0f 84 80 00 00
	00		 je	 $LN87@LoadString
  000c1	32 d1		 xor	 dl, cl
  000c3	88 55 f1	 mov	 BYTE PTR __k$[ebp+9], dl
  000c6	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c9	84 d2		 test	 dl, dl
  000cb	74 6e		 je	 SHORT $LN86@LoadString
  000cd	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000d0	88 55 f2	 mov	 BYTE PTR __k$[ebp+10], dl
  000d3	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d6	84 d2		 test	 dl, dl
  000d8	74 5b		 je	 SHORT $LN85@LoadString
  000da	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000dd	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  000e1	88 55 f3	 mov	 BYTE PTR __k$[ebp+11], dl
  000e4	0f 84 8f 00 00
	00		 je	 $LN111@LoadString
  000ea	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000ed	84 d2		 test	 dl, dl
  000ef	74 3f		 je	 SHORT $LN83@LoadString
  000f1	32 d1		 xor	 dl, cl
  000f3	88 55 f5	 mov	 BYTE PTR __k$[ebp+13], dl
  000f6	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000f9	84 d2		 test	 dl, dl
  000fb	74 2d		 je	 SHORT $LN82@LoadString
  000fd	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00100	88 55 f6	 mov	 BYTE PTR __k$[ebp+14], dl
  00103	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00106	84 d2		 test	 dl, dl
  00108	74 1a		 je	 SHORT $LN81@LoadString
  0010a	8a 40 10	 mov	 al, BYTE PTR [eax+16]
  0010d	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00110	88 55 f7	 mov	 BYTE PTR __k$[ebp+15], dl
  00113	84 c0		 test	 al, al
  00115	74 07		 je	 SHORT $LN80@LoadString
  00117	34 ed		 xor	 al, -19			; ffffffedH
  00119	88 45 f8	 mov	 BYTE PTR __k$[ebp+16], al
  0011c	eb 5b		 jmp	 SHORT $LN111@LoadString
$LN80@LoadString:
  0011e	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  00122	eb 55		 jmp	 SHORT $LN111@LoadString
$LN81@LoadString:
  00124	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00128	eb 4f		 jmp	 SHORT $LN111@LoadString
$LN82@LoadString:
  0012a	c6 45 f6 eb	 mov	 BYTE PTR __k$[ebp+14], -21 ; ffffffebH
  0012e	eb 49		 jmp	 SHORT $LN111@LoadString
$LN83@LoadString:
  00130	88 4d f5	 mov	 BYTE PTR __k$[ebp+13], cl
  00133	eb 44		 jmp	 SHORT $LN111@LoadString
$LN85@LoadString:
  00135	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00139	eb 3e		 jmp	 SHORT $LN111@LoadString
$LN86@LoadString:
  0013b	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  0013f	eb 38		 jmp	 SHORT $LN111@LoadString
$LN87@LoadString:
  00141	88 4d f1	 mov	 BYTE PTR __k$[ebp+9], cl
  00144	eb 33		 jmp	 SHORT $LN111@LoadString
$LN88@LoadString:
  00146	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  0014a	eb 2d		 jmp	 SHORT $LN111@LoadString
$LN89@LoadString:
  0014c	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  00150	eb 27		 jmp	 SHORT $LN111@LoadString
$LN90@LoadString:
  00152	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  00156	eb 21		 jmp	 SHORT $LN111@LoadString
$LN91@LoadString:
  00158	88 4d ed	 mov	 BYTE PTR __k$[ebp+5], cl
  0015b	eb 1c		 jmp	 SHORT $LN111@LoadString
$LN92@LoadString:
  0015d	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00161	eb 16		 jmp	 SHORT $LN111@LoadString
$LN93@LoadString:
  00163	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00167	eb 10		 jmp	 SHORT $LN111@LoadString
$LN94@LoadString:
  00169	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0016d	eb 0a		 jmp	 SHORT $LN111@LoadString
$LN95@LoadString:
  0016f	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00173	eb 04		 jmp	 SHORT $LN111@LoadString
$LN96@LoadString:
  00175	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN111@LoadString:
  00179	6a 03		 push	 3
  0017b	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  0017e	c6 45 f4 00	 mov	 BYTE PTR __k$[ebp+12], 0
  00182	5a		 pop	 edx
$LL104@LoadString:
  00183	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00189	83 c0 04	 add	 eax, 4
  0018c	4a		 dec	 edx
  0018d	75 f4		 jne	 SHORT $LL104@LoadString

; 163  : 		LoadString(_k, d, b, i);

  0018f	ff 75 14	 push	 DWORD PTR _i$[ebp]
  00192	8b 4d e4	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00195	57		 push	 edi
  00196	56		 push	 esi
  00197	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  0019a	50		 push	 eax
  0019b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z

; 164  : 	}

  001a1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a4	5f		 pop	 edi
  001a5	33 cd		 xor	 ecx, ebp
  001a7	5e		 pop	 esi
  001a8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ad	c9		 leave
  001ae	c2 10 00	 ret	 16			; 00000010H
??$LoadString_e@$0N@@ioINILoader@@QAEXAAY0N@$$CBDAAY00$$CBDPADH@Z ENDP ; ioINILoader::LoadString_e<13>
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadString_e@$0BB@@ioINILoader@@QAEXAAY0BB@$$CBDAAY00$$CBDPADH@Z ; ioINILoader::LoadString_e<17>
; Function compile flags: /Ogsp
;	COMDAT ??$LoadString_e@$0BB@@ioINILoader@@QAEXAAY0BB@$$CBDAAY00$$CBDPADH@Z
_TEXT	SEGMENT
_this$GSCopy$ = -32					; size = 4
__k$ = -28						; size = 17
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_d$ = 12						; size = 4
_b$ = 16						; size = 4
_i$ = 20						; size = 4
??$LoadString_e@$0BB@@ioINILoader@@QAEXAAY0BB@$$CBDAAY00$$CBDPADH@Z PROC ; ioINILoader::LoadString_e<17>, COMDAT
; _this$ = ecx

; 161  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 162  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b 75 0c	 mov	 esi, DWORD PTR _d$[ebp]
  00019	57		 push	 edi
  0001a	8b 7d 10	 mov	 edi, DWORD PTR _b$[ebp]
  0001d	89 4d e0	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  00020	84 d2		 test	 dl, dl
  00022	0f 84 a7 01 00
	00		 je	 $LN96@LoadString@2
  00028	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0002b	88 55 e4	 mov	 BYTE PTR __k$[ebp], dl
  0002e	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00031	84 d2		 test	 dl, dl
  00033	0f 84 90 01 00
	00		 je	 $LN95@LoadString@2
  00039	b1 ec		 mov	 cl, -20			; ffffffecH
  0003b	32 d1		 xor	 dl, cl
  0003d	88 55 e5	 mov	 BYTE PTR __k$[ebp+1], dl
  00040	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  00043	84 d2		 test	 dl, dl
  00045	0f 84 78 01 00
	00		 je	 $LN94@LoadString@2
  0004b	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0004e	88 55 e6	 mov	 BYTE PTR __k$[ebp+2], dl
  00051	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  00054	84 d2		 test	 dl, dl
  00056	0f 84 61 01 00
	00		 je	 $LN93@LoadString@2
  0005c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0005f	88 55 e7	 mov	 BYTE PTR __k$[ebp+3], dl
  00062	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00065	84 d2		 test	 dl, dl
  00067	0f 84 4a 01 00
	00		 je	 $LN92@LoadString@2
  0006d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00070	88 55 e8	 mov	 BYTE PTR __k$[ebp+4], dl
  00073	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00076	84 d2		 test	 dl, dl
  00078	0f 84 34 01 00
	00		 je	 $LN91@LoadString@2
  0007e	32 d1		 xor	 dl, cl
  00080	88 55 e9	 mov	 BYTE PTR __k$[ebp+5], dl
  00083	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00086	84 d2		 test	 dl, dl
  00088	0f 84 1e 01 00
	00		 je	 $LN90@LoadString@2
  0008e	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00091	88 55 ea	 mov	 BYTE PTR __k$[ebp+6], dl
  00094	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00097	84 d2		 test	 dl, dl
  00099	0f 84 07 01 00
	00		 je	 $LN89@LoadString@2
  0009f	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000a2	88 55 eb	 mov	 BYTE PTR __k$[ebp+7], dl
  000a5	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a8	84 d2		 test	 dl, dl
  000aa	0f 84 f0 00 00
	00		 je	 $LN88@LoadString@2
  000b0	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000b3	88 55 ec	 mov	 BYTE PTR __k$[ebp+8], dl
  000b6	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b9	84 d2		 test	 dl, dl
  000bb	0f 84 da 00 00
	00		 je	 $LN87@LoadString@2
  000c1	32 d1		 xor	 dl, cl
  000c3	88 55 ed	 mov	 BYTE PTR __k$[ebp+9], dl
  000c6	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c9	84 d2		 test	 dl, dl
  000cb	0f 84 c4 00 00
	00		 je	 $LN86@LoadString@2
  000d1	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000d4	88 55 ee	 mov	 BYTE PTR __k$[ebp+10], dl
  000d7	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000da	84 d2		 test	 dl, dl
  000dc	0f 84 ad 00 00
	00		 je	 $LN85@LoadString@2
  000e2	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000e5	88 55 ef	 mov	 BYTE PTR __k$[ebp+11], dl
  000e8	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000eb	84 d2		 test	 dl, dl
  000ed	0f 84 96 00 00
	00		 je	 $LN84@LoadString@2
  000f3	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000f6	88 55 f0	 mov	 BYTE PTR __k$[ebp+12], dl
  000f9	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000fc	84 d2		 test	 dl, dl
  000fe	0f 84 80 00 00
	00		 je	 $LN83@LoadString@2
  00104	32 d1		 xor	 dl, cl
  00106	88 55 f1	 mov	 BYTE PTR __k$[ebp+13], dl
  00109	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  0010c	84 d2		 test	 dl, dl
  0010e	74 6e		 je	 SHORT $LN82@LoadString@2
  00110	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00113	88 55 f2	 mov	 BYTE PTR __k$[ebp+14], dl
  00116	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00119	84 d2		 test	 dl, dl
  0011b	74 5b		 je	 SHORT $LN81@LoadString@2
  0011d	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00120	80 78 10 00	 cmp	 BYTE PTR [eax+16], 0
  00124	88 55 f3	 mov	 BYTE PTR __k$[ebp+15], dl
  00127	0f 84 a6 00 00
	00		 je	 $LN111@LoadString@2
  0012d	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00130	84 d2		 test	 dl, dl
  00132	74 3f		 je	 SHORT $LN79@LoadString@2
  00134	32 d1		 xor	 dl, cl
  00136	88 55 f5	 mov	 BYTE PTR __k$[ebp+17], dl
  00139	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  0013c	84 d2		 test	 dl, dl
  0013e	74 2d		 je	 SHORT $LN78@LoadString@2
  00140	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00143	88 55 f6	 mov	 BYTE PTR __k$[ebp+18], dl
  00146	8a 50 13	 mov	 dl, BYTE PTR [eax+19]
  00149	84 d2		 test	 dl, dl
  0014b	74 1a		 je	 SHORT $LN77@LoadString@2
  0014d	8a 40 14	 mov	 al, BYTE PTR [eax+20]
  00150	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00153	88 55 f7	 mov	 BYTE PTR __k$[ebp+19], dl
  00156	84 c0		 test	 al, al
  00158	74 07		 je	 SHORT $LN76@LoadString@2
  0015a	34 ed		 xor	 al, -19			; ffffffedH
  0015c	88 45 f8	 mov	 BYTE PTR __k$[ebp+20], al
  0015f	eb 72		 jmp	 SHORT $LN111@LoadString@2
$LN76@LoadString@2:
  00161	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+20], -19 ; ffffffedH
  00165	eb 6c		 jmp	 SHORT $LN111@LoadString@2
$LN77@LoadString@2:
  00167	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+19], -22 ; ffffffeaH
  0016b	eb 66		 jmp	 SHORT $LN111@LoadString@2
$LN78@LoadString@2:
  0016d	c6 45 f6 eb	 mov	 BYTE PTR __k$[ebp+18], -21 ; ffffffebH
  00171	eb 60		 jmp	 SHORT $LN111@LoadString@2
$LN79@LoadString@2:
  00173	88 4d f5	 mov	 BYTE PTR __k$[ebp+17], cl
  00176	eb 5b		 jmp	 SHORT $LN111@LoadString@2
$LN81@LoadString@2:
  00178	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  0017c	eb 55		 jmp	 SHORT $LN111@LoadString@2
$LN82@LoadString@2:
  0017e	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+14], -21 ; ffffffebH
  00182	eb 4f		 jmp	 SHORT $LN111@LoadString@2
$LN83@LoadString@2:
  00184	88 4d f1	 mov	 BYTE PTR __k$[ebp+13], cl
  00187	eb 4a		 jmp	 SHORT $LN111@LoadString@2
$LN84@LoadString@2:
  00189	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  0018d	eb 44		 jmp	 SHORT $LN111@LoadString@2
$LN85@LoadString@2:
  0018f	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00193	eb 3e		 jmp	 SHORT $LN111@LoadString@2
$LN86@LoadString@2:
  00195	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  00199	eb 38		 jmp	 SHORT $LN111@LoadString@2
$LN87@LoadString@2:
  0019b	88 4d ed	 mov	 BYTE PTR __k$[ebp+9], cl
  0019e	eb 33		 jmp	 SHORT $LN111@LoadString@2
$LN88@LoadString@2:
  001a0	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  001a4	eb 2d		 jmp	 SHORT $LN111@LoadString@2
$LN89@LoadString@2:
  001a6	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  001aa	eb 27		 jmp	 SHORT $LN111@LoadString@2
$LN90@LoadString@2:
  001ac	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  001b0	eb 21		 jmp	 SHORT $LN111@LoadString@2
$LN91@LoadString@2:
  001b2	88 4d e9	 mov	 BYTE PTR __k$[ebp+5], cl
  001b5	eb 1c		 jmp	 SHORT $LN111@LoadString@2
$LN92@LoadString@2:
  001b7	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  001bb	eb 16		 jmp	 SHORT $LN111@LoadString@2
$LN93@LoadString@2:
  001bd	c6 45 e7 ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  001c1	eb 10		 jmp	 SHORT $LN111@LoadString@2
$LN94@LoadString@2:
  001c3	c6 45 e6 eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  001c7	eb 0a		 jmp	 SHORT $LN111@LoadString@2
$LN95@LoadString@2:
  001c9	c6 45 e5 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  001cd	eb 04		 jmp	 SHORT $LN111@LoadString@2
$LN96@LoadString@2:
  001cf	c6 45 e4 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN111@LoadString@2:
  001d3	6a 04		 push	 4
  001d5	8d 45 e4	 lea	 eax, DWORD PTR __k$[ebp]
  001d8	c6 45 f4 00	 mov	 BYTE PTR __k$[ebp+16], 0
  001dc	5a		 pop	 edx
$LL104@LoadString@2:
  001dd	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001e3	83 c0 04	 add	 eax, 4
  001e6	4a		 dec	 edx
  001e7	75 f4		 jne	 SHORT $LL104@LoadString@2

; 163  : 		LoadString(_k, d, b, i);

  001e9	ff 75 14	 push	 DWORD PTR _i$[ebp]
  001ec	8b 4d e0	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  001ef	57		 push	 edi
  001f0	56		 push	 esi
  001f1	8d 45 e4	 lea	 eax, DWORD PTR __k$[ebp]
  001f4	50		 push	 eax
  001f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z

; 164  : 	}

  001fb	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001fe	5f		 pop	 edi
  001ff	33 cd		 xor	 ecx, ebp
  00201	5e		 pop	 esi
  00202	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00207	c9		 leave
  00208	c2 10 00	 ret	 16			; 00000010H
??$LoadString_e@$0BB@@ioINILoader@@QAEXAAY0BB@$$CBDAAY00$$CBDPADH@Z ENDP ; ioINILoader::LoadString_e<17>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadString_e@$09@ioINILoader@@QAEXAAY09$$CBDAAY00$$CBDPADH@Z ; ioINILoader::LoadString_e<10>
; Function compile flags: /Ogsp
;	COMDAT ??$LoadString_e@$09@ioINILoader@@QAEXAAY09$$CBDAAY00$$CBDPADH@Z
_TEXT	SEGMENT
__k$ = -20						; size = 10
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_d$ = 12						; size = 4
_b$ = 16						; size = 4
_i$ = 20						; size = 4
??$LoadString_e@$09@ioINILoader@@QAEXAAY09$$CBDAAY00$$CBDPADH@Z PROC ; ioINILoader::LoadString_e<10>, COMDAT
; _this$ = ecx

; 161  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 162  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b 75 0c	 mov	 esi, DWORD PTR _d$[ebp]
  00019	57		 push	 edi
  0001a	8b 7d 10	 mov	 edi, DWORD PTR _b$[ebp]
  0001d	84 d2		 test	 dl, dl
  0001f	0f 84 0d 01 00
	00		 je	 $LN96@LoadString@3
  00025	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00028	88 55 ec	 mov	 BYTE PTR __k$[ebp], dl
  0002b	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0002e	84 d2		 test	 dl, dl
  00030	0f 84 f6 00 00
	00		 je	 $LN95@LoadString@3
  00036	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00039	88 55 ed	 mov	 BYTE PTR __k$[ebp+1], dl
  0003c	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003f	84 d2		 test	 dl, dl
  00041	0f 84 df 00 00
	00		 je	 $LN94@LoadString@3
  00047	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0004a	88 55 ee	 mov	 BYTE PTR __k$[ebp+2], dl
  0004d	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  00050	84 d2		 test	 dl, dl
  00052	0f 84 c8 00 00
	00		 je	 $LN93@LoadString@3
  00058	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0005b	88 55 ef	 mov	 BYTE PTR __k$[ebp+3], dl
  0005e	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00061	84 d2		 test	 dl, dl
  00063	0f 84 b1 00 00
	00		 je	 $LN92@LoadString@3
  00069	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0006c	88 55 f0	 mov	 BYTE PTR __k$[ebp+4], dl
  0006f	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00072	84 d2		 test	 dl, dl
  00074	0f 84 9a 00 00
	00		 je	 $LN91@LoadString@3
  0007a	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0007d	88 55 f1	 mov	 BYTE PTR __k$[ebp+5], dl
  00080	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00083	84 d2		 test	 dl, dl
  00085	0f 84 83 00 00
	00		 je	 $LN90@LoadString@3
  0008b	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0008e	88 55 f2	 mov	 BYTE PTR __k$[ebp+6], dl
  00091	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00094	84 d2		 test	 dl, dl
  00096	74 70		 je	 SHORT $LN89@LoadString@3
  00098	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009b	88 55 f3	 mov	 BYTE PTR __k$[ebp+7], dl
  0009e	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a1	84 d2		 test	 dl, dl
  000a3	74 5d		 je	 SHORT $LN88@LoadString@3
  000a5	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a8	80 78 09 00	 cmp	 BYTE PTR [eax+9], 0
  000ac	88 55 f4	 mov	 BYTE PTR __k$[ebp+8], dl
  000af	0f 84 81 00 00
	00		 je	 $LN1@LoadString@3
  000b5	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000b8	84 d2		 test	 dl, dl
  000ba	74 40		 je	 SHORT $LN86@LoadString@3
  000bc	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000bf	88 55 f6	 mov	 BYTE PTR __k$[ebp+10], dl
  000c2	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000c5	84 d2		 test	 dl, dl
  000c7	74 2d		 je	 SHORT $LN85@LoadString@3
  000c9	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000cc	88 55 f7	 mov	 BYTE PTR __k$[ebp+11], dl
  000cf	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000d2	84 d2		 test	 dl, dl
  000d4	74 1a		 je	 SHORT $LN84@LoadString@3
  000d6	8a 40 0d	 mov	 al, BYTE PTR [eax+13]
  000d9	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000dc	88 55 f8	 mov	 BYTE PTR __k$[ebp+12], dl
  000df	84 c0		 test	 al, al
  000e1	74 07		 je	 SHORT $LN83@LoadString@3
  000e3	34 ec		 xor	 al, -20			; ffffffecH
  000e5	88 45 f9	 mov	 BYTE PTR __k$[ebp+13], al
  000e8	eb 4c		 jmp	 SHORT $LN1@LoadString@3
$LN83@LoadString@3:
  000ea	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  000ee	eb 46		 jmp	 SHORT $LN1@LoadString@3
$LN84@LoadString@3:
  000f0	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  000f4	eb 40		 jmp	 SHORT $LN1@LoadString@3
$LN85@LoadString@3:
  000f6	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  000fa	eb 3a		 jmp	 SHORT $LN1@LoadString@3
$LN86@LoadString@3:
  000fc	c6 45 f6 eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  00100	eb 34		 jmp	 SHORT $LN1@LoadString@3
$LN88@LoadString@3:
  00102	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00106	eb 2e		 jmp	 SHORT $LN1@LoadString@3
$LN89@LoadString@3:
  00108	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  0010c	eb 28		 jmp	 SHORT $LN1@LoadString@3
$LN90@LoadString@3:
  0010e	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  00112	eb 22		 jmp	 SHORT $LN1@LoadString@3
$LN91@LoadString@3:
  00114	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  00118	eb 1c		 jmp	 SHORT $LN1@LoadString@3
$LN92@LoadString@3:
  0011a	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  0011e	eb 16		 jmp	 SHORT $LN1@LoadString@3
$LN93@LoadString@3:
  00120	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00124	eb 10		 jmp	 SHORT $LN1@LoadString@3
$LN94@LoadString@3:
  00126	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0012a	eb 0a		 jmp	 SHORT $LN1@LoadString@3
$LN95@LoadString@3:
  0012c	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00130	eb 04		 jmp	 SHORT $LN1@LoadString@3
$LN96@LoadString@3:
  00132	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadString@3:
  00136	6a 02		 push	 2
  00138	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  0013b	c6 45 f5 00	 mov	 BYTE PTR __k$[ebp+9], 0
  0013f	5a		 pop	 edx
$LL104@LoadString@3:
  00140	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00146	83 c0 04	 add	 eax, 4
  00149	4a		 dec	 edx
  0014a	75 f4		 jne	 SHORT $LL104@LoadString@3

; 163  : 		LoadString(_k, d, b, i);

  0014c	ff 75 14	 push	 DWORD PTR _i$[ebp]
  0014f	80 75 f4 ed	 xor	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00153	57		 push	 edi
  00154	56		 push	 esi
  00155	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  00158	50		 push	 eax
  00159	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z

; 164  : 	}

  0015f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00162	5f		 pop	 edi
  00163	33 cd		 xor	 ecx, ebp
  00165	5e		 pop	 esi
  00166	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0016b	c9		 leave
  0016c	c2 10 00	 ret	 16			; 00000010H
??$LoadString_e@$09@ioINILoader@@QAEXAAY09$$CBDAAY00$$CBDPADH@Z ENDP ; ioINILoader::LoadString_e<10>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$08@ioINILoader@@QAEHAAY08$$CBDH@Z	; ioINILoader::LoadInt_e<9>
EXTRN	__imp_?LoadInt@ioINILoader@@QAEHPBDH@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$08@ioINILoader@@QAEHAAY08$$CBDH@Z
_TEXT	SEGMENT
__k$ = -20						; size = 9
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$08@ioINILoader@@QAEHAAY08$$CBDH@Z PROC	; ioINILoader::LoadInt_e<9>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	84 d2		 test	 dl, dl
  00017	0f 84 ee 00 00
	00		 je	 $LN96@LoadInt_e
  0001d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00020	88 55 ec	 mov	 BYTE PTR __k$[ebp], dl
  00023	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00026	84 d2		 test	 dl, dl
  00028	0f 84 d7 00 00
	00		 je	 $LN95@LoadInt_e
  0002e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00031	88 55 ed	 mov	 BYTE PTR __k$[ebp+1], dl
  00034	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  00037	84 d2		 test	 dl, dl
  00039	0f 84 c0 00 00
	00		 je	 $LN94@LoadInt_e
  0003f	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00042	88 55 ee	 mov	 BYTE PTR __k$[ebp+2], dl
  00045	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  00048	84 d2		 test	 dl, dl
  0004a	0f 84 a9 00 00
	00		 je	 $LN93@LoadInt_e
  00050	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00053	88 55 ef	 mov	 BYTE PTR __k$[ebp+3], dl
  00056	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00059	84 d2		 test	 dl, dl
  0005b	0f 84 92 00 00
	00		 je	 $LN92@LoadInt_e
  00061	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00064	88 55 f0	 mov	 BYTE PTR __k$[ebp+4], dl
  00067	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006a	84 d2		 test	 dl, dl
  0006c	74 7f		 je	 SHORT $LN91@LoadInt_e
  0006e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00071	88 55 f1	 mov	 BYTE PTR __k$[ebp+5], dl
  00074	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00077	84 d2		 test	 dl, dl
  00079	74 6c		 je	 SHORT $LN90@LoadInt_e
  0007b	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0007e	88 55 f2	 mov	 BYTE PTR __k$[ebp+6], dl
  00081	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00084	84 d2		 test	 dl, dl
  00086	74 59		 je	 SHORT $LN89@LoadInt_e
  00088	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0008b	80 78 08 00	 cmp	 BYTE PTR [eax+8], 0
  0008f	88 55 f3	 mov	 BYTE PTR __k$[ebp+7], dl
  00092	74 7b		 je	 SHORT $LN1@LoadInt_e
  00094	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  00097	84 d2		 test	 dl, dl
  00099	74 40		 je	 SHORT $LN87@LoadInt_e
  0009b	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0009e	88 55 f5	 mov	 BYTE PTR __k$[ebp+9], dl
  000a1	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000a4	84 d2		 test	 dl, dl
  000a6	74 2d		 je	 SHORT $LN86@LoadInt_e
  000a8	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000ab	88 55 f6	 mov	 BYTE PTR __k$[ebp+10], dl
  000ae	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000b1	84 d2		 test	 dl, dl
  000b3	74 1a		 je	 SHORT $LN85@LoadInt_e
  000b5	8a 40 0c	 mov	 al, BYTE PTR [eax+12]
  000b8	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000bb	88 55 f7	 mov	 BYTE PTR __k$[ebp+11], dl
  000be	84 c0		 test	 al, al
  000c0	74 07		 je	 SHORT $LN84@LoadInt_e
  000c2	34 ed		 xor	 al, -19			; ffffffedH
  000c4	88 45 f8	 mov	 BYTE PTR __k$[ebp+12], al
  000c7	eb 46		 jmp	 SHORT $LN1@LoadInt_e
$LN84@LoadInt_e:
  000c9	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  000cd	eb 40		 jmp	 SHORT $LN1@LoadInt_e
$LN85@LoadInt_e:
  000cf	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  000d3	eb 3a		 jmp	 SHORT $LN1@LoadInt_e
$LN86@LoadInt_e:
  000d5	c6 45 f6 eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  000d9	eb 34		 jmp	 SHORT $LN1@LoadInt_e
$LN87@LoadInt_e:
  000db	c6 45 f5 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  000df	eb 2e		 jmp	 SHORT $LN1@LoadInt_e
$LN89@LoadInt_e:
  000e1	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  000e5	eb 28		 jmp	 SHORT $LN1@LoadInt_e
$LN90@LoadInt_e:
  000e7	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  000eb	eb 22		 jmp	 SHORT $LN1@LoadInt_e
$LN91@LoadInt_e:
  000ed	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  000f1	eb 1c		 jmp	 SHORT $LN1@LoadInt_e
$LN92@LoadInt_e:
  000f3	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  000f7	eb 16		 jmp	 SHORT $LN1@LoadInt_e
$LN93@LoadInt_e:
  000f9	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  000fd	eb 10		 jmp	 SHORT $LN1@LoadInt_e
$LN94@LoadInt_e:
  000ff	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  00103	eb 0a		 jmp	 SHORT $LN1@LoadInt_e
$LN95@LoadInt_e:
  00105	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00109	eb 04		 jmp	 SHORT $LN1@LoadInt_e
$LN96@LoadInt_e:
  0010b	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e:
  0010f	6a 02		 push	 2
  00111	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  00114	c6 45 f4 00	 mov	 BYTE PTR __k$[ebp+8], 0
  00118	5a		 pop	 edx
$LL104@LoadInt_e:
  00119	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0011f	83 c0 04	 add	 eax, 4
  00122	4a		 dec	 edx
  00123	75 f4		 jne	 SHORT $LL104@LoadInt_e

; 120  : 		return LoadInt(_k, i);

  00125	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  00128	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  0012b	50		 push	 eax
  0012c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  00132	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00135	33 cd		 xor	 ecx, ebp
  00137	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013c	c9		 leave
  0013d	c2 08 00	 ret	 8
??$LoadInt_e@$08@ioINILoader@@QAEHAAY08$$CBDH@Z ENDP	; ioINILoader::LoadInt_e<9>
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	_rkLoader$GSCopy$
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
EXTRN	__imp_??4ioHashString@@QAEAAV0@PBD@Z:PROC
EXTRN	?LoadProperty@ioEtcItem@@UAEXAAVioINILoader@@@Z:PROC ; ioEtcItem::LoadProperty
EXTRN	_memset:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioetcitem2.cpp
CONST	ENDS
;	COMDAT ?LoadProperty@ioEtcItemConsumption@@UAEXAAVioINILoader@@@Z
_TEXT	SEGMENT
_this$GSCopy$ = -296					; size = 4
_rkLoader$GSCopy$ = -292				; size = 4
_szBuf$ = -288						; size = 260
__k$506404 = -28					; size = 17
__k$506529 = -24					; size = 10
__k$506279 = -24					; size = 13
__k$506701 = -20					; size = 9
__$ArrayPad$ = -4					; size = 4
_rkLoader$ = 8						; size = 4
?LoadProperty@ioEtcItemConsumption@@UAEXAAVioINILoader@@@Z PROC ; ioEtcItemConsumption::LoadProperty, COMDAT
; _this$ = ecx

; 76   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 01 00
	00		 sub	 esp, 296		; 00000128H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _rkLoader$[ebp]
  00017	57		 push	 edi
  00018	8b f9		 mov	 edi, ecx

; 77   : 	ioEtcItem::LoadProperty( rkLoader );

  0001a	56		 push	 esi

; 90   : 	rkLoader.LoadString_e( "slot_buff", "", szBuf, MAX_PATH );

  0001b	89 bd d8 fe ff
	ff		 mov	 DWORD PTR _this$GSCopy$[ebp], edi
  00021	89 b5 dc fe ff
	ff		 mov	 DWORD PTR _rkLoader$GSCopy$[ebp], esi
  00027	e8 00 00 00 00	 call	 ?LoadProperty@ioEtcItem@@UAEXAAVioINILoader@@@Z ; ioEtcItem::LoadProperty
  0002c	68 03 01 00 00	 push	 259			; 00000103H
  00031	8d 85 e1 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp+1]
  00037	6a 00		 push	 0
  00039	50		 push	 eax
  0003a	c6 85 e0 fe ff
	ff 00		 mov	 BYTE PTR _szBuf$[ebp], 0
  00041	e8 00 00 00 00	 call	 _memset
  00046	83 c4 0c	 add	 esp, 12			; 0000000cH
  00049	6a 03		 push	 3
  0004b	c7 45 e8 9e 80
	84 9e		 mov	 DWORD PTR __k$506279[ebp], -1635483490 ; 9e84809eH
  00052	c7 45 ec 84 8f
	84 84		 mov	 DWORD PTR __k$506279[ebp+4], -2071687292 ; 84848f84H
  00059	c7 45 f0 b2 85
	86 8d		 mov	 DWORD PTR __k$506279[ebp+8], -1920563790 ; 8d8685b2H
  00060	8d 45 e8	 lea	 eax, DWORD PTR __k$506279[ebp]
  00063	c6 45 f4 00	 mov	 BYTE PTR __k$506279[ebp+12], 0
  00067	59		 pop	 ecx
$LL106@LoadProper:

; 78   : 
; 79   : 	char szBuf[MAX_PATH] = "";
; 80   : 
; 81   : 	rkLoader.LoadString_e( "sloticon_img", "", szBuf, MAX_PATH );

  00068	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0006e	83 c0 04	 add	 eax, 4
  00071	49		 dec	 ecx
  00072	75 f4		 jne	 SHORT $LL106@LoadProper
  00074	53		 push	 ebx
  00075	68 04 01 00 00	 push	 260			; 00000104H
  0007a	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00080	50		 push	 eax
  00081	bb 00 00 00 00	 mov	 ebx, OFFSET ??_C@_00CNPNBAHC@?$AA@
  00086	53		 push	 ebx
  00087	8d 45 e8	 lea	 eax, DWORD PTR __k$506279[ebp]
  0008a	8b ce		 mov	 ecx, esi
  0008c	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z
  00092	50		 push	 eax
  00093	ff d6		 call	 esi

; 82   : 	m_strIcon = szBuf;

  00095	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0009b	8d 8f 88 01 00
	00		 lea	 ecx, DWORD PTR [edi+392]
  000a1	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z
  000a7	50		 push	 eax
  000a8	ff d7		 call	 edi
  000aa	6a 04		 push	 4

; 83   : 
; 84   : 	
; 85   : 	strcpy(szBuf, "");

  000ac	c6 85 e0 fe ff
	ff 00		 mov	 BYTE PTR _szBuf$[ebp], 0

; 86   : 	rkLoader.LoadString_e( "sloticon_backimg", "", szBuf, MAX_PATH );

  000b3	c7 45 e4 9e 80
	84 9e		 mov	 DWORD PTR __k$506404[ebp], -1635483490 ; 9e84809eH
  000ba	c7 45 e8 84 8f
	84 84		 mov	 DWORD PTR __k$506404[ebp+4], -2071687292 ; 84848f84H
  000c1	c7 45 ec b2 8e
	8a 89		 mov	 DWORD PTR __k$506404[ebp+8], -1987408206 ; 898a8eb2H
  000c8	c7 45 f0 86 85
	86 8d		 mov	 DWORD PTR __k$506404[ebp+12], -1920563834 ; 8d868586H
  000cf	8d 45 e4	 lea	 eax, DWORD PTR __k$506404[ebp]
  000d2	c6 45 f4 00	 mov	 BYTE PTR __k$506404[ebp+16], 0
  000d6	59		 pop	 ecx
$LL212@LoadProper:
  000d7	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  000dd	83 c0 04	 add	 eax, 4
  000e0	49		 dec	 ecx
  000e1	75 f4		 jne	 SHORT $LL212@LoadProper
  000e3	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  000e9	68 04 01 00 00	 push	 260			; 00000104H
  000ee	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  000f4	50		 push	 eax
  000f5	53		 push	 ebx
  000f6	8d 45 e4	 lea	 eax, DWORD PTR __k$506404[ebp]
  000f9	50		 push	 eax
  000fa	ff d6		 call	 esi

; 87   : 	m_strBackImg = szBuf;

  000fc	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00102	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00108	50		 push	 eax
  00109	81 c1 98 01 00
	00		 add	 ecx, 408		; 00000198H
  0010f	ff d7		 call	 edi
  00111	6a 02		 push	 2

; 88   : 
; 89   : 	strcpy(szBuf, "");

  00113	c6 85 e0 fe ff
	ff 00		 mov	 BYTE PTR _szBuf$[ebp], 0

; 90   : 	rkLoader.LoadString_e( "slot_buff", "", szBuf, MAX_PATH );

  0011a	c7 45 e8 9e 80
	84 9e		 mov	 DWORD PTR __k$506529[ebp], -1635483490 ; 9e84809eH
  00121	c7 45 ec b2 8e
	9e 8c		 mov	 DWORD PTR __k$506529[ebp+4], -1935765838 ; 8c9e8eb2H
  00128	8d 45 e8	 lea	 eax, DWORD PTR __k$506529[ebp]
  0012b	66 c7 45 f0 8b
	00		 mov	 WORD PTR __k$506529[ebp+8], 139 ; 0000008bH
  00131	59		 pop	 ecx
$LL318@LoadProper:
  00132	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00138	83 c0 04	 add	 eax, 4
  0013b	49		 dec	 ecx
  0013c	75 f4		 jne	 SHORT $LL318@LoadProper
  0013e	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  00144	80 75 f0 ed	 xor	 BYTE PTR __k$506529[ebp+8], -19 ; ffffffedH
  00148	68 04 01 00 00	 push	 260			; 00000104H
  0014d	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00153	50		 push	 eax
  00154	53		 push	 ebx
  00155	8d 45 e8	 lea	 eax, DWORD PTR __k$506529[ebp]
  00158	50		 push	 eax
  00159	ff d6		 call	 esi

; 91   : 	m_strSlotBuff = szBuf;

  0015b	8b b5 d8 fe ff
	ff		 mov	 esi, DWORD PTR _this$GSCopy$[ebp]
  00161	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00167	50		 push	 eax
  00168	8d 8e a8 01 00
	00		 lea	 ecx, DWORD PTR [esi+424]
  0016e	ff d7		 call	 edi
  00170	6a 02		 push	 2
  00172	59		 pop	 ecx

; 92   : 
; 93   : 	m_dwCoolTime = rkLoader.LoadInt_e( "cooltime", 100000 );

  00173	c7 45 ec 8e 83
	84 86		 mov	 DWORD PTR __k$506701[ebp], -2038135922 ; 8684838eH
  0017a	c7 45 f0 99 85
	86 8f		 mov	 DWORD PTR __k$506701[ebp+4], -1887009383 ; 8f868599H
  00181	8d 45 ec	 lea	 eax, DWORD PTR __k$506701[ebp]
  00184	c6 45 f4 00	 mov	 BYTE PTR __k$506701[ebp+8], 0
  00188	5b		 pop	 ebx
$LL424@LoadProper:
  00189	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0018f	83 c0 04	 add	 eax, 4
  00192	49		 dec	 ecx
  00193	75 f4		 jne	 SHORT $LL424@LoadProper
  00195	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  0019b	68 a0 86 01 00	 push	 100000			; 000186a0H
  001a0	8d 45 ec	 lea	 eax, DWORD PTR __k$506701[ebp]
  001a3	50		 push	 eax
  001a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 94   : }

  001aa	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ad	5f		 pop	 edi
  001ae	89 86 b8 01 00
	00		 mov	 DWORD PTR [esi+440], eax
  001b4	33 cd		 xor	 ecx, ebp
  001b6	5e		 pop	 esi
  001b7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001bc	c9		 leave
  001bd	c2 04 00	 ret	 4
?LoadProperty@ioEtcItemConsumption@@UAEXAAVioINILoader@@@Z ENDP ; ioEtcItemConsumption::LoadProperty
_TEXT	ENDS
END
