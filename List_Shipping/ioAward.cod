; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioAward.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_7ioAward@@6B@				; ioAward::`vftable'
PUBLIC	??1ioAward@@UAE@XZ				; ioAward::~ioAward
PUBLIC	??_R4ioAward@@6B@				; ioAward::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioAward@@@8				; ioAward `RTTI Type Descriptor'
PUBLIC	??_R3ioAward@@8					; ioAward::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioAward@@8					; ioAward::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioAward@@8			; ioAward::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_EioAward@@UAEPAXI@Z:PROC			; ioAward::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@ioAward@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioaward.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@ioAward@@8 DD FLAT:??_R0?AVioAward@@@8	; ioAward::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioAward@@8
rdata$r	ENDS
;	COMDAT ??_R2ioAward@@8
rdata$r	SEGMENT
??_R2ioAward@@8 DD FLAT:??_R1A@?0A@EA@ioAward@@8	; ioAward::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioAward@@8
rdata$r	SEGMENT
??_R3ioAward@@8 DD 00H					; ioAward::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioAward@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioAward@@@8
_DATA	SEGMENT
??_R0?AVioAward@@@8 DD FLAT:??_7type_info@@6B@		; ioAward `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioAward@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioAward@@6B@
rdata$r	SEGMENT
??_R4ioAward@@6B@ DD 00H				; ioAward::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioAward@@@8
	DD	FLAT:??_R3ioAward@@8
rdata$r	ENDS
;	COMDAT ??_7ioAward@@6B@
CONST	SEGMENT
??_7ioAward@@6B@ DD FLAT:??_R4ioAward@@6B@		; ioAward::`vftable'
	DD	FLAT:??_EioAward@@UAEPAXI@Z
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??1ioAward@@UAE@XZ
_TEXT	SEGMENT
??1ioAward@@UAE@XZ PROC					; ioAward::~ioAward, COMDAT
; _this$ = ecx

; 13   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ioAward@@6B@

; 14   : 	
; 15   : }

  00006	c3		 ret	 0
??1ioAward@@UAE@XZ ENDP					; ioAward::~ioAward
_TEXT	ENDS
PUBLIC	?Initialize@ioAward@@QAEXXZ			; ioAward::Initialize
; Function compile flags: /Ogsp
;	COMDAT ?Initialize@ioAward@@QAEXXZ
_TEXT	SEGMENT
?Initialize@ioAward@@QAEXXZ PROC			; ioAward::Initialize, COMDAT
; _this$ = ecx

; 19   : 	m_iAwardLevel = 0;

  00000	83 61 04 00	 and	 DWORD PTR [ecx+4], 0

; 20   : 	m_iAwardExp   = 0;

  00004	83 61 08 00	 and	 DWORD PTR [ecx+8], 0

; 21   : }

  00008	c3		 ret	 0
?Initialize@ioAward@@QAEXXZ ENDP			; ioAward::Initialize
_TEXT	ENDS
PUBLIC	?ApplyAwardData@ioAward@@QAEXAAVSP2Packet@@@Z	; ioAward::ApplyAwardData
EXTRN	??5SP2Packet@@QAEAAV0@AAH@Z:PROC		; SP2Packet::operator>>
; Function compile flags: /Ogsp
;	COMDAT ?ApplyAwardData@ioAward@@QAEXAAVSP2Packet@@@Z
_TEXT	SEGMENT
_rkPacket$ = 8						; size = 4
?ApplyAwardData@ioAward@@QAEXAAVSP2Packet@@@Z PROC	; ioAward::ApplyAwardData, COMDAT
; _this$ = ecx

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 25   : 	Initialize();

  00003	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00006	83 20 00	 and	 DWORD PTR [eax], 0
  00009	83 c1 08	 add	 ecx, 8
  0000c	83 21 00	 and	 DWORD PTR [ecx], 0

; 26   : 
; 27   : 	rkPacket >> m_iAwardLevel >> m_iAwardExp;

  0000f	51		 push	 ecx
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _rkPacket$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>
  00019	8b c8		 mov	 ecx, eax
  0001b	e8 00 00 00 00	 call	 ??5SP2Packet@@QAEAAV0@AAH@Z ; SP2Packet::operator>>

; 28   : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?ApplyAwardData@ioAward@@QAEXAAVSP2Packet@@@Z ENDP	; ioAward::ApplyAwardData
_TEXT	ENDS
PUBLIC	?GetAwardLevel@ioAward@@QAEHXZ			; ioAward::GetAwardLevel
; Function compile flags: /Ogsp
;	COMDAT ?GetAwardLevel@ioAward@@QAEHXZ
_TEXT	SEGMENT
?GetAwardLevel@ioAward@@QAEHXZ PROC			; ioAward::GetAwardLevel, COMDAT
; _this$ = ecx

; 51   : 	return m_iAwardLevel;

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 52   : }

  00003	c3		 ret	 0
?GetAwardLevel@ioAward@@QAEHXZ ENDP			; ioAward::GetAwardLevel
_TEXT	ENDS
PUBLIC	?GetAwardExp@ioAward@@QAEHXZ			; ioAward::GetAwardExp
; Function compile flags: /Ogsp
;	COMDAT ?GetAwardExp@ioAward@@QAEHXZ
_TEXT	SEGMENT
?GetAwardExp@ioAward@@QAEHXZ PROC			; ioAward::GetAwardExp, COMDAT
; _this$ = ecx

; 56   : 	return m_iAwardExp;

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 57   : }

  00003	c3		 ret	 0
?GetAwardExp@ioAward@@QAEHXZ ENDP			; ioAward::GetAwardExp
_TEXT	ENDS
PUBLIC	??0ioAward@@QAE@XZ				; ioAward::ioAward
; Function compile flags: /Ogsp
;	COMDAT ??0ioAward@@QAE@XZ
_TEXT	SEGMENT
??0ioAward@@QAE@XZ PROC					; ioAward::ioAward, COMDAT
; _this$ = ecx

; 7    : {

  00000	8b c1		 mov	 eax, ecx

; 8    : 
; 9    : 	Initialize();

  00002	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  00006	83 60 08 00	 and	 DWORD PTR [eax+8], 0
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ioAward@@6B@

; 10   : }

  00010	c3		 ret	 0
??0ioAward@@QAE@XZ ENDP					; ioAward::ioAward
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GioAward@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioAward@@UAEPAXI@Z PROC				; ioAward::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioAward@@6B@
  00010	74 07		 je	 SHORT $LN1@scalar
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	59		 pop	 ecx
$LN1@scalar:
  00019	8b c6		 mov	 eax, esi
  0001b	5e		 pop	 esi
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??_GioAward@@UAEPAXI@Z ENDP				; ioAward::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?AddAwardExp@ioAward@@QAE_NH@Z			; ioAward::AddAwardExp
EXTRN	?GetNextAwardupExp@ioMyLevelMgr@@QAEHH@Z:PROC	; ioMyLevelMgr::GetNextAwardupExp
EXTRN	?GetSingleton@ioMyLevelMgr@@SAAAV1@XZ:PROC	; ioMyLevelMgr::GetSingleton
; Function compile flags: /Ogsp
;	COMDAT ?AddAwardExp@ioAward@@QAE_NH@Z
_TEXT	SEGMENT
_iExp$ = 8						; size = 4
?AddAwardExp@ioAward@@QAE_NH@Z PROC			; ioAward::AddAwardExp, COMDAT
; _this$ = ecx

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 32   : 	if( iExp == 0 ) return false;

  00005	8b 7d 08	 mov	 edi, DWORD PTR _iExp$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	85 ff		 test	 edi, edi
  0000c	74 32		 je	 SHORT $LN2@AddAwardEx

; 33   : 
; 34   : 	int iNextExp = g_LevelMgr.GetNextAwardupExp( GetAwardLevel() );

  0000e	ff 76 04	 push	 DWORD PTR [esi+4]
  00011	e8 00 00 00 00	 call	 ?GetSingleton@ioMyLevelMgr@@SAAAV1@XZ ; ioMyLevelMgr::GetSingleton
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?GetNextAwardupExp@ioMyLevelMgr@@QAEHH@Z ; ioMyLevelMgr::GetNextAwardupExp

; 35   : 	m_iAwardExp += iExp;

  0001d	01 7e 08	 add	 DWORD PTR [esi+8], edi
  00020	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 36   : 	if( iNextExp <= m_iAwardExp )

  00023	3b c1		 cmp	 eax, ecx
  00025	7f 19		 jg	 SHORT $LN2@AddAwardEx

; 37   : 	{
; 38   : 		m_iAwardLevel++;

  00027	ff 46 04	 inc	 DWORD PTR [esi+4]

; 39   : 		//
; 40   : 		int iRemainExp = m_iAwardExp - iNextExp;
; 41   : 		m_iAwardExp = 0;

  0002a	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  0002e	2b c8		 sub	 ecx, eax

; 42   : 		if( iRemainExp > 0 )

  00030	85 c9		 test	 ecx, ecx
  00032	7e 08		 jle	 SHORT $LN1@AddAwardEx

; 43   : 			AddAwardExp( iRemainExp );			

  00034	51		 push	 ecx
  00035	8b ce		 mov	 ecx, esi
  00037	e8 00 00 00 00	 call	 ?AddAwardExp@ioAward@@QAE_NH@Z ; ioAward::AddAwardExp
$LN1@AddAwardEx:

; 44   : 		return true;

  0003c	b0 01		 mov	 al, 1
  0003e	eb 02		 jmp	 SHORT $LN4@AddAwardEx
$LN2@AddAwardEx:

; 45   : 	}
; 46   : 	return false;

  00040	32 c0		 xor	 al, al
$LN4@AddAwardEx:
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi

; 47   : }

  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
?AddAwardExp@ioAward@@QAE_NH@Z ENDP			; ioAward::AddAwardExp
_TEXT	ENDS
END
