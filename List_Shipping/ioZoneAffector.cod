; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioZoneAffector.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_7ioZoneAffector@@6B@				; ioZoneAffector::`vftable'
PUBLIC	??0ioZoneAffector@@QAE@XZ			; ioZoneAffector::ioZoneAffector
PUBLIC	??_R4ioZoneAffector@@6B@			; ioZoneAffector::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioZoneAffector@@@8			; ioZoneAffector `RTTI Type Descriptor'
PUBLIC	??_R3ioZoneAffector@@8				; ioZoneAffector::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioZoneAffector@@8				; ioZoneAffector::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioZoneAffector@@8			; ioZoneAffector::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__purecall:PROC
EXTRN	??_EioZoneAffector@@UAEPAXI@Z:PROC		; ioZoneAffector::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@ioZoneAffector@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iozoneaffector.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@ioZoneAffector@@8 DD FLAT:??_R0?AVioZoneAffector@@@8 ; ioZoneAffector::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioZoneAffector@@8
rdata$r	ENDS
;	COMDAT ??_R2ioZoneAffector@@8
rdata$r	SEGMENT
??_R2ioZoneAffector@@8 DD FLAT:??_R1A@?0A@EA@ioZoneAffector@@8 ; ioZoneAffector::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioZoneAffector@@8
rdata$r	SEGMENT
??_R3ioZoneAffector@@8 DD 00H				; ioZoneAffector::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioZoneAffector@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioZoneAffector@@@8
_DATA	SEGMENT
??_R0?AVioZoneAffector@@@8 DD FLAT:??_7type_info@@6B@	; ioZoneAffector `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioZoneAffector@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioZoneAffector@@6B@
rdata$r	SEGMENT
??_R4ioZoneAffector@@6B@ DD 00H				; ioZoneAffector::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioZoneAffector@@@8
	DD	FLAT:??_R3ioZoneAffector@@8
rdata$r	ENDS
;	COMDAT ??_7ioZoneAffector@@6B@
CONST	SEGMENT
??_7ioZoneAffector@@6B@ DD FLAT:??_R4ioZoneAffector@@6B@ ; ioZoneAffector::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_EioZoneAffector@@UAEPAXI@Z
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0ioZoneAffector@@QAE@XZ
_TEXT	SEGMENT
??0ioZoneAffector@@QAE@XZ PROC				; ioZoneAffector::ioZoneAffector, COMDAT
; _this$ = ecx

; 7    : {

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ioZoneAffector@@6B@

; 8    : }

  00008	c3		 ret	 0
??0ioZoneAffector@@QAE@XZ ENDP				; ioZoneAffector::ioZoneAffector
_TEXT	ENDS
PUBLIC	??0ioZoneAffector@@QAE@ABV0@@Z			; ioZoneAffector::ioZoneAffector
; Function compile flags: /Ogsp
;	COMDAT ??0ioZoneAffector@@QAE@ABV0@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
??0ioZoneAffector@@QAE@ABV0@@Z PROC			; ioZoneAffector::ioZoneAffector, COMDAT
; _this$ = ecx

; 11   : {

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ioZoneAffector@@6B@

; 12   : }

  00008	c2 04 00	 ret	 4
??0ioZoneAffector@@QAE@ABV0@@Z ENDP			; ioZoneAffector::ioZoneAffector
_TEXT	ENDS
PUBLIC	??1ioZoneAffector@@UAE@XZ			; ioZoneAffector::~ioZoneAffector
; Function compile flags: /Ogsp
;	COMDAT ??1ioZoneAffector@@UAE@XZ
_TEXT	SEGMENT
??1ioZoneAffector@@UAE@XZ PROC				; ioZoneAffector::~ioZoneAffector, COMDAT
; _this$ = ecx

; 15   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ioZoneAffector@@6B@

; 16   : 
; 17   : }

  00006	c3		 ret	 0
??1ioZoneAffector@@UAE@XZ ENDP				; ioZoneAffector::~ioZoneAffector
_TEXT	ENDS
PUBLIC	??_7ioFireZoneAffector@@6B@			; ioFireZoneAffector::`vftable'
PUBLIC	??0ioFireZoneAffector@@QAE@XZ			; ioFireZoneAffector::ioFireZoneAffector
PUBLIC	??_R4ioFireZoneAffector@@6B@			; ioFireZoneAffector::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioFireZoneAffector@@@8			; ioFireZoneAffector `RTTI Type Descriptor'
PUBLIC	??_R3ioFireZoneAffector@@8			; ioFireZoneAffector::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioFireZoneAffector@@8			; ioFireZoneAffector::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioFireZoneAffector@@8		; ioFireZoneAffector::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?LoadProperty@ioFireZoneAffector@@UAEXAAVioINILoader@@@Z ; ioFireZoneAffector::LoadProperty
PUBLIC	?GetType@ioFireZoneAffector@@UBE?AW4ZoneAffectorType@ioZoneAffector@@XZ ; ioFireZoneAffector::GetType
PUBLIC	?ApplyToReceiver@ioFireZoneAffector@@UAEXPAVioWorldEventReceiver@@@Z ; ioFireZoneAffector::ApplyToReceiver
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__fltused:DWORD
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
EXTRN	??_EioFireZoneAffector@@UAEPAXI@Z:PROC		; ioFireZoneAffector::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@ioFireZoneAffector@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioFireZoneAffector@@8 DD FLAT:??_R0?AVioFireZoneAffector@@@8 ; ioFireZoneAffector::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioFireZoneAffector@@8
rdata$r	ENDS
;	COMDAT ??_R2ioFireZoneAffector@@8
rdata$r	SEGMENT
??_R2ioFireZoneAffector@@8 DD FLAT:??_R1A@?0A@EA@ioFireZoneAffector@@8 ; ioFireZoneAffector::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioZoneAffector@@8
rdata$r	ENDS
;	COMDAT ??_R3ioFireZoneAffector@@8
rdata$r	SEGMENT
??_R3ioFireZoneAffector@@8 DD 00H			; ioFireZoneAffector::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioFireZoneAffector@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioFireZoneAffector@@@8
_DATA	SEGMENT
??_R0?AVioFireZoneAffector@@@8 DD FLAT:??_7type_info@@6B@ ; ioFireZoneAffector `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioFireZoneAffector@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioFireZoneAffector@@6B@
rdata$r	SEGMENT
??_R4ioFireZoneAffector@@6B@ DD 00H			; ioFireZoneAffector::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioFireZoneAffector@@@8
	DD	FLAT:??_R3ioFireZoneAffector@@8
rdata$r	ENDS
;	COMDAT ??_7ioFireZoneAffector@@6B@
CONST	SEGMENT
??_7ioFireZoneAffector@@6B@ DD FLAT:??_R4ioFireZoneAffector@@6B@ ; ioFireZoneAffector::`vftable'
	DD	FLAT:?LoadProperty@ioFireZoneAffector@@UAEXAAVioINILoader@@@Z
	DD	FLAT:?GetType@ioFireZoneAffector@@UBE?AW4ZoneAffectorType@ioZoneAffector@@XZ
	DD	FLAT:?ApplyToReceiver@ioFireZoneAffector@@UAEXPAVioWorldEventReceiver@@@Z
	DD	FLAT:??_EioFireZoneAffector@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ioFireZoneAffector@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioFireZoneAffector@@QAE@XZ$0
__ehfuncinfo$??0ioFireZoneAffector@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ioFireZoneAffector@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0ioFireZoneAffector@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ioFireZoneAffector@@QAE@XZ PROC			; ioFireZoneAffector::ioFireZoneAffector, COMDAT
; _this$ = ecx

; 38   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioFireZoneAffector@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00015	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioFireZoneAffector@@6B@
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ

; 39   : 	m_fFireDamage = 0.0f;

  00024	0f 57 c0	 xorps	 xmm0, xmm0
  00027	f3 0f 11 46 04	 movss	 DWORD PTR [esi+4], xmm0

; 40   : }

  0002c	8b c6		 mov	 eax, esi
  0002e	e8 00 00 00 00	 call	 __EH_epilog3
  00033	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioFireZoneAffector@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioZoneAffector@@UAE@XZ ; ioZoneAffector::~ioZoneAffector
__ehhandler$??0ioFireZoneAffector@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioFireZoneAffector@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioFireZoneAffector@@QAE@XZ ENDP			; ioFireZoneAffector::ioFireZoneAffector
PUBLIC	??0ioFireZoneAffector@@QAE@ABV0@@Z		; ioFireZoneAffector::ioFireZoneAffector
EXTRN	__imp_??0ioHashString@@QAE@ABV0@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ioFireZoneAffector@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioFireZoneAffector@@QAE@ABV0@@Z$0
__ehfuncinfo$??0ioFireZoneAffector@@QAE@ABV0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ioFireZoneAffector@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0ioFireZoneAffector@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_rhs$ = 8						; size = 4
??0ioFireZoneAffector@@QAE@ABV0@@Z PROC			; ioFireZoneAffector::ioFireZoneAffector, COMDAT
; _this$ = ecx

; 46   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioFireZoneAffector@@QAE@ABV0@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	8b 45 08	 mov	 eax, DWORD PTR _rhs$[ebp]
  00014	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioFireZoneAffector@@6B@
  0001e	d9 40 04	 fld	 DWORD PTR [eax+4]
  00021	83 c0 08	 add	 eax, 8
  00024	d9 5e 04	 fstp	 DWORD PTR [esi+4]
  00027	50		 push	 eax
  00028	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z

; 47   : }

  00031	8b c6		 mov	 eax, esi
  00033	e8 00 00 00 00	 call	 __EH_epilog3
  00038	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioFireZoneAffector@@QAE@ABV0@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioZoneAffector@@UAE@XZ ; ioZoneAffector::~ioZoneAffector
__ehhandler$??0ioFireZoneAffector@@QAE@ABV0@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioFireZoneAffector@@QAE@ABV0@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioFireZoneAffector@@QAE@ABV0@@Z ENDP			; ioFireZoneAffector::ioFireZoneAffector
PUBLIC	??1ioFireZoneAffector@@UAE@XZ			; ioFireZoneAffector::~ioFireZoneAffector
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ioFireZoneAffector@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioFireZoneAffector@@UAE@XZ$0
__ehfuncinfo$??1ioFireZoneAffector@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ioFireZoneAffector@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1ioFireZoneAffector@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioFireZoneAffector@@UAE@XZ PROC			; ioFireZoneAffector::~ioFireZoneAffector, COMDAT
; _this$ = ecx

; 50   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioFireZoneAffector@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioFireZoneAffector@@6B@
  00017	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 51   : }

  0001b	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00024	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioZoneAffector@@6B@
  0002a	e8 00 00 00 00	 call	 __EH_epilog3
  0002f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioFireZoneAffector@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioZoneAffector@@UAE@XZ ; ioZoneAffector::~ioZoneAffector
__ehhandler$??1ioFireZoneAffector@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioFireZoneAffector@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioFireZoneAffector@@UAE@XZ ENDP			; ioFireZoneAffector::~ioFireZoneAffector
; Function compile flags: /Ogsp
;	COMDAT ?GetType@ioFireZoneAffector@@UBE?AW4ZoneAffectorType@ioZoneAffector@@XZ
_TEXT	SEGMENT
?GetType@ioFireZoneAffector@@UBE?AW4ZoneAffectorType@ioZoneAffector@@XZ PROC ; ioFireZoneAffector::GetType, COMDAT
; _this$ = ecx

; 65   : 	return ZAT_FIRE_ZONE;

  00000	33 c0		 xor	 eax, eax
  00002	40		 inc	 eax

; 66   : }

  00003	c3		 ret	 0
?GetType@ioFireZoneAffector@@UBE?AW4ZoneAffectorType@ioZoneAffector@@XZ ENDP ; ioFireZoneAffector::GetType
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?ApplyToReceiver@ioFireZoneAffector@@UAEXPAVioWorldEventReceiver@@@Z
_TEXT	SEGMENT
_pReceiver$ = 8						; size = 4
?ApplyToReceiver@ioFireZoneAffector@@UAEXPAVioWorldEventReceiver@@@Z PROC ; ioFireZoneAffector::ApplyToReceiver, COMDAT
; _this$ = ecx

; 69   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 70   : 	if( pReceiver )

  00005	8b 4d 08	 mov	 ecx, DWORD PTR _pReceiver$[ebp]
  00008	85 c9		 test	 ecx, ecx
  0000a	74 16		 je	 SHORT $LN1@ApplyToRec

; 71   : 	{
; 72   : 		pReceiver->OnFireZoneDamage( m_fFireDamage, m_FireBuff );

  0000c	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00011	8b 11		 mov	 edx, DWORD PTR [ecx]
  00013	56		 push	 esi
  00014	8d 70 08	 lea	 esi, DWORD PTR [eax+8]
  00017	56		 push	 esi
  00018	51		 push	 ecx
  00019	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001e	ff 52 04	 call	 DWORD PTR [edx+4]
  00021	5e		 pop	 esi
$LN1@ApplyToRec:

; 73   : 	}
; 74   : }

  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?ApplyToReceiver@ioFireZoneAffector@@UAEXPAVioWorldEventReceiver@@@Z ENDP ; ioFireZoneAffector::ApplyToReceiver
_TEXT	ENDS
PUBLIC	??_7ioPoisonZoneAffector@@6B@			; ioPoisonZoneAffector::`vftable'
PUBLIC	??0ioPoisonZoneAffector@@QAE@XZ			; ioPoisonZoneAffector::ioPoisonZoneAffector
PUBLIC	??_R4ioPoisonZoneAffector@@6B@			; ioPoisonZoneAffector::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioPoisonZoneAffector@@@8		; ioPoisonZoneAffector `RTTI Type Descriptor'
PUBLIC	??_R3ioPoisonZoneAffector@@8			; ioPoisonZoneAffector::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioPoisonZoneAffector@@8			; ioPoisonZoneAffector::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioPoisonZoneAffector@@8		; ioPoisonZoneAffector::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?LoadProperty@ioPoisonZoneAffector@@UAEXAAVioINILoader@@@Z ; ioPoisonZoneAffector::LoadProperty
PUBLIC	?GetType@ioPoisonZoneAffector@@UBE?AW4ZoneAffectorType@ioZoneAffector@@XZ ; ioPoisonZoneAffector::GetType
PUBLIC	?ApplyToReceiver@ioPoisonZoneAffector@@UAEXPAVioWorldEventReceiver@@@Z ; ioPoisonZoneAffector::ApplyToReceiver
EXTRN	??_EioPoisonZoneAffector@@UAEPAXI@Z:PROC	; ioPoisonZoneAffector::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@ioPoisonZoneAffector@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioPoisonZoneAffector@@8 DD FLAT:??_R0?AVioPoisonZoneAffector@@@8 ; ioPoisonZoneAffector::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioPoisonZoneAffector@@8
rdata$r	ENDS
;	COMDAT ??_R2ioPoisonZoneAffector@@8
rdata$r	SEGMENT
??_R2ioPoisonZoneAffector@@8 DD FLAT:??_R1A@?0A@EA@ioPoisonZoneAffector@@8 ; ioPoisonZoneAffector::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioZoneAffector@@8
rdata$r	ENDS
;	COMDAT ??_R3ioPoisonZoneAffector@@8
rdata$r	SEGMENT
??_R3ioPoisonZoneAffector@@8 DD 00H			; ioPoisonZoneAffector::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioPoisonZoneAffector@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioPoisonZoneAffector@@@8
_DATA	SEGMENT
??_R0?AVioPoisonZoneAffector@@@8 DD FLAT:??_7type_info@@6B@ ; ioPoisonZoneAffector `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioPoisonZoneAffector@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioPoisonZoneAffector@@6B@
rdata$r	SEGMENT
??_R4ioPoisonZoneAffector@@6B@ DD 00H			; ioPoisonZoneAffector::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioPoisonZoneAffector@@@8
	DD	FLAT:??_R3ioPoisonZoneAffector@@8
rdata$r	ENDS
;	COMDAT ??_7ioPoisonZoneAffector@@6B@
CONST	SEGMENT
??_7ioPoisonZoneAffector@@6B@ DD FLAT:??_R4ioPoisonZoneAffector@@6B@ ; ioPoisonZoneAffector::`vftable'
	DD	FLAT:?LoadProperty@ioPoisonZoneAffector@@UAEXAAVioINILoader@@@Z
	DD	FLAT:?GetType@ioPoisonZoneAffector@@UBE?AW4ZoneAffectorType@ioZoneAffector@@XZ
	DD	FLAT:?ApplyToReceiver@ioPoisonZoneAffector@@UAEXPAVioWorldEventReceiver@@@Z
	DD	FLAT:??_EioPoisonZoneAffector@@UAEPAXI@Z
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0ioPoisonZoneAffector@@QAE@XZ
_TEXT	SEGMENT
??0ioPoisonZoneAffector@@QAE@XZ PROC			; ioPoisonZoneAffector::ioPoisonZoneAffector, COMDAT
; _this$ = ecx

; 79   : {

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ioPoisonZoneAffector@@6B@

; 80   : }

  00008	c3		 ret	 0
??0ioPoisonZoneAffector@@QAE@XZ ENDP			; ioPoisonZoneAffector::ioPoisonZoneAffector
_TEXT	ENDS
PUBLIC	??0ioPoisonZoneAffector@@QAE@ABV0@@Z		; ioPoisonZoneAffector::ioPoisonZoneAffector
; Function compile flags: /Ogsp
;	COMDAT ??0ioPoisonZoneAffector@@QAE@ABV0@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
??0ioPoisonZoneAffector@@QAE@ABV0@@Z PROC		; ioPoisonZoneAffector::ioPoisonZoneAffector, COMDAT
; _this$ = ecx

; 84   : {

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ioPoisonZoneAffector@@6B@

; 85   : }

  00008	c2 04 00	 ret	 4
??0ioPoisonZoneAffector@@QAE@ABV0@@Z ENDP		; ioPoisonZoneAffector::ioPoisonZoneAffector
_TEXT	ENDS
PUBLIC	??1ioPoisonZoneAffector@@UAE@XZ			; ioPoisonZoneAffector::~ioPoisonZoneAffector
; Function compile flags: /Ogsp
;	COMDAT ??1ioPoisonZoneAffector@@UAE@XZ
_TEXT	SEGMENT
??1ioPoisonZoneAffector@@UAE@XZ PROC			; ioPoisonZoneAffector::~ioPoisonZoneAffector, COMDAT
; _this$ = ecx

; 89   : }

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ioZoneAffector@@6B@
  00006	c3		 ret	 0
??1ioPoisonZoneAffector@@UAE@XZ ENDP			; ioPoisonZoneAffector::~ioPoisonZoneAffector
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?LoadProperty@ioPoisonZoneAffector@@UAEXAAVioINILoader@@@Z
_TEXT	SEGMENT
_rkLoader$ = 8						; size = 4
?LoadProperty@ioPoisonZoneAffector@@UAEXAAVioINILoader@@@Z PROC ; ioPoisonZoneAffector::LoadProperty, COMDAT
; _this$ = ecx

; 93   : }

  00000	c2 04 00	 ret	 4
?LoadProperty@ioPoisonZoneAffector@@UAEXAAVioINILoader@@@Z ENDP ; ioPoisonZoneAffector::LoadProperty
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?GetType@ioPoisonZoneAffector@@UBE?AW4ZoneAffectorType@ioZoneAffector@@XZ
_TEXT	SEGMENT
?GetType@ioPoisonZoneAffector@@UBE?AW4ZoneAffectorType@ioZoneAffector@@XZ PROC ; ioPoisonZoneAffector::GetType, COMDAT
; _this$ = ecx

; 97   : 	return ZAT_POISON_ZONE;

  00000	6a 02		 push	 2
  00002	58		 pop	 eax

; 98   : }

  00003	c3		 ret	 0
?GetType@ioPoisonZoneAffector@@UBE?AW4ZoneAffectorType@ioZoneAffector@@XZ ENDP ; ioPoisonZoneAffector::GetType
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?ApplyToReceiver@ioPoisonZoneAffector@@UAEXPAVioWorldEventReceiver@@@Z
_TEXT	SEGMENT
_pReceiver$ = 8						; size = 4
?ApplyToReceiver@ioPoisonZoneAffector@@UAEXPAVioWorldEventReceiver@@@Z PROC ; ioPoisonZoneAffector::ApplyToReceiver, COMDAT
; _this$ = ecx

; 101  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 102  : 	if( pReceiver )

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pReceiver$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 05		 je	 SHORT $LN1@ApplyToRec@2

; 103  : 	{
; 104  : 		pReceiver->OnPoisonZoneDamage();

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	ff 50 08	 call	 DWORD PTR [eax+8]
$LN1@ApplyToRec@2:

; 105  : 	}
; 106  : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?ApplyToReceiver@ioPoisonZoneAffector@@UAEXPAVioWorldEventReceiver@@@Z ENDP ; ioPoisonZoneAffector::ApplyToReceiver
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GioZoneAffector@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioZoneAffector@@UAEPAXI@Z PROC			; ioZoneAffector::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioZoneAffector@@6B@
  00010	74 07		 je	 SHORT $LN1@scalar
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	59		 pop	 ecx
$LN1@scalar:
  00019	8b c6		 mov	 eax, esi
  0001b	5e		 pop	 esi
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??_GioZoneAffector@@UAEPAXI@Z ENDP			; ioZoneAffector::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_0DB@FGIHPLBI@ioZoneAffector?3?3CreateAffector?5?9@ ; `string'
PUBLIC	?CreateAffector@ioZoneAffector@@SAPAV1@W4ZoneAffectorType@1@@Z ; ioZoneAffector::CreateAffector
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ:PROC
EXTRN	__imp_?LOG@@3VCLog@@A:BYTE
;	COMDAT ??_C@_0DB@FGIHPLBI@ioZoneAffector?3?3CreateAffector?5?9@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iozoneaffector.cpp
CONST	SEGMENT
??_C@_0DB@FGIHPLBI@ioZoneAffector?3?3CreateAffector?5?9@ DB 'ioZoneAffect'
	DB	'or::CreateAffector - %d Unknown Type', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateAffector@ioZoneAffector@@SAPAV1@W4ZoneAffectorType@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateAffector@ioZoneAffector@@SAPAV1@W4ZoneAffectorType@1@@Z$0
__ehfuncinfo$?CreateAffector@ioZoneAffector@@SAPAV1@W4ZoneAffectorType@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateAffector@ioZoneAffector@@SAPAV1@W4ZoneAffectorType@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?CreateAffector@ioZoneAffector@@SAPAV1@W4ZoneAffectorType@1@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T505723 = 8						; size = 4
_eType$ = 8						; size = 4
?CreateAffector@ioZoneAffector@@SAPAV1@W4ZoneAffectorType@1@@Z PROC ; ioZoneAffector::CreateAffector, COMDAT

; 20   : {

  00000	6a 00		 push	 0
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?CreateAffector@ioZoneAffector@@SAPAV1@W4ZoneAffectorType@1@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 21   : 	switch( eType )

  0000c	8b 45 08	 mov	 eax, DWORD PTR _eType$[ebp]
  0000f	83 e8 00	 sub	 eax, 0
  00012	74 1f		 je	 SHORT $LN3@CreateAffe
  00014	48		 dec	 eax
  00015	74 38		 je	 SHORT $LN2@CreateAffe
  00017	48		 dec	 eax
  00018	74 21		 je	 SHORT $LN1@CreateAffe

; 29   : 	}
; 30   : 
; 31   : 	LOG.PrintTimeAndLog( 0, "ioZoneAffector::CreateAffector - %d Unknown Type", eType );

  0001a	ff 75 08	 push	 DWORD PTR _eType$[ebp]
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@FGIHPLBI@ioZoneAffector?3?3CreateAffector?5?9@
  00022	6a 00		 push	 0
  00024	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  00030	83 c4 10	 add	 esp, 16			; 00000010H
$LN3@CreateAffe:

; 22   : 	{
; 23   : 	case ZAT_NONE:
; 24   : 		return NULL;

  00033	33 c0		 xor	 eax, eax
$LN6@CreateAffe:

; 32   : 	return NULL;
; 33   : }

  00035	e8 00 00 00 00	 call	 __EH_epilog3
  0003a	c3		 ret	 0
$LN1@CreateAffe:

; 27   : 	case ZAT_POISON_ZONE:
; 28   : 		return new ioPoisonZoneAffector;

  0003b	6a 04		 push	 4
  0003d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00042	59		 pop	 ecx
  00043	85 c0		 test	 eax, eax
  00045	74 ec		 je	 SHORT $LN3@CreateAffe
  00047	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ioPoisonZoneAffector@@6B@
  0004d	eb e6		 jmp	 SHORT $LN6@CreateAffe
$LN2@CreateAffe:

; 25   : 	case ZAT_FIRE_ZONE:
; 26   : 		return new ioFireZoneAffector;

  0004f	6a 18		 push	 24			; 00000018H
  00051	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00056	59		 pop	 ecx
  00057	8b c8		 mov	 ecx, eax
  00059	89 4d 08	 mov	 DWORD PTR $T505723[ebp], ecx
  0005c	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00060	85 c9		 test	 ecx, ecx
  00062	74 cf		 je	 SHORT $LN3@CreateAffe
  00064	e8 00 00 00 00	 call	 ??0ioFireZoneAffector@@QAE@XZ ; ioFireZoneAffector::ioFireZoneAffector
  00069	eb ca		 jmp	 SHORT $LN6@CreateAffe
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateAffector@ioZoneAffector@@SAPAV1@W4ZoneAffectorType@1@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR $T505723[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__ehhandler$?CreateAffector@ioZoneAffector@@SAPAV1@W4ZoneAffectorType@1@@Z:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00011	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateAffector@ioZoneAffector@@SAPAV1@W4ZoneAffectorType@1@@Z
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateAffector@ioZoneAffector@@SAPAV1@W4ZoneAffectorType@1@@Z ENDP ; ioZoneAffector::CreateAffector
; Function compile flags: /Ogsp
;	COMDAT ??_GioFireZoneAffector@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioFireZoneAffector@@UAEPAXI@Z PROC			; ioFireZoneAffector::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioFireZoneAffector@@UAE@XZ ; ioFireZoneAffector::~ioFireZoneAffector
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@2
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@2:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioFireZoneAffector@@UAEPAXI@Z ENDP			; ioFireZoneAffector::`scalar deleting destructor'
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GioPoisonZoneAffector@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioPoisonZoneAffector@@UAEPAXI@Z PROC		; ioPoisonZoneAffector::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioZoneAffector@@6B@
  00010	74 07		 je	 SHORT $LN1@scalar@3
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	59		 pop	 ecx
$LN1@scalar@3:
  00019	8b c6		 mov	 eax, esi
  0001b	5e		 pop	 esi
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??_GioPoisonZoneAffector@@UAEPAXI@Z ENDP		; ioPoisonZoneAffector::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadString_e@$09@ioINILoader@@QAEXAAY09$$CBDAAY00$$CBDPADH@Z ; ioINILoader::LoadString_e<10>
EXTRN	__imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$LoadString_e@$09@ioINILoader@@QAEXAAY09$$CBDAAY00$$CBDPADH@Z
_TEXT	SEGMENT
__k$ = -20						; size = 10
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_d$ = 12						; size = 4
_b$ = 16						; size = 4
_i$ = 20						; size = 4
??$LoadString_e@$09@ioINILoader@@QAEXAAY09$$CBDAAY00$$CBDPADH@Z PROC ; ioINILoader::LoadString_e<10>, COMDAT
; _this$ = ecx

; 161  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 162  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b 75 0c	 mov	 esi, DWORD PTR _d$[ebp]
  00019	57		 push	 edi
  0001a	8b 7d 10	 mov	 edi, DWORD PTR _b$[ebp]
  0001d	84 d2		 test	 dl, dl
  0001f	0f 84 0d 01 00
	00		 je	 $LN96@LoadString
  00025	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00028	88 55 ec	 mov	 BYTE PTR __k$[ebp], dl
  0002b	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0002e	84 d2		 test	 dl, dl
  00030	0f 84 f6 00 00
	00		 je	 $LN95@LoadString
  00036	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00039	88 55 ed	 mov	 BYTE PTR __k$[ebp+1], dl
  0003c	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003f	84 d2		 test	 dl, dl
  00041	0f 84 df 00 00
	00		 je	 $LN94@LoadString
  00047	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0004a	88 55 ee	 mov	 BYTE PTR __k$[ebp+2], dl
  0004d	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  00050	84 d2		 test	 dl, dl
  00052	0f 84 c8 00 00
	00		 je	 $LN93@LoadString
  00058	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0005b	88 55 ef	 mov	 BYTE PTR __k$[ebp+3], dl
  0005e	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00061	84 d2		 test	 dl, dl
  00063	0f 84 b1 00 00
	00		 je	 $LN92@LoadString
  00069	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0006c	88 55 f0	 mov	 BYTE PTR __k$[ebp+4], dl
  0006f	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00072	84 d2		 test	 dl, dl
  00074	0f 84 9a 00 00
	00		 je	 $LN91@LoadString
  0007a	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0007d	88 55 f1	 mov	 BYTE PTR __k$[ebp+5], dl
  00080	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00083	84 d2		 test	 dl, dl
  00085	0f 84 83 00 00
	00		 je	 $LN90@LoadString
  0008b	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0008e	88 55 f2	 mov	 BYTE PTR __k$[ebp+6], dl
  00091	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00094	84 d2		 test	 dl, dl
  00096	74 70		 je	 SHORT $LN89@LoadString
  00098	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009b	88 55 f3	 mov	 BYTE PTR __k$[ebp+7], dl
  0009e	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a1	84 d2		 test	 dl, dl
  000a3	74 5d		 je	 SHORT $LN88@LoadString
  000a5	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a8	80 78 09 00	 cmp	 BYTE PTR [eax+9], 0
  000ac	88 55 f4	 mov	 BYTE PTR __k$[ebp+8], dl
  000af	0f 84 81 00 00
	00		 je	 $LN1@LoadString
  000b5	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000b8	84 d2		 test	 dl, dl
  000ba	74 40		 je	 SHORT $LN86@LoadString
  000bc	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000bf	88 55 f6	 mov	 BYTE PTR __k$[ebp+10], dl
  000c2	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000c5	84 d2		 test	 dl, dl
  000c7	74 2d		 je	 SHORT $LN85@LoadString
  000c9	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000cc	88 55 f7	 mov	 BYTE PTR __k$[ebp+11], dl
  000cf	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000d2	84 d2		 test	 dl, dl
  000d4	74 1a		 je	 SHORT $LN84@LoadString
  000d6	8a 40 0d	 mov	 al, BYTE PTR [eax+13]
  000d9	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000dc	88 55 f8	 mov	 BYTE PTR __k$[ebp+12], dl
  000df	84 c0		 test	 al, al
  000e1	74 07		 je	 SHORT $LN83@LoadString
  000e3	34 ec		 xor	 al, -20			; ffffffecH
  000e5	88 45 f9	 mov	 BYTE PTR __k$[ebp+13], al
  000e8	eb 4c		 jmp	 SHORT $LN1@LoadString
$LN83@LoadString:
  000ea	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  000ee	eb 46		 jmp	 SHORT $LN1@LoadString
$LN84@LoadString:
  000f0	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  000f4	eb 40		 jmp	 SHORT $LN1@LoadString
$LN85@LoadString:
  000f6	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  000fa	eb 3a		 jmp	 SHORT $LN1@LoadString
$LN86@LoadString:
  000fc	c6 45 f6 eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  00100	eb 34		 jmp	 SHORT $LN1@LoadString
$LN88@LoadString:
  00102	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00106	eb 2e		 jmp	 SHORT $LN1@LoadString
$LN89@LoadString:
  00108	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  0010c	eb 28		 jmp	 SHORT $LN1@LoadString
$LN90@LoadString:
  0010e	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  00112	eb 22		 jmp	 SHORT $LN1@LoadString
$LN91@LoadString:
  00114	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  00118	eb 1c		 jmp	 SHORT $LN1@LoadString
$LN92@LoadString:
  0011a	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  0011e	eb 16		 jmp	 SHORT $LN1@LoadString
$LN93@LoadString:
  00120	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00124	eb 10		 jmp	 SHORT $LN1@LoadString
$LN94@LoadString:
  00126	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0012a	eb 0a		 jmp	 SHORT $LN1@LoadString
$LN95@LoadString:
  0012c	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00130	eb 04		 jmp	 SHORT $LN1@LoadString
$LN96@LoadString:
  00132	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadString:
  00136	6a 02		 push	 2
  00138	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  0013b	c6 45 f5 00	 mov	 BYTE PTR __k$[ebp+9], 0
  0013f	5a		 pop	 edx
$LL104@LoadString:
  00140	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00146	83 c0 04	 add	 eax, 4
  00149	4a		 dec	 edx
  0014a	75 f4		 jne	 SHORT $LL104@LoadString

; 163  : 		LoadString(_k, d, b, i);

  0014c	ff 75 14	 push	 DWORD PTR _i$[ebp]
  0014f	80 75 f4 ed	 xor	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00153	57		 push	 edi
  00154	56		 push	 esi
  00155	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  00158	50		 push	 eax
  00159	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z

; 164  : 	}

  0015f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00162	5f		 pop	 edi
  00163	33 cd		 xor	 ecx, ebp
  00165	5e		 pop	 esi
  00166	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0016b	c9		 leave
  0016c	c2 10 00	 ret	 16			; 00000010H
??$LoadString_e@$09@ioINILoader@@QAEXAAY09$$CBDAAY00$$CBDPADH@Z ENDP ; ioINILoader::LoadString_e<10>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadFloat_e@$0M@@ioINILoader@@QAEMAAY0M@$$CBDM@Z ; ioINILoader::LoadFloat_e<12>
EXTRN	__imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$LoadFloat_e@$0M@@ioINILoader@@QAEMAAY0M@$$CBDM@Z
_TEXT	SEGMENT
__k$ = -20						; size = 12
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_f$ = 12						; size = 4
??$LoadFloat_e@$0M@@ioINILoader@@QAEMAAY0M@$$CBDM@Z PROC ; ioINILoader::LoadFloat_e<12>, COMDAT
; _this$ = ecx

; 135  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 136  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 32 01 00
	00		 je	 $LN96@LoadFloat_
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 ec	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 1b 01 00
	00		 je	 $LN95@LoadFloat_
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 ed	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 04 01 00
	00		 je	 $LN94@LoadFloat_
  00042	b1 eb		 mov	 cl, -21			; ffffffebH
  00044	32 d1		 xor	 dl, cl
  00046	88 55 ee	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 ec 00 00
	00		 je	 $LN93@LoadFloat_
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 ef	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 d5 00 00
	00		 je	 $LN92@LoadFloat_
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 f0	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 be 00 00
	00		 je	 $LN91@LoadFloat_
  00076	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00079	88 55 f1	 mov	 BYTE PTR __k$[ebp+5], dl
  0007c	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007f	84 d2		 test	 dl, dl
  00081	0f 84 a8 00 00
	00		 je	 $LN90@LoadFloat_
  00087	32 d1		 xor	 dl, cl
  00089	88 55 f2	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 92 00 00
	00		 je	 $LN89@LoadFloat_
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 f3	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	74 7f		 je	 SHORT $LN88@LoadFloat_
  000a4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a7	88 55 f4	 mov	 BYTE PTR __k$[ebp+8], dl
  000aa	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000ad	84 d2		 test	 dl, dl
  000af	74 6c		 je	 SHORT $LN87@LoadFloat_
  000b1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b4	88 55 f5	 mov	 BYTE PTR __k$[ebp+9], dl
  000b7	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000ba	84 d2		 test	 dl, dl
  000bc	74 5a		 je	 SHORT $LN86@LoadFloat_
  000be	32 d1		 xor	 dl, cl
  000c0	80 78 0b 00	 cmp	 BYTE PTR [eax+11], 0
  000c4	88 55 f6	 mov	 BYTE PTR __k$[ebp+10], dl
  000c7	0f 84 89 00 00
	00		 je	 $LN1@LoadFloat_
  000cd	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000d0	84 d2		 test	 dl, dl
  000d2	74 3e		 je	 SHORT $LN84@LoadFloat_
  000d4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000d7	88 55 f8	 mov	 BYTE PTR __k$[ebp+12], dl
  000da	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000dd	84 d2		 test	 dl, dl
  000df	74 2b		 je	 SHORT $LN83@LoadFloat_
  000e1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000e4	88 55 f9	 mov	 BYTE PTR __k$[ebp+13], dl
  000e7	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000ea	84 d2		 test	 dl, dl
  000ec	74 19		 je	 SHORT $LN82@LoadFloat_
  000ee	8a 40 0f	 mov	 al, BYTE PTR [eax+15]
  000f1	32 d1		 xor	 dl, cl
  000f3	88 55 fa	 mov	 BYTE PTR __k$[ebp+14], dl
  000f6	84 c0		 test	 al, al
  000f8	74 07		 je	 SHORT $LN81@LoadFloat_
  000fa	34 ea		 xor	 al, -22			; ffffffeaH
  000fc	88 45 fb	 mov	 BYTE PTR __k$[ebp+15], al
  000ff	eb 55		 jmp	 SHORT $LN1@LoadFloat_
$LN81@LoadFloat_:
  00101	c6 45 fb ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00105	eb 4f		 jmp	 SHORT $LN1@LoadFloat_
$LN82@LoadFloat_:
  00107	88 4d fa	 mov	 BYTE PTR __k$[ebp+14], cl
  0010a	eb 4a		 jmp	 SHORT $LN1@LoadFloat_
$LN83@LoadFloat_:
  0010c	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  00110	eb 44		 jmp	 SHORT $LN1@LoadFloat_
$LN84@LoadFloat_:
  00112	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00116	eb 3e		 jmp	 SHORT $LN1@LoadFloat_
$LN86@LoadFloat_:
  00118	88 4d f6	 mov	 BYTE PTR __k$[ebp+10], cl
  0011b	eb 39		 jmp	 SHORT $LN1@LoadFloat_
$LN87@LoadFloat_:
  0011d	c6 45 f5 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  00121	eb 33		 jmp	 SHORT $LN1@LoadFloat_
$LN88@LoadFloat_:
  00123	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00127	eb 2d		 jmp	 SHORT $LN1@LoadFloat_
$LN89@LoadFloat_:
  00129	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  0012d	eb 27		 jmp	 SHORT $LN1@LoadFloat_
$LN90@LoadFloat_:
  0012f	88 4d f2	 mov	 BYTE PTR __k$[ebp+6], cl
  00132	eb 22		 jmp	 SHORT $LN1@LoadFloat_
$LN91@LoadFloat_:
  00134	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  00138	eb 1c		 jmp	 SHORT $LN1@LoadFloat_
$LN92@LoadFloat_:
  0013a	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  0013e	eb 16		 jmp	 SHORT $LN1@LoadFloat_
$LN93@LoadFloat_:
  00140	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00144	eb 10		 jmp	 SHORT $LN1@LoadFloat_
$LN94@LoadFloat_:
  00146	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0014a	eb 0a		 jmp	 SHORT $LN1@LoadFloat_
$LN95@LoadFloat_:
  0014c	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00150	eb 04		 jmp	 SHORT $LN1@LoadFloat_
$LN96@LoadFloat_:
  00152	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadFloat_:
  00156	6a 02		 push	 2
  00158	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  0015b	c6 45 f7 00	 mov	 BYTE PTR __k$[ebp+11], 0
  0015f	5a		 pop	 edx
$LL104@LoadFloat_:
  00160	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00166	83 c0 04	 add	 eax, 4
  00169	4a		 dec	 edx
  0016a	75 f4		 jne	 SHORT $LL104@LoadFloat_
  0016c	6a 08		 push	 8
  0016e	58		 pop	 eax
$LL101@LoadFloat_:
  0016f	8b c8		 mov	 ecx, eax
  00171	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00177	79 05		 jns	 SHORT $LN111@LoadFloat_
  00179	49		 dec	 ecx
  0017a	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0017d	41		 inc	 ecx
$LN111@LoadFloat_:
  0017e	b2 ed		 mov	 dl, -19			; ffffffedH
  00180	2a d1		 sub	 dl, cl
  00182	30 54 05 ec	 xor	 BYTE PTR __k$[ebp+eax], dl
  00186	40		 inc	 eax
  00187	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  0018a	7c e3		 jl	 SHORT $LL101@LoadFloat_

; 137  : 		return LoadFloat(_k, f);

  0018c	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _f$[ebp]
  00191	51		 push	 ecx
  00192	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  00195	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019a	50		 push	 eax
  0019b	8b ce		 mov	 ecx, esi
  0019d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z

; 138  : 	}

  001a3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a6	33 cd		 xor	 ecx, ebp
  001a8	5e		 pop	 esi
  001a9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ae	c9		 leave
  001af	c2 08 00	 ret	 8
??$LoadFloat_e@$0M@@ioINILoader@@QAEMAAY0M@$$CBDM@Z ENDP ; ioINILoader::LoadFloat_e<12>
_TEXT	ENDS
PUBLIC	__real@41200000
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_??4ioHashString@@QAEAAV0@PBD@Z:PROC
EXTRN	_memset:PROC
;	COMDAT __real@41200000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iozoneaffector.cpp
CONST	ENDS
;	COMDAT ?LoadProperty@ioFireZoneAffector@@UAEXAAVioINILoader@@@Z
_TEXT	SEGMENT
_szBuf$ = -280						; size = 260
__k$505960 = -20					; size = 12
__k$505822 = -20					; size = 10
__$ArrayPad$ = -4					; size = 4
_rkLoader$ = 8						; size = 4
?LoadProperty@ioFireZoneAffector@@UAEXAAVioINILoader@@@Z PROC ; ioFireZoneAffector::LoadProperty, COMDAT
; _this$ = ecx

; 54   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 18 01 00
	00		 sub	 esp, 280		; 00000118H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	8b 7d 08	 mov	 edi, DWORD PTR _rkLoader$[ebp]

; 55   : 	char szBuf[MAX_PATH] = "";

  00018	68 03 01 00 00	 push	 259			; 00000103H
  0001d	8d 85 e9 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp+1]
  00023	6a 00		 push	 0
  00025	50		 push	 eax
  00026	8b f1		 mov	 esi, ecx
  00028	c6 85 e8 fe ff
	ff 00		 mov	 BYTE PTR _szBuf$[ebp], 0
  0002f	e8 00 00 00 00	 call	 _memset
  00034	83 c4 0c	 add	 esp, 12			; 0000000cH

; 56   : 	
; 57   : 	rkLoader.LoadString_e( "fire_buff", "", szBuf, MAX_PATH );

  00037	6a 02		 push	 2
  00039	c7 45 ec 8b 85
	99 8f		 mov	 DWORD PTR __k$505822[ebp], -1885764213 ; 8f99858bH
  00040	c7 45 f0 b2 8e
	9e 8c		 mov	 DWORD PTR __k$505822[ebp+4], -1935765838 ; 8c9e8eb2H
  00047	8d 45 ec	 lea	 eax, DWORD PTR __k$505822[ebp]
  0004a	66 c7 45 f4 8b
	00		 mov	 WORD PTR __k$505822[ebp+8], 139 ; 0000008bH
  00050	59		 pop	 ecx
$LL106@LoadProper:
  00051	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00057	83 c0 04	 add	 eax, 4
  0005a	49		 dec	 ecx
  0005b	75 f4		 jne	 SHORT $LL106@LoadProper
  0005d	80 75 f4 ed	 xor	 BYTE PTR __k$505822[ebp+8], -19 ; ffffffedH
  00061	68 04 01 00 00	 push	 260			; 00000104H
  00066	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0006c	50		 push	 eax
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00072	8d 45 ec	 lea	 eax, DWORD PTR __k$505822[ebp]
  00075	50		 push	 eax
  00076	8b cf		 mov	 ecx, edi
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z

; 58   : 	m_FireBuff = szBuf;

  0007e	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00084	50		 push	 eax
  00085	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00088	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z
  0008e	6a 02		 push	 2

; 59   : 
; 60   : 	m_fFireDamage = rkLoader.LoadFloat_e( "fire_damage", 10 );

  00090	c7 45 ec 8b 85
	99 8f		 mov	 DWORD PTR __k$505960[ebp], -1885764213 ; 8f99858bH
  00097	c7 45 f0 b2 88
	8a 87		 mov	 DWORD PTR __k$505960[ebp+4], -2020964174 ; 878a88b2H
  0009e	8d 45 ec	 lea	 eax, DWORD PTR __k$505960[ebp]
  000a1	c7 45 f4 8c 8b
	8e 00		 mov	 DWORD PTR __k$505960[ebp+8], 9341836 ; 008e8b8cH
  000a8	59		 pop	 ecx
$LL212@LoadProper:
  000a9	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  000af	83 c0 04	 add	 eax, 4
  000b2	49		 dec	 ecx
  000b3	75 f4		 jne	 SHORT $LL212@LoadProper
  000b5	6a 08		 push	 8
  000b7	58		 pop	 eax
$LL209@LoadProper:
  000b8	8b c8		 mov	 ecx, eax
  000ba	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  000c0	79 05		 jns	 SHORT $LN223@LoadProper
  000c2	49		 dec	 ecx
  000c3	83 c9 fc	 or	 ecx, -4			; fffffffcH
  000c6	41		 inc	 ecx
$LN223@LoadProper:
  000c7	b2 ed		 mov	 dl, -19			; ffffffedH
  000c9	2a d1		 sub	 dl, cl
  000cb	30 54 05 ec	 xor	 BYTE PTR __k$505960[ebp+eax], dl
  000cf	40		 inc	 eax
  000d0	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  000d3	7c e3		 jl	 SHORT $LL209@LoadProper
  000d5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  000dd	51		 push	 ecx
  000de	8d 45 ec	 lea	 eax, DWORD PTR __k$505960[ebp]
  000e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e6	50		 push	 eax
  000e7	8b cf		 mov	 ecx, edi
  000e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z
  000ef	d9 5e 04	 fstp	 DWORD PTR [esi+4]

; 61   : }

  000f2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f5	5f		 pop	 edi
  000f6	33 cd		 xor	 ecx, ebp
  000f8	5e		 pop	 esi
  000f9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000fe	c9		 leave
  000ff	c2 04 00	 ret	 4
?LoadProperty@ioFireZoneAffector@@UAEXAAVioINILoader@@@Z ENDP ; ioFireZoneAffector::LoadProperty
_TEXT	ENDS
END
