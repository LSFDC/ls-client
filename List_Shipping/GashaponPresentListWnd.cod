; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\GUI\GashaponPresentListWnd.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?return1000@@YAIXZ				; return1000
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
;	COMDAT ?return1000@@YAIXZ
_TEXT	SEGMENT
?return1000@@YAIXZ PROC					; return1000, COMDAT

; 29   : 	__forceinline unsigned int return1000() { __asm mov eax, 1000 };

  00000	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  00005	c3		 ret	 0
?return1000@@YAIXZ ENDP					; return1000
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1exception@std@@UAE@XZ
  00012	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00016	74 07		 je	 SHORT $LN1@scalar
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	59		 pop	 ecx
$LN1@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ ; GashaponPresentListWnd::GashaponPresentInfo::GashaponPresentInfo
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ$1
__ehfuncinfo$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ PROC ; GashaponPresentListWnd::GashaponPresentInfo::GashaponPresentInfo, COMDAT
; _this$ = ecx
  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00011	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_??0ioHashString@@QAE@XZ
  00017	ff d6		 call	 esi
  00019	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001d	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00020	ff d6		 call	 esi
  00022	8d 4f 20	 lea	 ecx, DWORD PTR [edi+32]
  00025	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00029	ff d6		 call	 esi
  0002b	8b c7		 mov	 eax, edi
  0002d	e8 00 00 00 00	 call	 __EH_epilog3
  00032	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ$1:
  00009	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	83 c1 10	 add	 ecx, 16			; 00000010H
  0000f	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ:
  00015	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00019	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001c	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ ENDP ; GashaponPresentListWnd::GashaponPresentInfo::GashaponPresentInfo
PUBLIC	??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ ; GashaponPresentListWnd::GashaponPresentInfo::~GashaponPresentInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ$1
__ehfuncinfo$??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ PROC ; GashaponPresentListWnd::GashaponPresentInfo::~GashaponPresentInfo, COMDAT
; _this$ = ecx
  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00011	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00017	8d 4f 20	 lea	 ecx, DWORD PTR [edi+32]
  0001a	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00021	ff d6		 call	 esi
  00023	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00026	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0002a	ff d6		 call	 esi
  0002c	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00030	8b cf		 mov	 ecx, edi
  00032	ff d6		 call	 esi
  00034	e8 00 00 00 00	 call	 __EH_epilog3
  00039	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ$1:
  00009	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	83 c1 10	 add	 ecx, 16			; 00000010H
  0000f	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ:
  00015	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00019	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001c	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ ENDP ; GashaponPresentListWnd::GashaponPresentInfo::~GashaponPresentInfo
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	return (_Where);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 58   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 62   : 	}

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 490  : 		{	// find length of null-terminated string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 491  : 		return (_CSTD strlen(_First));

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL3@length:
  00009	8a 08		 mov	 cl, BYTE PTR [eax]
  0000b	40		 inc	 eax
  0000c	84 c9		 test	 cl, cl
  0000e	75 f9		 jne	 SHORT $LL3@length
  00010	2b c2		 sub	 eax, edx

; 492  : 		}

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
EXTRN	_memcpy:PROC
; Function compile flags: /Ogsp
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 496  : 		{	// copy [_First1, _First1 + _Count) to [_First2, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 498  : 		}

  00003	5d		 pop	 ebp

; 497  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

  00004	e9 00 00 00 00	 jmp	 _memcpy
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
EXTRN	__imp__memmove:PROC
; Function compile flags: /Ogsp
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 516  : 		{	// copy [_First1, _First1 + _Count) to [_First2, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 518  : 		}

  00003	5d		 pop	 ebp

; 517  : 		return ((_Elem *)_CSTD memmove(_First1, _First2, _Count));

  00004	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp__memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogsp
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 526  : 		{	// assign an element

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 527  : 		_Left = _Right;

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	8a 00		 mov	 al, BYTE PTR [eax]
  00008	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000b	88 01		 mov	 BYTE PTR [ecx], al

; 528  : 		}

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	__real@3f266666
PUBLIC	??_C@_0CB@GHCCAJOI@GashaponPresentListWnd?3?3OnRender@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?OnRender@GashaponPresentListWnd@@MAEXXZ	; GashaponPresentListWnd::OnRender
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ:PROC
EXTRN	__imp_?c_str@ioHashString@@QBEPBDXZ:PROC
EXTRN	__imp_?SetTextColor@ioFontManager@@QAEXK@Z:PROC
EXTRN	__imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z:PROC
EXTRN	__imp_?SetBkColor@ioFontManager@@QAEXHHH@Z:PROC
EXTRN	__imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z:PROC
EXTRN	__imp_?GetSingleton@ioFontManager@@SAAAV1@XZ:PROC
EXTRN	?PrintFullText@ioComplexStringPrinter@@QAEXMMW4TextAlignType@@E@Z:PROC ; ioComplexStringPrinter::PrintFullText
EXTRN	?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ:PROC ; ioComplexStringPrinter::AddTextPiece
EXTRN	__imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z:PROC
EXTRN	__imp_?GetSingleton@ioStringManager@@SAAAV1@XZ:PROC
EXTRN	?SetTextColor@ioComplexStringPrinter@@QAEXK@Z:PROC ; ioComplexStringPrinter::SetTextColor
EXTRN	?SetBkColor@ioComplexStringPrinter@@QAEXHHH@Z:PROC ; ioComplexStringPrinter::SetBkColor
EXTRN	?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z:PROC ; ioComplexStringPrinter::SetTextStyle
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??0ioComplexStringPrinter@@QAE@XZ:PROC		; ioComplexStringPrinter::ioComplexStringPrinter
EXTRN	??1ioComplexStringPrinter@@QAE@XZ:PROC		; ioComplexStringPrinter::~ioComplexStringPrinter
EXTRN	__imp_?GetDerivedPosY@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?GetDerivedPosX@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?OnRender@ioWnd@@MAEXXZ:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@3f266666
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\gashaponpresentlistwnd.cpp
CONST	SEGMENT
__real@3f266666 DD 03f266666r			; 0.65
CONST	ENDS
;	COMDAT ??_C@_0CB@GHCCAJOI@GashaponPresentListWnd?3?3OnRender@
CONST	SEGMENT
??_C@_0CB@GHCCAJOI@GashaponPresentListWnd?3?3OnRender@ DB 'GashaponPresen'
	DB	'tListWnd::OnRender', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnRender@GashaponPresentListWnd@@MAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnRender@GashaponPresentListWnd@@MAEXXZ$0
__ehfuncinfo$?OnRender@GashaponPresentListWnd@@MAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnRender@GashaponPresentListWnd@@MAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?OnRender@GashaponPresentListWnd@@MAEXXZ
_TEXT	SEGMENT
_kPrinter$ = -92					; size = 64
_this$ = -28						; size = 4
tv326 = -24						; size = 4
_iXPos$ = -24						; size = 4
_iYPos$ = -20						; size = 4
tv206 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?OnRender@GashaponPresentListWnd@@MAEXXZ PROC		; GashaponPresentListWnd::OnRender, COMDAT
; _this$ = ecx

; 183  : {

  00000	6a 50		 push	 80			; 00000050H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?OnRender@GashaponPresentListWnd@@MAEXXZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 e4	 mov	 DWORD PTR _this$[ebp], esi

; 184  : 	ioWnd::OnRender();

  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?OnRender@ioWnd@@MAEXXZ

; 185  : 
; 186  : 	int iXPos = GetDerivedPosX();

  00017	8b ce		 mov	 ecx, esi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosX@ioWnd@@QBEHXZ

; 187  : 	int iYPos = GetDerivedPosY();

  0001f	8b ce		 mov	 ecx, esi
  00021	89 45 e8	 mov	 DWORD PTR _iXPos$[ebp], eax
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosY@ioWnd@@QBEHXZ

; 188  : 
; 189  : 	enum
; 190  : 	{
; 191  : 		PAGE_X		= 238,
; 192  : 		PAGE_Y		= 425,
; 193  : 
; 194  : 		DESC_X		= 238,
; 195  : 		DESC_Y		= 470,
; 196  : 
; 197  : 		LINE_GAP	= 20,
; 198  : 
; 199  : 		MAX_TEXT    = 2,
; 200  : 	};
; 201  : 
; 202  : 	ioComplexStringPrinter kPrinter[MAX_TEXT];

  0002a	68 00 00 00 00	 push	 OFFSET ??1ioComplexStringPrinter@@QAE@XZ ; ioComplexStringPrinter::~ioComplexStringPrinter
  0002f	68 00 00 00 00	 push	 OFFSET ??0ioComplexStringPrinter@@QAE@XZ ; ioComplexStringPrinter::ioComplexStringPrinter
  00034	6a 02		 push	 2
  00036	89 45 ec	 mov	 DWORD PTR _iYPos$[ebp], eax
  00039	6a 20		 push	 32			; 00000020H
  0003b	8d 45 a4	 lea	 eax, DWORD PTR _kPrinter$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ??_L@YGXPAXIHP6EX0@Z1@Z
  00044	33 f6		 xor	 esi, esi

; 203  : 	kPrinter[0].SetTextStyle( TS_NORMAL);

  00046	56		 push	 esi
  00047	8d 4d a4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  0004a	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
  0004d	e8 00 00 00 00	 call	 ?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z ; ioComplexStringPrinter::SetTextStyle

; 204  : 	kPrinter[0].SetBkColor( 0, 0, 0 );	

  00052	56		 push	 esi
  00053	56		 push	 esi
  00054	56		 push	 esi
  00055	8d 4d a4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  00058	e8 00 00 00 00	 call	 ?SetBkColor@ioComplexStringPrinter@@QAEXHHH@Z ; ioComplexStringPrinter::SetBkColor

; 205  : 	kPrinter[0].SetTextColor( TCT_DEFAULT_DARKGRAY ); 

  0005d	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  00062	8d 4d a4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  00065	e8 00 00 00 00	 call	 ?SetTextColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetTextColor

; 206  : 	kPrinter[0].AddTextPiece( FONT_SIZE_13, STR(1) );

  0006a	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetSingleton@ioStringManager@@SAAAV1@XZ
  00070	56		 push	 esi
  00071	6a 01		 push	 1
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@GHCCAJOI@GashaponPresentListWnd?3?3OnRender@
  0007d	ff d7		 call	 edi
  0007f	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  00085	8b c8		 mov	 ecx, eax
  00087	ff d3		 call	 ebx
  00089	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  00091	50		 push	 eax
  00092	51		 push	 ecx
  00093	8d 45 a4	 lea	 eax, DWORD PTR _kPrinter$[ebp]
  00096	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009b	50		 push	 eax
  0009c	e8 00 00 00 00	 call	 ?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ ; ioComplexStringPrinter::AddTextPiece
  000a1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 207  : 
; 208  : 	kPrinter[0].SetTextStyle( TS_NORMAL);

  000a4	56		 push	 esi
  000a5	8d 4d a4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  000a8	e8 00 00 00 00	 call	 ?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z ; ioComplexStringPrinter::SetTextStyle

; 209  : 	kPrinter[0].SetBkColor( 0, 0, 0 );	

  000ad	56		 push	 esi
  000ae	56		 push	 esi
  000af	56		 push	 esi
  000b0	8d 4d a4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  000b3	e8 00 00 00 00	 call	 ?SetBkColor@ioComplexStringPrinter@@QAEXHHH@Z ; ioComplexStringPrinter::SetBkColor

; 210  : 	kPrinter[0].SetTextColor( TCT_DEFAULT_RED ); 

  000b8	68 00 16 b9 ff	 push	 -4647424		; ffb91600H
  000bd	8d 4d a4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  000c0	e8 00 00 00 00	 call	 ?SetTextColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetTextColor

; 211  : 	kPrinter[0].AddTextPiece( FONT_SIZE_13, STR(2) );

  000c5	56		 push	 esi
  000c6	6a 02		 push	 2
  000c8	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@GHCCAJOI@GashaponPresentListWnd?3?3OnRender@
  000d2	ff d7		 call	 edi
  000d4	8b c8		 mov	 ecx, eax
  000d6	ff d3		 call	 ebx
  000d8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  000e0	50		 push	 eax
  000e1	51		 push	 ecx
  000e2	8d 45 a4	 lea	 eax, DWORD PTR _kPrinter$[ebp]
  000e5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ea	50		 push	 eax
  000eb	e8 00 00 00 00	 call	 ?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ ; ioComplexStringPrinter::AddTextPiece
  000f0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 212  : 
; 213  : 	kPrinter[0].SetTextStyle( TS_NORMAL);

  000f3	56		 push	 esi
  000f4	8d 4d a4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  000f7	e8 00 00 00 00	 call	 ?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z ; ioComplexStringPrinter::SetTextStyle

; 214  : 	kPrinter[0].SetBkColor( 0, 0, 0 );	

  000fc	56		 push	 esi
  000fd	56		 push	 esi
  000fe	56		 push	 esi
  000ff	8d 4d a4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  00102	e8 00 00 00 00	 call	 ?SetBkColor@ioComplexStringPrinter@@QAEXHHH@Z ; ioComplexStringPrinter::SetBkColor

; 215  : 	kPrinter[0].SetTextColor( TCT_DEFAULT_DARKGRAY ); 

  00107	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  0010c	8d 4d a4	 lea	 ecx, DWORD PTR _kPrinter$[ebp]
  0010f	e8 00 00 00 00	 call	 ?SetTextColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetTextColor

; 216  : 	kPrinter[0].AddTextPiece( FONT_SIZE_13, STR(3) );

  00114	56		 push	 esi
  00115	6a 03		 push	 3
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0011c	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@GHCCAJOI@GashaponPresentListWnd?3?3OnRender@
  00121	ff d7		 call	 edi
  00123	8b c8		 mov	 ecx, eax
  00125	ff d3		 call	 ebx
  00127	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  0012f	50		 push	 eax
  00130	51		 push	 ecx
  00131	8d 45 a4	 lea	 eax, DWORD PTR _kPrinter$[ebp]
  00134	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00139	50		 push	 eax
  0013a	e8 00 00 00 00	 call	 ?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ ; ioComplexStringPrinter::AddTextPiece
  0013f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 217  : 
; 218  : 	kPrinter[1].SetTextStyle( TS_NORMAL);

  00142	56		 push	 esi
  00143	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp+32]
  00146	e8 00 00 00 00	 call	 ?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z ; ioComplexStringPrinter::SetTextStyle

; 219  : 	kPrinter[1].SetBkColor( 0, 0, 0 );	

  0014b	56		 push	 esi
  0014c	56		 push	 esi
  0014d	56		 push	 esi
  0014e	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp+32]
  00151	e8 00 00 00 00	 call	 ?SetBkColor@ioComplexStringPrinter@@QAEXHHH@Z ; ioComplexStringPrinter::SetBkColor

; 220  : 	kPrinter[1].SetTextColor( TCT_DEFAULT_DARKGRAY ); 

  00156	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  0015b	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp+32]
  0015e	e8 00 00 00 00	 call	 ?SetTextColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetTextColor

; 221  : 	kPrinter[1].AddTextPiece( FONT_SIZE_13, STR(4) );

  00163	56		 push	 esi
  00164	6a 04		 push	 4
  00166	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0016b	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@GHCCAJOI@GashaponPresentListWnd?3?3OnRender@
  00170	ff d7		 call	 edi
  00172	8b c8		 mov	 ecx, eax
  00174	ff d3		 call	 ebx
  00176	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  0017e	50		 push	 eax
  0017f	51		 push	 ecx
  00180	8d 45 c4	 lea	 eax, DWORD PTR _kPrinter$[ebp+32]
  00183	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00188	50		 push	 eax
  00189	e8 00 00 00 00	 call	 ?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ ; ioComplexStringPrinter::AddTextPiece
  0018e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 222  : 
; 223  : 	kPrinter[1].SetTextStyle( TS_NORMAL);

  00191	56		 push	 esi
  00192	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp+32]
  00195	e8 00 00 00 00	 call	 ?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z ; ioComplexStringPrinter::SetTextStyle

; 224  : 	kPrinter[1].SetBkColor( 0, 0, 0 );	

  0019a	56		 push	 esi
  0019b	56		 push	 esi
  0019c	56		 push	 esi
  0019d	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp+32]
  001a0	e8 00 00 00 00	 call	 ?SetBkColor@ioComplexStringPrinter@@QAEXHHH@Z ; ioComplexStringPrinter::SetBkColor

; 225  : 	kPrinter[1].SetTextColor( TCT_DEFAULT_RED ); 

  001a5	68 00 16 b9 ff	 push	 -4647424		; ffb91600H
  001aa	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp+32]
  001ad	e8 00 00 00 00	 call	 ?SetTextColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetTextColor

; 226  : 	kPrinter[1].AddTextPiece( FONT_SIZE_13, STR(5) );

  001b2	56		 push	 esi
  001b3	6a 05		 push	 5
  001b5	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  001ba	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@GHCCAJOI@GashaponPresentListWnd?3?3OnRender@
  001bf	ff d7		 call	 edi
  001c1	8b c8		 mov	 ecx, eax
  001c3	ff d3		 call	 ebx
  001c5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  001cd	50		 push	 eax
  001ce	51		 push	 ecx
  001cf	8d 45 c4	 lea	 eax, DWORD PTR _kPrinter$[ebp+32]
  001d2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d7	50		 push	 eax
  001d8	e8 00 00 00 00	 call	 ?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ ; ioComplexStringPrinter::AddTextPiece
  001dd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 227  : 
; 228  : 	kPrinter[1].SetTextStyle( TS_NORMAL);

  001e0	56		 push	 esi
  001e1	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp+32]
  001e4	e8 00 00 00 00	 call	 ?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z ; ioComplexStringPrinter::SetTextStyle

; 229  : 	kPrinter[1].SetBkColor( 0, 0, 0 );	

  001e9	56		 push	 esi
  001ea	56		 push	 esi
  001eb	56		 push	 esi
  001ec	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp+32]
  001ef	e8 00 00 00 00	 call	 ?SetBkColor@ioComplexStringPrinter@@QAEXHHH@Z ; ioComplexStringPrinter::SetBkColor

; 230  : 	kPrinter[1].SetTextColor( TCT_DEFAULT_DARKGRAY ); 

  001f4	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  001f9	8d 4d c4	 lea	 ecx, DWORD PTR _kPrinter$[ebp+32]
  001fc	e8 00 00 00 00	 call	 ?SetTextColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetTextColor

; 231  : 	kPrinter[1].AddTextPiece( FONT_SIZE_13, STR(6) );

  00201	56		 push	 esi
  00202	6a 06		 push	 6
  00204	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00209	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@GHCCAJOI@GashaponPresentListWnd?3?3OnRender@
  0020e	ff d7		 call	 edi
  00210	8b c8		 mov	 ecx, eax
  00212	ff d3		 call	 ebx
  00214	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  0021c	50		 push	 eax
  0021d	51		 push	 ecx
  0021e	8d 45 c4	 lea	 eax, DWORD PTR _kPrinter$[ebp+32]
  00221	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00226	50		 push	 eax
  00227	e8 00 00 00 00	 call	 ?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ ; ioComplexStringPrinter::AddTextPiece
  0022c	8b 45 e8	 mov	 eax, DWORD PTR _iXPos$[ebp]
  0022f	8b 7d ec	 mov	 edi, DWORD PTR _iYPos$[ebp]
  00232	05 ee 00 00 00	 add	 eax, 238		; 000000eeH

; 244  : }

  00237	0f 57 c0	 xorps	 xmm0, xmm0
  0023a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0023d	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00241	f3 0f 11 45 e8	 movss	 DWORD PTR tv326[ebp], xmm0
  00246	8d 5d a4	 lea	 ebx, DWORD PTR _kPrinter$[ebp]
  00249	81 c7 d6 01 00
	00		 add	 edi, 470		; 000001d6H
  0024f	c7 45 f0 02 00
	00 00		 mov	 DWORD PTR tv206[ebp], 2
$LN3@OnRender:

; 232  : 
; 233  : 
; 234  : 	for (int i = 0; i < MAX_TEXT ; i++)
; 235  : 	{	
; 236  : 		kPrinter[i].PrintFullText( iXPos + DESC_X, iYPos + DESC_Y + ( i*LINE_GAP), TAT_CENTER );

  00256	68 ff 00 00 00	 push	 255			; 000000ffH
  0025b	6a 01		 push	 1
  0025d	51		 push	 ecx
  0025e	51		 push	 ecx
  0025f	0f 57 c0	 xorps	 xmm0, xmm0
  00262	f3 0f 2a c7	 cvtsi2ss xmm0, edi
  00266	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0026c	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR tv326[ebp]
  00271	8b cb		 mov	 ecx, ebx
  00273	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00278	e8 00 00 00 00	 call	 ?PrintFullText@ioComplexStringPrinter@@QAEXMMW4TextAlignType@@E@Z ; ioComplexStringPrinter::PrintFullText
  0027d	83 c7 14	 add	 edi, 20			; 00000014H
  00280	83 c3 20	 add	 ebx, 32			; 00000020H
  00283	ff 4d f0	 dec	 DWORD PTR tv206[ebp]
  00286	75 ce		 jne	 SHORT $LN3@OnRender

; 237  : 	}
; 238  : 
; 239  : 	g_FontMgr.SetTextStyle( TS_NORMAL );

  00288	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetSingleton@ioFontManager@@SAAAV1@XZ
  0028e	56		 push	 esi
  0028f	ff d7		 call	 edi
  00291	8b c8		 mov	 ecx, eax
  00293	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z

; 240  : 	g_FontMgr.SetBkColor( 0, 0, 0 );

  00299	56		 push	 esi
  0029a	56		 push	 esi
  0029b	56		 push	 esi
  0029c	ff d7		 call	 edi
  0029e	8b c8		 mov	 ecx, eax
  002a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetBkColor@ioFontManager@@QAEXHHH@Z

; 241  : 	g_FontMgr.SetAlignType( TAT_CENTER );

  002a6	6a 01		 push	 1
  002a8	ff d7		 call	 edi
  002aa	8b c8		 mov	 ecx, eax
  002ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 242  : 	g_FontMgr.SetTextColor( TCT_DEFAULT_DARKGRAY );

  002b2	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  002b7	ff d7		 call	 edi
  002b9	8b c8		 mov	 ecx, eax
  002bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 243  : 	g_FontMgr.PrintText( iXPos+PAGE_X, iYPos+PAGE_Y, FONT_SIZE_13, m_szPageText.c_str() );

  002c1	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  002c4	81 c1 68 01 00
	00		 add	 ecx, 360		; 00000168H
  002ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  002d0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  002d8	50		 push	 eax
  002d9	8b 45 ec	 mov	 eax, DWORD PTR _iYPos$[ebp]
  002dc	83 ec 0c	 sub	 esp, 12			; 0000000cH
  002df	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  002e5	05 a9 01 00 00	 add	 eax, 425		; 000001a9H
  002ea	0f 57 c0	 xorps	 xmm0, xmm0
  002ed	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  002f1	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  002f7	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR tv326[ebp]
  002fc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00301	ff d7		 call	 edi
  00303	50		 push	 eax
  00304	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ

; 244  : }

  0030a	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0030e	83 c4 14	 add	 esp, 20			; 00000014H
  00311	68 00 00 00 00	 push	 OFFSET ??1ioComplexStringPrinter@@QAE@XZ ; ioComplexStringPrinter::~ioComplexStringPrinter
  00316	6a 02		 push	 2
  00318	6a 20		 push	 32			; 00000020H
  0031a	8d 45 a4	 lea	 eax, DWORD PTR _kPrinter$[ebp]
  0031d	50		 push	 eax
  0031e	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00323	e8 00 00 00 00	 call	 __EH_epilog3
  00328	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnRender@GashaponPresentListWnd@@MAEXXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ??1ioComplexStringPrinter@@QAE@XZ ; ioComplexStringPrinter::~ioComplexStringPrinter
  00005	6a 02		 push	 2
  00007	6a 20		 push	 32			; 00000020H
  00009	8d 45 a4	 lea	 eax, DWORD PTR _kPrinter$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00012	c3		 ret	 0
__ehhandler$?OnRender@GashaponPresentListWnd@@MAEXXZ:
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnRender@GashaponPresentListWnd@@MAEXXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnRender@GashaponPresentListWnd@@MAEXXZ ENDP		; GashaponPresentListWnd::OnRender
PUBLIC	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 1c		 push	 28			; 0000001cH
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 880  : 		}

  0000b	c3		 ret	 0
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
_TEXT	ENDS
PUBLIC	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pos$[ebp]
  00006	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00009	03 01		 add	 eax, DWORD PTR [ecx]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	?GetSingleton@?$Singleton@VioEtcItemManager@@@@SAAAVioEtcItemManager@@XZ ; Singleton<ioEtcItemManager>::GetSingleton
EXTRN	?ms_Singleton@?$Singleton@VioEtcItemManager@@@@1PAVioEtcItemManager@@A:DWORD ; Singleton<ioEtcItemManager>::ms_Singleton
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
;	COMDAT ?GetSingleton@?$Singleton@VioEtcItemManager@@@@SAAAVioEtcItemManager@@XZ
_TEXT	SEGMENT
?GetSingleton@?$Singleton@VioEtcItemManager@@@@SAAAVioEtcItemManager@@XZ PROC ; Singleton<ioEtcItemManager>::GetSingleton, COMDAT

; 42   : 		assert( ms_Singleton );
; 43   : 		return (*ms_Singleton);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioEtcItemManager@@@@1PAVioEtcItemManager@@A ; Singleton<ioEtcItemManager>::ms_Singleton

; 44   : 	}

  00005	c3		 ret	 0
?GetSingleton@?$Singleton@VioEtcItemManager@@@@SAAAVioEtcItemManager@@XZ ENDP ; Singleton<ioEtcItemManager>::GetSingleton
_TEXT	ENDS
PUBLIC	?size@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QBEIXZ ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QBEIXZ PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 30		 push	 48			; 00000030H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 880  : 		}

  0000b	c3		 ret	 0
?size@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QBEIXZ ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEAAUGashaponPresentInfo@GashaponPresentListWnd@@I@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEAAUGashaponPresentInfo@GashaponPresentListWnd@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEAAUGashaponPresentInfo@GashaponPresentListWnd@@I@Z PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pos$[ebp]
  00006	6b c0 30	 imul	 eax, 48			; 00000030H
  00009	03 01		 add	 eax, DWORD PTR [ecx]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEAAUGashaponPresentInfo@GashaponPresentListWnd@@I@Z ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::operator[]
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Inside
; Function compile flags: /Ogsp
;	COMDAT ?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
_TEXT	ENDS
PUBLIC	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IBE_NPBUGashaponPresentInfo@GashaponPresentListWnd@@@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IBE_NPBUGashaponPresentInfo@GashaponPresentListWnd@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IBE_NPBUGashaponPresentInfo@GashaponPresentListWnd@@@Z PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside@2
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside@2
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside@2
$LN3@Inside@2:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside@2:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IBE_NPBUGashaponPresentInfo@GashaponPresentListWnd@@@Z ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IBEXPAUGashaponPresentInfo@GashaponPresentListWnd@@0@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IBEXPAUGashaponPresentInfo@GashaponPresentListWnd@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IBEXPAUGashaponPresentInfo@GashaponPresentListWnd@@0@Z PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IBEXPAUGashaponPresentInfo@GashaponPresentListWnd@@0@Z ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE@XZ ; std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::~_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::~_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::~_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAE@XZ ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::allocator<GashaponPresentListWnd::GashaponPresentInfo>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAE@XZ PROC ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::allocator<GashaponPresentListWnd::GashaponPresentInfo>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAE@XZ ENDP ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::allocator<GashaponPresentListWnd::GashaponPresentInfo>
_TEXT	ENDS
PUBLIC	?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 1c		 push	 28			; 0000001cH
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 778  : 		}

  0000b	c3		 ret	 0
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
  0000b	cc		 int	 3
?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	?capacity@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QBEIXZ ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QBEIXZ PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 30		 push	 48			; 00000030H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 778  : 		}

  0000b	c3		 ret	 0
?capacity@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QBEIXZ ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::capacity
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IBEXXZ ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Xlen
; Function compile flags: /Ogsp
;	COMDAT ?_Xlen@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IBEXXZ PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@2:
$LN3@Xlen@2:
  0000b	cc		 int	 3
?_Xlen@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IBEXXZ ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAE@ABV01@@Z ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::allocator<GashaponPresentListWnd::GashaponPresentInfo>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAE@ABV01@@Z PROC ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::allocator<GashaponPresentListWnd::GashaponPresentInfo>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::allocator<GashaponPresentListWnd::GashaponPresentInfo>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@I@Z ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@I@Z PROC ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@I@Z ENDP ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::deallocate
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 49 92 24 09	 mov	 eax, 153391689		; 09249249H

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QBEIXZ ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QBEIXZ PROC ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 55 55 55 05	 mov	 eax, 89478485		; 05555555H

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QBEIXZ ENDP ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::max_size
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QAE@PAUGashaponPresentInfo@GashaponPresentListWnd@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >::_Vector_const_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QAE@PAUGashaponPresentInfo@GashaponPresentListWnd@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QAE@PAUGashaponPresentInfo@GashaponPresentListWnd@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >::_Vector_const_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QAE@PAUGashaponPresentInfo@GashaponPresentListWnd@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >::_Vector_const_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat
; Function compile flags: /Ogsp
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >::_Compat
; Function compile flags: /Ogsp
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >::_Compat
_TEXT	ENDS
PUBLIC	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??$addressof@$$CBUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAPBUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z ; std::addressof<GashaponPresentListWnd::GashaponPresentInfo const >
; Function compile flags: /Ogsp
;	COMDAT ??$addressof@$$CBUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAPBUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAPBUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z PROC ; std::addressof<GashaponPresentListWnd::GashaponPresentInfo const >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@$$CBUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAPBUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z ENDP ; std::addressof<GashaponPresentListWnd::GashaponPresentInfo const >
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z
_TEXT	SEGMENT
$T508812 = -12						; size = 12
$T508817 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z PROC ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 49 92 24
	09		 cmp	 ecx, 153391689		; 09249249H
  00015	77 0e		 ja	 SHORT $LN1@Allocate
  00017	6b c9 1c	 imul	 ecx, 28			; 0000001cH
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T508817[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T508817[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T508812[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T508812[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T508812[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ENDP ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??$_Allocate@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@IPAU12@@Z ; std::_Allocate<GashaponPresentListWnd::GashaponPresentInfo>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@IPAU12@@Z
_TEXT	SEGMENT
$T508822 = -12						; size = 12
$T508826 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@IPAU12@@Z PROC ; std::_Allocate<GashaponPresentListWnd::GashaponPresentInfo>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate@2

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 55 55 55
	05		 cmp	 ecx, 89478485		; 05555555H
  00015	77 0e		 ja	 SHORT $LN1@Allocate@2
  00017	6b c9 30	 imul	 ecx, 48			; 00000030H
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T508826[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T508826[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T508822[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T508822[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T508822[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate@2:
??$_Allocate@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@IPAU12@@Z ENDP ; std::_Allocate<GashaponPresentListWnd::GashaponPresentInfo>
_TEXT	ENDS
PUBLIC	??$_Copy_impl@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<int *,int *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Copy_impl@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_impl@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Copy_impl<int *,int *>, COMDAT

; 2152 : 	{	// copy [_First, _Last) to [_Dest, ...), pointers to scalars

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2153 : 	ptrdiff_t _Count = _Last - _First;

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	57		 push	 edi

; 2154 : 	_CSTD memmove(&*_Dest, &*_First,
; 2155 : 		_Count * sizeof (*_First));

  0000b	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0000e	c1 fe 02	 sar	 esi, 2
  00011	c1 e6 02	 shl	 esi, 2
  00014	56		 push	 esi
  00015	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00018	57		 push	 edi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2156 : 	return (_Dest + _Count);

  00022	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 2157 : 	}

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Copy_impl@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_impl<int *,int *>
_TEXT	ENDS
PUBLIC	??$forward@AAUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAAAUGashaponPresentInfo@GashaponPresentListWnd@@AAU12@@Z ; std::forward<GashaponPresentListWnd::GashaponPresentInfo &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAAAUGashaponPresentInfo@GashaponPresentListWnd@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAAAUGashaponPresentInfo@GashaponPresentListWnd@@AAU12@@Z PROC ; std::forward<GashaponPresentListWnd::GashaponPresentInfo &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAAAUGashaponPresentInfo@GashaponPresentListWnd@@AAU12@@Z ENDP ; std::forward<GashaponPresentListWnd::GashaponPresentInfo &>
_TEXT	ENDS
PUBLIC	??$forward@ABUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAABUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z ; std::forward<GashaponPresentListWnd::GashaponPresentInfo const &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@ABUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAABUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAABUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z PROC ; std::forward<GashaponPresentListWnd::GashaponPresentInfo const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAABUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z ENDP ; std::forward<GashaponPresentListWnd::GashaponPresentInfo const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@UGashaponPresentInfo@GashaponPresentListWnd@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@0@Z ; std::_Ptr_cat<GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@UGashaponPresentInfo@GashaponPresentListWnd@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UGashaponPresentInfo@GashaponPresentListWnd@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@0@Z PROC ; std::_Ptr_cat<GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@UGashaponPresentInfo@GashaponPresentListWnd@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@0@Z ENDP ; std::_Ptr_cat<GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo>
_TEXT	ENDS
PUBLIC	??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z ; GashaponPresentListWnd::GashaponPresentInfo::GashaponPresentInfo
EXTRN	__imp_??0ioHashString@@QAE@ABV0@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z$1
__ehfuncinfo$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z PROC ; GashaponPresentListWnd::GashaponPresentInfo::GashaponPresentInfo, COMDAT
; _this$ = ecx
  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00011	8b 5d 08	 mov	 ebx, DWORD PTR ___that$[ebp]
  00014	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  0001a	53		 push	 ebx
  0001b	ff d6		 call	 esi
  0001d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00021	8d 43 10	 lea	 eax, DWORD PTR [ebx+16]
  00024	50		 push	 eax
  00025	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00028	ff d6		 call	 esi
  0002a	83 c3 20	 add	 ebx, 32			; 00000020H
  0002d	53		 push	 ebx
  0002e	8d 4f 20	 lea	 ecx, DWORD PTR [edi+32]
  00031	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00035	ff d6		 call	 esi
  00037	8b c7		 mov	 eax, edi
  00039	e8 00 00 00 00	 call	 __EH_epilog3
  0003e	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z$1:
  00009	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	83 c1 10	 add	 ecx, 16			; 00000010H
  0000f	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z:
  00015	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00019	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001c	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z ENDP ; GashaponPresentListWnd::GashaponPresentInfo::GashaponPresentInfo
PUBLIC	??4GashaponPresentInfo@GashaponPresentListWnd@@QAEAAU01@ABU01@@Z ; GashaponPresentListWnd::GashaponPresentInfo::operator=
EXTRN	__imp_??4ioHashString@@QAEAAV0@ABV0@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??4GashaponPresentInfo@GashaponPresentListWnd@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4GashaponPresentInfo@GashaponPresentListWnd@@QAEAAU01@ABU01@@Z PROC ; GashaponPresentListWnd::GashaponPresentInfo::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b 5d 08	 mov	 ebx, DWORD PTR ___that$[ebp]
  00007	56		 push	 esi
  00008	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
  0000e	57		 push	 edi
  0000f	53		 push	 ebx
  00010	8b f9		 mov	 edi, ecx
  00012	ff d6		 call	 esi
  00014	8d 43 10	 lea	 eax, DWORD PTR [ebx+16]
  00017	50		 push	 eax
  00018	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  0001b	ff d6		 call	 esi
  0001d	83 c3 20	 add	 ebx, 32			; 00000020H
  00020	53		 push	 ebx
  00021	8d 4f 20	 lea	 ecx, DWORD PTR [edi+32]
  00024	ff d6		 call	 esi
  00026	8b c7		 mov	 eax, edi
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??4GashaponPresentInfo@GashaponPresentListWnd@@QAEAAU01@ABU01@@Z ENDP ; GashaponPresentListWnd::GashaponPresentInfo::operator=
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@HH@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<int,int>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_copy@HH@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@HH@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<int,int>, COMDAT

; 399  : 	{	// copy [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 400  : 	_DEBUG_RANGE(_First, _Last);
; 401  : 	_DEBUG_POINTER(_Dest);
; 402  : 	size_t _Count = (size_t)(_Last - _First);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2

; 403  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 404  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 405  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninit_copy@HH@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<int,int>
_TEXT	ENDS
PUBLIC	??$move@AAUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YA$$QAUGashaponPresentInfo@GashaponPresentListWnd@@AAU12@@Z ; std::move<GashaponPresentListWnd::GashaponPresentInfo &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YA$$QAUGashaponPresentInfo@GashaponPresentListWnd@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YA$$QAUGashaponPresentInfo@GashaponPresentListWnd@@AAU12@@Z PROC ; std::move<GashaponPresentListWnd::GashaponPresentInfo &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YA$$QAUGashaponPresentInfo@GashaponPresentListWnd@@AAU12@@Z ENDP ; std::move<GashaponPresentListWnd::GashaponPresentInfo &>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ; std::_Val_type<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z PROC ; std::_Val_type<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ENDP ; std::_Val_type<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@@Z ; std::_Val_type<GashaponPresentListWnd::GashaponPresentInfo *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Val_type@PAUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@@Z PROC ; std::_Val_type<GashaponPresentListWnd::GashaponPresentInfo *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAUGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@@Z ENDP ; std::_Val_type<GashaponPresentListWnd::GashaponPresentInfo *>
_TEXT	ENDS
PUBLIC	??_GGashaponPresentInfo@GashaponPresentListWnd@@QAEPAXI@Z ; GashaponPresentListWnd::GashaponPresentInfo::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_GGashaponPresentInfo@GashaponPresentListWnd@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GGashaponPresentInfo@GashaponPresentListWnd@@QAEPAXI@Z PROC ; GashaponPresentListWnd::GashaponPresentInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@2
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@2:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GGashaponPresentInfo@GashaponPresentListWnd@@QAEPAXI@Z ENDP ; GashaponPresentListWnd::GashaponPresentInfo::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$forward@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@YA$$QAUGashaponPresentInfo@GashaponPresentListWnd@@AAU12@@Z ; std::forward<GashaponPresentListWnd::GashaponPresentInfo>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@YA$$QAUGashaponPresentInfo@GashaponPresentListWnd@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@YA$$QAUGashaponPresentInfo@GashaponPresentListWnd@@AAU12@@Z PROC ; std::forward<GashaponPresentListWnd::GashaponPresentInfo>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@YA$$QAUGashaponPresentInfo@GashaponPresentListWnd@@AAU12@@Z ENDP ; std::forward<GashaponPresentListWnd::GashaponPresentInfo>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\strsafe.h
_TEXT	ENDS
;	COMDAT ?StringValidateDestA@@YGJPBDII@Z
_TEXT	SEGMENT
_cchMax$ = 8						; size = 4
?StringValidateDestA@@YGJPBDII@Z PROC			; StringValidateDestA, COMDAT
; _cchDest$ = ecx

; 8721 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 8722 :     HRESULT hr = S_OK;

  00003	33 c0		 xor	 eax, eax

; 8723 : 
; 8724 :     if ((cchDest == 0) || (cchDest > cchMax))

  00005	85 c9		 test	 ecx, ecx
  00007	74 05		 je	 SHORT $LN1@StringVali
  00009	3b 4d 08	 cmp	 ecx, DWORD PTR _cchMax$[ebp]
  0000c	76 05		 jbe	 SHORT $LN2@StringVali
$LN1@StringVali:

; 8725 :     {
; 8726 :         hr = STRSAFE_E_INVALID_PARAMETER;

  0000e	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
$LN2@StringVali:

; 8727 :     }
; 8728 : 
; 8729 :     return hr;
; 8730 : }

  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?StringValidateDestA@@YGJPBDII@Z ENDP			; StringValidateDestA
_TEXT	ENDS
EXTRN	__imp___vsnprintf:PROC
; Function compile flags: /Ogsp
;	COMDAT ?StringVPrintfWorkerA@@YGJPADIPAIPBD0@Z
_TEXT	SEGMENT
_pcchNewDestLength$ = 8					; size = 4
_pszFormat$ = 12					; size = 4
_argList$ = 16						; size = 4
?StringVPrintfWorkerA@@YGJPADIPAIPBD0@Z PROC		; StringVPrintfWorkerA, COMDAT
; _pszDest$ = edi
; _cchDest$ = eax

; 9029 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 9030 :     HRESULT hr = S_OK;
; 9031 :     int iRet;
; 9032 :     size_t cchMax;
; 9033 :     size_t cchNewDestLength = 0;
; 9034 : 
; 9035 :     // leave the last space for the null terminator
; 9036 :     cchMax = cchDest - 1;
; 9037 : 
; 9038 : #if (STRSAFE_USE_SECURE_CRT == 1) && !defined(STRSAFE_LIB_IMPL)
; 9039 :     iRet = _vsnprintf_s(pszDest, cchDest, cchMax, pszFormat, argList);
; 9040 : #else
; 9041 :     #pragma warning(push)
; 9042 :     #pragma warning(disable: __WARNING_BANNED_API_USAGE)// "STRSAFE not included"
; 9043 :     iRet = _vsnprintf(pszDest, cchMax, pszFormat, argList);

  00005	ff 75 10	 push	 DWORD PTR _argList$[ebp]
  00008	8d 70 ff	 lea	 esi, DWORD PTR [eax-1]
  0000b	ff 75 0c	 push	 DWORD PTR _pszFormat$[ebp]
  0000e	33 db		 xor	 ebx, ebx
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___vsnprintf
  00018	83 c4 10	 add	 esp, 16			; 00000010H

; 9044 :     #pragma warning(pop)
; 9045 : #endif
; 9046 :     // ASSERT((iRet < 0) || (((size_t)iRet) <= cchMax));
; 9047 : 
; 9048 :     if ((iRet < 0) || (((size_t)iRet) > cchMax))

  0001b	85 c0		 test	 eax, eax
  0001d	78 0b		 js	 SHORT $LN5@StringVPri
  0001f	3b c6		 cmp	 eax, esi
  00021	77 07		 ja	 SHORT $LN5@StringVPri

; 9058 :     }
; 9059 :     else if (((size_t)iRet) == cchMax)

  00023	75 0f		 jne	 SHORT $LN2@StringVPri

; 9060 :     {
; 9061 :         // need to null terminate the string
; 9062 :         pszDest += cchMax;
; 9063 :         *pszDest = '\0';

  00025	88 1c 3e	 mov	 BYTE PTR [esi+edi], bl

; 9064 : 
; 9065 :         cchNewDestLength = cchMax;
; 9066 :     }
; 9067 :     else

  00028	eb 08		 jmp	 SHORT $LN9@StringVPri
$LN5@StringVPri:

; 9049 :     {
; 9050 :         // need to null terminate the string
; 9051 :         pszDest += cchMax;
; 9052 :         *pszDest = '\0';

  0002a	88 1c 3e	 mov	 BYTE PTR [esi+edi], bl

; 9055 : 
; 9056 :         // we have truncated pszDest
; 9057 :         hr = STRSAFE_E_INSUFFICIENT_BUFFER;

  0002d	bb 7a 00 07 80	 mov	 ebx, -2147024774	; 8007007aH
$LN9@StringVPri:

; 9053 : 
; 9054 :         cchNewDestLength = cchMax;

  00032	8b c6		 mov	 eax, esi
$LN2@StringVPri:

; 9068 :     {
; 9069 :         cchNewDestLength = (size_t)iRet;
; 9070 :     }
; 9071 : 
; 9072 :     if (pcchNewDestLength)

  00034	8b 4d 08	 mov	 ecx, DWORD PTR _pcchNewDestLength$[ebp]
  00037	85 c9		 test	 ecx, ecx
  00039	74 02		 je	 SHORT $LN1@StringVPri

; 9073 :     {
; 9074 :         *pcchNewDestLength = cchNewDestLength;

  0003b	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@StringVPri:
  0003d	5e		 pop	 esi

; 9075 :     }
; 9076 : 
; 9077 :     return hr;

  0003e	8b c3		 mov	 eax, ebx
  00040	5b		 pop	 ebx

; 9078 : }

  00041	5d		 pop	 ebp
  00042	c2 0c 00	 ret	 12			; 0000000cH
?StringVPrintfWorkerA@@YGJPADIPAIPBD0@Z ENDP		; StringVPrintfWorkerA
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
PUBLIC	?GetIconName@CostumeShopInfo@@QAEAAVioHashString@@XZ ; CostumeShopInfo::GetIconName
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iocostumeshopinfomanager.h
;	COMDAT ?GetIconName@CostumeShopInfo@@QAEAAVioHashString@@XZ
_TEXT	SEGMENT
?GetIconName@CostumeShopInfo@@QAEAAVioHashString@@XZ PROC ; CostumeShopInfo::GetIconName, COMDAT
; _this$ = ecx

; 64   : 	inline ioHashString &GetIconName() { return m_szIconName; }

  00000	8d 41 50	 lea	 eax, DWORD PTR [ecx+80]
  00003	c3		 ret	 0
?GetIconName@CostumeShopInfo@@QAEAAVioHashString@@XZ ENDP ; CostumeShopInfo::GetIconName
_TEXT	ENDS
PUBLIC	?GetItemLargeIconName@ioItem@@QBEABVioHashString@@XZ ; ioItem::GetItemLargeIconName
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioitem.h
;	COMDAT ?GetItemLargeIconName@ioItem@@QBEABVioHashString@@XZ
_TEXT	SEGMENT
?GetItemLargeIconName@ioItem@@QBEABVioHashString@@XZ PROC ; ioItem::GetItemLargeIconName, COMDAT
; _this$ = ecx

; 288  : 	inline const ioHashString& GetItemLargeIconName() const { return m_ItemLargeIconFile; }

  00000	8d 81 14 02 00
	00		 lea	 eax, DWORD PTR [ecx+532]
  00006	c3		 ret	 0
?GetItemLargeIconName@ioItem@@QBEABVioHashString@@XZ ENDP ; ioItem::GetItemLargeIconName
_TEXT	ENDS
PUBLIC	?GetIconName@ioEtcItem@@QBEABVioHashString@@XZ	; ioEtcItem::GetIconName
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioetcitem.h
;	COMDAT ?GetIconName@ioEtcItem@@QBEABVioHashString@@XZ
_TEXT	SEGMENT
?GetIconName@ioEtcItem@@QBEABVioHashString@@XZ PROC	; ioEtcItem::GetIconName, COMDAT
; _this$ = ecx

; 467  : 	inline const ioHashString& GetIconName() const { return m_IconName; }

  00000	8d 81 60 01 00
	00		 lea	 eax, DWORD PTR [ecx+352]
  00006	c3		 ret	 0
?GetIconName@ioEtcItem@@QBEABVioHashString@@XZ ENDP	; ioEtcItem::GetIconName
_TEXT	ENDS
PUBLIC	?GetIconName@RandomMachineInfo@@QBEABVioHashString@@XZ ; RandomMachineInfo::GetIconName
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioextraiteminfomanager.h
;	COMDAT ?GetIconName@RandomMachineInfo@@QBEABVioHashString@@XZ
_TEXT	SEGMENT
?GetIconName@RandomMachineInfo@@QBEABVioHashString@@XZ PROC ; RandomMachineInfo::GetIconName, COMDAT
; _this$ = ecx

; 117  : 	inline const ioHashString& GetIconName() const { return m_IconName; }

  00000	8d 41 18	 lea	 eax, DWORD PTR [ecx+24]
  00003	c3		 ret	 0
?GetIconName@RandomMachineInfo@@QBEABVioHashString@@XZ ENDP ; RandomMachineInfo::GetIconName
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1512 : 		return (this->_Mysize);

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 1513 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC	; std::vector<int,std::allocator<int> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP	; std::vector<int,std::allocator<int> >::size
_TEXT	ENDS
PUBLIC	?empty@?$vector@HV?$allocator@H@std@@@std@@QBE_NXZ ; std::vector<int,std::allocator<int> >::empty
; Function compile flags: /Ogsp
;	COMDAT ?empty@?$vector@HV?$allocator@H@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@HV?$allocator@H@std@@@std@@QBE_NXZ PROC	; std::vector<int,std::allocator<int> >::empty, COMDAT
; _this$ = ecx

; 889  : 		return (this->_Myfirst == this->_Mylast);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00005	f7 d8		 neg	 eax
  00007	1b c0		 sbb	 eax, eax
  00009	40		 inc	 eax

; 890  : 		}

  0000a	c3		 ret	 0
?empty@?$vector@HV?$allocator@H@std@@@std@@QBE_NXZ ENDP	; std::vector<int,std::allocator<int> >::empty
_TEXT	ENDS
PUBLIC	??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ; std::vector<int,std::allocator<int> >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z PROC	; std::vector<int,std::allocator<int> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00008	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ENDP	; std::vector<int,std::allocator<int> >::operator[]
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2010 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2011 : 			: this->_Bx._Buf);

  00000	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  00004	72 03		 jb	 SHORT $LN3@Myptr
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]

; 2012 : 		}

  00008	c3		 ret	 0
$LN3@Myptr:

; 2010 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2011 : 			: this->_Bx._Buf);

  00009	8b c1		 mov	 eax, ecx

; 2012 : 		}

  0000b	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 459  : 		}

  00000	c3		 ret	 0
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogsp
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??0?$allocator@H@std@@QAE@XZ			; std::allocator<int>::allocator<int>
; Function compile flags: /Ogsp
;	COMDAT ??0?$allocator@H@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@H@std@@QAE@XZ PROC			; std::allocator<int>::allocator<int>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@H@std@@QAE@XZ ENDP			; std::allocator<int>::allocator<int>
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ ; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >::_Vector_iterator<std::_Vector_val<int,std::allocator<int> > >
_TEXT	ENDS
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator, COMDAT
; _this$ = ecx

; 1906 : 		{	// return allocator object for values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1907 : 		return (this->_Alval);

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1908 : 		}

  00006	5d		 pop	 ebp
  00007	c2 04 00	 ret	 4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogsp
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2004 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2005 : 			: this->_Bx._Buf);

  00000	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  00004	72 03		 jb	 SHORT $LN3@Myptr@2
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]

; 2006 : 		}

  00008	c3		 ret	 0
$LN3@Myptr@2:

; 2004 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2005 : 			: this->_Bx._Buf);

  00009	8b c1		 mov	 eax, ecx

; 2006 : 		}

  0000b	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2016 : 		_Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@3:
$LN3@Xlen@3:
  0000b	cc		 int	 3
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2021 : 		_Xout_of_range("invalid string position");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN4@Xran:
$LN3@Xran:
  0000b	cc		 int	 3
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	??0?$allocator@H@std@@QAE@ABV01@@Z		; std::allocator<int>::allocator<int>
; Function compile flags: /Ogsp
;	COMDAT ??0?$allocator@H@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@H@std@@QAE@ABV01@@Z PROC			; std::allocator<int>::allocator<int>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@H@std@@QAE@ABV01@@Z ENDP			; std::allocator<int>::allocator<int>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@H@std@@QAEXPAHI@Z	; std::allocator<int>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@H@std@@QAEXPAHI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@H@std@@QAEXPAHI@Z PROC		; std::allocator<int>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@H@std@@QAEXPAHI@Z ENDP		; std::allocator<int>::deallocate
_TEXT	ENDS
PUBLIC	?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC ; std::vector<int,std::allocator<int> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 778  : 		}

  00008	c3		 ret	 0
?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP ; std::vector<int,std::allocator<int> >::capacity
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@@Z ; std::vector<int,std::allocator<int> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@@Z PROC ; std::vector<int,std::allocator<int> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@@Z ENDP ; std::vector<int,std::allocator<int> >::_Make_iter
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ ; std::vector<int,std::allocator<int> >::_Xlen
; Function compile flags: /Ogsp
;	COMDAT ?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ PROC	; std::vector<int,std::allocator<int> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@4:
$LN3@Xlen@4:
  0000b	cc		 int	 3
?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ ENDP	; std::vector<int,std::allocator<int> >::_Xlen
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1973 : 		{	// test if _Ptr points inside string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1974 : 		if (_Ptr == 0 || _Ptr < _Myptr() || _Myptr() + this->_Mysize <= _Ptr)

  00003	83 7d 08 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00007	74 2c		 je	 SHORT $LN2@Inside@3
  00009	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0000c	83 fa 10	 cmp	 edx, 16			; 00000010H
  0000f	72 04		 jb	 SHORT $LN8@Inside@3
  00011	8b 01		 mov	 eax, DWORD PTR [ecx]
  00013	eb 02		 jmp	 SHORT $LN9@Inside@3
$LN8@Inside@3:
  00015	8b c1		 mov	 eax, ecx
$LN9@Inside@3:
  00017	39 45 08	 cmp	 DWORD PTR __Ptr$[ebp], eax
  0001a	72 19		 jb	 SHORT $LN2@Inside@3
  0001c	83 fa 10	 cmp	 edx, 16			; 00000010H
  0001f	72 04		 jb	 SHORT $LN12@Inside@3
  00021	8b 01		 mov	 eax, DWORD PTR [ecx]
  00023	eb 02		 jmp	 SHORT $LN13@Inside@3
$LN12@Inside@3:
  00025	8b c1		 mov	 eax, ecx
$LN13@Inside@3:
  00027	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  0002a	03 c8		 add	 ecx, eax
  0002c	3b 4d 08	 cmp	 ecx, DWORD PTR __Ptr$[ebp]
  0002f	76 04		 jbe	 SHORT $LN2@Inside@3

; 1976 : 		else
; 1977 : 			return (true);

  00031	b0 01		 mov	 al, 1
  00033	eb 02		 jmp	 SHORT $LN1@Inside@3
$LN2@Inside@3:

; 1975 : 			return (false);	// don't ask

  00035	32 c0		 xor	 al, al
$LN1@Inside@3:

; 1978 : 		}

  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@H@std@@QBEIXZ		; std::allocator<int>::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@H@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@H@std@@QBEIXZ PROC		; std::allocator<int>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@H@std@@QBEIXZ ENDP		; std::allocator<int>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 220  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Compat
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::_Compat
_TEXT	ENDS
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogsp
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??$_Allocate@H@std@@YAPAHIPAH@Z			; std::_Allocate<int>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Allocate@H@std@@YAPAHIPAH@Z
_TEXT	SEGMENT
$T509022 = -12						; size = 12
$T509026 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@H@std@@YAPAHIPAH@Z PROC			; std::_Allocate<int>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3e		 je	 SHORT $LN5@Allocate@3

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate@3
  00017	8b c1		 mov	 eax, ecx
  00019	c1 e0 02	 shl	 eax, 2
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	59		 pop	 ecx
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 26		 jne	 SHORT $LN5@Allocate@3
$LN1@Allocate@3:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	83 65 08 00	 and	 DWORD PTR $T509026[ebp], 0
  0002b	8d 45 08	 lea	 eax, DWORD PTR $T509026[ebp]
  0002e	50		 push	 eax
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T509022[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003d	8d 45 f4	 lea	 eax, DWORD PTR $T509022[ebp]
  00040	50		 push	 eax
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T509022[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@3:
$LN5@Allocate@3:

; 40   : 	}

  0004d	c9		 leave
  0004e	c3		 ret	 0
$LN9@Allocate@3:
??$_Allocate@H@std@@YAPAHIPAH@Z ENDP			; std::_Allocate<int>
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
$T509031 = -12						; size = 12
$T509035 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;

  00003	33 c0		 xor	 eax, eax
  00005	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 32   : 
; 33   : 	if (_Count <= 0)

  00008	39 45 08	 cmp	 DWORD PTR __Count$[ebp], eax

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000b	76 39		 jbe	 SHORT $LN5@Allocate@4

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000d	83 7d 08 ff	 cmp	 DWORD PTR __Count$[ebp], -1
  00011	77 0d		 ja	 SHORT $LN1@Allocate@4
  00013	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00016	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001b	59		 pop	 ecx
  0001c	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  0001e	75 26		 jne	 SHORT $LN5@Allocate@4
$LN1@Allocate@4:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00020	83 65 08 00	 and	 DWORD PTR $T509035[ebp], 0
  00024	8d 45 08	 lea	 eax, DWORD PTR $T509035[ebp]
  00027	50		 push	 eax
  00028	8d 4d f4	 lea	 ecx, DWORD PTR $T509031[ebp]
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00031	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00036	8d 45 f4	 lea	 eax, DWORD PTR $T509031[ebp]
  00039	50		 push	 eax
  0003a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T509031[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00041	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@4:
$LN5@Allocate@4:

; 40   : 	}

  00046	c9		 leave
  00047	c3		 ret	 0
$LN9@Allocate@4:
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z ; std::_Ptr_cat<int,int>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z PROC ; std::_Ptr_cat<int,int>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z ENDP ; std::_Ptr_cat<int,int>
_TEXT	ENDS
PUBLIC	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator==<char,char>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator==<char,char>, COMDAT

; 263  : 	return (true);

  00000	b0 01		 mov	 al, 1

; 264  : 	}

  00002	c3		 ret	 0
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator==<char,char>
_TEXT	ENDS
PUBLIC	??$_Move@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<int *,int *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<int *,int *>, COMDAT

; 2522 : 	{	// move [_First, _Last) to [_Dest, ...), pointers to scalars

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2523 : 	ptrdiff_t _Count = _Last - _First;

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	57		 push	 edi

; 2524 : 	_CSTD memmove(&*_Dest, &*_First,
; 2525 : 		_Count * sizeof (*_First));

  0000b	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0000e	c1 fe 02	 sar	 esi, 2
  00011	c1 e6 02	 shl	 esi, 2
  00014	56		 push	 esi
  00015	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00018	57		 push	 edi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2526 : 	return (_Dest + _Count);

  00022	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 2527 : 	}

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Move@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<int *,int *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 105  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	?SetMaxPage@GashaponPresentListWnd@@IAEXXZ	; GashaponPresentListWnd::SetMaxPage
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\gashaponpresentlistwnd.cpp
;	COMDAT ?SetMaxPage@GashaponPresentListWnd@@IAEXXZ
_TEXT	SEGMENT
?SetMaxPage@GashaponPresentListWnd@@IAEXXZ PROC		; GashaponPresentListWnd::SetMaxPage, COMDAT
; _this$ = ecx

; 287  : 	int iTotalCnt = m_vGashponPresentInfoVec.size();

  00000	8b 81 7c 01 00
	00		 mov	 eax, DWORD PTR [ecx+380]
  00006	2b 81 78 01 00
	00		 sub	 eax, DWORD PTR [ecx+376]
  0000c	56		 push	 esi
  0000d	6a 30		 push	 48			; 00000030H
  0000f	99		 cdq
  00010	5e		 pop	 esi
  00011	f7 fe		 idiv	 esi

; 288  : 	m_iMaxPage = iTotalCnt / ICON_BTN_MAX;

  00013	6a 0c		 push	 12			; 0000000cH
  00015	5e		 pop	 esi
  00016	99		 cdq
  00017	f7 fe		 idiv	 esi
  00019	5e		 pop	 esi
  0001a	89 81 60 01 00
	00		 mov	 DWORD PTR [ecx+352], eax

; 289  : 
; 290  : 	if( iTotalCnt%ICON_BTN_MAX > 0 )

  00020	85 d2		 test	 edx, edx
  00022	7e 07		 jle	 SHORT $LN1@SetMaxPage

; 291  : 		m_iMaxPage += 1;

  00024	40		 inc	 eax
  00025	89 81 60 01 00
	00		 mov	 DWORD PTR [ecx+352], eax
$LN1@SetMaxPage:

; 292  : }

  0002b	c3		 ret	 0
?SetMaxPage@GashaponPresentListWnd@@IAEXXZ ENDP		; GashaponPresentListWnd::SetMaxPage
_TEXT	ENDS
PUBLIC	??_C@_0BD@HEINEDGN@UIIconPack101?$CDCash?$AA@	; `string'
PUBLIC	??_C@_0BH@FLBLIBDA@UIIconPack13?$CDquest_001?$AA@ ; `string'
PUBLIC	??_C@_0CL@NJAHFMPK@GashaponPresentListWnd?3?3GetPrese@ ; `string'
PUBLIC	??_C@_0BH@HADGNCPD@UIIconPack13?$CDquest_002?$AA@ ; `string'
PUBLIC	__real@4f800000
PUBLIC	?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z ; GashaponPresentListWnd::GetPresentIconName
EXTRN	?GetCostumeMachineInfo@ioCostumeShopInfoManager@@QAEPAVCostumeShopInfo@@H@Z:PROC ; ioCostumeShopInfoManager::GetCostumeMachineInfo
EXTRN	?GetSingleton@ioCostumeShopInfoManager@@SAAAV1@XZ:PROC ; ioCostumeShopInfoManager::GetSingleton
EXTRN	?GetCostumeIcon@ioCostumeInfoManager@@QAE?AVioHashString@@H@Z:PROC ; ioCostumeInfoManager::GetCostumeIcon
EXTRN	?GetSingleton@ioCostumeInfoManager@@SAAAV1@XZ:PROC ; ioCostumeInfoManager::GetSingleton
EXTRN	?GetItemInfo@ioMedalItemInfoManager@@QAEPBUItemInfo@1@H@Z:PROC ; ioMedalItemInfoManager::GetItemInfo
EXTRN	?GetSingleton@ioMedalItemInfoManager@@SAAAV1@XZ:PROC ; ioMedalItemInfoManager::GetSingleton
EXTRN	?GetRandomMachineInfo@ioExtraItemInfoManager@@QAEPAVRandomMachineInfo@@H@Z:PROC ; ioExtraItemInfoManager::GetRandomMachineInfo
EXTRN	?GetSingleton@ioExtraItemInfoManager@@SAAAV1@XZ:PROC ; ioExtraItemInfoManager::GetSingleton
EXTRN	?GetItemConst@ioItemMaker@@QBEPBVioItem@@KABVioHashString@@@Z:PROC ; ioItemMaker::GetItemConst
EXTRN	?GetSingleton@ioItemMaker@@SAAAV1@XZ:PROC	; ioItemMaker::GetSingleton
EXTRN	__imp_??0ioHashString@@QAE@PBD@Z:PROC
EXTRN	?FindEtcItem@ioEtcItemManager@@QAEPAVioEtcItem@@K@Z:PROC ; ioEtcItemManager::FindEtcItem
EXTRN	?GetDecoData@ioDecorationPrice@@QAEABUtagDecoData@@HHH@Z:PROC ; ioDecorationPrice::GetDecoData
EXTRN	?GetSingleton@ioDecorationPrice@@SAAAV1@XZ:PROC	; ioDecorationPrice::GetSingleton
EXTRN	?GetMySoldierIconName@ioMyInfo@@QAEAAVioHashString@@H@Z:PROC ; ioMyInfo::GetMySoldierIconName
EXTRN	?GetSingleton@ioMyInfo@@SAAAV1@XZ:PROC		; ioMyInfo::GetSingleton
EXTRN	__imp_?Clear@ioHashString@@QAEXXZ:PROC
EXTRN	__ftol2_sse:PROC
;	COMDAT ??_C@_0BD@HEINEDGN@UIIconPack101?$CDCash?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iocostumeshopinfomanager.h
CONST	SEGMENT
??_C@_0BD@HEINEDGN@UIIconPack101?$CDCash?$AA@ DB 'UIIconPack101#Cash', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FLBLIBDA@UIIconPack13?$CDquest_001?$AA@
CONST	SEGMENT
??_C@_0BH@FLBLIBDA@UIIconPack13?$CDquest_001?$AA@ DB 'UIIconPack13#quest_'
	DB	'001', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@NJAHFMPK@GashaponPresentListWnd?3?3GetPrese@
CONST	SEGMENT
??_C@_0CL@NJAHFMPK@GashaponPresentListWnd?3?3GetPrese@ DB 'GashaponPresen'
	DB	'tListWnd::GetPresentIconName', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HADGNCPD@UIIconPack13?$CDquest_002?$AA@
CONST	SEGMENT
??_C@_0BH@HADGNCPD@UIIconPack13?$CDquest_002?$AA@ DB 'UIIconPack13#quest_'
	DB	'002', 00H					; `string'
CONST	ENDS
;	COMDAT __real@4f800000
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z$4
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\gashaponpresentlistwnd.cpp
xdata$x	ENDS
;	COMDAT ?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z
_TEXT	SEGMENT
$T509073 = -92						; size = 16
$T509072 = -76						; size = 16
$T509071 = -60						; size = 16
$T509069 = -44						; size = 16
$T509070 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_rszIconName$ = 8					; size = 4
_iPresentType$ = 12					; size = 4
tv310 = 16						; size = 4
tv307 = 16						; size = 4
tv281 = 16						; size = 4
tv278 = 16						; size = 4
_iPresentValue1$ = 16					; size = 4
_iPresentValue2$ = 20					; size = 4
?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z PROC ; GashaponPresentListWnd::GetPresentIconName, COMDAT
; _this$ = ecx

; 295  : {

  00000	6a 50		 push	 80			; 00000050H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 296  : 	rszIconName.Clear();

  0000c	8b 75 08	 mov	 esi, DWORD PTR _rszIconName$[ebp]
  0000f	8b ce		 mov	 ecx, esi
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Clear@ioHashString@@QAEXXZ

; 297  : 
; 298  : 	switch( iPresentType )

  00017	8b 45 0c	 mov	 eax, DWORD PTR _iPresentType$[ebp]
  0001a	48		 dec	 eax
  0001b	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  0001e	0f 87 01 02 00
	00		 ja	 $LN18@GetPresent
  00024	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN49@GetPresent[eax*4]
$LN17@GetPresent:

; 299  : 	{
; 300  : 	case PRESENT_SOLDIER:
; 301  : 		{
; 302  : 			rszIconName = g_MyInfo.GetMySoldierIconName( iPresentValue1 );

  0002b	ff 75 10	 push	 DWORD PTR _iPresentValue1$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00033	8b c8		 mov	 ecx, eax
  00035	e8 00 00 00 00	 call	 ?GetMySoldierIconName@ioMyInfo@@QAEAAVioHashString@@H@Z ; ioMyInfo::GetMySoldierIconName
$LN45@GetPresent:
  0003a	50		 push	 eax
$LN46@GetPresent:
  0003b	8b ce		 mov	 ecx, esi
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z

; 303  : 		}
; 304  : 		break;

  00043	e9 dd 01 00 00	 jmp	 $LN18@GetPresent
$LN16@GetPresent:

; 305  : 	case PRESENT_DECORATION:
; 306  : 		{
; 307  : 			int iClassType = iPresentValue1 / 100000;
; 308  : 			int iSexType   = (iPresentValue1 % 100000) / FLOAT1000;

  00048	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  0004d	8b c8		 mov	 ecx, eax

; 309  : 			int iDecoType  = iPresentValue1 % 1000;

  0004f	8b 45 10	 mov	 eax, DWORD PTR _iPresentValue1$[ebp]
  00052	99		 cdq
  00053	bf e8 03 00 00	 mov	 edi, 1000		; 000003e8H
  00058	f7 ff		 idiv	 edi

; 310  : 			const DecoData &kData = g_DecorationPrice.GetDecoData( iSexType, iDecoType, iPresentValue2 );

  0005a	ff 75 14	 push	 DWORD PTR _iPresentValue2$[ebp]
  0005d	8b 45 10	 mov	 eax, DWORD PTR _iPresentValue1$[ebp]
  00060	bf a0 86 01 00	 mov	 edi, 100000		; 000186a0H
  00065	52		 push	 edx
  00066	99		 cdq
  00067	f7 ff		 idiv	 edi
  00069	89 55 10	 mov	 DWORD PTR tv310[ebp], edx
  0006c	db 45 10	 fild	 DWORD PTR tv310[ebp]
  0006f	89 4d 10	 mov	 DWORD PTR tv307[ebp], ecx
  00072	db 45 10	 fild	 DWORD PTR tv307[ebp]
$LN48@GetPresent:
  00075	85 c9		 test	 ecx, ecx
  00077	79 06		 jns	 SHORT $LN42@GetPresent
  00079	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN42@GetPresent:

; 305  : 	case PRESENT_DECORATION:
; 306  : 		{
; 307  : 			int iClassType = iPresentValue1 / 100000;
; 308  : 			int iSexType   = (iPresentValue1 % 100000) / FLOAT1000;

  0007f	de f9		 fdivp	 ST(1), ST(0)

; 310  : 			const DecoData &kData = g_DecorationPrice.GetDecoData( iSexType, iDecoType, iPresentValue2 );

  00081	e8 00 00 00 00	 call	 __ftol2_sse
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?GetSingleton@ioDecorationPrice@@SAAAV1@XZ ; ioDecorationPrice::GetSingleton
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ?GetDecoData@ioDecorationPrice@@QAEABUtagDecoData@@HHH@Z ; ioDecorationPrice::GetDecoData

; 311  : 			rszIconName = kData.m_szIcon;

  00093	83 c0 10	 add	 eax, 16			; 00000010H

; 312  : 		}
; 313  : 		break;

  00096	eb a2		 jmp	 SHORT $LN45@GetPresent
$LN15@GetPresent:

; 314  : 	case PRESENT_ETC_ITEM:
; 315  : 		{
; 316  : 			ioEtcItem *pEtcItem = g_EtcItemMgr.FindEtcItem( iPresentValue1 );

  00098	ff 75 10	 push	 DWORD PTR _iPresentValue1$[ebp]
  0009b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_Singleton@?$Singleton@VioEtcItemManager@@@@1PAVioEtcItemManager@@A ; Singleton<ioEtcItemManager>::ms_Singleton
  000a1	e8 00 00 00 00	 call	 ?FindEtcItem@ioEtcItemManager@@QAEPAVioEtcItem@@K@Z ; ioEtcItemManager::FindEtcItem

; 317  : 			if( pEtcItem )

  000a6	85 c0		 test	 eax, eax
  000a8	0f 84 77 01 00
	00		 je	 $LN18@GetPresent

; 318  : 			{
; 319  : 				rszIconName = pEtcItem->GetIconName();

  000ae	05 60 01 00 00	 add	 eax, 352		; 00000160H

; 320  : 			}			
; 321  : 		}
; 322  : 		break;

  000b3	eb 85		 jmp	 SHORT $LN45@GetPresent
$LN13@GetPresent:

; 323  : 	case PRESENT_PESO:
; 324  : 		{
; 325  : 			rszIconName = ioHashString( "UIIconPack13#quest_002" );

  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@HADGNCPD@UIIconPack13?$CDquest_002?$AA@
  000ba	8d 4d d4	 lea	 ecx, DWORD PTR $T509069[ebp]
  000bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  000c3	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  000c7	50		 push	 eax
  000c8	8b ce		 mov	 ecx, esi
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
  000d0	8d 4d d4	 lea	 ecx, DWORD PTR $T509069[ebp]

; 326  : 		}
; 327  : 		break;

  000d3	e9 43 01 00 00	 jmp	 $LN44@GetPresent
$LN12@GetPresent:

; 328  : 	case PRESENT_EXTRAITEM:
; 329  : 	case PRESENT_ACCESSORY:
; 330  : 		{
; 331  : 			const ioItem *pItem = g_ItemMaker.GetItemConst( iPresentValue1, __FUNCTION__ );

  000d8	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@NJAHFMPK@GashaponPresentListWnd?3?3GetPrese@
  000dd	8d 4d e4	 lea	 ecx, DWORD PTR $T509070[ebp]
  000e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  000e6	8d 45 e4	 lea	 eax, DWORD PTR $T509070[ebp]
  000e9	50		 push	 eax
  000ea	ff 75 10	 push	 DWORD PTR _iPresentValue1$[ebp]
  000ed	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000f4	e8 00 00 00 00	 call	 ?GetSingleton@ioItemMaker@@SAAAV1@XZ ; ioItemMaker::GetSingleton
  000f9	8b c8		 mov	 ecx, eax
  000fb	e8 00 00 00 00	 call	 ?GetItemConst@ioItemMaker@@QBEPBVioItem@@KABVioHashString@@@Z ; ioItemMaker::GetItemConst
  00100	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00104	8d 4d e4	 lea	 ecx, DWORD PTR $T509070[ebp]
  00107	8b f8		 mov	 edi, eax
  00109	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ

; 332  : 			if( pItem )

  0010f	85 ff		 test	 edi, edi
  00111	0f 84 0e 01 00
	00		 je	 $LN18@GetPresent

; 333  : 			{
; 334  : 				rszIconName = pItem->GetItemLargeIconName();

  00117	81 c7 14 02 00
	00		 add	 edi, 532		; 00000214H
  0011d	57		 push	 edi

; 335  : 			}
; 336  : 		}
; 337  : 		break;

  0011e	e9 18 ff ff ff	 jmp	 $LN46@GetPresent
$LN10@GetPresent:

; 338  : 	case PRESENT_EXTRAITEM_BOX:
; 339  : 		{
; 340  : 			RandomMachineInfo *pInfo = g_ExtraItemInfoMgr.GetRandomMachineInfo( iPresentValue1 );

  00123	ff 75 10	 push	 DWORD PTR _iPresentValue1$[ebp]
  00126	e8 00 00 00 00	 call	 ?GetSingleton@ioExtraItemInfoManager@@SAAAV1@XZ ; ioExtraItemInfoManager::GetSingleton
  0012b	8b c8		 mov	 ecx, eax
  0012d	e8 00 00 00 00	 call	 ?GetRandomMachineInfo@ioExtraItemInfoManager@@QAEPAVRandomMachineInfo@@H@Z ; ioExtraItemInfoManager::GetRandomMachineInfo

; 341  : 			if( pInfo )

  00132	85 c0		 test	 eax, eax
  00134	0f 84 eb 00 00
	00		 je	 $LN18@GetPresent

; 342  : 			{
; 343  : 				rszIconName = pInfo->GetIconName();

  0013a	83 c0 18	 add	 eax, 24			; 00000018H

; 344  : 			}
; 345  : 		}
; 346  : 		break;

  0013d	e9 f8 fe ff ff	 jmp	 $LN45@GetPresent
$LN8@GetPresent:

; 347  : 	case PRESENT_RANDOM_DECO:
; 348  : 		{
; 349  : 			int iClassType = iPresentValue1 / 100000;
; 350  : 			int iSexType   = (iPresentValue1 % 100000) / FLOAT1000;

  00142	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  00147	8b c8		 mov	 ecx, eax

; 351  : 			int iDecoType  = iPresentValue1 % 1000;

  00149	8b 45 10	 mov	 eax, DWORD PTR _iPresentValue1$[ebp]
  0014c	99		 cdq
  0014d	bf e8 03 00 00	 mov	 edi, 1000		; 000003e8H
  00152	f7 ff		 idiv	 edi

; 352  : 			const DecoData &kData = g_DecorationPrice.GetDecoData( iSexType, iDecoType, iPresentValue2 );

  00154	ff 75 14	 push	 DWORD PTR _iPresentValue2$[ebp]
  00157	8b 45 10	 mov	 eax, DWORD PTR _iPresentValue1$[ebp]
  0015a	bf a0 86 01 00	 mov	 edi, 100000		; 000186a0H
  0015f	52		 push	 edx
  00160	99		 cdq
  00161	f7 ff		 idiv	 edi
  00163	89 55 10	 mov	 DWORD PTR tv281[ebp], edx
  00166	db 45 10	 fild	 DWORD PTR tv281[ebp]
  00169	89 4d 10	 mov	 DWORD PTR tv278[ebp], ecx
  0016c	db 45 10	 fild	 DWORD PTR tv278[ebp]

; 353  : 			rszIconName = kData.m_szIcon;
; 354  : 		}
; 355  : 		break;

  0016f	e9 01 ff ff ff	 jmp	 $LN48@GetPresent
$LN7@GetPresent:

; 356  : 	case PRESENT_GRADE_EXP:
; 357  : 		{
; 358  : 			rszIconName = ioHashString( "UIIconPack13#quest_001" );

  00174	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@FLBLIBDA@UIIconPack13?$CDquest_001?$AA@
  00179	8d 4d c4	 lea	 ecx, DWORD PTR $T509071[ebp]
  0017c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00182	50		 push	 eax
  00183	8b ce		 mov	 ecx, esi
  00185	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  0018c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
  00192	8d 4d c4	 lea	 ecx, DWORD PTR $T509071[ebp]

; 359  : 		}
; 360  : 		break;

  00195	e9 81 00 00 00	 jmp	 $LN44@GetPresent
$LN6@GetPresent:

; 361  : 	case PRESENT_MEDALITEM:
; 362  : 		{
; 363  : 			const ioMedalItemInfoManager::ItemInfo *pItem = g_MedalItemMgr.GetItemInfo( iPresentValue1 );

  0019a	ff 75 10	 push	 DWORD PTR _iPresentValue1$[ebp]
  0019d	e8 00 00 00 00	 call	 ?GetSingleton@ioMedalItemInfoManager@@SAAAV1@XZ ; ioMedalItemInfoManager::GetSingleton
  001a2	8b c8		 mov	 ecx, eax
  001a4	e8 00 00 00 00	 call	 ?GetItemInfo@ioMedalItemInfoManager@@QAEPBUItemInfo@1@H@Z ; ioMedalItemInfoManager::GetItemInfo

; 364  : 			if( pItem )	

  001a9	85 c0		 test	 eax, eax
  001ab	74 78		 je	 SHORT $LN18@GetPresent

; 365  : 				rszIconName = pItem->m_sIcon;

  001ad	05 a8 01 00 00	 add	 eax, 424		; 000001a8H

; 366  : 		}
; 367  : 		break;

  001b2	e9 83 fe ff ff	 jmp	 $LN45@GetPresent
$LN4@GetPresent:

; 368  : 	case PRESENT_COSTUME:
; 369  : 		{
; 370  : 			rszIconName = g_CostumeInfoMgr.GetCostumeIcon( iPresentValue1 );

  001b7	ff 75 10	 push	 DWORD PTR _iPresentValue1$[ebp]
  001ba	8d 45 b4	 lea	 eax, DWORD PTR $T509072[ebp]
  001bd	50		 push	 eax
  001be	e8 00 00 00 00	 call	 ?GetSingleton@ioCostumeInfoManager@@SAAAV1@XZ ; ioCostumeInfoManager::GetSingleton
  001c3	8b c8		 mov	 ecx, eax
  001c5	e8 00 00 00 00	 call	 ?GetCostumeIcon@ioCostumeInfoManager@@QAE?AVioHashString@@H@Z ; ioCostumeInfoManager::GetCostumeIcon
  001ca	50		 push	 eax
  001cb	8b ce		 mov	 ecx, esi
  001cd	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  001d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
  001da	8d 4d b4	 lea	 ecx, DWORD PTR $T509072[ebp]

; 371  : 		}
; 372  : 		break;

  001dd	eb 3c		 jmp	 SHORT $LN44@GetPresent
$LN3@GetPresent:

; 373  : 	case PRESENT_COSTUME_BOX:
; 374  : 		{
; 375  : 			CostumeShopInfo *pInfo = g_CostumeShopInfoMgr.GetCostumeMachineInfo( iPresentValue1 );

  001df	ff 75 10	 push	 DWORD PTR _iPresentValue1$[ebp]
  001e2	e8 00 00 00 00	 call	 ?GetSingleton@ioCostumeShopInfoManager@@SAAAV1@XZ ; ioCostumeShopInfoManager::GetSingleton
  001e7	8b c8		 mov	 ecx, eax
  001e9	e8 00 00 00 00	 call	 ?GetCostumeMachineInfo@ioCostumeShopInfoManager@@QAEPAVCostumeShopInfo@@H@Z ; ioCostumeShopInfoManager::GetCostumeMachineInfo

; 376  : 			if( pInfo )

  001ee	85 c0		 test	 eax, eax
  001f0	74 33		 je	 SHORT $LN18@GetPresent

; 377  : 				rszIconName = pInfo->GetIconName();

  001f2	83 c0 50	 add	 eax, 80			; 00000050H

; 378  : 		}
; 379  : 		break;

  001f5	e9 40 fe ff ff	 jmp	 $LN45@GetPresent
$LN1@GetPresent:

; 380  : 	case PRESENT_BONUS_CASH:
; 381  : 		{
; 382  : 			rszIconName = ioHashString( "UIIconPack101#Cash" );

  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HEINEDGN@UIIconPack101?$CDCash?$AA@
  001ff	8d 4d a4	 lea	 ecx, DWORD PTR $T509073[ebp]
  00202	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00208	50		 push	 eax
  00209	8b ce		 mov	 ecx, esi
  0020b	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  00212	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
  00218	8d 4d a4	 lea	 ecx, DWORD PTR $T509073[ebp]
$LN44@GetPresent:
  0021b	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0021f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
$LN18@GetPresent:

; 383  : 		}
; 384  : 		break;
; 385  : 	}
; 386  : }

  00225	e8 00 00 00 00	 call	 __EH_epilog3
  0022a	c2 10 00	 ret	 16			; 00000010H
  0022d	8d 49 00	 npad	 3
$LN49@GetPresent:
  00230	00 00 00 00	 DD	 $LN17@GetPresent
  00234	00 00 00 00	 DD	 $LN16@GetPresent
  00238	00 00 00 00	 DD	 $LN15@GetPresent
  0023c	00 00 00 00	 DD	 $LN13@GetPresent
  00240	00 00 00 00	 DD	 $LN12@GetPresent
  00244	00 00 00 00	 DD	 $LN10@GetPresent
  00248	00 00 00 00	 DD	 $LN8@GetPresent
  0024c	00 00 00 00	 DD	 $LN7@GetPresent
  00250	00 00 00 00	 DD	 $LN6@GetPresent
  00254	00 00 00 00	 DD	 $LN18@GetPresent
  00258	00 00 00 00	 DD	 $LN18@GetPresent
  0025c	00 00 00 00	 DD	 $LN4@GetPresent
  00260	00 00 00 00	 DD	 $LN1@GetPresent
  00264	00 00 00 00	 DD	 $LN12@GetPresent
  00268	00 00 00 00	 DD	 $LN3@GetPresent
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR $T509069[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z$1:
  00009	8d 4d e4	 lea	 ecx, DWORD PTR $T509070[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z$2:
  00012	8d 4d c4	 lea	 ecx, DWORD PTR $T509071[ebp]
  00015	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z$3:
  0001b	8d 4d b4	 lea	 ecx, DWORD PTR $T509072[ebp]
  0001e	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z$4:
  00024	8d 4d a4	 lea	 ecx, DWORD PTR $T509073[ebp]
  00027	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z:
  0002d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00031	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00034	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  00037	33 c8		 xor	 ecx, eax
  00039	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z
  00043	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z ENDP ; GashaponPresentListWnd::GetPresentIconName
PUBLIC	??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@1@@Z ; std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@1@@Z PROC ; std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@1@@Z ENDP ; std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >
_TEXT	ENDS
PUBLIC	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 49 92 24 09	 mov	 eax, 153391689		; 09249249H

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	6a 1c		 push	 28			; 0000001cH
  0000a	99		 cdq
  0000b	59		 pop	 ecx
  0000c	f7 f9		 idiv	 ecx

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0000e	ba 49 92 24 09	 mov	 edx, 153391689		; 09249249H
  00013	8b c8		 mov	 ecx, eax
  00015	d1 e9		 shr	 ecx, 1
  00017	2b d1		 sub	 edx, ecx
  00019	3b d0		 cmp	 edx, eax
  0001b	73 04		 jae	 SHORT $LN4@Grow_to
  0001d	33 c0		 xor	 eax, eax
  0001f	eb 02		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00021	03 c1		 add	 eax, ecx
$LN5@Grow_to:

; 1279 : 		if (_Capacity < _Count)

  00023	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00026	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to
_TEXT	ENDS
PUBLIC	?max_size@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QBEIXZ ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QBEIXZ PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 55 55 55 05	 mov	 eax, 89478485		; 05555555H

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QBEIXZ ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IBEII@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IBEII@Z PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	6a 30		 push	 48			; 00000030H
  0000a	99		 cdq
  0000b	59		 pop	 ecx
  0000c	f7 f9		 idiv	 ecx

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0000e	ba 55 55 55 05	 mov	 edx, 89478485		; 05555555H
  00013	8b c8		 mov	 ecx, eax
  00015	d1 e9		 shr	 ecx, 1
  00017	2b d1		 sub	 edx, ecx
  00019	3b d0		 cmp	 edx, eax
  0001b	73 04		 jae	 SHORT $LN4@Grow_to@2
  0001d	33 c0		 xor	 eax, eax
  0001f	eb 02		 jmp	 SHORT $LN5@Grow_to@2
$LN4@Grow_to@2:
  00021	03 c1		 add	 eax, ecx
$LN5@Grow_to@2:

; 1279 : 		if (_Capacity < _Count)

  00023	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00026	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?_Grow_to@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IBEII@Z ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Grow_to
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QAE@PAUGashaponPresentInfo@GashaponPresentListWnd@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >::_Vector_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QAE@PAUGashaponPresentInfo@GashaponPresentListWnd@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QAE@PAUGashaponPresentInfo@GashaponPresentListWnd@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >::_Vector_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QAE@PAUGashaponPresentInfo@GashaponPresentListWnd@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >::_Vector_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEPAUGashaponPresentInfo@GashaponPresentListWnd@@I@Z ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::allocate
; Function compile flags: /Ogsp
;	COMDAT ?allocate@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEPAUGashaponPresentInfo@GashaponPresentListWnd@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEPAUGashaponPresentInfo@GashaponPresentListWnd@@I@Z PROC ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@IPAU12@@Z ; std::_Allocate<GashaponPresentListWnd::GashaponPresentInfo>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEPAUGashaponPresentInfo@GashaponPresentListWnd@@I@Z ENDP ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::allocate
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >::operator==
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$GetIntAttribute_e@$0M@@ioXMLElement@@QBEHAAY0M@$$CBD@Z ; ioXMLElement::GetIntAttribute_e<12>
EXTRN	__imp_?GetIntAttribute@ioXMLElement@@QBEHPBD@Z:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioxmlelement.h
;	COMDAT ??$GetIntAttribute_e@$0M@@ioXMLElement@@QBEHAAY0M@$$CBD@Z
_TEXT	SEGMENT
__k$ = -20						; size = 12
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
??$GetIntAttribute_e@$0M@@ioXMLElement@@QBEHAAY0M@$$CBD@Z PROC ; ioXMLElement::GetIntAttribute_e<12>, COMDAT
; _this$ = ecx

; 86   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 87   : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 32 01 00
	00		 je	 $LN96@GetIntAttr
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 ec	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 1b 01 00
	00		 je	 $LN95@GetIntAttr
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 ed	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 04 01 00
	00		 je	 $LN94@GetIntAttr
  00042	b1 eb		 mov	 cl, -21			; ffffffebH
  00044	32 d1		 xor	 dl, cl
  00046	88 55 ee	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 ec 00 00
	00		 je	 $LN93@GetIntAttr
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 ef	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 d5 00 00
	00		 je	 $LN92@GetIntAttr
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 f0	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 be 00 00
	00		 je	 $LN91@GetIntAttr
  00076	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00079	88 55 f1	 mov	 BYTE PTR __k$[ebp+5], dl
  0007c	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007f	84 d2		 test	 dl, dl
  00081	0f 84 a8 00 00
	00		 je	 $LN90@GetIntAttr
  00087	32 d1		 xor	 dl, cl
  00089	88 55 f2	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 92 00 00
	00		 je	 $LN89@GetIntAttr
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 f3	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	74 7f		 je	 SHORT $LN88@GetIntAttr
  000a4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a7	88 55 f4	 mov	 BYTE PTR __k$[ebp+8], dl
  000aa	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000ad	84 d2		 test	 dl, dl
  000af	74 6c		 je	 SHORT $LN87@GetIntAttr
  000b1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b4	88 55 f5	 mov	 BYTE PTR __k$[ebp+9], dl
  000b7	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000ba	84 d2		 test	 dl, dl
  000bc	74 5a		 je	 SHORT $LN86@GetIntAttr
  000be	32 d1		 xor	 dl, cl
  000c0	80 78 0b 00	 cmp	 BYTE PTR [eax+11], 0
  000c4	88 55 f6	 mov	 BYTE PTR __k$[ebp+10], dl
  000c7	0f 84 89 00 00
	00		 je	 $LN1@GetIntAttr
  000cd	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000d0	84 d2		 test	 dl, dl
  000d2	74 3e		 je	 SHORT $LN84@GetIntAttr
  000d4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000d7	88 55 f8	 mov	 BYTE PTR __k$[ebp+12], dl
  000da	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000dd	84 d2		 test	 dl, dl
  000df	74 2b		 je	 SHORT $LN83@GetIntAttr
  000e1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000e4	88 55 f9	 mov	 BYTE PTR __k$[ebp+13], dl
  000e7	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000ea	84 d2		 test	 dl, dl
  000ec	74 19		 je	 SHORT $LN82@GetIntAttr
  000ee	8a 40 0f	 mov	 al, BYTE PTR [eax+15]
  000f1	32 d1		 xor	 dl, cl
  000f3	88 55 fa	 mov	 BYTE PTR __k$[ebp+14], dl
  000f6	84 c0		 test	 al, al
  000f8	74 07		 je	 SHORT $LN81@GetIntAttr
  000fa	34 ea		 xor	 al, -22			; ffffffeaH
  000fc	88 45 fb	 mov	 BYTE PTR __k$[ebp+15], al
  000ff	eb 55		 jmp	 SHORT $LN1@GetIntAttr
$LN81@GetIntAttr:
  00101	c6 45 fb ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00105	eb 4f		 jmp	 SHORT $LN1@GetIntAttr
$LN82@GetIntAttr:
  00107	88 4d fa	 mov	 BYTE PTR __k$[ebp+14], cl
  0010a	eb 4a		 jmp	 SHORT $LN1@GetIntAttr
$LN83@GetIntAttr:
  0010c	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  00110	eb 44		 jmp	 SHORT $LN1@GetIntAttr
$LN84@GetIntAttr:
  00112	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00116	eb 3e		 jmp	 SHORT $LN1@GetIntAttr
$LN86@GetIntAttr:
  00118	88 4d f6	 mov	 BYTE PTR __k$[ebp+10], cl
  0011b	eb 39		 jmp	 SHORT $LN1@GetIntAttr
$LN87@GetIntAttr:
  0011d	c6 45 f5 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  00121	eb 33		 jmp	 SHORT $LN1@GetIntAttr
$LN88@GetIntAttr:
  00123	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00127	eb 2d		 jmp	 SHORT $LN1@GetIntAttr
$LN89@GetIntAttr:
  00129	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  0012d	eb 27		 jmp	 SHORT $LN1@GetIntAttr
$LN90@GetIntAttr:
  0012f	88 4d f2	 mov	 BYTE PTR __k$[ebp+6], cl
  00132	eb 22		 jmp	 SHORT $LN1@GetIntAttr
$LN91@GetIntAttr:
  00134	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  00138	eb 1c		 jmp	 SHORT $LN1@GetIntAttr
$LN92@GetIntAttr:
  0013a	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  0013e	eb 16		 jmp	 SHORT $LN1@GetIntAttr
$LN93@GetIntAttr:
  00140	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00144	eb 10		 jmp	 SHORT $LN1@GetIntAttr
$LN94@GetIntAttr:
  00146	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0014a	eb 0a		 jmp	 SHORT $LN1@GetIntAttr
$LN95@GetIntAttr:
  0014c	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00150	eb 04		 jmp	 SHORT $LN1@GetIntAttr
$LN96@GetIntAttr:
  00152	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@GetIntAttr:
  00156	6a 02		 push	 2
  00158	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  0015b	c6 45 f7 00	 mov	 BYTE PTR __k$[ebp+11], 0
  0015f	5a		 pop	 edx
$LL104@GetIntAttr:
  00160	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00166	83 c0 04	 add	 eax, 4
  00169	4a		 dec	 edx
  0016a	75 f4		 jne	 SHORT $LL104@GetIntAttr
  0016c	6a 08		 push	 8
  0016e	58		 pop	 eax
$LL101@GetIntAttr:
  0016f	8b c8		 mov	 ecx, eax
  00171	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00177	79 05		 jns	 SHORT $LN111@GetIntAttr
  00179	49		 dec	 ecx
  0017a	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0017d	41		 inc	 ecx
$LN111@GetIntAttr:
  0017e	b2 ed		 mov	 dl, -19			; ffffffedH
  00180	2a d1		 sub	 dl, cl
  00182	30 54 05 ec	 xor	 BYTE PTR __k$[ebp+eax], dl
  00186	40		 inc	 eax
  00187	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  0018a	7c e3		 jl	 SHORT $LL101@GetIntAttr

; 88   : 		return GetIntAttribute(_k);

  0018c	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  0018f	50		 push	 eax
  00190	8b ce		 mov	 ecx, esi
  00192	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetIntAttribute@ioXMLElement@@QBEHPBD@Z

; 89   : 	}

  00198	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0019b	33 cd		 xor	 ecx, ebp
  0019d	5e		 pop	 esi
  0019e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a3	c9		 leave
  001a4	c2 04 00	 ret	 4
??$GetIntAttribute_e@$0M@@ioXMLElement@@QBEHAAY0M@$$CBD@Z ENDP ; ioXMLElement::GetIntAttribute_e<12>
_TEXT	ENDS
PUBLIC	??$?8$00@ioHashString@@QAE_NAAY00$$CBD@Z	; ioHashString::operator==<1>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iohashstring.h
;	COMDAT ??$?8$00@ioHashString@@QAE_NAAY00$$CBD@Z
_TEXT	SEGMENT
__t$ = -5						; size = 1
_t$ = 8							; size = 4
??$?8$00@ioHashString@@QAE_NAAY00$$CBD@Z PROC		; ioHashString::operator==<1>, COMDAT
; _this$ = ecx

; 127  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx

; 128  : 		_ENCSTR(t, _t); return ( strcmp( m_pString, _t ) == 0 );

  00005	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00008	80 38 00	 cmp	 BYTE PTR [eax], 0
  0000b	74 4b		 je	 SHORT $LN2@operator
  0000d	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00010	84 d2		 test	 dl, dl
  00012	74 40		 je	 SHORT $LN95@operator
  00014	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00017	88 55 fc	 mov	 BYTE PTR __t$[ebp+1], dl
  0001a	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0001d	84 d2		 test	 dl, dl
  0001f	74 2d		 je	 SHORT $LN94@operator
  00021	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00024	88 55 fd	 mov	 BYTE PTR __t$[ebp+2], dl
  00027	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0002a	84 d2		 test	 dl, dl
  0002c	74 1a		 je	 SHORT $LN93@operator
  0002e	8a 40 04	 mov	 al, BYTE PTR [eax+4]
  00031	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00034	88 55 fe	 mov	 BYTE PTR __t$[ebp+3], dl
  00037	84 c0		 test	 al, al
  00039	74 07		 je	 SHORT $LN92@operator
  0003b	34 ed		 xor	 al, -19			; ffffffedH
  0003d	88 45 ff	 mov	 BYTE PTR __t$[ebp+4], al
  00040	eb 16		 jmp	 SHORT $LN2@operator
$LN92@operator:
  00042	c6 45 ff ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  00046	eb 10		 jmp	 SHORT $LN2@operator
$LN93@operator:
  00048	c6 45 fe ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  0004c	eb 0a		 jmp	 SHORT $LN2@operator
$LN94@operator:
  0004e	c6 45 fd eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  00052	eb 04		 jmp	 SHORT $LN2@operator
$LN95@operator:
  00054	c6 45 fc ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
$LN2@operator:
  00058	8b 01		 mov	 eax, DWORD PTR [ecx]
  0005a	c6 45 fb 00	 mov	 BYTE PTR __t$[ebp], 0
  0005e	8d 55 fb	 lea	 edx, DWORD PTR __t$[ebp]
$LL111@operator:
  00061	8a 08		 mov	 cl, BYTE PTR [eax]
  00063	3a 0a		 cmp	 cl, BYTE PTR [edx]
  00065	75 1a		 jne	 SHORT $LN112@operator
  00067	84 c9		 test	 cl, cl
  00069	74 12		 je	 SHORT $LN113@operator
  0006b	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  0006e	3a 4a 01	 cmp	 cl, BYTE PTR [edx+1]
  00071	75 0e		 jne	 SHORT $LN112@operator
  00073	83 c0 02	 add	 eax, 2
  00076	83 c2 02	 add	 edx, 2
  00079	84 c9		 test	 cl, cl
  0007b	75 e4		 jne	 SHORT $LL111@operator
$LN113@operator:
  0007d	33 c0		 xor	 eax, eax
  0007f	eb 05		 jmp	 SHORT $LN114@operator
$LN112@operator:
  00081	1b c0		 sbb	 eax, eax
  00083	83 d8 ff	 sbb	 eax, -1
$LN114@operator:
  00086	33 c9		 xor	 ecx, ecx
  00088	85 c0		 test	 eax, eax
  0008a	0f 94 c0	 sete	 al

; 129  : 	}

  0008d	c9		 leave
  0008e	c2 04 00	 ret	 4
??$?8$00@ioHashString@@QAE_NAAY00$$CBD@Z ENDP		; ioHashString::operator==<1>
_TEXT	ENDS
PUBLIC	??$_Copy_impl@PAHPAH@std@@YAPAHPAH00@Z		; std::_Copy_impl<int *,int *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Copy_impl@PAHPAH@std@@YAPAHPAH00@Z
_TEXT	SEGMENT
__Cat$509284 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_impl@PAHPAH@std@@YAPAHPAH00@Z PROC		; std::_Copy_impl<int *,int *>, COMDAT

; 2163 : 	{	// copy [_First, _Last) to [_Dest, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2164 : 	return (_Copy_impl(_First, _Last,
; 2165 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$509284[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_impl@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<int *,int *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2166 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Copy_impl@PAHPAH@std@@YAPAHPAH00@Z ENDP		; std::_Copy_impl<int *,int *>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z ; std::_Uninitialized_copy<int *,int *,std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z
_TEXT	SEGMENT
__Cat$509291 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z PROC ; std::_Uninitialized_copy<int *,int *,std::allocator<int> >, COMDAT

; 412  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 413  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 414  : 		_Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$509291[ebp]
  00007	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000a	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00010	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00013	e8 00 00 00 00	 call	 ??$_Uninit_copy@HH@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<int,int>
  00018	83 c4 14	 add	 esp, 20			; 00000014H

; 415  : 	}

  0001b	c9		 leave
  0001c	c3		 ret	 0
??$_Uninitialized_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@@Z ENDP ; std::_Uninitialized_copy<int *,int *,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??$construct@AAUGashaponPresentInfo@GashaponPresentListWnd@@@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::construct<GashaponPresentListWnd::GashaponPresentInfo &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$construct@AAUGashaponPresentInfo@GashaponPresentListWnd@@@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAUGashaponPresentInfo@GashaponPresentListWnd@@@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z$0
__ehfuncinfo$??$construct@AAUGashaponPresentInfo@GashaponPresentListWnd@@@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAUGashaponPresentInfo@GashaponPresentListWnd@@@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$construct@AAUGashaponPresentInfo@GashaponPresentListWnd@@@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z
_TEXT	SEGMENT
$T509296 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUGashaponPresentInfo@GashaponPresentListWnd@@@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z PROC ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::construct<GashaponPresentListWnd::GashaponPresentInfo &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$construct@AAUGashaponPresentInfo@GashaponPresentListWnd@@@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0000f	89 4d f0	 mov	 DWORD PTR $T509296[ebp], ecx
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 c9		 test	 ecx, ecx
  00018	74 08		 je	 SHORT $LN3@construct
  0001a	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z
$LN3@construct:

; 209  : 		}

  00022	e8 00 00 00 00	 call	 __EH_epilog3
  00027	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAUGashaponPresentInfo@GashaponPresentListWnd@@@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T509296[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$??$construct@AAUGashaponPresentInfo@GashaponPresentListWnd@@@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@AAUGashaponPresentInfo@GashaponPresentListWnd@@@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@AAUGashaponPresentInfo@GashaponPresentListWnd@@@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z ENDP ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::construct<GashaponPresentListWnd::GashaponPresentInfo &>
PUBLIC	??$_Move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<GashaponPresentListWnd::GashaponPresentInfo *,GashaponPresentListWnd::GashaponPresentInfo *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<GashaponPresentListWnd::GashaponPresentInfo *,GashaponPresentListWnd::GashaponPresentInfo *>, COMDAT

; 2512 : 	{	// move [_First, _Last) to [_Dest, ...), arbitrary iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 10		 jmp	 SHORT $LN11@Move
$LL3@Move:

; 2514 : 		*_Dest = _STD move(*_First);

  00009	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 ??4GashaponPresentInfo@GashaponPresentListWnd@@QAEAAU01@ABU01@@Z
  00012	83 45 10 30	 add	 DWORD PTR __Dest$[ebp], 48 ; 00000030H
  00016	83 c6 30	 add	 esi, 48			; 00000030H
$LN11@Move:

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

  00019	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  0001c	75 eb		 jne	 SHORT $LL3@Move

; 2515 : 	return (_Dest);

  0001e	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	5e		 pop	 esi

; 2516 : 	}

  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??$_Move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<GashaponPresentListWnd::GashaponPresentInfo *,GashaponPresentListWnd::GashaponPresentInfo *>
_TEXT	ENDS
PUBLIC	??$_Construct@UGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z ; std::_Construct<GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo const &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Construct@UGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@UGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z$0
__ehfuncinfo$??$_Construct@UGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@UGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Construct@UGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z
_TEXT	SEGMENT
$T509324 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$ = 8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z PROC ; std::_Construct<GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Construct@UGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 47   : 	void _FARQ *_Vptr = _Ptr;

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0000f	89 4d 08	 mov	 DWORD PTR __Vptr$[ebp], ecx

; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00012	89 4d f0	 mov	 DWORD PTR $T509324[ebp], ecx
  00015	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00019	85 c9		 test	 ecx, ecx
  0001b	74 08		 je	 SHORT $LN3@Construct
  0001d	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  00020	e8 00 00 00 00	 call	 ??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z
$LN3@Construct:

; 49   : 	}

  00025	e8 00 00 00 00	 call	 __EH_epilog3
  0002a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@UGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Vptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T509324[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$??$_Construct@UGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Construct@UGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Construct@UGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z ENDP ; std::_Construct<GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo const &>
PUBLIC	??$_Destroy@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@@Z ; std::_Destroy<GashaponPresentListWnd::GashaponPresentInfo>
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@@Z PROC ; std::_Destroy<GashaponPresentListWnd::GashaponPresentInfo>, COMDAT

; 62   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	_Ptr->~_Ty();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]

; 64   : 	}

  00006	5d		 pop	 ebp

; 63   : 	_Ptr->~_Ty();

  00007	e9 00 00 00 00	 jmp	 ??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
??$_Destroy@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@@Z ENDP ; std::_Destroy<GashaponPresentListWnd::GashaponPresentInfo>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU34@@Z ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::construct
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU34@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU34@@Z$0
__ehfuncinfo$?construct@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU34@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU34@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU34@@Z
_TEXT	SEGMENT
$T509351 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU34@@Z PROC ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?construct@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU34@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0000f	89 4d f0	 mov	 DWORD PTR $T509351[ebp], ecx
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 c9		 test	 ecx, ecx
  00018	74 08		 je	 SHORT $LN3@construct@2
  0001a	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z
$LN3@construct@2:

; 203  : 		}

  00022	e8 00 00 00 00	 call	 __EH_epilog3
  00027	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU34@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T509351[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$?construct@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU34@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?construct@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU34@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU34@@Z ENDP ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::construct
PUBLIC	?StringCbPrintfA@@YAJPADIPBDZZ			; StringCbPrintfA
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\strsafe.h
;	COMDAT ?StringCbPrintfA@@YAJPADIPBDZZ
_TEXT	SEGMENT
_pszDest$ = 8						; size = 4
_cbDest$ = 12						; size = 4
_pszFormat$ = 16					; size = 4
?StringCbPrintfA@@YAJPADIPBDZZ PROC			; StringCbPrintfA, COMDAT

; 4767 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4768 :     HRESULT hr;
; 4769 :     size_t cchDest = cbDest / sizeof(char);
; 4770 : 
; 4771 :     hr = StringValidateDestA(pszDest, cchDest, STRSAFE_MAX_CCH);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _cbDest$[ebp]
  00006	33 c0		 xor	 eax, eax
  00008	85 c9		 test	 ecx, ecx
  0000a	74 08		 je	 SHORT $LN4@StringCbPr
  0000c	81 f9 ff ff ff
	7f		 cmp	 ecx, 2147483647		; 7fffffffH
  00012	76 05		 jbe	 SHORT $LN5@StringCbPr
$LN4@StringCbPr:
  00014	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
$LN5@StringCbPr:

; 4772 :     
; 4773 :     if (SUCCEEDED(hr))

  00019	85 c0		 test	 eax, eax
  0001b	78 39		 js	 SHORT $LN1@StringCbPr

; 4774 :     {
; 4775 :         va_list argList;
; 4776 : 
; 4777 :         va_start(argList, pszFormat);
; 4778 : 
; 4779 :         hr = StringVPrintfWorkerA(pszDest,
; 4780 :                                   cchDest,
; 4781 :                                   NULL,
; 4782 :                                   pszFormat,
; 4783 :                                   argList);

  0001d	53		 push	 ebx
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	8b 7d 08	 mov	 edi, DWORD PTR _pszDest$[ebp]
  00023	8d 45 14	 lea	 eax, DWORD PTR _pszFormat$[ebp+4]
  00026	50		 push	 eax
  00027	ff 75 10	 push	 DWORD PTR _pszFormat$[ebp]
  0002a	8d 71 ff	 lea	 esi, DWORD PTR [ecx-1]
  0002d	56		 push	 esi
  0002e	57		 push	 edi
  0002f	33 db		 xor	 ebx, ebx
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___vsnprintf
  00037	83 c4 10	 add	 esp, 16			; 00000010H
  0003a	85 c0		 test	 eax, eax
  0003c	78 0b		 js	 SHORT $LN12@StringCbPr
  0003e	3b c6		 cmp	 eax, esi
  00040	77 07		 ja	 SHORT $LN12@StringCbPr
  00042	75 0d		 jne	 SHORT $LN9@StringCbPr
  00044	88 1c 3e	 mov	 BYTE PTR [esi+edi], bl
  00047	eb 08		 jmp	 SHORT $LN9@StringCbPr
$LN12@StringCbPr:
  00049	88 1c 3e	 mov	 BYTE PTR [esi+edi], bl
  0004c	bb 7a 00 07 80	 mov	 ebx, -2147024774	; 8007007aH
$LN9@StringCbPr:
  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	8b c3		 mov	 eax, ebx
  00055	5b		 pop	 ebx
$LN1@StringCbPr:

; 4784 : 
; 4785 :         va_end(argList);
; 4786 :     }
; 4787 : 
; 4788 :     return hr;
; 4789 : }

  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
?StringCbPrintfA@@YAJPADIPBDZZ ENDP			; StringCbPrintfA
_TEXT	ENDS
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 1497 : 		return (_Myptr());

  00000	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  00004	72 03		 jb	 SHORT $LN5@c_str
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1498 : 		}

  00008	c3		 ret	 0

; 1497 : 		return (_Myptr());

$LN5@c_str:
  00009	8b c1		 mov	 eax, ecx

; 1498 : 		}

  0000b	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
PUBLIC	?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::begin
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z PROC ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 454  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 455  : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::end
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@V?$allocator@H@1@@Z ; std::_Vector_val<int,std::allocator<int> >::_Vector_val<int,std::allocator<int> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@V?$allocator@H@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@V?$allocator@H@1@@Z PROC ; std::_Vector_val<int,std::allocator<int> >::_Vector_val<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@V?$allocator@H@1@@Z ENDP ; std::_Vector_val<int,std::allocator<int> >::_Vector_val<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1953 : 		{	// set new length and null terminator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1954 : 		_Traits::assign(_Myptr()[this->_Mysize = _Newsize], _Elem());

  00003	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  00007	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0000a	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  0000d	72 02		 jb	 SHORT $LN5@Eos
  0000f	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN5@Eos:
  00011	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1955 : 		}

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC ; std::vector<int,std::allocator<int> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP ; std::vector<int,std::allocator<int> >::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1517 : 		size_type _Num = this->_Alval.max_size();
; 1518 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	6a fe		 push	 -2			; fffffffeH
  00002	58		 pop	 eax

; 1519 : 		}

  00003	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@H@std@@QAEPAHI@Z		; std::allocator<int>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@H@std@@QAEPAHI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@H@std@@QAEPAHI@Z PROC		; std::allocator<int>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@H@std@@YAPAHIPAH@Z ; std::_Allocate<int>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@H@std@@QAEPAHI@Z ENDP		; std::allocator<int>::allocate
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator==
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator==
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@D@std@@YAPADIPAD@Z ; std::_Allocate<char>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator!=<char,char>
; Function compile flags: /Ogsp
;	COMDAT ??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator!=<char,char>, COMDAT

; 271  : 	return (!(_Left == _Right));

  00000	32 c0		 xor	 al, al

; 272  : 	}

  00002	c3		 ret	 0
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator!=<char,char>
_TEXT	ENDS
PUBLIC	??$_Move@PAHPAH@std@@YAPAHPAH00@Z		; std::_Move<int *,int *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAHPAH@std@@YAPAHPAH00@Z
_TEXT	SEGMENT
__Cat$509505 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAHPAH@std@@YAPAHPAH00@Z PROC			; std::_Move<int *,int *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$509505[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<int *,int *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAHPAH@std@@YAPAHPAH00@Z ENDP			; std::_Move<int *,int *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
PUBLIC	__real@42d00000
PUBLIC	?OnRender@GashaponPresentListBtn@@MAEXXZ	; GashaponPresentListBtn::OnRender
EXTRN	__imp_?PrintTextWidthCut@ioFontManager@@QAAXMMMMPBDZZ:PROC
EXTRN	__imp_?OnRender@ioButton@@MAEXXZ:PROC
;	COMDAT __real@42d00000
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
CONST	SEGMENT
__real@42d00000 DD 042d00000r			; 104
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\gashaponpresentlistwnd.cpp
CONST	ENDS
;	COMDAT ?OnRender@GashaponPresentListBtn@@MAEXXZ
_TEXT	SEGMENT
tv244 = -20						; size = 4
tv251 = -16						; size = 4
_iYPos$ = -12						; size = 4
tv166 = -8						; size = 4
tv290 = -4						; size = 4
_iXPos$ = -4						; size = 4
?OnRender@GashaponPresentListBtn@@MAEXXZ PROC		; GashaponPresentListBtn::OnRender, COMDAT
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx

; 44   : 	NewShopIconBtn::OnRender();

  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?OnRender@ioButton@@MAEXXZ

; 45   : 
; 46   : 	int iXPos = GetDerivedPosX();

  00011	8b cf		 mov	 ecx, edi
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosX@ioWnd@@QBEHXZ

; 47   : 	int iYPos = GetDerivedPosY();

  00019	8b cf		 mov	 ecx, edi
  0001b	89 45 fc	 mov	 DWORD PTR _iXPos$[ebp], eax
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosY@ioWnd@@QBEHXZ

; 48   : 
; 49   : 	g_FontMgr.SetTextStyle( TS_NORMAL );

  00024	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?GetSingleton@ioFontManager@@SAAAV1@XZ
  0002a	33 db		 xor	 ebx, ebx
  0002c	53		 push	 ebx
  0002d	89 45 f4	 mov	 DWORD PTR _iYPos$[ebp], eax
  00030	ff d6		 call	 esi
  00032	8b c8		 mov	 ecx, eax
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z

; 50   : 	g_FontMgr.SetBkColor( 0, 0, 0 );

  0003a	53		 push	 ebx
  0003b	53		 push	 ebx
  0003c	53		 push	 ebx
  0003d	ff d6		 call	 esi
  0003f	8b c8		 mov	 ecx, eax
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetBkColor@ioFontManager@@QAEXHHH@Z

; 51   : 	g_FontMgr.SetAlignType( TAT_CENTER );

  00047	6a 01		 push	 1
  00049	ff d6		 call	 esi
  0004b	8b c8		 mov	 ecx, eax
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 52   : 	g_FontMgr.SetTextColor( TCT_DEFAULT_DARKGRAY );

  00053	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  00058	ff d6		 call	 esi
  0005a	8b c8		 mov	 ecx, eax
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 53   : 
; 54   : 	enum { X_TEXT_OFFSET = 32, Y_TEXT_OFFSET = 79, Y_OFFSET_LING_GAP = 18, Y_TEXT_OFFSET_ADD = -8, Y_OFFSET_LING_GAP_ADD = -4,  };
; 55   : 
; 56   : 	int iYAdd    = 0;
; 57   : 	int iYGapAdd = 0;
; 58   : 	int iSize = m_szNameList.size();

  00062	8b 87 70 02 00
	00		 mov	 eax, DWORD PTR [edi+624]
  00068	2b 87 6c 02 00
	00		 sub	 eax, DWORD PTR [edi+620]
  0006e	6a 1c		 push	 28			; 0000001cH
  00070	99		 cdq
  00071	5b		 pop	 ebx
  00072	f7 fb		 idiv	 ebx
  00074	33 c9		 xor	 ecx, ecx

; 59   : 	if( iSize >= 2 )

  00076	83 f8 02	 cmp	 eax, 2
  00079	7c 08		 jl	 SHORT $LN20@OnRender@2

; 60   : 	{
; 61   : 		iYAdd    = Y_TEXT_OFFSET_ADD;

  0007b	6a f8		 push	 -8			; fffffff8H
  0007d	59		 pop	 ecx

; 62   : 		iYGapAdd = Y_OFFSET_LING_GAP_ADD; 

  0007e	6a fc		 push	 -4			; fffffffcH
  00080	5a		 pop	 edx
  00081	eb 02		 jmp	 SHORT $LN4@OnRender@2
$LN20@OnRender@2:
  00083	8b d1		 mov	 edx, ecx
$LN4@OnRender@2:

; 63   : 	}
; 64   : 		
; 65   : 	for(int i = 0;i < iSize;i++)

  00085	85 c0		 test	 eax, eax
  00087	0f 8e 86 00 00
	00		 jle	 $LN1@OnRender@2
  0008d	8b 5d fc	 mov	 ebx, DWORD PTR _iXPos$[ebp]
  00090	83 65 fc 00	 and	 DWORD PTR tv290[ebp], 0
  00094	83 c3 20	 add	 ebx, 32			; 00000020H
  00097	83 c2 12	 add	 edx, 18			; 00000012H
  0009a	89 55 ec	 mov	 DWORD PTR tv244[ebp], edx
  0009d	8b 55 f4	 mov	 edx, DWORD PTR _iYPos$[ebp]
  000a0	0f 57 c0	 xorps	 xmm0, xmm0
  000a3	f3 0f 2a c3	 cvtsi2ss xmm0, ebx
  000a7	f3 0f 11 45 f0	 movss	 DWORD PTR tv251[ebp], xmm0
  000ac	8d 5c 11 4f	 lea	 ebx, DWORD PTR [ecx+edx+79]
  000b0	89 45 f8	 mov	 DWORD PTR tv166[ebp], eax
$LL19@OnRender@2:

; 66   : 	{
; 67   : 		g_FontMgr.PrintTextWidthCut( iXPos+X_TEXT_OFFSET, iYPos+Y_TEXT_OFFSET+iYAdd+( i*(Y_OFFSET_LING_GAP+iYGapAdd) ), FONT_SIZE_13, 104.0f, m_szNameList[i].c_str() );

  000b3	8b 87 6c 02 00
	00		 mov	 eax, DWORD PTR [edi+620]
  000b9	03 45 fc	 add	 eax, DWORD PTR tv290[ebp]
  000bc	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  000c0	72 02		 jb	 SHORT $LN15@OnRender@2
  000c2	8b 00		 mov	 eax, DWORD PTR [eax]
$LN15@OnRender@2:
  000c4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42d00000
  000cc	50		 push	 eax
  000cd	83 ec 10	 sub	 esp, 16			; 00000010H
  000d0	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  000d6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  000de	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000e4	0f 57 c0	 xorps	 xmm0, xmm0
  000e7	f3 0f 2a c3	 cvtsi2ss xmm0, ebx
  000eb	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000f1	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR tv251[ebp]
  000f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fb	ff d6		 call	 esi
  000fd	50		 push	 eax
  000fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTextWidthCut@ioFontManager@@QAAXMMMMPBDZZ
  00104	83 45 fc 1c	 add	 DWORD PTR tv290[ebp], 28 ; 0000001cH
  00108	03 5d ec	 add	 ebx, DWORD PTR tv244[ebp]
  0010b	83 c4 18	 add	 esp, 24			; 00000018H
  0010e	ff 4d f8	 dec	 DWORD PTR tv166[ebp]
  00111	75 a0		 jne	 SHORT $LL19@OnRender@2
$LN1@OnRender@2:
  00113	5f		 pop	 edi
  00114	5e		 pop	 esi
  00115	5b		 pop	 ebx

; 68   : 	}
; 69   : }

  00116	c9		 leave
  00117	c3		 ret	 0
?OnRender@GashaponPresentListBtn@@MAEXXZ ENDP		; GashaponPresentListBtn::OnRender
_TEXT	ENDS
PUBLIC	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??0?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE@XZ ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE@XZ PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE@XZ ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >
_TEXT	ENDS
PUBLIC	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z ; std::vector<int,std::allocator<int> >::_Buy
; Function compile flags: /Ogsp
;	COMDAT ?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z PROC	; std::vector<int,std::allocator<int> >::_Buy, COMDAT
; _this$ = ecx

; 1250 : 		{	// allocate array with _Capacity elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1251 : 		this->_Myfirst = 0;

  00004	33 c0		 xor	 eax, eax
  00006	57		 push	 edi

; 1252 : 		this->_Mylast = 0;
; 1253 : 		this->_Myend = 0;
; 1254 : 
; 1255 : 		if (_Capacity == 0)

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Capacity$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 06		 mov	 DWORD PTR [esi], eax
  0000e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00011	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00014	3b f8		 cmp	 edi, eax
  00016	75 04		 jne	 SHORT $LN4@Buy

; 1256 : 			return (false);

  00018	32 c0		 xor	 al, al
  0001a	eb 29		 jmp	 SHORT $LN5@Buy
$LN4@Buy:

; 1257 : 		else if (max_size() < _Capacity)

  0001c	81 ff ff ff ff
	3f		 cmp	 edi, 1073741823		; 3fffffffH
  00022	76 0b		 jbe	 SHORT $LN2@Buy

; 1258 : 			_Xlen();	// result too long

  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN19@Buy:
$LN2@Buy:

; 1259 : 		else
; 1260 : 			{	// nonempty array, allocate storage
; 1261 : 			this->_Myfirst = this->_Alval.allocate(_Capacity);

  0002f	50		 push	 eax
  00030	57		 push	 edi
  00031	e8 00 00 00 00	 call	 ??$_Allocate@H@std@@YAPAHIPAH@Z ; std::_Allocate<int>
  00036	89 06		 mov	 DWORD PTR [esi], eax

; 1262 : 			this->_Mylast = this->_Myfirst;

  00038	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1263 : 			this->_Myend = this->_Myfirst + _Capacity;

  0003b	8d 04 b8	 lea	 eax, DWORD PTR [eax+edi*4]
  0003e	59		 pop	 ecx
  0003f	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00042	59		 pop	 ecx

; 1264 : 			}
; 1265 : 		return (true);

  00043	b0 01		 mov	 al, 1
$LN5@Buy:
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi

; 1266 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN18@Buy:
?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z ENDP	; std::vector<int,std::allocator<int> >::_Buy
_TEXT	ENDS
PUBLIC	?begin@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@XZ ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@XZ PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@XZ ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@XZ ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@XZ PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@XZ ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::end
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iter
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@@Z PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@@Z ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Make_iter
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> > >::operator!=
_TEXT	ENDS
PUBLIC	??$_Ucopy@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Ucopy<int *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Ucopy@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$509746 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Ucopy@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z PROC ; std::vector<int,std::allocator<int> >::_Ucopy<int *>, COMDAT
; _this$ = ecx

; 1315 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1316 : 		{	// copy initializing [_First, _Last), using allocator
; 1317 : 		return (_Uninitialized_copy(_First, _Last,
; 1318 : 			_Ptr, this->_Alval));

  00003	ff 75 10	 push	 DWORD PTR __Cat$509746[ebp]
  00006	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00009	51		 push	 ecx
  0000a	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00010	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00013	e8 00 00 00 00	 call	 ??$_Uninit_copy@HH@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<int,int>
  00018	83 c4 14	 add	 esp, 20			; 00000014H

; 1319 : 		}

  0001b	5d		 pop	 ebp
  0001c	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ENDP ; std::vector<int,std::allocator<int> >::_Ucopy<int *>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@AAU34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z ; std::_Cons_val<std::allocator<GashaponPresentListWnd::GashaponPresentInfo>,GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@AAU34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@AAU34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z$0
__ehfuncinfo$??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@AAU34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@AAU34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@AAU34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z
_TEXT	SEGMENT
$T509768 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@AAU34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z PROC ; std::_Cons_val<std::allocator<GashaponPresentListWnd::GashaponPresentInfo>,GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@AAU34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  0000f	89 4d f0	 mov	 DWORD PTR $T509768[ebp], ecx
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 c9		 test	 ecx, ecx
  00018	74 08		 je	 SHORT $LN7@Cons_val
  0001a	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z
$LN7@Cons_val:

; 281  : 	}

  00022	e8 00 00 00 00	 call	 __EH_epilog3
  00027	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@AAU34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z$0:
  00000	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T509768[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@AAU34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@AAU34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@AAU34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z ENDP ; std::_Cons_val<std::allocator<GashaponPresentListWnd::GashaponPresentInfo>,GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo &>
PUBLIC	??$_Move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00@Z ; std::_Move<GashaponPresentListWnd::GashaponPresentInfo *,GashaponPresentListWnd::GashaponPresentInfo *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00@Z
_TEXT	SEGMENT
__Cat$509788 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00@Z PROC ; std::_Move<GashaponPresentListWnd::GashaponPresentInfo *,GashaponPresentListWnd::GashaponPresentInfo *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$509788[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<GashaponPresentListWnd::GashaponPresentInfo *,GashaponPresentListWnd::GashaponPresentInfo *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00@Z ENDP ; std::_Move<GashaponPresentListWnd::GashaponPresentInfo *,GashaponPresentListWnd::GashaponPresentInfo *>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU34@@Z ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::construct
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU34@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU34@@Z PROC ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  00006	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00009	e8 00 00 00 00	 call	 ??$_Construct@UGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z ; std::_Construct<GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo const &>
  0000e	59		 pop	 ecx
  0000f	59		 pop	 ecx

; 198  : 		}

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
?construct@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU34@@Z ENDP ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@@Z ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::destroy
; Function compile flags: /Ogsp
;	COMDAT ?destroy@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@@Z PROC ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 213  : 		_Destroy(_Ptr);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ

; 214  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?destroy@?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@QAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@@Z ENDP ; std::allocator<GashaponPresentListWnd::GashaponPresentInfo>::destroy
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@U34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU23@@Z ; std::_Cons_val<std::allocator<GashaponPresentListWnd::GashaponPresentInfo>,GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@U34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@U34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU23@@Z$0
__ehfuncinfo$??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@U34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@U34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@U34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU23@@Z
_TEXT	SEGMENT
$T509823 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@U34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU23@@Z PROC ; std::_Cons_val<std::allocator<GashaponPresentListWnd::GashaponPresentInfo>,GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo>, COMDAT

; 279  : 	{	// construct using allocator

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@U34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU23@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  0000f	89 4d f0	 mov	 DWORD PTR $T509823[ebp], ecx
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 c9		 test	 ecx, ecx
  00018	74 08		 je	 SHORT $LN7@Cons_val@2
  0001a	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@ABU01@@Z
$LN7@Cons_val@2:

; 281  : 	}

  00022	e8 00 00 00 00	 call	 __EH_epilog3
  00027	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@U34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU23@@Z$0:
  00000	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T509823[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@U34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU23@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@U34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU23@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@U34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU23@@Z ENDP ; std::_Cons_val<std::allocator<GashaponPresentListWnd::GashaponPresentInfo>,GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo>
PUBLIC	??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1988 : 		{	// initialize buffer, deallocating any storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1989 : 		if (!_Built)

  00003	80 7d 08 00	 cmp	 BYTE PTR __Built$[ebp], 0
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	74 20		 je	 SHORT $LN9@Tidy

; 1990 : 			;
; 1991 : 		else if (this->_BUF_SIZE <= this->_Myres)

  00010	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00014	72 1a		 jb	 SHORT $LN9@Tidy

; 1992 : 			{	// copy any leftovers to small buffer and deallocate
; 1993 : 			_Elem *_Ptr = this->_Bx._Ptr;

  00016	53		 push	 ebx
  00017	8b 1e		 mov	 ebx, DWORD PTR [esi]

; 1994 : 			if (0 < _Newsize)

  00019	85 ff		 test	 edi, edi
  0001b	74 0b		 je	 SHORT $LN7@Tidy

; 1995 : 				_Traits::copy(this->_Bx._Buf, _Ptr, _Newsize);

  0001d	57		 push	 edi
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	e8 00 00 00 00	 call	 _memcpy
  00025	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@Tidy:

; 1996 : 			this->_Alval.deallocate(_Ptr, this->_Myres + 1);

  00028	53		 push	 ebx
  00029	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002e	59		 pop	 ecx
  0002f	5b		 pop	 ebx
$LN9@Tidy:

; 1997 : 			}
; 1998 : 		this->_Myres = this->_BUF_SIZE - 1;
; 1999 : 		_Eos(_Newsize);

  00030	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  00033	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  0003a	c6 04 37 00	 mov	 BYTE PTR [edi+esi], 0
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi

; 2000 : 		}

  00040	5d		 pop	 ebp
  00041	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1109 : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1110 : 		if (this->_Mysize < _Off)

  00007	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  0000d	3b c1		 cmp	 eax, ecx
  0000f	73 0b		 jae	 SHORT $LN3@erase

; 1111 : 			_Xran();	// _Off off end

  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN28@erase:
$LN3@erase:

; 1112 : 		if (this->_Mysize - _Off < _Count)

  0001c	8b 5d 0c	 mov	 ebx, DWORD PTR __Count$[ebp]
  0001f	2b c1		 sub	 eax, ecx
  00021	3b c3		 cmp	 eax, ebx

; 1113 : 			_Count = this->_Mysize - _Off;	// trim _Count

  00023	0f 42 d8	 cmovb	 ebx, eax

; 1114 : 		if (0 < _Count)

  00026	85 db		 test	 ebx, ebx
  00028	74 47		 je	 SHORT $LN25@erase

; 1115 : 			{	// move elements down
; 1116 : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 1117 : 				this->_Mysize - _Off - _Count);

  0002a	8b 56 14	 mov	 edx, DWORD PTR [esi+20]
  0002d	57		 push	 edi
  0002e	83 fa 10	 cmp	 edx, 16			; 00000010H
  00031	72 04		 jb	 SHORT $LN11@erase
  00033	8b 3e		 mov	 edi, DWORD PTR [esi]
  00035	eb 02		 jmp	 SHORT $LN12@erase
$LN11@erase:
  00037	8b fe		 mov	 edi, esi
$LN12@erase:
  00039	83 fa 10	 cmp	 edx, 16			; 00000010H
  0003c	72 04		 jb	 SHORT $LN15@erase
  0003e	8b 16		 mov	 edx, DWORD PTR [esi]
  00040	eb 02		 jmp	 SHORT $LN16@erase
$LN15@erase:
  00042	8b d6		 mov	 edx, esi
$LN16@erase:
  00044	2b c3		 sub	 eax, ebx
  00046	03 f9		 add	 edi, ecx
  00048	50		 push	 eax
  00049	03 fb		 add	 edi, ebx
  0004b	03 d1		 add	 edx, ecx
  0004d	57		 push	 edi
  0004e	52		 push	 edx
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove

; 1118 : 			size_type _Newsize = this->_Mysize - _Count;

  00055	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00058	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005b	2b c3		 sub	 eax, ebx

; 1119 : 			_Eos(_Newsize);

  0005d	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00061	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00064	5f		 pop	 edi
  00065	72 04		 jb	 SHORT $LN23@erase
  00067	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00069	eb 02		 jmp	 SHORT $LN24@erase
$LN23@erase:
  0006b	8b ce		 mov	 ecx, esi
$LN24@erase:
  0006d	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0
$LN25@erase:

; 1120 : 			}
; 1121 : 		return (*this);

  00071	8b c6		 mov	 eax, esi
  00073	5e		 pop	 esi
  00074	5b		 pop	 ebx

; 1122 : 		}

  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
$LN27@erase:
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Destroy
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<int,std::allocator<int> > >::operator!=
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
EXTRN	__EH_prolog3_catch:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
tv296 = -20						; size = 4
__Newres$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1919 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	6a 0c		 push	 12			; 0000000cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 e8	 mov	 DWORD PTR _this$[ebp], esi

; 1920 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

  00011	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  00014	83 cf 0f	 or	 edi, 15			; 0000000fH

; 1921 : 		if (max_size() < _Newres)

  00017	83 ff fe	 cmp	 edi, -2			; fffffffeH
  0001a	76 05		 jbe	 SHORT $LN9@Copy

; 1922 : 			_Newres = _Newsize;	// undo roundup if too big

  0001c	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0001f	eb 27		 jmp	 SHORT $LN5@Copy
$LN9@Copy:

; 1923 : 		else if (this->_Myres / 2 <= _Newres / 3)

  00021	33 d2		 xor	 edx, edx
  00023	6a 03		 push	 3
  00025	8b c7		 mov	 eax, edi
  00027	5b		 pop	 ebx
  00028	f7 f3		 div	 ebx
  0002a	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0002d	89 4d ec	 mov	 DWORD PTR tv296[ebp], ecx
  00030	d1 6d ec	 shr	 DWORD PTR tv296[ebp], 1
  00033	8b 55 ec	 mov	 edx, DWORD PTR tv296[ebp]
  00036	3b d0		 cmp	 edx, eax
  00038	76 0e		 jbe	 SHORT $LN5@Copy

; 1924 : 			;
; 1925 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

  0003a	6a fe		 push	 -2			; fffffffeH
  0003c	5f		 pop	 edi
  0003d	8b c7		 mov	 eax, edi
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	77 03		 ja	 SHORT $LN5@Copy

; 1926 : 			_Newres = this->_Myres
; 1927 : 				+ this->_Myres / 2;	// grow exponentially if possible

  00045	8d 3c 0a	 lea	 edi, DWORD PTR [edx+ecx]
$LN5@Copy:

; 1928 : 		else
; 1929 : 			_Newres = max_size();	// settle for max_size()
; 1930 : 
; 1931 : 		_Elem *_Ptr;
; 1932 : 		_TRY_BEGIN

  00048	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0

; 1933 : 			_Ptr = this->_Alval.allocate(_Newres + 1);

  0004c	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  0004f	6a 00		 push	 0
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ??$_Allocate@D@std@@YAPADIPAD@Z ; std::_Allocate<char>
  00057	59		 pop	 ecx
  00058	59		 pop	 ecx
  00059	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  0005c	eb 27		 jmp	 SHORT $LN19@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 1934 : 		_CATCH_ALL
; 1935 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  0005e	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00061	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00064	89 45 ec	 mov	 DWORD PTR __Newres$[ebp], eax

; 1936 : 			_TRY_BEGIN
; 1937 : 				_Ptr = this->_Alval.allocate(_Newres + 1);

  00067	40		 inc	 eax
  00068	6a 00		 push	 0
  0006a	50		 push	 eax
  0006b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  0006f	e8 00 00 00 00	 call	 ??$_Allocate@D@std@@YAPADIPAD@Z ; std::_Allocate<char>
  00074	59		 pop	 ecx
  00075	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  00078	59		 pop	 ecx

; 1941 : 			_CATCH_END
; 1942 : 		_CATCH_END

  00079	b8 00 00 00 00	 mov	 eax, $LN63@Copy
  0007e	c3		 ret	 0
$LN63@Copy:
  0007f	8b 75 e8	 mov	 esi, DWORD PTR _this$[ebp]
  00082	8b 7d ec	 mov	 edi, DWORD PTR __Newres$[ebp]
$LN19@Copy:

; 1943 : 
; 1944 : 		if (0 < _Oldlen)

  00085	8b 5d 0c	 mov	 ebx, DWORD PTR __Oldlen$[ebp]
  00088	85 db		 test	 ebx, ebx
  0008a	74 19		 je	 SHORT $LN52@Copy

; 1945 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  0008c	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00090	72 04		 jb	 SHORT $LN50@Copy
  00092	8b 06		 mov	 eax, DWORD PTR [esi]
  00094	eb 02		 jmp	 SHORT $LN51@Copy
$LN50@Copy:
  00096	8b c6		 mov	 eax, esi
$LN51@Copy:
  00098	53		 push	 ebx
  00099	50		 push	 eax
  0009a	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  0009d	e8 00 00 00 00	 call	 _memcpy
  000a2	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN52@Copy:

; 1946 : 		_Tidy(true);

  000a5	6a 00		 push	 0
  000a7	6a 01		 push	 1
  000a9	8b ce		 mov	 ecx, esi
  000ab	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 1947 : 		this->_Bx._Ptr = _Ptr;

  000b0	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000b3	89 06		 mov	 DWORD PTR [esi], eax

; 1948 : 		this->_Myres = _Newres;
; 1949 : 		_Eos(_Oldlen);

  000b5	83 ff 10	 cmp	 edi, 16			; 00000010H
  000b8	89 7e 14	 mov	 DWORD PTR [esi+20], edi
  000bb	89 5e 10	 mov	 DWORD PTR [esi+16], ebx
  000be	0f 42 c6	 cmovb	 eax, esi
  000c1	c6 04 18 00	 mov	 BYTE PTR [eax+ebx], 0

; 1950 : 		}

  000c5	e8 00 00 00 00	 call	 __EH_epilog3
  000ca	c2 08 00	 ret	 8
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 1938 : 			_CATCH_ALL
; 1939 : 			_Tidy(true);	// failed again, discard storage and reraise

  000cd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	33 f6		 xor	 esi, esi
  000d2	56		 push	 esi
  000d3	6a 01		 push	 1
  000d5	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 1940 : 			_RERAISE;

  000da	56		 push	 esi
  000db	56		 push	 esi
  000dc	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN67@Copy:
$LN66@Copy:
  000e1	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@ABU34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@ABU23@@Z ; std::_Cons_val<std::allocator<GashaponPresentListWnd::GashaponPresentInfo>,GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@ABU34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@ABU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@ABU34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@ABU23@@Z PROC ; std::_Cons_val<std::allocator<GashaponPresentListWnd::GashaponPresentInfo>,GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  00006	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  00009	e8 00 00 00 00	 call	 ??$_Construct@UGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z ; std::_Construct<GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo const &>
  0000e	59		 pop	 ecx
  0000f	59		 pop	 ecx

; 281  : 	}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@ABU34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@ABU23@@Z ENDP ; std::_Cons_val<std::allocator<GashaponPresentListWnd::GashaponPresentInfo>,GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo const &>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@@Z ; std::_Dest_val<std::allocator<GashaponPresentListWnd::GashaponPresentInfo>,GashaponPresentListWnd::GashaponPresentInfo>
; Function compile flags: /Ogsp
;	COMDAT ??$_Dest_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@@Z PROC ; std::_Dest_val<std::allocator<GashaponPresentListWnd::GashaponPresentInfo>,GashaponPresentListWnd::GashaponPresentInfo>, COMDAT

; 286  : 	{	// destroy using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]

; 288  : 	}

  00006	5d		 pop	 ebp

; 287  : 	_Alval.destroy(_Pdest);

  00007	e9 00 00 00 00	 jmp	 ??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
??$_Dest_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@@Z ENDP ; std::_Dest_val<std::allocator<GashaponPresentListWnd::GashaponPresentInfo>,GashaponPresentListWnd::GashaponPresentInfo>
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 754  : 		_Tidy(true);

  00000	6a 00		 push	 0
  00002	6a 01		 push	 1
  00004	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 755  : 		}

  00009	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$510197 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z PROC ; std::vector<int,std::allocator<int> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __First_arg$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	8b f1		 mov	 esi, ecx
  0000d	89 07		 mov	 DWORD PTR [edi], eax

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 45 10	 cmp	 eax, DWORD PTR __Last_arg$[ebp]
  00012	74 16		 je	 SHORT $LN1@erase@2

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	ff 75 10	 push	 DWORD PTR __Cat$510197[ebp]
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  0001f	e8 00 00 00 00	 call	 ??$_Move@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<int *,int *>
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

  00027	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN1@erase@2:

; 1212 : 			}
; 1213 : 		return (_First);

  0002a	8b c7		 mov	 eax, edi
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi

; 1214 : 		}

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z ENDP ; std::vector<int,std::allocator<int> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ PROC	; std::vector<int,std::allocator<int> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN12@Tidy@2

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN12@Tidy@2:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ENDP	; std::vector<int,std::allocator<int> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1959 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1960 : 		if (max_size() < _Newsize)

  00004	8b 75 08	 mov	 esi, DWORD PTR __Newsize$[ebp]
  00007	83 fe fe	 cmp	 esi, -2			; fffffffeH
  0000a	76 0b		 jbe	 SHORT $LN6@Grow

; 1961 : 			_Xlen();	// result too long

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN31@Grow:
$LN6@Grow:

; 1962 : 		if (this->_Myres < _Newsize)

  00017	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  0001a	3b c6		 cmp	 eax, esi
  0001c	73 0b		 jae	 SHORT $LN5@Grow

; 1963 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

  0001e	ff 71 10	 push	 DWORD PTR [ecx+16]
  00021	56		 push	 esi
  00022	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00027	eb 2e		 jmp	 SHORT $LN28@Grow
$LN5@Grow:

; 1964 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

  00029	33 d2		 xor	 edx, edx
  0002b	38 55 0c	 cmp	 BYTE PTR __Trim$[ebp], dl
  0002e	74 17		 je	 SHORT $LN3@Grow
  00030	83 fe 10	 cmp	 esi, 16			; 00000010H
  00033	73 12		 jae	 SHORT $LN3@Grow

; 1965 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1966 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

  00035	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00038	3b f0		 cmp	 esi, eax
  0003a	0f 42 c6	 cmovb	 eax, esi
  0003d	50		 push	 eax
  0003e	6a 01		 push	 1
  00040	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  00045	eb 10		 jmp	 SHORT $LN28@Grow
$LN3@Grow:

; 1967 : 		else if (_Newsize == 0)

  00047	3b f2		 cmp	 esi, edx
  00049	75 0c		 jne	 SHORT $LN28@Grow

; 1968 : 			_Eos(0);	// new size is zero, just null terminate

  0004b	89 51 10	 mov	 DWORD PTR [ecx+16], edx
  0004e	83 f8 10	 cmp	 eax, 16			; 00000010H
  00051	72 02		 jb	 SHORT $LN26@Grow
  00053	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN26@Grow:
  00055	88 11		 mov	 BYTE PTR [ecx], dl
$LN28@Grow:

; 1969 : 		return (0 < _Newsize);	// return true only if more work to do

  00057	33 c0		 xor	 eax, eax
  00059	3b c6		 cmp	 eax, esi
  0005b	1b c0		 sbb	 eax, eax
  0005d	f7 d8		 neg	 eax
  0005f	5e		 pop	 esi

; 1970 : 		}

  00060	5d		 pop	 ebp
  00061	c2 08 00	 ret	 8
$LN30@Grow:
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	6a 00		 push	 0
  00006	6a 01		 push	 1
  00008	8b f1		 mov	 esi, ecx
  0000a	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  0000f	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00013	74 07		 je	 SHORT $LN1@scalar@3
  00015	56		 push	 esi
  00016	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001b	59		 pop	 ecx
$LN1@scalar@3:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@0AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@0AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@0AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >, COMDAT

; 95   : 	{	// destroy [_First, _Last), arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 96   : 	for (; _First != _Last; ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0a		 jmp	 SHORT $LN17@Destroy_ra
$LL3@Destroy_ra:

; 97   : 		_Dest_val(_Al, _First);

  00009	8b ce		 mov	 ecx, esi
  0000b	e8 00 00 00 00	 call	 ??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
  00010	83 c6 30	 add	 esi, 48			; 00000030H
$LN17@Destroy_ra:

; 96   : 	for (; _First != _Last; ++_First)

  00013	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00016	75 f1		 jne	 SHORT $LL3@Destroy_ra
  00018	5e		 pop	 esi

; 98   : 	}

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??$_Destroy_range@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@0AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@U12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<GashaponPresentListWnd::GashaponPresentInfo *,GashaponPresentListWnd::GashaponPresentInfo *,std::allocator<GashaponPresentListWnd::GashaponPresentInfo>,GashaponPresentListWnd::GashaponPresentInfo>
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@U12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@U12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@U12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@U12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@U12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@U12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@U12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@U12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@U12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@U12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<GashaponPresentListWnd::GashaponPresentInfo *,GashaponPresentListWnd::GashaponPresentInfo *,std::allocator<GashaponPresentListWnd::GashaponPresentInfo>,GashaponPresentListWnd::GashaponPresentInfo>, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Uninit_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@U12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;

  0000c	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 428  : 
; 429  : 	_TRY_BEGIN

  0000f	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00013	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00016	89 45 ec	 mov	 DWORD PTR __Next$[ebp], eax
$LL6@Uninit_mov:

; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  00019	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  0001c	74 35		 je	 SHORT $LN4@Uninit_mov

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

  0001e	56		 push	 esi
  0001f	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00022	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  00025	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@U34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@$$QAU23@@Z ; std::_Cons_val<std::allocator<GashaponPresentListWnd::GashaponPresentInfo>,GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo>
  0002a	83 45 10 30	 add	 DWORD PTR __Dest$[ebp], 48 ; 00000030H
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00031	83 c6 30	 add	 esi, 48			; 00000030H
  00034	eb e3		 jmp	 SHORT $LL6@Uninit_mov
__catch$??$_Uninit_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@U12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)

  00036	8b 75 ec	 mov	 esi, DWORD PTR __Next$[ebp]
  00039	eb 0a		 jmp	 SHORT $LN29@Uninit_mov
$LL3@Uninit_mov:

; 434  : 		_Dest_val(_Al, _Next);

  0003b	8b ce		 mov	 ecx, esi
  0003d	e8 00 00 00 00	 call	 ??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
  00042	83 c6 30	 add	 esi, 48			; 00000030H
$LN29@Uninit_mov:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)

  00045	3b 75 10	 cmp	 esi, DWORD PTR __Dest$[ebp]
  00048	75 f1		 jne	 SHORT $LL3@Uninit_mov

; 435  : 	_RERAISE;

  0004a	6a 00		 push	 0
  0004c	6a 00		 push	 0
  0004e	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN30@Uninit_mov:
$LN4@Uninit_mov:

; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

  00053	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 438  : 	}

  00056	e8 00 00 00 00	 call	 __EH_epilog3
  0005b	c3		 ret	 0
$LN28@Uninit_mov:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@U12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@U12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@U12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<GashaponPresentListWnd::GashaponPresentInfo *,GashaponPresentListWnd::GashaponPresentInfo *,std::allocator<GashaponPresentListWnd::GashaponPresentInfo>,GashaponPresentListWnd::GashaponPresentInfo>
PUBLIC	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ ; std::vector<int,std::allocator<int> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T510423 = -4						; size = 4
?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ PROC	; std::vector<int,std::allocator<int> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T510423[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ ENDP	; std::vector<int,std::allocator<int> >::clear
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 893  : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 894  : 		if (_Right.size() < _Roff)

  00004	8b 5d 08	 mov	 ebx, DWORD PTR __Right$[ebp]
  00007	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR __Roff$[ebp]
  00010	57		 push	 edi
  00011	3b c1		 cmp	 eax, ecx
  00013	73 0b		 jae	 SHORT $LN5@assign

; 895  : 			_Xran();	// _Roff off end

  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN34@assign:
$LN5@assign:

; 896  : 		size_type _Num = _Right.size() - _Roff;

  00020	2b c1		 sub	 eax, ecx
  00022	8b f8		 mov	 edi, eax

; 897  : 		if (_Count < _Num)

  00024	39 7d 10	 cmp	 DWORD PTR __Count$[ebp], edi

; 898  : 			_Num = _Count;	// trim _Num to size

  00027	0f 42 7d 10	 cmovb	 edi, DWORD PTR __Count$[ebp]

; 899  : 
; 900  : 		if (this == &_Right)

  0002b	3b f3		 cmp	 esi, ebx
  0002d	75 1a		 jne	 SHORT $LN3@assign

; 901  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

  0002f	03 f9		 add	 edi, ecx
  00031	6a ff		 push	 -1
  00033	57		 push	 edi
  00034	8b ce		 mov	 ecx, esi
  00036	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  0003b	ff 75 0c	 push	 DWORD PTR __Roff$[ebp]
  0003e	8b ce		 mov	 ecx, esi
  00040	6a 00		 push	 0
  00042	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00047	eb 47		 jmp	 SHORT $LN31@assign
$LN3@assign:

; 902  : 		else if (_Grow(_Num))

  00049	6a 00		 push	 0
  0004b	57		 push	 edi
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  00053	84 c0		 test	 al, al
  00055	74 39		 je	 SHORT $LN31@assign

; 903  : 			{	// make room and assign new stuff
; 904  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

  00057	83 7b 14 10	 cmp	 DWORD PTR [ebx+20], 16	; 00000010H
  0005b	72 04		 jb	 SHORT $LN17@assign
  0005d	8b 03		 mov	 eax, DWORD PTR [ebx]
  0005f	eb 02		 jmp	 SHORT $LN18@assign
$LN17@assign:
  00061	8b c3		 mov	 eax, ebx
$LN18@assign:
  00063	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00067	72 04		 jb	 SHORT $LN21@assign
  00069	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0006b	eb 02		 jmp	 SHORT $LN22@assign
$LN21@assign:
  0006d	8b ce		 mov	 ecx, esi
$LN22@assign:
  0006f	03 45 0c	 add	 eax, DWORD PTR __Roff$[ebp]
  00072	57		 push	 edi
  00073	50		 push	 eax
  00074	51		 push	 ecx
  00075	e8 00 00 00 00	 call	 _memcpy
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 905  : 			_Eos(_Num);

  0007d	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00081	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  00084	72 04		 jb	 SHORT $LN29@assign
  00086	8b 06		 mov	 eax, DWORD PTR [esi]
  00088	eb 02		 jmp	 SHORT $LN30@assign
$LN29@assign:
  0008a	8b c6		 mov	 eax, esi
$LN30@assign:
  0008c	c6 04 38 00	 mov	 BYTE PTR [eax+edi], 0
$LN31@assign:

; 906  : 			}
; 907  : 		return (*this);

  00090	5f		 pop	 edi
  00091	8b c6		 mov	 eax, esi
  00093	5e		 pop	 esi
  00094	5b		 pop	 ebx

; 908  : 		}

  00095	5d		 pop	 ebp
  00096	c2 0c 00	 ret	 12			; 0000000cH
$LN33@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogsp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 911  : 		{	// assign [_Ptr, _Ptr + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 912  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 913  : 		if (_Count != 0)
; 914  : 			_DEBUG_POINTER(_Ptr);
; 915  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 916  : 
; 917  : 		if (_Inside(_Ptr))

  00004	8b 5d 08	 mov	 ebx, DWORD PTR __Ptr$[ebp]
  00007	56		 push	 esi
  00008	53		 push	 ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
  00010	84 c0		 test	 al, al
  00012	74 1c		 je	 SHORT $LN2@assign@2

; 918  : 			return (assign(*this, _Ptr - _Myptr(), _Count));	// substring

  00014	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00018	72 04		 jb	 SHORT $LN7@assign@2
  0001a	8b 06		 mov	 eax, DWORD PTR [esi]
  0001c	eb 02		 jmp	 SHORT $LN8@assign@2
$LN7@assign@2:
  0001e	8b c6		 mov	 eax, esi
$LN8@assign@2:
  00020	ff 75 0c	 push	 DWORD PTR __Count$[ebp]
  00023	2b d8		 sub	 ebx, eax
  00025	53		 push	 ebx
  00026	56		 push	 esi
  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0002e	eb 3f		 jmp	 SHORT $LN3@assign@2
$LN2@assign@2:
  00030	57		 push	 edi

; 919  : 
; 920  : 		if (_Grow(_Count))

  00031	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  00034	6a 00		 push	 0
  00036	57		 push	 edi
  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  0003e	84 c0		 test	 al, al
  00040	74 2a		 je	 SHORT $LN21@assign@2

; 921  : 			{	// make room and assign new stuff
; 922  : 			_Traits::copy(_Myptr(), _Ptr, _Count);

  00042	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00046	72 04		 jb	 SHORT $LN11@assign@2
  00048	8b 06		 mov	 eax, DWORD PTR [esi]
  0004a	eb 02		 jmp	 SHORT $LN12@assign@2
$LN11@assign@2:
  0004c	8b c6		 mov	 eax, esi
$LN12@assign@2:
  0004e	57		 push	 edi
  0004f	53		 push	 ebx
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 _memcpy
  00056	83 c4 0c	 add	 esp, 12			; 0000000cH

; 923  : 			_Eos(_Count);

  00059	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  0005d	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  00060	72 04		 jb	 SHORT $LN19@assign@2
  00062	8b 06		 mov	 eax, DWORD PTR [esi]
  00064	eb 02		 jmp	 SHORT $LN20@assign@2
$LN19@assign@2:
  00066	8b c6		 mov	 eax, esi
$LN20@assign@2:
  00068	c6 04 38 00	 mov	 BYTE PTR [eax+edi], 0
$LN21@assign@2:

; 924  : 			}
; 925  : 		return (*this);

  0006c	8b c6		 mov	 eax, esi
  0006e	5f		 pop	 edi
$LN3@assign@2:
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx

; 926  : 		}

  00071	5d		 pop	 ebp
  00072	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 62   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	_Ptr->~_Ty();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	6a 00		 push	 0
  00008	6a 01		 push	 1
  0000a	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 64   : 	}

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??4?$vector@HV?$allocator@H@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<int,std::allocator<int> >::operator=
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??4?$vector@HV?$allocator@H@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Cat$510825 = 8					; size = 1
__Cat$510765 = 8					; size = 1
__Cat$510743 = 8					; size = 1
__Cat$510688 = 8					; size = 1
$T510655 = 8						; size = 4
__Right$ = 8						; size = 4
??4?$vector@HV?$allocator@H@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::vector<int,std::allocator<int> >::operator=, COMDAT
; _this$ = ecx

; 709  : 		{	// assign _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 710  : 		if (this != &_Right)

  00005	8b 7d 08	 mov	 edi, DWORD PTR __Right$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	3b f7		 cmp	 esi, edi
  0000c	0f 84 c7 00 00
	00		 je	 $LN1@operator@2

; 711  : 			{	// worth doing
; 712  : 			this->_Orphan_all();

  00012	53		 push	 ebx
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 713  : 
; 714  : 			if (_Right.size() == 0)

  00019	8b 5f 04	 mov	 ebx, DWORD PTR [edi+4]

; 715  : 				clear();	// new sequence empty, erase existing sequence

  0001c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001f	8b cb		 mov	 ecx, ebx
  00021	2b 0f		 sub	 ecx, DWORD PTR [edi]
  00023	c1 f9 02	 sar	 ecx, 2
  00026	85 c9		 test	 ecx, ecx
  00028	75 14		 jne	 SHORT $LN8@operator@2
  0002a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0002c	50		 push	 eax
  0002d	51		 push	 ecx
  0002e	8d 45 08	 lea	 eax, DWORD PTR $T510655[ebp]
  00031	50		 push	 eax
  00032	8b ce		 mov	 ecx, esi
  00034	e8 00 00 00 00	 call	 ?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@HV?$allocator@H@std@@@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase

; 716  : 			else if (_Right.size() <= size())

  00039	e9 9a 00 00 00	 jmp	 $LN84@operator@2
$LN8@operator@2:
  0003e	8b 16		 mov	 edx, DWORD PTR [esi]
  00040	2b c2		 sub	 eax, edx
  00042	c1 f8 02	 sar	 eax, 2
  00045	3b c8		 cmp	 ecx, eax
  00047	77 1e		 ja	 SHORT $LN6@operator@2

; 717  : 				{	// enough elements, copy new and destroy old
; 718  : 				pointer _Ptr = _STD _Copy_impl(_Right._Myfirst, _Right._Mylast,
; 719  : 					this->_Myfirst);	// copy new

  00049	ff 75 08	 push	 DWORD PTR __Cat$510688[ebp]
  0004c	52		 push	 edx
  0004d	53		 push	 ebx
  0004e	ff 37		 push	 DWORD PTR [edi]
  00050	e8 00 00 00 00	 call	 ??$_Copy_impl@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<int *,int *>

; 720  : 				_Destroy(_Ptr, this->_Mylast);	// destroy old
; 721  : 				this->_Mylast = this->_Myfirst + _Right.size();

  00055	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00058	2b 07		 sub	 eax, DWORD PTR [edi]
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	83 c4 10	 add	 esp, 16			; 00000010H
  0005f	c1 f8 02	 sar	 eax, 2
  00062	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]

; 722  : 				}
; 723  : 			else if (_Right.size() <= capacity())

  00065	eb 6e		 jmp	 SHORT $LN85@operator@2
$LN6@operator@2:
  00067	8b 5e 08	 mov	 ebx, DWORD PTR [esi+8]
  0006a	2b da		 sub	 ebx, edx
  0006c	c1 fb 02	 sar	 ebx, 2
  0006f	3b cb		 cmp	 ecx, ebx
  00071	77 2a		 ja	 SHORT $LN4@operator@2

; 724  : 				{	// enough room, copy and construct new
; 725  : 				pointer _Ptr = _Right._Myfirst + size();
; 726  : 				_STD _Copy_impl(_Right._Myfirst, _Ptr, this->_Myfirst);

  00073	ff 75 08	 push	 DWORD PTR __Cat$510743[ebp]
  00076	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00078	52		 push	 edx
  00079	8d 1c 81	 lea	 ebx, DWORD PTR [ecx+eax*4]
  0007c	53		 push	 ebx
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ??$_Copy_impl@PAHPAH@std@@YAPAHPAH00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<int *,int *>

; 727  : 				this->_Mylast = _Ucopy(_Ptr, _Right._Mylast, this->_Mylast);

  00083	ff 75 08	 push	 DWORD PTR __Cat$510765[ebp]
  00086	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00089	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  0008c	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0008f	51		 push	 ecx
  00090	50		 push	 eax
  00091	57		 push	 edi
  00092	53		 push	 ebx
  00093	e8 00 00 00 00	 call	 ??$_Uninit_copy@HH@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<int,int>
  00098	83 c4 24	 add	 esp, 36			; 00000024H

; 728  : 				}
; 729  : 			else

  0009b	eb 38		 jmp	 SHORT $LN85@operator@2
$LN4@operator@2:

; 730  : 				{	// not enough room, allocate new array and construct new
; 731  : 				if (this->_Myfirst != 0)

  0009d	85 d2		 test	 edx, edx
  0009f	74 07		 je	 SHORT $LN74@operator@2

; 732  : 					{	// discard old array
; 733  : 					_Destroy(this->_Myfirst, this->_Mylast);
; 734  : 					this->_Alval.deallocate(this->_Myfirst,
; 735  : 						this->_Myend - this->_Myfirst);

  000a1	52		 push	 edx
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000a7	59		 pop	 ecx
$LN74@operator@2:

; 736  : 					}
; 737  : 				if (_Buy(_Right.size()))

  000a8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000ab	2b 07		 sub	 eax, DWORD PTR [edi]
  000ad	8b ce		 mov	 ecx, esi
  000af	c1 f8 02	 sar	 eax, 2
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z ; std::vector<int,std::allocator<int> >::_Buy
  000b8	84 c0		 test	 al, al
  000ba	74 1c		 je	 SHORT $LN84@operator@2

; 738  : 					this->_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 739  : 						this->_Myfirst);

  000bc	ff 75 08	 push	 DWORD PTR __Cat$510825[ebp]
  000bf	8b 06		 mov	 eax, DWORD PTR [esi]
  000c1	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000c4	8b 3f		 mov	 edi, DWORD PTR [edi]
  000c6	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  000c9	52		 push	 edx
  000ca	50		 push	 eax
  000cb	51		 push	 ecx
  000cc	57		 push	 edi
  000cd	e8 00 00 00 00	 call	 ??$_Uninit_copy@HH@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<int,int>
  000d2	83 c4 14	 add	 esp, 20			; 00000014H
$LN85@operator@2:
  000d5	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN84@operator@2:
  000d8	5b		 pop	 ebx
$LN1@operator@2:
  000d9	5f		 pop	 edi

; 740  : 				}
; 741  : 			}
; 742  : 		return (*this);

  000da	8b c6		 mov	 eax, esi
  000dc	5e		 pop	 esi

; 743  : 		}

  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
??4?$vector@HV?$allocator@H@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::vector<int,std::allocator<int> >::operator=
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@0AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@@Z ; std::_Destroy_range<std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@0AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@0AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@@Z PROC ; std::_Destroy_range<std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >, COMDAT

; 87   : 	{	// destroy [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0a		 jmp	 SHORT $LN21@Destroy_ra@2
$LL7@Destroy_ra@2:
  00009	8b ce		 mov	 ecx, esi
  0000b	e8 00 00 00 00	 call	 ??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
  00010	83 c6 30	 add	 esi, 48			; 00000030H
$LN21@Destroy_ra@2:
  00013	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00016	75 f1		 jne	 SHORT $LL7@Destroy_ra@2
  00018	5e		 pop	 esi

; 89   : 	}

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??$_Destroy_range@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@0AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@@Z ; std::_Uninitialized_move<GashaponPresentListWnd::GashaponPresentInfo *,GashaponPresentListWnd::GashaponPresentInfo *,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@@Z
_TEXT	SEGMENT
__Cat$510893 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@@Z PROC ; std::_Uninitialized_move<GashaponPresentListWnd::GashaponPresentInfo *,GashaponPresentListWnd::GashaponPresentInfo *,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$510893[ebp]
  00007	6a 00		 push	 0
  00009	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000c	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00012	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00015	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@U12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<GashaponPresentListWnd::GashaponPresentInfo *,GashaponPresentListWnd::GashaponPresentInfo *,std::allocator<GashaponPresentListWnd::GashaponPresentInfo>,GashaponPresentListWnd::GashaponPresentInfo>
  0001a	83 c4 18	 add	 esp, 24			; 00000018H

; 472  : 	}

  0001d	c9		 leave
  0001e	c3		 ret	 0
??$_Uninitialized_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@@Z ENDP ; std::_Uninitialized_move<GashaponPresentListWnd::GashaponPresentInfo *,GashaponPresentListWnd::GashaponPresentInfo *,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 887  : 		{	// assign _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 888  : 		return (assign(_Right, 0, npos));

  00003	6a ff		 push	 -1
  00005	6a 00		 push	 0
  00007	ff 75 08	 push	 DWORD PTR __Right$[ebp]
  0000a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 889  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogsp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 929  : 		{	// assign [_Ptr, <null>)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 930  : 		_DEBUG_POINTER(_Ptr);
; 931  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  00009	53		 push	 ebx
$LL5@assign@3:
  0000a	8a 18		 mov	 bl, BYTE PTR [eax]
  0000c	40		 inc	 eax
  0000d	84 db		 test	 bl, bl
  0000f	75 f9		 jne	 SHORT $LL5@assign@3
  00011	2b c2		 sub	 eax, edx
  00013	50		 push	 eax
  00014	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00017	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0001c	5b		 pop	 ebx

; 932  : 		}

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 213  : 		_Destroy(_Ptr);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	6a 00		 push	 0
  00008	6a 01		 push	 1
  0000a	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 214  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
_TEXT	ENDS
PUBLIC	?SetPresentList@GashaponPresentListWnd@@SAXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z ; GashaponPresentListWnd::SetPresentList
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\gashaponpresentlistwnd.cpp
;	COMDAT ?SetPresentList@GashaponPresentListWnd@@SAXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z
_TEXT	SEGMENT
_rPresentTypeList$ = 8					; size = 4
_rPresentValue1List$ = 12				; size = 4
_rPresentValue2List$ = 16				; size = 4
_rPresentValue3List$ = 20				; size = 4
_rPresentValue4List$ = 24				; size = 4
?SetPresentList@GashaponPresentListWnd@@SAXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z PROC ; GashaponPresentListWnd::SetPresentList, COMDAT

; 420  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 421  : 	m_vPresentTypeList   = rPresentTypeList;

  00003	ff 75 08	 push	 DWORD PTR _rPresentTypeList$[ebp]
  00006	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_vPresentTypeList@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentTypeList
  0000b	e8 00 00 00 00	 call	 ??4?$vector@HV?$allocator@H@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<int,std::allocator<int> >::operator=

; 422  : 	m_vPresentValue1List = rPresentValue1List;

  00010	ff 75 0c	 push	 DWORD PTR _rPresentValue1List$[ebp]
  00013	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_vPresentValue1List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentValue1List
  00018	e8 00 00 00 00	 call	 ??4?$vector@HV?$allocator@H@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<int,std::allocator<int> >::operator=

; 423  : 	m_vPresentValue2List = rPresentValue2List;

  0001d	ff 75 10	 push	 DWORD PTR _rPresentValue2List$[ebp]
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_vPresentValue2List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentValue2List
  00025	e8 00 00 00 00	 call	 ??4?$vector@HV?$allocator@H@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<int,std::allocator<int> >::operator=

; 424  : 	m_vPresentValue3List = rPresentValue3List;

  0002a	ff 75 14	 push	 DWORD PTR _rPresentValue3List$[ebp]
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_vPresentValue3List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentValue3List
  00032	e8 00 00 00 00	 call	 ??4?$vector@HV?$allocator@H@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<int,std::allocator<int> >::operator=

; 425  : 	m_vPresentValue4List = rPresentValue4List;

  00037	ff 75 18	 push	 DWORD PTR _rPresentValue4List$[ebp]
  0003a	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_vPresentValue4List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentValue4List
  0003f	e8 00 00 00 00	 call	 ??4?$vector@HV?$allocator@H@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<int,std::allocator<int> >::operator=

; 426  : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?SetPresentList@GashaponPresentListWnd@@SAXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z ENDP ; GashaponPresentListWnd::SetPresentList
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@0@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@0@Z PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Destroy, COMDAT
; _this$ = ecx

; 1269 : 		{	// destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0a		 jmp	 SHORT $LN23@Destroy
$LL9@Destroy:
  00009	8b ce		 mov	 ecx, esi
  0000b	e8 00 00 00 00	 call	 ??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
  00010	83 c6 30	 add	 esi, 48			; 00000030H
$LN23@Destroy:
  00013	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00016	75 f1		 jne	 SHORT $LL9@Destroy
  00018	5e		 pop	 esi

; 1271 : 		}

  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?_Destroy@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEXPAUGashaponPresentInfo@GashaponPresentListWnd@@0@Z ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Destroy
_TEXT	ENDS
PUBLIC	??$_Umove@PAUGashaponPresentInfo@GashaponPresentListWnd@@@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU23@00@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Umove<GashaponPresentListWnd::GashaponPresentInfo *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Umove@PAUGashaponPresentInfo@GashaponPresentListWnd@@@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU23@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUGashaponPresentInfo@GashaponPresentListWnd@@@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU23@00@Z PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Umove<GashaponPresentListWnd::GashaponPresentInfo *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@@Z ; std::_Uninitialized_move<GashaponPresentListWnd::GashaponPresentInfo *,GashaponPresentListWnd::GashaponPresentInfo *,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAUGashaponPresentInfo@GashaponPresentListWnd@@@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU23@00@Z ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Umove<GashaponPresentListWnd::GashaponPresentInfo *>
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 592  : 		{	// construct from [_Ptr, <null>)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 593  : 		_Tidy();
; 594  : 		assign(_Ptr);

  00004	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	83 66 10 00	 and	 DWORD PTR [esi+16], 0
  0000d	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  00014	c6 06 00	 mov	 BYTE PTR [esi], 0
  00017	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 595  : 		}

  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Ogsp
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx

; 763  : 		{	// assign _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 764  : 		return (assign(_Right));

  00003	6a ff		 push	 -1
  00005	6a 00		 push	 0
  00007	ff 75 08	 push	 DWORD PTR __Right$[ebp]
  0000a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 765  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogsp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 713  : 		{	// assign by moving _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 714  : 		if (this == &_Right)

  00004	8b 75 08	 mov	 esi, DWORD PTR __Right$[ebp]
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	3b fe		 cmp	 edi, esi
  0000c	74 3c		 je	 SHORT $LN3@assign@4

; 715  : 			;
; 716  : 		else if (get_allocator() != _Right.get_allocator()
; 717  : 			&& this->_BUF_SIZE <= _Right._Myres)
; 718  : 			*this = _Right;
; 719  : 		else
; 720  : 			{	// not same, clear this and steal from _Right
; 721  : 			_Tidy(true);

  0000e	6a 00		 push	 0
  00010	6a 01		 push	 1
  00012	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 722  : 			if (_Right._Myres < this->_BUF_SIZE)

  00017	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  0001b	73 12		 jae	 SHORT $LN2@assign@4

; 723  : 				_Traits::move(this->_Bx._Buf, _Right._Bx._Buf,
; 724  : 					_Right._Mysize + 1);

  0001d	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00020	40		 inc	 eax
  00021	50		 push	 eax
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0002a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 725  : 			else

  0002d	eb 07		 jmp	 SHORT $LN1@assign@4
$LN2@assign@4:

; 726  : 				{	// copy pointer
; 727  : 				this->_Bx._Ptr = _Right._Bx._Ptr;

  0002f	8b 06		 mov	 eax, DWORD PTR [esi]
  00031	89 07		 mov	 DWORD PTR [edi], eax

; 728  : 				_Right._Bx._Ptr = 0;

  00033	83 26 00	 and	 DWORD PTR [esi], 0
$LN1@assign@4:

; 729  : 				}
; 730  : 			this->_Mysize = _Right._Mysize;

  00036	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00039	89 47 10	 mov	 DWORD PTR [edi+16], eax

; 731  : 			this->_Myres = _Right._Myres;

  0003c	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0003f	89 47 14	 mov	 DWORD PTR [edi+20], eax

; 732  : 
; 733  : 			_Right._Mysize = 0;

  00042	83 66 10 00	 and	 DWORD PTR [esi+16], 0

; 734  : 			_Right._Myres = 0;

  00046	83 66 14 00	 and	 DWORD PTR [esi+20], 0
$LN3@assign@4:

; 735  : 			}
; 736  : 		return (*this);

  0004a	8b c7		 mov	 eax, edi
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi

; 737  : 		}

  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 286  : 	{	// destroy using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  00006	6a 00		 push	 0
  00008	6a 01		 push	 1
  0000a	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 288  : 	}

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	?erase@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@0@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::erase
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?erase@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T511292 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$511237 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@0@Z PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00004	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __First_arg$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 4d 10	 cmp	 ecx, DWORD PTR __Last_arg$[ebp]
  00012	74 37		 je	 SHORT $LN1@erase@3

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00017	53		 push	 ebx
  00018	57		 push	 edi
  00019	ff 75 10	 push	 DWORD PTR __Cat$511237[ebp]
  0001c	51		 push	 ecx
  0001d	50		 push	 eax
  0001e	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  00021	e8 00 00 00 00	 call	 ??$_Move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<GashaponPresentListWnd::GashaponPresentInfo *,GashaponPresentListWnd::GashaponPresentInfo *>

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);

  00026	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  00029	8b d8		 mov	 ebx, eax
  0002b	83 c4 10	 add	 esp, 16			; 00000010H
  0002e	89 5d fc	 mov	 DWORD PTR $T511292[ebp], ebx
  00031	3b df		 cmp	 ebx, edi
  00033	74 11		 je	 SHORT $LN36@erase@3
$LL52@erase@3:
  00035	8b 4d fc	 mov	 ecx, DWORD PTR $T511292[ebp]
  00038	e8 00 00 00 00	 call	 ??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
  0003d	83 45 fc 30	 add	 DWORD PTR $T511292[ebp], 48 ; 00000030H
  00041	39 7d fc	 cmp	 DWORD PTR $T511292[ebp], edi
  00044	75 ef		 jne	 SHORT $LL52@erase@3
$LN36@erase@3:

; 1211 : 			this->_Mylast = _Ptr;

  00046	5f		 pop	 edi
  00047	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  0004a	5b		 pop	 ebx
$LN1@erase@3:

; 1212 : 			}
; 1213 : 		return (_First);

  0004b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0004e	5e		 pop	 esi

; 1214 : 		}

  0004f	c9		 leave
  00050	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@0@Z ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Tidy
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEXXZ PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 27		 je	 SHORT $LN24@Tidy@3

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	53		 push	 ebx
  00009	57		 push	 edi
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);

  00010	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
  00015	eb 0a		 jmp	 SHORT $LN28@Tidy@3
$LL12@Tidy@3:
  00017	8b cf		 mov	 ecx, edi
  00019	e8 00 00 00 00	 call	 ??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
  0001e	83 c7 30	 add	 edi, 48			; 00000030H
$LN28@Tidy@3:
  00021	3b fb		 cmp	 edi, ebx
  00023	75 f2		 jne	 SHORT $LL12@Tidy@3

; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  00025	ff 36		 push	 DWORD PTR [esi]
  00027	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002c	59		 pop	 ecx
  0002d	5f		 pop	 edi
  0002e	5b		 pop	 ebx
$LN24@Tidy@3:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  0002f	33 c0		 xor	 eax, eax
  00031	89 06		 mov	 DWORD PTR [esi], eax

; 1310 : 		this->_Mylast = 0;

  00033	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1311 : 		this->_Myend = 0;

  00036	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00039	5e		 pop	 esi

; 1312 : 		}

  0003a	c3		 ret	 0
?_Tidy@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEXXZ ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Tidy
_TEXT	ENDS
PUBLIC	?reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXI@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::reserve
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Ptr$507025 = -24					; size = 4
$T511538 = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXI@Z PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	6a 0c		 push	 12			; 0000000cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXI@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx

; 747  : 		if (max_size() < _Count)

  0000e	81 7d 08 55 55
	55 05		 cmp	 DWORD PTR __Count$[ebp], 89478485 ; 05555555H
  00015	76 0b		 jbe	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN59@reserve:
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  00022	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00025	2b 06		 sub	 eax, DWORD PTR [esi]
  00027	6a 30		 push	 48			; 00000030H
  00029	99		 cdq
  0002a	59		 pop	 ecx
  0002b	f7 f9		 idiv	 ecx
  0002d	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00030	0f 83 80 00 00
	00		 jae	 $LN3@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00036	6a 00		 push	 0
  00038	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  0003b	e8 00 00 00 00	 call	 ??$_Allocate@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@IPAU12@@Z ; std::_Allocate<GashaponPresentListWnd::GashaponPresentInfo>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00040	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00042	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00046	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00049	52		 push	 edx
  0004a	89 45 e8	 mov	 DWORD PTR __Ptr$507025[ebp], eax
  0004d	ff 75 e8	 push	 DWORD PTR __Ptr$507025[ebp]
  00050	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00053	50		 push	 eax
  00054	51		 push	 ecx
  00055	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@YAPAUGashaponPresentInfo@GashaponPresentListWnd@@PAU12@00AAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@@Z ; std::_Uninitialized_move<GashaponPresentListWnd::GashaponPresentInfo *,GashaponPresentListWnd::GashaponPresentInfo *,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >

; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  0005a	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  0005d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005f	83 c4 18	 add	 esp, 24			; 00000018H
  00062	8b c3		 mov	 eax, ebx
  00064	2b c1		 sub	 eax, ecx
  00066	6a 30		 push	 48			; 00000030H
  00068	99		 cdq
  00069	5f		 pop	 edi
  0006a	f7 ff		 idiv	 edi
  0006c	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  00070	8b f8		 mov	 edi, eax
  00072	85 c9		 test	 ecx, ecx
  00074	74 20		 je	 SHORT $LN51@reserve

; 761  : 			if (this->_Myfirst != 0)
; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);

  00076	89 4d ec	 mov	 DWORD PTR $T511538[ebp], ecx
  00079	3b cb		 cmp	 ecx, ebx
  0007b	74 11		 je	 SHORT $LN37@reserve
$LN39@reserve:
  0007d	8b 4d ec	 mov	 ecx, DWORD PTR $T511538[ebp]
  00080	e8 00 00 00 00	 call	 ??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
  00085	83 45 ec 30	 add	 DWORD PTR $T511538[ebp], 48 ; 00000030H
  00089	39 5d ec	 cmp	 DWORD PTR $T511538[ebp], ebx
  0008c	75 ef		 jne	 SHORT $LN39@reserve
$LN37@reserve:

; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  0008e	ff 36		 push	 DWORD PTR [esi]
  00090	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00095	59		 pop	 ecx
$LN51@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  00096	8b ce		 mov	 ecx, esi
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;
; 770  : 			this->_Mylast = _Ptr + _Size;

  0009e	6b ff 30	 imul	 edi, 48			; 00000030H
  000a1	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  000a4	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$507025[ebp]
  000a7	6b c0 30	 imul	 eax, 48			; 00000030H
  000aa	03 c1		 add	 eax, ecx
  000ac	03 f9		 add	 edi, ecx
  000ae	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000b1	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 771  : 			this->_Myfirst = _Ptr;

  000b4	89 0e		 mov	 DWORD PTR [esi], ecx
$LN3@reserve:

; 772  : 			}
; 773  : 		}

  000b6	e8 00 00 00 00	 call	 __EH_epilog3
  000bb	c2 04 00	 ret	 4
__catch$?reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXI@Z$0:

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

  000be	ff 75 e8	 push	 DWORD PTR __Ptr$507025[ebp]
  000c1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000c6	59		 pop	 ecx

; 757  : 			_RERAISE;

  000c7	6a 00		 push	 0
  000c9	6a 00		 push	 0
  000cb	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN60@reserve:
$LN58@reserve:
  000d0	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXI@Z ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::reserve
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 702  : 		{	// construct by moving _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 703  : 		_Tidy();
; 704  : 		assign(_STD forward<_Myt>(_Right));

  00004	ff 75 08	 push	 DWORD PTR __Right$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	83 66 10 00	 and	 DWORD PTR [esi+16], 0
  0000d	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  00014	c6 06 00	 mov	 BYTE PTR [esi], 0
  00017	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 705  : 		}

  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Ogsp
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx

; 708  : 		{	// assign by moving _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 710  : 		}

  00003	5d		 pop	 ebp

; 709  : 		return (assign(_STD forward<_Myt>(_Right)));

  00004	e9 00 00 00 00	 jmp	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 95   : 	{	// destroy [_First, _Last), arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 96   : 	for (; _First != _Last; ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0e		 jmp	 SHORT $LN21@Destroy_ra@3
$LL3@Destroy_ra@3:

; 97   : 		_Dest_val(_Al, _First);

  00009	6a 00		 push	 0
  0000b	6a 01		 push	 1
  0000d	8b ce		 mov	 ecx, esi
  0000f	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  00014	83 c6 1c	 add	 esi, 28			; 0000001cH
$LN21@Destroy_ra@3:

; 96   : 	for (; _First != _Last; ++_First)

  00017	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  0001a	75 ed		 jne	 SHORT $LL3@Destroy_ra@3
  0001c	5e		 pop	 esi

; 98   : 	}

  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??1?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE@XZ ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::~vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE@XZ PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::~vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Tidy
??1?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE@XZ ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::~vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXXZ ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T511751 = -4						; size = 4
?clear@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXXZ PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T511751[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@0@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXXZ ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::clear
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEXI@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEXI@Z PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx
  0000d	57		 push	 edi
  0000e	99		 cdq
  0000f	6a 30		 push	 48			; 00000030H
  00011	5f		 pop	 edi
  00012	f7 ff		 idiv	 edi
  00014	8b f8		 mov	 edi, eax

; 1292 : 		if (max_size() - _Count < _Size)

  00016	b8 55 55 55 05	 mov	 eax, 89478485		; 05555555H
  0001b	2b 45 08	 sub	 eax, DWORD PTR __Count$[ebp]
  0001e	3b c7		 cmp	 eax, edi
  00020	73 0b		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve:
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  0002d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00030	2b c1		 sub	 eax, ecx
  00032	6a 30		 push	 48			; 00000030H
  00034	99		 cdq
  00035	59		 pop	 ecx
  00036	f7 f9		 idiv	 ecx
  00038	03 7d 08	 add	 edi, DWORD PTR __Count$[ebp]
  0003b	3b f8		 cmp	 edi, eax
  0003d	76 10		 jbe	 SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  0003f	57		 push	 edi
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IBEII@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Grow_to
  00047	50		 push	 eax
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXI@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::reserve
$LN1@Reserve:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1298 : 		}

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
$LN20@Reserve:
?_Reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEXI@Z ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Reserve
_TEXT	ENDS
PUBLIC	?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z$0
__ehfuncinfo$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z
_TEXT	SEGMENT
$T511835 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0000f	89 4d f0	 mov	 DWORD PTR $T511835[ebp], ecx
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 c9		 test	 ecx, ecx
  00018	74 08		 je	 SHORT $LN3@construct@3
  0001a	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN3@construct@3:

; 203  : 		}

  00022	e8 00 00 00 00	 call	 __EH_epilog3
  00027	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T511835[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct
PUBLIC	??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 2512 : 	{	// move [_First, _Last) to [_Dest, ...), arbitrary iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 10		 jmp	 SHORT $LN15@Move@2
$LL3@Move@2:

; 2514 : 		*_Dest = _STD move(*_First);

  00009	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00012	83 45 10 1c	 add	 DWORD PTR __Dest$[ebp], 28 ; 0000001cH
  00016	83 c6 1c	 add	 esi, 28			; 0000001cH
$LN15@Move@2:

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

  00019	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  0001c	75 eb		 jne	 SHORT $LL3@Move@2

; 2515 : 	return (_Dest);

  0001e	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	5e		 pop	 esi

; 2516 : 	}

  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$511873 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 87   : 	{	// destroy [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$511873[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Al$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 89   : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??_7GashaponPresentListWnd@@6B@			; GashaponPresentListWnd::`vftable'
PUBLIC	??0GashaponPresentListWnd@@QAE@XZ		; GashaponPresentListWnd::GashaponPresentListWnd
PUBLIC	??_R4GashaponPresentListWnd@@6B@		; GashaponPresentListWnd::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVGashaponPresentListWnd@@@8		; GashaponPresentListWnd `RTTI Type Descriptor'
PUBLIC	??_R3GashaponPresentListWnd@@8			; GashaponPresentListWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GashaponPresentListWnd@@8			; GashaponPresentListWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@GashaponPresentListWnd@@8		; GashaponPresentListWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioWnd@@8				; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioWnd@@@8				; ioWnd `RTTI Type Descriptor'
PUBLIC	??_R3ioWnd@@8					; ioWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioWnd@@8					; ioWnd::`RTTI Base Class Array'
PUBLIC	?ParseExtraInfo@GashaponPresentListWnd@@UAEXAAVioXMLElement@@@Z ; GashaponPresentListWnd::ParseExtraInfo
PUBLIC	?iwm_command@GashaponPresentListWnd@@UAEXPAVioWnd@@HK@Z ; GashaponPresentListWnd::iwm_command
PUBLIC	?iwm_show@GashaponPresentListWnd@@UAEXXZ	; GashaponPresentListWnd::iwm_show
EXTRN	__imp_??1ioWnd@@UAE@XZ:PROC
EXTRN	__imp_??0ioWnd@@QAE@XZ:PROC
EXTRN	?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z:PROC ; ioWnd::AddRenderFrame
EXTRN	?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC ; ioWnd::AddRenderImage
EXTRN	?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z:PROC ; ioWnd::AddTooltipHelp
EXTRN	?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC ; ioWnd::AddNamedRenderImage
EXTRN	?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z:PROC ; ioWnd::RemoveNamedRenderImage
EXTRN	?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z:PROC ; ioWnd::GetNamedRenderImage
EXTRN	?SetWindowAlpha@ioWnd@@UAEXH@Z:PROC		; ioWnd::SetWindowAlpha
EXTRN	?SetActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetActive
EXTRN	?SetInActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetInActive
EXTRN	?ClearElementImageList@ioWnd@@UAEXXZ:PROC	; ioWnd::ClearElementImageList
EXTRN	?SetSize@ioWnd@@UAEXHH@Z:PROC			; ioWnd::SetSize
EXTRN	?SetPositionToDefault@ioWnd@@UAEXHH_N0@Z:PROC	; ioWnd::SetPositionToDefault
EXTRN	?IsNeedProcess@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsNeedProcess
EXTRN	?IsCanMouseReaction@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsCanMouseReaction
EXTRN	?AddChild@ioWnd@@UAEXPAV1@@Z:PROC		; ioWnd::AddChild
EXTRN	?DeleteChild@ioWnd@@UAEXK@Z:PROC		; ioWnd::DeleteChild
EXTRN	?DeleteAllChild@ioWnd@@UAEXXZ:PROC		; ioWnd::DeleteAllChild
EXTRN	?OnRenderShowAndHide@ioWnd@@MAE_NXZ:PROC	; ioWnd::OnRenderShowAndHide
EXTRN	?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z:PROC ; ioWnd::OnRenderShowAndHideByDefault
EXTRN	?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByTop
EXTRN	?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByDown
EXTRN	?OnRenderAfterChild@ioWnd@@MAEXXZ:PROC		; ioWnd::OnRenderAfterChild
EXTRN	?OnProcess@ioWnd@@MAEXM@Z:PROC			; ioWnd::OnProcess
EXTRN	?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z:PROC	; ioWnd::OnMouseProcess
EXTRN	?CheckFrameReSize@ioWnd@@MAEXHHHH@Z:PROC	; ioWnd::CheckFrameReSize
EXTRN	?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z:PROC ; ioWnd::RenderImageList
EXTRN	?iwm_create@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_create
EXTRN	?iwm_destroy@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_destroy
EXTRN	?iwm_lbuttondown@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_lbuttondown
EXTRN	?iwm_lbuttonup@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_lbuttonup
EXTRN	?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z:PROC ; ioWnd::iwm_lbuttonDBLCLK
EXTRN	?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_rbuttondown
EXTRN	?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_rbuttonup
EXTRN	?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mouseover
EXTRN	?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mousemove
EXTRN	?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mouseleave
EXTRN	?iwm_vscroll@ioWnd@@UAEXKH@Z:PROC		; ioWnd::iwm_vscroll
EXTRN	?iwm_wheel@ioWnd@@UAEXH@Z:PROC			; ioWnd::iwm_wheel
EXTRN	?iwm_hide@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_hide
EXTRN	?iwm_esc@ioWnd@@UAE_NXZ:PROC			; ioWnd::iwm_esc
EXTRN	?iwm_spacebar@ioWnd@@UAE_NXZ:PROC		; ioWnd::iwm_spacebar
EXTRN	?iwm_gototop@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_gototop
EXTRN	?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragenter
EXTRN	?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragover
EXTRN	?iwm_dragleave@ioWnd@@UAEXXZ:PROC		; ioWnd::iwm_dragleave
EXTRN	?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z:PROC ; ioWnd::iwm_dropitem
EXTRN	?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z:PROC ; ioWnd::iwm_dropdone
EXTRN	?IsEXType@ioWnd@@UBE_NXZ:PROC			; ioWnd::IsEXType
EXTRN	?GetWndType@ioWnd@@UBEKXZ:PROC			; ioWnd::GetWndType
EXTRN	?RenderWnd@ioWnd@@UAEXXZ:PROC			; ioWnd::RenderWnd
EXTRN	?SetIDEX@ioWnd@@UAEXAAK_N@Z:PROC		; ioWnd::SetIDEX
EXTRN	?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC	; ioWnd::ParseXML
EXTRN	?GetHeaderFileName@ioWnd@@UAEPBDXZ:PROC		; ioWnd::GetHeaderFileName
EXTRN	?GetTemplateName@ioWnd@@UAEPBDXZ:PROC		; ioWnd::GetTemplateName
EXTRN	?GetDefClassName@ioWnd@@UBEPBDXZ:PROC		; ioWnd::GetDefClassName
EXTRN	?_Clone@ioWnd@@UAEPAV1@XZ:PROC			; ioWnd::_Clone
EXTRN	?Copy@ioWnd@@UAEXPAV1@@Z:PROC			; ioWnd::Copy
EXTRN	?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z:PROC	; ioWnd::Save
EXTRN	?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC ; ioWnd::SetSaveData
EXTRN	?SetPosX@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosX
EXTRN	?SetPosY@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosY
EXTRN	?SetWidth@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetWidth
EXTRN	?SetHeight@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetHeight
EXTRN	?GetNumFixedRenderFrame@ioWnd@@UBEHXZ:PROC	; ioWnd::GetNumFixedRenderFrame
EXTRN	?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z:PROC	; ioWnd::GetFixedRenderFrameType
EXTRN	?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioWnd::GetRenderFrame
EXTRN	?GetNumFixedRenderImage@ioWnd@@UBEHXZ:PROC	; ioWnd::GetNumFixedRenderImage
EXTRN	?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z:PROC	; ioWnd::GetFixedRenderImageType
EXTRN	?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioWnd::GetRenderImage
EXTRN	?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z:PROC ; ioWnd::AddEffect
EXTRN	?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z:PROC ; ioWnd::GetEffect
EXTRN	??_EGashaponPresentListWnd@@UAEPAXI@Z:PROC	; GashaponPresentListWnd::`vector deleting destructor'
;	COMDAT ??_R2ioWnd@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
rdata$r	SEGMENT
??_R2ioWnd@@8 DD FLAT:??_R1A@?0A@EA@ioWnd@@8		; ioWnd::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioWnd@@8
rdata$r	SEGMENT
??_R3ioWnd@@8 DD 00H					; ioWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioWnd@@@8
_DATA	SEGMENT
??_R0?AVioWnd@@@8 DD FLAT:??_7type_info@@6B@		; ioWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioWnd@@8 DD FLAT:??_R0?AVioWnd@@@8	; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@GashaponPresentListWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GashaponPresentListWnd@@8 DD FLAT:??_R0?AVGashaponPresentListWnd@@@8 ; GashaponPresentListWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GashaponPresentListWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2GashaponPresentListWnd@@8
rdata$r	SEGMENT
??_R2GashaponPresentListWnd@@8 DD FLAT:??_R1A@?0A@EA@GashaponPresentListWnd@@8 ; GashaponPresentListWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3GashaponPresentListWnd@@8
rdata$r	SEGMENT
??_R3GashaponPresentListWnd@@8 DD 00H			; GashaponPresentListWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2GashaponPresentListWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGashaponPresentListWnd@@@8
_DATA	SEGMENT
??_R0?AVGashaponPresentListWnd@@@8 DD FLAT:??_7type_info@@6B@ ; GashaponPresentListWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGashaponPresentListWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R4GashaponPresentListWnd@@6B@
rdata$r	SEGMENT
??_R4GashaponPresentListWnd@@6B@ DD 00H			; GashaponPresentListWnd::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGashaponPresentListWnd@@@8
	DD	FLAT:??_R3GashaponPresentListWnd@@8
rdata$r	ENDS
;	COMDAT ??_7GashaponPresentListWnd@@6B@
CONST	SEGMENT
??_7GashaponPresentListWnd@@6B@ DD FLAT:??_R4GashaponPresentListWnd@@6B@ ; GashaponPresentListWnd::`vftable'
	DD	FLAT:?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
	DD	FLAT:?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z
	DD	FLAT:?ParseExtraInfo@GashaponPresentListWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z
	DD	FLAT:?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z
	DD	FLAT:?SetWindowAlpha@ioWnd@@UAEXH@Z
	DD	FLAT:?SetActive@ioWnd@@UAEXXZ
	DD	FLAT:?SetInActive@ioWnd@@UAEXXZ
	DD	FLAT:?ClearElementImageList@ioWnd@@UAEXXZ
	DD	FLAT:?SetSize@ioWnd@@UAEXHH@Z
	DD	FLAT:?SetPositionToDefault@ioWnd@@UAEXHH_N0@Z
	DD	FLAT:?IsNeedProcess@ioWnd@@UBE_NXZ
	DD	FLAT:?IsCanMouseReaction@ioWnd@@UBE_NXZ
	DD	FLAT:?AddChild@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?DeleteChild@ioWnd@@UAEXK@Z
	DD	FLAT:?DeleteAllChild@ioWnd@@UAEXXZ
	DD	FLAT:?OnRenderShowAndHide@ioWnd@@MAE_NXZ
	DD	FLAT:?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRender@GashaponPresentListWnd@@MAEXXZ
	DD	FLAT:?OnRenderAfterChild@ioWnd@@MAEXXZ
	DD	FLAT:?OnProcess@ioWnd@@MAEXM@Z
	DD	FLAT:?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z
	DD	FLAT:?CheckFrameReSize@ioWnd@@MAEXHHHH@Z
	DD	FLAT:?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z
	DD	FLAT:?iwm_create@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_destroy@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_lbuttondown@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonup@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_command@GashaponPresentListWnd@@UAEXPAVioWnd@@HK@Z
	DD	FLAT:?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_vscroll@ioWnd@@UAEXKH@Z
	DD	FLAT:?iwm_wheel@ioWnd@@UAEXH@Z
	DD	FLAT:?iwm_show@GashaponPresentListWnd@@UAEXXZ
	DD	FLAT:?iwm_hide@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_esc@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_spacebar@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_gototop@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragleave@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z
	DD	FLAT:?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z
	DD	FLAT:?IsEXType@ioWnd@@UBE_NXZ
	DD	FLAT:?GetWndType@ioWnd@@UBEKXZ
	DD	FLAT:?RenderWnd@ioWnd@@UAEXXZ
	DD	FLAT:?SetIDEX@ioWnd@@UAEXAAK_N@Z
	DD	FLAT:?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?GetHeaderFileName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetTemplateName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetDefClassName@ioWnd@@UBEPBDXZ
	DD	FLAT:?_Clone@ioWnd@@UAEPAV1@XZ
	DD	FLAT:?Copy@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z
	DD	FLAT:?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?SetPosX@ioWnd@@UAEXH@Z
	DD	FLAT:?SetPosY@ioWnd@@UAEXH@Z
	DD	FLAT:?SetWidth@ioWnd@@UAEXH@Z
	DD	FLAT:?SetHeight@ioWnd@@UAEXH@Z
	DD	FLAT:?GetNumFixedRenderFrame@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?GetNumFixedRenderImage@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z
	DD	FLAT:?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z
	DD	FLAT:??_EGashaponPresentListWnd@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0GashaponPresentListWnd@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0GashaponPresentListWnd@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0GashaponPresentListWnd@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0GashaponPresentListWnd@@QAE@XZ$2
__ehfuncinfo$??0GashaponPresentListWnd@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0GashaponPresentListWnd@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\gashaponpresentlistwnd.cpp
xdata$x	ENDS
;	COMDAT ??0GashaponPresentListWnd@@QAE@XZ
_TEXT	SEGMENT
$T511967 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0GashaponPresentListWnd@@QAE@XZ PROC			; GashaponPresentListWnd::GashaponPresentListWnd, COMDAT
; _this$ = ecx

; 90   : {

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0GashaponPresentListWnd@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioWnd@@QAE@XZ
  00017	33 ff		 xor	 edi, edi
  00019	8d 8e 68 01 00
	00		 lea	 ecx, DWORD PTR [esi+360]
  0001f	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  00022	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7GashaponPresentListWnd@@6B@
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ
  0002e	8d 8e 78 01 00
	00		 lea	 ecx, DWORD PTR [esi+376]
  00034	89 39		 mov	 DWORD PTR [ecx], edi
  00036	89 79 04	 mov	 DWORD PTR [ecx+4], edi
  00039	89 79 08	 mov	 DWORD PTR [ecx+8], edi

; 91   : 	m_iMaxPage = 0;

  0003c	89 be 60 01 00
	00		 mov	 DWORD PTR [esi+352], edi

; 92   : 	m_iCurPage = 0;

  00042	89 be 64 01 00
	00		 mov	 DWORD PTR [esi+356], edi

; 93   : 
; 94   : 	m_vGashponPresentInfoVec.clear();

  00048	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0004b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004d	50		 push	 eax
  0004e	52		 push	 edx
  0004f	8d 45 ec	 lea	 eax, DWORD PTR $T511967[ebp]
  00052	50		 push	 eax
  00053	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00057	e8 00 00 00 00	 call	 ?erase@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@0@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::erase

; 95   : }

  0005c	8b c6		 mov	 eax, esi
  0005e	e8 00 00 00 00	 call	 __EH_epilog3
  00063	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0GashaponPresentListWnd@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioWnd@@UAE@XZ
__unwindfunclet$??0GashaponPresentListWnd@@QAE@XZ$1:
  00009	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	81 c1 68 01 00
	00		 add	 ecx, 360		; 00000168H
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??0GashaponPresentListWnd@@QAE@XZ$2:
  00018	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	81 c1 78 01 00
	00		 add	 ecx, 376		; 00000178H
  00021	e9 00 00 00 00	 jmp	 ??1?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE@XZ ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::~vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >
__ehhandler$??0GashaponPresentListWnd@@QAE@XZ:
  00026	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002d	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00030	33 c8		 xor	 ecx, eax
  00032	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00037	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0GashaponPresentListWnd@@QAE@XZ
  0003c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0GashaponPresentListWnd@@QAE@XZ ENDP			; GashaponPresentListWnd::GashaponPresentListWnd
PUBLIC	??1GashaponPresentListWnd@@UAE@XZ		; GashaponPresentListWnd::~GashaponPresentListWnd
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??1GashaponPresentListWnd@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1GashaponPresentListWnd@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1GashaponPresentListWnd@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1GashaponPresentListWnd@@UAE@XZ$2
__ehfuncinfo$??1GashaponPresentListWnd@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1GashaponPresentListWnd@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\gashaponpresentlistwnd.cpp
xdata$x	ENDS
;	COMDAT ??1GashaponPresentListWnd@@UAE@XZ
_TEXT	SEGMENT
$T512053 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1GashaponPresentListWnd@@UAE@XZ PROC			; GashaponPresentListWnd::~GashaponPresentListWnd, COMDAT
; _this$ = ecx

; 98   : {

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1GashaponPresentListWnd@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7GashaponPresentListWnd@@6B@

; 99   : 	m_vGashponPresentInfoVec.clear();

  00017	8b 86 7c 01 00
	00		 mov	 eax, DWORD PTR [esi+380]
  0001d	8b 8e 78 01 00
	00		 mov	 ecx, DWORD PTR [esi+376]
  00023	50		 push	 eax
  00024	51		 push	 ecx
  00025	8d 45 ec	 lea	 eax, DWORD PTR $T512053[ebp]
  00028	50		 push	 eax
  00029	8d 8e 78 01 00
	00		 lea	 ecx, DWORD PTR [esi+376]
  0002f	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00036	e8 00 00 00 00	 call	 ?erase@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@0@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::erase

; 100  : }

  0003b	8d 8e 78 01 00
	00		 lea	 ecx, DWORD PTR [esi+376]
  00041	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00045	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEXXZ ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Tidy
  0004a	8d 8e 68 01 00
	00		 lea	 ecx, DWORD PTR [esi+360]
  00050	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  0005a	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0005e	8b ce		 mov	 ecx, esi
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioWnd@@UAE@XZ
  00066	e8 00 00 00 00	 call	 __EH_epilog3
  0006b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1GashaponPresentListWnd@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioWnd@@UAE@XZ
__unwindfunclet$??1GashaponPresentListWnd@@UAE@XZ$1:
  00009	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	81 c1 68 01 00
	00		 add	 ecx, 360		; 00000168H
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??1GashaponPresentListWnd@@UAE@XZ$2:
  00018	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	81 c1 78 01 00
	00		 add	 ecx, 376		; 00000178H
  00021	e9 00 00 00 00	 jmp	 ??1?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE@XZ ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::~vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >
__ehhandler$??1GashaponPresentListWnd@@UAE@XZ:
  00026	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002d	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00030	33 c8		 xor	 ecx, eax
  00032	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00037	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1GashaponPresentListWnd@@UAE@XZ
  0003c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1GashaponPresentListWnd@@UAE@XZ ENDP			; GashaponPresentListWnd::~GashaponPresentListWnd
PUBLIC	?push_back@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXABUGashaponPresentInfo@GashaponPresentListWnd@@@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::push_back
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?push_back@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXABUGashaponPresentInfo@GashaponPresentListWnd@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXABUGashaponPresentInfo@GashaponPresentListWnd@@@Z PROC ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f9		 cmp	 edi, ecx
  0000f	73 37		 jae	 SHORT $LN4@push_back
  00011	8b 16		 mov	 edx, DWORD PTR [esi]
  00013	3b d7		 cmp	 edx, edi
  00015	77 31		 ja	 SHORT $LN4@push_back

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	8b c7		 mov	 eax, edi
  00019	2b c2		 sub	 eax, edx
  0001b	6a 30		 push	 48			; 00000030H
  0001d	99		 cdq
  0001e	5f		 pop	 edi
  0001f	f7 ff		 idiv	 edi
  00021	8b f8		 mov	 edi, eax

; 980  : 			if (this->_Mylast == this->_Myend)

  00023	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00026	75 09		 jne	 SHORT $LN3@push_back

; 981  : 				_Reserve(1);

  00028	6a 01		 push	 1
  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEXI@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Reserve
$LN3@push_back:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  00031	6b ff 30	 imul	 edi, 48			; 00000030H
  00034	03 3e		 add	 edi, DWORD PTR [esi]
  00036	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00039	57		 push	 edi
  0003a	ff 76 04	 push	 DWORD PTR [esi+4]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@UGashaponPresentInfo@GashaponPresentListWnd@@AAU34@@std@@YAXAAV?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@0@PAUGashaponPresentInfo@GashaponPresentListWnd@@AAU23@@Z ; std::_Cons_val<std::allocator<GashaponPresentListWnd::GashaponPresentInfo>,GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo &>
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00046	eb 19		 jmp	 SHORT $LN26@push_back
$LN4@push_back:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00048	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  0004b	75 09		 jne	 SHORT $LN1@push_back

; 991  : 				_Reserve(1);

  0004d	6a 01		 push	 1
  0004f	8b ce		 mov	 ecx, esi
  00051	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@IAEXI@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::_Reserve
$LN1@push_back:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00056	57		 push	 edi
  00057	ff 76 04	 push	 DWORD PTR [esi+4]
  0005a	e8 00 00 00 00	 call	 ??$_Construct@UGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@std@@YAXPAUGashaponPresentInfo@GashaponPresentListWnd@@ABU12@@Z ; std::_Construct<GashaponPresentListWnd::GashaponPresentInfo,GashaponPresentListWnd::GashaponPresentInfo const &>
  0005f	59		 pop	 ecx
  00060	59		 pop	 ecx
$LN26@push_back:

; 996  : 			++this->_Mylast;

  00061	83 46 04 30	 add	 DWORD PTR [esi+4], 48	; 00000030H
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?push_back@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXABUGashaponPresentInfo@GashaponPresentListWnd@@@Z ENDP ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::push_back
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z$0
__ehfuncinfo$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z
_TEXT	SEGMENT
$T512146 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z PROC ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 279  : 	{	// construct using allocator

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  0000f	89 4d f0	 mov	 DWORD PTR $T512146[ebp], ecx
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 c9		 test	 ecx, ecx
  00018	74 08		 je	 SHORT $LN7@Cons_val@3
  0001a	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@Cons_val@3:

; 281  : 	}

  00022	e8 00 00 00 00	 call	 __EH_epilog3
  00027	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z$0:
  00000	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T512146[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z ENDP ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00@Z ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00@Z
_TEXT	SEGMENT
__Cat$512165 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00@Z PROC ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$512165[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00@Z ENDP ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;

  0000c	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 428  : 
; 429  : 	_TRY_BEGIN

  0000f	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00013	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00016	89 45 ec	 mov	 DWORD PTR __Next$[ebp], eax
$LL6@Uninit_mov@2:

; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  00019	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  0001c	74 37		 je	 SHORT $LN4@Uninit_mov@2

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

  0001e	56		 push	 esi
  0001f	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00022	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  00025	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0002a	83 45 10 1c	 add	 DWORD PTR __Dest$[ebp], 28 ; 0000001cH
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00031	83 c6 1c	 add	 esi, 28			; 0000001cH
  00034	eb e3		 jmp	 SHORT $LL6@Uninit_mov@2
__catch$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)

  00036	8b 75 ec	 mov	 esi, DWORD PTR __Next$[ebp]
  00039	eb 0c		 jmp	 SHORT $LN34@Uninit_mov@2
$LL3@Uninit_mov@2:

; 434  : 		_Dest_val(_Al, _Next);

  0003b	6a 01		 push	 1
  0003d	8b ce		 mov	 ecx, esi
  0003f	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  00044	83 c6 1c	 add	 esi, 28			; 0000001cH
$LN34@Uninit_mov@2:

; 435  : 	_RERAISE;

  00047	6a 00		 push	 0
  00049	3b 75 10	 cmp	 esi, DWORD PTR __Dest$[ebp]
  0004c	75 ed		 jne	 SHORT $LL3@Uninit_mov@2
  0004e	6a 00		 push	 0
  00050	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN35@Uninit_mov@2:
$LN4@Uninit_mov@2:

; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

  00055	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 438  : 	}

  00058	e8 00 00 00 00	 call	 __EH_epilog3
  0005d	c3		 ret	 0
$LN33@Uninit_mov@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Cat$512252 = 12					; size = 1
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy, COMDAT
; _this$ = ecx

; 1269 : 		{	// destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);

  00003	ff 75 0c	 push	 DWORD PTR __Cat$512252[ebp]
  00006	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00009	51		 push	 ecx
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1271 : 		}

  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GGashaponPresentListWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GGashaponPresentListWnd@@UAEPAXI@Z PROC		; GashaponPresentListWnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1GashaponPresentListWnd@@UAE@XZ ; GashaponPresentListWnd::~GashaponPresentListWnd
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@4
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@4:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GGashaponPresentListWnd@@UAEPAXI@Z ENDP		; GashaponPresentListWnd::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	_xElement$GSCopy$
PUBLIC	_this$GSCopy$
EXTRN	__imp_??4ioHashString@@QAEAAV0@PBD@Z:PROC
EXTRN	__imp_?GetStringAttribute@ioXMLElement@@QBEPBDPBD@Z:PROC
EXTRN	__EH_epilog3_GS:PROC
EXTRN	__EH_prolog3_GS:PROC
EXTRN	_memset:PROC
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
xdata$x	SEGMENT
__unwindtable$?ParseExtraInfo@GashaponPresentListWnd@@UAEXAAVioXMLElement@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ParseExtraInfo@GashaponPresentListWnd@@UAEXAAVioXMLElement@@@Z$0
__ehfuncinfo$?ParseExtraInfo@GashaponPresentListWnd@@UAEXAAVioXMLElement@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ParseExtraInfo@GashaponPresentListWnd@@UAEXAAVioXMLElement@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\gashaponpresentlistwnd.cpp
xdata$x	ENDS
;	COMDAT ?ParseExtraInfo@GashaponPresentListWnd@@UAEXAAVioXMLElement@@@Z
_TEXT	SEGMENT
_kInfo$505712 = -380					; size = 48
__t$512627 = -331					; size = 1
__t$512762 = -326					; size = 1
__t$512492 = -321					; size = 1
_this$GSCopy$ = -316					; size = 4
_xElement$GSCopy$ = -312				; size = 4
$T512322 = -308						; size = 4
tv238 = -308						; size = 4
tv5431 = -304						; size = 4
_szName$505713 = -300					; size = 260
___encStr$506032 = -40					; size = 17
___encStr$505879 = -40					; size = 17
__k$512356 = -36					; size = 12
___encStr$505717 = -36					; size = 13
__$EHRec$ = -12						; size = 12
_xElement$ = 8						; size = 4
?ParseExtraInfo@GashaponPresentListWnd@@UAEXAAVioXMLElement@@@Z PROC ; GashaponPresentListWnd::ParseExtraInfo, COMDAT
; _this$ = ecx

; 103  : {

  00000	68 70 01 00 00	 push	 368			; 00000170H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?ParseExtraInfo@GashaponPresentListWnd@@UAEXAAVioXMLElement@@@Z
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000f	8b 7d 08	 mov	 edi, DWORD PTR _xElement$[ebp]

; 104  : 	m_vGashponPresentInfoVec.clear();

  00012	8d 91 78 01 00
	00		 lea	 edx, DWORD PTR [ecx+376]
  00018	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 123  : 		if( kInfo.m_szPresentName2 == "" )

  0001b	89 8d c4 fe ff
	ff		 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  00021	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00023	50		 push	 eax
  00024	51		 push	 ecx
  00025	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR $T512322[ebp]
  0002b	50		 push	 eax
  0002c	8b ca		 mov	 ecx, edx
  0002e	89 bd c8 fe ff
	ff		 mov	 DWORD PTR _xElement$GSCopy$[ebp], edi
  00034	e8 00 00 00 00	 call	 ?erase@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@0@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::erase
  00039	6a 02		 push	 2
  0003b	c7 45 dc a0 8d
	93 b5		 mov	 DWORD PTR __k$512356[ebp], -1248621152 ; b5938da0H
  00042	c7 45 e0 bd 9e
	8e 99		 mov	 DWORD PTR __k$512356[ebp+4], -1718706499 ; 998e9ebdH
  00049	8d 45 dc	 lea	 eax, DWORD PTR __k$512356[ebp]
  0004c	33 db		 xor	 ebx, ebx
  0004e	c7 45 e4 88 82
	9f 00		 mov	 DWORD PTR __k$512356[ebp+8], 10453640 ; 009f8288H
  00055	59		 pop	 ecx
$LL428@ParseExtra:

; 105  : 	int iMax = xElement.GetIntAttribute_e( "Max_Present" );

  00056	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0005c	83 c0 04	 add	 eax, 4
  0005f	49		 dec	 ecx
  00060	75 f4		 jne	 SHORT $LL428@ParseExtra
  00062	6a 08		 push	 8
  00064	5e		 pop	 esi
$LL425@ParseExtra:
  00065	8b c6		 mov	 eax, esi
  00067	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  0006c	79 05		 jns	 SHORT $LN817@ParseExtra
  0006e	48		 dec	 eax
  0006f	83 c8 fc	 or	 eax, -4			; fffffffcH
  00072	40		 inc	 eax
$LN817@ParseExtra:
  00073	b1 ed		 mov	 cl, -19			; ffffffedH
  00075	2a c8		 sub	 cl, al
  00077	30 4c 35 dc	 xor	 BYTE PTR __k$512356[ebp+esi], cl
  0007b	46		 inc	 esi
  0007c	83 fe 0b	 cmp	 esi, 11			; 0000000bH
  0007f	7c e4		 jl	 SHORT $LL425@ParseExtra
  00081	8d 45 dc	 lea	 eax, DWORD PTR __k$512356[ebp]
  00084	50		 push	 eax
  00085	8b cf		 mov	 ecx, edi
  00087	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetIntAttribute@ioXMLElement@@QBEHPBD@Z

; 106  : 	for (int i = 0; i < iMax ; i++)

  0008d	3b c3		 cmp	 eax, ebx
  0008f	0f 8e 8c 02 00
	00		 jle	 $LN301@ParseExtra

; 105  : 	int iMax = xElement.GetIntAttribute_e( "Max_Present" );

  00095	c7 85 d0 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv5431[ebp], 1
  0009f	89 85 cc fe ff
	ff		 mov	 DWORD PTR tv238[ebp], eax
  000a5	be 04 01 00 00	 mov	 esi, 260		; 00000104H
$LN303@ParseExtra:

; 107  : 	{
; 108  : 		GashaponPresentInfo kInfo;

  000aa	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR _kInfo$505712[ebp]
  000b0	e8 00 00 00 00	 call	 ??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ

; 109  : 		char szName[MAX_PATH]="";

  000b5	68 03 01 00 00	 push	 259			; 00000103H
  000ba	8d 85 d5 fe ff
	ff		 lea	 eax, DWORD PTR _szName$505713[ebp+1]
  000c0	53		 push	 ebx
  000c1	50		 push	 eax
  000c2	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  000c5	88 9d d4 fe ff
	ff		 mov	 BYTE PTR _szName$505713[ebp], bl
  000cb	e8 00 00 00 00	 call	 _memset
  000d0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d3	6a 03		 push	 3

; 110  : 		StringCbPrintf_e( szName, sizeof( szName ), "Icon_Name_%d", i+1 );

  000d5	c7 45 dc a4 8f
	84 84		 mov	 DWORD PTR ___encStr$505717[ebp], -2071687260 ; 84848fa4H
  000dc	c7 45 e0 b2 a2
	8a 87		 mov	 DWORD PTR ___encStr$505717[ebp+4], -2020957518 ; 878aa2b2H
  000e3	c7 45 e4 88 b3
	ce 8e		 mov	 DWORD PTR ___encStr$505717[ebp+8], -1899056248 ; 8eceb388H
  000ea	8d 45 dc	 lea	 eax, DWORD PTR ___encStr$505717[ebp]
  000ed	88 5d e8	 mov	 BYTE PTR ___encStr$505717[ebp+12], bl
  000f0	59		 pop	 ecx
$LL436@ParseExtra:
  000f1	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  000f7	83 c0 04	 add	 eax, 4
  000fa	49		 dec	 ecx
  000fb	75 f4		 jne	 SHORT $LL436@ParseExtra
  000fd	ff b5 d0 fe ff
	ff		 push	 DWORD PTR tv5431[ebp]
  00103	8d 45 dc	 lea	 eax, DWORD PTR ___encStr$505717[ebp]
  00106	50		 push	 eax
  00107	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szName$505713[ebp]
  0010d	56		 push	 esi
  0010e	50		 push	 eax
  0010f	e8 00 00 00 00	 call	 ?StringCbPrintfA@@YAJPADIPBDZZ ; StringCbPrintfA

; 111  : 		kInfo.m_szIconName = xElement.GetStringAttribute( szName );

  00114	8b 8d c8 fe ff
	ff		 mov	 ecx, DWORD PTR _xElement$GSCopy$[ebp]
  0011a	83 c4 10	 add	 esp, 16			; 00000010H
  0011d	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szName$505713[ebp]
  00123	50		 push	 eax
  00124	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetStringAttribute@ioXMLElement@@QBEPBDPBD@Z
  0012a	50		 push	 eax
  0012b	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR _kInfo$505712[ebp]
  00131	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z

; 112  : 		if( kInfo.m_szIconName == "" )

  00137	8b 85 84 fe ff
	ff		 mov	 eax, DWORD PTR _kInfo$505712[ebp]
  0013d	88 9d bf fe ff
	ff		 mov	 BYTE PTR __t$512492[ebp], bl
  00143	8d bd bf fe ff
	ff		 lea	 edi, DWORD PTR __t$512492[ebp]
$LL803@ParseExtra:
  00149	8a 08		 mov	 cl, BYTE PTR [eax]
  0014b	3a 0f		 cmp	 cl, BYTE PTR [edi]
  0014d	75 1a		 jne	 SHORT $LN804@ParseExtra
  0014f	3a cb		 cmp	 cl, bl
  00151	74 12		 je	 SHORT $LN805@ParseExtra
  00153	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00156	3a 4f 01	 cmp	 cl, BYTE PTR [edi+1]
  00159	75 0e		 jne	 SHORT $LN804@ParseExtra
  0015b	83 c0 02	 add	 eax, 2
  0015e	83 c7 02	 add	 edi, 2
  00161	3a cb		 cmp	 cl, bl
  00163	75 e4		 jne	 SHORT $LL803@ParseExtra
$LN805@ParseExtra:
  00165	33 c0		 xor	 eax, eax
  00167	eb 05		 jmp	 SHORT $LN806@ParseExtra
$LN804@ParseExtra:
  00169	1b c0		 sbb	 eax, eax
  0016b	83 d8 ff	 sbb	 eax, -1
$LN806@ParseExtra:
  0016e	3b c3		 cmp	 eax, ebx

; 113  : 			continue;

  00170	0f 84 8a 01 00
	00		 je	 $LN818@ParseExtra

; 114  : 		ZeroMemory( szName, sizeof( szName ) );

  00176	56		 push	 esi
  00177	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szName$505713[ebp]
  0017d	53		 push	 ebx
  0017e	50		 push	 eax
  0017f	e8 00 00 00 00	 call	 _memset
  00184	83 c4 0c	 add	 esp, 12			; 0000000cH
  00187	6a 04		 push	 4

; 115  : 		StringCbPrintf_e( szName, sizeof( szName ), "Present_Name1_%d", i+1 );

  00189	c7 45 d8 bd 9e
	8e 99		 mov	 DWORD PTR ___encStr$505879[ebp], -1718706499 ; 998e9ebdH
  00190	c7 45 dc 88 82
	9f b5		 mov	 DWORD PTR ___encStr$505879[ebp+4], -1247837560 ; b59f8288H
  00197	c7 45 e0 a3 8d
	86 8f		 mov	 DWORD PTR ___encStr$505879[ebp+8], -1887007325 ; 8f868da3H
  0019e	c7 45 e4 dc b3
	ce 8e		 mov	 DWORD PTR ___encStr$505879[ebp+12], -1899056164 ; 8eceb3dcH
  001a5	8d 45 d8	 lea	 eax, DWORD PTR ___encStr$505879[ebp]
  001a8	88 5d e8	 mov	 BYTE PTR ___encStr$505879[ebp+16], bl
  001ab	59		 pop	 ecx
$LL550@ParseExtra:
  001ac	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001b2	83 c0 04	 add	 eax, 4
  001b5	49		 dec	 ecx
  001b6	75 f4		 jne	 SHORT $LL550@ParseExtra
  001b8	ff b5 d0 fe ff
	ff		 push	 DWORD PTR tv5431[ebp]
  001be	8d 45 d8	 lea	 eax, DWORD PTR ___encStr$505879[ebp]
  001c1	50		 push	 eax
  001c2	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szName$505713[ebp]
  001c8	56		 push	 esi
  001c9	50		 push	 eax
  001ca	e8 00 00 00 00	 call	 ?StringCbPrintfA@@YAJPADIPBDZZ ; StringCbPrintfA

; 116  : 		kInfo.m_szPresentName1 = xElement.GetStringAttribute( szName );

  001cf	8b 8d c8 fe ff
	ff		 mov	 ecx, DWORD PTR _xElement$GSCopy$[ebp]
  001d5	83 c4 10	 add	 esp, 16			; 00000010H
  001d8	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szName$505713[ebp]
  001de	50		 push	 eax
  001df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetStringAttribute@ioXMLElement@@QBEPBDPBD@Z
  001e5	50		 push	 eax
  001e6	8d 8d 94 fe ff
	ff		 lea	 ecx, DWORD PTR _kInfo$505712[ebp+16]
  001ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z

; 117  : 		if( kInfo.m_szPresentName1 == "" )

  001f2	8b 85 94 fe ff
	ff		 mov	 eax, DWORD PTR _kInfo$505712[ebp+16]
  001f8	88 9d b5 fe ff
	ff		 mov	 BYTE PTR __t$512627[ebp], bl
  001fe	8d bd b5 fe ff
	ff		 lea	 edi, DWORD PTR __t$512627[ebp]
$LL807@ParseExtra:
  00204	8a 08		 mov	 cl, BYTE PTR [eax]
  00206	3a 0f		 cmp	 cl, BYTE PTR [edi]
  00208	75 1a		 jne	 SHORT $LN808@ParseExtra
  0020a	3a cb		 cmp	 cl, bl
  0020c	74 12		 je	 SHORT $LN809@ParseExtra
  0020e	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00211	3a 4f 01	 cmp	 cl, BYTE PTR [edi+1]
  00214	75 0e		 jne	 SHORT $LN808@ParseExtra
  00216	83 c0 02	 add	 eax, 2
  00219	83 c7 02	 add	 edi, 2
  0021c	3a cb		 cmp	 cl, bl
  0021e	75 e4		 jne	 SHORT $LL807@ParseExtra
$LN809@ParseExtra:
  00220	33 c0		 xor	 eax, eax
  00222	eb 05		 jmp	 SHORT $LN810@ParseExtra
$LN808@ParseExtra:
  00224	1b c0		 sbb	 eax, eax
  00226	83 d8 ff	 sbb	 eax, -1
$LN810@ParseExtra:
  00229	3b c3		 cmp	 eax, ebx

; 118  : 			continue;

  0022b	0f 84 cf 00 00
	00		 je	 $LN818@ParseExtra

; 119  : 
; 120  : 		ZeroMemory( szName, sizeof( szName ) );

  00231	56		 push	 esi
  00232	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szName$505713[ebp]
  00238	53		 push	 ebx
  00239	50		 push	 eax
  0023a	e8 00 00 00 00	 call	 _memset
  0023f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00242	6a 04		 push	 4

; 121  : 		StringCbPrintf_e( szName, sizeof( szName ), "Present_Name2_%d", i+1 );

  00244	c7 45 d8 bd 9e
	8e 99		 mov	 DWORD PTR ___encStr$506032[ebp], -1718706499 ; 998e9ebdH
  0024b	c7 45 dc 88 82
	9f b5		 mov	 DWORD PTR ___encStr$506032[ebp+4], -1247837560 ; b59f8288H
  00252	c7 45 e0 a3 8d
	86 8f		 mov	 DWORD PTR ___encStr$506032[ebp+8], -1887007325 ; 8f868da3H
  00259	c7 45 e4 df b3
	ce 8e		 mov	 DWORD PTR ___encStr$506032[ebp+12], -1899056161 ; 8eceb3dfH
  00260	8d 45 d8	 lea	 eax, DWORD PTR ___encStr$506032[ebp]
  00263	88 5d e8	 mov	 BYTE PTR ___encStr$506032[ebp+16], bl
  00266	59		 pop	 ecx
$LL664@ParseExtra:
  00267	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0026d	83 c0 04	 add	 eax, 4
  00270	49		 dec	 ecx
  00271	75 f4		 jne	 SHORT $LL664@ParseExtra
  00273	ff b5 d0 fe ff
	ff		 push	 DWORD PTR tv5431[ebp]
  00279	8d 45 d8	 lea	 eax, DWORD PTR ___encStr$506032[ebp]
  0027c	50		 push	 eax
  0027d	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szName$505713[ebp]
  00283	56		 push	 esi
  00284	50		 push	 eax
  00285	e8 00 00 00 00	 call	 ?StringCbPrintfA@@YAJPADIPBDZZ ; StringCbPrintfA

; 122  : 		kInfo.m_szPresentName2 = xElement.GetStringAttribute( szName );

  0028a	8b 8d c8 fe ff
	ff		 mov	 ecx, DWORD PTR _xElement$GSCopy$[ebp]
  00290	83 c4 10	 add	 esp, 16			; 00000010H
  00293	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _szName$505713[ebp]
  00299	50		 push	 eax
  0029a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetStringAttribute@ioXMLElement@@QBEPBDPBD@Z
  002a0	50		 push	 eax
  002a1	8d 8d a4 fe ff
	ff		 lea	 ecx, DWORD PTR _kInfo$505712[ebp+32]
  002a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z

; 123  : 		if( kInfo.m_szPresentName2 == "" )

  002ad	8b 85 a4 fe ff
	ff		 mov	 eax, DWORD PTR _kInfo$505712[ebp+32]
  002b3	88 9d ba fe ff
	ff		 mov	 BYTE PTR __t$512762[ebp], bl
  002b9	8d bd ba fe ff
	ff		 lea	 edi, DWORD PTR __t$512762[ebp]
$LL811@ParseExtra:
  002bf	8a 08		 mov	 cl, BYTE PTR [eax]
  002c1	3a 0f		 cmp	 cl, BYTE PTR [edi]
  002c3	75 1a		 jne	 SHORT $LN812@ParseExtra
  002c5	3a cb		 cmp	 cl, bl
  002c7	74 12		 je	 SHORT $LN813@ParseExtra
  002c9	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  002cc	3a 4f 01	 cmp	 cl, BYTE PTR [edi+1]
  002cf	75 0e		 jne	 SHORT $LN812@ParseExtra
  002d1	83 c0 02	 add	 eax, 2
  002d4	83 c7 02	 add	 edi, 2
  002d7	3a cb		 cmp	 cl, bl
  002d9	75 e4		 jne	 SHORT $LL811@ParseExtra
$LN813@ParseExtra:
  002db	33 c0		 xor	 eax, eax
  002dd	eb 05		 jmp	 SHORT $LN814@ParseExtra
$LN812@ParseExtra:
  002df	1b c0		 sbb	 eax, eax
  002e1	83 d8 ff	 sbb	 eax, -1
$LN814@ParseExtra:
  002e4	3b c3		 cmp	 eax, ebx

; 124  : 			continue;

  002e6	74 18		 je	 SHORT $LN818@ParseExtra

; 125  : 
; 126  : 		m_vGashponPresentInfoVec.push_back( kInfo );

  002e8	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  002ee	8d 85 84 fe ff
	ff		 lea	 eax, DWORD PTR _kInfo$505712[ebp]
  002f4	50		 push	 eax
  002f5	81 c1 78 01 00
	00		 add	 ecx, 376		; 00000178H
  002fb	e8 00 00 00 00	 call	 ?push_back@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXABUGashaponPresentInfo@GashaponPresentListWnd@@@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::push_back
$LN818@ParseExtra:

; 127  : 	}

  00300	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00304	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR _kInfo$505712[ebp]
  0030a	e8 00 00 00 00	 call	 ??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
  0030f	ff 85 d0 fe ff
	ff		 inc	 DWORD PTR tv5431[ebp]
  00315	ff 8d cc fe ff
	ff		 dec	 DWORD PTR tv238[ebp]
  0031b	0f 85 89 fd ff
	ff		 jne	 $LN303@ParseExtra
$LN301@ParseExtra:

; 128  : 
; 129  : 	SetMaxPage();

  00321	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00327	e8 00 00 00 00	 call	 ?SetMaxPage@GashaponPresentListWnd@@IAEXXZ ; GashaponPresentListWnd::SetMaxPage

; 130  : }

  0032c	e8 00 00 00 00	 call	 __EH_epilog3_GS
  00331	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ParseExtraInfo@GashaponPresentListWnd@@UAEXAAVioXMLElement@@@Z$0:
  00000	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR _kInfo$505712[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
__ehhandler$?ParseExtraInfo@GashaponPresentListWnd@@UAEXAAVioXMLElement@@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 80 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-384]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ParseExtraInfo@GashaponPresentListWnd@@UAEXAAVioXMLElement@@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ParseExtraInfo@GashaponPresentListWnd@@UAEXAAVioXMLElement@@@Z ENDP ; GashaponPresentListWnd::ParseExtraInfo
PUBLIC	??_C@_0BJ@BIKFFKJG@?$CFs?5Size?5Error?5?$FL?$CFd?1?$CFd?1?$CFd?$FN?$AA@ ; `string'
PUBLIC	??_C@_0CI@MDLGJDKP@GashaponPresentListWnd?3?3SetGasha@ ; `string'
PUBLIC	?SetGashaponList@GashaponPresentListWnd@@IAEXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z ; GashaponPresentListWnd::SetGashaponList
EXTRN	__imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ:PROC
EXTRN	__imp_?LOG@@3VCLog@@A:BYTE
EXTRN	?GetPresentValue2Text@ioPresentMgr@@QAEABVioHashString@@FHH@Z:PROC ; ioPresentMgr::GetPresentValue2Text
EXTRN	?GetPresentValue1Text@ioPresentMgr@@QAEABVioHashString@@FHH@Z:PROC ; ioPresentMgr::GetPresentValue1Text
EXTRN	?GetSingleton@ioPresentMgr@@SAAAV1@XZ:PROC	; ioPresentMgr::GetSingleton
EXTRN	__imp_?IsEmpty@ioHashString@@QBE_NXZ:PROC
;	COMDAT ??_C@_0BJ@BIKFFKJG@?$CFs?5Size?5Error?5?$FL?$CFd?1?$CFd?1?$CFd?$FN?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
CONST	SEGMENT
??_C@_0BJ@BIKFFKJG@?$CFs?5Size?5Error?5?$FL?$CFd?1?$CFd?1?$CFd?$FN?$AA@ DB '%'
	DB	's Size Error [%d/%d/%d]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@MDLGJDKP@GashaponPresentListWnd?3?3SetGasha@
CONST	SEGMENT
??_C@_0CI@MDLGJDKP@GashaponPresentListWnd?3?3SetGasha@ DB 'GashaponPresen'
	DB	'tListWnd::SetGashaponList', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetGashaponList@GashaponPresentListWnd@@IAEXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetGashaponList@GashaponPresentListWnd@@IAEXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SetGashaponList@GashaponPresentListWnd@@IAEXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z$1
__ehfuncinfo$?SetGashaponList@GashaponPresentListWnd@@IAEXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetGashaponList@GashaponPresentListWnd@@IAEXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\gashaponpresentlistwnd.cpp
xdata$x	ENDS
;	COMDAT ?SetGashaponList@GashaponPresentListWnd@@IAEXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z
_TEXT	SEGMENT
_kInfo$506490 = -84					; size = 48
_szIconName$506488 = -36				; size = 16
$T512993 = -20						; size = 4
_iSize$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_i$506484 = 8						; size = 4
_rPresentTypeList$ = 8					; size = 4
_rPresentValue1List$ = 12				; size = 4
_rPresentValue2List$ = 16				; size = 4
_rPresentValue3List$ = 20				; size = 4
_rPresentValue4List$ = 24				; size = 4
?SetGashaponList@GashaponPresentListWnd@@IAEXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z PROC ; GashaponPresentListWnd::SetGashaponList, COMDAT
; _this$ = ecx

; 389  : {

  00000	6a 48		 push	 72			; 00000048H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?SetGashaponList@GashaponPresentListWnd@@IAEXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 390  : 	m_vGashponPresentInfoVec.clear();

  0000f	8b 81 7c 01 00
	00		 mov	 eax, DWORD PTR [ecx+380]
  00015	81 c1 78 01 00
	00		 add	 ecx, 376		; 00000178H
  0001b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001d	50		 push	 eax
  0001e	52		 push	 edx
  0001f	8d 45 ec	 lea	 eax, DWORD PTR $T512993[ebp]
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ?erase@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@@2@0@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::erase

; 391  : 
; 392  : 	int iSize = rPresentTypeList.size();
; 393  : 
; 394  : 	if( iSize != rPresentValue1List.size() || 
; 395  : 		iSize != rPresentValue2List.size() ||
; 396  : 		iSize != rPresentValue3List.size() ||
; 397  : 		iSize != rPresentValue4List.size() )

  00028	8b 55 0c	 mov	 edx, DWORD PTR _rPresentValue1List$[ebp]
  0002b	8b 5d 08	 mov	 ebx, DWORD PTR _rPresentTypeList$[ebp]
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00034	2b 0a		 sub	 ecx, DWORD PTR [edx]
  00036	2b 03		 sub	 eax, DWORD PTR [ebx]
  00038	8b 55 10	 mov	 edx, DWORD PTR _rPresentValue2List$[ebp]
  0003b	c1 f8 02	 sar	 eax, 2
  0003e	c1 f9 02	 sar	 ecx, 2
  00041	89 45 ec	 mov	 DWORD PTR _iSize$[ebp], eax
  00044	3b c1		 cmp	 eax, ecx
  00046	0f 85 35 01 00
	00		 jne	 $LN5@SetGashapo
  0004c	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0004f	2b 32		 sub	 esi, DWORD PTR [edx]
  00051	c1 fe 02	 sar	 esi, 2
  00054	3b c6		 cmp	 eax, esi
  00056	0f 85 25 01 00
	00		 jne	 $LN5@SetGashapo
  0005c	8b 75 14	 mov	 esi, DWORD PTR _rPresentValue3List$[ebp]
  0005f	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  00062	2b 3e		 sub	 edi, DWORD PTR [esi]
  00064	c1 ff 02	 sar	 edi, 2
  00067	3b c7		 cmp	 eax, edi
  00069	0f 85 12 01 00
	00		 jne	 $LN5@SetGashapo
  0006f	8b 75 18	 mov	 esi, DWORD PTR _rPresentValue4List$[ebp]
  00072	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  00075	2b 3e		 sub	 edi, DWORD PTR [esi]
  00077	c1 ff 02	 sar	 edi, 2
  0007a	3b c7		 cmp	 eax, edi
  0007c	0f 85 ff 00 00
	00		 jne	 $LN5@SetGashapo

; 400  : 		return;
; 401  : 	}
; 402  : 
; 403  : 	for (int i = 0; i < iSize ; i++)

  00082	83 65 08 00	 and	 DWORD PTR _i$506484[ebp], 0
  00086	85 c0		 test	 eax, eax
  00088	0f 8e e9 00 00
	00		 jle	 $LN2@SetGashapo
  0008e	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
$LN4@SetGashapo:

; 404  : 	{
; 405  : 		ioHashString szIconName;

  00094	8d 4d dc	 lea	 ecx, DWORD PTR _szIconName$506488[ebp]
  00097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ
  0009d	8b 75 08	 mov	 esi, DWORD PTR _i$506484[ebp]

; 406  : 		GetPresentIconName( szIconName, rPresentTypeList[i], rPresentValue1List[i], rPresentValue2List[i] );

  000a0	8b 45 10	 mov	 eax, DWORD PTR _rPresentValue2List$[ebp]
  000a3	8b 00		 mov	 eax, DWORD PTR [eax]
  000a5	ff 34 b0	 push	 DWORD PTR [eax+esi*4]
  000a8	8b 45 0c	 mov	 eax, DWORD PTR _rPresentValue1List$[ebp]
  000ab	8b 00		 mov	 eax, DWORD PTR [eax]
  000ad	ff 34 b0	 push	 DWORD PTR [eax+esi*4]
  000b0	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b2	ff 34 b0	 push	 DWORD PTR [eax+esi*4]
  000b5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  000bc	8d 45 dc	 lea	 eax, DWORD PTR _szIconName$506488[ebp]
  000bf	50		 push	 eax
  000c0	e8 00 00 00 00	 call	 ?GetPresentIconName@GashaponPresentListWnd@@IAEXAAVioHashString@@HHH@Z ; GashaponPresentListWnd::GetPresentIconName

; 407  : 		if( szIconName.IsEmpty() )

  000c5	8d 4d dc	 lea	 ecx, DWORD PTR _szIconName$506488[ebp]
  000c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@ioHashString@@QBE_NXZ
  000ce	84 c0		 test	 al, al

; 408  : 			continue;

  000d0	0f 85 85 00 00
	00		 jne	 $LN67@SetGashapo

; 409  : 		GashaponPresentInfo kInfo;

  000d6	8d 4d ac	 lea	 ecx, DWORD PTR _kInfo$506490[ebp]
  000d9	e8 00 00 00 00	 call	 ??0GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ

; 410  : 		kInfo.m_szIconName = szIconName;

  000de	8d 45 dc	 lea	 eax, DWORD PTR _szIconName$506488[ebp]
  000e1	50		 push	 eax
  000e2	8d 4d ac	 lea	 ecx, DWORD PTR _kInfo$506490[ebp]
  000e5	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000e9	ff d7		 call	 edi
  000eb	8b 45 10	 mov	 eax, DWORD PTR _rPresentValue2List$[ebp]
  000ee	8b 00		 mov	 eax, DWORD PTR [eax]

; 411  : 		kInfo.m_szPresentName1 = g_PresentMgr.GetPresentValue1Text( rPresentTypeList[i], rPresentValue1List[i], rPresentValue2List[i] );

  000f0	ff 34 b0	 push	 DWORD PTR [eax+esi*4]
  000f3	8b 4d 0c	 mov	 ecx, DWORD PTR _rPresentValue1List$[ebp]
  000f6	8b 13		 mov	 edx, DWORD PTR [ebx]
  000f8	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000fa	0f b7 04 b2	 movzx	 eax, WORD PTR [edx+esi*4]
  000fe	ff 34 b1	 push	 DWORD PTR [ecx+esi*4]
  00101	50		 push	 eax
  00102	e8 00 00 00 00	 call	 ?GetSingleton@ioPresentMgr@@SAAAV1@XZ ; ioPresentMgr::GetSingleton
  00107	8b c8		 mov	 ecx, eax
  00109	e8 00 00 00 00	 call	 ?GetPresentValue1Text@ioPresentMgr@@QAEABVioHashString@@FHH@Z ; ioPresentMgr::GetPresentValue1Text
  0010e	50		 push	 eax
  0010f	8d 4d bc	 lea	 ecx, DWORD PTR _kInfo$506490[ebp+16]
  00112	ff d7		 call	 edi
  00114	8b 45 10	 mov	 eax, DWORD PTR _rPresentValue2List$[ebp]
  00117	8b 00		 mov	 eax, DWORD PTR [eax]

; 412  : 		kInfo.m_szPresentName2 = g_PresentMgr.GetPresentValue2Text( rPresentTypeList[i], rPresentValue1List[i], rPresentValue2List[i] );

  00119	ff 34 b0	 push	 DWORD PTR [eax+esi*4]
  0011c	8b 4d 0c	 mov	 ecx, DWORD PTR _rPresentValue1List$[ebp]
  0011f	8b 13		 mov	 edx, DWORD PTR [ebx]
  00121	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00123	0f b7 04 b2	 movzx	 eax, WORD PTR [edx+esi*4]
  00127	ff 34 b1	 push	 DWORD PTR [ecx+esi*4]
  0012a	50		 push	 eax
  0012b	e8 00 00 00 00	 call	 ?GetSingleton@ioPresentMgr@@SAAAV1@XZ ; ioPresentMgr::GetSingleton
  00130	8b c8		 mov	 ecx, eax
  00132	e8 00 00 00 00	 call	 ?GetPresentValue2Text@ioPresentMgr@@QAEABVioHashString@@FHH@Z ; ioPresentMgr::GetPresentValue2Text
  00137	50		 push	 eax
  00138	8d 4d cc	 lea	 ecx, DWORD PTR _kInfo$506490[ebp+32]
  0013b	ff d7		 call	 edi

; 413  : 		m_vGashponPresentInfoVec.push_back( kInfo );

  0013d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00140	8d 45 ac	 lea	 eax, DWORD PTR _kInfo$506490[ebp]
  00143	50		 push	 eax
  00144	81 c1 78 01 00
	00		 add	 ecx, 376		; 00000178H
  0014a	e8 00 00 00 00	 call	 ?push_back@?$vector@UGashaponPresentInfo@GashaponPresentListWnd@@V?$allocator@UGashaponPresentInfo@GashaponPresentListWnd@@@std@@@std@@QAEXABUGashaponPresentInfo@GashaponPresentListWnd@@@Z ; std::vector<GashaponPresentListWnd::GashaponPresentInfo,std::allocator<GashaponPresentListWnd::GashaponPresentInfo> >::push_back

; 414  : 	}

  0014f	8d 4d ac	 lea	 ecx, DWORD PTR _kInfo$506490[ebp]
  00152	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00156	e8 00 00 00 00	 call	 ??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
$LN67@SetGashapo:
  0015b	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0015f	8d 4d dc	 lea	 ecx, DWORD PTR _szIconName$506488[ebp]
  00162	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00168	ff 45 08	 inc	 DWORD PTR _i$506484[ebp]
  0016b	8b 45 08	 mov	 eax, DWORD PTR _i$506484[ebp]
  0016e	3b 45 ec	 cmp	 eax, DWORD PTR _iSize$[ebp]
  00171	0f 8c 1d ff ff
	ff		 jl	 $LN4@SetGashapo
$LN2@SetGashapo:

; 415  : 
; 416  : 	SetMaxPage();

  00177	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0017a	e8 00 00 00 00	 call	 ?SetMaxPage@GashaponPresentListWnd@@IAEXXZ ; GashaponPresentListWnd::SetMaxPage
  0017f	eb 26		 jmp	 SHORT $LN7@SetGashapo
$LN5@SetGashapo:

; 398  : 	{
; 399  : 		LOG.PrintTimeAndLog( 0, "%s Size Error [%d/%d/%d]", __FUNCTION__, iSize, rPresentValue1List.size(), rPresentValue2List.size() );

  00181	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  00184	2b 32		 sub	 esi, DWORD PTR [edx]
  00186	c1 fe 02	 sar	 esi, 2
  00189	56		 push	 esi
  0018a	51		 push	 ecx
  0018b	50		 push	 eax
  0018c	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@MDLGJDKP@GashaponPresentListWnd?3?3SetGasha@
  00191	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BIKFFKJG@?$CFs?5Size?5Error?5?$FL?$CFd?1?$CFd?1?$CFd?$FN?$AA@
  00196	6a 00		 push	 0
  00198	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  0019e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  001a4	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN7@SetGashapo:

; 417  : }

  001a7	e8 00 00 00 00	 call	 __EH_epilog3
  001ac	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetGashaponList@GashaponPresentListWnd@@IAEXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _szIconName$506488[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?SetGashaponList@GashaponPresentListWnd@@IAEXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z$1:
  00009	8d 4d ac	 lea	 ecx, DWORD PTR _kInfo$506490[ebp]
  0000c	e9 00 00 00 00	 jmp	 ??1GashaponPresentInfo@GashaponPresentListWnd@@QAE@XZ
__ehhandler$?SetGashaponList@GashaponPresentListWnd@@IAEXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetGashaponList@GashaponPresentListWnd@@IAEXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetGashaponList@GashaponPresentListWnd@@IAEXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z ENDP ; GashaponPresentListWnd::SetGashaponList
PUBLIC	?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$513174 = 16					; size = 1
__Cat$513151 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __First_arg$[ebp]
  00006	53		 push	 ebx
  00007	8b 5d 08	 mov	 ebx, DWORD PTR ___$ReturnUdt$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	89 03		 mov	 DWORD PTR [ebx], eax

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 45 10	 cmp	 eax, DWORD PTR __Last_arg$[ebp]
  00012	74 2a		 je	 SHORT $LN1@erase@4

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00017	57		 push	 edi
  00018	ff 75 10	 push	 DWORD PTR __Cat$513151[ebp]
  0001b	50		 push	 eax
  0001c	51		 push	 ecx
  0001d	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  00020	e8 00 00 00 00	 call	 ??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);

  00025	ff 75 10	 push	 DWORD PTR __Cat$513174[ebp]
  00028	8b f8		 mov	 edi, eax
  0002a	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  0002d	50		 push	 eax
  0002e	ff 76 04	 push	 DWORD PTR [esi+4]
  00031	57		 push	 edi
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00037	83 c4 20	 add	 esp, 32			; 00000020H

; 1211 : 			this->_Mylast = _Ptr;

  0003a	89 7e 04	 mov	 DWORD PTR [esi+4], edi
  0003d	5f		 pop	 edi
$LN1@erase@4:

; 1212 : 			}
; 1213 : 		return (_First);

  0003e	5e		 pop	 esi
  0003f	8b c3		 mov	 eax, ebx
  00041	5b		 pop	 ebx

; 1214 : 		}

  00042	5d		 pop	 ebp
  00043	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$513184 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$513184[ebp]
  00007	6a 00		 push	 0
  00009	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000c	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00012	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00015	e8 00 00 00 00	 call	 ??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0001a	83 c4 18	 add	 esp, 24			; 00000018H

; 472  : 	}

  0001d	c9		 leave
  0001e	c3		 ret	 0
??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
__Cat$513208 = -4					; size = 1
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00007	83 3e 00	 cmp	 DWORD PTR [esi], 0
  0000a	74 21		 je	 SHORT $LN10@Tidy@4

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);

  00012	ff 75 fc	 push	 DWORD PTR __Cat$513208[ebp]
  00015	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00018	50		 push	 eax
  00019	ff 76 04	 push	 DWORD PTR [esi+4]
  0001c	ff 36		 push	 DWORD PTR [esi]
  0001e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  00023	ff 36		 push	 DWORD PTR [esi]
  00025	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002a	83 c4 14	 add	 esp, 20			; 00000014H
$LN10@Tidy@4:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  0002d	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00030	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  00034	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00038	5e		 pop	 esi

; 1312 : 		}

  00039	c9		 leave
  0003a	c3		 ret	 0
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
_TEXT	ENDS
PUBLIC	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
$T513225 = -4						; size = 4
?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T513225[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
_TEXT	ENDS
PUBLIC	??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogsp
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??_7GashaponPresentListBtn@@6B@			; GashaponPresentListBtn::`vftable'
PUBLIC	??0GashaponPresentListBtn@@QAE@XZ		; GashaponPresentListBtn::GashaponPresentListBtn
PUBLIC	??_R4GashaponPresentListBtn@@6B@		; GashaponPresentListBtn::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVGashaponPresentListBtn@@@8		; GashaponPresentListBtn `RTTI Type Descriptor'
PUBLIC	??_R3GashaponPresentListBtn@@8			; GashaponPresentListBtn::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GashaponPresentListBtn@@8			; GashaponPresentListBtn::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@GashaponPresentListBtn@@8		; GashaponPresentListBtn::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@NewShopIconBtn@@8			; NewShopIconBtn::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVNewShopIconBtn@@@8			; NewShopIconBtn `RTTI Type Descriptor'
PUBLIC	??_R3NewShopIconBtn@@8				; NewShopIconBtn::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NewShopIconBtn@@8				; NewShopIconBtn::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioButton@@8			; ioButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioButton@@@8				; ioButton `RTTI Type Descriptor'
PUBLIC	??_R3ioButton@@8				; ioButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioButton@@8				; ioButton::`RTTI Base Class Array'
EXTRN	??0NewShopIconBtn@@QAE@XZ:PROC			; NewShopIconBtn::NewShopIconBtn
EXTRN	?AddRenderFrame@NewShopIconBtn@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z:PROC ; NewShopIconBtn::AddRenderFrame
EXTRN	?AddRenderImage@NewShopIconBtn@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC ; NewShopIconBtn::AddRenderImage
EXTRN	?ParseExtraInfo@NewShopIconBtn@@UAEXAAVioXMLElement@@@Z:PROC ; NewShopIconBtn::ParseExtraInfo
EXTRN	?SetWindowAlpha@ioButton@@UAEXH@Z:PROC		; ioButton::SetWindowAlpha
EXTRN	?OnProcess@NewShopIconBtn@@MAEXM@Z:PROC		; NewShopIconBtn::OnProcess
EXTRN	?CheckFrameReSize@ioButton@@MAEXHHHH@Z:PROC	; ioButton::CheckFrameReSize
EXTRN	?iwm_lbuttondown@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_lbuttondown
EXTRN	?iwm_lbuttonup@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_lbuttonup
EXTRN	?iwm_lbuttonDBLCLK@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_lbuttonDBLCLK
EXTRN	?iwm_rbuttondown@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_rbuttondown
EXTRN	?iwm_rbuttonup@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_rbuttonup
EXTRN	?iwm_command@ioWnd@@UAEXPAV1@HK@Z:PROC		; ioWnd::iwm_command
EXTRN	?iwm_mouseover@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_mouseover
EXTRN	?iwm_show@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_show
EXTRN	?GetWndType@ioButton@@UBEKXZ:PROC		; ioButton::GetWndType
EXTRN	?GetHeaderFileName@ioButton@@UAEPBDXZ:PROC	; ioButton::GetHeaderFileName
EXTRN	?GetTemplateName@ioButton@@UAEPBDXZ:PROC	; ioButton::GetTemplateName
EXTRN	?GetDefClassName@ioButton@@UBEPBDXZ:PROC	; ioButton::GetDefClassName
EXTRN	?_Clone@ioButton@@UAEPAVioWnd@@XZ:PROC		; ioButton::_Clone
EXTRN	?Copy@ioButton@@UAEXPAVioWnd@@@Z:PROC		; ioButton::Copy
EXTRN	?SetSaveData@ioButton@@UAEXAAVioXMLElement@@@Z:PROC ; ioButton::SetSaveData
EXTRN	?GetNumFixedRenderFrame@ioButton@@UBEHXZ:PROC	; ioButton::GetNumFixedRenderFrame
EXTRN	?GetFixedRenderFrameType@ioButton@@UAEPBDH@Z:PROC ; ioButton::GetFixedRenderFrameType
EXTRN	?GetRenderFrame@ioButton@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioButton::GetRenderFrame
EXTRN	?GetNumFixedRenderImage@ioButton@@UBEHXZ:PROC	; ioButton::GetNumFixedRenderImage
EXTRN	?GetFixedRenderImageType@ioButton@@UAEPBDH@Z:PROC ; ioButton::GetFixedRenderImageType
EXTRN	?GetRenderImage@ioButton@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioButton::GetRenderImage
EXTRN	??_EGashaponPresentListBtn@@UAEPAXI@Z:PROC	; GashaponPresentListBtn::`vector deleting destructor'
EXTRN	?OnDrawNormal@NewShopIconBtn@@MAEXHH@Z:PROC	; NewShopIconBtn::OnDrawNormal
EXTRN	?OnDrawOvered@NewShopIconBtn@@MAEXHH@Z:PROC	; NewShopIconBtn::OnDrawOvered
EXTRN	?OnDrawOveredAdd@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawOveredAdd
EXTRN	?OnDrawPushed@NewShopIconBtn@@MAEXHH@Z:PROC	; NewShopIconBtn::OnDrawPushed
EXTRN	?OnDrawDisabled@NewShopIconBtn@@MAEXHH@Z:PROC	; NewShopIconBtn::OnDrawDisabled
EXTRN	?OnDrawExDisabledNormal@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawExDisabledNormal
EXTRN	?OnDrawExDisabledOvered@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawExDisabledOvered
EXTRN	?OnDrawExDisabledPushed@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawExDisabledPushed
EXTRN	?OnDrawBack@ioButton@@MAEXHH@Z:PROC		; ioButton::OnDrawBack
EXTRN	?OnDrawNormalList@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawNormalList
EXTRN	?OnDrawDisableList@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawDisableList
;	COMDAT ??_R2ioButton@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
rdata$r	SEGMENT
??_R2ioButton@@8 DD FLAT:??_R1A@?0A@EA@ioButton@@8	; ioButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3ioButton@@8
rdata$r	SEGMENT
??_R3ioButton@@8 DD 00H					; ioButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioButton@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioButton@@@8
_DATA	SEGMENT
??_R0?AVioButton@@@8 DD FLAT:??_7type_info@@6B@		; ioButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioButton@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioButton@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioButton@@8 DD FLAT:??_R0?AVioButton@@@8	; ioButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioButton@@8
rdata$r	ENDS
;	COMDAT ??_R2NewShopIconBtn@@8
rdata$r	SEGMENT
??_R2NewShopIconBtn@@8 DD FLAT:??_R1A@?0A@EA@NewShopIconBtn@@8 ; NewShopIconBtn::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioButton@@8
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3NewShopIconBtn@@8
rdata$r	SEGMENT
??_R3NewShopIconBtn@@8 DD 00H				; NewShopIconBtn::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NewShopIconBtn@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNewShopIconBtn@@@8
_DATA	SEGMENT
??_R0?AVNewShopIconBtn@@@8 DD FLAT:??_7type_info@@6B@	; NewShopIconBtn `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNewShopIconBtn@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@NewShopIconBtn@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NewShopIconBtn@@8 DD FLAT:??_R0?AVNewShopIconBtn@@@8 ; NewShopIconBtn::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NewShopIconBtn@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@GashaponPresentListBtn@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GashaponPresentListBtn@@8 DD FLAT:??_R0?AVGashaponPresentListBtn@@@8 ; GashaponPresentListBtn::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GashaponPresentListBtn@@8
rdata$r	ENDS
;	COMDAT ??_R2GashaponPresentListBtn@@8
rdata$r	SEGMENT
??_R2GashaponPresentListBtn@@8 DD FLAT:??_R1A@?0A@EA@GashaponPresentListBtn@@8 ; GashaponPresentListBtn::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NewShopIconBtn@@8
	DD	FLAT:??_R1A@?0A@EA@ioButton@@8
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3GashaponPresentListBtn@@8
rdata$r	SEGMENT
??_R3GashaponPresentListBtn@@8 DD 00H			; GashaponPresentListBtn::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2GashaponPresentListBtn@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGashaponPresentListBtn@@@8
_DATA	SEGMENT
??_R0?AVGashaponPresentListBtn@@@8 DD FLAT:??_7type_info@@6B@ ; GashaponPresentListBtn `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGashaponPresentListBtn@@', 00H
_DATA	ENDS
;	COMDAT ??_R4GashaponPresentListBtn@@6B@
rdata$r	SEGMENT
??_R4GashaponPresentListBtn@@6B@ DD 00H			; GashaponPresentListBtn::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGashaponPresentListBtn@@@8
	DD	FLAT:??_R3GashaponPresentListBtn@@8
rdata$r	ENDS
;	COMDAT ??_7GashaponPresentListBtn@@6B@
CONST	SEGMENT
??_7GashaponPresentListBtn@@6B@ DD FLAT:??_R4GashaponPresentListBtn@@6B@ ; GashaponPresentListBtn::`vftable'
	DD	FLAT:?AddRenderFrame@NewShopIconBtn@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
	DD	FLAT:?AddRenderImage@NewShopIconBtn@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z
	DD	FLAT:?ParseExtraInfo@NewShopIconBtn@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z
	DD	FLAT:?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z
	DD	FLAT:?SetWindowAlpha@ioButton@@UAEXH@Z
	DD	FLAT:?SetActive@ioWnd@@UAEXXZ
	DD	FLAT:?SetInActive@ioWnd@@UAEXXZ
	DD	FLAT:?ClearElementImageList@ioWnd@@UAEXXZ
	DD	FLAT:?SetSize@ioWnd@@UAEXHH@Z
	DD	FLAT:?SetPositionToDefault@ioWnd@@UAEXHH_N0@Z
	DD	FLAT:?IsNeedProcess@ioWnd@@UBE_NXZ
	DD	FLAT:?IsCanMouseReaction@ioWnd@@UBE_NXZ
	DD	FLAT:?AddChild@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?DeleteChild@ioWnd@@UAEXK@Z
	DD	FLAT:?DeleteAllChild@ioWnd@@UAEXXZ
	DD	FLAT:?OnRenderShowAndHide@ioWnd@@MAE_NXZ
	DD	FLAT:?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRender@GashaponPresentListBtn@@MAEXXZ
	DD	FLAT:?OnRenderAfterChild@ioWnd@@MAEXXZ
	DD	FLAT:?OnProcess@NewShopIconBtn@@MAEXM@Z
	DD	FLAT:?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z
	DD	FLAT:?CheckFrameReSize@ioButton@@MAEXHHHH@Z
	DD	FLAT:?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z
	DD	FLAT:?iwm_create@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_destroy@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_lbuttondown@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonup@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonDBLCLK@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttondown@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttonup@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_command@ioWnd@@UAEXPAV1@HK@Z
	DD	FLAT:?iwm_mouseover@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_vscroll@ioWnd@@UAEXKH@Z
	DD	FLAT:?iwm_wheel@ioWnd@@UAEXH@Z
	DD	FLAT:?iwm_show@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_hide@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_esc@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_spacebar@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_gototop@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragleave@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z
	DD	FLAT:?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z
	DD	FLAT:?IsEXType@ioWnd@@UBE_NXZ
	DD	FLAT:?GetWndType@ioButton@@UBEKXZ
	DD	FLAT:?RenderWnd@ioWnd@@UAEXXZ
	DD	FLAT:?SetIDEX@ioWnd@@UAEXAAK_N@Z
	DD	FLAT:?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?GetHeaderFileName@ioButton@@UAEPBDXZ
	DD	FLAT:?GetTemplateName@ioButton@@UAEPBDXZ
	DD	FLAT:?GetDefClassName@ioButton@@UBEPBDXZ
	DD	FLAT:?_Clone@ioButton@@UAEPAVioWnd@@XZ
	DD	FLAT:?Copy@ioButton@@UAEXPAVioWnd@@@Z
	DD	FLAT:?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z
	DD	FLAT:?SetSaveData@ioButton@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?SetPosX@ioWnd@@UAEXH@Z
	DD	FLAT:?SetPosY@ioWnd@@UAEXH@Z
	DD	FLAT:?SetWidth@ioWnd@@UAEXH@Z
	DD	FLAT:?SetHeight@ioWnd@@UAEXH@Z
	DD	FLAT:?GetNumFixedRenderFrame@ioButton@@UBEHXZ
	DD	FLAT:?GetFixedRenderFrameType@ioButton@@UAEPBDH@Z
	DD	FLAT:?GetRenderFrame@ioButton@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?GetNumFixedRenderImage@ioButton@@UBEHXZ
	DD	FLAT:?GetFixedRenderImageType@ioButton@@UAEPBDH@Z
	DD	FLAT:?GetRenderImage@ioButton@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z
	DD	FLAT:?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z
	DD	FLAT:??_EGashaponPresentListBtn@@UAEPAXI@Z
	DD	FLAT:?OnDrawNormal@NewShopIconBtn@@MAEXHH@Z
	DD	FLAT:?OnDrawOvered@NewShopIconBtn@@MAEXHH@Z
	DD	FLAT:?OnDrawOveredAdd@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawPushed@NewShopIconBtn@@MAEXHH@Z
	DD	FLAT:?OnDrawDisabled@NewShopIconBtn@@MAEXHH@Z
	DD	FLAT:?OnDrawExDisabledNormal@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawExDisabledOvered@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawExDisabledPushed@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawBack@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawNormalList@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawDisableList@ioButton@@MAEXHH@Z
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\gashaponpresentlistwnd.cpp
CONST	ENDS
;	COMDAT ??0GashaponPresentListBtn@@QAE@XZ
_TEXT	SEGMENT
??0GashaponPresentListBtn@@QAE@XZ PROC			; GashaponPresentListBtn::GashaponPresentListBtn, COMDAT
; _this$ = ecx

; 35   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??0NewShopIconBtn@@QAE@XZ ; NewShopIconBtn::NewShopIconBtn
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7GashaponPresentListBtn@@6B@
  0000e	33 c9		 xor	 ecx, ecx
  00010	89 8e 6c 02 00
	00		 mov	 DWORD PTR [esi+620], ecx
  00016	89 8e 70 02 00
	00		 mov	 DWORD PTR [esi+624], ecx
  0001c	89 8e 74 02 00
	00		 mov	 DWORD PTR [esi+628], ecx

; 36   : }

  00022	8b c6		 mov	 eax, esi
  00024	5e		 pop	 esi
  00025	c3		 ret	 0
??0GashaponPresentListBtn@@QAE@XZ ENDP			; GashaponPresentListBtn::GashaponPresentListBtn
_TEXT	ENDS
PUBLIC	??1GashaponPresentListBtn@@UAE@XZ		; GashaponPresentListBtn::~GashaponPresentListBtn
EXTRN	??1NewShopIconBtn@@UAE@XZ:PROC			; NewShopIconBtn::~NewShopIconBtn
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??1GashaponPresentListBtn@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1GashaponPresentListBtn@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1GashaponPresentListBtn@@UAE@XZ$1
__ehfuncinfo$??1GashaponPresentListBtn@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1GashaponPresentListBtn@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\gashaponpresentlistwnd.cpp
xdata$x	ENDS
;	COMDAT ??1GashaponPresentListBtn@@UAE@XZ
_TEXT	SEGMENT
$T513380 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1GashaponPresentListBtn@@UAE@XZ PROC			; GashaponPresentListBtn::~GashaponPresentListBtn, COMDAT
; _this$ = ecx

; 39   : {

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1GashaponPresentListBtn@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00011	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7GashaponPresentListBtn@@6B@

; 40   : 	m_szNameList.clear();

  00017	8b 87 70 02 00
	00		 mov	 eax, DWORD PTR [edi+624]
  0001d	8b 8f 6c 02 00
	00		 mov	 ecx, DWORD PTR [edi+620]
  00023	50		 push	 eax
  00024	51		 push	 ecx
  00025	8d 45 ec	 lea	 eax, DWORD PTR $T513380[ebp]
  00028	50		 push	 eax
  00029	8d 8f 6c 02 00
	00		 lea	 ecx, DWORD PTR [edi+620]
  0002f	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00036	e8 00 00 00 00	 call	 ?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase

; 41   : }

  0003b	8d 8f 6c 02 00
	00		 lea	 ecx, DWORD PTR [edi+620]
  00041	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00045	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
  0004a	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0004e	8b cf		 mov	 ecx, edi
  00050	e8 00 00 00 00	 call	 ??1NewShopIconBtn@@UAE@XZ ; NewShopIconBtn::~NewShopIconBtn
  00055	e8 00 00 00 00	 call	 __EH_epilog3
  0005a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1GashaponPresentListBtn@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1NewShopIconBtn@@UAE@XZ ; NewShopIconBtn::~NewShopIconBtn
__unwindfunclet$??1GashaponPresentListBtn@@UAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 6c 02 00
	00		 add	 ecx, 620		; 0000026cH
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$??1GashaponPresentListBtn@@UAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1GashaponPresentListBtn@@UAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1GashaponPresentListBtn@@UAE@XZ ENDP			; GashaponPresentListBtn::~GashaponPresentListBtn
PUBLIC	?ClearName@GashaponPresentListBtn@@QAEXXZ	; GashaponPresentListBtn::ClearName
; Function compile flags: /Ogsp
;	COMDAT ?ClearName@GashaponPresentListBtn@@QAEXXZ
_TEXT	SEGMENT
$T513476 = -4						; size = 4
?ClearName@GashaponPresentListBtn@@QAEXXZ PROC		; GashaponPresentListBtn::ClearName, COMDAT
; _this$ = ecx

; 77   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 78   : 	m_szNameList.clear();

  00004	8b 81 70 02 00
	00		 mov	 eax, DWORD PTR [ecx+624]
  0000a	81 c1 6c 02 00
	00		 add	 ecx, 620		; 0000026cH
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	50		 push	 eax
  00013	52		 push	 edx
  00014	8d 45 fc	 lea	 eax, DWORD PTR $T513476[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase

; 79   : }

  0001d	c9		 leave
  0001e	c3		 ret	 0
?ClearName@GashaponPresentListBtn@@QAEXXZ ENDP		; GashaponPresentListBtn::ClearName
_TEXT	ENDS
PUBLIC	?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
__Cat$513557 = 8					; size = 1
__Ptr$506995 = 8					; size = 4
__Count$ = 8						; size = 4
?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx

; 747  : 		if (max_size() < _Count)

  0000e	8b 5d 08	 mov	 ebx, DWORD PTR __Count$[ebp]
  00011	81 fb 49 92 24
	09		 cmp	 ebx, 153391689		; 09249249H
  00017	76 0b		 jbe	 SHORT $LN5@reserve@2

; 748  : 			_Xlen();	// result too long

  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN42@reserve@2:
$LN5@reserve@2:

; 749  : 		else if (capacity() < _Count)

  00024	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00027	2b 06		 sub	 eax, DWORD PTR [esi]
  00029	6a 1c		 push	 28			; 0000001cH
  0002b	99		 cdq
  0002c	59		 pop	 ecx
  0002d	f7 f9		 idiv	 ecx
  0002f	3b c3		 cmp	 eax, ebx
  00031	73 73		 jae	 SHORT $LN3@reserve@2

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00033	6a 00		 push	 0
  00035	53		 push	 ebx
  00036	e8 00 00 00 00	 call	 ??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  0003b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0003d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00041	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00044	52		 push	 edx
  00045	89 45 08	 mov	 DWORD PTR __Ptr$506995[ebp], eax
  00048	ff 75 08	 push	 DWORD PTR __Ptr$506995[ebp]
  0004b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004e	50		 push	 eax
  0004f	51		 push	 ecx
  00050	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00055	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00057	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0005a	83 c4 18	 add	 esp, 24			; 00000018H
  0005d	2b c1		 sub	 eax, ecx
  0005f	6a 1c		 push	 28			; 0000001cH
  00061	99		 cdq
  00062	5f		 pop	 edi
  00063	f7 ff		 idiv	 edi
  00065	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  00069	8b f8		 mov	 edi, eax
  0006b	85 c9		 test	 ecx, ecx
  0006d	74 1a		 je	 SHORT $LN37@reserve@2

; 761  : 			if (this->_Myfirst != 0)
; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);

  0006f	ff 75 08	 push	 DWORD PTR __Cat$513557[ebp]
  00072	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00075	50		 push	 eax
  00076	ff 76 04	 push	 DWORD PTR [esi+4]
  00079	51		 push	 ecx
  0007a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  0007f	ff 36		 push	 DWORD PTR [esi]
  00081	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00086	83 c4 14	 add	 esp, 20			; 00000014H
$LN37@reserve@2:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  00089	8b ce		 mov	 ecx, esi
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00091	6b db 1c	 imul	 ebx, 28			; 0000001cH

; 770  : 			this->_Mylast = _Ptr + _Size;

  00094	6b ff 1c	 imul	 edi, 28			; 0000001cH
  00097	8b 45 08	 mov	 eax, DWORD PTR __Ptr$506995[ebp]
  0009a	03 d8		 add	 ebx, eax
  0009c	03 f8		 add	 edi, eax
  0009e	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  000a1	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 771  : 			this->_Myfirst = _Ptr;

  000a4	89 06		 mov	 DWORD PTR [esi], eax
$LN3@reserve@2:

; 772  : 			}
; 773  : 		}

  000a6	e8 00 00 00 00	 call	 __EH_epilog3
  000ab	c2 04 00	 ret	 4
__catch$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$0:

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

  000ae	ff 75 08	 push	 DWORD PTR __Ptr$506995[ebp]
  000b1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000b6	59		 pop	 ecx

; 757  : 			_RERAISE;

  000b7	6a 00		 push	 0
  000b9	6a 00		 push	 0
  000bb	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN43@reserve@2:
$LN41@reserve@2:
  000c0	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve
; Function compile flags: /Ogsp
;	COMDAT ??_GGashaponPresentListBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GGashaponPresentListBtn@@UAEPAXI@Z PROC		; GashaponPresentListBtn::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1GashaponPresentListBtn@@UAE@XZ ; GashaponPresentListBtn::~GashaponPresentListBtn
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@5
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@5:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GGashaponPresentListBtn@@UAEPAXI@Z ENDP		; GashaponPresentListBtn::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx
  0000d	57		 push	 edi
  0000e	99		 cdq
  0000f	6a 1c		 push	 28			; 0000001cH
  00011	5f		 pop	 edi
  00012	f7 ff		 idiv	 edi
  00014	8b f8		 mov	 edi, eax

; 1292 : 		if (max_size() - _Count < _Size)

  00016	b8 49 92 24 09	 mov	 eax, 153391689		; 09249249H
  0001b	2b 45 08	 sub	 eax, DWORD PTR __Count$[ebp]
  0001e	3b c7		 cmp	 eax, edi
  00020	73 0b		 jae	 SHORT $LN4@Reserve@2

; 1293 : 			_Xlen();

  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve@2:
$LN4@Reserve@2:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  0002d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00030	2b c1		 sub	 eax, ecx
  00032	6a 1c		 push	 28			; 0000001cH
  00034	99		 cdq
  00035	59		 pop	 ecx
  00036	f7 f9		 idiv	 ecx
  00038	03 7d 08	 add	 edi, DWORD PTR __Count$[ebp]
  0003b	3b f8		 cmp	 edi, eax
  0003d	76 10		 jbe	 SHORT $LN1@Reserve@2

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  0003f	57		 push	 edi
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to
  00047	50		 push	 eax
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve
$LN1@Reserve@2:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1298 : 		}

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
$LN20@Reserve@2:
?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
_TEXT	ENDS
PUBLIC	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Function compile flags: /Ogsp
;	COMDAT ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back, COMDAT
; _this$ = ecx

; 631  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 632  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f9		 cmp	 edi, ecx
  0000f	73 27		 jae	 SHORT $LN4@push_back@2
  00011	8b 16		 mov	 edx, DWORD PTR [esi]
  00013	3b d7		 cmp	 edx, edi
  00015	77 21		 ja	 SHORT $LN4@push_back@2

; 633  : 			{	// push back an element
; 634  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	8b c7		 mov	 eax, edi
  00019	2b c2		 sub	 eax, edx
  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	99		 cdq
  0001e	5f		 pop	 edi
  0001f	f7 ff		 idiv	 edi
  00021	8b f8		 mov	 edi, eax

; 635  : 			if (this->_Mylast == this->_Myend)

  00023	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00026	75 09		 jne	 SHORT $LN3@push_back@2

; 636  : 				_Reserve(1);

  00028	6a 01		 push	 1
  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
$LN3@push_back@2:

; 637  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 638  : 			_Cons_val(this->_Alval,
; 639  : 				this->_Mylast,
; 640  : 				_STD forward<_Ty>(this->_Myfirst[_Idx]));

  00031	6b ff 1c	 imul	 edi, 28			; 0000001cH
  00034	03 3e		 add	 edi, DWORD PTR [esi]

; 641  : 			++this->_Mylast;
; 642  : 			}
; 643  : 		else

  00036	eb 0e		 jmp	 SHORT $LN1@push_back@2
$LN4@push_back@2:

; 644  : 			{	// push back a non-element
; 645  : 			if (this->_Mylast == this->_Myend)

  00038	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  0003b	75 09		 jne	 SHORT $LN1@push_back@2

; 646  : 				_Reserve(1);

  0003d	6a 01		 push	 1
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
$LN1@push_back@2:

; 647  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 648  : 			_Cons_val(this->_Alval,
; 649  : 				this->_Mylast,
; 650  : 				_STD forward<_Ty>(_Val));

  00046	57		 push	 edi
  00047	ff 76 04	 push	 DWORD PTR [esi+4]
  0004a	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 651  : 			++this->_Mylast;

  00056	83 46 04 1c	 add	 DWORD PTR [esi+4], 28	; 0000001cH
  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi

; 652  : 			}
; 653  : 		}

  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
_TEXT	ENDS
PUBLIC	?AddName@GashaponPresentListBtn@@QAEXABVioHashString@@@Z ; GashaponPresentListBtn::AddName
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$?AddName@GashaponPresentListBtn@@QAEXABVioHashString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddName@GashaponPresentListBtn@@QAEXABVioHashString@@@Z$0
__ehfuncinfo$?AddName@GashaponPresentListBtn@@QAEXABVioHashString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddName@GashaponPresentListBtn@@QAEXABVioHashString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\gashaponpresentlistwnd.cpp
xdata$x	ENDS
;	COMDAT ?AddName@GashaponPresentListBtn@@QAEXABVioHashString@@@Z
_TEXT	SEGMENT
$T505659 = -44						; size = 28
__$EHRec$ = -12						; size = 12
_rName$ = 8						; size = 4
?AddName@GashaponPresentListBtn@@QAEXABVioHashString@@@Z PROC ; GashaponPresentListBtn::AddName, COMDAT
; _this$ = ecx

; 72   : {

  00000	6a 20		 push	 32			; 00000020H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?AddName@GashaponPresentListBtn@@QAEXABVioHashString@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000c	8b f1		 mov	 esi, ecx
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR _rName$[ebp]

; 73   : 	m_szNameList.push_back( rName.c_str() );

  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  00017	83 65 e4 00	 and	 DWORD PTR $T505659[ebp+16], 0
  0001b	50		 push	 eax
  0001c	8d 4d d4	 lea	 ecx, DWORD PTR $T505659[ebp]
  0001f	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T505659[ebp+20], 15 ; 0000000fH
  00026	c6 45 d4 00	 mov	 BYTE PTR $T505659[ebp], 0
  0002a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0002f	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00033	8d 45 d4	 lea	 eax, DWORD PTR $T505659[ebp]
  00036	50		 push	 eax
  00037	8d 8e 6c 02 00
	00		 lea	 ecx, DWORD PTR [esi+620]
  0003d	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
  00042	6a 00		 push	 0
  00044	6a 01		 push	 1
  00046	8d 4d d4	 lea	 ecx, DWORD PTR $T505659[ebp]
  00049	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 74   : }

  0004e	e8 00 00 00 00	 call	 __EH_epilog3_GS
  00053	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddName@GashaponPresentListBtn@@QAEXABVioHashString@@@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR $T505659[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?AddName@GashaponPresentListBtn@@QAEXABVioHashString@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddName@GashaponPresentListBtn@@QAEXABVioHashString@@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddName@GashaponPresentListBtn@@QAEXABVioHashString@@@Z ENDP ; GashaponPresentListBtn::AddName
PUBLIC	??_C@_01JOAMLHOP@?9?$AA@			; `string'
PUBLIC	?UpdateIconBtn@GashaponPresentListWnd@@IAEXXZ	; GashaponPresentListWnd::UpdateIconBtn
EXTRN	?SetIcon@NewShopIconBtn@@QAE_NPAVioUIRenderImage@@@Z:PROC ; NewShopIconBtn::SetIcon
EXTRN	__imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z:PROC
EXTRN	__imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ:PROC
EXTRN	__imp_?FindChildWnd@ioWnd@@QAEPAV1@K@Z:PROC
EXTRN	___RTDynamicCast:PROC
;	COMDAT ??_C@_01JOAMLHOP@?9?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
CONST	SEGMENT
??_C@_01JOAMLHOP@?9?$AA@ DB '-', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?UpdateIconBtn@GashaponPresentListWnd@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UpdateIconBtn@GashaponPresentListWnd@@IAEXXZ$0
__ehfuncinfo$?UpdateIconBtn@GashaponPresentListWnd@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UpdateIconBtn@GashaponPresentListWnd@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\gashaponpresentlistwnd.cpp
xdata$x	ENDS
;	COMDAT ?UpdateIconBtn@GashaponPresentListWnd@@IAEXXZ
_TEXT	SEGMENT
_szEmptyText$506362 = -40				; size = 16
tv64 = -24						; size = 4
tv351 = -20						; size = 4
tv338 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?UpdateIconBtn@GashaponPresentListWnd@@IAEXXZ PROC	; GashaponPresentListWnd::UpdateIconBtn, COMDAT
; _this$ = ecx

; 153  : {

  00000	6a 1c		 push	 28			; 0000001cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?UpdateIconBtn@GashaponPresentListWnd@@IAEXXZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 154  : 	int iStartArray = m_iCurPage * ICON_BTN_MAX;

  0000e	8b 9e 64 01 00
	00		 mov	 ebx, DWORD PTR [esi+356]
  00014	6b db 0c	 imul	 ebx, 12			; 0000000cH
  00017	8b c3		 mov	 eax, ebx
  00019	6b c0 30	 imul	 eax, 48			; 00000030H

; 155  : 
; 156  : 	for( int i=0; i < ICON_BTN_MAX; ++i )

  0001c	c7 45 ec 64 00
	00 00		 mov	 DWORD PTR tv351[ebp], 100 ; 00000064H
  00023	29 5d ec	 sub	 DWORD PTR tv351[ebp], ebx
  00026	89 45 f0	 mov	 DWORD PTR tv338[ebp], eax
  00029	c7 45 e8 0c 00
	00 00		 mov	 DWORD PTR tv64[ebp], 12	; 0000000cH
$LN7@UpdateIcon:

; 157  : 	{
; 158  : 		GashaponPresentListBtn *pBtn = dynamic_cast< GashaponPresentListBtn* >(FindChildWnd(ID_ICON_BTN1+i));

  00030	8b 45 ec	 mov	 eax, DWORD PTR tv351[ebp]
  00033	6a 00		 push	 0
  00035	68 00 00 00 00	 push	 OFFSET ??_R0?AVGashaponPresentListBtn@@@8
  0003a	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWnd@@@8
  0003f	6a 00		 push	 0
  00041	03 c3		 add	 eax, ebx
  00043	50		 push	 eax
  00044	8b ce		 mov	 ecx, esi
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindChildWnd@ioWnd@@QAEPAV1@K@Z
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ___RTDynamicCast
  00052	8b f8		 mov	 edi, eax
  00054	83 c4 14	 add	 esp, 20			; 00000014H

; 159  : 		if( !pBtn ) continue;

  00057	85 ff		 test	 edi, edi
  00059	0f 84 c5 00 00
	00		 je	 $LN6@UpdateIcon

; 160  : 
; 161  : 		int iCurArray = iStartArray + i;
; 162  : 		if( COMPARE( iCurArray, 0, (int)m_vGashponPresentInfoVec.size() ) )

  0005f	85 db		 test	 ebx, ebx
  00061	0f 88 85 00 00
	00		 js	 $LN3@UpdateIcon
  00067	8b 86 7c 01 00
	00		 mov	 eax, DWORD PTR [esi+380]
  0006d	2b 86 78 01 00
	00		 sub	 eax, DWORD PTR [esi+376]
  00073	6a 30		 push	 48			; 00000030H
  00075	99		 cdq
  00076	59		 pop	 ecx
  00077	f7 f9		 idiv	 ecx
  00079	3b d8		 cmp	 ebx, eax
  0007b	7d 6f		 jge	 SHORT $LN3@UpdateIcon

; 163  : 		{
; 164  : 			pBtn->SetActive();

  0007d	8b 07		 mov	 eax, DWORD PTR [edi]
  0007f	8b cf		 mov	 ecx, edi
  00081	ff 50 20	 call	 DWORD PTR [eax+32]

; 165  : 			pBtn->ClearName();

  00084	8b cf		 mov	 ecx, edi
  00086	e8 00 00 00 00	 call	 ?ClearName@GashaponPresentListBtn@@QAEXXZ ; GashaponPresentListBtn::ClearName

; 166  : 			pBtn->AddName( m_vGashponPresentInfoVec[iCurArray].m_szPresentName1 );

  0008b	8b 86 78 01 00
	00		 mov	 eax, DWORD PTR [esi+376]
  00091	8b 4d f0	 mov	 ecx, DWORD PTR tv338[ebp]
  00094	8d 44 01 10	 lea	 eax, DWORD PTR [ecx+eax+16]
  00098	50		 push	 eax
  00099	8b cf		 mov	 ecx, edi
  0009b	e8 00 00 00 00	 call	 ?AddName@GashaponPresentListBtn@@QAEXABVioHashString@@@Z ; GashaponPresentListBtn::AddName

; 167  : 			pBtn->AddName( m_vGashponPresentInfoVec[iCurArray].m_szPresentName2 );

  000a0	8b 86 78 01 00
	00		 mov	 eax, DWORD PTR [esi+376]
  000a6	8b 4d f0	 mov	 ecx, DWORD PTR tv338[ebp]
  000a9	8d 44 01 20	 lea	 eax, DWORD PTR [ecx+eax+32]
  000ad	50		 push	 eax
  000ae	8b cf		 mov	 ecx, edi
  000b0	e8 00 00 00 00	 call	 ?AddName@GashaponPresentListBtn@@QAEXABVioHashString@@@Z ; GashaponPresentListBtn::AddName

; 168  : 		
; 169  : 			if( !m_vGashponPresentInfoVec[iCurArray].m_szIconName.IsEmpty() )

  000b5	8b 8e 78 01 00
	00		 mov	 ecx, DWORD PTR [esi+376]
  000bb	03 4d f0	 add	 ecx, DWORD PTR tv338[ebp]
  000be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@ioHashString@@QBE_NXZ
  000c4	84 c0		 test	 al, al
  000c6	75 5c		 jne	 SHORT $LN6@UpdateIcon

; 170  : 				pBtn->SetIcon(  g_UIImageSetMgr.CreateImageByFullName( m_vGashponPresentInfoVec[iCurArray].m_szIconName ) );

  000c8	8b 86 78 01 00
	00		 mov	 eax, DWORD PTR [esi+376]
  000ce	03 45 f0	 add	 eax, DWORD PTR tv338[ebp]
  000d1	6a 00		 push	 0
  000d3	50		 push	 eax
  000d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ
  000da	8b c8		 mov	 ecx, eax
  000dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z
  000e2	50		 push	 eax
  000e3	8b cf		 mov	 ecx, edi
  000e5	e8 00 00 00 00	 call	 ?SetIcon@NewShopIconBtn@@QAE_NPAVioUIRenderImage@@@Z ; NewShopIconBtn::SetIcon

; 171  : 		}
; 172  : 		else

  000ea	eb 38		 jmp	 SHORT $LN6@UpdateIcon
$LN3@UpdateIcon:

; 173  : 		{
; 174  : 			pBtn->SetInActive();

  000ec	8b 07		 mov	 eax, DWORD PTR [edi]
  000ee	8b cf		 mov	 ecx, edi
  000f0	ff 50 24	 call	 DWORD PTR [eax+36]

; 175  : 			pBtn->ClearName();

  000f3	8b cf		 mov	 ecx, edi
  000f5	e8 00 00 00 00	 call	 ?ClearName@GashaponPresentListBtn@@QAEXXZ ; GashaponPresentListBtn::ClearName

; 176  : 			ioHashString szEmptyText="-";

  000fa	68 00 00 00 00	 push	 OFFSET ??_C@_01JOAMLHOP@?9?$AA@
  000ff	8d 4d d8	 lea	 ecx, DWORD PTR _szEmptyText$506362[ebp]
  00102	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00108	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 177  : 			pBtn->AddName( szEmptyText );

  0010c	8d 45 d8	 lea	 eax, DWORD PTR _szEmptyText$506362[ebp]
  0010f	50		 push	 eax
  00110	8b cf		 mov	 ecx, edi
  00112	e8 00 00 00 00	 call	 ?AddName@GashaponPresentListBtn@@QAEXABVioHashString@@@Z ; GashaponPresentListBtn::AddName

; 178  : 		}

  00117	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0011b	8d 4d d8	 lea	 ecx, DWORD PTR _szEmptyText$506362[ebp]
  0011e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
$LN6@UpdateIcon:

; 155  : 
; 156  : 	for( int i=0; i < ICON_BTN_MAX; ++i )

  00124	83 45 f0 30	 add	 DWORD PTR tv338[ebp], 48 ; 00000030H
  00128	43		 inc	 ebx
  00129	ff 4d e8	 dec	 DWORD PTR tv64[ebp]
  0012c	0f 85 fe fe ff
	ff		 jne	 $LN7@UpdateIcon

; 179  : 	}
; 180  : }

  00132	e8 00 00 00 00	 call	 __EH_epilog3
  00137	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?UpdateIconBtn@GashaponPresentListWnd@@IAEXXZ$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _szEmptyText$506362[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?UpdateIconBtn@GashaponPresentListWnd@@IAEXXZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?UpdateIconBtn@GashaponPresentListWnd@@IAEXXZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?UpdateIconBtn@GashaponPresentListWnd@@IAEXXZ ENDP	; GashaponPresentListWnd::UpdateIconBtn
PUBLIC	__$ArrayPad$
PUBLIC	?UpdatePage@GashaponPresentListWnd@@IAEXH@Z	; GashaponPresentListWnd::UpdatePage
EXTRN	__imp_?SetChildInActive@ioWnd@@QAEXK@Z:PROC
EXTRN	__imp_?SetChildActive@ioWnd@@QAEXK@Z:PROC
EXTRN	__imp__wsprintfA:PROC
; Function compile flags: /Ogsp
;	COMDAT ?UpdatePage@GashaponPresentListWnd@@IAEXH@Z
_TEXT	SEGMENT
_szBuf$ = -276						; size = 260
___encStr$506194 = -16					; size = 6
__$ArrayPad$ = -4					; size = 4
_iPage$ = 8						; size = 4
?UpdatePage@GashaponPresentListWnd@@IAEXH@Z PROC	; GashaponPresentListWnd::UpdatePage, COMDAT
; _this$ = ecx

; 133  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	57		 push	 edi

; 134  : 	m_iCurPage = iPage;

  00015	8b 7d 08	 mov	 edi, DWORD PTR _iPage$[ebp]

; 135  : 
; 136  : 	char szBuf[MAX_PATH] = "";

  00018	68 03 01 00 00	 push	 259			; 00000103H
  0001d	8d 85 ed fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp+1]
  00023	8b f1		 mov	 esi, ecx
  00025	6a 00		 push	 0
  00027	50		 push	 eax
  00028	89 be 64 01 00
	00		 mov	 DWORD PTR [esi+356], edi
  0002e	c6 85 ec fe ff
	ff 00		 mov	 BYTE PTR _szBuf$[ebp], 0
  00035	e8 00 00 00 00	 call	 _memset

; 137  : 	wsprintf_e( szBuf, "%d/%d", m_iCurPage+1, m_iMaxPage );

  0003a	ff b6 60 01 00
	00		 push	 DWORD PTR [esi+352]
  00040	c7 45 f0 c8 88
	c4 cf		 mov	 DWORD PTR ___encStr$506194[ebp], -809203512 ; cfc488c8H
  00047	81 75 f0 ed ec
	eb ea		 xor	 DWORD PTR ___encStr$506194[ebp], -353637139 ; eaebecedH
  0004e	47		 inc	 edi
  0004f	57		 push	 edi
  00050	8d 45 f0	 lea	 eax, DWORD PTR ___encStr$506194[ebp]
  00053	50		 push	 eax
  00054	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0005a	50		 push	 eax
  0005b	66 c7 45 f4 64
	00		 mov	 WORD PTR ___encStr$506194[ebp+4], 100 ; 00000064H
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  00067	83 c4 1c	 add	 esp, 28			; 0000001cH

; 138  : 	m_szPageText = szBuf;

  0006a	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00070	50		 push	 eax
  00071	8d 8e 68 01 00
	00		 lea	 ecx, DWORD PTR [esi+360]
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z

; 139  : 
; 140  : 	SetChildActive( ID_PRE_BTN );

  0007d	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?SetChildActive@ioWnd@@QAEXK@Z
  00083	6a 01		 push	 1
  00085	8b ce		 mov	 ecx, esi
  00087	ff d7		 call	 edi

; 141  : 	SetChildActive( ID_NEXT_BTN );

  00089	6a 02		 push	 2
  0008b	8b ce		 mov	 ecx, esi
  0008d	ff d7		 call	 edi

; 142  : 
; 143  : 	if( m_iCurPage == 0 )

  0008f	83 be 64 01 00
	00 00		 cmp	 DWORD PTR [esi+356], 0
  00096	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?SetChildInActive@ioWnd@@QAEXK@Z
  0009c	75 06		 jne	 SHORT $LN2@UpdatePage

; 144  : 		SetChildInActive( ID_PRE_BTN );

  0009e	6a 01		 push	 1
  000a0	8b ce		 mov	 ecx, esi
  000a2	ff d7		 call	 edi
$LN2@UpdatePage:

; 145  : 
; 146  : 	if( m_iCurPage == m_iMaxPage-1 )

  000a4	8b 86 60 01 00
	00		 mov	 eax, DWORD PTR [esi+352]
  000aa	48		 dec	 eax
  000ab	39 86 64 01 00
	00		 cmp	 DWORD PTR [esi+356], eax
  000b1	75 06		 jne	 SHORT $LN1@UpdatePage

; 147  : 		SetChildInActive( ID_NEXT_BTN );

  000b3	6a 02		 push	 2
  000b5	8b ce		 mov	 ecx, esi
  000b7	ff d7		 call	 edi
$LN1@UpdatePage:

; 148  : 
; 149  : 	UpdateIconBtn();

  000b9	8b ce		 mov	 ecx, esi
  000bb	e8 00 00 00 00	 call	 ?UpdateIconBtn@GashaponPresentListWnd@@IAEXXZ ; GashaponPresentListWnd::UpdateIconBtn

; 150  : }

  000c0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c3	5f		 pop	 edi
  000c4	33 cd		 xor	 ecx, ebp
  000c6	5e		 pop	 esi
  000c7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cc	c9		 leave
  000cd	c2 04 00	 ret	 4
?UpdatePage@GashaponPresentListWnd@@IAEXH@Z ENDP	; GashaponPresentListWnd::UpdatePage
_TEXT	ENDS
EXTRN	__imp_?CheckRadioButton@ioWnd@@QAEXKKK@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ?iwm_show@GashaponPresentListWnd@@UAEXXZ
_TEXT	SEGMENT
?iwm_show@GashaponPresentListWnd@@UAEXXZ PROC		; GashaponPresentListWnd::iwm_show, COMDAT
; _this$ = ecx

; 248  : 	if( !m_vPresentTypeList.empty() )

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_vPresentTypeList@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	3b 05 04 00 00
	00		 cmp	 eax, DWORD PTR ?m_vPresentTypeList@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A+4
  0000e	74 1e		 je	 SHORT $LN1@iwm_show

; 249  : 		SetGashaponList( m_vPresentTypeList, m_vPresentValue1List, m_vPresentValue2List, m_vPresentValue3List, m_vPresentValue4List );

  00010	68 00 00 00 00	 push	 OFFSET ?m_vPresentValue4List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentValue4List
  00015	68 00 00 00 00	 push	 OFFSET ?m_vPresentValue3List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentValue3List
  0001a	68 00 00 00 00	 push	 OFFSET ?m_vPresentValue2List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentValue2List
  0001f	68 00 00 00 00	 push	 OFFSET ?m_vPresentValue1List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentValue1List
  00024	68 00 00 00 00	 push	 OFFSET ?m_vPresentTypeList@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentTypeList
  00029	e8 00 00 00 00	 call	 ?SetGashaponList@GashaponPresentListWnd@@IAEXAAV?$vector@HV?$allocator@H@std@@@std@@0000@Z ; GashaponPresentListWnd::SetGashaponList
$LN1@iwm_show:

; 250  : 
; 251  : 	UpdatePage( 0 );

  0002e	6a 00		 push	 0
  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ?UpdatePage@GashaponPresentListWnd@@IAEXH@Z ; GashaponPresentListWnd::UpdatePage

; 252  : 
; 253  : 	CheckRadioButton( ID_ALL_BTN, ID_ALL_BTN, ID_ALL_BTN );

  00037	6a 0a		 push	 10			; 0000000aH
  00039	6a 0a		 push	 10			; 0000000aH
  0003b	6a 0a		 push	 10			; 0000000aH
  0003d	8b ce		 mov	 ecx, esi
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CheckRadioButton@ioWnd@@QAEXKKK@Z
  00045	5e		 pop	 esi

; 254  : }

  00046	c3		 ret	 0
?iwm_show@GashaponPresentListWnd@@UAEXXZ ENDP		; GashaponPresentListWnd::iwm_show
_TEXT	ENDS
EXTRN	__imp_?HasWndStyle@ioWnd@@QBE_NK@Z:PROC
EXTRN	__imp_?HideWnd@ioWnd@@QAEXXZ:PROC
EXTRN	__imp_?GetID@ioWnd@@QBEKXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?iwm_command@GashaponPresentListWnd@@UAEXPAVioWnd@@HK@Z
_TEXT	SEGMENT
_pWnd$ = 8						; size = 4
_cmd$ = 12						; size = 4
_param$ = 16						; size = 4
?iwm_command@GashaponPresentListWnd@@UAEXPAVioWnd@@HK@Z PROC ; GashaponPresentListWnd::iwm_command, COMDAT
; _this$ = ecx

; 257  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 258  : 	DWORD dwID = pWnd->GetID();

  00006	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetID@ioWnd@@QBEKXZ

; 259  : 
; 260  : 	switch( dwID )

  0000f	48		 dec	 eax
  00010	74 34		 je	 SHORT $LN6@iwm_comman
  00012	48		 dec	 eax
  00013	74 13		 je	 SHORT $LN4@iwm_comman
  00015	48		 dec	 eax
  00016	75 52		 jne	 SHORT $LN5@iwm_comman

; 276  : 	case ID_X:
; 277  : 		if( cmd == IOBN_BTNUP )

  00018	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  0001c	75 4c		 jne	 SHORT $LN5@iwm_comman

; 278  : 		{
; 279  : 			HideWnd();

  0001e	8b ce		 mov	 ecx, esi
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HideWnd@ioWnd@@QAEXXZ

; 280  : 		}
; 281  : 		break;

  00026	eb 42		 jmp	 SHORT $LN5@iwm_comman
$LN4@iwm_comman:

; 267  : 		}
; 268  : 		break;
; 269  : 	case ID_NEXT_BTN:
; 270  : 		if( cmd == IOBN_BTNUP && !pWnd->HasWndStyle( IWS_INACTIVE ) )

  00028	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  0002c	75 3c		 jne	 SHORT $LN5@iwm_comman
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  00031	6a 02		 push	 2
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HasWndStyle@ioWnd@@QBE_NK@Z
  00039	84 c0		 test	 al, al
  0003b	75 2d		 jne	 SHORT $LN5@iwm_comman

; 271  : 		{
; 272  : 			int iNewPage = m_iCurPage + 1;

  0003d	8b 86 64 01 00
	00		 mov	 eax, DWORD PTR [esi+356]
  00043	40		 inc	 eax

; 273  : 			UpdatePage( iNewPage );
; 274  : 		}
; 275  : 		break;

  00044	eb 1c		 jmp	 SHORT $LN11@iwm_comman
$LN6@iwm_comman:

; 261  : 	{
; 262  : 	case ID_PRE_BTN:
; 263  : 		if( cmd == IOBN_BTNUP && !pWnd->HasWndStyle( IWS_INACTIVE ) )

  00046	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  0004a	75 1e		 jne	 SHORT $LN5@iwm_comman
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  0004f	6a 02		 push	 2
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HasWndStyle@ioWnd@@QBE_NK@Z
  00057	84 c0		 test	 al, al
  00059	75 0f		 jne	 SHORT $LN5@iwm_comman

; 264  : 		{
; 265  : 			int iNewPage = m_iCurPage - 1;

  0005b	8b 86 64 01 00
	00		 mov	 eax, DWORD PTR [esi+356]
  00061	48		 dec	 eax
$LN11@iwm_comman:

; 266  : 			UpdatePage( iNewPage );

  00062	50		 push	 eax
  00063	8b ce		 mov	 ecx, esi
  00065	e8 00 00 00 00	 call	 ?UpdatePage@GashaponPresentListWnd@@IAEXH@Z ; GashaponPresentListWnd::UpdatePage
$LN5@iwm_comman:
  0006a	5e		 pop	 esi

; 282  : 	}
; 283  : }

  0006b	5d		 pop	 ebp
  0006c	c2 0c 00	 ret	 12			; 0000000cH
?iwm_command@GashaponPresentListWnd@@UAEXPAVioWnd@@HK@Z ENDP ; GashaponPresentListWnd::iwm_command
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Ogsp
;	COMDAT ??__E?m_vPresentTypeList@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ
text$yc	SEGMENT
??__E?m_vPresentTypeList@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ PROC ; `dynamic initializer for 'GashaponPresentListWnd::m_vPresentTypeList'', COMDAT

; 83   : IntVec GashaponPresentListWnd::m_vPresentTypeList;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?m_vPresentTypeList@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ; `dynamic atexit destructor for 'GashaponPresentListWnd::m_vPresentTypeList''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?m_vPresentTypeList@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ENDP ; `dynamic initializer for 'GashaponPresentListWnd::m_vPresentTypeList''
; Function compile flags: /Ogsp
text$yc	ENDS
;	COMDAT ??__E?m_vPresentValue1List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ
text$yc	SEGMENT
??__E?m_vPresentValue1List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ PROC ; `dynamic initializer for 'GashaponPresentListWnd::m_vPresentValue1List'', COMDAT

; 84   : IntVec GashaponPresentListWnd::m_vPresentValue1List;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?m_vPresentValue1List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ; `dynamic atexit destructor for 'GashaponPresentListWnd::m_vPresentValue1List''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?m_vPresentValue1List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ENDP ; `dynamic initializer for 'GashaponPresentListWnd::m_vPresentValue1List''
; Function compile flags: /Ogsp
text$yc	ENDS
;	COMDAT ??__E?m_vPresentValue2List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ
text$yc	SEGMENT
??__E?m_vPresentValue2List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ PROC ; `dynamic initializer for 'GashaponPresentListWnd::m_vPresentValue2List'', COMDAT

; 85   : IntVec GashaponPresentListWnd::m_vPresentValue2List;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?m_vPresentValue2List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ; `dynamic atexit destructor for 'GashaponPresentListWnd::m_vPresentValue2List''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?m_vPresentValue2List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ENDP ; `dynamic initializer for 'GashaponPresentListWnd::m_vPresentValue2List''
; Function compile flags: /Ogsp
text$yc	ENDS
;	COMDAT ??__E?m_vPresentValue3List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ
text$yc	SEGMENT
??__E?m_vPresentValue3List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ PROC ; `dynamic initializer for 'GashaponPresentListWnd::m_vPresentValue3List'', COMDAT

; 86   : IntVec GashaponPresentListWnd::m_vPresentValue3List;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?m_vPresentValue3List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ; `dynamic atexit destructor for 'GashaponPresentListWnd::m_vPresentValue3List''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?m_vPresentValue3List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ENDP ; `dynamic initializer for 'GashaponPresentListWnd::m_vPresentValue3List''
; Function compile flags: /Ogsp
text$yc	ENDS
;	COMDAT ??__E?m_vPresentValue4List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ
text$yc	SEGMENT
??__E?m_vPresentValue4List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ PROC ; `dynamic initializer for 'GashaponPresentListWnd::m_vPresentValue4List'', COMDAT

; 87   : IntVec GashaponPresentListWnd::m_vPresentValue4List;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?m_vPresentValue4List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ; `dynamic atexit destructor for 'GashaponPresentListWnd::m_vPresentValue4List''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?m_vPresentValue4List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ENDP ; `dynamic initializer for 'GashaponPresentListWnd::m_vPresentValue4List''
; Function compile flags: /Ogsp
text$yc	ENDS
;	COMDAT ??__F?m_vPresentTypeList@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ
text$yd	SEGMENT
??__F?m_vPresentTypeList@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'GashaponPresentListWnd::m_vPresentTypeList'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_vPresentTypeList@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentTypeList
  00005	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
??__F?m_vPresentTypeList@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'GashaponPresentListWnd::m_vPresentTypeList''
; Function compile flags: /Ogsp
text$yd	ENDS
;	COMDAT ??__F?m_vPresentValue1List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ
text$yd	SEGMENT
??__F?m_vPresentValue1List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'GashaponPresentListWnd::m_vPresentValue1List'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_vPresentValue1List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentValue1List
  00005	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
??__F?m_vPresentValue1List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'GashaponPresentListWnd::m_vPresentValue1List''
; Function compile flags: /Ogsp
text$yd	ENDS
;	COMDAT ??__F?m_vPresentValue2List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ
text$yd	SEGMENT
??__F?m_vPresentValue2List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'GashaponPresentListWnd::m_vPresentValue2List'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_vPresentValue2List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentValue2List
  00005	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
??__F?m_vPresentValue2List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'GashaponPresentListWnd::m_vPresentValue2List''
; Function compile flags: /Ogsp
text$yd	ENDS
;	COMDAT ??__F?m_vPresentValue3List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ
text$yd	SEGMENT
??__F?m_vPresentValue3List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'GashaponPresentListWnd::m_vPresentValue3List'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_vPresentValue3List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentValue3List
  00005	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
??__F?m_vPresentValue3List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'GashaponPresentListWnd::m_vPresentValue3List''
; Function compile flags: /Ogsp
text$yd	ENDS
;	COMDAT ??__F?m_vPresentValue4List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ
text$yd	SEGMENT
??__F?m_vPresentValue4List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'GashaponPresentListWnd::m_vPresentValue4List'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_vPresentValue4List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentValue4List
  00005	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
??__F?m_vPresentValue4List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'GashaponPresentListWnd::m_vPresentValue4List''
text$yd	ENDS
PUBLIC	?m_vPresentValue4List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentValue4List
PUBLIC	?m_vPresentValue3List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentValue3List
PUBLIC	?m_vPresentValue2List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentValue2List
PUBLIC	?m_vPresentValue1List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentValue1List
PUBLIC	?m_vPresentTypeList@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A ; GashaponPresentListWnd::m_vPresentTypeList
_BSS	SEGMENT
?m_vPresentValue4List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A DB 010H DUP (?) ; GashaponPresentListWnd::m_vPresentValue4List
?m_vPresentValue3List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A DB 010H DUP (?) ; GashaponPresentListWnd::m_vPresentValue3List
?m_vPresentValue2List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A DB 010H DUP (?) ; GashaponPresentListWnd::m_vPresentValue2List
?m_vPresentValue1List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A DB 010H DUP (?) ; GashaponPresentListWnd::m_vPresentValue1List
?m_vPresentTypeList@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A DB 010H DUP (?) ; GashaponPresentListWnd::m_vPresentTypeList
_BSS	ENDS
CRT$XCU	SEGMENT
?m_vPresentTypeList$initializer$@GashaponPresentListWnd@@1P6AXXZA DD FLAT:??__E?m_vPresentTypeList@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ; GashaponPresentListWnd::m_vPresentTypeList$initializer$
?m_vPresentValue1List$initializer$@GashaponPresentListWnd@@1P6AXXZA DD FLAT:??__E?m_vPresentValue1List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ; GashaponPresentListWnd::m_vPresentValue1List$initializer$
?m_vPresentValue2List$initializer$@GashaponPresentListWnd@@1P6AXXZA DD FLAT:??__E?m_vPresentValue2List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ; GashaponPresentListWnd::m_vPresentValue2List$initializer$
?m_vPresentValue3List$initializer$@GashaponPresentListWnd@@1P6AXXZA DD FLAT:??__E?m_vPresentValue3List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ; GashaponPresentListWnd::m_vPresentValue3List$initializer$
?m_vPresentValue4List$initializer$@GashaponPresentListWnd@@1P6AXXZA DD FLAT:??__E?m_vPresentValue4List@GashaponPresentListWnd@@1V?$vector@HV?$allocator@H@std@@@std@@A@@YAXXZ ; GashaponPresentListWnd::m_vPresentValue4List$initializer$
CRT$XCU	ENDS
END
