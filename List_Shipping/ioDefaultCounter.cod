; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioDefaultCounter.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?GetActionStopTotalDelay@ioBaseChar@@QBEKXZ	; ioBaseChar::GetActionStopTotalDelay
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iobasechar.h
;	COMDAT ?GetActionStopTotalDelay@ioBaseChar@@QBEKXZ
_TEXT	SEGMENT
?GetActionStopTotalDelay@ioBaseChar@@QBEKXZ PROC	; ioBaseChar::GetActionStopTotalDelay, COMDAT
; _this$ = ecx

; 2399 : 	DWORD GetActionStopTotalDelay() const { return m_dwActionStopTotalDelay; }	// kaseton : action delay

  00000	8b 81 b8 15 00
	00		 mov	 eax, DWORD PTR [ecx+5560]
  00006	c3		 ret	 0
?GetActionStopTotalDelay@ioBaseChar@@QBEKXZ ENDP	; ioBaseChar::GetActionStopTotalDelay
_TEXT	ENDS
PUBLIC	??_7ioDefaultCounter@@6B@			; ioDefaultCounter::`vftable'
PUBLIC	??0ioDefaultCounter@@QAE@XZ			; ioDefaultCounter::ioDefaultCounter
PUBLIC	??_R4ioDefaultCounter@@6B@			; ioDefaultCounter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioDefaultCounter@@@8			; ioDefaultCounter `RTTI Type Descriptor'
PUBLIC	??_R3ioDefaultCounter@@8			; ioDefaultCounter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioDefaultCounter@@8			; ioDefaultCounter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioDefaultCounter@@8		; ioDefaultCounter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioCounterAttack@@8		; ioCounterAttack::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioCounterAttack@@@8			; ioCounterAttack `RTTI Type Descriptor'
PUBLIC	??_R3ioCounterAttack@@8				; ioCounterAttack::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioCounterAttack@@8				; ioCounterAttack::`RTTI Base Class Array'
PUBLIC	?LoadProperty@ioDefaultCounter@@UAEXAAVioINILoader@@@Z ; ioDefaultCounter::LoadProperty
PUBLIC	?GetType@ioDefaultCounter@@UBE?AW4CounterAttackType@@XZ ; ioDefaultCounter::GetType
PUBLIC	?Clone@ioDefaultCounter@@UAEPAVioCounterAttack@@XZ ; ioDefaultCounter::Clone
PUBLIC	?StartCAT@ioDefaultCounter@@UAE_NPAVioBaseChar@@H@Z ; ioDefaultCounter::StartCAT
PUBLIC	?ProcessCAT@ioDefaultCounter@@UAEXPAVioBaseChar@@@Z ; ioDefaultCounter::ProcessCAT
PUBLIC	?ApplyCAT@ioDefaultCounter@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z ; ioDefaultCounter::ApplyCAT
PUBLIC	?IsEnableDashCheck@ioCounterAttack@@UAE_NXZ	; ioCounterAttack::IsEnableDashCheck
EXTRN	??0ioCounterAttack@@QAE@XZ:PROC			; ioCounterAttack::ioCounterAttack
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?InitAniRotate@ioCounterAttack@@UAEXXZ:PROC	; ioCounterAttack::InitAniRotate
EXTRN	?SetAniRotate@ioCounterAttack@@UAEXPAVioBaseChar@@HM@Z:PROC ; ioCounterAttack::SetAniRotate
EXTRN	?CheckAniRotate@ioCounterAttack@@UAEXPAVioBaseChar@@@Z:PROC ; ioCounterAttack::CheckAniRotate
EXTRN	?SetInputSpecialDash@ioCounterAttack@@UAEXPAVioBaseChar@@ABUAttackAttribute@@@Z:PROC ; ioCounterAttack::SetInputSpecialDash
EXTRN	?CheckInputSpecialDash@ioCounterAttack@@UAE_NPAVioBaseChar@@@Z:PROC ; ioCounterAttack::CheckInputSpecialDash
EXTRN	??_EioDefaultCounter@@UAEPAXI@Z:PROC		; ioDefaultCounter::`vector deleting destructor'
;	COMDAT ??_R2ioCounterAttack@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iodefaultcounter.cpp
rdata$r	SEGMENT
??_R2ioCounterAttack@@8 DD FLAT:??_R1A@?0A@EA@ioCounterAttack@@8 ; ioCounterAttack::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioCounterAttack@@8
rdata$r	SEGMENT
??_R3ioCounterAttack@@8 DD 00H				; ioCounterAttack::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioCounterAttack@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioCounterAttack@@@8
_DATA	SEGMENT
??_R0?AVioCounterAttack@@@8 DD FLAT:??_7type_info@@6B@	; ioCounterAttack `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioCounterAttack@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioCounterAttack@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioCounterAttack@@8 DD FLAT:??_R0?AVioCounterAttack@@@8 ; ioCounterAttack::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioCounterAttack@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioDefaultCounter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioDefaultCounter@@8 DD FLAT:??_R0?AVioDefaultCounter@@@8 ; ioDefaultCounter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioDefaultCounter@@8
rdata$r	ENDS
;	COMDAT ??_R2ioDefaultCounter@@8
rdata$r	SEGMENT
??_R2ioDefaultCounter@@8 DD FLAT:??_R1A@?0A@EA@ioDefaultCounter@@8 ; ioDefaultCounter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioCounterAttack@@8
rdata$r	ENDS
;	COMDAT ??_R3ioDefaultCounter@@8
rdata$r	SEGMENT
??_R3ioDefaultCounter@@8 DD 00H				; ioDefaultCounter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioDefaultCounter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioDefaultCounter@@@8
_DATA	SEGMENT
??_R0?AVioDefaultCounter@@@8 DD FLAT:??_7type_info@@6B@	; ioDefaultCounter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioDefaultCounter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioDefaultCounter@@6B@
rdata$r	SEGMENT
??_R4ioDefaultCounter@@6B@ DD 00H			; ioDefaultCounter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioDefaultCounter@@@8
	DD	FLAT:??_R3ioDefaultCounter@@8
rdata$r	ENDS
;	COMDAT ??_7ioDefaultCounter@@6B@
CONST	SEGMENT
??_7ioDefaultCounter@@6B@ DD FLAT:??_R4ioDefaultCounter@@6B@ ; ioDefaultCounter::`vftable'
	DD	FLAT:?LoadProperty@ioDefaultCounter@@UAEXAAVioINILoader@@@Z
	DD	FLAT:?GetType@ioDefaultCounter@@UBE?AW4CounterAttackType@@XZ
	DD	FLAT:?Clone@ioDefaultCounter@@UAEPAVioCounterAttack@@XZ
	DD	FLAT:?StartCAT@ioDefaultCounter@@UAE_NPAVioBaseChar@@H@Z
	DD	FLAT:?ProcessCAT@ioDefaultCounter@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ApplyCAT@ioDefaultCounter@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?InitAniRotate@ioCounterAttack@@UAEXXZ
	DD	FLAT:?SetAniRotate@ioCounterAttack@@UAEXPAVioBaseChar@@HM@Z
	DD	FLAT:?CheckAniRotate@ioCounterAttack@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?IsEnableDashCheck@ioCounterAttack@@UAE_NXZ
	DD	FLAT:?SetInputSpecialDash@ioCounterAttack@@UAEXPAVioBaseChar@@ABUAttackAttribute@@@Z
	DD	FLAT:?CheckInputSpecialDash@ioCounterAttack@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:??_EioDefaultCounter@@UAEPAXI@Z
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0ioDefaultCounter@@QAE@XZ
_TEXT	SEGMENT
??0ioDefaultCounter@@QAE@XZ PROC			; ioDefaultCounter::ioDefaultCounter, COMDAT
; _this$ = ecx

; 9    : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??0ioCounterAttack@@QAE@XZ ; ioCounterAttack::ioCounterAttack
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioDefaultCounter@@6B@

; 10   : }

  0000e	8b c6		 mov	 eax, esi
  00010	5e		 pop	 esi
  00011	c3		 ret	 0
??0ioDefaultCounter@@QAE@XZ ENDP			; ioDefaultCounter::ioDefaultCounter
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iocounterattack.h
_TEXT	ENDS
;	COMDAT ?IsEnableDashCheck@ioCounterAttack@@UAE_NXZ
_TEXT	SEGMENT
?IsEnableDashCheck@ioCounterAttack@@UAE_NXZ PROC	; ioCounterAttack::IsEnableDashCheck, COMDAT
; _this$ = ecx

; 37   : 	virtual bool IsEnableDashCheck() { return m_bEnableDashCheck; }

  00000	8a 81 c0 00 00
	00		 mov	 al, BYTE PTR [ecx+192]
  00006	c3		 ret	 0
?IsEnableDashCheck@ioCounterAttack@@UAE_NXZ ENDP	; ioCounterAttack::IsEnableDashCheck
_TEXT	ENDS
PUBLIC	??0ioDefaultCounter@@QAE@ABV0@@Z		; ioDefaultCounter::ioDefaultCounter
EXTRN	??0ioCounterAttack@@QAE@ABV0@@Z:PROC		; ioCounterAttack::ioCounterAttack
EXTRN	__fltused:DWORD
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iodefaultcounter.cpp
;	COMDAT ??0ioDefaultCounter@@QAE@ABV0@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
??0ioDefaultCounter@@QAE@ABV0@@Z PROC			; ioDefaultCounter::ioDefaultCounter, COMDAT
; _this$ = ecx

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b 7d 08	 mov	 edi, DWORD PTR _rhs$[ebp]
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??0ioCounterAttack@@QAE@ABV0@@Z ; ioCounterAttack::ioCounterAttack
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioDefaultCounter@@6B@
  00016	8a 87 c8 00 00
	00		 mov	 al, BYTE PTR [edi+200]
  0001c	88 86 c8 00 00
	00		 mov	 BYTE PTR [esi+200], al
  00022	d9 87 cc 00 00
	00		 fld	 DWORD PTR [edi+204]
  00028	5f		 pop	 edi
  00029	d9 9e cc 00 00
	00		 fstp	 DWORD PTR [esi+204]

; 17   : }

  0002f	8b c6		 mov	 eax, esi
  00031	5e		 pop	 esi
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??0ioDefaultCounter@@QAE@ABV0@@Z ENDP			; ioDefaultCounter::ioDefaultCounter
_TEXT	ENDS
PUBLIC	??1ioDefaultCounter@@UAE@XZ			; ioDefaultCounter::~ioDefaultCounter
EXTRN	??1ioCounterAttack@@UAE@XZ:PROC			; ioCounterAttack::~ioCounterAttack
; Function compile flags: /Ogsp
;	COMDAT ??1ioDefaultCounter@@UAE@XZ
_TEXT	SEGMENT
??1ioDefaultCounter@@UAE@XZ PROC			; ioDefaultCounter::~ioDefaultCounter, COMDAT
; _this$ = ecx

; 20   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ioDefaultCounter@@6B@

; 21   : }

  00006	e9 00 00 00 00	 jmp	 ??1ioCounterAttack@@UAE@XZ ; ioCounterAttack::~ioCounterAttack
??1ioDefaultCounter@@UAE@XZ ENDP			; ioDefaultCounter::~ioDefaultCounter
_TEXT	ENDS
PUBLIC	??_C@_0BP@GHJPKHCG@counter_attack_last_jump_power?$AA@ ; `string'
PUBLIC	??_C@_0BJ@JDKIKLAM@counter_attack_last_jump?$AA@ ; `string'
EXTRN	__imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z:PROC
EXTRN	__imp_?LoadBool@ioINILoader@@QAE_NPBD_N@Z:PROC
EXTRN	?LoadProperty@ioCounterAttack@@UAEXAAVioINILoader@@@Z:PROC ; ioCounterAttack::LoadProperty
;	COMDAT ??_C@_0BP@GHJPKHCG@counter_attack_last_jump_power?$AA@
CONST	SEGMENT
??_C@_0BP@GHJPKHCG@counter_attack_last_jump_power?$AA@ DB 'counter_attack'
	DB	'_last_jump_power', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JDKIKLAM@counter_attack_last_jump?$AA@
CONST	SEGMENT
??_C@_0BJ@JDKIKLAM@counter_attack_last_jump?$AA@ DB 'counter_attack_last_'
	DB	'jump', 00H					; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?LoadProperty@ioDefaultCounter@@UAEXAAVioINILoader@@@Z
_TEXT	SEGMENT
_rkLoader$ = 8						; size = 4
?LoadProperty@ioDefaultCounter@@UAEXAAVioINILoader@@@Z PROC ; ioDefaultCounter::LoadProperty, COMDAT
; _this$ = ecx

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 25   : 	ioCounterAttack::LoadProperty( rkLoader );

  00004	ff 75 08	 push	 DWORD PTR _rkLoader$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 ?LoadProperty@ioCounterAttack@@UAEXAAVioINILoader@@@Z ; ioCounterAttack::LoadProperty

; 26   : 
; 27   : 	m_bLastJump = rkLoader.LoadBool( "counter_attack_last_jump", false );

  0000e	8b 4d 08	 mov	 ecx, DWORD PTR _rkLoader$[ebp]
  00011	6a 00		 push	 0
  00013	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JDKIKLAM@counter_attack_last_jump?$AA@
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadBool@ioINILoader@@QAE_NPBD_N@Z

; 28   : 	m_fLastJumpPower = rkLoader.LoadFloat( "counter_attack_last_jump_power", 0.f );

  0001e	0f 57 c0	 xorps	 xmm0, xmm0
  00021	51		 push	 ecx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _rkLoader$[ebp]
  00025	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@GHJPKHCG@counter_attack_last_jump_power?$AA@
  0002f	88 86 c8 00 00
	00		 mov	 BYTE PTR [esi+200], al
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z
  0003b	d9 9e cc 00 00
	00		 fstp	 DWORD PTR [esi+204]
  00041	5e		 pop	 esi

; 29   : }

  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?LoadProperty@ioDefaultCounter@@UAEXAAVioINILoader@@@Z ENDP ; ioDefaultCounter::LoadProperty
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clone@ioDefaultCounter@@UAEPAVioCounterAttack@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clone@ioDefaultCounter@@UAEPAVioCounterAttack@@XZ$0
__ehfuncinfo$?Clone@ioDefaultCounter@@UAEPAVioCounterAttack@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Clone@ioDefaultCounter@@UAEPAVioCounterAttack@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?Clone@ioDefaultCounter@@UAEPAVioCounterAttack@@XZ
_TEXT	SEGMENT
$T524148 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Clone@ioDefaultCounter@@UAEPAVioCounterAttack@@XZ PROC	; ioDefaultCounter::Clone, COMDAT
; _this$ = ecx

; 32   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?Clone@ioDefaultCounter@@UAEPAVioCounterAttack@@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 33   : 	return new ioDefaultCounter( *this );

  0000e	68 d0 00 00 00	 push	 208			; 000000d0H
  00013	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00018	59		 pop	 ecx
  00019	8b c8		 mov	 ecx, eax
  0001b	89 4d f0	 mov	 DWORD PTR $T524148[ebp], ecx
  0001e	33 c0		 xor	 eax, eax
  00020	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00023	3b c8		 cmp	 ecx, eax
  00025	74 06		 je	 SHORT $LN3@Clone
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 ??0ioDefaultCounter@@QAE@ABV0@@Z ; ioDefaultCounter::ioDefaultCounter
$LN3@Clone:

; 34   : }

  0002d	e8 00 00 00 00	 call	 __EH_epilog3
  00032	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clone@ioDefaultCounter@@UAEPAVioCounterAttack@@XZ$0:
  00000	ff 75 f0	 push	 DWORD PTR $T524148[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__ehhandler$?Clone@ioDefaultCounter@@UAEPAVioCounterAttack@@XZ:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00011	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Clone@ioDefaultCounter@@UAEPAVioCounterAttack@@XZ
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Clone@ioDefaultCounter@@UAEPAVioCounterAttack@@XZ ENDP	; ioDefaultCounter::Clone
; Function compile flags: /Ogsp
;	COMDAT ?GetType@ioDefaultCounter@@UBE?AW4CounterAttackType@@XZ
_TEXT	SEGMENT
?GetType@ioDefaultCounter@@UBE?AW4CounterAttackType@@XZ PROC ; ioDefaultCounter::GetType, COMDAT
; _this$ = ecx

; 38   : 	return CAT_DEFAULT;

  00000	33 c0		 xor	 eax, eax
  00002	40		 inc	 eax

; 39   : }

  00003	c3		 ret	 0
?GetType@ioDefaultCounter@@UBE?AW4CounterAttackType@@XZ ENDP ; ioDefaultCounter::GetType
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?ApplyCAT@ioDefaultCounter@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_rkPacket$ = 12						; size = 4
?ApplyCAT@ioDefaultCounter@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z PROC ; ioDefaultCounter::ApplyCAT, COMDAT
; _this$ = ecx

; 43   : }

  00000	c2 08 00	 ret	 8
?ApplyCAT@ioDefaultCounter@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z ENDP ; ioDefaultCounter::ApplyCAT
_TEXT	ENDS
EXTRN	?StartCAT@ioCounterAttack@@UAE_NPAVioBaseChar@@H@Z:PROC ; ioCounterAttack::StartCAT
; Function compile flags: /Ogsp
;	COMDAT ?StartCAT@ioDefaultCounter@@UAE_NPAVioBaseChar@@H@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_iCounterAttackKeyState$ = 12				; size = 4
?StartCAT@ioDefaultCounter@@UAE_NPAVioBaseChar@@H@Z PROC ; ioDefaultCounter::StartCAT, COMDAT
; _this$ = ecx

; 46   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 	if ( iCounterAttackKeyState == CAKS_ATTACK_KEY )

  00003	83 7d 0c 00	 cmp	 DWORD PTR _iCounterAttackKeyState$[ebp], 0
  00007	75 11		 jne	 SHORT $LN3@StartCAT

; 48   : 	{
; 49   : 		if( !ioCounterAttack::StartCAT( pOwner, iCounterAttackKeyState ) )

  00009	6a 00		 push	 0
  0000b	ff 75 08	 push	 DWORD PTR _pOwner$[ebp]
  0000e	e8 00 00 00 00	 call	 ?StartCAT@ioCounterAttack@@UAE_NPAVioBaseChar@@H@Z ; ioCounterAttack::StartCAT
  00013	84 c0		 test	 al, al
  00015	0f 95 c0	 setne	 al

; 50   : 			return false;
; 51   : 
; 52   : 		return true;

  00018	eb 02		 jmp	 SHORT $LN1@StartCAT
$LN3@StartCAT:

; 53   : 	}
; 54   : 	else
; 55   : 		return false;

  0001a	32 c0		 xor	 al, al
$LN1@StartCAT:

; 56   : }

  0001c	5d		 pop	 ebp
  0001d	c2 08 00	 ret	 8
?StartCAT@ioDefaultCounter@@UAE_NPAVioBaseChar@@H@Z ENDP ; ioDefaultCounter::StartCAT
_TEXT	ENDS
EXTRN	?ProcessDefaultCAT@ioBaseChar@@QAEXXZ:PROC	; ioBaseChar::ProcessDefaultCAT
EXTRN	?SetSKillEndJumpState@ioBaseChar@@QAEXM_N0000@Z:PROC ; ioBaseChar::SetSKillEndJumpState
EXTRN	?ClearReservedSliding@ioBaseChar@@QAEXXZ:PROC	; ioBaseChar::ClearReservedSliding
EXTRN	?ClearAttackFireTimeAndSkill@ioBaseChar@@QAEXW4ClearAttackFireType@@@Z:PROC ; ioBaseChar::ClearAttackFireTimeAndSkill
EXTRN	?GetAnimationEndTime@ioBaseChar@@QAEKXZ:PROC	; ioBaseChar::GetAnimationEndTime
EXTRN	__imp_?GetLoopSec@ioFrameTimer@@QBEKXZ:PROC
EXTRN	__imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?ProcessCAT@ioDefaultCounter@@UAEXPAVioBaseChar@@@Z
_TEXT	SEGMENT
_dwCurTime$523827 = -4					; size = 4
$T524177 = 8						; size = 4
_pOwner$ = 8						; size = 4
?ProcessCAT@ioDefaultCounter@@UAEXPAVioBaseChar@@@Z PROC ; ioDefaultCounter::ProcessCAT, COMDAT
; _this$ = ecx

; 59   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi

; 60   : 	if( !pOwner )

  00006	8b 75 08	 mov	 esi, DWORD PTR _pOwner$[ebp]
  00009	33 db		 xor	 ebx, ebx
  0000b	57		 push	 edi
  0000c	8b f9		 mov	 edi, ecx
  0000e	3b f3		 cmp	 esi, ebx
  00010	74 73		 je	 SHORT $LN1@ProcessCAT

; 61   : 		return;
; 62   : 
; 63   : 	if( m_bLastJump )

  00012	38 9f c8 00 00
	00		 cmp	 BYTE PTR [edi+200], bl
  00018	74 64		 je	 SHORT $LN5@ProcessCAT

; 64   : 	{
; 65   : 		DWORD dwCurTime = FRAMEGETTIME();

  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00020	8b c8		 mov	 ecx, eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00028	89 45 fc	 mov	 DWORD PTR _dwCurTime$523827[ebp], eax

; 66   : 
; 67   : 		if( pOwner->GetAnimationEndTime() + pOwner->GetActionStopTotalDelay() < dwCurTime )

  0002b	8b 86 b8 15 00
	00		 mov	 eax, DWORD PTR [esi+5560]
  00031	8b ce		 mov	 ecx, esi
  00033	89 45 08	 mov	 DWORD PTR $T524177[ebp], eax
  00036	e8 00 00 00 00	 call	 ?GetAnimationEndTime@ioBaseChar@@QAEKXZ ; ioBaseChar::GetAnimationEndTime
  0003b	03 45 08	 add	 eax, DWORD PTR $T524177[ebp]

; 68   : 		{
; 69   : 			if( pOwner->IsNeedProcess() )

  0003e	8b ce		 mov	 ecx, esi
  00040	3b 45 fc	 cmp	 eax, DWORD PTR _dwCurTime$523827[ebp]
  00043	73 3b		 jae	 SHORT $LN4@ProcessCAT
  00045	8b 06		 mov	 eax, DWORD PTR [esi]
  00047	ff 90 00 01 00
	00		 call	 DWORD PTR [eax+256]
  0004d	84 c0		 test	 al, al
  0004f	74 34		 je	 SHORT $LN1@ProcessCAT

; 70   : 			{
; 71   : 				pOwner->ClearAttackFireTimeAndSkill();

  00051	53		 push	 ebx
  00052	8b ce		 mov	 ecx, esi
  00054	e8 00 00 00 00	 call	 ?ClearAttackFireTimeAndSkill@ioBaseChar@@QAEXW4ClearAttackFireType@@@Z ; ioBaseChar::ClearAttackFireTimeAndSkill

; 72   : 				pOwner->ClearReservedSliding();

  00059	8b ce		 mov	 ecx, esi
  0005b	e8 00 00 00 00	 call	 ?ClearReservedSliding@ioBaseChar@@QAEXXZ ; ioBaseChar::ClearReservedSliding

; 73   : 
; 74   : 				pOwner->SetSKillEndJumpState( m_fLastJumpPower, false, false, true, true );

  00060	f3 0f 10 87 cc
	00 00 00	 movss	 xmm0, DWORD PTR [edi+204]
  00068	53		 push	 ebx
  00069	6a 01		 push	 1
  0006b	6a 01		 push	 1
  0006d	53		 push	 ebx
  0006e	53		 push	 ebx
  0006f	51		 push	 ecx
  00070	8b ce		 mov	 ecx, esi
  00072	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00077	e8 00 00 00 00	 call	 ?SetSKillEndJumpState@ioBaseChar@@QAEXM_N0000@Z ; ioBaseChar::SetSKillEndJumpState

; 75   : 			}
; 76   : 		}
; 77   : 		else

  0007c	eb 07		 jmp	 SHORT $LN1@ProcessCAT
$LN5@ProcessCAT:

; 78   : 			pOwner->ProcessDefaultCAT();
; 79   : 	}
; 80   : 	else
; 81   : 		pOwner->ProcessDefaultCAT();

  0007e	8b ce		 mov	 ecx, esi
$LN4@ProcessCAT:
  00080	e8 00 00 00 00	 call	 ?ProcessDefaultCAT@ioBaseChar@@QAEXXZ ; ioBaseChar::ProcessDefaultCAT
$LN1@ProcessCAT:
  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx

; 82   : }

  00088	c9		 leave
  00089	c2 04 00	 ret	 4
?ProcessCAT@ioDefaultCounter@@UAEXPAVioBaseChar@@@Z ENDP ; ioDefaultCounter::ProcessCAT
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GioDefaultCounter@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioDefaultCounter@@UAEPAXI@Z PROC			; ioDefaultCounter::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioDefaultCounter@@6B@
  0000c	e8 00 00 00 00	 call	 ??1ioCounterAttack@@UAE@XZ ; ioCounterAttack::~ioCounterAttack
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 07		 je	 SHORT $LN1@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001d	59		 pop	 ecx
$LN1@scalar:
  0001e	8b c6		 mov	 eax, esi
  00020	5e		 pop	 esi
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??_GioDefaultCounter@@UAEPAXI@Z ENDP			; ioDefaultCounter::`scalar deleting destructor'
_TEXT	ENDS
END
