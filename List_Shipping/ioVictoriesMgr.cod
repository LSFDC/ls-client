; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioVictoriesMgr.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?ms_Singleton@?$Singleton@VioVictoriesMgr@@@@1PAVioVictoriesMgr@@A ; Singleton<ioVictoriesMgr>::ms_Singleton
;	COMDAT ?ms_Singleton@?$Singleton@VioVictoriesMgr@@@@1PAVioVictoriesMgr@@A
_BSS	SEGMENT
?ms_Singleton@?$Singleton@VioVictoriesMgr@@@@1PAVioVictoriesMgr@@A DD 01H DUP (?) ; Singleton<ioVictoriesMgr>::ms_Singleton
_BSS	ENDS
PUBLIC	??1VictoriesData@ioVictoriesMgr@@QAE@XZ		; ioVictoriesMgr::VictoriesData::~VictoriesData
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1VictoriesData@ioVictoriesMgr@@QAE@XZ
_TEXT	SEGMENT
??1VictoriesData@ioVictoriesMgr@@QAE@XZ PROC		; ioVictoriesMgr::VictoriesData::~VictoriesData, COMDAT
; _this$ = ecx
  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
??1VictoriesData@ioVictoriesMgr@@QAE@XZ ENDP		; ioVictoriesMgr::VictoriesData::~VictoriesData
_TEXT	ENDS
PUBLIC	??0?$Singleton@VioVictoriesMgr@@@@QAE@XZ	; Singleton<ioVictoriesMgr>::Singleton<ioVictoriesMgr>
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
;	COMDAT ??0?$Singleton@VioVictoriesMgr@@@@QAE@XZ
_TEXT	SEGMENT
??0?$Singleton@VioVictoriesMgr@@@@QAE@XZ PROC		; Singleton<ioVictoriesMgr>::Singleton<ioVictoriesMgr>, COMDAT
; _this$ = ecx

; 27   : 	Singleton()

  00000	8b c1		 mov	 eax, ecx

; 28   : 	{
; 29   : 		assert( !ms_Singleton );
; 30   : 		int offset = (int)(T*)1 - (int)(Singleton <T>*)(T*)1;
; 31   : 		ms_Singleton = (T*)((int)this + offset);

  00002	8d 48 fc	 lea	 ecx, DWORD PTR [eax-4]
  00005	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioVictoriesMgr@@@@1PAVioVictoriesMgr@@A, ecx ; Singleton<ioVictoriesMgr>::ms_Singleton

; 32   : 	}

  0000b	c3		 ret	 0
??0?$Singleton@VioVictoriesMgr@@@@QAE@XZ ENDP		; Singleton<ioVictoriesMgr>::Singleton<ioVictoriesMgr>
_TEXT	ENDS
PUBLIC	??1?$Singleton@VioVictoriesMgr@@@@QAE@XZ	; Singleton<ioVictoriesMgr>::~Singleton<ioVictoriesMgr>
; Function compile flags: /Ogsp
;	COMDAT ??1?$Singleton@VioVictoriesMgr@@@@QAE@XZ
_TEXT	SEGMENT
??1?$Singleton@VioVictoriesMgr@@@@QAE@XZ PROC		; Singleton<ioVictoriesMgr>::~Singleton<ioVictoriesMgr>, COMDAT
; _this$ = ecx

; 36   : 		assert( ms_Singleton );
; 37   : 		ms_Singleton = 0;

  00000	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioVictoriesMgr@@@@1PAVioVictoriesMgr@@A, 0 ; Singleton<ioVictoriesMgr>::ms_Singleton

; 38   : 	}

  00007	c3		 ret	 0
??1?$Singleton@VioVictoriesMgr@@@@QAE@XZ ENDP		; Singleton<ioVictoriesMgr>::~Singleton<ioVictoriesMgr>
_TEXT	ENDS
PUBLIC	?GetSingleton@?$Singleton@VioVictoriesMgr@@@@SAAAVioVictoriesMgr@@XZ ; Singleton<ioVictoriesMgr>::GetSingleton
; Function compile flags: /Ogsp
;	COMDAT ?GetSingleton@?$Singleton@VioVictoriesMgr@@@@SAAAVioVictoriesMgr@@XZ
_TEXT	SEGMENT
?GetSingleton@?$Singleton@VioVictoriesMgr@@@@SAAAVioVictoriesMgr@@XZ PROC ; Singleton<ioVictoriesMgr>::GetSingleton, COMDAT

; 42   : 		assert( ms_Singleton );
; 43   : 		return (*ms_Singleton);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioVictoriesMgr@@@@1PAVioVictoriesMgr@@A ; Singleton<ioVictoriesMgr>::ms_Singleton

; 44   : 	}

  00005	c3		 ret	 0
?GetSingleton@?$Singleton@VioVictoriesMgr@@@@SAAAVioVictoriesMgr@@XZ ENDP ; Singleton<ioVictoriesMgr>::GetSingleton
_TEXT	ENDS
PUBLIC	?size@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QBEIXZ ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QBEIXZ PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 14		 push	 20			; 00000014H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 880  : 		}

  0000b	c3		 ret	 0
?size@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEAAUVictoriesData@ioVictoriesMgr@@I@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEAAUVictoriesData@ioVictoriesMgr@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEAAUVictoriesData@ioVictoriesMgr@@I@Z PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pos$[ebp]
  00006	6b c0 14	 imul	 eax, 20			; 00000014H
  00009	03 01		 add	 eax, DWORD PTR [ecx]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEAAUVictoriesData@ioVictoriesMgr@@I@Z ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::operator[]
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IBE_NPBUVictoriesData@ioVictoriesMgr@@@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Inside
; Function compile flags: /Ogsp
;	COMDAT ?_Inside@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IBE_NPBUVictoriesData@ioVictoriesMgr@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IBE_NPBUVictoriesData@ioVictoriesMgr@@@Z PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IBE_NPBUVictoriesData@ioVictoriesMgr@@@Z ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IBEXPAUVictoriesData@ioVictoriesMgr@@0@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IBEXPAUVictoriesData@ioVictoriesMgr@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IBEXPAUVictoriesData@ioVictoriesMgr@@0@Z PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IBEXPAUVictoriesData@ioVictoriesMgr@@0@Z ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE@XZ ; std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::~_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::~_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::~_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAE@XZ ; std::allocator<ioVictoriesMgr::VictoriesData>::allocator<ioVictoriesMgr::VictoriesData>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAE@XZ PROC ; std::allocator<ioVictoriesMgr::VictoriesData>::allocator<ioVictoriesMgr::VictoriesData>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAE@XZ ENDP ; std::allocator<ioVictoriesMgr::VictoriesData>::allocator<ioVictoriesMgr::VictoriesData>
_TEXT	ENDS
PUBLIC	?capacity@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QBEIXZ ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QBEIXZ PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	6a 14		 push	 20			; 00000014H
  00007	99		 cdq
  00008	59		 pop	 ecx
  00009	f7 f9		 idiv	 ecx

; 778  : 		}

  0000b	c3		 ret	 0
?capacity@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::capacity
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IBEXXZ ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IBEXXZ PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
  0000b	cc		 int	 3
?_Xlen@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IBEXXZ ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAE@ABV01@@Z ; std::allocator<ioVictoriesMgr::VictoriesData>::allocator<ioVictoriesMgr::VictoriesData>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAE@ABV01@@Z PROC ; std::allocator<ioVictoriesMgr::VictoriesData>::allocator<ioVictoriesMgr::VictoriesData>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<ioVictoriesMgr::VictoriesData>::allocator<ioVictoriesMgr::VictoriesData>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@I@Z ; std::allocator<ioVictoriesMgr::VictoriesData>::deallocate
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@I@Z PROC ; std::allocator<ioVictoriesMgr::VictoriesData>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@I@Z ENDP ; std::allocator<ioVictoriesMgr::VictoriesData>::deallocate
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::operator+=
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::operator+=, COMDAT
; _this$ = ecx

; 151  : 		{	// increment by integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 152  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 153  : 		if (this->_Getcont() == 0
; 154  : 			|| this->_Ptr + _Off < ((_Myvec *)this->_Getcont())->_Myfirst
; 155  : 			|| ((_Myvec *)this->_Getcont())->_Mylast < this->_Ptr + _Off)
; 156  : 			{	// report error
; 157  : 			_DEBUG_ERROR("vector iterator + offset out of range");
; 158  : 			_SCL_SECURE_OUT_OF_RANGE;
; 159  : 			}
; 160  : 
; 161  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 162  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 163  : 		_SCL_SECURE_VALIDATE_RANGE(
; 164  : 			((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr + _Off
; 165  : 			&& this->_Ptr + _Off <= ((_Myvec *)this->_Getcont())->_Mylast);
; 166  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 167  : 
; 168  : 		_Ptr += _Off;

  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00008	6b c9 14	 imul	 ecx, 20			; 00000014H
  0000b	01 08		 add	 DWORD PTR [eax], ecx

; 169  : 		return (*this);
; 170  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
??Y?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::operator+=
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QBEIXZ ; std::allocator<ioVictoriesMgr::VictoriesData>::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QBEIXZ PROC ; std::allocator<ioVictoriesMgr::VictoriesData>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QBEIXZ ENDP ; std::allocator<ioVictoriesMgr::VictoriesData>::max_size
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::_Compat
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::_Compat
_TEXT	ENDS
PUBLIC	??$addressof@$$CBUVictoriesData@ioVictoriesMgr@@@std@@YAPBUVictoriesData@ioVictoriesMgr@@ABU12@@Z ; std::addressof<ioVictoriesMgr::VictoriesData const >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@$$CBUVictoriesData@ioVictoriesMgr@@@std@@YAPBUVictoriesData@ioVictoriesMgr@@ABU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUVictoriesData@ioVictoriesMgr@@@std@@YAPBUVictoriesData@ioVictoriesMgr@@ABU12@@Z PROC ; std::addressof<ioVictoriesMgr::VictoriesData const >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@$$CBUVictoriesData@ioVictoriesMgr@@@std@@YAPBUVictoriesData@ioVictoriesMgr@@ABU12@@Z ENDP ; std::addressof<ioVictoriesMgr::VictoriesData const >
_TEXT	ENDS
PUBLIC	??$forward@AAUVictoriesData@ioVictoriesMgr@@@std@@YAAAUVictoriesData@ioVictoriesMgr@@AAU12@@Z ; std::forward<ioVictoriesMgr::VictoriesData &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAUVictoriesData@ioVictoriesMgr@@@std@@YAAAUVictoriesData@ioVictoriesMgr@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUVictoriesData@ioVictoriesMgr@@@std@@YAAAUVictoriesData@ioVictoriesMgr@@AAU12@@Z PROC ; std::forward<ioVictoriesMgr::VictoriesData &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAUVictoriesData@ioVictoriesMgr@@@std@@YAAAUVictoriesData@ioVictoriesMgr@@AAU12@@Z ENDP ; std::forward<ioVictoriesMgr::VictoriesData &>
_TEXT	ENDS
PUBLIC	??$forward@ABUVictoriesData@ioVictoriesMgr@@@std@@YAABUVictoriesData@ioVictoriesMgr@@ABU12@@Z ; std::forward<ioVictoriesMgr::VictoriesData const &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@ABUVictoriesData@ioVictoriesMgr@@@std@@YAABUVictoriesData@ioVictoriesMgr@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUVictoriesData@ioVictoriesMgr@@@std@@YAABUVictoriesData@ioVictoriesMgr@@ABU12@@Z PROC ; std::forward<ioVictoriesMgr::VictoriesData const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABUVictoriesData@ioVictoriesMgr@@@std@@YAABUVictoriesData@ioVictoriesMgr@@ABU12@@Z ENDP ; std::forward<ioVictoriesMgr::VictoriesData const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@UVictoriesData@ioVictoriesMgr@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUVictoriesData@ioVictoriesMgr@@0@Z ; std::_Ptr_cat<ioVictoriesMgr::VictoriesData,ioVictoriesMgr::VictoriesData>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@UVictoriesData@ioVictoriesMgr@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUVictoriesData@ioVictoriesMgr@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UVictoriesData@ioVictoriesMgr@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUVictoriesData@ioVictoriesMgr@@0@Z PROC ; std::_Ptr_cat<ioVictoriesMgr::VictoriesData,ioVictoriesMgr::VictoriesData>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@UVictoriesData@ioVictoriesMgr@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUVictoriesData@ioVictoriesMgr@@0@Z ENDP ; std::_Ptr_cat<ioVictoriesMgr::VictoriesData,ioVictoriesMgr::VictoriesData>
_TEXT	ENDS
PUBLIC	??0VictoriesData@ioVictoriesMgr@@QAE@ABU01@@Z	; ioVictoriesMgr::VictoriesData::VictoriesData
EXTRN	__imp_??0ioHashString@@QAE@ABV0@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0VictoriesData@ioVictoriesMgr@@QAE@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0VictoriesData@ioVictoriesMgr@@QAE@ABU01@@Z PROC	; ioVictoriesMgr::VictoriesData::VictoriesData, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b 7d 08	 mov	 edi, DWORD PTR ___that$[ebp]
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  00011	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00014	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00017	5f		 pop	 edi
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??0VictoriesData@ioVictoriesMgr@@QAE@ABU01@@Z ENDP	; ioVictoriesMgr::VictoriesData::VictoriesData
_TEXT	ENDS
PUBLIC	??4VictoriesData@ioVictoriesMgr@@QAEAAU01@ABU01@@Z ; ioVictoriesMgr::VictoriesData::operator=
EXTRN	__imp_??4ioHashString@@QAEAAV0@ABV0@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??4VictoriesData@ioVictoriesMgr@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4VictoriesData@ioVictoriesMgr@@QAEAAU01@ABU01@@Z PROC	; ioVictoriesMgr::VictoriesData::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b 7d 08	 mov	 edi, DWORD PTR ___that$[ebp]
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
  00011	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00014	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00017	5f		 pop	 edi
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??4VictoriesData@ioVictoriesMgr@@QAEAAU01@ABU01@@Z ENDP	; ioVictoriesMgr::VictoriesData::operator=
_TEXT	ENDS
PUBLIC	??$move@AAUVictoriesData@ioVictoriesMgr@@@std@@YA$$QAUVictoriesData@ioVictoriesMgr@@AAU12@@Z ; std::move<ioVictoriesMgr::VictoriesData &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAUVictoriesData@ioVictoriesMgr@@@std@@YA$$QAUVictoriesData@ioVictoriesMgr@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUVictoriesData@ioVictoriesMgr@@@std@@YA$$QAUVictoriesData@ioVictoriesMgr@@AAU12@@Z PROC ; std::move<ioVictoriesMgr::VictoriesData &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAUVictoriesData@ioVictoriesMgr@@@std@@YA$$QAUVictoriesData@ioVictoriesMgr@@AAU12@@Z ENDP ; std::move<ioVictoriesMgr::VictoriesData &>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAUVictoriesData@ioVictoriesMgr@@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@@Z ; std::_Val_type<ioVictoriesMgr::VictoriesData *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAUVictoriesData@ioVictoriesMgr@@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUVictoriesData@ioVictoriesMgr@@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@@Z PROC ; std::_Val_type<ioVictoriesMgr::VictoriesData *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAUVictoriesData@ioVictoriesMgr@@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@@Z ENDP ; std::_Val_type<ioVictoriesMgr::VictoriesData *>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1exception@std@@UAE@XZ
  00012	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00016	74 07		 je	 SHORT $LN1@scalar
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	59		 pop	 ecx
$LN1@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GVictoriesData@ioVictoriesMgr@@QAEPAXI@Z	; ioVictoriesMgr::VictoriesData::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_GVictoriesData@ioVictoriesMgr@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GVictoriesData@ioVictoriesMgr@@QAEPAXI@Z PROC	; ioVictoriesMgr::VictoriesData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  0000c	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00010	74 07		 je	 SHORT $LN1@scalar@2
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	59		 pop	 ecx
$LN1@scalar@2:
  00019	8b c6		 mov	 eax, esi
  0001b	5e		 pop	 esi
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??_GVictoriesData@ioVictoriesMgr@@QAEPAXI@Z ENDP	; ioVictoriesMgr::VictoriesData::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$forward@UVictoriesData@ioVictoriesMgr@@@std@@YA$$QAUVictoriesData@ioVictoriesMgr@@AAU12@@Z ; std::forward<ioVictoriesMgr::VictoriesData>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@UVictoriesData@ioVictoriesMgr@@@std@@YA$$QAUVictoriesData@ioVictoriesMgr@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UVictoriesData@ioVictoriesMgr@@@std@@YA$$QAUVictoriesData@ioVictoriesMgr@@AAU12@@Z PROC ; std::forward<ioVictoriesMgr::VictoriesData>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@UVictoriesData@ioVictoriesMgr@@@std@@YA$$QAUVictoriesData@ioVictoriesMgr@@AAU12@@Z ENDP ; std::forward<ioVictoriesMgr::VictoriesData>
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	return (_Where);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 58   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 62   : 	}

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	??0VictoriesData@ioVictoriesMgr@@QAE@XZ		; ioVictoriesMgr::VictoriesData::VictoriesData
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iovictoriesmgr.h
;	COMDAT ??0VictoriesData@ioVictoriesMgr@@QAE@XZ
_TEXT	SEGMENT
??0VictoriesData@ioVictoriesMgr@@QAE@XZ PROC		; ioVictoriesMgr::VictoriesData::VictoriesData, COMDAT
; _this$ = ecx

; 10   : 		VictoriesData()

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ

; 11   : 		{
; 12   : 			m_iVictories = 0;

  00009	83 66 10 00	 and	 DWORD PTR [esi+16], 0

; 13   : 		}

  0000d	8b c6		 mov	 eax, esi
  0000f	5e		 pop	 esi
  00010	c3		 ret	 0
??0VictoriesData@ioVictoriesMgr@@QAE@XZ ENDP		; ioVictoriesMgr::VictoriesData::VictoriesData
_TEXT	ENDS
PUBLIC	?GetSingleton@ioVictoriesMgr@@SAAAV1@XZ		; ioVictoriesMgr::GetSingleton
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iovictoriesmgr.cpp
;	COMDAT ?GetSingleton@ioVictoriesMgr@@SAAAV1@XZ
_TEXT	SEGMENT
?GetSingleton@ioVictoriesMgr@@SAAAV1@XZ PROC		; ioVictoriesMgr::GetSingleton, COMDAT

; 19   : 	return Singleton< ioVictoriesMgr >::GetSingleton();

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioVictoriesMgr@@@@1PAVioVictoriesMgr@@A ; Singleton<ioVictoriesMgr>::ms_Singleton

; 20   : }

  00005	c3		 ret	 0
?GetSingleton@ioVictoriesMgr@@SAAAV1@XZ ENDP		; ioVictoriesMgr::GetSingleton
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE@V?$allocator@UVictoriesData@ioVictoriesMgr@@@1@@Z ; std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE@V?$allocator@UVictoriesData@ioVictoriesMgr@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE@V?$allocator@UVictoriesData@ioVictoriesMgr@@@1@@Z PROC ; std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE@V?$allocator@UVictoriesData@ioVictoriesMgr@@@1@@Z ENDP ; std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::operator+=
; Function compile flags: /Ogsp
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::operator+=, COMDAT
; _this$ = ecx

; 357  : 		{	// increment by integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 358  : 		*(_Mybase *)this += _Off;

  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00008	6b c9 14	 imul	 ecx, 20			; 00000014H
  0000b	01 08		 add	 DWORD PTR [eax], ecx

; 359  : 		return (*this);
; 360  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
??Y?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::operator+=
_TEXT	ENDS
PUBLIC	?max_size@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QBEIXZ ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QBEIXZ PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IBEII@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IBEII@Z PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	6a 14		 push	 20			; 00000014H
  0000a	99		 cdq
  0000b	59		 pop	 ecx
  0000c	f7 f9		 idiv	 ecx

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0000e	ba cc cc cc 0c	 mov	 edx, 214748364		; 0cccccccH
  00013	8b c8		 mov	 ecx, eax
  00015	d1 e9		 shr	 ecx, 1
  00017	2b d1		 sub	 edx, ecx
  00019	3b d0		 cmp	 edx, eax
  0001b	73 04		 jae	 SHORT $LN4@Grow_to
  0001d	33 c0		 xor	 eax, eax
  0001f	eb 02		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00021	03 c1		 add	 eax, ecx
$LN5@Grow_to:

; 1279 : 		if (_Capacity < _Count)

  00023	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00026	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?_Grow_to@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IBEII@Z ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Grow_to
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QAE@PAUVictoriesData@ioVictoriesMgr@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::_Vector_const_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QAE@PAUVictoriesData@ioVictoriesMgr@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QAE@PAUVictoriesData@ioVictoriesMgr@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::_Vector_const_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QAE@PAUVictoriesData@ioVictoriesMgr@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::_Vector_const_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::operator==
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@UVictoriesData@ioVictoriesMgr@@@std@@YAPAUVictoriesData@ioVictoriesMgr@@IPAU12@@Z ; std::_Allocate<ioVictoriesMgr::VictoriesData>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@UVictoriesData@ioVictoriesMgr@@@std@@YAPAUVictoriesData@ioVictoriesMgr@@IPAU12@@Z
_TEXT	SEGMENT
$T506312 = -12						; size = 12
$T506317 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UVictoriesData@ioVictoriesMgr@@@std@@YAPAUVictoriesData@ioVictoriesMgr@@IPAU12@@Z PROC ; std::_Allocate<ioVictoriesMgr::VictoriesData>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 cc cc cc
	0c		 cmp	 ecx, 214748364		; 0cccccccH
  00015	77 0e		 ja	 SHORT $LN1@Allocate
  00017	6b c9 14	 imul	 ecx, 20			; 00000014H
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T506317[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T506317[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T506312[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T506312[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T506312[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@UVictoriesData@ioVictoriesMgr@@@std@@YAPAUVictoriesData@ioVictoriesMgr@@IPAU12@@Z ENDP ; std::_Allocate<ioVictoriesMgr::VictoriesData>
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$construct@AAUVictoriesData@ioVictoriesMgr@@@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@AAU23@@Z ; std::allocator<ioVictoriesMgr::VictoriesData>::construct<ioVictoriesMgr::VictoriesData &>
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@AAUVictoriesData@ioVictoriesMgr@@@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@AAU23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAUVictoriesData@ioVictoriesMgr@@@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@AAU23@@Z$0
__ehfuncinfo$??$construct@AAUVictoriesData@ioVictoriesMgr@@@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@AAU23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAUVictoriesData@ioVictoriesMgr@@@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@AAU23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??$construct@AAUVictoriesData@ioVictoriesMgr@@@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@AAU23@@Z
_TEXT	SEGMENT
$T506326 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUVictoriesData@ioVictoriesMgr@@@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@AAU23@@Z PROC ; std::allocator<ioVictoriesMgr::VictoriesData>::construct<ioVictoriesMgr::VictoriesData &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$construct@AAUVictoriesData@ioVictoriesMgr@@@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@AAU23@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  0000c	8b 75 08	 mov	 esi, DWORD PTR __Ptr$[ebp]
  0000f	89 75 f0	 mov	 DWORD PTR $T506326[ebp], esi
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 f6		 test	 esi, esi
  00018	74 12		 je	 SHORT $LN3@construct
  0001a	8b 7d 0c	 mov	 edi, DWORD PTR __Val$[ebp]
  0001d	57		 push	 edi
  0001e	8b ce		 mov	 ecx, esi
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  00026	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00029	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN3@construct:

; 209  : 		}

  0002c	e8 00 00 00 00	 call	 __EH_epilog3
  00031	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAUVictoriesData@ioVictoriesMgr@@@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@AAU23@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T506326[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$??$construct@AAUVictoriesData@ioVictoriesMgr@@@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@AAU23@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@AAUVictoriesData@ioVictoriesMgr@@@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@AAU23@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@AAUVictoriesData@ioVictoriesMgr@@@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@AAU23@@Z ENDP ; std::allocator<ioVictoriesMgr::VictoriesData>::construct<ioVictoriesMgr::VictoriesData &>
PUBLIC	??$_Move@PAUVictoriesData@ioVictoriesMgr@@PAU12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioVictoriesMgr::VictoriesData *,ioVictoriesMgr::VictoriesData *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAUVictoriesData@ioVictoriesMgr@@PAU12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAUVictoriesData@ioVictoriesMgr@@PAU12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<ioVictoriesMgr::VictoriesData *,ioVictoriesMgr::VictoriesData *>, COMDAT

; 2512 : 	{	// move [_First, _Last) to [_Dest, ...), arbitrary iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 1a		 jmp	 SHORT $LN13@Move
$LL3@Move:

; 2514 : 		*_Dest = _STD move(*_First);

  00009	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000c	56		 push	 esi
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
  00013	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00016	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00019	83 45 10 14	 add	 DWORD PTR __Dest$[ebp], 20 ; 00000014H
  0001d	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  00020	83 c6 14	 add	 esi, 20			; 00000014H
$LN13@Move:

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

  00023	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00026	75 e1		 jne	 SHORT $LL3@Move

; 2515 : 	return (_Dest);

  00028	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0002b	5e		 pop	 esi

; 2516 : 	}

  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
??$_Move@PAUVictoriesData@ioVictoriesMgr@@PAU12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<ioVictoriesMgr::VictoriesData *,ioVictoriesMgr::VictoriesData *>
_TEXT	ENDS
PUBLIC	??$_Construct@UVictoriesData@ioVictoriesMgr@@ABU12@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@ABU12@@Z ; std::_Construct<ioVictoriesMgr::VictoriesData,ioVictoriesMgr::VictoriesData const &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$_Construct@UVictoriesData@ioVictoriesMgr@@ABU12@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@ABU12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@UVictoriesData@ioVictoriesMgr@@ABU12@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@ABU12@@Z$0
__ehfuncinfo$??$_Construct@UVictoriesData@ioVictoriesMgr@@ABU12@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@ABU12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@UVictoriesData@ioVictoriesMgr@@ABU12@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@ABU12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??$_Construct@UVictoriesData@ioVictoriesMgr@@ABU12@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@ABU12@@Z
_TEXT	SEGMENT
$T506367 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$ = 8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UVictoriesData@ioVictoriesMgr@@ABU12@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@ABU12@@Z PROC ; std::_Construct<ioVictoriesMgr::VictoriesData,ioVictoriesMgr::VictoriesData const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Construct@UVictoriesData@ioVictoriesMgr@@ABU12@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@ABU12@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 47   : 	void _FARQ *_Vptr = _Ptr;

  0000c	8b 75 08	 mov	 esi, DWORD PTR __Ptr$[ebp]
  0000f	89 75 08	 mov	 DWORD PTR __Vptr$[ebp], esi

; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00012	89 75 f0	 mov	 DWORD PTR $T506367[ebp], esi
  00015	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00019	85 f6		 test	 esi, esi
  0001b	74 12		 je	 SHORT $LN3@Construct
  0001d	8b 7d 0c	 mov	 edi, DWORD PTR __Val$[ebp]
  00020	57		 push	 edi
  00021	8b ce		 mov	 ecx, esi
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN3@Construct:

; 49   : 	}

  0002f	e8 00 00 00 00	 call	 __EH_epilog3
  00034	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@UVictoriesData@ioVictoriesMgr@@ABU12@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@ABU12@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Vptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T506367[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$??$_Construct@UVictoriesData@ioVictoriesMgr@@ABU12@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@ABU12@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Construct@UVictoriesData@ioVictoriesMgr@@ABU12@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@ABU12@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Construct@UVictoriesData@ioVictoriesMgr@@ABU12@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@ABU12@@Z ENDP ; std::_Construct<ioVictoriesMgr::VictoriesData,ioVictoriesMgr::VictoriesData const &>
PUBLIC	??$_Destroy@UVictoriesData@ioVictoriesMgr@@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@@Z ; std::_Destroy<ioVictoriesMgr::VictoriesData>
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy@UVictoriesData@ioVictoriesMgr@@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UVictoriesData@ioVictoriesMgr@@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@@Z PROC ; std::_Destroy<ioVictoriesMgr::VictoriesData>, COMDAT

; 62   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	_Ptr->~_Ty();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]

; 64   : 	}

  00006	5d		 pop	 ebp

; 63   : 	_Ptr->~_Ty();

  00007	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
??$_Destroy@UVictoriesData@ioVictoriesMgr@@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@@Z ENDP ; std::_Destroy<ioVictoriesMgr::VictoriesData>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@$$QAU34@@Z ; std::allocator<ioVictoriesMgr::VictoriesData>::construct
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@$$QAU34@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@$$QAU34@@Z$0
__ehfuncinfo$?construct@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@$$QAU34@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@$$QAU34@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@$$QAU34@@Z
_TEXT	SEGMENT
$T506403 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@$$QAU34@@Z PROC ; std::allocator<ioVictoriesMgr::VictoriesData>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?construct@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@$$QAU34@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  0000c	8b 75 08	 mov	 esi, DWORD PTR __Ptr$[ebp]
  0000f	89 75 f0	 mov	 DWORD PTR $T506403[ebp], esi
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 f6		 test	 esi, esi
  00018	74 12		 je	 SHORT $LN3@construct@2
  0001a	8b 7d 0c	 mov	 edi, DWORD PTR __Val$[ebp]
  0001d	57		 push	 edi
  0001e	8b ce		 mov	 ecx, esi
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z
  00026	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00029	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN3@construct@2:

; 203  : 		}

  0002c	e8 00 00 00 00	 call	 __EH_epilog3
  00031	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@$$QAU34@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T506403[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$?construct@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@$$QAU34@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?construct@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@$$QAU34@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@$$QAU34@@Z ENDP ; std::allocator<ioVictoriesMgr::VictoriesData>::construct
PUBLIC	?FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z ; ioVictoriesMgr::FindList
EXTRN	_atexit:PROC
EXTRN	__imp_??8ioHashString@@QBE_NABV0@@Z:PROC
;	COMDAT ?kNullData@?5??FindList@ioVictoriesMgr@@IAEAAUVictoriesData@2@ABVioHashString@@@Z@4U32@A
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iovictoriesmgr.h
_BSS	SEGMENT
?kNullData@?5??FindList@ioVictoriesMgr@@IAEAAUVictoriesData@2@ABVioHashString@@@Z@4U32@A DB 014H DUP (?) ; `ioVictoriesMgr::FindList'::`6'::kNullData
_BSS	ENDS
;	COMDAT ?$S1@?5??FindList@ioVictoriesMgr@@IAEAAUVictoriesData@2@ABVioHashString@@@Z@4IA
_BSS	SEGMENT
?$S1@?5??FindList@ioVictoriesMgr@@IAEAAUVictoriesData@2@ABVioHashString@@@Z@4IA DD 01H DUP (?) ; `ioVictoriesMgr::FindList'::`6'::$S1
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z$0
__ehfuncinfo$?FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iovictoriesmgr.cpp
xdata$x	ENDS
;	COMDAT ?FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z
_TEXT	SEGMENT
_iSize$ = -20						; size = 4
_i$505088 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_szUserID$ = 8						; size = 4
?FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z PROC ; ioVictoriesMgr::FindList, COMDAT
; _this$ = ecx

; 23   : {

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx

; 24   : 	int iSize = m_VictoriesData.size();

  0000e	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00011	2b 47 04	 sub	 eax, DWORD PTR [edi+4]
  00014	6a 14		 push	 20			; 00000014H
  00016	99		 cdq
  00017	59		 pop	 ecx
  00018	f7 f9		 idiv	 ecx

; 25   : 	for(int i = 0;i < iSize;i++)

  0001a	33 db		 xor	 ebx, ebx
  0001c	89 5d f0	 mov	 DWORD PTR _i$505088[ebp], ebx
  0001f	89 45 ec	 mov	 DWORD PTR _iSize$[ebp], eax
  00022	3b c3		 cmp	 eax, ebx
  00024	7e 22		 jle	 SHORT $LN3@FindList
$LL5@FindList:

; 26   : 	{
; 27   : 		VictoriesData &kData = m_VictoriesData[i];

  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]

; 28   : 		if( kData.m_szUserID == szUserID )

  00029	ff 75 08	 push	 DWORD PTR _szUserID$[ebp]
  0002c	03 f3		 add	 esi, ebx
  0002e	8b ce		 mov	 ecx, esi
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00036	84 c0		 test	 al, al
  00038	75 41		 jne	 SHORT $LN1@FindList

; 25   : 	for(int i = 0;i < iSize;i++)

  0003a	ff 45 f0	 inc	 DWORD PTR _i$505088[ebp]
  0003d	8b 45 f0	 mov	 eax, DWORD PTR _i$505088[ebp]
  00040	83 c3 14	 add	 ebx, 20			; 00000014H
  00043	3b 45 ec	 cmp	 eax, DWORD PTR _iSize$[ebp]
  00046	7c de		 jl	 SHORT $LL5@FindList
$LN3@FindList:

; 29   : 			return kData;
; 30   : 	}
; 31   : 
; 32   : 	static VictoriesData kNullData;

  00048	f6 05 00 00 00
	00 01		 test	 BYTE PTR ?$S1@?5??FindList@ioVictoriesMgr@@IAEAAUVictoriesData@2@ABVioHashString@@@Z@4IA, 1
  0004f	be 00 00 00 00	 mov	 esi, OFFSET ?kNullData@?5??FindList@ioVictoriesMgr@@IAEAAUVictoriesData@2@ABVioHashString@@@Z@4U32@A
  00054	75 25		 jne	 SHORT $LN1@FindList
  00056	83 0d 00 00 00
	00 01		 or	 DWORD PTR ?$S1@?5??FindList@ioVictoriesMgr@@IAEAAUVictoriesData@2@ABVioHashString@@@Z@4IA, 1
  0005d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00061	8b ce		 mov	 ecx, esi
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ
  00069	83 25 10 00 00
	00 00		 and	 DWORD PTR ?kNullData@?5??FindList@ioVictoriesMgr@@IAEAAUVictoriesData@2@ABVioHashString@@@Z@4U32@A+16, 0
  00070	68 00 00 00 00	 push	 OFFSET ??__FkNullData@?5??FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z@YAXXZ ; `ioVictoriesMgr::FindList'::`6'::`dynamic atexit destructor for 'kNullData''
  00075	e8 00 00 00 00	 call	 _atexit
  0007a	59		 pop	 ecx
$LN1@FindList:

; 33   : 	return kNullData;

  0007b	8b c6		 mov	 eax, esi

; 34   : }

  0007d	e8 00 00 00 00	 call	 __EH_epilog3
  00082	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z$0:
  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$S1@?5??FindList@ioVictoriesMgr@@IAEAAUVictoriesData@2@ABVioHashString@@@Z@4IA
  00005	83 e0 fe	 and	 eax, -2			; fffffffeH
  00008	a3 00 00 00 00	 mov	 DWORD PTR ?$S1@?5??FindList@ioVictoriesMgr@@IAEAAUVictoriesData@2@ABVioHashString@@@Z@4IA, eax
  0000d	c3		 ret	 0
__ehhandler$?FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z ENDP ; ioVictoriesMgr::FindList
PUBLIC	?GetVictories@ioVictoriesMgr@@QAEHABVioHashString@@@Z ; ioVictoriesMgr::GetVictories
; Function compile flags: /Ogsp
;	COMDAT ?GetVictories@ioVictoriesMgr@@QAEHABVioHashString@@@Z
_TEXT	SEGMENT
_szUserID$ = 8						; size = 4
?GetVictories@ioVictoriesMgr@@QAEHABVioHashString@@@Z PROC ; ioVictoriesMgr::GetVictories, COMDAT
; _this$ = ecx

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 68   : 	VictoriesData &kData = FindList( szUserID );

  00004	ff 75 08	 push	 DWORD PTR _szUserID$[ebp]
  00007	e8 00 00 00 00	 call	 ?FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z ; ioVictoriesMgr::FindList

; 69   : 	if( kData.m_szUserID == szUserID )

  0000c	ff 75 08	 push	 DWORD PTR _szUserID$[ebp]
  0000f	8b f0		 mov	 esi, eax
  00011	8b ce		 mov	 ecx, esi
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00019	84 c0		 test	 al, al
  0001b	74 05		 je	 SHORT $LN1@GetVictori

; 70   : 		return kData.m_iVictories;

  0001d	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00020	eb 02		 jmp	 SHORT $LN2@GetVictori
$LN1@GetVictori:

; 71   : 	return 0;

  00022	33 c0		 xor	 eax, eax
$LN2@GetVictori:
  00024	5e		 pop	 esi

; 72   : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?GetVictories@ioVictoriesMgr@@QAEHABVioHashString@@@Z ENDP ; ioVictoriesMgr::GetVictories
_TEXT	ENDS
PUBLIC	??_C@_0CJ@ELLDBBKC@SetVictories?5Fun?5One?3?5None?5User?5@ ; `string'
PUBLIC	?SetVictories@ioVictoriesMgr@@QAEXABVioHashString@@_N@Z ; ioVictoriesMgr::SetVictories
EXTRN	__imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ:PROC
EXTRN	__imp_?LOG@@3VCLog@@A:BYTE
EXTRN	__imp_?c_str@ioHashString@@QBEPBDXZ:PROC
;	COMDAT ??_C@_0CJ@ELLDBBKC@SetVictories?5Fun?5One?3?5None?5User?5@
CONST	SEGMENT
??_C@_0CJ@ELLDBBKC@SetVictories?5Fun?5One?3?5None?5User?5@ DB 'SetVictori'
	DB	'es Fun One: None User Name :%s', 00H	; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?SetVictories@ioVictoriesMgr@@QAEXABVioHashString@@_N@Z
_TEXT	SEGMENT
_szUserID$ = 8						; size = 4
_bWinTeam$ = 12						; size = 1
?SetVictories@ioVictoriesMgr@@QAEXABVioHashString@@_N@Z PROC ; ioVictoriesMgr::SetVictories, COMDAT
; _this$ = ecx

; 75   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 76   : 	VictoriesData &kData = FindList( szUserID );

  00004	ff 75 08	 push	 DWORD PTR _szUserID$[ebp]
  00007	e8 00 00 00 00	 call	 ?FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z ; ioVictoriesMgr::FindList

; 77   : 	if( kData.m_szUserID == szUserID )

  0000c	ff 75 08	 push	 DWORD PTR _szUserID$[ebp]
  0000f	8b f0		 mov	 esi, eax
  00011	8b ce		 mov	 ecx, esi
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00019	84 c0		 test	 al, al
  0001b	74 11		 je	 SHORT $LN4@SetVictori

; 78   : 	{
; 79   : 		if( bWinTeam )

  0001d	80 7d 0c 00	 cmp	 BYTE PTR _bWinTeam$[ebp], 0
  00021	74 05		 je	 SHORT $LN3@SetVictori

; 80   : 			kData.m_iVictories++;

  00023	ff 46 10	 inc	 DWORD PTR [esi+16]

; 81   : 		else

  00026	eb 26		 jmp	 SHORT $LN1@SetVictori
$LN3@SetVictori:

; 82   : 			kData.m_iVictories = 0;

  00028	83 66 10 00	 and	 DWORD PTR [esi+16], 0

; 83   : 	}
; 84   : 	else

  0002c	eb 20		 jmp	 SHORT $LN1@SetVictori
$LN4@SetVictori:

; 85   : 		LOG.PrintTimeAndLog( 0, "SetVictories Fun One: None User Name :%s", szUserID.c_str() );

  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _szUserID$[ebp]
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  00037	50		 push	 eax
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@ELLDBBKC@SetVictories?5Fun?5One?3?5None?5User?5@
  0003d	6a 00		 push	 0
  0003f	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@SetVictori:
  0004e	5e		 pop	 esi

; 86   : }

  0004f	5d		 pop	 ebp
  00050	c2 08 00	 ret	 8
?SetVictories@ioVictoriesMgr@@QAEXABVioHashString@@_N@Z ENDP ; ioVictoriesMgr::SetVictories
_TEXT	ENDS
PUBLIC	??_C@_0CJ@LDGADLDH@SetVictories?5Fun?5Two?3?5None?5User?5@ ; `string'
PUBLIC	?SetVictories@ioVictoriesMgr@@QAEXABVioHashString@@H@Z ; ioVictoriesMgr::SetVictories
;	COMDAT ??_C@_0CJ@LDGADLDH@SetVictories?5Fun?5Two?3?5None?5User?5@
CONST	SEGMENT
??_C@_0CJ@LDGADLDH@SetVictories?5Fun?5Two?3?5None?5User?5@ DB 'SetVictori'
	DB	'es Fun Two: None User Name :%s', 00H	; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?SetVictories@ioVictoriesMgr@@QAEXABVioHashString@@H@Z
_TEXT	SEGMENT
_szUserID$ = 8						; size = 4
_iVictories$ = 12					; size = 4
?SetVictories@ioVictoriesMgr@@QAEXABVioHashString@@H@Z PROC ; ioVictoriesMgr::SetVictories, COMDAT
; _this$ = ecx

; 89   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 90   : 	VictoriesData &kData = FindList( szUserID );

  00004	ff 75 08	 push	 DWORD PTR _szUserID$[ebp]
  00007	e8 00 00 00 00	 call	 ?FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z ; ioVictoriesMgr::FindList

; 91   : 	if( kData.m_szUserID == szUserID )

  0000c	ff 75 08	 push	 DWORD PTR _szUserID$[ebp]
  0000f	8b f0		 mov	 esi, eax
  00011	8b ce		 mov	 ecx, esi
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  00019	84 c0		 test	 al, al
  0001b	74 08		 je	 SHORT $LN2@SetVictori@2

; 92   : 	{
; 93   : 		kData.m_iVictories = iVictories;

  0001d	8b 45 0c	 mov	 eax, DWORD PTR _iVictories$[ebp]
  00020	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 94   : 	}
; 95   : 	else

  00023	eb 20		 jmp	 SHORT $LN1@SetVictori@2
$LN2@SetVictori@2:

; 96   : 		LOG.PrintTimeAndLog( 0, "SetVictories Fun Two: None User Name :%s", szUserID.c_str() );

  00025	8b 4d 08	 mov	 ecx, DWORD PTR _szUserID$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  0002e	50		 push	 eax
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@LDGADLDH@SetVictories?5Fun?5Two?3?5None?5User?5@
  00034	6a 00		 push	 0
  00036	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  00042	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@SetVictori@2:
  00045	5e		 pop	 esi

; 97   : }

  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
?SetVictories@ioVictoriesMgr@@QAEXABVioHashString@@H@Z ENDP ; ioVictoriesMgr::SetVictories
_TEXT	ENDS
PUBLIC	??0?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE@XZ ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE@XZ PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::operator+
; Function compile flags: /Ogsp
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::operator+, COMDAT
; _this$ = ecx

; 363  : 		{	// return this + integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 364  : 		_Myiter _Tmp = *this;
; 365  : 		return (_Tmp += _Off);

  00003	8b 55 0c	 mov	 edx, DWORD PTR __Off$[ebp]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	6b d2 14	 imul	 edx, 20			; 00000014H
  0000c	03 11		 add	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx

; 366  : 		}

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
??H?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::operator+
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QAE@PAUVictoriesData@ioVictoriesMgr@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::_Vector_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QAE@PAUVictoriesData@ioVictoriesMgr@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QAE@PAUVictoriesData@ioVictoriesMgr@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::_Vector_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QAE@PAUVictoriesData@ioVictoriesMgr@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::_Vector_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> > >::operator!=
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEPAUVictoriesData@ioVictoriesMgr@@I@Z ; std::allocator<ioVictoriesMgr::VictoriesData>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEPAUVictoriesData@ioVictoriesMgr@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEPAUVictoriesData@ioVictoriesMgr@@I@Z PROC ; std::allocator<ioVictoriesMgr::VictoriesData>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@UVictoriesData@ioVictoriesMgr@@@std@@YAPAUVictoriesData@ioVictoriesMgr@@IPAU12@@Z ; std::_Allocate<ioVictoriesMgr::VictoriesData>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEPAUVictoriesData@ioVictoriesMgr@@I@Z ENDP ; std::allocator<ioVictoriesMgr::VictoriesData>::allocate
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@UVictoriesData@ioVictoriesMgr@@AAU34@@std@@YAXAAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@PAUVictoriesData@ioVictoriesMgr@@AAU23@@Z ; std::_Cons_val<std::allocator<ioVictoriesMgr::VictoriesData>,ioVictoriesMgr::VictoriesData,ioVictoriesMgr::VictoriesData &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@UVictoriesData@ioVictoriesMgr@@AAU34@@std@@YAXAAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@PAUVictoriesData@ioVictoriesMgr@@AAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@UVictoriesData@ioVictoriesMgr@@AAU34@@std@@YAXAAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@PAUVictoriesData@ioVictoriesMgr@@AAU23@@Z PROC ; std::_Cons_val<std::allocator<ioVictoriesMgr::VictoriesData>,ioVictoriesMgr::VictoriesData,ioVictoriesMgr::VictoriesData &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  0000c	e8 00 00 00 00	 call	 ??$construct@AAUVictoriesData@ioVictoriesMgr@@@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@AAU23@@Z ; std::allocator<ioVictoriesMgr::VictoriesData>::construct<ioVictoriesMgr::VictoriesData &>

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@UVictoriesData@ioVictoriesMgr@@AAU34@@std@@YAXAAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@PAUVictoriesData@ioVictoriesMgr@@AAU23@@Z ENDP ; std::_Cons_val<std::allocator<ioVictoriesMgr::VictoriesData>,ioVictoriesMgr::VictoriesData,ioVictoriesMgr::VictoriesData &>
_TEXT	ENDS
PUBLIC	??$_Move@PAUVictoriesData@ioVictoriesMgr@@PAU12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00@Z ; std::_Move<ioVictoriesMgr::VictoriesData *,ioVictoriesMgr::VictoriesData *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAUVictoriesData@ioVictoriesMgr@@PAU12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00@Z
_TEXT	SEGMENT
__Cat$506512 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAUVictoriesData@ioVictoriesMgr@@PAU12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00@Z PROC ; std::_Move<ioVictoriesMgr::VictoriesData *,ioVictoriesMgr::VictoriesData *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$506512[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAUVictoriesData@ioVictoriesMgr@@PAU12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioVictoriesMgr::VictoriesData *,ioVictoriesMgr::VictoriesData *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAUVictoriesData@ioVictoriesMgr@@PAU12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00@Z ENDP ; std::_Move<ioVictoriesMgr::VictoriesData *,ioVictoriesMgr::VictoriesData *>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@ABU34@@Z ; std::allocator<ioVictoriesMgr::VictoriesData>::construct
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@ABU34@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@ABU34@@Z PROC ; std::allocator<ioVictoriesMgr::VictoriesData>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  00006	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00009	e8 00 00 00 00	 call	 ??$_Construct@UVictoriesData@ioVictoriesMgr@@ABU12@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@ABU12@@Z ; std::_Construct<ioVictoriesMgr::VictoriesData,ioVictoriesMgr::VictoriesData const &>
  0000e	59		 pop	 ecx
  0000f	59		 pop	 ecx

; 198  : 		}

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
?construct@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@ABU34@@Z ENDP ; std::allocator<ioVictoriesMgr::VictoriesData>::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@@Z ; std::allocator<ioVictoriesMgr::VictoriesData>::destroy
; Function compile flags: /Ogsp
;	COMDAT ?destroy@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@@Z PROC ; std::allocator<ioVictoriesMgr::VictoriesData>::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 213  : 		_Destroy(_Ptr);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ

; 214  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?destroy@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@@Z ENDP ; std::allocator<ioVictoriesMgr::VictoriesData>::destroy
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@UVictoriesData@ioVictoriesMgr@@U34@@std@@YAXAAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@PAUVictoriesData@ioVictoriesMgr@@$$QAU23@@Z ; std::_Cons_val<std::allocator<ioVictoriesMgr::VictoriesData>,ioVictoriesMgr::VictoriesData,ioVictoriesMgr::VictoriesData>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@UVictoriesData@ioVictoriesMgr@@U34@@std@@YAXAAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@PAUVictoriesData@ioVictoriesMgr@@$$QAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@UVictoriesData@ioVictoriesMgr@@U34@@std@@YAXAAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@PAUVictoriesData@ioVictoriesMgr@@$$QAU23@@Z PROC ; std::_Cons_val<std::allocator<ioVictoriesMgr::VictoriesData>,ioVictoriesMgr::VictoriesData,ioVictoriesMgr::VictoriesData>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  0000c	e8 00 00 00 00	 call	 ?construct@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@$$QAU34@@Z ; std::allocator<ioVictoriesMgr::VictoriesData>::construct

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@UVictoriesData@ioVictoriesMgr@@U34@@std@@YAXAAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@PAUVictoriesData@ioVictoriesMgr@@$$QAU23@@Z ENDP ; std::_Cons_val<std::allocator<ioVictoriesMgr::VictoriesData>,ioVictoriesMgr::VictoriesData,ioVictoriesMgr::VictoriesData>
_TEXT	ENDS
PUBLIC	?begin@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@XZ ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::begin
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?begin@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@XZ PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@XZ ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@XZ ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@XZ PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@XZ ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::end
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@@Z PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@@Z ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Make_iter
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@UVictoriesData@ioVictoriesMgr@@ABU34@@std@@YAXAAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@PAUVictoriesData@ioVictoriesMgr@@ABU23@@Z ; std::_Cons_val<std::allocator<ioVictoriesMgr::VictoriesData>,ioVictoriesMgr::VictoriesData,ioVictoriesMgr::VictoriesData const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@UVictoriesData@ioVictoriesMgr@@ABU34@@std@@YAXAAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@PAUVictoriesData@ioVictoriesMgr@@ABU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@UVictoriesData@ioVictoriesMgr@@ABU34@@std@@YAXAAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@PAUVictoriesData@ioVictoriesMgr@@ABU23@@Z PROC ; std::_Cons_val<std::allocator<ioVictoriesMgr::VictoriesData>,ioVictoriesMgr::VictoriesData,ioVictoriesMgr::VictoriesData const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  00006	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  00009	e8 00 00 00 00	 call	 ??$_Construct@UVictoriesData@ioVictoriesMgr@@ABU12@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@ABU12@@Z ; std::_Construct<ioVictoriesMgr::VictoriesData,ioVictoriesMgr::VictoriesData const &>
  0000e	59		 pop	 ecx
  0000f	59		 pop	 ecx

; 281  : 	}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??$_Cons_val@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@UVictoriesData@ioVictoriesMgr@@ABU34@@std@@YAXAAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@PAUVictoriesData@ioVictoriesMgr@@ABU23@@Z ENDP ; std::_Cons_val<std::allocator<ioVictoriesMgr::VictoriesData>,ioVictoriesMgr::VictoriesData,ioVictoriesMgr::VictoriesData const &>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@UVictoriesData@ioVictoriesMgr@@@std@@YAXAAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@PAUVictoriesData@ioVictoriesMgr@@@Z ; std::_Dest_val<std::allocator<ioVictoriesMgr::VictoriesData>,ioVictoriesMgr::VictoriesData>
; Function compile flags: /Ogsp
;	COMDAT ??$_Dest_val@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@UVictoriesData@ioVictoriesMgr@@@std@@YAXAAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@PAUVictoriesData@ioVictoriesMgr@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@UVictoriesData@ioVictoriesMgr@@@std@@YAXAAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@PAUVictoriesData@ioVictoriesMgr@@@Z PROC ; std::_Dest_val<std::allocator<ioVictoriesMgr::VictoriesData>,ioVictoriesMgr::VictoriesData>, COMDAT

; 286  : 	{	// destroy using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]

; 288  : 	}

  00006	5d		 pop	 ebp

; 287  : 	_Alval.destroy(_Pdest);

  00007	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
??$_Dest_val@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@UVictoriesData@ioVictoriesMgr@@@std@@YAXAAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@PAUVictoriesData@ioVictoriesMgr@@@Z ENDP ; std::_Dest_val<std::allocator<ioVictoriesMgr::VictoriesData>,ioVictoriesMgr::VictoriesData>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@U12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioVictoriesMgr::VictoriesData *,ioVictoriesMgr::VictoriesData *,std::allocator<ioVictoriesMgr::VictoriesData>,ioVictoriesMgr::VictoriesData>
EXTRN	__EH_prolog3_catch:PROC
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iovictoriesmgr.cpp
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@U12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@U12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@U12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@U12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@U12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$3
__ehfuncinfo$??$_Uninit_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@U12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@U12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@U12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@U12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@U12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<ioVictoriesMgr::VictoriesData *,ioVictoriesMgr::VictoriesData *,std::allocator<ioVictoriesMgr::VictoriesData>,ioVictoriesMgr::VictoriesData>, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Uninit_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@U12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;

  0000c	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 428  : 
; 429  : 	_TRY_BEGIN

  0000f	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00013	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00016	89 45 ec	 mov	 DWORD PTR __Next$[ebp], eax
$LL6@Uninit_mov:

; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  00019	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  0001c	74 33		 je	 SHORT $LN4@Uninit_mov

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

  0001e	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00021	56		 push	 esi
  00022	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00025	e8 00 00 00 00	 call	 ?construct@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@$$QAU34@@Z ; std::allocator<ioVictoriesMgr::VictoriesData>::construct
  0002a	83 45 10 14	 add	 DWORD PTR __Dest$[ebp], 20 ; 00000014H
  0002e	83 c6 14	 add	 esi, 20			; 00000014H
  00031	eb e6		 jmp	 SHORT $LL6@Uninit_mov
__catch$??$_Uninit_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@U12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)

  00033	8b 75 ec	 mov	 esi, DWORD PTR __Next$[ebp]
  00036	eb 0b		 jmp	 SHORT $LN36@Uninit_mov
$LL3@Uninit_mov:

; 434  : 		_Dest_val(_Al, _Next);

  00038	8b ce		 mov	 ecx, esi
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00040	83 c6 14	 add	 esi, 20			; 00000014H
$LN36@Uninit_mov:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)

  00043	3b 75 10	 cmp	 esi, DWORD PTR __Dest$[ebp]
  00046	75 f0		 jne	 SHORT $LL3@Uninit_mov

; 435  : 	_RERAISE;

  00048	6a 00		 push	 0
  0004a	6a 00		 push	 0
  0004c	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN37@Uninit_mov:
$LN4@Uninit_mov:

; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

  00051	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 438  : 	}

  00054	e8 00 00 00 00	 call	 __EH_epilog3
  00059	c3		 ret	 0
$LN35@Uninit_mov:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@U12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@U12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@U12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<ioVictoriesMgr::VictoriesData *,ioVictoriesMgr::VictoriesData *,std::allocator<ioVictoriesMgr::VictoriesData>,ioVictoriesMgr::VictoriesData>
PUBLIC	??$_Destroy_range@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@0AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ioVictoriesMgr::VictoriesData> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@0AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@0AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ioVictoriesMgr::VictoriesData> >, COMDAT

; 95   : 	{	// destroy [_First, _Last), arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 96   : 	for (; _First != _Last; ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0b		 jmp	 SHORT $LN20@Destroy_ra
$LL3@Destroy_ra:

; 97   : 		_Dest_val(_Al, _First);

  00009	8b ce		 mov	 ecx, esi
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00011	83 c6 14	 add	 esi, 20			; 00000014H
$LN20@Destroy_ra:

; 96   : 	for (; _First != _Last; ++_First)

  00014	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00017	75 f0		 jne	 SHORT $LL3@Destroy_ra
  00019	5e		 pop	 esi

; 98   : 	}

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Destroy_range@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@0AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioVictoriesMgr::VictoriesData> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@@Z ; std::_Uninitialized_move<ioVictoriesMgr::VictoriesData *,ioVictoriesMgr::VictoriesData *,std::allocator<ioVictoriesMgr::VictoriesData> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@@Z
_TEXT	SEGMENT
__Cat$506753 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@@Z PROC ; std::_Uninitialized_move<ioVictoriesMgr::VictoriesData *,ioVictoriesMgr::VictoriesData *,std::allocator<ioVictoriesMgr::VictoriesData> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$506753[ebp]
  00007	6a 00		 push	 0
  00009	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000c	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00012	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00015	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@U12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioVictoriesMgr::VictoriesData *,ioVictoriesMgr::VictoriesData *,std::allocator<ioVictoriesMgr::VictoriesData>,ioVictoriesMgr::VictoriesData>
  0001a	83 c4 18	 add	 esp, 24			; 00000018H

; 472  : 	}

  0001d	c9		 leave
  0001e	c3		 ret	 0
??$_Uninitialized_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@@Z ENDP ; std::_Uninitialized_move<ioVictoriesMgr::VictoriesData *,ioVictoriesMgr::VictoriesData *,std::allocator<ioVictoriesMgr::VictoriesData> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@0AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@@Z ; std::_Destroy_range<std::allocator<ioVictoriesMgr::VictoriesData> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@0AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@0AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ioVictoriesMgr::VictoriesData> >, COMDAT

; 87   : 	{	// destroy [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0b		 jmp	 SHORT $LN24@Destroy_ra@2
$LL7@Destroy_ra@2:
  00009	8b ce		 mov	 ecx, esi
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00011	83 c6 14	 add	 esi, 20			; 00000014H
$LN24@Destroy_ra@2:
  00014	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00017	75 f0		 jne	 SHORT $LL7@Destroy_ra@2
  00019	5e		 pop	 esi

; 89   : 	}

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Destroy_range@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@0AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioVictoriesMgr::VictoriesData> >
_TEXT	ENDS
PUBLIC	??$_Umove@PAUVictoriesData@ioVictoriesMgr@@@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEPAUVictoriesData@ioVictoriesMgr@@PAU23@00@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Umove<ioVictoriesMgr::VictoriesData *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??$_Umove@PAUVictoriesData@ioVictoriesMgr@@@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEPAUVictoriesData@ioVictoriesMgr@@PAU23@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUVictoriesData@ioVictoriesMgr@@@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEPAUVictoriesData@ioVictoriesMgr@@PAU23@00@Z PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Umove<ioVictoriesMgr::VictoriesData *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@@Z ; std::_Uninitialized_move<ioVictoriesMgr::VictoriesData *,ioVictoriesMgr::VictoriesData *,std::allocator<ioVictoriesMgr::VictoriesData> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAUVictoriesData@ioVictoriesMgr@@@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEPAUVictoriesData@ioVictoriesMgr@@PAU23@00@Z ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Umove<ioVictoriesMgr::VictoriesData *>
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEXPAUVictoriesData@ioVictoriesMgr@@0@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEXPAUVictoriesData@ioVictoriesMgr@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEXPAUVictoriesData@ioVictoriesMgr@@0@Z PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Destroy, COMDAT
; _this$ = ecx

; 1269 : 		{	// destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 0b		 jmp	 SHORT $LN26@Destroy
$LL9@Destroy:
  00009	8b ce		 mov	 ecx, esi
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00011	83 c6 14	 add	 esi, 20			; 00000014H
$LN26@Destroy:
  00014	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00017	75 f0		 jne	 SHORT $LL9@Destroy
  00019	5e		 pop	 esi

; 1271 : 		}

  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
?_Destroy@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEXPAUVictoriesData@ioVictoriesMgr@@0@Z ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEXXZ ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Tidy
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEXXZ PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 28		 je	 SHORT $LN27@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	53		 push	 ebx
  00009	57		 push	 edi
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);

  00010	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
  00015	eb 0b		 jmp	 SHORT $LN31@Tidy
$LL12@Tidy:
  00017	8b cf		 mov	 ecx, edi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  0001f	83 c7 14	 add	 edi, 20			; 00000014H
$LN31@Tidy:
  00022	3b fb		 cmp	 edi, ebx
  00024	75 f1		 jne	 SHORT $LL12@Tidy

; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  00026	ff 36		 push	 DWORD PTR [esi]
  00028	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002d	59		 pop	 ecx
  0002e	5f		 pop	 edi
  0002f	5b		 pop	 ebx
$LN27@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00030	33 c0		 xor	 eax, eax
  00032	89 06		 mov	 DWORD PTR [esi], eax

; 1310 : 		this->_Mylast = 0;

  00034	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1311 : 		this->_Myend = 0;

  00037	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0003a	5e		 pop	 esi

; 1312 : 		}

  0003b	c3		 ret	 0
?_Tidy@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEXXZ ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Tidy
_TEXT	ENDS
PUBLIC	?reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXI@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::reserve
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXI@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXI@Z$3
__ehfuncinfo$?reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Ptr$505438 = -24					; size = 4
$T507149 = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXI@Z PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	6a 0c		 push	 12			; 0000000cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXI@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx

; 747  : 		if (max_size() < _Count)

  0000e	81 7d 08 cc cc
	cc 0c		 cmp	 DWORD PTR __Count$[ebp], 214748364 ; 0cccccccH
  00015	76 0b		 jbe	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN62@reserve:
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  00022	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00025	2b 06		 sub	 eax, DWORD PTR [esi]
  00027	6a 14		 push	 20			; 00000014H
  00029	99		 cdq
  0002a	59		 pop	 ecx
  0002b	f7 f9		 idiv	 ecx
  0002d	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00030	0f 83 81 00 00
	00		 jae	 $LN3@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00036	6a 00		 push	 0
  00038	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  0003b	e8 00 00 00 00	 call	 ??$_Allocate@UVictoriesData@ioVictoriesMgr@@@std@@YAPAUVictoriesData@ioVictoriesMgr@@IPAU12@@Z ; std::_Allocate<ioVictoriesMgr::VictoriesData>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00040	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00042	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  00046	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00049	52		 push	 edx
  0004a	89 45 e8	 mov	 DWORD PTR __Ptr$505438[ebp], eax
  0004d	ff 75 e8	 push	 DWORD PTR __Ptr$505438[ebp]
  00050	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00053	50		 push	 eax
  00054	51		 push	 ecx
  00055	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUVictoriesData@ioVictoriesMgr@@PAU12@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00AAV?$allocator@UVictoriesData@ioVictoriesMgr@@@0@@Z ; std::_Uninitialized_move<ioVictoriesMgr::VictoriesData *,ioVictoriesMgr::VictoriesData *,std::allocator<ioVictoriesMgr::VictoriesData> >

; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  0005a	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  0005d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005f	83 c4 18	 add	 esp, 24			; 00000018H
  00062	8b c3		 mov	 eax, ebx
  00064	2b c1		 sub	 eax, ecx
  00066	6a 14		 push	 20			; 00000014H
  00068	99		 cdq
  00069	5f		 pop	 edi
  0006a	f7 ff		 idiv	 edi
  0006c	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  00070	8b f8		 mov	 edi, eax
  00072	85 c9		 test	 ecx, ecx
  00074	74 21		 je	 SHORT $LN54@reserve

; 761  : 			if (this->_Myfirst != 0)
; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);

  00076	89 4d ec	 mov	 DWORD PTR $T507149[ebp], ecx
  00079	3b cb		 cmp	 ecx, ebx
  0007b	74 12		 je	 SHORT $LN37@reserve
$LN39@reserve:
  0007d	8b 4d ec	 mov	 ecx, DWORD PTR $T507149[ebp]
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00086	83 45 ec 14	 add	 DWORD PTR $T507149[ebp], 20 ; 00000014H
  0008a	39 5d ec	 cmp	 DWORD PTR $T507149[ebp], ebx
  0008d	75 ee		 jne	 SHORT $LN39@reserve
$LN37@reserve:

; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  0008f	ff 36		 push	 DWORD PTR [esi]
  00091	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00096	59		 pop	 ecx
$LN54@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  00097	8b ce		 mov	 ecx, esi
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;
; 770  : 			this->_Mylast = _Ptr + _Size;

  0009f	6b ff 14	 imul	 edi, 20			; 00000014H
  000a2	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  000a5	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$505438[ebp]
  000a8	6b c0 14	 imul	 eax, 20			; 00000014H
  000ab	03 c1		 add	 eax, ecx
  000ad	03 f9		 add	 edi, ecx
  000af	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000b2	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 771  : 			this->_Myfirst = _Ptr;

  000b5	89 0e		 mov	 DWORD PTR [esi], ecx
$LN3@reserve:

; 772  : 			}
; 773  : 		}

  000b7	e8 00 00 00 00	 call	 __EH_epilog3
  000bc	c2 04 00	 ret	 4
__catch$?reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXI@Z$0:

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

  000bf	ff 75 e8	 push	 DWORD PTR __Ptr$505438[ebp]
  000c2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000c7	59		 pop	 ecx

; 757  : 			_RERAISE;

  000c8	6a 00		 push	 0
  000ca	6a 00		 push	 0
  000cc	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN63@reserve:
$LN61@reserve:
  000d1	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXI@Z ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::reserve
PUBLIC	??1?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE@XZ ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::~vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE@XZ PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::~vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEXXZ ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Tidy
??1?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::~vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >
_TEXT	ENDS
PUBLIC	?erase@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cat$507237 = 12					; size = 1
__Where$ = 12						; size = 4
?erase@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@@Z PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::erase, COMDAT
; _this$ = ecx

; 1179 : 		{	// erase element at where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1180 : 		_Move(_VIPTR(_Where) + 1, this->_Mylast,
; 1181 : 			_VIPTR(_Where));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	ff 75 0c	 push	 DWORD PTR __Cat$507237[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	50		 push	 eax
  0000f	ff 76 04	 push	 DWORD PTR [esi+4]
  00012	83 c0 14	 add	 eax, 20			; 00000014H
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??$_Move@PAUVictoriesData@ioVictoriesMgr@@PAU12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioVictoriesMgr::VictoriesData *,ioVictoriesMgr::VictoriesData *>

; 1182 : 		_Destroy(this->_Mylast - 1, this->_Mylast);

  0001b	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	8d 5f ec	 lea	 ebx, DWORD PTR [edi-20]
  00024	eb 0b		 jmp	 SHORT $LN40@erase
$LL15@erase:
  00026	8b cb		 mov	 ecx, ebx
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  0002e	83 c3 14	 add	 ebx, 20			; 00000014H
$LN40@erase:
  00031	3b df		 cmp	 ebx, edi
  00033	75 f1		 jne	 SHORT $LL15@erase

; 1183 : 		--this->_Mylast;

  00035	83 46 04 ec	 add	 DWORD PTR [esi+4], -20	; ffffffecH

; 1184 : 		return (_Make_iter(_Where));

  00039	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003c	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	89 08		 mov	 DWORD PTR [eax], ecx
  00043	5b		 pop	 ebx

; 1185 : 		}

  00044	5d		 pop	 ebp
  00045	c2 08 00	 ret	 8
?erase@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@@Z ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@0@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T507524 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$507455 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@0@Z PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00004	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __First_arg$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 4d 10	 cmp	 ecx, DWORD PTR __Last_arg$[ebp]
  00012	74 38		 je	 SHORT $LN1@erase@2

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00017	53		 push	 ebx
  00018	57		 push	 edi
  00019	ff 75 10	 push	 DWORD PTR __Cat$507455[ebp]
  0001c	51		 push	 ecx
  0001d	50		 push	 eax
  0001e	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  00021	e8 00 00 00 00	 call	 ??$_Move@PAUVictoriesData@ioVictoriesMgr@@PAU12@@std@@YAPAUVictoriesData@ioVictoriesMgr@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioVictoriesMgr::VictoriesData *,ioVictoriesMgr::VictoriesData *>

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);

  00026	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  00029	8b d8		 mov	 ebx, eax
  0002b	83 c4 10	 add	 esp, 16			; 00000010H
  0002e	89 5d fc	 mov	 DWORD PTR $T507524[ebp], ebx
  00031	3b df		 cmp	 ebx, edi
  00033	74 12		 je	 SHORT $LN36@erase@2
$LL55@erase@2:
  00035	8b 4d fc	 mov	 ecx, DWORD PTR $T507524[ebp]
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  0003e	83 45 fc 14	 add	 DWORD PTR $T507524[ebp], 20 ; 00000014H
  00042	39 7d fc	 cmp	 DWORD PTR $T507524[ebp], edi
  00045	75 ee		 jne	 SHORT $LL55@erase@2
$LN36@erase@2:

; 1211 : 			this->_Mylast = _Ptr;

  00047	5f		 pop	 edi
  00048	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  0004b	5b		 pop	 ebx
$LN1@erase@2:

; 1212 : 			}
; 1213 : 		return (_First);

  0004c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0004f	5e		 pop	 esi

; 1214 : 		}

  00050	c9		 leave
  00051	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@0@Z ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::erase
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEXI@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEXI@Z PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx
  0000d	57		 push	 edi
  0000e	99		 cdq
  0000f	6a 14		 push	 20			; 00000014H
  00011	5f		 pop	 edi
  00012	f7 ff		 idiv	 edi
  00014	8b f8		 mov	 edi, eax

; 1292 : 		if (max_size() - _Count < _Size)

  00016	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH
  0001b	2b 45 08	 sub	 eax, DWORD PTR __Count$[ebp]
  0001e	3b c7		 cmp	 eax, edi
  00020	73 0b		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve:
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  0002d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00030	2b c1		 sub	 eax, ecx
  00032	6a 14		 push	 20			; 00000014H
  00034	99		 cdq
  00035	59		 pop	 ecx
  00036	f7 f9		 idiv	 ecx
  00038	03 7d 08	 add	 edi, DWORD PTR __Count$[ebp]
  0003b	3b f8		 cmp	 edi, eax
  0003d	76 10		 jbe	 SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  0003f	57		 push	 edi
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IBEII@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Grow_to
  00047	50		 push	 eax
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXI@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::reserve
$LN1@Reserve:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1298 : 		}

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
$LN20@Reserve:
?_Reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEXI@Z ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Reserve
_TEXT	ENDS
PUBLIC	??_7ioVictoriesMgr@@6B@				; ioVictoriesMgr::`vftable'
PUBLIC	??1ioVictoriesMgr@@UAE@XZ			; ioVictoriesMgr::~ioVictoriesMgr
PUBLIC	??_R4ioVictoriesMgr@@6B@			; ioVictoriesMgr::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioVictoriesMgr@@@8			; ioVictoriesMgr `RTTI Type Descriptor'
PUBLIC	??_R3ioVictoriesMgr@@8				; ioVictoriesMgr::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioVictoriesMgr@@8				; ioVictoriesMgr::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioVictoriesMgr@@8			; ioVictoriesMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@?$Singleton@VioVictoriesMgr@@@@8	; Singleton<ioVictoriesMgr>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AV?$Singleton@VioVictoriesMgr@@@@@8	; Singleton<ioVictoriesMgr> `RTTI Type Descriptor'
PUBLIC	??_R3?$Singleton@VioVictoriesMgr@@@@8		; Singleton<ioVictoriesMgr>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$Singleton@VioVictoriesMgr@@@@8		; Singleton<ioVictoriesMgr>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$Singleton@VioVictoriesMgr@@@@8	; Singleton<ioVictoriesMgr>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_EioVictoriesMgr@@UAEPAXI@Z:PROC		; ioVictoriesMgr::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$Singleton@VioVictoriesMgr@@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
rdata$r	SEGMENT
??_R1A@?0A@EA@?$Singleton@VioVictoriesMgr@@@@8 DD FLAT:??_R0?AV?$Singleton@VioVictoriesMgr@@@@@8 ; Singleton<ioVictoriesMgr>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioVictoriesMgr@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$Singleton@VioVictoriesMgr@@@@8
rdata$r	SEGMENT
??_R2?$Singleton@VioVictoriesMgr@@@@8 DD FLAT:??_R1A@?0A@EA@?$Singleton@VioVictoriesMgr@@@@8 ; Singleton<ioVictoriesMgr>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$Singleton@VioVictoriesMgr@@@@8
rdata$r	SEGMENT
??_R3?$Singleton@VioVictoriesMgr@@@@8 DD 00H		; Singleton<ioVictoriesMgr>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$Singleton@VioVictoriesMgr@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$Singleton@VioVictoriesMgr@@@@@8
_DATA	SEGMENT
??_R0?AV?$Singleton@VioVictoriesMgr@@@@@8 DD FLAT:??_7type_info@@6B@ ; Singleton<ioVictoriesMgr> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$Singleton@VioVictoriesMgr@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@?$Singleton@VioVictoriesMgr@@@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$Singleton@VioVictoriesMgr@@@@8 DD FLAT:??_R0?AV?$Singleton@VioVictoriesMgr@@@@@8 ; Singleton<ioVictoriesMgr>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Singleton@VioVictoriesMgr@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioVictoriesMgr@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioVictoriesMgr@@8 DD FLAT:??_R0?AVioVictoriesMgr@@@8 ; ioVictoriesMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioVictoriesMgr@@8
rdata$r	ENDS
;	COMDAT ??_R2ioVictoriesMgr@@8
rdata$r	SEGMENT
??_R2ioVictoriesMgr@@8 DD FLAT:??_R1A@?0A@EA@ioVictoriesMgr@@8 ; ioVictoriesMgr::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@?$Singleton@VioVictoriesMgr@@@@8
rdata$r	ENDS
;	COMDAT ??_R3ioVictoriesMgr@@8
rdata$r	SEGMENT
??_R3ioVictoriesMgr@@8 DD 00H				; ioVictoriesMgr::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioVictoriesMgr@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioVictoriesMgr@@@8
_DATA	SEGMENT
??_R0?AVioVictoriesMgr@@@8 DD FLAT:??_7type_info@@6B@	; ioVictoriesMgr `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioVictoriesMgr@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioVictoriesMgr@@6B@
rdata$r	SEGMENT
??_R4ioVictoriesMgr@@6B@ DD 00H				; ioVictoriesMgr::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioVictoriesMgr@@@8
	DD	FLAT:??_R3ioVictoriesMgr@@8
rdata$r	ENDS
;	COMDAT ??_7ioVictoriesMgr@@6B@
CONST	SEGMENT
??_7ioVictoriesMgr@@6B@ DD FLAT:??_R4ioVictoriesMgr@@6B@ ; ioVictoriesMgr::`vftable'
	DD	FLAT:??_EioVictoriesMgr@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ioVictoriesMgr@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioVictoriesMgr@@UAE@XZ$0
__ehfuncinfo$??1ioVictoriesMgr@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ioVictoriesMgr@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iovictoriesmgr.cpp
xdata$x	ENDS
;	COMDAT ??1ioVictoriesMgr@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioVictoriesMgr@@UAE@XZ PROC				; ioVictoriesMgr::~ioVictoriesMgr, COMDAT
; _this$ = ecx

; 14   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioVictoriesMgr@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ioVictoriesMgr@@6B@
  00015	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 15   : }

  00019	83 c1 04	 add	 ecx, 4
  0001c	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEXXZ ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Tidy
  00021	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_Singleton@?$Singleton@VioVictoriesMgr@@@@1PAVioVictoriesMgr@@A, 0 ; Singleton<ioVictoriesMgr>::ms_Singleton
  00028	e8 00 00 00 00	 call	 __EH_epilog3
  0002d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioVictoriesMgr@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioVictoriesMgr@@@@QAE@XZ ; Singleton<ioVictoriesMgr>::~Singleton<ioVictoriesMgr>
__ehhandler$??1ioVictoriesMgr@@UAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioVictoriesMgr@@UAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioVictoriesMgr@@UAE@XZ ENDP				; ioVictoriesMgr::~ioVictoriesMgr
PUBLIC	?LeaveUser@ioVictoriesMgr@@QAEXABVioHashString@@@Z ; ioVictoriesMgr::LeaveUser
; Function compile flags: /Ogsp
;	COMDAT ?LeaveUser@ioVictoriesMgr@@QAEXABVioHashString@@@Z
_TEXT	SEGMENT
_iSize$ = -4						; size = 4
$T507631 = 8						; size = 4
_szUserID$ = 8						; size = 4
?LeaveUser@ioVictoriesMgr@@QAEXABVioHashString@@@Z PROC	; ioVictoriesMgr::LeaveUser, COMDAT
; _this$ = ecx

; 53   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 54   : 	int iSize = m_VictoriesData.size();

  00005	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b 06		 sub	 eax, DWORD PTR [esi]
  0000d	57		 push	 edi
  0000e	6a 14		 push	 20			; 00000014H
  00010	99		 cdq
  00011	59		 pop	 ecx
  00012	f7 f9		 idiv	 ecx

; 55   : 	for(int i = 0;i < iSize;i++)

  00014	33 ff		 xor	 edi, edi
  00016	89 45 fc	 mov	 DWORD PTR _iSize$[ebp], eax
  00019	85 c0		 test	 eax, eax
  0001b	7e 31		 jle	 SHORT $LN2@LeaveUser

; 54   : 	int iSize = m_VictoriesData.size();

  0001d	53		 push	 ebx
  0001e	33 db		 xor	 ebx, ebx
$LL4@LeaveUser:

; 56   : 	{
; 57   : 		VictoriesData &kData = m_VictoriesData[i];

  00020	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 58   : 		if( kData.m_szUserID == szUserID )

  00022	ff 75 08	 push	 DWORD PTR _szUserID$[ebp]
  00025	03 cb		 add	 ecx, ebx
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??8ioHashString@@QBE_NABV0@@Z
  0002d	84 c0		 test	 al, al
  0002f	75 0b		 jne	 SHORT $LN26@LeaveUser

; 55   : 	for(int i = 0;i < iSize;i++)

  00031	47		 inc	 edi
  00032	83 c3 14	 add	 ebx, 20			; 00000014H
  00035	3b 7d fc	 cmp	 edi, DWORD PTR _iSize$[ebp]
  00038	7c e6		 jl	 SHORT $LL4@LeaveUser

; 58   : 		if( kData.m_szUserID == szUserID )

  0003a	eb 11		 jmp	 SHORT $LN28@LeaveUser
$LN26@LeaveUser:

; 59   : 		{
; 60   : 			m_VictoriesData.erase( m_VictoriesData.begin() + i );

  0003c	6b ff 14	 imul	 edi, 20			; 00000014H
  0003f	03 3e		 add	 edi, DWORD PTR [esi]
  00041	8d 45 08	 lea	 eax, DWORD PTR $T507631[ebp]
  00044	57		 push	 edi
  00045	50		 push	 eax
  00046	8b ce		 mov	 ecx, esi
  00048	e8 00 00 00 00	 call	 ?erase@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::erase
$LN28@LeaveUser:
  0004d	5b		 pop	 ebx
$LN2@LeaveUser:
  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi

; 61   : 			return;
; 62   : 		}
; 63   : 	}
; 64   : }

  00050	c9		 leave
  00051	c2 04 00	 ret	 4
?LeaveUser@ioVictoriesMgr@@QAEXABVioHashString@@@Z ENDP	; ioVictoriesMgr::LeaveUser
_TEXT	ENDS
PUBLIC	?push_back@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXABUVictoriesData@ioVictoriesMgr@@@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::push_back
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?push_back@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXABUVictoriesData@ioVictoriesMgr@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXABUVictoriesData@ioVictoriesMgr@@@Z PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f9		 cmp	 edi, ecx
  0000f	73 33		 jae	 SHORT $LN4@push_back
  00011	8b 16		 mov	 edx, DWORD PTR [esi]
  00013	3b d7		 cmp	 edx, edi
  00015	77 2d		 ja	 SHORT $LN4@push_back

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	8b c7		 mov	 eax, edi
  00019	2b c2		 sub	 eax, edx
  0001b	6a 14		 push	 20			; 00000014H
  0001d	99		 cdq
  0001e	5f		 pop	 edi
  0001f	f7 ff		 idiv	 edi
  00021	8b f8		 mov	 edi, eax

; 980  : 			if (this->_Mylast == this->_Myend)

  00023	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00026	75 09		 jne	 SHORT $LN3@push_back

; 981  : 				_Reserve(1);

  00028	6a 01		 push	 1
  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEXI@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Reserve
$LN3@push_back:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  00031	6b ff 14	 imul	 edi, 20			; 00000014H
  00034	03 3e		 add	 edi, DWORD PTR [esi]
  00036	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00039	57		 push	 edi
  0003a	ff 76 04	 push	 DWORD PTR [esi+4]
  0003d	e8 00 00 00 00	 call	 ??$construct@AAUVictoriesData@ioVictoriesMgr@@@?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@QAEXPAUVictoriesData@ioVictoriesMgr@@AAU23@@Z ; std::allocator<ioVictoriesMgr::VictoriesData>::construct<ioVictoriesMgr::VictoriesData &>

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00042	eb 19		 jmp	 SHORT $LN30@push_back
$LN4@push_back:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00044	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00047	75 09		 jne	 SHORT $LN1@push_back

; 991  : 				_Reserve(1);

  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@IAEXI@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::_Reserve
$LN1@push_back:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00052	57		 push	 edi
  00053	ff 76 04	 push	 DWORD PTR [esi+4]
  00056	e8 00 00 00 00	 call	 ??$_Construct@UVictoriesData@ioVictoriesMgr@@ABU12@@std@@YAXPAUVictoriesData@ioVictoriesMgr@@ABU12@@Z ; std::_Construct<ioVictoriesMgr::VictoriesData,ioVictoriesMgr::VictoriesData const &>
  0005b	59		 pop	 ecx
  0005c	59		 pop	 ecx
$LN30@push_back:

; 996  : 			++this->_Mylast;

  0005d	83 46 04 14	 add	 DWORD PTR [esi+4], 20	; 00000014H
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?push_back@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXABUVictoriesData@ioVictoriesMgr@@@Z ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::push_back
_TEXT	ENDS
PUBLIC	?clear@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXXZ ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T507737 = -4						; size = 4
?clear@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXXZ PROC ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T507737[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@0@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXXZ ENDP ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::clear
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GioVictoriesMgr@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioVictoriesMgr@@UAEPAXI@Z PROC			; ioVictoriesMgr::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioVictoriesMgr@@UAE@XZ ; ioVictoriesMgr::~ioVictoriesMgr
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@3
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@3:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioVictoriesMgr@@UAEPAXI@Z ENDP			; ioVictoriesMgr::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?Initialize@ioVictoriesMgr@@QAEXXZ		; ioVictoriesMgr::Initialize
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iovictoriesmgr.cpp
;	COMDAT ?Initialize@ioVictoriesMgr@@QAEXXZ
_TEXT	SEGMENT
$T507854 = -4						; size = 4
?Initialize@ioVictoriesMgr@@QAEXXZ PROC			; ioVictoriesMgr::Initialize, COMDAT
; _this$ = ecx

; 37   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 38   : 	m_VictoriesData.clear();

  00004	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00007	83 c1 04	 add	 ecx, 4
  0000a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000c	50		 push	 eax
  0000d	52		 push	 edx
  0000e	8d 45 fc	 lea	 eax, DWORD PTR $T507854[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?erase@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@@2@0@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::erase

; 39   : }

  00017	c9		 leave
  00018	c3		 ret	 0
?Initialize@ioVictoriesMgr@@QAEXXZ ENDP			; ioVictoriesMgr::Initialize
_TEXT	ENDS
PUBLIC	?EnterUser@ioVictoriesMgr@@QAEXABVioHashString@@@Z ; ioVictoriesMgr::EnterUser
EXTRN	__imp_??9ioHashString@@QBE_NABV0@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?EnterUser@ioVictoriesMgr@@QAEXABVioHashString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EnterUser@ioVictoriesMgr@@QAEXABVioHashString@@@Z$0
__ehfuncinfo$?EnterUser@ioVictoriesMgr@@QAEXABVioHashString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?EnterUser@ioVictoriesMgr@@QAEXABVioHashString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?EnterUser@ioVictoriesMgr@@QAEXABVioHashString@@@Z
_TEXT	SEGMENT
_kVictoriesData$505113 = -32				; size = 20
__$EHRec$ = -12						; size = 12
_szUserID$ = 8						; size = 4
?EnterUser@ioVictoriesMgr@@QAEXABVioHashString@@@Z PROC	; ioVictoriesMgr::EnterUser, COMDAT
; _this$ = ecx

; 42   : {

  00000	6a 14		 push	 20			; 00000014H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?EnterUser@ioVictoriesMgr@@QAEXABVioHashString@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 43   : 	VictoriesData &kData = FindList( szUserID );

  0000e	ff 75 08	 push	 DWORD PTR _szUserID$[ebp]
  00011	e8 00 00 00 00	 call	 ?FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z ; ioVictoriesMgr::FindList

; 44   : 	if( kData.m_szUserID != szUserID )

  00016	ff 75 08	 push	 DWORD PTR _szUserID$[ebp]
  00019	8b c8		 mov	 ecx, eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??9ioHashString@@QBE_NABV0@@Z
  00021	84 c0		 test	 al, al
  00023	74 36		 je	 SHORT $LN1@EnterUser

; 45   : 	{
; 46   : 		VictoriesData kVictoriesData;

  00025	8d 4d e0	 lea	 ecx, DWORD PTR _kVictoriesData$505113[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ
  0002e	83 65 f0 00	 and	 DWORD PTR _kVictoriesData$505113[ebp+16], 0

; 47   : 		kVictoriesData.m_szUserID = szUserID;

  00032	ff 75 08	 push	 DWORD PTR _szUserID$[ebp]
  00035	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00039	8d 4d e0	 lea	 ecx, DWORD PTR _kVictoriesData$505113[ebp]
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z

; 48   : 		m_VictoriesData.push_back( kVictoriesData );

  00042	8d 45 e0	 lea	 eax, DWORD PTR _kVictoriesData$505113[ebp]
  00045	50		 push	 eax
  00046	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00049	e8 00 00 00 00	 call	 ?push_back@?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAEXABUVictoriesData@ioVictoriesMgr@@@Z ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::push_back

; 49   : 	}

  0004e	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00052	8d 4d e0	 lea	 ecx, DWORD PTR _kVictoriesData$505113[ebp]
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
$LN1@EnterUser:

; 50   : }

  0005b	e8 00 00 00 00	 call	 __EH_epilog3
  00060	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?EnterUser@ioVictoriesMgr@@QAEXABVioHashString@@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _kVictoriesData$505113[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1VictoriesData@ioVictoriesMgr@@QAE@XZ
__ehhandler$?EnterUser@ioVictoriesMgr@@QAEXABVioHashString@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?EnterUser@ioVictoriesMgr@@QAEXABVioHashString@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?EnterUser@ioVictoriesMgr@@QAEXABVioHashString@@@Z ENDP	; ioVictoriesMgr::EnterUser
PUBLIC	??0ioVictoriesMgr@@QAE@XZ			; ioVictoriesMgr::ioVictoriesMgr
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??0ioVictoriesMgr@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioVictoriesMgr@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ioVictoriesMgr@@QAE@XZ$1
__ehfuncinfo$??0ioVictoriesMgr@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0ioVictoriesMgr@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iovictoriesmgr.cpp
xdata$x	ENDS
;	COMDAT ??0ioVictoriesMgr@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ioVictoriesMgr@@QAE@XZ PROC				; ioVictoriesMgr::ioVictoriesMgr, COMDAT
; _this$ = ecx

; 9    : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioVictoriesMgr@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	8b c6		 mov	 eax, esi
  00013	a3 00 00 00 00	 mov	 DWORD PTR ?ms_Singleton@?$Singleton@VioVictoriesMgr@@@@1PAVioVictoriesMgr@@A, eax ; Singleton<ioVictoriesMgr>::ms_Singleton
  00018	33 c0		 xor	 eax, eax
  0001a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioVictoriesMgr@@6B@
  00020	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00023	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00026	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00029	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  0002c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 10   : 	Initialize();

  00030	e8 00 00 00 00	 call	 ?Initialize@ioVictoriesMgr@@QAEXXZ ; ioVictoriesMgr::Initialize

; 11   : }

  00035	8b c6		 mov	 eax, esi
  00037	e8 00 00 00 00	 call	 __EH_epilog3
  0003c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioVictoriesMgr@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$Singleton@VioVictoriesMgr@@@@QAE@XZ ; Singleton<ioVictoriesMgr>::~Singleton<ioVictoriesMgr>
__unwindfunclet$??0ioVictoriesMgr@@QAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 04	 add	 ecx, 4
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@UVictoriesData@ioVictoriesMgr@@V?$allocator@UVictoriesData@ioVictoriesMgr@@@std@@@std@@QAE@XZ ; std::vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >::~vector<ioVictoriesMgr::VictoriesData,std::allocator<ioVictoriesMgr::VictoriesData> >
__ehhandler$??0ioVictoriesMgr@@QAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioVictoriesMgr@@QAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioVictoriesMgr@@QAE@XZ ENDP				; ioVictoriesMgr::ioVictoriesMgr
; Function compile flags: /Ogsp
;	COMDAT ??__FkNullData@?5??FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z@YAXXZ
text$yd	SEGMENT
??__FkNullData@?5??FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z@YAXXZ PROC ; `ioVictoriesMgr::FindList'::`6'::`dynamic atexit destructor for 'kNullData'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?kNullData@?5??FindList@ioVictoriesMgr@@IAEAAUVictoriesData@2@ABVioHashString@@@Z@4U32@A
  00005	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
??__FkNullData@?5??FindList@ioVictoriesMgr@@IAEAAUVictoriesData@1@ABVioHashString@@@Z@YAXXZ ENDP ; `ioVictoriesMgr::FindList'::`6'::`dynamic atexit destructor for 'kNullData''
text$yd	ENDS
END
