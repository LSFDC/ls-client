; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioTargetMarker.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
;	COMDAT ?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB DD 01H ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
CONST	ENDS
PUBLIC	?return1@@YAIXZ					; return1
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
;	COMDAT ?return1@@YAIXZ
_TEXT	SEGMENT
?return1@@YAIXZ PROC					; return1, COMDAT

; 17   : 	__forceinline unsigned int return1() { __asm mov eax, 1 };

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?return1@@YAIXZ ENDP					; return1
_TEXT	ENDS
PUBLIC	__real@4f800000
PUBLIC	??_7ioTargetMarker@@6B@				; ioTargetMarker::`vftable'
PUBLIC	??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z	; ioTargetMarker::ioTargetMarker
PUBLIC	??_R4ioTargetMarker@@6B@			; ioTargetMarker::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioTargetMarker@@@8			; ioTargetMarker `RTTI Type Descriptor'
PUBLIC	??_R3ioTargetMarker@@8				; ioTargetMarker::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioTargetMarker@@8				; ioTargetMarker::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioTargetMarker@@8			; ioTargetMarker::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?SetMarkerState@ioTargetMarker@@UAEXPAVioPlayStage@@W4MarkerState@1@@Z ; ioTargetMarker::SetMarkerState
PUBLIC	?SetTarget@ioTargetMarker@@UAEXABVioHashString@@_N@Z ; ioTargetMarker::SetTarget
PUBLIC	?IsTarget@ioTargetMarker@@UAE_NXZ		; ioTargetMarker::IsTarget
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__fltused:DWORD
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__purecall:PROC
EXTRN	??_EioTargetMarker@@UAEPAXI@Z:PROC		; ioTargetMarker::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@ioTargetMarker@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioTargetMarker@@8 DD FLAT:??_R0?AVioTargetMarker@@@8 ; ioTargetMarker::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioTargetMarker@@8
rdata$r	ENDS
;	COMDAT ??_R2ioTargetMarker@@8
rdata$r	SEGMENT
??_R2ioTargetMarker@@8 DD FLAT:??_R1A@?0A@EA@ioTargetMarker@@8 ; ioTargetMarker::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioTargetMarker@@8
rdata$r	SEGMENT
??_R3ioTargetMarker@@8 DD 00H				; ioTargetMarker::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioTargetMarker@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioTargetMarker@@@8
_DATA	SEGMENT
??_R0?AVioTargetMarker@@@8 DD FLAT:??_7type_info@@6B@	; ioTargetMarker `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioTargetMarker@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioTargetMarker@@6B@
rdata$r	SEGMENT
??_R4ioTargetMarker@@6B@ DD 00H				; ioTargetMarker::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioTargetMarker@@@8
	DD	FLAT:??_R3ioTargetMarker@@8
rdata$r	ENDS
;	COMDAT __real@4f800000
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
CONST	ENDS
;	COMDAT ??_7ioTargetMarker@@6B@
CONST	SEGMENT
??_7ioTargetMarker@@6B@ DD FLAT:??_R4ioTargetMarker@@6B@ ; ioTargetMarker::`vftable'
	DD	FLAT:?SetMarkerState@ioTargetMarker@@UAEXPAVioPlayStage@@W4MarkerState@1@@Z
	DD	FLAT:?SetTarget@ioTargetMarker@@UAEXABVioHashString@@_N@Z
	DD	FLAT:?IsTarget@ioTargetMarker@@UAE_NXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_EioTargetMarker@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z$4
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iotargetmarker.cpp
xdata$x	ENDS
;	COMDAT ??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
tv209 = 8						; size = 4
_pOwner$ = 8						; size = 4
??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z PROC		; ioTargetMarker::ioTargetMarker, COMDAT
; _this$ = ecx

; 10   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??0ioHashString@@QAE@XZ
  00017	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0001a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioTargetMarker@@6B@
  00020	ff d7		 call	 edi
  00022	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00026	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  00029	ff d7		 call	 edi
  0002b	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  0002e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00032	ff d7		 call	 edi
  00034	8d 4e 3c	 lea	 ecx, DWORD PTR [esi+60]
  00037	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0003b	ff d7		 call	 edi
  0003d	8d 4e 4c	 lea	 ecx, DWORD PTR [esi+76]
  00040	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00044	ff d7		 call	 edi
  00046	8d 4e 5c	 lea	 ecx, DWORD PTR [esi+92]
  00049	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0004d	ff d7		 call	 edi

; 11   : 	m_pOwner = pOwner;

  0004f	8b 45 08	 mov	 eax, DWORD PTR _pOwner$[ebp]

; 12   : 	m_MarkerState = MS_NONE;

  00052	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00056	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 13   : 	m_fMarkerRange = FLOAT1;

  00059	b8 01 00 00 00	 mov	 eax, 1
  0005e	89 45 08	 mov	 DWORD PTR tv209[ebp], eax
  00061	db 45 08	 fild	 DWORD PTR tv209[ebp]
  00064	85 c0		 test	 eax, eax
  00066	79 06		 jns	 SHORT $LN12@ioTargetMa
  00068	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN12@ioTargetMa:

; 14   : 	m_fJumpMarkerAngle = 0.0f;

  0006e	0f 57 c0	 xorps	 xmm0, xmm0
  00071	d9 9e 84 00 00
	00		 fstp	 DWORD PTR [esi+132]

; 15   : 	m_fMarkerYOffset = 0.0f;
; 16   : 
; 17   : 	m_bBall = false;
; 18   : 	m_bUseEnable = true;
; 19   : 	m_bPreUseEnable = true;
; 20   : 
; 21   : 	m_ReadyID = -1;

  00077	83 c8 ff	 or	 eax, -1
  0007a	89 46 6c	 mov	 DWORD PTR [esi+108], eax

; 22   : 	m_AimingID = -1;

  0007d	89 46 70	 mov	 DWORD PTR [esi+112], eax

; 23   : 	m_AimedID = -1;

  00080	89 46 74	 mov	 DWORD PTR [esi+116], eax

; 24   : 	m_ZeroAimedID = -1;

  00083	89 46 78	 mov	 DWORD PTR [esi+120], eax

; 25   : 	m_JumpAimID = -1;

  00086	89 46 7c	 mov	 DWORD PTR [esi+124], eax

; 26   : 	m_HeadAimedID = -1;

  00089	89 86 80 00 00
	00		 mov	 DWORD PTR [esi+128], eax
  0008f	f3 0f 11 86 8c
	00 00 00	 movss	 DWORD PTR [esi+140], xmm0
  00097	f3 0f 11 86 88
	00 00 00	 movss	 DWORD PTR [esi+136], xmm0
  0009f	66 c7 86 90 00
	00 00 00 01	 mov	 WORD PTR [esi+144], 256	; 00000100H
  000a8	c6 86 92 00 00
	00 01		 mov	 BYTE PTR [esi+146], 1

; 27   : }

  000af	8b c6		 mov	 eax, esi
  000b1	e8 00 00 00 00	 call	 __EH_epilog3
  000b6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z$1:
  0000c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z$2:
  00018	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	83 c1 2c	 add	 ecx, 44			; 0000002cH
  0001e	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z$3:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0002a	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z$4:
  00030	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	83 c1 4c	 add	 ecx, 76			; 0000004cH
  00036	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z:
  0003c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00040	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00043	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00046	33 c8		 xor	 ecx, eax
  00048	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z
  00052	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioTargetMarker@@QAE@PAVioBaseChar@@@Z ENDP		; ioTargetMarker::ioTargetMarker
PUBLIC	??1ioTargetMarker@@UAE@XZ			; ioTargetMarker::~ioTargetMarker
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1ioTargetMarker@@UAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1ioTargetMarker@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1ioTargetMarker@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioTargetMarker@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ioTargetMarker@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1ioTargetMarker@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1ioTargetMarker@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1ioTargetMarker@@UAE@XZ$4
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1ioTargetMarker@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioTargetMarker@@UAE@XZ PROC				; ioTargetMarker::~ioTargetMarker, COMDAT
; _this$ = ecx

; 30   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioTargetMarker@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00011	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7ioTargetMarker@@6B@

; 31   : }

  00017	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_??1ioHashString@@QAE@XZ
  0001d	8d 4f 5c	 lea	 ecx, DWORD PTR [edi+92]
  00020	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  00027	ff d6		 call	 esi
  00029	8d 4f 4c	 lea	 ecx, DWORD PTR [edi+76]
  0002c	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00030	ff d6		 call	 esi
  00032	8d 4f 3c	 lea	 ecx, DWORD PTR [edi+60]
  00035	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00039	ff d6		 call	 esi
  0003b	8d 4f 2c	 lea	 ecx, DWORD PTR [edi+44]
  0003e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00042	ff d6		 call	 esi
  00044	8d 4f 1c	 lea	 ecx, DWORD PTR [edi+28]
  00047	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0004b	ff d6		 call	 esi
  0004d	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00051	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  00054	ff d6		 call	 esi
  00056	e8 00 00 00 00	 call	 __EH_epilog3
  0005b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioTargetMarker@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??1ioTargetMarker@@UAE@XZ$1:
  0000c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??1ioTargetMarker@@UAE@XZ$2:
  00018	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	83 c1 2c	 add	 ecx, 44			; 0000002cH
  0001e	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??1ioTargetMarker@@UAE@XZ$3:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0002a	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$??1ioTargetMarker@@UAE@XZ$4:
  00030	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	83 c1 4c	 add	 ecx, 76			; 0000004cH
  00036	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??1ioTargetMarker@@UAE@XZ:
  0003c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00040	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00043	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00046	33 c8		 xor	 ecx, eax
  00048	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioTargetMarker@@UAE@XZ
  00052	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioTargetMarker@@UAE@XZ ENDP				; ioTargetMarker::~ioTargetMarker
PUBLIC	?SetMarkerEffect@ioTargetMarker@@QAEXABVioHashString@@0000@Z ; ioTargetMarker::SetMarkerEffect
EXTRN	__imp_??4ioHashString@@QAEAAV0@ABV0@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ?SetMarkerEffect@ioTargetMarker@@QAEXABVioHashString@@0000@Z
_TEXT	SEGMENT
_szReady$ = 8						; size = 4
_szAiming$ = 12						; size = 4
_szAimed$ = 16						; size = 4
_szZeroAimed$ = 20					; size = 4
_szHeadAimed$ = 24					; size = 4
?SetMarkerEffect@ioTargetMarker@@QAEXABVioHashString@@0000@Z PROC ; ioTargetMarker::SetMarkerEffect, COMDAT
; _this$ = ecx

; 38   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 39   : 	m_szReadyEffect = szReady;

  00004	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z
  0000a	57		 push	 edi
  0000b	ff 75 08	 push	 DWORD PTR _szReady$[ebp]
  0000e	8b f9		 mov	 edi, ecx
  00010	8d 4f 1c	 lea	 ecx, DWORD PTR [edi+28]
  00013	ff d6		 call	 esi

; 40   : 	m_szAimingEffect = szAiming;

  00015	ff 75 0c	 push	 DWORD PTR _szAiming$[ebp]
  00018	8d 4f 2c	 lea	 ecx, DWORD PTR [edi+44]
  0001b	ff d6		 call	 esi

; 41   : 	m_szAimedEffect = szAimed;

  0001d	ff 75 10	 push	 DWORD PTR _szAimed$[ebp]
  00020	8d 4f 3c	 lea	 ecx, DWORD PTR [edi+60]
  00023	ff d6		 call	 esi

; 42   : 	m_szZeroAimedEffect = szZeroAimed;

  00025	ff 75 14	 push	 DWORD PTR _szZeroAimed$[ebp]
  00028	8d 4f 4c	 lea	 ecx, DWORD PTR [edi+76]
  0002b	ff d6		 call	 esi

; 43   : 	m_szHeadAimedEffect = szHeadAimed;

  0002d	ff 75 18	 push	 DWORD PTR _szHeadAimed$[ebp]
  00030	8d 4f 5c	 lea	 ecx, DWORD PTR [edi+92]
  00033	ff d6		 call	 esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi

; 44   : }

  00037	5d		 pop	 ebp
  00038	c2 14 00	 ret	 20			; 00000014H
?SetMarkerEffect@ioTargetMarker@@QAEXABVioHashString@@0000@Z ENDP ; ioTargetMarker::SetMarkerEffect
_TEXT	ENDS
PUBLIC	?SetUseEnable@ioTargetMarker@@QAEX_N@Z		; ioTargetMarker::SetUseEnable
; Function compile flags: /Ogsp
;	COMDAT ?SetUseEnable@ioTargetMarker@@QAEX_N@Z
_TEXT	SEGMENT
_bEnable$ = 8						; size = 1
?SetUseEnable@ioTargetMarker@@QAEX_N@Z PROC		; ioTargetMarker::SetUseEnable, COMDAT
; _this$ = ecx

; 47   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 48   : 	m_bPreUseEnable = m_bUseEnable;

  00003	8d 81 91 00 00
	00		 lea	 eax, DWORD PTR [ecx+145]
  00009	8a 10		 mov	 dl, BYTE PTR [eax]
  0000b	88 91 92 00 00
	00		 mov	 BYTE PTR [ecx+146], dl

; 49   : 	m_bUseEnable = bEnable;

  00011	8a 4d 08	 mov	 cl, BYTE PTR _bEnable$[ebp]
  00014	88 08		 mov	 BYTE PTR [eax], cl

; 50   : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?SetUseEnable@ioTargetMarker@@QAEX_N@Z ENDP		; ioTargetMarker::SetUseEnable
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?SetTarget@ioTargetMarker@@UAEXABVioHashString@@_N@Z
_TEXT	SEGMENT
_rkTarget$ = 8						; size = 4
_bBall$ = 12						; size = 1
?SetTarget@ioTargetMarker@@UAEXABVioHashString@@_N@Z PROC ; ioTargetMarker::SetTarget, COMDAT
; _this$ = ecx

; 89   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 90   : 	m_Target = rkTarget;

  00004	ff 75 08	 push	 DWORD PTR _rkTarget$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z

; 91   : 	m_bBall = bBall;

  00012	8a 45 0c	 mov	 al, BYTE PTR _bBall$[ebp]
  00015	88 86 90 00 00
	00		 mov	 BYTE PTR [esi+144], al
  0001b	5e		 pop	 esi

; 92   : }

  0001c	5d		 pop	 ebp
  0001d	c2 08 00	 ret	 8
?SetTarget@ioTargetMarker@@UAEXABVioHashString@@_N@Z ENDP ; ioTargetMarker::SetTarget
_TEXT	ENDS
PUBLIC	?GetTargetChar@ioTargetMarker@@QBEPAVioBaseChar@@XZ ; ioTargetMarker::GetTargetChar
EXTRN	?GetBaseChar@ioBaseChar@@QAEPAV1@ABVioHashString@@@Z:PROC ; ioBaseChar::GetBaseChar
; Function compile flags: /Ogsp
;	COMDAT ?GetTargetChar@ioTargetMarker@@QBEPAVioBaseChar@@XZ
_TEXT	SEGMENT
?GetTargetChar@ioTargetMarker@@QBEPAVioBaseChar@@XZ PROC ; ioTargetMarker::GetTargetChar, COMDAT
; _this$ = ecx

; 96   : 	return m_pOwner->GetBaseChar( m_Target );

  00000	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?GetBaseChar@ioBaseChar@@QAEPAV1@ABVioHashString@@@Z ; ioBaseChar::GetBaseChar

; 97   : }

  0000c	c3		 ret	 0
?GetTargetChar@ioTargetMarker@@QBEPAVioBaseChar@@XZ ENDP ; ioTargetMarker::GetTargetChar
_TEXT	ENDS
EXTRN	__imp_?IsEmpty@ioHashString@@QBE_NXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?IsTarget@ioTargetMarker@@UAE_NXZ
_TEXT	SEGMENT
?IsTarget@ioTargetMarker@@UAE_NXZ PROC			; ioTargetMarker::IsTarget, COMDAT
; _this$ = ecx

; 101  : 	if( !m_Target.IsEmpty() )

  00000	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@ioHashString@@QBE_NXZ
  00009	f6 d8		 neg	 al
  0000b	1a c0		 sbb	 al, al
  0000d	fe c0		 inc	 al

; 102  : 		return true;
; 103  : 
; 104  : 	return false;
; 105  : }

  0000f	c3		 ret	 0
?IsTarget@ioTargetMarker@@UAE_NXZ ENDP			; ioTargetMarker::IsTarget
_TEXT	ENDS
PUBLIC	?GetMarkerState@ioTargetMarker@@QBE?AW4MarkerState@1@XZ ; ioTargetMarker::GetMarkerState
; Function compile flags: /Ogsp
;	COMDAT ?GetMarkerState@ioTargetMarker@@QBE?AW4MarkerState@1@XZ
_TEXT	SEGMENT
?GetMarkerState@ioTargetMarker@@QBE?AW4MarkerState@1@XZ PROC ; ioTargetMarker::GetMarkerState, COMDAT
; _this$ = ecx

; 109  : 	return m_MarkerState;

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 110  : }

  00003	c3		 ret	 0
?GetMarkerState@ioTargetMarker@@QBE?AW4MarkerState@1@XZ ENDP ; ioTargetMarker::GetMarkerState
_TEXT	ENDS
PUBLIC	?DestroyMarkerEffect@ioTargetMarker@@QAEXPAVioPlayStage@@K@Z ; ioTargetMarker::DestroyMarkerEffect
EXTRN	?DestroyMapEffect@ioPlayStage@@QAEXK@Z:PROC	; ioPlayStage::DestroyMapEffect
; Function compile flags: /Ogsp
;	COMDAT ?DestroyMarkerEffect@ioTargetMarker@@QAEXPAVioPlayStage@@K@Z
_TEXT	SEGMENT
_pStage$ = 8						; size = 4
_dwEffectID$ = 12					; size = 4
?DestroyMarkerEffect@ioTargetMarker@@QAEXPAVioPlayStage@@K@Z PROC ; ioTargetMarker::DestroyMarkerEffect, COMDAT
; _this$ = ecx

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 155  : 	if( !pStage ) return;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pStage$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 08		 je	 SHORT $LN2@DestroyMar

; 156  : 
; 157  : 	pStage->DestroyMapEffect( dwEffectID );

  0000a	ff 75 0c	 push	 DWORD PTR _dwEffectID$[ebp]
  0000d	e8 00 00 00 00	 call	 ?DestroyMapEffect@ioPlayStage@@QAEXK@Z ; ioPlayStage::DestroyMapEffect
$LN2@DestroyMar:

; 158  : }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?DestroyMarkerEffect@ioTargetMarker@@QAEXPAVioPlayStage@@K@Z ENDP ; ioTargetMarker::DestroyMarkerEffect
_TEXT	ENDS
PUBLIC	?GetCurMarker@ioTargetMarker@@QAEPAVioMapEffect@@PAVioPlayStage@@@Z ; ioTargetMarker::GetCurMarker
EXTRN	?FindMapEffect@ioPlayStage@@QAEPAVioMapEffect@@K@Z:PROC ; ioPlayStage::FindMapEffect
; Function compile flags: /Ogsp
;	COMDAT ?GetCurMarker@ioTargetMarker@@QAEPAVioMapEffect@@PAVioPlayStage@@@Z
_TEXT	SEGMENT
_pStage$ = 8						; size = 4
?GetCurMarker@ioTargetMarker@@QAEPAVioMapEffect@@PAVioPlayStage@@@Z PROC ; ioTargetMarker::GetCurMarker, COMDAT
; _this$ = ecx

; 161  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 162  : 	if( !pStage )

  00003	83 7d 08 00	 cmp	 DWORD PTR _pStage$[ebp], 0
  00007	75 04		 jne	 SHORT $LN9@GetCurMark

; 163  : 		return NULL;

  00009	33 c0		 xor	 eax, eax
  0000b	eb 40		 jmp	 SHORT $LN10@GetCurMark
$LN9@GetCurMark:

; 164  : 
; 165  : 	DWORD dwID = -1;
; 166  : 
; 167  : 	switch( m_MarkerState )

  0000d	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00010	83 c8 ff	 or	 eax, -1
  00013	4a		 dec	 edx
  00014	74 2b		 je	 SHORT $LN6@GetCurMark
  00016	4a		 dec	 edx
  00017	74 23		 je	 SHORT $LN5@GetCurMark
  00019	4a		 dec	 edx
  0001a	74 1b		 je	 SHORT $LN4@GetCurMark
  0001c	4a		 dec	 edx
  0001d	74 13		 je	 SHORT $LN3@GetCurMark
  0001f	4a		 dec	 edx
  00020	74 0b		 je	 SHORT $LN2@GetCurMark
  00022	4a		 dec	 edx
  00023	75 1f		 jne	 SHORT $LN7@GetCurMark

; 184  : 	case MS_HEAD_AIMED: 
; 185  : 		dwID = m_HeadAimedID;

  00025	8b 81 80 00 00
	00		 mov	 eax, DWORD PTR [ecx+128]

; 186  : 		break;

  0002b	eb 17		 jmp	 SHORT $LN7@GetCurMark
$LN2@GetCurMark:

; 181  : 	case MS_JUMP_AIM:
; 182  : 		dwID = m_JumpAimID;

  0002d	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]

; 183  : 		break;

  00030	eb 12		 jmp	 SHORT $LN7@GetCurMark
$LN3@GetCurMark:

; 178  : 	case MS_ZERO_AIMED:
; 179  : 		dwID = m_ZeroAimedID;

  00032	8b 41 78	 mov	 eax, DWORD PTR [ecx+120]

; 180  : 		break;

  00035	eb 0d		 jmp	 SHORT $LN7@GetCurMark
$LN4@GetCurMark:

; 175  : 	case MS_AIMED:
; 176  : 		dwID = m_AimedID;

  00037	8b 41 74	 mov	 eax, DWORD PTR [ecx+116]

; 177  : 		break;

  0003a	eb 08		 jmp	 SHORT $LN7@GetCurMark
$LN5@GetCurMark:

; 171  : 		break;
; 172  : 	case MS_AIMING:
; 173  : 		dwID = m_AimingID;

  0003c	8b 41 70	 mov	 eax, DWORD PTR [ecx+112]

; 174  : 		break;

  0003f	eb 03		 jmp	 SHORT $LN7@GetCurMark
$LN6@GetCurMark:

; 168  : 	{
; 169  : 	case MS_READY:
; 170  : 		dwID = m_ReadyID;

  00041	8b 41 6c	 mov	 eax, DWORD PTR [ecx+108]
$LN7@GetCurMark:

; 187  : 	}
; 188  : 
; 189  : 	return pStage->FindMapEffect( dwID );

  00044	8b 4d 08	 mov	 ecx, DWORD PTR _pStage$[ebp]
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ?FindMapEffect@ioPlayStage@@QAEPAVioMapEffect@@K@Z ; ioPlayStage::FindMapEffect
$LN10@GetCurMark:

; 190  : }

  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
?GetCurMarker@ioTargetMarker@@QAEPAVioMapEffect@@PAVioPlayStage@@@Z ENDP ; ioTargetMarker::GetCurMarker
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GioTargetMarker@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioTargetMarker@@UAEPAXI@Z PROC			; ioTargetMarker::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioTargetMarker@@UAE@XZ ; ioTargetMarker::~ioTargetMarker
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioTargetMarker@@UAEPAXI@Z ENDP			; ioTargetMarker::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?DestroyMarker@ioTargetMarker@@QAEXPAVioPlayStage@@@Z ; ioTargetMarker::DestroyMarker
; Function compile flags: /Ogsp
;	COMDAT ?DestroyMarker@ioTargetMarker@@QAEXPAVioPlayStage@@@Z
_TEXT	SEGMENT
_pStage$ = 8						; size = 4
?DestroyMarker@ioTargetMarker@@QAEXPAVioPlayStage@@@Z PROC ; ioTargetMarker::DestroyMarker, COMDAT
; _this$ = ecx

; 113  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 114  : 	if( !pStage ) return;

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _pStage$[ebp]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	85 db		 test	 ebx, ebx
  0000c	74 77		 je	 SHORT $LN1@DestroyMar@2

; 115  : 
; 116  : 	if( m_ReadyID != -1 )

  0000e	8b 46 6c	 mov	 eax, DWORD PTR [esi+108]
  00011	57		 push	 edi
  00012	83 cf ff	 or	 edi, -1
  00015	3b c7		 cmp	 eax, edi
  00017	74 0b		 je	 SHORT $LN6@DestroyMar@2

; 117  : 	{
; 118  : 		DestroyMarkerEffect( pStage, m_ReadyID );

  00019	50		 push	 eax
  0001a	8b cb		 mov	 ecx, ebx
  0001c	e8 00 00 00 00	 call	 ?DestroyMapEffect@ioPlayStage@@QAEXK@Z ; ioPlayStage::DestroyMapEffect

; 119  : 		m_ReadyID = -1;

  00021	89 7e 6c	 mov	 DWORD PTR [esi+108], edi
$LN6@DestroyMar@2:

; 120  : 	}
; 121  : 
; 122  : 	if( m_AimingID != -1 )

  00024	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
  00027	3b c7		 cmp	 eax, edi
  00029	74 0b		 je	 SHORT $LN5@DestroyMar@2

; 123  : 	{
; 124  : 		DestroyMarkerEffect( pStage, m_AimingID );

  0002b	50		 push	 eax
  0002c	8b cb		 mov	 ecx, ebx
  0002e	e8 00 00 00 00	 call	 ?DestroyMapEffect@ioPlayStage@@QAEXK@Z ; ioPlayStage::DestroyMapEffect

; 125  : 		m_AimingID = -1;

  00033	89 7e 70	 mov	 DWORD PTR [esi+112], edi
$LN5@DestroyMar@2:

; 126  : 	}
; 127  : 
; 128  : 	if( m_AimedID != -1 )

  00036	8b 46 74	 mov	 eax, DWORD PTR [esi+116]
  00039	3b c7		 cmp	 eax, edi
  0003b	74 0b		 je	 SHORT $LN4@DestroyMar@2

; 129  : 	{
; 130  : 		DestroyMarkerEffect( pStage, m_AimedID );

  0003d	50		 push	 eax
  0003e	8b cb		 mov	 ecx, ebx
  00040	e8 00 00 00 00	 call	 ?DestroyMapEffect@ioPlayStage@@QAEXK@Z ; ioPlayStage::DestroyMapEffect

; 131  : 		m_AimedID = -1;

  00045	89 7e 74	 mov	 DWORD PTR [esi+116], edi
$LN4@DestroyMar@2:

; 132  : 	}
; 133  : 
; 134  : 	if( m_ZeroAimedID != -1 )

  00048	8b 46 78	 mov	 eax, DWORD PTR [esi+120]
  0004b	3b c7		 cmp	 eax, edi
  0004d	74 0b		 je	 SHORT $LN3@DestroyMar@2

; 135  : 	{
; 136  : 		DestroyMarkerEffect( pStage, m_ZeroAimedID );

  0004f	50		 push	 eax
  00050	8b cb		 mov	 ecx, ebx
  00052	e8 00 00 00 00	 call	 ?DestroyMapEffect@ioPlayStage@@QAEXK@Z ; ioPlayStage::DestroyMapEffect

; 137  : 		m_ZeroAimedID = -1;

  00057	89 7e 78	 mov	 DWORD PTR [esi+120], edi
$LN3@DestroyMar@2:

; 138  : 	}
; 139  : 
; 140  : 	if( m_JumpAimID != -1 )

  0005a	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
  0005d	3b c7		 cmp	 eax, edi
  0005f	74 0b		 je	 SHORT $LN2@DestroyMar@2

; 141  : 	{
; 142  : 		DestroyMarkerEffect( pStage, m_JumpAimID );

  00061	50		 push	 eax
  00062	8b cb		 mov	 ecx, ebx
  00064	e8 00 00 00 00	 call	 ?DestroyMapEffect@ioPlayStage@@QAEXK@Z ; ioPlayStage::DestroyMapEffect

; 143  : 		m_JumpAimID = -1;

  00069	89 7e 7c	 mov	 DWORD PTR [esi+124], edi
$LN2@DestroyMar@2:

; 144  : 	}
; 145  : 
; 146  : 	if( m_HeadAimedID != -1 )

  0006c	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  00072	3b c7		 cmp	 eax, edi
  00074	74 0e		 je	 SHORT $LN28@DestroyMar@2

; 147  : 	{
; 148  : 		DestroyMarkerEffect( pStage, m_HeadAimedID );

  00076	50		 push	 eax
  00077	8b cb		 mov	 ecx, ebx
  00079	e8 00 00 00 00	 call	 ?DestroyMapEffect@ioPlayStage@@QAEXK@Z ; ioPlayStage::DestroyMapEffect

; 149  : 		m_HeadAimedID = -1;

  0007e	89 be 80 00 00
	00		 mov	 DWORD PTR [esi+128], edi
$LN28@DestroyMar@2:
  00084	5f		 pop	 edi
$LN1@DestroyMar@2:
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx

; 150  : 	}
; 151  : }

  00087	5d		 pop	 ebp
  00088	c2 04 00	 ret	 4
?DestroyMarker@ioTargetMarker@@QAEXPAVioPlayStage@@@Z ENDP ; ioTargetMarker::DestroyMarker
_TEXT	ENDS
EXTRN	__imp_?Clear@ioHashString@@QAEXXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?SetMarkerState@ioTargetMarker@@UAEXPAVioPlayStage@@W4MarkerState@1@@Z
_TEXT	SEGMENT
_pStage$ = 8						; size = 4
_eState$ = 12						; size = 4
?SetMarkerState@ioTargetMarker@@UAEXPAVioPlayStage@@W4MarkerState@1@@Z PROC ; ioTargetMarker::SetMarkerState, COMDAT
; _this$ = ecx

; 53   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 54   : 	m_MarkerState = eState;

  00003	8b 45 0c	 mov	 eax, DWORD PTR _eState$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi

; 55   : 	DestroyMarker( pStage );

  00008	8b 7d 08	 mov	 edi, DWORD PTR _pStage$[ebp]
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00011	e8 00 00 00 00	 call	 ?DestroyMarker@ioTargetMarker@@QAEXPAVioPlayStage@@@Z ; ioTargetMarker::DestroyMarker

; 56   : 
; 57   : 	switch( m_MarkerState )

  00016	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00019	83 e8 00	 sub	 eax, 0
  0001c	0f 84 a1 00 00
	00		 je	 $LN9@SetMarkerS
  00022	48		 dec	 eax
  00023	0f 84 80 00 00
	00		 je	 $LN8@SetMarkerS
  00029	48		 dec	 eax
  0002a	74 63		 je	 SHORT $LN7@SetMarkerS
  0002c	48		 dec	 eax
  0002d	74 43		 je	 SHORT $LN6@SetMarkerS
  0002f	48		 dec	 eax
  00030	74 2f		 je	 SHORT $LN3@SetMarkerS
  00032	48		 dec	 eax
  00033	74 1b		 je	 SHORT $LN2@SetMarkerS
  00035	48		 dec	 eax
  00036	0f 85 90 00 00
	00		 jne	 $LN10@SetMarkerS

; 82   : 	case MS_HEAD_AIMED: 
; 83   : 		m_HeadAimedID = CreateEffect( pStage, m_szHeadAimedEffect );

  0003c	8b 06		 mov	 eax, DWORD PTR [esi]
  0003e	8d 4e 5c	 lea	 ecx, DWORD PTR [esi+92]
  00041	51		 push	 ecx
  00042	57		 push	 edi
  00043	8b ce		 mov	 ecx, esi
  00045	ff 50 0c	 call	 DWORD PTR [eax+12]
  00048	89 86 80 00 00
	00		 mov	 DWORD PTR [esi+128], eax

; 84   : 		break;

  0004e	eb 7c		 jmp	 SHORT $LN10@SetMarkerS
$LN2@SetMarkerS:

; 79   : 	case MS_JUMP_AIM:
; 80   : 		m_JumpAimID = CreateEffect( pStage, m_szReadyEffect );

  00050	8b 06		 mov	 eax, DWORD PTR [esi]
  00052	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  00055	51		 push	 ecx
  00056	57		 push	 edi
  00057	8b ce		 mov	 ecx, esi
  00059	ff 50 0c	 call	 DWORD PTR [eax+12]
  0005c	89 46 7c	 mov	 DWORD PTR [esi+124], eax

; 81   : 		break;

  0005f	eb 6b		 jmp	 SHORT $LN10@SetMarkerS
$LN3@SetMarkerS:

; 76   : 	case MS_ZERO_AIMED:
; 77   : 		m_ZeroAimedID = CreateEffect( pStage, m_szZeroAimedEffect );

  00061	8b 06		 mov	 eax, DWORD PTR [esi]
  00063	8d 4e 4c	 lea	 ecx, DWORD PTR [esi+76]
  00066	51		 push	 ecx
  00067	57		 push	 edi
  00068	8b ce		 mov	 ecx, esi
  0006a	ff 50 0c	 call	 DWORD PTR [eax+12]
  0006d	89 46 78	 mov	 DWORD PTR [esi+120], eax

; 78   : 		break;

  00070	eb 5a		 jmp	 SHORT $LN10@SetMarkerS
$LN6@SetMarkerS:

; 70   : 	case MS_AIMED:
; 71   : 		if( m_bUseEnable )

  00072	80 be 91 00 00
	00 00		 cmp	 BYTE PTR [esi+145], 0

; 72   : 			m_AimedID = CreateEffect( pStage, m_szAimedEffect );

  00079	8b 06		 mov	 eax, DWORD PTR [esi]
  0007b	8d 4e 3c	 lea	 ecx, DWORD PTR [esi+60]
  0007e	75 03		 jne	 SHORT $LN14@SetMarkerS

; 73   : 		else
; 74   : 			m_AimedID = CreateEffect( pStage, m_szReadyEffect );

  00080	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
$LN14@SetMarkerS:
  00083	51		 push	 ecx
  00084	57		 push	 edi
  00085	8b ce		 mov	 ecx, esi
  00087	ff 50 0c	 call	 DWORD PTR [eax+12]
  0008a	89 46 74	 mov	 DWORD PTR [esi+116], eax

; 75   : 		break;

  0008d	eb 3d		 jmp	 SHORT $LN10@SetMarkerS
$LN7@SetMarkerS:

; 66   : 	case MS_AIMING:
; 67   : 		m_Target.Clear();

  0008f	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00092	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Clear@ioHashString@@QAEXXZ

; 68   : 		m_AimingID = CreateEffect( pStage, m_szAimingEffect );

  00098	8b 06		 mov	 eax, DWORD PTR [esi]
  0009a	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  0009d	51		 push	 ecx
  0009e	57		 push	 edi
  0009f	8b ce		 mov	 ecx, esi
  000a1	ff 50 0c	 call	 DWORD PTR [eax+12]
  000a4	89 46 70	 mov	 DWORD PTR [esi+112], eax

; 69   : 		break;

  000a7	eb 23		 jmp	 SHORT $LN10@SetMarkerS
$LN8@SetMarkerS:

; 61   : 		break;
; 62   : 	case MS_READY:
; 63   : 		m_Target.Clear();

  000a9	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Clear@ioHashString@@QAEXXZ

; 64   : 		m_ReadyID = CreateEffect( pStage, m_szReadyEffect );

  000b2	8b 06		 mov	 eax, DWORD PTR [esi]
  000b4	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  000b7	51		 push	 ecx
  000b8	57		 push	 edi
  000b9	8b ce		 mov	 ecx, esi
  000bb	ff 50 0c	 call	 DWORD PTR [eax+12]
  000be	89 46 6c	 mov	 DWORD PTR [esi+108], eax

; 65   : 		break;

  000c1	eb 09		 jmp	 SHORT $LN10@SetMarkerS
$LN9@SetMarkerS:

; 58   : 	{
; 59   : 	case MS_NONE:
; 60   : 		m_Target.Clear();

  000c3	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  000c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Clear@ioHashString@@QAEXXZ
$LN10@SetMarkerS:
  000cc	5f		 pop	 edi
  000cd	5e		 pop	 esi

; 85   : 	}
; 86   : }

  000ce	5d		 pop	 ebp
  000cf	c2 08 00	 ret	 8
?SetMarkerState@ioTargetMarker@@UAEXPAVioPlayStage@@W4MarkerState@1@@Z ENDP ; ioTargetMarker::SetMarkerState
_TEXT	ENDS
END
