; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioThrowBombItem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?return1@@YAIXZ					; return1
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
;	COMDAT ?return1@@YAIXZ
_TEXT	SEGMENT
?return1@@YAIXZ PROC					; return1, COMDAT

; 17   : 	__forceinline unsigned int return1() { __asm mov eax, 1 };

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?return1@@YAIXZ ENDP					; return1
_TEXT	ENDS
PUBLIC	?GetTargetRot@ioBaseChar@@QBEABUD3DXQUATERNION@@XZ ; ioBaseChar::GetTargetRot
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iobasechar.h
;	COMDAT ?GetTargetRot@ioBaseChar@@QBEABUD3DXQUATERNION@@XZ
_TEXT	SEGMENT
?GetTargetRot@ioBaseChar@@QBEABUD3DXQUATERNION@@XZ PROC	; ioBaseChar::GetTargetRot, COMDAT
; _this$ = ecx

; 2599 : 	inline const D3DXQUATERNION& GetTargetRot() const { return m_qtTargetRot; }

  00000	8d 81 a4 06 00
	00		 lea	 eax, DWORD PTR [ecx+1700]
  00006	c3		 ret	 0
?GetTargetRot@ioBaseChar@@QBEABUD3DXQUATERNION@@XZ ENDP	; ioBaseChar::GetTargetRot
_TEXT	ENDS
PUBLIC	??_R0?AVioWeapon@@@8				; ioWeapon `RTTI Type Descriptor'
PUBLIC	??_R0?AVioThrowBombWeapon@@@8			; ioThrowBombWeapon `RTTI Type Descriptor'
PUBLIC	?ToThrowBombWeapon@@YAPAVioThrowBombWeapon@@PAVioWeapon@@@Z ; ToThrowBombWeapon
EXTRN	___RTDynamicCast:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R0?AVioWeapon@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iothrowbombweapon.h
_DATA	SEGMENT
??_R0?AVioWeapon@@@8 DD FLAT:??_7type_info@@6B@		; ioWeapon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWeapon@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVioThrowBombWeapon@@@8
_DATA	SEGMENT
??_R0?AVioThrowBombWeapon@@@8 DD FLAT:??_7type_info@@6B@ ; ioThrowBombWeapon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioThrowBombWeapon@@', 00H
; Function compile flags: /Ogsp
_DATA	ENDS
;	COMDAT ?ToThrowBombWeapon@@YAPAVioThrowBombWeapon@@PAVioWeapon@@@Z
_TEXT	SEGMENT
_pWeapon$ = 8						; size = 4
?ToThrowBombWeapon@@YAPAVioThrowBombWeapon@@PAVioWeapon@@@Z PROC ; ToThrowBombWeapon, COMDAT

; 170  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 171  : 	if( !pWeapon || pWeapon->GetType() != ioWeapon::WT_THROWBOMB )

  00004	8b 75 08	 mov	 esi, DWORD PTR _pWeapon$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 28		 je	 SHORT $LN1@ToThrowBom
  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
  0000d	8b ce		 mov	 ecx, esi
  0000f	ff 90 10 01 00
	00		 call	 DWORD PTR [eax+272]
  00015	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  00018	75 19		 jne	 SHORT $LN1@ToThrowBom

; 173  : 
; 174  : 	return dynamic_cast< ioThrowBombWeapon* >( pWeapon );

  0001a	6a 00		 push	 0
  0001c	68 00 00 00 00	 push	 OFFSET ??_R0?AVioThrowBombWeapon@@@8
  00021	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWeapon@@@8
  00026	6a 00		 push	 0
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ___RTDynamicCast
  0002e	83 c4 14	 add	 esp, 20			; 00000014H
  00031	eb 02		 jmp	 SHORT $LN3@ToThrowBom
$LN1@ToThrowBom:

; 172  : 		return NULL;

  00033	33 c0		 xor	 eax, eax
$LN3@ToThrowBom:
  00035	5e		 pop	 esi

; 175  : }

  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?ToThrowBombWeapon@@YAPAVioThrowBombWeapon@@PAVioWeapon@@@Z ENDP ; ToThrowBombWeapon
_TEXT	ENDS
PUBLIC	??_R0?AVioBoundBombWeapon@@@8			; ioBoundBombWeapon `RTTI Type Descriptor'
PUBLIC	?ToBoundBombWeapon@@YAPAVioBoundBombWeapon@@PAVioWeapon@@@Z ; ToBoundBombWeapon
;	COMDAT ??_R0?AVioBoundBombWeapon@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioboundbombweapon.h
_DATA	SEGMENT
??_R0?AVioBoundBombWeapon@@@8 DD FLAT:??_7type_info@@6B@ ; ioBoundBombWeapon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioBoundBombWeapon@@', 00H
; Function compile flags: /Ogsp
_DATA	ENDS
;	COMDAT ?ToBoundBombWeapon@@YAPAVioBoundBombWeapon@@PAVioWeapon@@@Z
_TEXT	SEGMENT
_pWeapon$ = 8						; size = 4
?ToBoundBombWeapon@@YAPAVioBoundBombWeapon@@PAVioWeapon@@@Z PROC ; ToBoundBombWeapon, COMDAT

; 123  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 124  : 	if( !pWeapon || pWeapon->GetType() != ioWeapon::WT_BOUNDBOMB )

  00004	8b 75 08	 mov	 esi, DWORD PTR _pWeapon$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 28		 je	 SHORT $LN1@ToBoundBom
  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
  0000d	8b ce		 mov	 ecx, esi
  0000f	ff 90 10 01 00
	00		 call	 DWORD PTR [eax+272]
  00015	83 f8 15	 cmp	 eax, 21			; 00000015H
  00018	75 19		 jne	 SHORT $LN1@ToBoundBom

; 126  : 
; 127  : 	return dynamic_cast< ioBoundBombWeapon* >( pWeapon );

  0001a	6a 00		 push	 0
  0001c	68 00 00 00 00	 push	 OFFSET ??_R0?AVioBoundBombWeapon@@@8
  00021	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWeapon@@@8
  00026	6a 00		 push	 0
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ___RTDynamicCast
  0002e	83 c4 14	 add	 esp, 20			; 00000014H
  00031	eb 02		 jmp	 SHORT $LN3@ToBoundBom
$LN1@ToBoundBom:

; 125  : 		return NULL;

  00033	33 c0		 xor	 eax, eax
$LN3@ToBoundBom:
  00035	5e		 pop	 esi

; 128  : }

  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?ToBoundBombWeapon@@YAPAVioBoundBombWeapon@@PAVioWeapon@@@Z ENDP ; ToBoundBombWeapon
_TEXT	ENDS
PUBLIC	??_7ioThrowBombItem@@6B@			; ioThrowBombItem::`vftable'
PUBLIC	??1ioThrowBombItem@@UAE@XZ			; ioThrowBombItem::~ioThrowBombItem
PUBLIC	??_R4ioThrowBombItem@@6B@			; ioThrowBombItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioThrowBombItem@@@8			; ioThrowBombItem `RTTI Type Descriptor'
PUBLIC	??_R3ioThrowBombItem@@8				; ioThrowBombItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioThrowBombItem@@8				; ioThrowBombItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioThrowBombItem@@8		; ioThrowBombItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioObjectItem@@8			; ioObjectItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioObjectItem@@@8			; ioObjectItem `RTTI Type Descriptor'
PUBLIC	??_R3ioObjectItem@@8				; ioObjectItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioObjectItem@@8				; ioObjectItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioWeaponItem@@8			; ioWeaponItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioWeaponItem@@@8			; ioWeaponItem `RTTI Type Descriptor'
PUBLIC	??_R3ioWeaponItem@@8				; ioWeaponItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioWeaponItem@@8				; ioWeaponItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioAttackableItem@@8		; ioAttackableItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioAttackableItem@@@8			; ioAttackableItem `RTTI Type Descriptor'
PUBLIC	??_R3ioAttackableItem@@8			; ioAttackableItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioAttackableItem@@8			; ioAttackableItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioItem@@8				; ioItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioItem@@@8				; ioItem `RTTI Type Descriptor'
PUBLIC	??_R3ioItem@@8					; ioItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioItem@@8					; ioItem::`RTTI Base Class Array'
PUBLIC	?LoadProperty@ioThrowBombItem@@UAEXAAVioINILoader@@@Z ; ioThrowBombItem::LoadProperty
PUBLIC	?Clone@ioThrowBombItem@@UAEPAVioItem@@XZ	; ioThrowBombItem::Clone
PUBLIC	?OnEquiped@ioThrowBombItem@@UAEXPAVioBaseChar@@@Z ; ioThrowBombItem::OnEquiped
PUBLIC	?OnReleased@ioThrowBombItem@@UAEXPAVioBaseChar@@@Z ; ioThrowBombItem::OnReleased
PUBLIC	?IsEnableExtraGauge@ioItem@@UAE_NPAVioBaseChar@@@Z ; ioItem::IsEnableExtraGauge
PUBLIC	?GetExtraGauge@ioItem@@UAEMXZ			; ioItem::GetExtraGauge
PUBLIC	?SetExtraInfoToWeapon@ioThrowBombItem@@UAEXPAVioWeapon@@_N@Z ; ioThrowBombItem::SetExtraInfoToWeapon
PUBLIC	?CheckOnHand@ioAttackableItem@@UAE_NXZ		; ioAttackableItem::CheckOnHand
PUBLIC	?CheckAimState@ioAttackableItem@@UAE_N_N@Z	; ioAttackableItem::CheckAimState
PUBLIC	?SetAimState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ; ioAttackableItem::SetAimState
PUBLIC	?CheckExtendDefenseEnable@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ; ioAttackableItem::CheckExtendDefenseEnable
PUBLIC	?IsChargeAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ; ioAttackableItem::IsChargeAttackState
PUBLIC	?IsMoveAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ; ioAttackableItem::IsMoveAttackState
PUBLIC	?IsNoGhostWalk@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ; ioAttackableItem::IsNoGhostWalk
PUBLIC	?IsEnableAttackDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z ; ioAttackableItem::IsEnableAttackDashCheck
PUBLIC	?IsEnableItemDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z ; ioAttackableItem::IsEnableItemDashCheck
PUBLIC	?IsEnableAttackRotateCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ; ioAttackableItem::IsEnableAttackRotateCheck
PUBLIC	?IsEnableChargeDefenseCheck@ioAttackableItem@@UAE_NXZ ; ioAttackableItem::IsEnableChargeDefenseCheck
PUBLIC	?IsUseDefenceCounterAttackEndDash@ioAttackableItem@@UAE_NXZ ; ioAttackableItem::IsUseDefenceCounterAttackEndDash
PUBLIC	?IsAutoTarget@ioAttackableItem@@UBE_NXZ		; ioAttackableItem::IsAutoTarget
PUBLIC	?IsWoundAfterUseExtendState@ioAttackableItem@@UAE_NXZ ; ioAttackableItem::IsWoundAfterUseExtendState
PUBLIC	?CheckWoundAfterUseExtendState@ioAttackableItem@@UAE_NPAVioBaseChar@@W4BlowTargetType@@@Z ; ioAttackableItem::CheckWoundAfterUseExtendState
PUBLIC	?IsCharSkipState@ioAttackableItem@@UAE_NPBVioBaseChar@@@Z ; ioAttackableItem::IsCharSkipState
PUBLIC	?GetObjectSubType@ioThrowBombItem@@UBE?AW4ObjectSubType@ioObjectItem@@XZ ; ioThrowBombItem::GetObjectSubType
PUBLIC	?OnProcessState@ioObjectItem@@UAEXPAVioPlayStage@@PAVioBaseChar@@@Z ; ioObjectItem::OnProcessState
PUBLIC	?SetObjectReleaseTCPSend@ioObjectItem@@UAEX_N@Z	; ioObjectItem::SetObjectReleaseTCPSend
PUBLIC	?IsObjectReleaseTCPSend@ioObjectItem@@UAE_NXZ	; ioObjectItem::IsObjectReleaseTCPSend
PUBLIC	?IsNormalAttackStop@ioObjectItem@@UAE_NXZ	; ioObjectItem::IsNormalAttackStop
EXTRN	??1ioObjectItem@@UAE@XZ:PROC			; ioObjectItem::~ioObjectItem
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
EXTRN	?FindFieldEntityGrp@ioItem@@MBEABVioHashString@@XZ:PROC ; ioItem::FindFieldEntityGrp
EXTRN	?GetType@ioObjectItem@@UBE?AW4ItemType@ioItem@@XZ:PROC ; ioObjectItem::GetType
EXTRN	?UseCreateIndexItem@ioItem@@UBE_NXZ:PROC	; ioItem::UseCreateIndexItem
EXTRN	?GetSetFocusColor@ioItem@@UBEKXZ:PROC		; ioItem::GetSetFocusColor
EXTRN	?Initialize@ioItem@@UAEXABVioHashString@@PAVioPlayStage@@@Z:PROC ; ioItem::Initialize
EXTRN	?InitializeBeforeEquip@ioItem@@UAEXABVioHashString@@PAVioPlayStage@@@Z:PROC ; ioItem::InitializeBeforeEquip
EXTRN	?SetExtendEquipEffect@ioItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioItem::SetExtendEquipEffect
EXTRN	?ReleaseExtendEquipEffect@ioItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioItem::ReleaseExtendEquipEffect
EXTRN	?AddGlowLine@ioWeaponItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioWeaponItem::AddGlowLine
EXTRN	?RemoveGlowLine@ioWeaponItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioWeaponItem::RemoveGlowLine
EXTRN	?GetTargetName@ioItem@@UAE?AVioHashString@@XZ:PROC ; ioItem::GetTargetName
EXTRN	?ClearTarget@ioItem@@UAEXXZ:PROC		; ioItem::ClearTarget
EXTRN	?SetItemType@ioWeaponItem@@UAEXXZ:PROC		; ioWeaponItem::SetItemType
EXTRN	?UpdateExtraData@ioItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioItem::UpdateExtraData
EXTRN	?CheckWeaponDefenseState@ioItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioItem::CheckWeaponDefenseState
EXTRN	?CheckWoundedState@ioItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioItem::CheckWoundedState
EXTRN	?SetVisible@ioItem@@UAEXPAVioBaseChar@@_N@Z:PROC ; ioItem::SetVisible
EXTRN	?UpdateSkillGauge@ioItem@@UAEXPAVioBaseChar@@M_N@Z:PROC ; ioItem::UpdateSkillGauge
EXTRN	?ReduceNeedGauge@ioItem@@UAEXMPAVioBaseChar@@@Z:PROC ; ioItem::ReduceNeedGauge
EXTRN	?GetCurBullet@ioItem@@UAEHXZ:PROC		; ioItem::GetCurBullet
EXTRN	?GetMaxBullet@ioItem@@UAEHXZ:PROC		; ioItem::GetMaxBullet
EXTRN	?SetCurBullet@ioItem@@UAEXH@Z:PROC		; ioItem::SetCurBullet
EXTRN	?GetCurSecoundBullet@ioItem@@UAEHXZ:PROC	; ioItem::GetCurSecoundBullet
EXTRN	?GetMaxSecoundBullet@ioItem@@UAEHXZ:PROC	; ioItem::GetMaxSecoundBullet
EXTRN	?SetCurSecoundBullet@ioItem@@UAEXH@Z:PROC	; ioItem::SetCurSecoundBullet
EXTRN	?GetGrowthInfoNum@ioObjectItem@@UBEHH@Z:PROC	; ioObjectItem::GetGrowthInfoNum
EXTRN	?GetGrowthInfoNumByType@ioObjectItem@@UBEHHAAH@Z:PROC ; ioObjectItem::GetGrowthInfoNumByType
EXTRN	?ClearCurChargeRateForSkill@ioItem@@UAEXXZ:PROC	; ioItem::ClearCurChargeRateForSkill
EXTRN	?GetChargeDamageRateForSkill@ioItem@@UAEMXZ:PROC ; ioItem::GetChargeDamageRateForSkill
EXTRN	?GetChargeForceRateForSkill@ioItem@@UAEMXZ:PROC	; ioItem::GetChargeForceRateForSkill
EXTRN	?GetChargeBlowRateForSkill@ioItem@@UAEMXZ:PROC	; ioItem::GetChargeBlowRateForSkill
EXTRN	?GetChargeRangeRateForSkill@ioItem@@UAEMXZ:PROC	; ioItem::GetChargeRangeRateForSkill
EXTRN	?GetChargeSpeedRateForSkill@ioItem@@UAEMXZ:PROC	; ioItem::GetChargeSpeedRateForSkill
EXTRN	?GetChargeFloatRateForSkill@ioItem@@UAEMXZ:PROC	; ioItem::GetChargeFloatRateForSkill
EXTRN	?GetChargeScaleRateForSkill@ioItem@@UAEMXZ:PROC	; ioItem::GetChargeScaleRateForSkill
EXTRN	?GetChargeExplosionRateForSkill@ioItem@@UAEMXZ:PROC ; ioItem::GetChargeExplosionRateForSkill
EXTRN	?GetChargeWoundedTimeRateForSkill@ioItem@@UAEMXZ:PROC ; ioItem::GetChargeWoundedTimeRateForSkill
EXTRN	?SetCurEquipEffect@ioItem@@UAEX_N@Z:PROC	; ioItem::SetCurEquipEffect
EXTRN	?SetCostume@ioItem@@UAEXH_N@Z:PROC		; ioItem::SetCostume
EXTRN	??_EioThrowBombItem@@UAEPAXI@Z:PROC		; ioThrowBombItem::`vector deleting destructor'
EXTRN	?IsCanFire@ioAttackableItem@@UBE_NPBVioBaseChar@@H_N@Z:PROC ; ioAttackableItem::IsCanFire
EXTRN	?CallItemProcess@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CallItemProcess
EXTRN	?CheckChargeInfo@ioAttackableItem@@UAEXPAVioWeapon@@_N@Z:PROC ; ioAttackableItem::CheckChargeInfo
EXTRN	?SetExtendDefenseState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetExtendDefenseState
EXTRN	?CheckExtendDefenseState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckExtendDefenseState
EXTRN	?CheckDefenseMoveAniState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckDefenseMoveAniState
EXTRN	?SetDodgeDefenseState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetDodgeDefenseState
EXTRN	?CheckDodgeDefenseState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckDodgeDefenseState
EXTRN	?ApplyDodgeDefenseState@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z:PROC ; ioAttackableItem::ApplyDodgeDefenseState
EXTRN	?SetDefenseAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetDefenseAttackState
EXTRN	?CheckDefenseAttackState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckDefenseAttackState
EXTRN	?ApplyDefenseAttackState@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z:PROC ; ioAttackableItem::ApplyDefenseAttackState
EXTRN	?SetExtendDashState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetExtendDashState
EXTRN	?CheckExtendDashState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckExtendDashState
EXTRN	?SetNormalAttack@ioAttackableItem@@UAEXPAVioBaseChar@@H@Z:PROC ; ioAttackableItem::SetNormalAttack
EXTRN	?CheckNormalAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckNormalAttack
EXTRN	?SetJumpAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@HMW4AttackType@@@Z:PROC ; ioAttackableItem::SetJumpAttack
EXTRN	?CheckJumpAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckJumpAttack
EXTRN	?SetJumpReloadState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetJumpReloadState
EXTRN	?SetJumpReload@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetJumpReload
EXTRN	?CheckJumpReloadState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckJumpReloadState
EXTRN	?CheckJumpReloadReserve@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckJumpReloadReserve
EXTRN	?ProcessJumpReloadState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::ProcessJumpReloadState
EXTRN	?ApplyJumpReload@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z:PROC ; ioAttackableItem::ApplyJumpReload
EXTRN	?OnItemGaugeOK@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z:PROC ; ioAttackableItem::OnItemGaugeOK
EXTRN	?OnItemGaugeCancel@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z:PROC ; ioAttackableItem::OnItemGaugeCancel
EXTRN	?OnEndExtendDefense@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::OnEndExtendDefense
EXTRN	?OnEndNormalAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::OnEndNormalAttack
EXTRN	?OnEndExtendAttack@ioAttackableItem@@UAEXPAVioBaseChar@@_N@Z:PROC ; ioAttackableItem::OnEndExtendAttack
EXTRN	?OnEndExtendJump@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::OnEndExtendJump
EXTRN	?FillNormalAttackExtraInfo@ioAttackableItem@@UAEXAAVSP2Packet@@@Z:PROC ; ioAttackableItem::FillNormalAttackExtraInfo
EXTRN	?ApplyNormalAttackExtraInfo@ioAttackableItem@@UAEXAAVSP2Packet@@@Z:PROC ; ioAttackableItem::ApplyNormalAttackExtraInfo
EXTRN	?CheckLanding@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckLanding
EXTRN	?SetNoneState@ioAttackableItem@@UAEXPAVioBaseChar@@H@Z:PROC ; ioAttackableItem::SetNoneState
EXTRN	?IsCanUpdateGauge@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::IsCanUpdateGauge
EXTRN	?CheckAimJumpState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckAimJumpState
EXTRN	?GetJumppingAnimation@ioAttackableItem@@UBEABVioHashString@@XZ:PROC ; ioAttackableItem::GetJumppingAnimation
EXTRN	?GetExtendJumppingAnimation@ioAttackableItem@@UBEABVioHashString@@XZ:PROC ; ioAttackableItem::GetExtendJumppingAnimation
EXTRN	?CheckRetreatState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckRetreatState
EXTRN	?SetNextItemState@ioAttackableItem@@UAEXPAVioBaseChar@@0PAVioWeapon@@_NM@Z:PROC ; ioAttackableItem::SetNextItemState
EXTRN	?WeaponWounded@ioWeaponItem@@UAEXPAVioWeapon@@PAVioBaseChar@@@Z:PROC ; ioWeaponItem::WeaponWounded
EXTRN	?WeaponMapColDead@ioAttackableItem@@UAEXPAVioWeapon@@@Z:PROC ; ioAttackableItem::WeaponMapColDead
EXTRN	?SetDefenceCounterState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetDefenceCounterState
EXTRN	?IsUseDefenceCounterAttack@ioAttackableItem@@UAE_NXZ:PROC ; ioAttackableItem::IsUseDefenceCounterAttack
EXTRN	?ProcessDefenceCounterAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::ProcessDefenceCounterAttack
EXTRN	?ProcessExtraJump@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::ProcessExtraJump
EXTRN	?SetEndGrappling@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetEndGrappling
EXTRN	?ClearKeyReserve@ioAttackableItem@@MAEXXZ:PROC	; ioAttackableItem::ClearKeyReserve
EXTRN	?CheckReserve@ioAttackableItem@@MAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckReserve
EXTRN	?ProcessReserveKeyInput@ioAttackableItem@@MAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::ProcessReserveKeyInput
EXTRN	?SetJumpState@ioAttackableItem@@UAEXXZ:PROC	; ioAttackableItem::SetJumpState
EXTRN	?SetJumpping@ioAttackableItem@@UAEXPAVioBaseChar@@_N@Z:PROC ; ioAttackableItem::SetJumpping
EXTRN	?ProcessJumpping@ioAttackableItem@@UAEXPAVioBaseChar@@M@Z:PROC ; ioAttackableItem::ProcessJumpping
EXTRN	?ProcessJumppingByNoNeedProcess@ioAttackableItem@@UAEXPAVioBaseChar@@M@Z:PROC ; ioAttackableItem::ProcessJumppingByNoNeedProcess
EXTRN	?ProcessLanding@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::ProcessLanding
EXTRN	?ProcessJumpAttack@ioAttackableItem@@UAEXPAVioBaseChar@@M@Z:PROC ; ioAttackableItem::ProcessJumpAttack
EXTRN	?ProcessAimJump@ioAttackableItem@@UAE_NPAVioBaseChar@@M@Z:PROC ; ioAttackableItem::ProcessAimJump
EXTRN	?ApplyJump@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z:PROC ; ioAttackableItem::ApplyJump
EXTRN	?ApplyDash@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z:PROC ; ioAttackableItem::ApplyDash
EXTRN	?ApplyCounterAttack@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z:PROC ; ioAttackableItem::ApplyCounterAttack
EXTRN	?CheckComboJumpAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckComboJumpAttack
EXTRN	?SetFlashJumpAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetFlashJumpAttack
EXTRN	?SetComboFlashAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetComboFlashAttack
EXTRN	?SetCollectJumpAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetCollectJumpAttack
EXTRN	?SetPowerChargeJumpAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetPowerChargeJumpAttack
EXTRN	?GetAttackSpeedRate@ioAttackableItem@@UBEMXZ:PROC ; ioAttackableItem::GetAttackSpeedRate
EXTRN	?GetExtraJumpSpeedRate@ioAttackableItem@@UBEMABUD3DXVECTOR3@@ABUD3DXQUATERNION@@@Z:PROC ; ioAttackableItem::GetExtraJumpSpeedRate
EXTRN	?IsEnableExtendJump@ioAttackableItem@@UAE_NXZ:PROC ; ioAttackableItem::IsEnableExtendJump
EXTRN	?RecevieExtendJumpUse@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::RecevieExtendJumpUse
EXTRN	?HasAniFile@ioAttackableItem@@UBE_NW4AttackType@@H@Z:PROC ; ioAttackableItem::HasAniFile
EXTRN	?HasEndAniFile@ioAttackableItem@@UBE_NW4AttackType@@H@Z:PROC ; ioAttackableItem::HasEndAniFile
EXTRN	?GetAttackAttribute@ioAttackableItem@@UBEPBUAttackAttribute@@W4AttackType@@H@Z:PROC ; ioAttackableItem::GetAttackAttribute
EXTRN	?GetAniFile@ioAttackableItem@@UBEABVioHashString@@W4AttackType@@H@Z:PROC ; ioAttackableItem::GetAniFile
EXTRN	?GetAttackAniRate@ioAttackableItem@@UBEMW4AttackType@@H@Z:PROC ; ioAttackableItem::GetAttackAniRate
EXTRN	?GetEndAniFile@ioAttackableItem@@UBEABVioHashString@@W4AttackType@@H@Z:PROC ; ioAttackableItem::GetEndAniFile
EXTRN	?GetAttackEndAniRate@ioAttackableItem@@UBEMW4AttackType@@H@Z:PROC ; ioAttackableItem::GetAttackEndAniRate
EXTRN	?GetAttackAttributeIdx@ioAttackableItem@@UBEABV?$vector@UWeaponInfo@@V?$allocator@UWeaponInfo@@@std@@@std@@W4AttackType@@H@Z:PROC ; ioAttackableItem::GetAttackAttributeIdx
EXTRN	?GetForceInfoList@ioAttackableItem@@UBEABV?$vector@UForceInfo@@V?$allocator@UForceInfo@@@std@@@std@@W4AttackType@@H@Z:PROC ; ioAttackableItem::GetForceInfoList
EXTRN	?GetAttackPreDelay@ioAttackableItem@@UBEKW4AttackType@@H@Z:PROC ; ioAttackableItem::GetAttackPreDelay
EXTRN	?GetAttackAnimationDelay@ioAttackableItem@@UBEKW4AttackType@@H@Z:PROC ; ioAttackableItem::GetAttackAnimationDelay
EXTRN	?GetMaxCombo@ioAttackableItem@@UBEHXZ:PROC	; ioAttackableItem::GetMaxCombo
EXTRN	?GetExtraDashAttackMax@ioAttackableItem@@UBEHXZ:PROC ; ioAttackableItem::GetExtraDashAttackMax
EXTRN	?HasJumpEndAnimation@ioAttackableItem@@UBE_N_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::HasJumpEndAnimation
EXTRN	?GetJumpEndAnimation@ioAttackableItem@@UBEABVioHashString@@_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::GetJumpEndAnimation
EXTRN	?ClearCancelInfo@ioAttackableItem@@MAEXXZ:PROC	; ioAttackableItem::ClearCancelInfo
EXTRN	?CheckCancelReserve@ioAttackableItem@@MAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckCancelReserve
EXTRN	?SetCurAttackAniForInputJump@ioAttackableItem@@MAEXABVioHashString@@M@Z:PROC ; ioAttackableItem::SetCurAttackAniForInputJump
EXTRN	?ProcessCancel@ioAttackableItem@@MAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::ProcessCancel
EXTRN	?ProcessCancelBySpeicalDash@ioAttackableItem@@MAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::ProcessCancelBySpeicalDash
EXTRN	?SetCurAttackAniForInputDashS@ioAttackableItem@@UAEXABVioHashString@@M@Z:PROC ; ioAttackableItem::SetCurAttackAniForInputDashS
EXTRN	?CheckCancelReserveByConditionalSpecialDash@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckCancelReserveByConditionalSpecialDash
EXTRN	?IsConditionalSpecialDashReserve@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::IsConditionalSpecialDashReserve
EXTRN	?SetChangeConditionalSpecialDash@ioAttackableItem@@UAEXPAVioBaseChar@@W4DirKeyInput@ioUserKeyInput@@H@Z:PROC ; ioAttackableItem::SetChangeConditionalSpecialDash
EXTRN	?CheckChangeWereWolfState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckChangeWereWolfState
EXTRN	?SetChangeWereWolfState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetChangeWereWolfState
EXTRN	?CheckReleaseWereWolfState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckReleaseWereWolfState
EXTRN	?ReleseWereWolfState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::ReleseWereWolfState
EXTRN	?ReleseWereWolfStateByOwner@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::ReleseWereWolfStateByOwner
EXTRN	?IncreaseChangeDamage@ioAttackableItem@@UAEXMH_N@Z:PROC ; ioAttackableItem::IncreaseChangeDamage
EXTRN	?IncreaseChangeDamageByWeapon@ioAttackableItem@@UAEXM@Z:PROC ; ioAttackableItem::IncreaseChangeDamageByWeapon
EXTRN	?CheckIncreaseChangeDamage@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckIncreaseChangeDamage
EXTRN	?DecreaseChangeDamage@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::DecreaseChangeDamage
EXTRN	?IsEnableActionStopDelay@ioAttackableItem@@UAE_NXZ:PROC ; ioAttackableItem::IsEnableActionStopDelay
EXTRN	?SetExtraGaugeTypeByWeapon@ioAttackableItem@@UAEXPAVioBaseChar@@HHM@Z:PROC ; ioAttackableItem::SetExtraGaugeTypeByWeapon
EXTRN	?SetUseExtraGauge@ioAttackableItem@@UAEXM@Z:PROC ; ioAttackableItem::SetUseExtraGauge
EXTRN	?InitExtraGauge@ioAttackableItem@@UAEXXZ:PROC	; ioAttackableItem::InitExtraGauge
EXTRN	?MaxExtraGauge@ioAttackableItem@@UAEXXZ:PROC	; ioAttackableItem::MaxExtraGauge
EXTRN	?GetMaxExtraGauge@ioAttackableItem@@UAEMXZ:PROC	; ioAttackableItem::GetMaxExtraGauge
EXTRN	?GetCurExtraGauge@ioAttackableItem@@UAEMXZ:PROC	; ioAttackableItem::GetCurExtraGauge
EXTRN	?SetCurExtraGauge@ioAttackableItem@@UAEXM@Z:PROC ; ioAttackableItem::SetCurExtraGauge
EXTRN	?GetAutoTargetValue@ioAttackableItem@@UAEXPAVioBaseChar@@AAM11W4AutoTargetType@@@Z:PROC ; ioAttackableItem::GetAutoTargetValue
EXTRN	?ClearAirJump@ioAttackableItem@@UAEXXZ:PROC	; ioAttackableItem::ClearAirJump
EXTRN	?SetAirJump@ioAttackableItem@@UAEXPAVioBaseChar@@HM@Z:PROC ; ioAttackableItem::SetAirJump
EXTRN	?CheckAirJump@ioAttackableItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioAttackableItem::CheckAirJump
EXTRN	?EquipObjectItemByAttakable@ioAttackableItem@@UAEXPAVioBaseChar@@PAVioItem@@@Z:PROC ; ioAttackableItem::EquipObjectItemByAttakable
EXTRN	?ReleaseObjectItemByAttack@ioAttackableItem@@UAEXPAVioBaseChar@@PAVioItem@@@Z:PROC ; ioAttackableItem::ReleaseObjectItemByAttack
EXTRN	?IsBuffFlyChange@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::IsBuffFlyChange
EXTRN	?GetAttackStateText@ioAttackableItem@@UBEPBDXZ:PROC ; ioAttackableItem::GetAttackStateText
EXTRN	?SetJumpLandingExtraState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioAttackableItem::SetJumpLandingExtraState
EXTRN	?ReleaseObjectState@ioWeaponItem@@UAEXPAVioBaseChar@@PAVioObjectItem@@@Z:PROC ; ioWeaponItem::ReleaseObjectState
EXTRN	?IsCmdCheckEnableTime@ioWeaponItem@@UAE_NXZ:PROC ; ioWeaponItem::IsCmdCheckEnableTime
EXTRN	?IsCmdSuccess@ioWeaponItem@@UAE_NXZ:PROC	; ioWeaponItem::IsCmdSuccess
EXTRN	?IsOneTimeWeaponItem@ioObjectItem@@UBE_NXZ:PROC	; ioObjectItem::IsOneTimeWeaponItem
EXTRN	?GetEquipMesh@ioObjectItem@@UBEABVioHashString@@PAVioBaseChar@@@Z:PROC ; ioObjectItem::GetEquipMesh
EXTRN	?IsCanSendControl@ioWeaponItem@@UBE_NXZ:PROC	; ioWeaponItem::IsCanSendControl
EXTRN	?GetSubType@ioObjectItem@@UBE?AW4WeaponSubType@ioWeaponItem@@XZ:PROC ; ioObjectItem::GetSubType
EXTRN	?IsEnableDash@ioObjectItem@@UBE_NXZ:PROC	; ioObjectItem::IsEnableDash
EXTRN	?IsEnableDefense@ioObjectItem@@UBE_NXZ:PROC	; ioObjectItem::IsEnableDefense
EXTRN	?IsProtectState@ioObjectItem@@UAE_NXZ:PROC	; ioObjectItem::IsProtectState
EXTRN	?EnableReduceGaugeOnSwitchBuff@ioObjectItem@@UAE_NXZ:PROC ; ioObjectItem::EnableReduceGaugeOnSwitchBuff
EXTRN	?CheckAttackCount@ioObjectItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioObjectItem::CheckAttackCount
EXTRN	?CheckActiveCount@ioObjectItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioObjectItem::CheckActiveCount
EXTRN	?IsAttackComboInit@ioObjectItem@@UBE_NXZ:PROC	; ioObjectItem::IsAttackComboInit
EXTRN	?CheckReleaseProcess@ioObjectItem@@UAE_NPAVioPlayStage@@PAVioBaseChar@@@Z:PROC ; ioObjectItem::CheckReleaseProcess
EXTRN	?CheckReleaseByNormalAttack@ioObjectItem@@UAE_NPAVioPlayStage@@PAVioBaseChar@@@Z:PROC ; ioObjectItem::CheckReleaseByNormalAttack
EXTRN	?CheckObjectReleaseSelectionBuff@ioObjectItem@@UAE_NPAVioBaseChar@@@Z:PROC ; ioObjectItem::CheckObjectReleaseSelectionBuff
;	COMDAT ??_R2ioItem@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iothrowbombitem.cpp
rdata$r	SEGMENT
??_R2ioItem@@8 DD FLAT:??_R1A@?0A@EA@ioItem@@8		; ioItem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioItem@@8
rdata$r	SEGMENT
??_R3ioItem@@8 DD 00H					; ioItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioItem@@@8
_DATA	SEGMENT
??_R0?AVioItem@@@8 DD FLAT:??_7type_info@@6B@		; ioItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioItem@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioItem@@8 DD FLAT:??_R0?AVioItem@@@8	; ioItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioItem@@8
rdata$r	ENDS
;	COMDAT ??_R2ioAttackableItem@@8
rdata$r	SEGMENT
??_R2ioAttackableItem@@8 DD FLAT:??_R1A@?0A@EA@ioAttackableItem@@8 ; ioAttackableItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioItem@@8
rdata$r	ENDS
;	COMDAT ??_R3ioAttackableItem@@8
rdata$r	SEGMENT
??_R3ioAttackableItem@@8 DD 00H				; ioAttackableItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioAttackableItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioAttackableItem@@@8
_DATA	SEGMENT
??_R0?AVioAttackableItem@@@8 DD FLAT:??_7type_info@@6B@	; ioAttackableItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioAttackableItem@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioAttackableItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioAttackableItem@@8 DD FLAT:??_R0?AVioAttackableItem@@@8 ; ioAttackableItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioAttackableItem@@8
rdata$r	ENDS
;	COMDAT ??_R2ioWeaponItem@@8
rdata$r	SEGMENT
??_R2ioWeaponItem@@8 DD FLAT:??_R1A@?0A@EA@ioWeaponItem@@8 ; ioWeaponItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioAttackableItem@@8
	DD	FLAT:??_R1A@?0A@EA@ioItem@@8
rdata$r	ENDS
;	COMDAT ??_R3ioWeaponItem@@8
rdata$r	SEGMENT
??_R3ioWeaponItem@@8 DD 00H				; ioWeaponItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ioWeaponItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioWeaponItem@@@8
_DATA	SEGMENT
??_R0?AVioWeaponItem@@@8 DD FLAT:??_7type_info@@6B@	; ioWeaponItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWeaponItem@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioWeaponItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioWeaponItem@@8 DD FLAT:??_R0?AVioWeaponItem@@@8 ; ioWeaponItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioWeaponItem@@8
rdata$r	ENDS
;	COMDAT ??_R2ioObjectItem@@8
rdata$r	SEGMENT
??_R2ioObjectItem@@8 DD FLAT:??_R1A@?0A@EA@ioObjectItem@@8 ; ioObjectItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWeaponItem@@8
	DD	FLAT:??_R1A@?0A@EA@ioAttackableItem@@8
	DD	FLAT:??_R1A@?0A@EA@ioItem@@8
rdata$r	ENDS
;	COMDAT ??_R3ioObjectItem@@8
rdata$r	SEGMENT
??_R3ioObjectItem@@8 DD 00H				; ioObjectItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2ioObjectItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioObjectItem@@@8
_DATA	SEGMENT
??_R0?AVioObjectItem@@@8 DD FLAT:??_7type_info@@6B@	; ioObjectItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioObjectItem@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioObjectItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioObjectItem@@8 DD FLAT:??_R0?AVioObjectItem@@@8 ; ioObjectItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioObjectItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioThrowBombItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioThrowBombItem@@8 DD FLAT:??_R0?AVioThrowBombItem@@@8 ; ioThrowBombItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioThrowBombItem@@8
rdata$r	ENDS
;	COMDAT ??_R2ioThrowBombItem@@8
rdata$r	SEGMENT
??_R2ioThrowBombItem@@8 DD FLAT:??_R1A@?0A@EA@ioThrowBombItem@@8 ; ioThrowBombItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioObjectItem@@8
	DD	FLAT:??_R1A@?0A@EA@ioWeaponItem@@8
	DD	FLAT:??_R1A@?0A@EA@ioAttackableItem@@8
	DD	FLAT:??_R1A@?0A@EA@ioItem@@8
rdata$r	ENDS
;	COMDAT ??_R3ioThrowBombItem@@8
rdata$r	SEGMENT
??_R3ioThrowBombItem@@8 DD 00H				; ioThrowBombItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2ioThrowBombItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioThrowBombItem@@@8
_DATA	SEGMENT
??_R0?AVioThrowBombItem@@@8 DD FLAT:??_7type_info@@6B@	; ioThrowBombItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioThrowBombItem@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioThrowBombItem@@6B@
rdata$r	SEGMENT
??_R4ioThrowBombItem@@6B@ DD 00H			; ioThrowBombItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioThrowBombItem@@@8
	DD	FLAT:??_R3ioThrowBombItem@@8
rdata$r	ENDS
;	COMDAT ??_7ioThrowBombItem@@6B@
CONST	SEGMENT
??_7ioThrowBombItem@@6B@ DD FLAT:??_R4ioThrowBombItem@@6B@ ; ioThrowBombItem::`vftable'
	DD	FLAT:?FindFieldEntityGrp@ioItem@@MBEABVioHashString@@XZ
	DD	FLAT:?LoadProperty@ioThrowBombItem@@UAEXAAVioINILoader@@@Z
	DD	FLAT:?GetType@ioObjectItem@@UBE?AW4ItemType@ioItem@@XZ
	DD	FLAT:?Clone@ioThrowBombItem@@UAEPAVioItem@@XZ
	DD	FLAT:?UseCreateIndexItem@ioItem@@UBE_NXZ
	DD	FLAT:?GetSetFocusColor@ioItem@@UBEKXZ
	DD	FLAT:?Initialize@ioItem@@UAEXABVioHashString@@PAVioPlayStage@@@Z
	DD	FLAT:?InitializeBeforeEquip@ioItem@@UAEXABVioHashString@@PAVioPlayStage@@@Z
	DD	FLAT:?OnEquiped@ioThrowBombItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?OnReleased@ioThrowBombItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetExtendEquipEffect@ioItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ReleaseExtendEquipEffect@ioItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?AddGlowLine@ioWeaponItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?RemoveGlowLine@ioWeaponItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?GetTargetName@ioItem@@UAE?AVioHashString@@XZ
	DD	FLAT:?ClearTarget@ioItem@@UAEXXZ
	DD	FLAT:?SetItemType@ioWeaponItem@@UAEXXZ
	DD	FLAT:?UpdateExtraData@ioItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?CheckWeaponDefenseState@ioItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?CheckWoundedState@ioItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetVisible@ioItem@@UAEXPAVioBaseChar@@_N@Z
	DD	FLAT:?UpdateSkillGauge@ioItem@@UAEXPAVioBaseChar@@M_N@Z
	DD	FLAT:?IsEnableExtraGauge@ioItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?GetExtraGauge@ioItem@@UAEMXZ
	DD	FLAT:?ReduceNeedGauge@ioItem@@UAEXMPAVioBaseChar@@@Z
	DD	FLAT:?GetCurBullet@ioItem@@UAEHXZ
	DD	FLAT:?GetMaxBullet@ioItem@@UAEHXZ
	DD	FLAT:?SetCurBullet@ioItem@@UAEXH@Z
	DD	FLAT:?GetCurSecoundBullet@ioItem@@UAEHXZ
	DD	FLAT:?GetMaxSecoundBullet@ioItem@@UAEHXZ
	DD	FLAT:?SetCurSecoundBullet@ioItem@@UAEXH@Z
	DD	FLAT:?GetGrowthInfoNum@ioObjectItem@@UBEHH@Z
	DD	FLAT:?GetGrowthInfoNumByType@ioObjectItem@@UBEHHAAH@Z
	DD	FLAT:?ClearCurChargeRateForSkill@ioItem@@UAEXXZ
	DD	FLAT:?GetChargeDamageRateForSkill@ioItem@@UAEMXZ
	DD	FLAT:?GetChargeForceRateForSkill@ioItem@@UAEMXZ
	DD	FLAT:?GetChargeBlowRateForSkill@ioItem@@UAEMXZ
	DD	FLAT:?GetChargeRangeRateForSkill@ioItem@@UAEMXZ
	DD	FLAT:?GetChargeSpeedRateForSkill@ioItem@@UAEMXZ
	DD	FLAT:?GetChargeFloatRateForSkill@ioItem@@UAEMXZ
	DD	FLAT:?GetChargeScaleRateForSkill@ioItem@@UAEMXZ
	DD	FLAT:?GetChargeExplosionRateForSkill@ioItem@@UAEMXZ
	DD	FLAT:?GetChargeWoundedTimeRateForSkill@ioItem@@UAEMXZ
	DD	FLAT:?SetCurEquipEffect@ioItem@@UAEX_N@Z
	DD	FLAT:?SetCostume@ioItem@@UAEXH_N@Z
	DD	FLAT:??_EioThrowBombItem@@UAEPAXI@Z
	DD	FLAT:?IsCanFire@ioAttackableItem@@UBE_NPBVioBaseChar@@H_N@Z
	DD	FLAT:?CallItemProcess@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetExtraInfoToWeapon@ioThrowBombItem@@UAEXPAVioWeapon@@_N@Z
	DD	FLAT:?CheckChargeInfo@ioAttackableItem@@UAEXPAVioWeapon@@_N@Z
	DD	FLAT:?SetExtendDefenseState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?CheckExtendDefenseState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?CheckDefenseMoveAniState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetDodgeDefenseState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?CheckDodgeDefenseState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ApplyDodgeDefenseState@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?SetDefenseAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?CheckDefenseAttackState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ApplyDefenseAttackState@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?SetExtendDashState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?CheckExtendDashState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetNormalAttack@ioAttackableItem@@UAEXPAVioBaseChar@@H@Z
	DD	FLAT:?CheckNormalAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetJumpAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@HMW4AttackType@@@Z
	DD	FLAT:?CheckJumpAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetJumpReloadState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?SetJumpReload@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?CheckJumpReloadState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?CheckJumpReloadReserve@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ProcessJumpReloadState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ApplyJumpReload@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?OnItemGaugeOK@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?OnItemGaugeCancel@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?OnEndExtendDefense@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?OnEndNormalAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?OnEndExtendAttack@ioAttackableItem@@UAEXPAVioBaseChar@@_N@Z
	DD	FLAT:?OnEndExtendJump@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?FillNormalAttackExtraInfo@ioAttackableItem@@UAEXAAVSP2Packet@@@Z
	DD	FLAT:?ApplyNormalAttackExtraInfo@ioAttackableItem@@UAEXAAVSP2Packet@@@Z
	DD	FLAT:?CheckOnHand@ioAttackableItem@@UAE_NXZ
	DD	FLAT:?CheckAimState@ioAttackableItem@@UAE_N_N@Z
	DD	FLAT:?SetAimState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?CheckLanding@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?SetNoneState@ioAttackableItem@@UAEXPAVioBaseChar@@H@Z
	DD	FLAT:?CheckExtendDefenseEnable@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsChargeAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsMoveAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsCanUpdateGauge@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsNoGhostWalk@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsEnableAttackDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z
	DD	FLAT:?IsEnableItemDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z
	DD	FLAT:?IsEnableAttackRotateCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsEnableChargeDefenseCheck@ioAttackableItem@@UAE_NXZ
	DD	FLAT:?CheckAimJumpState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?GetJumppingAnimation@ioAttackableItem@@UBEABVioHashString@@XZ
	DD	FLAT:?GetExtendJumppingAnimation@ioAttackableItem@@UBEABVioHashString@@XZ
	DD	FLAT:?CheckRetreatState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetNextItemState@ioAttackableItem@@UAEXPAVioBaseChar@@0PAVioWeapon@@_NM@Z
	DD	FLAT:?WeaponWounded@ioWeaponItem@@UAEXPAVioWeapon@@PAVioBaseChar@@@Z
	DD	FLAT:?WeaponMapColDead@ioAttackableItem@@UAEXPAVioWeapon@@@Z
	DD	FLAT:?SetDefenceCounterState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?IsUseDefenceCounterAttack@ioAttackableItem@@UAE_NXZ
	DD	FLAT:?ProcessDefenceCounterAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?IsUseDefenceCounterAttackEndDash@ioAttackableItem@@UAE_NXZ
	DD	FLAT:?ProcessExtraJump@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetEndGrappling@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ClearKeyReserve@ioAttackableItem@@MAEXXZ
	DD	FLAT:?CheckReserve@ioAttackableItem@@MAEXPAVioBaseChar@@@Z
	DD	FLAT:?ProcessReserveKeyInput@ioAttackableItem@@MAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetJumpState@ioAttackableItem@@UAEXXZ
	DD	FLAT:?SetJumpping@ioAttackableItem@@UAEXPAVioBaseChar@@_N@Z
	DD	FLAT:?ProcessJumpping@ioAttackableItem@@UAEXPAVioBaseChar@@M@Z
	DD	FLAT:?ProcessJumppingByNoNeedProcess@ioAttackableItem@@UAEXPAVioBaseChar@@M@Z
	DD	FLAT:?ProcessLanding@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ProcessJumpAttack@ioAttackableItem@@UAEXPAVioBaseChar@@M@Z
	DD	FLAT:?ProcessAimJump@ioAttackableItem@@UAE_NPAVioBaseChar@@M@Z
	DD	FLAT:?ApplyJump@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?ApplyDash@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?ApplyCounterAttack@ioAttackableItem@@UAEXPAVioBaseChar@@AAVSP2Packet@@@Z
	DD	FLAT:?CheckComboJumpAttack@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetFlashJumpAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?SetComboFlashAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?SetCollectJumpAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?SetPowerChargeJumpAttack@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?GetAttackSpeedRate@ioAttackableItem@@UBEMXZ
	DD	FLAT:?GetExtraJumpSpeedRate@ioAttackableItem@@UBEMABUD3DXVECTOR3@@ABUD3DXQUATERNION@@@Z
	DD	FLAT:?IsEnableExtendJump@ioAttackableItem@@UAE_NXZ
	DD	FLAT:?RecevieExtendJumpUse@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?HasAniFile@ioAttackableItem@@UBE_NW4AttackType@@H@Z
	DD	FLAT:?HasEndAniFile@ioAttackableItem@@UBE_NW4AttackType@@H@Z
	DD	FLAT:?GetAttackAttribute@ioAttackableItem@@UBEPBUAttackAttribute@@W4AttackType@@H@Z
	DD	FLAT:?GetAniFile@ioAttackableItem@@UBEABVioHashString@@W4AttackType@@H@Z
	DD	FLAT:?GetAttackAniRate@ioAttackableItem@@UBEMW4AttackType@@H@Z
	DD	FLAT:?GetEndAniFile@ioAttackableItem@@UBEABVioHashString@@W4AttackType@@H@Z
	DD	FLAT:?GetAttackEndAniRate@ioAttackableItem@@UBEMW4AttackType@@H@Z
	DD	FLAT:?GetAttackAttributeIdx@ioAttackableItem@@UBEABV?$vector@UWeaponInfo@@V?$allocator@UWeaponInfo@@@std@@@std@@W4AttackType@@H@Z
	DD	FLAT:?GetForceInfoList@ioAttackableItem@@UBEABV?$vector@UForceInfo@@V?$allocator@UForceInfo@@@std@@@std@@W4AttackType@@H@Z
	DD	FLAT:?GetAttackPreDelay@ioAttackableItem@@UBEKW4AttackType@@H@Z
	DD	FLAT:?GetAttackAnimationDelay@ioAttackableItem@@UBEKW4AttackType@@H@Z
	DD	FLAT:?GetMaxCombo@ioAttackableItem@@UBEHXZ
	DD	FLAT:?GetExtraDashAttackMax@ioAttackableItem@@UBEHXZ
	DD	FLAT:?HasJumpEndAnimation@ioAttackableItem@@UBE_N_NPAVioBaseChar@@@Z
	DD	FLAT:?GetJumpEndAnimation@ioAttackableItem@@UBEABVioHashString@@_NPAVioBaseChar@@@Z
	DD	FLAT:?ClearCancelInfo@ioAttackableItem@@MAEXXZ
	DD	FLAT:?CheckCancelReserve@ioAttackableItem@@MAEXPAVioBaseChar@@@Z
	DD	FLAT:?SetCurAttackAniForInputJump@ioAttackableItem@@MAEXABVioHashString@@M@Z
	DD	FLAT:?ProcessCancel@ioAttackableItem@@MAE_NPAVioBaseChar@@@Z
	DD	FLAT:?ProcessCancelBySpeicalDash@ioAttackableItem@@MAE_NPAVioBaseChar@@@Z
	DD	FLAT:?SetCurAttackAniForInputDashS@ioAttackableItem@@UAEXABVioHashString@@M@Z
	DD	FLAT:?CheckCancelReserveByConditionalSpecialDash@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?IsConditionalSpecialDashReserve@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?SetChangeConditionalSpecialDash@ioAttackableItem@@UAEXPAVioBaseChar@@W4DirKeyInput@ioUserKeyInput@@H@Z
	DD	FLAT:?CheckChangeWereWolfState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?SetChangeWereWolfState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?CheckReleaseWereWolfState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?ReleseWereWolfState@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?ReleseWereWolfStateByOwner@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?IncreaseChangeDamage@ioAttackableItem@@UAEXMH_N@Z
	DD	FLAT:?IncreaseChangeDamageByWeapon@ioAttackableItem@@UAEXM@Z
	DD	FLAT:?CheckIncreaseChangeDamage@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?DecreaseChangeDamage@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?IsEnableActionStopDelay@ioAttackableItem@@UAE_NXZ
	DD	FLAT:?SetExtraGaugeTypeByWeapon@ioAttackableItem@@UAEXPAVioBaseChar@@HHM@Z
	DD	FLAT:?SetUseExtraGauge@ioAttackableItem@@UAEXM@Z
	DD	FLAT:?InitExtraGauge@ioAttackableItem@@UAEXXZ
	DD	FLAT:?MaxExtraGauge@ioAttackableItem@@UAEXXZ
	DD	FLAT:?GetMaxExtraGauge@ioAttackableItem@@UAEMXZ
	DD	FLAT:?GetCurExtraGauge@ioAttackableItem@@UAEMXZ
	DD	FLAT:?SetCurExtraGauge@ioAttackableItem@@UAEXM@Z
	DD	FLAT:?GetAutoTargetValue@ioAttackableItem@@UAEXPAVioBaseChar@@AAM11W4AutoTargetType@@@Z
	DD	FLAT:?ClearAirJump@ioAttackableItem@@UAEXXZ
	DD	FLAT:?SetAirJump@ioAttackableItem@@UAEXPAVioBaseChar@@HM@Z
	DD	FLAT:?CheckAirJump@ioAttackableItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?IsAutoTarget@ioAttackableItem@@UBE_NXZ
	DD	FLAT:?EquipObjectItemByAttakable@ioAttackableItem@@UAEXPAVioBaseChar@@PAVioItem@@@Z
	DD	FLAT:?ReleaseObjectItemByAttack@ioAttackableItem@@UAEXPAVioBaseChar@@PAVioItem@@@Z
	DD	FLAT:?IsBuffFlyChange@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?GetAttackStateText@ioAttackableItem@@UBEPBDXZ
	DD	FLAT:?SetJumpLandingExtraState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?IsWoundAfterUseExtendState@ioAttackableItem@@UAE_NXZ
	DD	FLAT:?CheckWoundAfterUseExtendState@ioAttackableItem@@UAE_NPAVioBaseChar@@W4BlowTargetType@@@Z
	DD	FLAT:?IsCharSkipState@ioAttackableItem@@UAE_NPBVioBaseChar@@@Z
	DD	FLAT:?ReleaseObjectState@ioWeaponItem@@UAEXPAVioBaseChar@@PAVioObjectItem@@@Z
	DD	FLAT:?IsCmdCheckEnableTime@ioWeaponItem@@UAE_NXZ
	DD	FLAT:?IsCmdSuccess@ioWeaponItem@@UAE_NXZ
	DD	FLAT:?IsOneTimeWeaponItem@ioObjectItem@@UBE_NXZ
	DD	FLAT:?GetEquipMesh@ioObjectItem@@UBEABVioHashString@@PAVioBaseChar@@@Z
	DD	FLAT:?IsCanSendControl@ioWeaponItem@@UBE_NXZ
	DD	FLAT:?GetSubType@ioObjectItem@@UBE?AW4WeaponSubType@ioWeaponItem@@XZ
	DD	FLAT:?IsEnableDash@ioObjectItem@@UBE_NXZ
	DD	FLAT:?IsEnableDefense@ioObjectItem@@UBE_NXZ
	DD	FLAT:?IsProtectState@ioObjectItem@@UAE_NXZ
	DD	FLAT:?EnableReduceGaugeOnSwitchBuff@ioObjectItem@@UAE_NXZ
	DD	FLAT:?GetObjectSubType@ioThrowBombItem@@UBE?AW4ObjectSubType@ioObjectItem@@XZ
	DD	FLAT:?CheckAttackCount@ioObjectItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?CheckActiveCount@ioObjectItem@@UAEXPAVioBaseChar@@@Z
	DD	FLAT:?IsAttackComboInit@ioObjectItem@@UBE_NXZ
	DD	FLAT:?OnProcessState@ioObjectItem@@UAEXPAVioPlayStage@@PAVioBaseChar@@@Z
	DD	FLAT:?CheckReleaseProcess@ioObjectItem@@UAE_NPAVioPlayStage@@PAVioBaseChar@@@Z
	DD	FLAT:?CheckReleaseByNormalAttack@ioObjectItem@@UAE_NPAVioPlayStage@@PAVioBaseChar@@@Z
	DD	FLAT:?CheckObjectReleaseSelectionBuff@ioObjectItem@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?SetObjectReleaseTCPSend@ioObjectItem@@UAEX_N@Z
	DD	FLAT:?IsObjectReleaseTCPSend@ioObjectItem@@UAE_NXZ
	DD	FLAT:?IsNormalAttackStop@ioObjectItem@@UAE_NXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ioThrowBombItem@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioThrowBombItem@@UAE@XZ$0
__ehfuncinfo$??1ioThrowBombItem@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ioThrowBombItem@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1ioThrowBombItem@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioThrowBombItem@@UAE@XZ PROC				; ioThrowBombItem::~ioThrowBombItem, COMDAT
; _this$ = ecx

; 23   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioThrowBombItem@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioThrowBombItem@@6B@
  00017	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 24   : }

  0001b	8d 8e 38 1b 00
	00		 lea	 ecx, DWORD PTR [esi+6968]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00027	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ??1ioObjectItem@@UAE@XZ	; ioObjectItem::~ioObjectItem
  00032	e8 00 00 00 00	 call	 __EH_epilog3
  00037	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioThrowBombItem@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioObjectItem@@UAE@XZ	; ioObjectItem::~ioObjectItem
__ehhandler$??1ioThrowBombItem@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioThrowBombItem@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioThrowBombItem@@UAE@XZ ENDP				; ioThrowBombItem::~ioThrowBombItem
; Function compile flags: /Ogsp
;	COMDAT ?GetObjectSubType@ioThrowBombItem@@UBE?AW4ObjectSubType@ioObjectItem@@XZ
_TEXT	SEGMENT
?GetObjectSubType@ioThrowBombItem@@UBE?AW4ObjectSubType@ioObjectItem@@XZ PROC ; ioThrowBombItem::GetObjectSubType, COMDAT
; _this$ = ecx

; 89   : 	return OST_THROWBOMB;

  00000	33 c0		 xor	 eax, eax
  00002	40		 inc	 eax

; 90   : }

  00003	c3		 ret	 0
?GetObjectSubType@ioThrowBombItem@@UBE?AW4ObjectSubType@ioObjectItem@@XZ ENDP ; ioThrowBombItem::GetObjectSubType
_TEXT	ENDS
PUBLIC	?ChangeDropState@ioThrowBombItem@@QAEXABUD3DXVECTOR3@@@Z ; ioThrowBombItem::ChangeDropState
; Function compile flags: /Ogsp
;	COMDAT ?ChangeDropState@ioThrowBombItem@@QAEXABUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_vDropDir$ = 8						; size = 4
?ChangeDropState@ioThrowBombItem@@QAEXABUD3DXVECTOR3@@@Z PROC ; ioThrowBombItem::ChangeDropState, COMDAT
; _this$ = ecx

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 94   : 	m_vDropMoveDir = vDropDir;

  00004	8b 75 08	 mov	 esi, DWORD PTR _vDropDir$[ebp]
  00007	57		 push	 edi
  00008	8d b9 48 1b 00
	00		 lea	 edi, DWORD PTR [ecx+6984]
  0000e	a5		 movsd
  0000f	a5		 movsd
  00010	a5		 movsd
  00011	5f		 pop	 edi

; 95   : 	m_bDropBomb = true;

  00012	c6 81 34 1b 00
	00 01		 mov	 BYTE PTR [ecx+6964], 1
  00019	5e		 pop	 esi

; 96   : }

  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?ChangeDropState@ioThrowBombItem@@QAEXABUD3DXVECTOR3@@@Z ENDP ; ioThrowBombItem::ChangeDropState
_TEXT	ENDS
EXTRN	?AttachEffect@ioBaseChar@@QAEPAVioEffect@@ABVioHashString@@PAVioEntityEvent@@_N@Z:PROC ; ioBaseChar::AttachEffect
EXTRN	__imp_?IsEmpty@ioHashString@@QBE_NXZ:PROC
EXTRN	?OnEquiped@ioObjectItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioObjectItem::OnEquiped
; Function compile flags: /Ogsp
;	COMDAT ?OnEquiped@ioThrowBombItem@@UAEXPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?OnEquiped@ioThrowBombItem@@UAEXPAVioBaseChar@@@Z PROC	; ioThrowBombItem::OnEquiped, COMDAT
; _this$ = ecx

; 99   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 100  : 	ioObjectItem::OnEquiped( pOwner );

  00004	ff 75 08	 push	 DWORD PTR _pOwner$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 ?OnEquiped@ioObjectItem@@UAEXPAVioBaseChar@@@Z ; ioObjectItem::OnEquiped

; 101  : 
; 102  : 	if( !m_EquipedEffect.IsEmpty() )

  0000e	81 c6 38 1b 00
	00		 add	 esi, 6968		; 00001b38H
  00014	8b ce		 mov	 ecx, esi
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@ioHashString@@QBE_NXZ
  0001c	84 c0		 test	 al, al
  0001e	75 0d		 jne	 SHORT $LN1@OnEquiped

; 103  : 	{
; 104  : 		pOwner->AttachEffect( m_EquipedEffect );

  00020	8b 4d 08	 mov	 ecx, DWORD PTR _pOwner$[ebp]
  00023	6a 01		 push	 1
  00025	6a 00		 push	 0
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 ?AttachEffect@ioBaseChar@@QAEPAVioEffect@@ABVioHashString@@PAVioEntityEvent@@_N@Z ; ioBaseChar::AttachEffect
$LN1@OnEquiped:
  0002d	5e		 pop	 esi

; 105  : 	}
; 106  : }

  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
?OnEquiped@ioThrowBombItem@@UAEXPAVioBaseChar@@@Z ENDP	; ioThrowBombItem::OnEquiped
_TEXT	ENDS
EXTRN	?EndEffect@ioBaseChar@@QAEXABVioHashString@@_N1@Z:PROC ; ioBaseChar::EndEffect
EXTRN	?OnReleased@ioObjectItem@@UAEXPAVioBaseChar@@@Z:PROC ; ioObjectItem::OnReleased
; Function compile flags: /Ogsp
;	COMDAT ?OnReleased@ioThrowBombItem@@UAEXPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?OnReleased@ioThrowBombItem@@UAEXPAVioBaseChar@@@Z PROC	; ioThrowBombItem::OnReleased, COMDAT
; _this$ = ecx

; 109  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 110  : 	ioObjectItem::OnReleased( pOwner );

  00004	ff 75 08	 push	 DWORD PTR _pOwner$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 ?OnReleased@ioObjectItem@@UAEXPAVioBaseChar@@@Z ; ioObjectItem::OnReleased

; 111  : 
; 112  : 	if( !m_EquipedEffect.IsEmpty() )

  0000e	81 c6 38 1b 00
	00		 add	 esi, 6968		; 00001b38H
  00014	8b ce		 mov	 ecx, esi
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@ioHashString@@QBE_NXZ
  0001c	84 c0		 test	 al, al
  0001e	75 0d		 jne	 SHORT $LN1@OnReleased

; 113  : 	{
; 114  : 		pOwner->EndEffect( m_EquipedEffect );

  00020	8b 4d 08	 mov	 ecx, DWORD PTR _pOwner$[ebp]
  00023	6a 01		 push	 1
  00025	6a 01		 push	 1
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 ?EndEffect@ioBaseChar@@QAEXABVioHashString@@_N1@Z ; ioBaseChar::EndEffect
$LN1@OnReleased:
  0002d	5e		 pop	 esi

; 115  : 	}
; 116  : }

  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
?OnReleased@ioThrowBombItem@@UAEXPAVioBaseChar@@@Z ENDP	; ioThrowBombItem::OnReleased
_TEXT	ENDS
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.h
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 165  :     D3DXVECTOR3() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	??0D3DXVECTOR3@@QAE@MMM@Z			; D3DXVECTOR3::D3DXVECTOR3
EXTRN	__fltused:DWORD
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.inl
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_fz$ = 16						; size = 4
??0D3DXVECTOR3@@QAE@MMM@Z PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 303  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 304  :     x = fx;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00008	8b c1		 mov	 eax, ecx
  0000a	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 305  :     y = fy;

  0000e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00013	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 306  :     z = fz;

  00018	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fz$[ebp]
  0001d	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 307  : }

  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
??0D3DXVECTOR3@@QAE@MMM@Z ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z			; D3DXVECTOR3::operator+
; Function compile flags: /Ogsp
;	COMDAT ??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z PROC			; D3DXVECTOR3::operator+, COMDAT
; _this$ = ecx

; 380  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 381  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  00006	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  0000a	f3 0f 10 09	 movss	 xmm1, DWORD PTR [ecx]
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	0f 5a c0	 cvtps2pd xmm0, xmm0
  00014	0f 5a c9	 cvtps2pd xmm1, xmm1
  00017	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0001b	f3 0f 10 49 04	 movss	 xmm1, DWORD PTR [ecx+4]
  00020	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00024	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00028	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  0002d	0f 5a c0	 cvtps2pd xmm0, xmm0
  00030	0f 5a c9	 cvtps2pd xmm1, xmm1
  00033	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00037	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  0003c	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00040	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
  00045	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  0004a	0f 5a c0	 cvtps2pd xmm0, xmm0
  0004d	0f 5a c9	 cvtps2pd xmm1, xmm1
  00050	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00054	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00058	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 382  : }

  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator+
_TEXT	ENDS
PUBLIC	??DD3DXVECTOR3@@QBE?AU0@M@Z			; D3DXVECTOR3::operator*
; Function compile flags: /Ogsp
;	COMDAT ??DD3DXVECTOR3@@QBE?AU0@M@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_f$ = 12						; size = 4
??DD3DXVECTOR3@@QBE?AU0@M@Z PROC			; D3DXVECTOR3::operator*, COMDAT
; _this$ = ecx

; 392  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 393  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00003	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _f$[ebp]
  00008	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000f	0f 5a c0	 cvtps2pd xmm0, xmm0
  00012	0f 5a c9	 cvtps2pd xmm1, xmm1
  00015	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00019	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _f$[ebp]
  0001e	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00022	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00026	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  0002b	0f 5a c0	 cvtps2pd xmm0, xmm0
  0002e	0f 5a c9	 cvtps2pd xmm1, xmm1
  00031	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00035	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _f$[ebp]
  0003a	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0003e	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
  00043	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00048	0f 5a c0	 cvtps2pd xmm0, xmm0
  0004b	0f 5a c9	 cvtps2pd xmm1, xmm1
  0004e	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00052	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00056	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 394  : }

  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
??DD3DXVECTOR3@@QBE?AU0@M@Z ENDP			; D3DXVECTOR3::operator*
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioitem.h
_TEXT	ENDS
;	COMDAT ?IsEnableExtraGauge@ioItem@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pChar$ = 8						; size = 4
?IsEnableExtraGauge@ioItem@@UAE_NPAVioBaseChar@@@Z PROC	; ioItem::IsEnableExtraGauge, COMDAT
; _this$ = ecx

; 375  : 	virtual bool IsEnableExtraGauge( ioBaseChar *pChar ) { return true; }

  00000	b0 01		 mov	 al, 1
  00002	c2 04 00	 ret	 4
?IsEnableExtraGauge@ioItem@@UAE_NPAVioBaseChar@@@Z ENDP	; ioItem::IsEnableExtraGauge
_TEXT	ENDS
PUBLIC	__real@4f800000
;	COMDAT __real@4f800000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioitem.h
CONST	ENDS
;	COMDAT ?GetExtraGauge@ioItem@@UAEMXZ
_TEXT	SEGMENT
tv64 = -4						; size = 4
?GetExtraGauge@ioItem@@UAEMXZ PROC			; ioItem::GetExtraGauge, COMDAT
; _this$ = ecx

; 376  : 	virtual float GetExtraGauge() { return FLOAT1; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	b8 01 00 00 00	 mov	 eax, 1
  00009	89 45 fc	 mov	 DWORD PTR tv64[ebp], eax
  0000c	db 45 fc	 fild	 DWORD PTR tv64[ebp]
  0000f	85 c0		 test	 eax, eax
  00011	79 06		 jns	 SHORT $LN5@GetExtraGa
  00013	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN5@GetExtraGa:
  00019	c9		 leave
  0001a	c3		 ret	 0
?GetExtraGauge@ioItem@@UAEMXZ ENDP			; ioItem::GetExtraGauge
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioattackableitem.h
_TEXT	ENDS
;	COMDAT ?CheckOnHand@ioAttackableItem@@UAE_NXZ
_TEXT	SEGMENT
?CheckOnHand@ioAttackableItem@@UAE_NXZ PROC		; ioAttackableItem::CheckOnHand, COMDAT
; _this$ = ecx

; 429  : 	virtual bool CheckOnHand() { return false; }

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?CheckOnHand@ioAttackableItem@@UAE_NXZ ENDP		; ioAttackableItem::CheckOnHand
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?CheckAimState@ioAttackableItem@@UAE_N_N@Z
_TEXT	SEGMENT
_bAimMove$ = 8						; size = 1
?CheckAimState@ioAttackableItem@@UAE_N_N@Z PROC		; ioAttackableItem::CheckAimState, COMDAT
; _this$ = ecx

; 430  : 	virtual bool CheckAimState( bool bAimMove = false ) { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?CheckAimState@ioAttackableItem@@UAE_N_N@Z ENDP		; ioAttackableItem::CheckAimState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?SetAimState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pChar$ = 8						; size = 4
?SetAimState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z PROC ; ioAttackableItem::SetAimState, COMDAT
; _this$ = ecx

; 431  : 	virtual bool SetAimState( ioBaseChar *pChar ) { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?SetAimState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ENDP ; ioAttackableItem::SetAimState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?CheckExtendDefenseEnable@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pChar$ = 8						; size = 4
?CheckExtendDefenseEnable@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z PROC ; ioAttackableItem::CheckExtendDefenseEnable, COMDAT
; _this$ = ecx

; 434  : 	virtual bool CheckExtendDefenseEnable( ioBaseChar *pChar ) { return true; }

  00000	b0 01		 mov	 al, 1
  00002	c2 04 00	 ret	 4
?CheckExtendDefenseEnable@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ENDP ; ioAttackableItem::CheckExtendDefenseEnable
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsChargeAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?IsChargeAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z PROC ; ioAttackableItem::IsChargeAttackState, COMDAT
; _this$ = ecx

; 436  : 	virtual bool IsChargeAttackState( ioBaseChar *pOwner ) { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?IsChargeAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ENDP ; ioAttackableItem::IsChargeAttackState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsMoveAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?IsMoveAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z PROC ; ioAttackableItem::IsMoveAttackState, COMDAT
; _this$ = ecx

; 437  : 	virtual bool IsMoveAttackState( ioBaseChar *pOwner ) { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?IsMoveAttackState@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ENDP ; ioAttackableItem::IsMoveAttackState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsNoGhostWalk@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?IsNoGhostWalk@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z PROC ; ioAttackableItem::IsNoGhostWalk, COMDAT
; _this$ = ecx

; 439  : 	virtual bool IsNoGhostWalk( ioBaseChar *pOwner ) { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?IsNoGhostWalk@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ENDP ; ioAttackableItem::IsNoGhostWalk
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsEnableAttackDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_bCheck$ = 12						; size = 1
?IsEnableAttackDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z PROC ; ioAttackableItem::IsEnableAttackDashCheck, COMDAT
; _this$ = ecx

; 441  : 	virtual bool IsEnableAttackDashCheck( ioBaseChar *pOwner, bool bCheck ) { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 08 00	 ret	 8
?IsEnableAttackDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z ENDP ; ioAttackableItem::IsEnableAttackDashCheck
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsEnableItemDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_bCheck$ = 12						; size = 1
?IsEnableItemDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z PROC ; ioAttackableItem::IsEnableItemDashCheck, COMDAT
; _this$ = ecx

; 442  : 	virtual bool IsEnableItemDashCheck( ioBaseChar *pOwner, bool bCheck ) { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 08 00	 ret	 8
?IsEnableItemDashCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@_N@Z ENDP ; ioAttackableItem::IsEnableItemDashCheck
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsEnableAttackRotateCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?IsEnableAttackRotateCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z PROC ; ioAttackableItem::IsEnableAttackRotateCheck, COMDAT
; _this$ = ecx

; 443  : 	virtual bool IsEnableAttackRotateCheck( ioBaseChar *pOwner ) { return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?IsEnableAttackRotateCheck@ioAttackableItem@@UAE_NPAVioBaseChar@@@Z ENDP ; ioAttackableItem::IsEnableAttackRotateCheck
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsEnableChargeDefenseCheck@ioAttackableItem@@UAE_NXZ
_TEXT	SEGMENT
?IsEnableChargeDefenseCheck@ioAttackableItem@@UAE_NXZ PROC ; ioAttackableItem::IsEnableChargeDefenseCheck, COMDAT
; _this$ = ecx

; 444  : 	virtual bool IsEnableChargeDefenseCheck() { return false; }

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?IsEnableChargeDefenseCheck@ioAttackableItem@@UAE_NXZ ENDP ; ioAttackableItem::IsEnableChargeDefenseCheck
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsUseDefenceCounterAttackEndDash@ioAttackableItem@@UAE_NXZ
_TEXT	SEGMENT
?IsUseDefenceCounterAttackEndDash@ioAttackableItem@@UAE_NXZ PROC ; ioAttackableItem::IsUseDefenceCounterAttackEndDash, COMDAT
; _this$ = ecx

; 464  : 	virtual bool IsUseDefenceCounterAttackEndDash() { return false; }

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?IsUseDefenceCounterAttackEndDash@ioAttackableItem@@UAE_NXZ ENDP ; ioAttackableItem::IsUseDefenceCounterAttackEndDash
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsAutoTarget@ioAttackableItem@@UBE_NXZ
_TEXT	SEGMENT
?IsAutoTarget@ioAttackableItem@@UBE_NXZ PROC		; ioAttackableItem::IsAutoTarget, COMDAT
; _this$ = ecx

; 707  : 	virtual bool IsAutoTarget() const { return true; }

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsAutoTarget@ioAttackableItem@@UBE_NXZ ENDP		; ioAttackableItem::IsAutoTarget
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsWoundAfterUseExtendState@ioAttackableItem@@UAE_NXZ
_TEXT	SEGMENT
?IsWoundAfterUseExtendState@ioAttackableItem@@UAE_NXZ PROC ; ioAttackableItem::IsWoundAfterUseExtendState, COMDAT
; _this$ = ecx

; 724  : 	virtual bool IsWoundAfterUseExtendState(){ return false; }

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?IsWoundAfterUseExtendState@ioAttackableItem@@UAE_NXZ ENDP ; ioAttackableItem::IsWoundAfterUseExtendState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?CheckWoundAfterUseExtendState@ioAttackableItem@@UAE_NPAVioBaseChar@@W4BlowTargetType@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
_eType$ = 12						; size = 4
?CheckWoundAfterUseExtendState@ioAttackableItem@@UAE_NPAVioBaseChar@@W4BlowTargetType@@@Z PROC ; ioAttackableItem::CheckWoundAfterUseExtendState, COMDAT
; _this$ = ecx

; 725  : 	virtual bool CheckWoundAfterUseExtendState( ioBaseChar* pOwner, BlowTargetType eType ){ return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 08 00	 ret	 8
?CheckWoundAfterUseExtendState@ioAttackableItem@@UAE_NPAVioBaseChar@@W4BlowTargetType@@@Z ENDP ; ioAttackableItem::CheckWoundAfterUseExtendState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsCharSkipState@ioAttackableItem@@UAE_NPBVioBaseChar@@@Z
_TEXT	SEGMENT
_pOwner$ = 8						; size = 4
?IsCharSkipState@ioAttackableItem@@UAE_NPBVioBaseChar@@@Z PROC ; ioAttackableItem::IsCharSkipState, COMDAT
; _this$ = ecx

; 728  : 	virtual bool IsCharSkipState( const ioBaseChar* pOwner ){ return false; }

  00000	32 c0		 xor	 al, al
  00002	c2 04 00	 ret	 4
?IsCharSkipState@ioAttackableItem@@UAE_NPBVioBaseChar@@@Z ENDP ; ioAttackableItem::IsCharSkipState
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioobjectitem.h
_TEXT	ENDS
;	COMDAT ?OnProcessState@ioObjectItem@@UAEXPAVioPlayStage@@PAVioBaseChar@@@Z
_TEXT	SEGMENT
_pStage$ = 8						; size = 4
_pOwner$ = 12						; size = 4
?OnProcessState@ioObjectItem@@UAEXPAVioPlayStage@@PAVioBaseChar@@@Z PROC ; ioObjectItem::OnProcessState, COMDAT
; _this$ = ecx

; 156  : 	virtual void OnProcessState( ioPlayStage *pStage, ioBaseChar *pOwner ){};

  00000	c2 08 00	 ret	 8
?OnProcessState@ioObjectItem@@UAEXPAVioPlayStage@@PAVioBaseChar@@@Z ENDP ; ioObjectItem::OnProcessState
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?SetObjectReleaseTCPSend@ioObjectItem@@UAEX_N@Z
_TEXT	SEGMENT
_bSend$ = 8						; size = 1
?SetObjectReleaseTCPSend@ioObjectItem@@UAEX_N@Z PROC	; ioObjectItem::SetObjectReleaseTCPSend, COMDAT
; _this$ = ecx

; 163  : 	virtual void SetObjectReleaseTCPSend( bool bSend ){ m_bObjectReleaseTCPSend = bSend; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8a 45 08	 mov	 al, BYTE PTR _bSend$[ebp]
  00006	88 81 8c 19 00
	00		 mov	 BYTE PTR [ecx+6540], al
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetObjectReleaseTCPSend@ioObjectItem@@UAEX_N@Z ENDP	; ioObjectItem::SetObjectReleaseTCPSend
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsObjectReleaseTCPSend@ioObjectItem@@UAE_NXZ
_TEXT	SEGMENT
?IsObjectReleaseTCPSend@ioObjectItem@@UAE_NXZ PROC	; ioObjectItem::IsObjectReleaseTCPSend, COMDAT
; _this$ = ecx

; 164  : 	virtual bool IsObjectReleaseTCPSend(){ return m_bObjectReleaseTCPSend; }

  00000	8a 81 8c 19 00
	00		 mov	 al, BYTE PTR [ecx+6540]
  00006	c3		 ret	 0
?IsObjectReleaseTCPSend@ioObjectItem@@UAE_NXZ ENDP	; ioObjectItem::IsObjectReleaseTCPSend
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?IsNormalAttackStop@ioObjectItem@@UAE_NXZ
_TEXT	SEGMENT
?IsNormalAttackStop@ioObjectItem@@UAE_NXZ PROC		; ioObjectItem::IsNormalAttackStop, COMDAT
; _this$ = ecx

; 167  : 	virtual bool IsNormalAttackStop(){ return false; }	

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?IsNormalAttackStop@ioObjectItem@@UAE_NXZ ENDP		; ioObjectItem::IsNormalAttackStop
_TEXT	ENDS
PUBLIC	??0ioThrowBombItem@@QAE@XZ			; ioThrowBombItem::ioThrowBombItem
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
EXTRN	??0ioObjectItem@@QAE@XZ:PROC			; ioObjectItem::ioObjectItem
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.h
xdata$x	SEGMENT
__unwindtable$??0ioThrowBombItem@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioThrowBombItem@@QAE@XZ$0
__ehfuncinfo$??0ioThrowBombItem@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ioThrowBombItem@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iothrowbombitem.cpp
xdata$x	ENDS
;	COMDAT ??0ioThrowBombItem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ioThrowBombItem@@QAE@XZ PROC				; ioThrowBombItem::ioThrowBombItem, COMDAT
; _this$ = ecx

; 11   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioThrowBombItem@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	e8 00 00 00 00	 call	 ??0ioObjectItem@@QAE@XZ	; ioObjectItem::ioObjectItem
  00016	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001a	8d 8e 38 1b 00
	00		 lea	 ecx, DWORD PTR [esi+6968]
  00020	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioThrowBombItem@@6B@
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ

; 12   : 	m_bDropBomb = false;

  0002c	c6 86 34 1b 00
	00 00		 mov	 BYTE PTR [esi+6964], 0

; 13   : }

  00033	8b c6		 mov	 eax, esi
  00035	e8 00 00 00 00	 call	 __EH_epilog3
  0003a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioThrowBombItem@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioObjectItem@@UAE@XZ	; ioObjectItem::~ioObjectItem
__ehhandler$??0ioThrowBombItem@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioThrowBombItem@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioThrowBombItem@@QAE@XZ ENDP				; ioThrowBombItem::ioThrowBombItem
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GioThrowBombItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioThrowBombItem@@UAEPAXI@Z PROC			; ioThrowBombItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioThrowBombItem@@UAE@XZ ; ioThrowBombItem::~ioThrowBombItem
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioThrowBombItem@@UAEPAXI@Z ENDP			; ioThrowBombItem::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0ioThrowBombItem@@QAE@ABV0@@Z			; ioThrowBombItem::ioThrowBombItem
EXTRN	__imp_??0ioHashString@@QAE@ABV0@@Z:PROC
EXTRN	??0ioObjectItem@@QAE@ABV0@@Z:PROC		; ioObjectItem::ioObjectItem
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.h
xdata$x	SEGMENT
__unwindtable$??0ioThrowBombItem@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioThrowBombItem@@QAE@ABV0@@Z$0
__ehfuncinfo$??0ioThrowBombItem@@QAE@ABV0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ioThrowBombItem@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iothrowbombitem.cpp
xdata$x	ENDS
;	COMDAT ??0ioThrowBombItem@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_rhs$ = 8						; size = 4
??0ioThrowBombItem@@QAE@ABV0@@Z PROC			; ioThrowBombItem::ioThrowBombItem, COMDAT
; _this$ = ecx

; 18   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioThrowBombItem@@QAE@ABV0@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	8b 7d 08	 mov	 edi, DWORD PTR _rhs$[ebp]
  00014	57		 push	 edi
  00015	e8 00 00 00 00	 call	 ??0ioObjectItem@@QAE@ABV0@@Z ; ioObjectItem::ioObjectItem
  0001a	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001e	81 c7 38 1b 00
	00		 add	 edi, 6968		; 00001b38H
  00024	57		 push	 edi
  00025	8d 8e 38 1b 00
	00		 lea	 ecx, DWORD PTR [esi+6968]
  0002b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioThrowBombItem@@6B@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@ABV0@@Z

; 19   : 	m_bDropBomb = false;

  00037	c6 86 34 1b 00
	00 00		 mov	 BYTE PTR [esi+6964], 0

; 20   : }

  0003e	8b c6		 mov	 eax, esi
  00040	e8 00 00 00 00	 call	 __EH_epilog3
  00045	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioThrowBombItem@@QAE@ABV0@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioObjectItem@@UAE@XZ	; ioObjectItem::~ioObjectItem
__ehhandler$??0ioThrowBombItem@@QAE@ABV0@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioThrowBombItem@@QAE@ABV0@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioThrowBombItem@@QAE@ABV0@@Z ENDP			; ioThrowBombItem::ioThrowBombItem
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clone@ioThrowBombItem@@UAEPAVioItem@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clone@ioThrowBombItem@@UAEPAVioItem@@XZ$0
__ehfuncinfo$?Clone@ioThrowBombItem@@UAEPAVioItem@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Clone@ioThrowBombItem@@UAEPAVioItem@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?Clone@ioThrowBombItem@@UAEPAVioItem@@XZ
_TEXT	SEGMENT
$T542598 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Clone@ioThrowBombItem@@UAEPAVioItem@@XZ PROC		; ioThrowBombItem::Clone, COMDAT
; _this$ = ecx

; 36   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?Clone@ioThrowBombItem@@UAEPAVioItem@@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 37   : 	return new ioThrowBombItem( *this );

  0000e	68 54 1b 00 00	 push	 6996			; 00001b54H
  00013	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00018	59		 pop	 ecx
  00019	8b c8		 mov	 ecx, eax
  0001b	89 4d f0	 mov	 DWORD PTR $T542598[ebp], ecx
  0001e	33 c0		 xor	 eax, eax
  00020	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00023	3b c8		 cmp	 ecx, eax
  00025	74 06		 je	 SHORT $LN3@Clone
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 ??0ioThrowBombItem@@QAE@ABV0@@Z ; ioThrowBombItem::ioThrowBombItem
$LN3@Clone:

; 38   : }

  0002d	e8 00 00 00 00	 call	 __EH_epilog3
  00032	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clone@ioThrowBombItem@@UAEPAVioItem@@XZ$0:
  00000	ff 75 f0	 push	 DWORD PTR $T542598[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__ehhandler$?Clone@ioThrowBombItem@@UAEPAVioItem@@XZ:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00011	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Clone@ioThrowBombItem@@UAEPAVioItem@@XZ
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Clone@ioThrowBombItem@@UAEPAVioItem@@XZ ENDP		; ioThrowBombItem::Clone
PUBLIC	__$ArrayPad$
EXTRN	?SetPosition@ioWeapon@@QAEXABUD3DXVECTOR3@@@Z:PROC ; ioWeapon::SetPosition
EXTRN	_D3DXVec3Normalize@8:PROC
EXTRN	__imp_??D@YA?AUD3DXVECTOR3@@ABUD3DXQUATERNION@@ABU0@@Z:PROC
EXTRN	?GetOwner@ioWeapon@@QBEPAVioBaseChar@@XZ:PROC	; ioWeapon::GetOwner
EXTRN	?SetJumpThrow@ioBoundBombWeapon@@QAEXXZ:PROC	; ioBoundBombWeapon::SetJumpThrow
EXTRN	?SetJumpThrow@ioThrowBombWeapon@@QAEXXZ:PROC	; ioThrowBombWeapon::SetJumpThrow
EXTRN	?SetBombDrop@ioBoundBombWeapon@@QAEXXZ:PROC	; ioBoundBombWeapon::SetBombDrop
EXTRN	?SetBombDrop@ioThrowBombWeapon@@QAEXXZ:PROC	; ioThrowBombWeapon::SetBombDrop
EXTRN	?SetExtraInfoToWeapon@ioObjectItem@@UAEXPAVioWeapon@@_N@Z:PROC ; ioObjectItem::SetExtraInfoToWeapon
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogsp
;	COMDAT ?SetExtraInfoToWeapon@ioThrowBombItem@@UAEXPAVioWeapon@@_N@Z
_TEXT	SEGMENT
tv424 = -44						; size = 4
_pBound$ = -44						; size = 4
_vPos$541330 = -40					; size = 12
_vMoveDir$541326 = -28					; size = 12
$T541331 = -16						; size = 12
$T541328 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_pWeapon$ = 8						; size = 4
_bJumpAttack$ = 12					; size = 1
?SetExtraInfoToWeapon@ioThrowBombItem@@UAEXPAVioWeapon@@_N@Z PROC ; ioThrowBombItem::SetExtraInfoToWeapon, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b 7d 08	 mov	 edi, DWORD PTR _pWeapon$[ebp]
  00015	8b f1		 mov	 esi, ecx

; 42   : 	if( !pWeapon ) return;

  00017	85 ff		 test	 edi, edi
  00019	0f 84 a8 01 00
	00		 je	 $LN1@SetExtraIn

; 43   : 
; 44   : 	ioObjectItem::SetExtraInfoToWeapon( pWeapon, bJumpAttack );

  0001f	53		 push	 ebx
  00020	ff 75 0c	 push	 DWORD PTR _bJumpAttack$[ebp]
  00023	57		 push	 edi
  00024	e8 00 00 00 00	 call	 ?SetExtraInfoToWeapon@ioObjectItem@@UAEXPAVioWeapon@@_N@Z ; ioObjectItem::SetExtraInfoToWeapon

; 45   : 
; 46   : 	ioThrowBombWeapon *pBomb = ToThrowBombWeapon( pWeapon );

  00029	57		 push	 edi
  0002a	e8 00 00 00 00	 call	 ?ToThrowBombWeapon@@YAPAVioThrowBombWeapon@@PAVioWeapon@@@Z ; ToThrowBombWeapon

; 47   : 	ioBoundBombWeapon *pBound = ToBoundBombWeapon( pWeapon );

  0002f	57		 push	 edi
  00030	8b d8		 mov	 ebx, eax
  00032	e8 00 00 00 00	 call	 ?ToBoundBombWeapon@@YAPAVioBoundBombWeapon@@PAVioWeapon@@@Z ; ToBoundBombWeapon

; 48   : 
; 49   : 	if( m_bDropBomb )

  00037	80 be 34 1b 00
	00 00		 cmp	 BYTE PTR [esi+6964], 0
  0003e	59		 pop	 ecx
  0003f	59		 pop	 ecx
  00040	8b c8		 mov	 ecx, eax
  00042	89 4d d4	 mov	 DWORD PTR _pBound$[ebp], ecx
  00045	74 35		 je	 SHORT $LN10@SetExtraIn

; 50   : 	{
; 51   : 		if( pBomb )

  00047	85 db		 test	 ebx, ebx
  00049	74 14		 je	 SHORT $LN9@SetExtraIn

; 52   : 		{
; 53   : 			pBomb->SetBombDrop();

  0004b	8b cb		 mov	 ecx, ebx
  0004d	e8 00 00 00 00	 call	 ?SetBombDrop@ioThrowBombWeapon@@QAEXXZ ; ioThrowBombWeapon::SetBombDrop

; 54   : 			pBomb->SetMoveDir( m_vDropMoveDir );

  00052	8b 03		 mov	 eax, DWORD PTR [ebx]
  00054	8d 8e 48 1b 00
	00		 lea	 ecx, DWORD PTR [esi+6984]
  0005a	51		 push	 ecx
  0005b	8b cb		 mov	 ecx, ebx
  0005d	eb 15		 jmp	 SHORT $LN29@SetExtraIn
$LN9@SetExtraIn:

; 55   : 		}
; 56   : 		else if( pBound )

  0005f	85 c9		 test	 ecx, ecx
  00061	74 35		 je	 SHORT $LN2@SetExtraIn

; 57   : 		{
; 58   : 			pBound->SetBombDrop();

  00063	e8 00 00 00 00	 call	 ?SetBombDrop@ioBoundBombWeapon@@QAEXXZ ; ioBoundBombWeapon::SetBombDrop

; 59   : 			pBound->SetMoveDir( m_vDropMoveDir );

  00068	8b 4d d4	 mov	 ecx, DWORD PTR _pBound$[ebp]
  0006b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0006d	8d 96 48 1b 00
	00		 lea	 edx, DWORD PTR [esi+6984]
  00073	52		 push	 edx
$LN29@SetExtraIn:
  00074	ff 90 b0 00 00
	00		 call	 DWORD PTR [eax+176]

; 60   : 		}
; 61   : 	}

  0007a	eb 1c		 jmp	 SHORT $LN2@SetExtraIn
$LN10@SetExtraIn:

; 62   : 	else if( bJumpAttack )

  0007c	80 7d 0c 00	 cmp	 BYTE PTR _bJumpAttack$[ebp], 0
  00080	74 16		 je	 SHORT $LN2@SetExtraIn

; 63   : 	{
; 64   : 		if( pBomb )

  00082	85 db		 test	 ebx, ebx
  00084	74 09		 je	 SHORT $LN4@SetExtraIn

; 65   : 		{
; 66   : 			pBomb->SetJumpThrow();

  00086	8b cb		 mov	 ecx, ebx
  00088	e8 00 00 00 00	 call	 ?SetJumpThrow@ioThrowBombWeapon@@QAEXXZ ; ioThrowBombWeapon::SetJumpThrow
  0008d	eb 09		 jmp	 SHORT $LN2@SetExtraIn
$LN4@SetExtraIn:

; 67   : 		}
; 68   : 		else if( pBound )

  0008f	85 c9		 test	 ecx, ecx
  00091	74 05		 je	 SHORT $LN2@SetExtraIn

; 69   : 		{
; 70   : 			pBound->SetJumpThrow();

  00093	e8 00 00 00 00	 call	 ?SetJumpThrow@ioBoundBombWeapon@@QAEXXZ ; ioBoundBombWeapon::SetJumpThrow
$LN2@SetExtraIn:

; 71   : 		}
; 72   : 	}
; 73   : 
; 74   : 	ioBaseChar *pOwner = pWeapon->GetOwner();

  00098	8b cf		 mov	 ecx, edi
  0009a	e8 00 00 00 00	 call	 ?GetOwner@ioWeapon@@QBEPAVioBaseChar@@XZ ; ioWeapon::GetOwner
  0009f	8b c8		 mov	 ecx, eax
  000a1	5b		 pop	 ebx

; 75   : 	if( pOwner )

  000a2	85 c9		 test	 ecx, ecx
  000a4	0f 84 1d 01 00
	00		 je	 $LN1@SetExtraIn

; 76   : 	{
; 77   : 		D3DXVECTOR3	vMoveDir = pOwner->GetTargetRot() * D3DXVECTOR3( 0.0f, 0.0f, -FLOAT1 );

  000aa	b8 01 00 00 00	 mov	 eax, 1
  000af	0f 57 c0	 xorps	 xmm0, xmm0
  000b2	89 45 d4	 mov	 DWORD PTR tv424[ebp], eax
  000b5	db 45 d4	 fild	 DWORD PTR tv424[ebp]
  000b8	f3 0f 11 45 f0	 movss	 DWORD PTR $T541328[ebp], xmm0
  000bd	f3 0f 11 45 f4	 movss	 DWORD PTR $T541328[ebp+4], xmm0
  000c2	85 c0		 test	 eax, eax
  000c4	79 06		 jns	 SHORT $LN28@SetExtraIn
  000c6	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN28@SetExtraIn:
  000cc	8d 45 f0	 lea	 eax, DWORD PTR $T541328[ebp]
  000cf	d9 e0		 fchs
  000d1	50		 push	 eax
  000d2	d9 5d f8	 fstp	 DWORD PTR $T541328[ebp+8]
  000d5	81 c1 a4 06 00
	00		 add	 ecx, 1700		; 000006a4H
  000db	51		 push	 ecx
  000dc	8d 45 e4	 lea	 eax, DWORD PTR _vMoveDir$541326[ebp]
  000df	50		 push	 eax
  000e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??D@YA?AUD3DXVECTOR3@@ABUD3DXQUATERNION@@ABU0@@Z
  000e6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 78   : 		D3DXVec3Normalize(&vMoveDir,&vMoveDir);

  000e9	8d 45 e4	 lea	 eax, DWORD PTR _vMoveDir$541326[ebp]
  000ec	50		 push	 eax
  000ed	50		 push	 eax
  000ee	e8 00 00 00 00	 call	 _D3DXVec3Normalize@8

; 79   : 
; 80   : 		D3DXVECTOR3 vPos = pWeapon->GetPosition() + (vMoveDir * m_fOffSet);

  000f3	f3 0f 10 86 90
	19 00 00	 movss	 xmm0, DWORD PTR [esi+6544]
  000fb	f3 0f 10 55 e4	 movss	 xmm2, DWORD PTR _vMoveDir$541326[ebp]
  00100	8b 07		 mov	 eax, DWORD PTR [edi]
  00102	0f 5a c8	 cvtps2pd xmm1, xmm0
  00105	0f 5a d2	 cvtps2pd xmm2, xmm2
  00108	f2 0f 59 ca	 mulsd	 xmm1, xmm2
  0010c	66 0f 5a c9	 cvtpd2ps xmm1, xmm1
  00110	f3 0f 11 4d f0	 movss	 DWORD PTR $T541331[ebp], xmm1
  00115	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _vMoveDir$541326[ebp+4]
  0011a	0f 5a c9	 cvtps2pd xmm1, xmm1
  0011d	0f 5a d0	 cvtps2pd xmm2, xmm0
  00120	f2 0f 59 ca	 mulsd	 xmm1, xmm2
  00124	66 0f 5a c9	 cvtpd2ps xmm1, xmm1
  00128	f3 0f 11 4d f4	 movss	 DWORD PTR $T541331[ebp+4], xmm1
  0012d	f3 0f 10 4d ec	 movss	 xmm1, DWORD PTR _vMoveDir$541326[ebp+8]
  00132	0f 5a c0	 cvtps2pd xmm0, xmm0
  00135	0f 5a c9	 cvtps2pd xmm1, xmm1
  00138	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0013c	0f 57 c0	 xorps	 xmm0, xmm0
  0013f	66 0f 5a c1	 cvtpd2ps xmm0, xmm1
  00143	8b cf		 mov	 ecx, edi
  00145	f3 0f 11 45 f8	 movss	 DWORD PTR $T541331[ebp+8], xmm0
  0014a	ff 50 70	 call	 DWORD PTR [eax+112]
  0014d	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00152	f3 0f 10 4d f4	 movss	 xmm1, DWORD PTR $T541331[ebp+4]
  00157	f3 0f 10 55 f8	 movss	 xmm2, DWORD PTR $T541331[ebp+8]
  0015c	f3 0f 10 18	 movss	 xmm3, DWORD PTR [eax]
  00160	0f 5a c0	 cvtps2pd xmm0, xmm0
  00163	0f 5a c9	 cvtps2pd xmm1, xmm1
  00166	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0016a	0f 57 c9	 xorps	 xmm1, xmm1
  0016d	66 0f 5a c8	 cvtpd2ps xmm1, xmm0
  00171	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00176	0f 5a c0	 cvtps2pd xmm0, xmm0
  00179	0f 5a d2	 cvtps2pd xmm2, xmm2
  0017c	f2 0f 58 c2	 addsd	 xmm0, xmm2
  00180	f3 0f 10 55 f0	 movss	 xmm2, DWORD PTR $T541331[ebp]
  00185	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00189	f3 0f 11 45 e0	 movss	 DWORD PTR _vPos$541330[ebp+8], xmm0

; 81   : 		vPos.y += m_fHeightOffSet;

  0018e	f3 0f 10 86 94
	19 00 00	 movss	 xmm0, DWORD PTR [esi+6548]
  00196	0f 5a d2	 cvtps2pd xmm2, xmm2
  00199	0f 5a c0	 cvtps2pd xmm0, xmm0
  0019c	0f 5a db	 cvtps2pd xmm3, xmm3
  0019f	0f 5a c9	 cvtps2pd xmm1, xmm1

; 82   : 		
; 83   : 		pWeapon->SetPosition( vPos );

  001a2	8d 45 d8	 lea	 eax, DWORD PTR _vPos$541330[ebp]
  001a5	f2 0f 58 d3	 addsd	 xmm2, xmm3
  001a9	f2 0f 58 c1	 addsd	 xmm0, xmm1
  001ad	f2 0f 5a d2	 cvtsd2ss xmm2, xmm2
  001b1	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  001b5	50		 push	 eax
  001b6	8b cf		 mov	 ecx, edi
  001b8	f3 0f 11 55 d8	 movss	 DWORD PTR _vPos$541330[ebp], xmm2
  001bd	f3 0f 11 45 dc	 movss	 DWORD PTR _vPos$541330[ebp+4], xmm0
  001c2	e8 00 00 00 00	 call	 ?SetPosition@ioWeapon@@QAEXABUD3DXVECTOR3@@@Z ; ioWeapon::SetPosition
$LN1@SetExtraIn:

; 84   : 	}
; 85   : }

  001c7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ca	5f		 pop	 edi
  001cb	33 cd		 xor	 ecx, ebp
  001cd	5e		 pop	 esi
  001ce	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001d3	c9		 leave
  001d4	c2 08 00	 ret	 8
?SetExtraInfoToWeapon@ioThrowBombItem@@UAEXPAVioWeapon@@_N@Z ENDP ; ioThrowBombItem::SetExtraInfoToWeapon
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadString_e@$0P@@ioINILoader@@QAEXAAY0P@$$CBDAAY00$$CBDPADH@Z ; ioINILoader::LoadString_e<15>
EXTRN	__imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$LoadString_e@$0P@@ioINILoader@@QAEXAAY0P@$$CBDAAY00$$CBDPADH@Z
_TEXT	SEGMENT
_this$GSCopy$ = -28					; size = 4
__k$ = -24						; size = 15
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_d$ = 12						; size = 4
_b$ = 16						; size = 4
_i$ = 20						; size = 4
??$LoadString_e@$0P@@ioINILoader@@QAEXAAY0P@$$CBDAAY00$$CBDPADH@Z PROC ; ioINILoader::LoadString_e<15>, COMDAT
; _this$ = ecx

; 161  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 162  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b 75 0c	 mov	 esi, DWORD PTR _d$[ebp]
  00019	57		 push	 edi
  0001a	8b 7d 10	 mov	 edi, DWORD PTR _b$[ebp]
  0001d	89 4d e4	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  00020	84 d2		 test	 dl, dl
  00022	0f 84 75 01 00
	00		 je	 $LN96@LoadString
  00028	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0002b	88 55 e8	 mov	 BYTE PTR __k$[ebp], dl
  0002e	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00031	84 d2		 test	 dl, dl
  00033	0f 84 5e 01 00
	00		 je	 $LN95@LoadString
  00039	b1 ec		 mov	 cl, -20			; ffffffecH
  0003b	32 d1		 xor	 dl, cl
  0003d	88 55 e9	 mov	 BYTE PTR __k$[ebp+1], dl
  00040	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  00043	84 d2		 test	 dl, dl
  00045	0f 84 46 01 00
	00		 je	 $LN94@LoadString
  0004b	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0004e	88 55 ea	 mov	 BYTE PTR __k$[ebp+2], dl
  00051	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  00054	84 d2		 test	 dl, dl
  00056	0f 84 2f 01 00
	00		 je	 $LN93@LoadString
  0005c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0005f	88 55 eb	 mov	 BYTE PTR __k$[ebp+3], dl
  00062	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00065	84 d2		 test	 dl, dl
  00067	0f 84 18 01 00
	00		 je	 $LN92@LoadString
  0006d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00070	88 55 ec	 mov	 BYTE PTR __k$[ebp+4], dl
  00073	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00076	84 d2		 test	 dl, dl
  00078	0f 84 02 01 00
	00		 je	 $LN91@LoadString
  0007e	32 d1		 xor	 dl, cl
  00080	88 55 ed	 mov	 BYTE PTR __k$[ebp+5], dl
  00083	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00086	84 d2		 test	 dl, dl
  00088	0f 84 ec 00 00
	00		 je	 $LN90@LoadString
  0008e	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00091	88 55 ee	 mov	 BYTE PTR __k$[ebp+6], dl
  00094	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00097	84 d2		 test	 dl, dl
  00099	0f 84 d5 00 00
	00		 je	 $LN89@LoadString
  0009f	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000a2	88 55 ef	 mov	 BYTE PTR __k$[ebp+7], dl
  000a5	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a8	84 d2		 test	 dl, dl
  000aa	0f 84 be 00 00
	00		 je	 $LN88@LoadString
  000b0	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000b3	88 55 f0	 mov	 BYTE PTR __k$[ebp+8], dl
  000b6	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b9	84 d2		 test	 dl, dl
  000bb	0f 84 a8 00 00
	00		 je	 $LN87@LoadString
  000c1	32 d1		 xor	 dl, cl
  000c3	88 55 f1	 mov	 BYTE PTR __k$[ebp+9], dl
  000c6	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c9	84 d2		 test	 dl, dl
  000cb	0f 84 92 00 00
	00		 je	 $LN86@LoadString
  000d1	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000d4	88 55 f2	 mov	 BYTE PTR __k$[ebp+10], dl
  000d7	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000da	84 d2		 test	 dl, dl
  000dc	74 7f		 je	 SHORT $LN85@LoadString
  000de	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000e1	88 55 f3	 mov	 BYTE PTR __k$[ebp+11], dl
  000e4	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e7	84 d2		 test	 dl, dl
  000e9	74 6c		 je	 SHORT $LN84@LoadString
  000eb	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ee	88 55 f4	 mov	 BYTE PTR __k$[ebp+12], dl
  000f1	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f4	84 d2		 test	 dl, dl
  000f6	74 5a		 je	 SHORT $LN83@LoadString
  000f8	32 d1		 xor	 dl, cl
  000fa	80 78 0e 00	 cmp	 BYTE PTR [eax+14], 0
  000fe	88 55 f5	 mov	 BYTE PTR __k$[ebp+13], dl
  00101	0f 84 9a 00 00
	00		 je	 $LN111@LoadString
  00107	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  0010a	84 d2		 test	 dl, dl
  0010c	74 3e		 je	 SHORT $LN81@LoadString
  0010e	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00111	88 55 f7	 mov	 BYTE PTR __k$[ebp+15], dl
  00114	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00117	84 d2		 test	 dl, dl
  00119	74 2b		 je	 SHORT $LN80@LoadString
  0011b	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0011e	88 55 f8	 mov	 BYTE PTR __k$[ebp+16], dl
  00121	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00124	84 d2		 test	 dl, dl
  00126	74 19		 je	 SHORT $LN79@LoadString
  00128	8a 40 12	 mov	 al, BYTE PTR [eax+18]
  0012b	32 d1		 xor	 dl, cl
  0012d	88 55 f9	 mov	 BYTE PTR __k$[ebp+17], dl
  00130	84 c0		 test	 al, al
  00132	74 07		 je	 SHORT $LN78@LoadString
  00134	34 eb		 xor	 al, -21			; ffffffebH
  00136	88 45 fa	 mov	 BYTE PTR __k$[ebp+18], al
  00139	eb 66		 jmp	 SHORT $LN111@LoadString
$LN78@LoadString:
  0013b	c6 45 fa eb	 mov	 BYTE PTR __k$[ebp+18], -21 ; ffffffebH
  0013f	eb 60		 jmp	 SHORT $LN111@LoadString
$LN79@LoadString:
  00141	88 4d f9	 mov	 BYTE PTR __k$[ebp+17], cl
  00144	eb 5b		 jmp	 SHORT $LN111@LoadString
$LN80@LoadString:
  00146	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  0014a	eb 55		 jmp	 SHORT $LN111@LoadString
$LN81@LoadString:
  0014c	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00150	eb 4f		 jmp	 SHORT $LN111@LoadString
$LN83@LoadString:
  00152	88 4d f5	 mov	 BYTE PTR __k$[ebp+13], cl
  00155	eb 4a		 jmp	 SHORT $LN111@LoadString
$LN84@LoadString:
  00157	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  0015b	eb 44		 jmp	 SHORT $LN111@LoadString
$LN85@LoadString:
  0015d	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00161	eb 3e		 jmp	 SHORT $LN111@LoadString
$LN86@LoadString:
  00163	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  00167	eb 38		 jmp	 SHORT $LN111@LoadString
$LN87@LoadString:
  00169	88 4d f1	 mov	 BYTE PTR __k$[ebp+9], cl
  0016c	eb 33		 jmp	 SHORT $LN111@LoadString
$LN88@LoadString:
  0016e	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00172	eb 2d		 jmp	 SHORT $LN111@LoadString
$LN89@LoadString:
  00174	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  00178	eb 27		 jmp	 SHORT $LN111@LoadString
$LN90@LoadString:
  0017a	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  0017e	eb 21		 jmp	 SHORT $LN111@LoadString
$LN91@LoadString:
  00180	88 4d ed	 mov	 BYTE PTR __k$[ebp+5], cl
  00183	eb 1c		 jmp	 SHORT $LN111@LoadString
$LN92@LoadString:
  00185	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00189	eb 16		 jmp	 SHORT $LN111@LoadString
$LN93@LoadString:
  0018b	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  0018f	eb 10		 jmp	 SHORT $LN111@LoadString
$LN94@LoadString:
  00191	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  00195	eb 0a		 jmp	 SHORT $LN111@LoadString
$LN95@LoadString:
  00197	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  0019b	eb 04		 jmp	 SHORT $LN111@LoadString
$LN96@LoadString:
  0019d	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN111@LoadString:
  001a1	6a 03		 push	 3
  001a3	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001a6	c6 45 f6 00	 mov	 BYTE PTR __k$[ebp+14], 0
  001aa	5a		 pop	 edx
$LL104@LoadString:
  001ab	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001b1	83 c0 04	 add	 eax, 4
  001b4	4a		 dec	 edx
  001b5	75 f4		 jne	 SHORT $LL104@LoadString
  001b7	6a 0c		 push	 12			; 0000000cH
  001b9	58		 pop	 eax
$LL101@LoadString:
  001ba	8b c8		 mov	 ecx, eax
  001bc	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  001c2	79 05		 jns	 SHORT $LN112@LoadString
  001c4	49		 dec	 ecx
  001c5	83 c9 fc	 or	 ecx, -4			; fffffffcH
  001c8	41		 inc	 ecx
$LN112@LoadString:
  001c9	b2 ed		 mov	 dl, -19			; ffffffedH
  001cb	2a d1		 sub	 dl, cl
  001cd	30 54 05 e8	 xor	 BYTE PTR __k$[ebp+eax], dl
  001d1	40		 inc	 eax
  001d2	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  001d5	7c e3		 jl	 SHORT $LL101@LoadString

; 163  : 		LoadString(_k, d, b, i);

  001d7	ff 75 14	 push	 DWORD PTR _i$[ebp]
  001da	8b 4d e4	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  001dd	57		 push	 edi
  001de	56		 push	 esi
  001df	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001e2	50		 push	 eax
  001e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z

; 164  : 	}

  001e9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ec	5f		 pop	 edi
  001ed	33 cd		 xor	 ecx, ebp
  001ef	5e		 pop	 esi
  001f0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f5	c9		 leave
  001f6	c2 10 00	 ret	 16			; 00000010H
??$LoadString_e@$0P@@ioINILoader@@QAEXAAY0P@$$CBDAAY00$$CBDPADH@Z ENDP ; ioINILoader::LoadString_e<15>
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_??4ioHashString@@QAEAAV0@PBD@Z:PROC
EXTRN	?LoadProperty@ioObjectItem@@UAEXAAVioINILoader@@@Z:PROC ; ioObjectItem::LoadProperty
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iothrowbombitem.cpp
CONST	ENDS
;	COMDAT ?LoadProperty@ioThrowBombItem@@UAEXAAVioINILoader@@@Z
_TEXT	SEGMENT
_szBuf$ = -284						; size = 260
__k$542695 = -24					; size = 15
__$ArrayPad$ = -4					; size = 4
_rkLoader$ = 8						; size = 4
?LoadProperty@ioThrowBombItem@@UAEXAAVioINILoader@@@Z PROC ; ioThrowBombItem::LoadProperty, COMDAT
; _this$ = ecx

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 1c 01 00
	00		 sub	 esp, 284		; 0000011cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _rkLoader$[ebp]
  00017	57		 push	 edi

; 28   : 	ioObjectItem::LoadProperty( rkLoader );

  00018	56		 push	 esi
  00019	8b f9		 mov	 edi, ecx
  0001b	e8 00 00 00 00	 call	 ?LoadProperty@ioObjectItem@@UAEXAAVioINILoader@@@Z ; ioObjectItem::LoadProperty

; 29   : 	
; 30   : 	char szBuf[MAX_PATH];
; 31   : 	rkLoader.LoadString_e( "equiped_effect", "", szBuf, MAX_PATH );

  00020	6a 03		 push	 3
  00022	c7 45 e8 88 9d
	9e 83		 mov	 DWORD PTR __k$542695[ebp], -2086756984 ; 839e9d88H
  00029	c7 45 ec 9d 89
	8f b5		 mov	 DWORD PTR __k$542695[ebp+4], -1248884323 ; b58f899dH
  00030	c7 45 f0 88 8a
	8d 8f		 mov	 DWORD PTR __k$542695[ebp+8], -1886549368 ; 8f8d8a88H
  00037	66 c7 45 f4 8e
	98		 mov	 WORD PTR __k$542695[ebp+12], 39054 ; 0000988eH
  0003d	8d 45 e8	 lea	 eax, DWORD PTR __k$542695[ebp]
  00040	c6 45 f6 00	 mov	 BYTE PTR __k$542695[ebp+14], 0
  00044	59		 pop	 ecx
$LL106@LoadProper:
  00045	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0004b	83 c0 04	 add	 eax, 4
  0004e	49		 dec	 ecx
  0004f	75 f4		 jne	 SHORT $LL106@LoadProper
  00051	6a 0c		 push	 12			; 0000000cH
  00053	58		 pop	 eax
$LL103@LoadProper:
  00054	8b c8		 mov	 ecx, eax
  00056	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0005c	79 05		 jns	 SHORT $LN113@LoadProper
  0005e	49		 dec	 ecx
  0005f	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00062	41		 inc	 ecx
$LN113@LoadProper:
  00063	b2 ed		 mov	 dl, -19			; ffffffedH
  00065	2a d1		 sub	 dl, cl
  00067	30 54 05 e8	 xor	 BYTE PTR __k$542695[ebp+eax], dl
  0006b	40		 inc	 eax
  0006c	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  0006f	7c e3		 jl	 SHORT $LL103@LoadProper
  00071	68 04 01 00 00	 push	 260			; 00000104H
  00076	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0007c	50		 push	 eax
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00082	8d 45 e8	 lea	 eax, DWORD PTR __k$542695[ebp]
  00085	50		 push	 eax
  00086	8b ce		 mov	 ecx, esi
  00088	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z

; 32   : 	m_EquipedEffect = szBuf;

  0008e	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00094	50		 push	 eax
  00095	8d 8f 38 1b 00
	00		 lea	 ecx, DWORD PTR [edi+6968]
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z

; 33   : }

  000a1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a4	5f		 pop	 edi
  000a5	33 cd		 xor	 ecx, ebp
  000a7	5e		 pop	 esi
  000a8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ad	c9		 leave
  000ae	c2 04 00	 ret	 4
?LoadProperty@ioThrowBombItem@@UAEXAAVioINILoader@@@Z ENDP ; ioThrowBombItem::LoadProperty
_TEXT	ENDS
END
