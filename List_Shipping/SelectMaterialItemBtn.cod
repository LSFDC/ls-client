; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\GUI\SelectMaterialItemBtn.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_7SelectMaterialItemBtn@@6B@			; SelectMaterialItemBtn::`vftable'
PUBLIC	??0SelectMaterialItemBtn@@QAE@XZ		; SelectMaterialItemBtn::SelectMaterialItemBtn
PUBLIC	??_R4SelectMaterialItemBtn@@6B@			; SelectMaterialItemBtn::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSelectMaterialItemBtn@@@8		; SelectMaterialItemBtn `RTTI Type Descriptor'
PUBLIC	??_R3SelectMaterialItemBtn@@8			; SelectMaterialItemBtn::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SelectMaterialItemBtn@@8			; SelectMaterialItemBtn::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SelectMaterialItemBtn@@8		; SelectMaterialItemBtn::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioButton@@8			; ioButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioButton@@@8				; ioButton `RTTI Type Descriptor'
PUBLIC	??_R3ioButton@@8				; ioButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioButton@@8				; ioButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioWnd@@8				; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioWnd@@@8				; ioWnd `RTTI Type Descriptor'
PUBLIC	??_R3ioWnd@@8					; ioWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioWnd@@8					; ioWnd::`RTTI Base Class Array'
PUBLIC	?AddRenderFrame@SelectMaterialItemBtn@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z ; SelectMaterialItemBtn::AddRenderFrame
PUBLIC	?AddRenderImage@SelectMaterialItemBtn@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z ; SelectMaterialItemBtn::AddRenderImage
PUBLIC	?OnRender@SelectMaterialItemBtn@@MAEXXZ		; SelectMaterialItemBtn::OnRender
PUBLIC	?OnProcess@SelectMaterialItemBtn@@MAEXM@Z	; SelectMaterialItemBtn::OnProcess
PUBLIC	?iwm_hide@SelectMaterialItemBtn@@UAEXXZ		; SelectMaterialItemBtn::iwm_hide
EXTRN	__imp_??1ioButton@@UAE@XZ:PROC
EXTRN	??0ioComplexStringPrinter@@QAE@XZ:PROC		; ioComplexStringPrinter::ioComplexStringPrinter
EXTRN	__imp_??0ioButton@@QAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z:PROC ; ioWnd::AddTooltipHelp
EXTRN	?ParseExtraInfo@ioButton@@UAEXAAVioXMLElement@@@Z:PROC ; ioButton::ParseExtraInfo
EXTRN	?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC ; ioWnd::AddNamedRenderImage
EXTRN	?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z:PROC ; ioWnd::RemoveNamedRenderImage
EXTRN	?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z:PROC ; ioWnd::GetNamedRenderImage
EXTRN	?SetWindowAlpha@ioButton@@UAEXH@Z:PROC		; ioButton::SetWindowAlpha
EXTRN	?SetActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetActive
EXTRN	?SetInActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetInActive
EXTRN	?ClearElementImageList@ioWnd@@UAEXXZ:PROC	; ioWnd::ClearElementImageList
EXTRN	?SetSize@ioWnd@@UAEXHH@Z:PROC			; ioWnd::SetSize
EXTRN	?SetPositionToDefault@ioWnd@@UAEXHH_N0@Z:PROC	; ioWnd::SetPositionToDefault
EXTRN	?IsNeedProcess@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsNeedProcess
EXTRN	?IsCanMouseReaction@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsCanMouseReaction
EXTRN	?AddChild@ioWnd@@UAEXPAV1@@Z:PROC		; ioWnd::AddChild
EXTRN	?DeleteChild@ioWnd@@UAEXK@Z:PROC		; ioWnd::DeleteChild
EXTRN	?DeleteAllChild@ioWnd@@UAEXXZ:PROC		; ioWnd::DeleteAllChild
EXTRN	?OnRenderShowAndHide@ioWnd@@MAE_NXZ:PROC	; ioWnd::OnRenderShowAndHide
EXTRN	?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z:PROC ; ioWnd::OnRenderShowAndHideByDefault
EXTRN	?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByTop
EXTRN	?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByDown
EXTRN	?OnRenderAfterChild@ioWnd@@MAEXXZ:PROC		; ioWnd::OnRenderAfterChild
EXTRN	?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z:PROC	; ioWnd::OnMouseProcess
EXTRN	?CheckFrameReSize@ioButton@@MAEXHHHH@Z:PROC	; ioButton::CheckFrameReSize
EXTRN	?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z:PROC ; ioWnd::RenderImageList
EXTRN	?iwm_create@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_create
EXTRN	?iwm_destroy@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_destroy
EXTRN	?iwm_lbuttondown@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_lbuttondown
EXTRN	?iwm_lbuttonup@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_lbuttonup
EXTRN	?iwm_lbuttonDBLCLK@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_lbuttonDBLCLK
EXTRN	?iwm_rbuttondown@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_rbuttondown
EXTRN	?iwm_rbuttonup@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_rbuttonup
EXTRN	?iwm_command@ioWnd@@UAEXPAV1@HK@Z:PROC		; ioWnd::iwm_command
EXTRN	?iwm_mouseover@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_mouseover
EXTRN	?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mousemove
EXTRN	?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mouseleave
EXTRN	?iwm_vscroll@ioWnd@@UAEXKH@Z:PROC		; ioWnd::iwm_vscroll
EXTRN	?iwm_wheel@ioWnd@@UAEXH@Z:PROC			; ioWnd::iwm_wheel
EXTRN	?iwm_show@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_show
EXTRN	?iwm_esc@ioWnd@@UAE_NXZ:PROC			; ioWnd::iwm_esc
EXTRN	?iwm_spacebar@ioWnd@@UAE_NXZ:PROC		; ioWnd::iwm_spacebar
EXTRN	?iwm_gototop@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_gototop
EXTRN	?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragenter
EXTRN	?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragover
EXTRN	?iwm_dragleave@ioWnd@@UAEXXZ:PROC		; ioWnd::iwm_dragleave
EXTRN	?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z:PROC ; ioWnd::iwm_dropitem
EXTRN	?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z:PROC ; ioWnd::iwm_dropdone
EXTRN	?IsEXType@ioWnd@@UBE_NXZ:PROC			; ioWnd::IsEXType
EXTRN	?GetWndType@ioButton@@UBEKXZ:PROC		; ioButton::GetWndType
EXTRN	?RenderWnd@ioWnd@@UAEXXZ:PROC			; ioWnd::RenderWnd
EXTRN	?SetIDEX@ioWnd@@UAEXAAK_N@Z:PROC		; ioWnd::SetIDEX
EXTRN	?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC	; ioWnd::ParseXML
EXTRN	?GetHeaderFileName@ioButton@@UAEPBDXZ:PROC	; ioButton::GetHeaderFileName
EXTRN	?GetTemplateName@ioButton@@UAEPBDXZ:PROC	; ioButton::GetTemplateName
EXTRN	?GetDefClassName@ioButton@@UBEPBDXZ:PROC	; ioButton::GetDefClassName
EXTRN	?_Clone@ioButton@@UAEPAVioWnd@@XZ:PROC		; ioButton::_Clone
EXTRN	?Copy@ioButton@@UAEXPAVioWnd@@@Z:PROC		; ioButton::Copy
EXTRN	?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z:PROC	; ioWnd::Save
EXTRN	?SetSaveData@ioButton@@UAEXAAVioXMLElement@@@Z:PROC ; ioButton::SetSaveData
EXTRN	?SetPosX@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosX
EXTRN	?SetPosY@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosY
EXTRN	?SetWidth@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetWidth
EXTRN	?SetHeight@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetHeight
EXTRN	?GetNumFixedRenderFrame@ioButton@@UBEHXZ:PROC	; ioButton::GetNumFixedRenderFrame
EXTRN	?GetFixedRenderFrameType@ioButton@@UAEPBDH@Z:PROC ; ioButton::GetFixedRenderFrameType
EXTRN	?GetRenderFrame@ioButton@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioButton::GetRenderFrame
EXTRN	?GetNumFixedRenderImage@ioButton@@UBEHXZ:PROC	; ioButton::GetNumFixedRenderImage
EXTRN	?GetFixedRenderImageType@ioButton@@UAEPBDH@Z:PROC ; ioButton::GetFixedRenderImageType
EXTRN	?GetRenderImage@ioButton@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioButton::GetRenderImage
EXTRN	?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z:PROC ; ioWnd::AddEffect
EXTRN	?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z:PROC ; ioWnd::GetEffect
EXTRN	??_ESelectMaterialItemBtn@@UAEPAXI@Z:PROC	; SelectMaterialItemBtn::`vector deleting destructor'
EXTRN	?OnDrawNormal@ioButton@@MAEXHH@Z:PROC		; ioButton::OnDrawNormal
EXTRN	?OnDrawOvered@ioButton@@MAEXHH@Z:PROC		; ioButton::OnDrawOvered
EXTRN	?OnDrawOveredAdd@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawOveredAdd
EXTRN	?OnDrawPushed@ioButton@@MAEXHH@Z:PROC		; ioButton::OnDrawPushed
EXTRN	?OnDrawDisabled@ioButton@@MAEXHH@Z:PROC		; ioButton::OnDrawDisabled
EXTRN	?OnDrawExDisabledNormal@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawExDisabledNormal
EXTRN	?OnDrawExDisabledOvered@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawExDisabledOvered
EXTRN	?OnDrawExDisabledPushed@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawExDisabledPushed
EXTRN	?OnDrawBack@ioButton@@MAEXHH@Z:PROC		; ioButton::OnDrawBack
EXTRN	?OnDrawNormalList@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawNormalList
EXTRN	?OnDrawDisableList@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawDisableList
;	COMDAT ??_R2ioWnd@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\selectmaterialitembtn.cpp
rdata$r	SEGMENT
??_R2ioWnd@@8 DD FLAT:??_R1A@?0A@EA@ioWnd@@8		; ioWnd::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioWnd@@8
rdata$r	SEGMENT
??_R3ioWnd@@8 DD 00H					; ioWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioWnd@@@8
_DATA	SEGMENT
??_R0?AVioWnd@@@8 DD FLAT:??_7type_info@@6B@		; ioWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioWnd@@8 DD FLAT:??_R0?AVioWnd@@@8	; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2ioButton@@8
rdata$r	SEGMENT
??_R2ioButton@@8 DD FLAT:??_R1A@?0A@EA@ioButton@@8	; ioButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3ioButton@@8
rdata$r	SEGMENT
??_R3ioButton@@8 DD 00H					; ioButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioButton@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioButton@@@8
_DATA	SEGMENT
??_R0?AVioButton@@@8 DD FLAT:??_7type_info@@6B@		; ioButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioButton@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioButton@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioButton@@8 DD FLAT:??_R0?AVioButton@@@8	; ioButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioButton@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SelectMaterialItemBtn@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SelectMaterialItemBtn@@8 DD FLAT:??_R0?AVSelectMaterialItemBtn@@@8 ; SelectMaterialItemBtn::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SelectMaterialItemBtn@@8
rdata$r	ENDS
;	COMDAT ??_R2SelectMaterialItemBtn@@8
rdata$r	SEGMENT
??_R2SelectMaterialItemBtn@@8 DD FLAT:??_R1A@?0A@EA@SelectMaterialItemBtn@@8 ; SelectMaterialItemBtn::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioButton@@8
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3SelectMaterialItemBtn@@8
rdata$r	SEGMENT
??_R3SelectMaterialItemBtn@@8 DD 00H			; SelectMaterialItemBtn::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2SelectMaterialItemBtn@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSelectMaterialItemBtn@@@8
_DATA	SEGMENT
??_R0?AVSelectMaterialItemBtn@@@8 DD FLAT:??_7type_info@@6B@ ; SelectMaterialItemBtn `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSelectMaterialItemBtn@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SelectMaterialItemBtn@@6B@
rdata$r	SEGMENT
??_R4SelectMaterialItemBtn@@6B@ DD 00H			; SelectMaterialItemBtn::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSelectMaterialItemBtn@@@8
	DD	FLAT:??_R3SelectMaterialItemBtn@@8
rdata$r	ENDS
;	COMDAT ??_7SelectMaterialItemBtn@@6B@
CONST	SEGMENT
??_7SelectMaterialItemBtn@@6B@ DD FLAT:??_R4SelectMaterialItemBtn@@6B@ ; SelectMaterialItemBtn::`vftable'
	DD	FLAT:?AddRenderFrame@SelectMaterialItemBtn@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
	DD	FLAT:?AddRenderImage@SelectMaterialItemBtn@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z
	DD	FLAT:?ParseExtraInfo@ioButton@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z
	DD	FLAT:?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z
	DD	FLAT:?SetWindowAlpha@ioButton@@UAEXH@Z
	DD	FLAT:?SetActive@ioWnd@@UAEXXZ
	DD	FLAT:?SetInActive@ioWnd@@UAEXXZ
	DD	FLAT:?ClearElementImageList@ioWnd@@UAEXXZ
	DD	FLAT:?SetSize@ioWnd@@UAEXHH@Z
	DD	FLAT:?SetPositionToDefault@ioWnd@@UAEXHH_N0@Z
	DD	FLAT:?IsNeedProcess@ioWnd@@UBE_NXZ
	DD	FLAT:?IsCanMouseReaction@ioWnd@@UBE_NXZ
	DD	FLAT:?AddChild@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?DeleteChild@ioWnd@@UAEXK@Z
	DD	FLAT:?DeleteAllChild@ioWnd@@UAEXXZ
	DD	FLAT:?OnRenderShowAndHide@ioWnd@@MAE_NXZ
	DD	FLAT:?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRender@SelectMaterialItemBtn@@MAEXXZ
	DD	FLAT:?OnRenderAfterChild@ioWnd@@MAEXXZ
	DD	FLAT:?OnProcess@SelectMaterialItemBtn@@MAEXM@Z
	DD	FLAT:?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z
	DD	FLAT:?CheckFrameReSize@ioButton@@MAEXHHHH@Z
	DD	FLAT:?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z
	DD	FLAT:?iwm_create@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_destroy@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_lbuttondown@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonup@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonDBLCLK@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttondown@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttonup@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_command@ioWnd@@UAEXPAV1@HK@Z
	DD	FLAT:?iwm_mouseover@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_vscroll@ioWnd@@UAEXKH@Z
	DD	FLAT:?iwm_wheel@ioWnd@@UAEXH@Z
	DD	FLAT:?iwm_show@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_hide@SelectMaterialItemBtn@@UAEXXZ
	DD	FLAT:?iwm_esc@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_spacebar@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_gototop@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragleave@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z
	DD	FLAT:?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z
	DD	FLAT:?IsEXType@ioWnd@@UBE_NXZ
	DD	FLAT:?GetWndType@ioButton@@UBEKXZ
	DD	FLAT:?RenderWnd@ioWnd@@UAEXXZ
	DD	FLAT:?SetIDEX@ioWnd@@UAEXAAK_N@Z
	DD	FLAT:?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?GetHeaderFileName@ioButton@@UAEPBDXZ
	DD	FLAT:?GetTemplateName@ioButton@@UAEPBDXZ
	DD	FLAT:?GetDefClassName@ioButton@@UBEPBDXZ
	DD	FLAT:?_Clone@ioButton@@UAEPAVioWnd@@XZ
	DD	FLAT:?Copy@ioButton@@UAEXPAVioWnd@@@Z
	DD	FLAT:?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z
	DD	FLAT:?SetSaveData@ioButton@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?SetPosX@ioWnd@@UAEXH@Z
	DD	FLAT:?SetPosY@ioWnd@@UAEXH@Z
	DD	FLAT:?SetWidth@ioWnd@@UAEXH@Z
	DD	FLAT:?SetHeight@ioWnd@@UAEXH@Z
	DD	FLAT:?GetNumFixedRenderFrame@ioButton@@UBEHXZ
	DD	FLAT:?GetFixedRenderFrameType@ioButton@@UAEPBDH@Z
	DD	FLAT:?GetRenderFrame@ioButton@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?GetNumFixedRenderImage@ioButton@@UBEHXZ
	DD	FLAT:?GetFixedRenderImageType@ioButton@@UAEPBDH@Z
	DD	FLAT:?GetRenderImage@ioButton@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z
	DD	FLAT:?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z
	DD	FLAT:??_ESelectMaterialItemBtn@@UAEPAXI@Z
	DD	FLAT:?OnDrawNormal@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawOvered@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawOveredAdd@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawPushed@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawDisabled@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawExDisabledNormal@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawExDisabledOvered@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawExDisabledPushed@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawBack@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawNormalList@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawDisableList@ioButton@@MAEXHH@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SelectMaterialItemBtn@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SelectMaterialItemBtn@@QAE@XZ$0
__ehfuncinfo$??0SelectMaterialItemBtn@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SelectMaterialItemBtn@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0SelectMaterialItemBtn@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0SelectMaterialItemBtn@@QAE@XZ PROC			; SelectMaterialItemBtn::SelectMaterialItemBtn, COMDAT
; _this$ = ecx

; 11   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0SelectMaterialItemBtn@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioButton@@QAE@XZ
  00017	33 ff		 xor	 edi, edi
  00019	8d 8e 0c 02 00
	00		 lea	 ecx, DWORD PTR [esi+524]
  0001f	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  00022	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SelectMaterialItemBtn@@6B@
  00028	e8 00 00 00 00	 call	 ??0ioComplexStringPrinter@@QAE@XZ ; ioComplexStringPrinter::ioComplexStringPrinter

; 12   : 	m_iCode = 0;

  0002d	89 be fc 01 00
	00		 mov	 DWORD PTR [esi+508], edi

; 13   : 	m_iCurCnt = 0;

  00033	89 be 04 02 00
	00		 mov	 DWORD PTR [esi+516], edi

; 14   : 	m_nRecommandCode = 0;

  00039	89 be 08 02 00
	00		 mov	 DWORD PTR [esi+520], edi

; 15   : 
; 16   : 	m_pMaterialFrm = NULL;

  0003f	89 be 2c 02 00
	00		 mov	 DWORD PTR [esi+556], edi

; 17   : 	m_pMaterialImg = NULL;	

  00045	89 be 30 02 00
	00		 mov	 DWORD PTR [esi+560], edi

; 18   : 	m_pRecommandMaterialImg = NULL;

  0004b	89 be 34 02 00
	00		 mov	 DWORD PTR [esi+564], edi

; 19   : 	m_pIconImg = NULL;

  00051	89 be 38 02 00
	00		 mov	 DWORD PTR [esi+568], edi

; 20   : 	m_pIconBackImg = NULL;

  00057	89 be 3c 02 00
	00		 mov	 DWORD PTR [esi+572], edi

; 21   : }

  0005d	8b c6		 mov	 eax, esi
  0005f	e8 00 00 00 00	 call	 __EH_epilog3
  00064	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SelectMaterialItemBtn@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioButton@@UAE@XZ
__ehhandler$??0SelectMaterialItemBtn@@QAE@XZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0SelectMaterialItemBtn@@QAE@XZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0SelectMaterialItemBtn@@QAE@XZ ENDP			; SelectMaterialItemBtn::SelectMaterialItemBtn
PUBLIC	??1SelectMaterialItemBtn@@UAE@XZ		; SelectMaterialItemBtn::~SelectMaterialItemBtn
EXTRN	??1ioComplexStringPrinter@@QAE@XZ:PROC		; ioComplexStringPrinter::~ioComplexStringPrinter
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1SelectMaterialItemBtn@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1SelectMaterialItemBtn@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1SelectMaterialItemBtn@@UAE@XZ$1
__ehfuncinfo$??1SelectMaterialItemBtn@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1SelectMaterialItemBtn@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1SelectMaterialItemBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1SelectMaterialItemBtn@@UAE@XZ PROC			; SelectMaterialItemBtn::~SelectMaterialItemBtn, COMDAT
; _this$ = ecx

; 24   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1SelectMaterialItemBtn@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SelectMaterialItemBtn@@6B@

; 25   : 	SAFEDELETE( m_pMaterialFrm );

  00017	8b 8e 2c 02 00
	00		 mov	 ecx, DWORD PTR [esi+556]
  0001d	33 c0		 xor	 eax, eax
  0001f	40		 inc	 eax
  00020	33 db		 xor	 ebx, ebx
  00022	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00025	3b cb		 cmp	 ecx, ebx
  00027	74 0c		 je	 SHORT $LN5@SelectMate
  00029	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002b	50		 push	 eax
  0002c	ff 52 40	 call	 DWORD PTR [edx+64]
  0002f	89 9e 2c 02 00
	00		 mov	 DWORD PTR [esi+556], ebx
$LN5@SelectMate:

; 26   : 	SAFEDELETE( m_pMaterialImg );

  00035	8b 8e 30 02 00
	00		 mov	 ecx, DWORD PTR [esi+560]
  0003b	3b cb		 cmp	 ecx, ebx
  0003d	74 0d		 je	 SHORT $LN4@SelectMate
  0003f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00041	6a 01		 push	 1
  00043	ff 50 40	 call	 DWORD PTR [eax+64]
  00046	89 9e 30 02 00
	00		 mov	 DWORD PTR [esi+560], ebx
$LN4@SelectMate:

; 27   : 	SAFEDELETE( m_pRecommandMaterialImg );

  0004c	8b 8e 34 02 00
	00		 mov	 ecx, DWORD PTR [esi+564]
  00052	3b cb		 cmp	 ecx, ebx
  00054	74 0d		 je	 SHORT $LN3@SelectMate
  00056	8b 01		 mov	 eax, DWORD PTR [ecx]
  00058	6a 01		 push	 1
  0005a	ff 50 40	 call	 DWORD PTR [eax+64]
  0005d	89 9e 34 02 00
	00		 mov	 DWORD PTR [esi+564], ebx
$LN3@SelectMate:

; 28   : 	SAFEDELETE( m_pIconImg );

  00063	8b 8e 38 02 00
	00		 mov	 ecx, DWORD PTR [esi+568]
  00069	3b cb		 cmp	 ecx, ebx
  0006b	74 0d		 je	 SHORT $LN2@SelectMate
  0006d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0006f	6a 01		 push	 1
  00071	ff 50 40	 call	 DWORD PTR [eax+64]
  00074	89 9e 38 02 00
	00		 mov	 DWORD PTR [esi+568], ebx
$LN2@SelectMate:

; 29   : 	SAFEDELETE( m_pIconBackImg );

  0007a	8b 8e 3c 02 00
	00		 mov	 ecx, DWORD PTR [esi+572]
  00080	3b cb		 cmp	 ecx, ebx
  00082	74 0d		 je	 SHORT $LN1@SelectMate
  00084	8b 01		 mov	 eax, DWORD PTR [ecx]
  00086	6a 01		 push	 1
  00088	ff 50 40	 call	 DWORD PTR [eax+64]
  0008b	89 9e 3c 02 00
	00		 mov	 DWORD PTR [esi+572], ebx
$LN1@SelectMate:

; 30   : }

  00091	8d 8e 0c 02 00
	00		 lea	 ecx, DWORD PTR [esi+524]
  00097	88 5d fc	 mov	 BYTE PTR __$EHRec$[ebp+8], bl
  0009a	e8 00 00 00 00	 call	 ??1ioComplexStringPrinter@@QAE@XZ ; ioComplexStringPrinter::~ioComplexStringPrinter
  0009f	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000a3	8b ce		 mov	 ecx, esi
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioButton@@UAE@XZ
  000ab	e8 00 00 00 00	 call	 __EH_epilog3
  000b0	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1SelectMaterialItemBtn@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioButton@@UAE@XZ
__unwindfunclet$??1SelectMaterialItemBtn@@UAE@XZ$1:
  00009	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	81 c1 0c 02 00
	00		 add	 ecx, 524		; 0000020cH
  00012	e9 00 00 00 00	 jmp	 ??1ioComplexStringPrinter@@QAE@XZ ; ioComplexStringPrinter::~ioComplexStringPrinter
__ehhandler$??1SelectMaterialItemBtn@@UAE@XZ:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1SelectMaterialItemBtn@@UAE@XZ
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1SelectMaterialItemBtn@@UAE@XZ ENDP			; SelectMaterialItemBtn::~SelectMaterialItemBtn
; Function compile flags: /Ogsp
;	COMDAT ?iwm_hide@SelectMaterialItemBtn@@UAEXXZ
_TEXT	SEGMENT
?iwm_hide@SelectMaterialItemBtn@@UAEXXZ PROC		; SelectMaterialItemBtn::iwm_hide, COMDAT
; _this$ = ecx

; 34   : 	m_iCode = 0;

  00000	33 c0		 xor	 eax, eax
  00002	89 81 fc 01 00
	00		 mov	 DWORD PTR [ecx+508], eax

; 35   : 	m_iCurCnt = 0;

  00008	89 81 04 02 00
	00		 mov	 DWORD PTR [ecx+516], eax

; 36   : 	m_nRecommandCode = 0;

  0000e	89 81 08 02 00
	00		 mov	 DWORD PTR [ecx+520], eax

; 37   : }

  00014	c3		 ret	 0
?iwm_hide@SelectMaterialItemBtn@@UAEXXZ ENDP		; SelectMaterialItemBtn::iwm_hide
_TEXT	ENDS
PUBLIC	__real@3f19999a
PUBLIC	??_C@_0CA@OFIGJOIP@SelectMaterialItemBtn?3?3InitData?$AA@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?InitData@SelectMaterialItemBtn@@QAEXXZ		; SelectMaterialItemBtn::InitData
EXTRN	?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ:PROC ; ioComplexStringPrinter::AddTextPiece
EXTRN	__imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z:PROC
EXTRN	__imp_?GetSingleton@ioStringManager@@SAAAV1@XZ:PROC
EXTRN	?SetTextColor@ioComplexStringPrinter@@QAEXHHH@Z:PROC ; ioComplexStringPrinter::SetTextColor
EXTRN	?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z:PROC ; ioComplexStringPrinter::SetTextStyle
EXTRN	?ClearList@ioComplexStringPrinter@@QAEXXZ:PROC	; ioComplexStringPrinter::ClearList
EXTRN	__fltused:DWORD
;	COMDAT __real@3f19999a
CONST	SEGMENT
__real@3f19999a DD 03f19999ar			; 0.6
CONST	ENDS
;	COMDAT ??_C@_0CA@OFIGJOIP@SelectMaterialItemBtn?3?3InitData?$AA@
CONST	SEGMENT
??_C@_0CA@OFIGJOIP@SelectMaterialItemBtn?3?3InitData?$AA@ DB 'SelectMater'
	DB	'ialItemBtn::InitData', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?InitData@SelectMaterialItemBtn@@QAEXXZ
_TEXT	SEGMENT
?InitData@SelectMaterialItemBtn@@QAEXXZ PROC		; SelectMaterialItemBtn::InitData, COMDAT
; _this$ = ecx

; 134  : 	m_iCode = 0;

  00000	83 a1 fc 01 00
	00 00		 and	 DWORD PTR [ecx+508], 0

; 135  : 	m_iCurCnt = 0;

  00007	83 a1 04 02 00
	00 00		 and	 DWORD PTR [ecx+516], 0
  0000e	56		 push	 esi

; 136  : 
; 137  : 	m_CountText.ClearList();

  0000f	8d b1 0c 02 00
	00		 lea	 esi, DWORD PTR [ecx+524]
  00015	8b ce		 mov	 ecx, esi
  00017	e8 00 00 00 00	 call	 ?ClearList@ioComplexStringPrinter@@QAEXXZ ; ioComplexStringPrinter::ClearList

; 138  : 	m_CountText.SetTextStyle( TS_NORMAL );

  0001c	6a 00		 push	 0
  0001e	8b ce		 mov	 ecx, esi
  00020	e8 00 00 00 00	 call	 ?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z ; ioComplexStringPrinter::SetTextStyle

; 139  : 	m_CountText.SetTextColor( 153, 153, 153 );

  00025	b8 99 00 00 00	 mov	 eax, 153		; 00000099H
  0002a	50		 push	 eax
  0002b	50		 push	 eax
  0002c	50		 push	 eax
  0002d	8b ce		 mov	 ecx, esi
  0002f	e8 00 00 00 00	 call	 ?SetTextColor@ioComplexStringPrinter@@QAEXHHH@Z ; ioComplexStringPrinter::SetTextColor

; 140  : 	m_CountText.AddTextPiece( FONT_SIZE_12, STR(1) );

  00034	6a 00		 push	 0
  00036	6a 01		 push	 1
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@OFIGJOIP@SelectMaterialItemBtn?3?3InitData?$AA@
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioStringManager@@SAAAV1@XZ
  00048	8b c8		 mov	 ecx, eax
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  00050	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  00058	50		 push	 eax
  00059	51		 push	 ecx
  0005a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005f	56		 push	 esi
  00060	e8 00 00 00 00	 call	 ?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ ; ioComplexStringPrinter::AddTextPiece
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH
  00068	5e		 pop	 esi

; 141  : }

  00069	c3		 ret	 0
?InitData@SelectMaterialItemBtn@@QAEXXZ ENDP		; SelectMaterialItemBtn::InitData
_TEXT	ENDS
PUBLIC	?SetData@SelectMaterialItemBtn@@QAEXHH@Z	; SelectMaterialItemBtn::SetData
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
EXTRN	?SetTextColor@ioComplexStringPrinter@@QAEXK@Z:PROC ; ioComplexStringPrinter::SetTextColor
EXTRN	?SetBkColor@ioComplexStringPrinter@@QAEXK@Z:PROC ; ioComplexStringPrinter::SetBkColor
EXTRN	?ConvertNumToStrComma@Help@@YAXHPADH@Z:PROC	; Help::ConvertNumToStrComma
EXTRN	__imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z:PROC
EXTRN	__imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ:PROC
EXTRN	?GetAlchemicItemIcon@ioAlchemicMgr@@QAE?AVioHashString@@H@Z:PROC ; ioAlchemicMgr::GetAlchemicItemIcon
EXTRN	?GetSingleton@ioAlchemicMgr@@SAAAV1@XZ:PROC	; ioAlchemicMgr::GetSingleton
EXTRN	__EH_epilog3_GS:PROC
EXTRN	__EH_prolog3_GS:PROC
EXTRN	_memset:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetData@SelectMaterialItemBtn@@QAEXHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetData@SelectMaterialItemBtn@@QAEXHH@Z$0
__ehfuncinfo$?SetData@SelectMaterialItemBtn@@QAEXHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetData@SelectMaterialItemBtn@@QAEXHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?SetData@SelectMaterialItemBtn@@QAEXHH@Z
_TEXT	SEGMENT
_szIcon$ = -292						; size = 16
_szCount$ = -276					; size = 260
__$EHRec$ = -12						; size = 12
_iCode$ = 8						; size = 4
_iCnt$ = 12						; size = 4
?SetData@SelectMaterialItemBtn@@QAEXHH@Z PROC		; SelectMaterialItemBtn::SetData, COMDAT
; _this$ = ecx

; 144  : {	

  00000	68 18 01 00 00	 push	 280			; 00000118H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?SetData@SelectMaterialItemBtn@@QAEXHH@Z
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000f	8b 45 08	 mov	 eax, DWORD PTR _iCode$[ebp]
  00012	8b f1		 mov	 esi, ecx

; 145  : 	int iPreCode = m_iCode;
; 146  : 	m_iCode = iCode;
; 147  : 	m_iCurCnt = iCnt;

  00014	8b 4d 0c	 mov	 ecx, DWORD PTR _iCnt$[ebp]

; 148  : 
; 149  : 	ioHashString szIcon = g_AlchemicMgr.GetAlchemicItemIcon( iCode );

  00017	50		 push	 eax
  00018	89 86 fc 01 00
	00		 mov	 DWORD PTR [esi+508], eax
  0001e	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _szIcon$[ebp]
  00024	50		 push	 eax
  00025	89 8e 04 02 00
	00		 mov	 DWORD PTR [esi+516], ecx
  0002b	e8 00 00 00 00	 call	 ?GetSingleton@ioAlchemicMgr@@SAAAV1@XZ ; ioAlchemicMgr::GetSingleton
  00030	8b c8		 mov	 ecx, eax
  00032	e8 00 00 00 00	 call	 ?GetAlchemicItemIcon@ioAlchemicMgr@@QAE?AVioHashString@@H@Z ; ioAlchemicMgr::GetAlchemicItemIcon

; 150  : 
; 151  : 	SAFEDELETE( m_pIconImg );

  00037	8b 8e 38 02 00
	00		 mov	 ecx, DWORD PTR [esi+568]
  0003d	33 db		 xor	 ebx, ebx
  0003f	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00042	3b cb		 cmp	 ecx, ebx
  00044	74 0d		 je	 SHORT $LN1@SetData
  00046	8b 01		 mov	 eax, DWORD PTR [ecx]
  00048	6a 01		 push	 1
  0004a	ff 50 40	 call	 DWORD PTR [eax+64]
  0004d	89 9e 38 02 00
	00		 mov	 DWORD PTR [esi+568], ebx
$LN1@SetData:

; 152  : 	m_pIconImg = g_UIImageSetMgr.CreateImageByFullName( szIcon );

  00053	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _szIcon$[ebp]
  00059	53		 push	 ebx
  0005a	50		 push	 eax
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ
  00061	8b c8		 mov	 ecx, eax
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z

; 153  : 
; 154  : 	char szCount[MAX_PATH]="";

  00069	68 03 01 00 00	 push	 259			; 00000103H
  0006e	89 86 38 02 00
	00		 mov	 DWORD PTR [esi+568], eax
  00074	8d 85 ed fe ff
	ff		 lea	 eax, DWORD PTR _szCount$[ebp+1]
  0007a	53		 push	 ebx
  0007b	50		 push	 eax
  0007c	88 9d ec fe ff
	ff		 mov	 BYTE PTR _szCount$[ebp], bl
  00082	e8 00 00 00 00	 call	 _memset

; 155  : 	Help::ConvertNumToStrComma( m_iCurCnt, szCount, sizeof( szCount ) );

  00087	68 04 01 00 00	 push	 260			; 00000104H
  0008c	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szCount$[ebp]
  00092	50		 push	 eax
  00093	ff b6 04 02 00
	00		 push	 DWORD PTR [esi+516]
  00099	e8 00 00 00 00	 call	 ?ConvertNumToStrComma@Help@@YAXHPADH@Z ; Help::ConvertNumToStrComma

; 156  : 	m_CountText.ClearList();

  0009e	81 c6 0c 02 00
	00		 add	 esi, 524		; 0000020cH
  000a4	83 c4 18	 add	 esp, 24			; 00000018H
  000a7	8b ce		 mov	 ecx, esi
  000a9	e8 00 00 00 00	 call	 ?ClearList@ioComplexStringPrinter@@QAEXXZ ; ioComplexStringPrinter::ClearList

; 157  : 	m_CountText.SetTextStyle( TS_OUTLINE_FULL_3X );

  000ae	6a 06		 push	 6
  000b0	8b ce		 mov	 ecx, esi
  000b2	e8 00 00 00 00	 call	 ?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z ; ioComplexStringPrinter::SetTextStyle

; 158  : 	m_CountText.SetBkColor( TCT_DEFAULT_DARKGRAY );

  000b7	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  000bc	8b ce		 mov	 ecx, esi
  000be	e8 00 00 00 00	 call	 ?SetBkColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetBkColor

; 159  : 	m_CountText.SetTextColor( TCT_DEFAULT_WHITE );

  000c3	6a ff		 push	 -1
  000c5	8b ce		 mov	 ecx, esi
  000c7	e8 00 00 00 00	 call	 ?SetTextColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetTextColor

; 160  : 	m_CountText.AddTextPiece( FONT_SIZE_12, szCount );

  000cc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  000d4	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szCount$[ebp]
  000da	50		 push	 eax
  000db	51		 push	 ecx
  000dc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e1	56		 push	 esi
  000e2	e8 00 00 00 00	 call	 ?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ ; ioComplexStringPrinter::AddTextPiece

; 161  : }

  000e7	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000eb	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ee	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _szIcon$[ebp]
  000f4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  000fa	e8 00 00 00 00	 call	 __EH_epilog3_GS
  000ff	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetData@SelectMaterialItemBtn@@QAEXHH@Z$0:
  00000	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _szIcon$[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?SetData@SelectMaterialItemBtn@@QAEXHH@Z:
  0000c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00010	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00013	8b 8a d8 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-296]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetData@SelectMaterialItemBtn@@QAEXHH@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetData@SelectMaterialItemBtn@@QAEXHH@Z ENDP		; SelectMaterialItemBtn::SetData
PUBLIC	?SetRecommand@SelectMaterialItemBtn@@QAEXHH@Z	; SelectMaterialItemBtn::SetRecommand
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetRecommand@SelectMaterialItemBtn@@QAEXHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetRecommand@SelectMaterialItemBtn@@QAEXHH@Z$0
__ehfuncinfo$?SetRecommand@SelectMaterialItemBtn@@QAEXHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetRecommand@SelectMaterialItemBtn@@QAEXHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?SetRecommand@SelectMaterialItemBtn@@QAEXHH@Z
_TEXT	SEGMENT
_szIcon$ = -292						; size = 16
_szCount$ = -276					; size = 260
__$EHRec$ = -12						; size = 12
_iCode$ = 8						; size = 4
_iCnt$ = 12						; size = 4
?SetRecommand@SelectMaterialItemBtn@@QAEXHH@Z PROC	; SelectMaterialItemBtn::SetRecommand, COMDAT
; _this$ = ecx

; 164  : {	

  00000	68 18 01 00 00	 push	 280			; 00000118H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?SetRecommand@SelectMaterialItemBtn@@QAEXHH@Z
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000f	8b 45 08	 mov	 eax, DWORD PTR _iCode$[ebp]
  00012	8b f1		 mov	 esi, ecx

; 165  : 	m_iCode = 0;
; 166  : 	m_nRecommandCode = iCode;
; 167  : 	m_iCurCnt = iCnt;

  00014	8b 4d 0c	 mov	 ecx, DWORD PTR _iCnt$[ebp]

; 168  : 
; 169  : 	ioHashString szIcon = g_AlchemicMgr.GetAlchemicItemIcon( iCode );

  00017	50		 push	 eax
  00018	89 86 08 02 00
	00		 mov	 DWORD PTR [esi+520], eax
  0001e	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _szIcon$[ebp]
  00024	33 db		 xor	 ebx, ebx
  00026	50		 push	 eax
  00027	89 9e fc 01 00
	00		 mov	 DWORD PTR [esi+508], ebx
  0002d	89 8e 04 02 00
	00		 mov	 DWORD PTR [esi+516], ecx
  00033	e8 00 00 00 00	 call	 ?GetSingleton@ioAlchemicMgr@@SAAAV1@XZ ; ioAlchemicMgr::GetSingleton
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ?GetAlchemicItemIcon@ioAlchemicMgr@@QAE?AVioHashString@@H@Z ; ioAlchemicMgr::GetAlchemicItemIcon

; 170  : 
; 171  : 	SAFEDELETE( m_pRecommandMaterialImg );

  0003f	8b 8e 34 02 00
	00		 mov	 ecx, DWORD PTR [esi+564]
  00045	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00048	3b cb		 cmp	 ecx, ebx
  0004a	74 0d		 je	 SHORT $LN1@SetRecomma
  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	6a 01		 push	 1
  00050	ff 50 40	 call	 DWORD PTR [eax+64]
  00053	89 9e 34 02 00
	00		 mov	 DWORD PTR [esi+564], ebx
$LN1@SetRecomma:

; 172  : 	m_pRecommandMaterialImg = g_UIImageSetMgr.CreateImageByFullName( szIcon );

  00059	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _szIcon$[ebp]
  0005f	53		 push	 ebx
  00060	50		 push	 eax
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ
  00067	8b c8		 mov	 ecx, eax
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z

; 173  : 
; 174  : 	char szCount[MAX_PATH]="";

  0006f	68 03 01 00 00	 push	 259			; 00000103H
  00074	89 86 34 02 00
	00		 mov	 DWORD PTR [esi+564], eax
  0007a	8d 85 ed fe ff
	ff		 lea	 eax, DWORD PTR _szCount$[ebp+1]
  00080	53		 push	 ebx
  00081	50		 push	 eax
  00082	88 9d ec fe ff
	ff		 mov	 BYTE PTR _szCount$[ebp], bl
  00088	e8 00 00 00 00	 call	 _memset

; 175  : 	Help::ConvertNumToStrComma( m_iCurCnt, szCount, sizeof( szCount ) );

  0008d	68 04 01 00 00	 push	 260			; 00000104H
  00092	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szCount$[ebp]
  00098	50		 push	 eax
  00099	ff b6 04 02 00
	00		 push	 DWORD PTR [esi+516]
  0009f	e8 00 00 00 00	 call	 ?ConvertNumToStrComma@Help@@YAXHPADH@Z ; Help::ConvertNumToStrComma

; 176  : 	m_CountText.ClearList();

  000a4	81 c6 0c 02 00
	00		 add	 esi, 524		; 0000020cH
  000aa	83 c4 18	 add	 esp, 24			; 00000018H
  000ad	8b ce		 mov	 ecx, esi
  000af	e8 00 00 00 00	 call	 ?ClearList@ioComplexStringPrinter@@QAEXXZ ; ioComplexStringPrinter::ClearList

; 177  : 	m_CountText.SetTextStyle( TS_OUTLINE_FULL_3X );

  000b4	6a 06		 push	 6
  000b6	8b ce		 mov	 ecx, esi
  000b8	e8 00 00 00 00	 call	 ?SetTextStyle@ioComplexStringPrinter@@QAEXW4TextStyle@@@Z ; ioComplexStringPrinter::SetTextStyle

; 178  : 	m_CountText.SetBkColor( TCT_DEFAULT_DARKGRAY );

  000bd	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  000c2	8b ce		 mov	 ecx, esi
  000c4	e8 00 00 00 00	 call	 ?SetBkColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetBkColor

; 179  : 	m_CountText.SetTextColor( TCT_DEFAULT_WHITE );

  000c9	6a ff		 push	 -1
  000cb	8b ce		 mov	 ecx, esi
  000cd	e8 00 00 00 00	 call	 ?SetTextColor@ioComplexStringPrinter@@QAEXK@Z ; ioComplexStringPrinter::SetTextColor

; 180  : 	m_CountText.AddTextPiece( FONT_SIZE_12, szCount );

  000d2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  000da	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szCount$[ebp]
  000e0	50		 push	 eax
  000e1	51		 push	 ecx
  000e2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e7	56		 push	 esi
  000e8	e8 00 00 00 00	 call	 ?AddTextPiece@ioComplexStringPrinter@@QAAXMPBDZZ ; ioComplexStringPrinter::AddTextPiece

; 181  : }

  000ed	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000f1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f4	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _szIcon$[ebp]
  000fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00100	e8 00 00 00 00	 call	 __EH_epilog3_GS
  00105	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetRecommand@SelectMaterialItemBtn@@QAEXHH@Z$0:
  00000	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _szIcon$[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?SetRecommand@SelectMaterialItemBtn@@QAEXHH@Z:
  0000c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00010	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00013	8b 8a d8 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-296]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetRecommand@SelectMaterialItemBtn@@QAEXHH@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetRecommand@SelectMaterialItemBtn@@QAEXHH@Z ENDP	; SelectMaterialItemBtn::SetRecommand
PUBLIC	?GetCode@SelectMaterialItemBtn@@QAEHXZ		; SelectMaterialItemBtn::GetCode
; Function compile flags: /Ogsp
;	COMDAT ?GetCode@SelectMaterialItemBtn@@QAEHXZ
_TEXT	SEGMENT
?GetCode@SelectMaterialItemBtn@@QAEHXZ PROC		; SelectMaterialItemBtn::GetCode, COMDAT
; _this$ = ecx

; 186  : 	if ( m_iCode <= 0)

  00000	8b 81 fc 01 00
	00		 mov	 eax, DWORD PTR [ecx+508]
  00006	85 c0		 test	 eax, eax
  00008	7f 0c		 jg	 SHORT $LN4@GetCode

; 187  : 	{
; 188  : 		if ( m_nRecommandCode > 0 )

  0000a	8b 81 08 02 00
	00		 mov	 eax, DWORD PTR [ecx+520]
  00010	85 c0		 test	 eax, eax

; 189  : 			return m_nRecommandCode;

  00012	7f 02		 jg	 SHORT $LN4@GetCode

; 190  : 	}
; 191  : 	else
; 192  : 		return m_iCode;
; 193  : 
; 194  : 	return 0; 

  00014	33 c0		 xor	 eax, eax
$LN4@GetCode:

; 195  : }

  00016	c3		 ret	 0
?GetCode@SelectMaterialItemBtn@@QAEHXZ ENDP		; SelectMaterialItemBtn::GetCode
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
PUBLIC	?SetToolTipWndID@ioLSMouse@@QAEXK@Z		; ioLSMouse::SetToolTipWndID
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iolsmouse.h
;	COMDAT ?SetToolTipWndID@ioLSMouse@@QAEXK@Z
_TEXT	SEGMENT
_dwToolTipWndID$ = 8					; size = 4
?SetToolTipWndID@ioLSMouse@@QAEXK@Z PROC		; ioLSMouse::SetToolTipWndID, COMDAT
; _this$ = ecx

; 56   : 	void SetToolTipWndID(DWORD dwToolTipWndID) { m_dwToolTipWndID = dwToolTipWndID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _dwToolTipWndID$[ebp]
  00006	89 41 74	 mov	 DWORD PTR [ecx+116], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetToolTipWndID@ioLSMouse@@QAEXK@Z ENDP		; ioLSMouse::SetToolTipWndID
_TEXT	ENDS
PUBLIC	?GetMouse@ioApplication@@QAEPAVioLSMouse@@XZ	; ioApplication::GetMouse
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioapplication.h
;	COMDAT ?GetMouse@ioApplication@@QAEPAVioLSMouse@@XZ
_TEXT	SEGMENT
?GetMouse@ioApplication@@QAEPAVioLSMouse@@XZ PROC	; ioApplication::GetMouse, COMDAT
; _this$ = ecx

; 796  : 	inline ioLSMouse* GetMouse(){ return &m_Mouse;	}

  00000	8d 81 90 00 00
	00		 lea	 eax, DWORD PTR [ecx+144]
  00006	c3		 ret	 0
?GetMouse@ioApplication@@QAEPAVioLSMouse@@XZ ENDP	; ioApplication::GetMouse
_TEXT	ENDS
PUBLIC	?empty@?$vector@UtagTextPiece@ioComplexStringPrinter@@V?$allocator@UtagTextPiece@ioComplexStringPrinter@@@std@@@std@@QBE_NXZ ; std::vector<ioComplexStringPrinter::tagTextPiece,std::allocator<ioComplexStringPrinter::tagTextPiece> >::empty
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?empty@?$vector@UtagTextPiece@ioComplexStringPrinter@@V?$allocator@UtagTextPiece@ioComplexStringPrinter@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@UtagTextPiece@ioComplexStringPrinter@@V?$allocator@UtagTextPiece@ioComplexStringPrinter@@@std@@@std@@QBE_NXZ PROC ; std::vector<ioComplexStringPrinter::tagTextPiece,std::allocator<ioComplexStringPrinter::tagTextPiece> >::empty, COMDAT
; _this$ = ecx

; 889  : 		return (this->_Myfirst == this->_Mylast);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00005	f7 d8		 neg	 eax
  00007	1b c0		 sbb	 eax, eax
  00009	40		 inc	 eax

; 890  : 		}

  0000a	c3		 ret	 0
?empty@?$vector@UtagTextPiece@ioComplexStringPrinter@@V?$allocator@UtagTextPiece@ioComplexStringPrinter@@@std@@@std@@QBE_NXZ ENDP ; std::vector<ioComplexStringPrinter::tagTextPiece,std::allocator<ioComplexStringPrinter::tagTextPiece> >::empty
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GSelectMaterialItemBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSelectMaterialItemBtn@@UAEPAXI@Z PROC		; SelectMaterialItemBtn::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1SelectMaterialItemBtn@@UAE@XZ ; SelectMaterialItemBtn::~SelectMaterialItemBtn
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GSelectMaterialItemBtn@@UAEPAXI@Z ENDP		; SelectMaterialItemBtn::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_?GetID@ioWnd@@QBEKXZ:PROC
EXTRN	?GetSingleton@ioApplication@@SAAAV1@XZ:PROC	; ioApplication::GetSingleton
EXTRN	__imp_?IsShow@ioWnd@@QBE_NXZ:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\selectmaterialitembtn.cpp
;	COMDAT ?OnProcess@SelectMaterialItemBtn@@MAEXM@Z
_TEXT	SEGMENT
_fTimePerSec$ = 8					; size = 4
?OnProcess@SelectMaterialItemBtn@@MAEXM@Z PROC		; SelectMaterialItemBtn::OnProcess, COMDAT
; _this$ = ecx

; 72   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 73   : 	if( !IsShow() ) 

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsShow@ioWnd@@QBE_NXZ
  00009	84 c0		 test	 al, al
  0000b	74 2e		 je	 SHORT $LN8@OnProcess

; 74   : 		return;
; 75   : 
; 76   : 	if( m_bOver && !m_bClicked )

  0000d	80 be a8 00 00
	00 00		 cmp	 BYTE PTR [esi+168], 0
  00014	74 25		 je	 SHORT $LN8@OnProcess
  00016	80 be a6 00 00
	00 00		 cmp	 BYTE PTR [esi+166], 0
  0001d	75 1c		 jne	 SHORT $LN8@OnProcess

; 77   : 	{
; 78   : 		ioLSMouse *pMouse = g_App.GetMouse();

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ?GetSingleton@ioApplication@@SAAAV1@XZ ; ioApplication::GetSingleton
  00025	8b f8		 mov	 edi, eax
  00027	81 c7 90 00 00
	00		 add	 edi, 144		; 00000090H

; 79   : 		if( pMouse )

  0002d	74 0b		 je	 SHORT $LN10@OnProcess

; 80   : 		{
; 81   : 			pMouse->SetToolTipWndID( GetID() );

  0002f	8b ce		 mov	 ecx, esi
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetID@ioWnd@@QBEKXZ
  00037	89 47 74	 mov	 DWORD PTR [edi+116], eax
$LN10@OnProcess:
  0003a	5f		 pop	 edi
$LN8@OnProcess:
  0003b	5e		 pop	 esi

; 82   : 		}
; 83   : 	}
; 84   : }

  0003c	c2 04 00	 ret	 4
?OnProcess@SelectMaterialItemBtn@@MAEXM@Z ENDP		; SelectMaterialItemBtn::OnProcess
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$?8$0N@@@YA_NABVioHashString@@AAY0N@$$CBD@Z	; operator==<13>
EXTRN	__imp_?c_str@ioHashString@@QBEPBDXZ:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iohashstring.h
;	COMDAT ??$?8$0N@@@YA_NABVioHashString@@AAY0N@$$CBD@Z
_TEXT	SEGMENT
__t$ = -24						; size = 13
__$ArrayPad$ = -4					; size = 4
_lhs$ = 8						; size = 4
_t$ = 12						; size = 4
??$?8$0N@@@YA_NABVioHashString@@AAY0N@$$CBD@Z PROC	; operator==<13>, COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]

; 147  : 	_ENCSTR(t, _t); return ( strcmp( lhs.c_str(), _t ) == 0 );

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	8b 7d 08	 mov	 edi, DWORD PTR _lhs$[ebp]
  0001a	84 d2		 test	 dl, dl
  0001c	0f 84 4d 01 00
	00		 je	 $LN96@operator
  00022	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00025	88 55 e8	 mov	 BYTE PTR __t$[ebp], dl
  00028	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0002b	84 d2		 test	 dl, dl
  0002d	0f 84 36 01 00
	00		 je	 $LN95@operator
  00033	b1 ec		 mov	 cl, -20			; ffffffecH
  00035	32 d1		 xor	 dl, cl
  00037	88 55 e9	 mov	 BYTE PTR __t$[ebp+1], dl
  0003a	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003d	84 d2		 test	 dl, dl
  0003f	0f 84 1e 01 00
	00		 je	 $LN94@operator
  00045	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00048	88 55 ea	 mov	 BYTE PTR __t$[ebp+2], dl
  0004b	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004e	84 d2		 test	 dl, dl
  00050	0f 84 07 01 00
	00		 je	 $LN93@operator
  00056	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00059	88 55 eb	 mov	 BYTE PTR __t$[ebp+3], dl
  0005c	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005f	84 d2		 test	 dl, dl
  00061	0f 84 f0 00 00
	00		 je	 $LN92@operator
  00067	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0006a	88 55 ec	 mov	 BYTE PTR __t$[ebp+4], dl
  0006d	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00070	84 d2		 test	 dl, dl
  00072	0f 84 da 00 00
	00		 je	 $LN91@operator
  00078	32 d1		 xor	 dl, cl
  0007a	88 55 ed	 mov	 BYTE PTR __t$[ebp+5], dl
  0007d	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00080	84 d2		 test	 dl, dl
  00082	0f 84 c4 00 00
	00		 je	 $LN90@operator
  00088	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0008b	88 55 ee	 mov	 BYTE PTR __t$[ebp+6], dl
  0008e	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00091	84 d2		 test	 dl, dl
  00093	0f 84 ad 00 00
	00		 je	 $LN89@operator
  00099	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009c	88 55 ef	 mov	 BYTE PTR __t$[ebp+7], dl
  0009f	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a2	84 d2		 test	 dl, dl
  000a4	0f 84 96 00 00
	00		 je	 $LN88@operator
  000aa	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ad	88 55 f0	 mov	 BYTE PTR __t$[ebp+8], dl
  000b0	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b3	84 d2		 test	 dl, dl
  000b5	0f 84 80 00 00
	00		 je	 $LN87@operator
  000bb	32 d1		 xor	 dl, cl
  000bd	88 55 f1	 mov	 BYTE PTR __t$[ebp+9], dl
  000c0	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c3	84 d2		 test	 dl, dl
  000c5	74 6e		 je	 SHORT $LN86@operator
  000c7	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000ca	88 55 f2	 mov	 BYTE PTR __t$[ebp+10], dl
  000cd	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d0	84 d2		 test	 dl, dl
  000d2	74 5b		 je	 SHORT $LN85@operator
  000d4	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d7	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  000db	88 55 f3	 mov	 BYTE PTR __t$[ebp+11], dl
  000de	0f 84 8f 00 00
	00		 je	 $LN1@operator
  000e4	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000e7	84 d2		 test	 dl, dl
  000e9	74 3f		 je	 SHORT $LN83@operator
  000eb	32 d1		 xor	 dl, cl
  000ed	88 55 f5	 mov	 BYTE PTR __t$[ebp+13], dl
  000f0	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000f3	84 d2		 test	 dl, dl
  000f5	74 2d		 je	 SHORT $LN82@operator
  000f7	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000fa	88 55 f6	 mov	 BYTE PTR __t$[ebp+14], dl
  000fd	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00100	84 d2		 test	 dl, dl
  00102	74 1a		 je	 SHORT $LN81@operator
  00104	8a 40 10	 mov	 al, BYTE PTR [eax+16]
  00107	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0010a	88 55 f7	 mov	 BYTE PTR __t$[ebp+15], dl
  0010d	84 c0		 test	 al, al
  0010f	74 07		 je	 SHORT $LN80@operator
  00111	34 ed		 xor	 al, -19			; ffffffedH
  00113	88 45 f8	 mov	 BYTE PTR __t$[ebp+16], al
  00116	eb 5b		 jmp	 SHORT $LN1@operator
$LN80@operator:
  00118	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+16], -19 ; ffffffedH
  0011c	eb 55		 jmp	 SHORT $LN1@operator
$LN81@operator:
  0011e	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+15], -22 ; ffffffeaH
  00122	eb 4f		 jmp	 SHORT $LN1@operator
$LN82@operator:
  00124	c6 45 f6 eb	 mov	 BYTE PTR __t$[ebp+14], -21 ; ffffffebH
  00128	eb 49		 jmp	 SHORT $LN1@operator
$LN83@operator:
  0012a	88 4d f5	 mov	 BYTE PTR __t$[ebp+13], cl
  0012d	eb 44		 jmp	 SHORT $LN1@operator
$LN85@operator:
  0012f	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+11], -22 ; ffffffeaH
  00133	eb 3e		 jmp	 SHORT $LN1@operator
$LN86@operator:
  00135	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+10], -21 ; ffffffebH
  00139	eb 38		 jmp	 SHORT $LN1@operator
$LN87@operator:
  0013b	88 4d f1	 mov	 BYTE PTR __t$[ebp+9], cl
  0013e	eb 33		 jmp	 SHORT $LN1@operator
$LN88@operator:
  00140	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  00144	eb 2d		 jmp	 SHORT $LN1@operator
$LN89@operator:
  00146	c6 45 ef ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  0014a	eb 27		 jmp	 SHORT $LN1@operator
$LN90@operator:
  0014c	c6 45 ee eb	 mov	 BYTE PTR __t$[ebp+6], -21 ; ffffffebH
  00150	eb 21		 jmp	 SHORT $LN1@operator
$LN91@operator:
  00152	88 4d ed	 mov	 BYTE PTR __t$[ebp+5], cl
  00155	eb 1c		 jmp	 SHORT $LN1@operator
$LN92@operator:
  00157	c6 45 ec ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  0015b	eb 16		 jmp	 SHORT $LN1@operator
$LN93@operator:
  0015d	c6 45 eb ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  00161	eb 10		 jmp	 SHORT $LN1@operator
$LN94@operator:
  00163	c6 45 ea eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  00167	eb 0a		 jmp	 SHORT $LN1@operator
$LN95@operator:
  00169	c6 45 e9 ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  0016d	eb 04		 jmp	 SHORT $LN1@operator
$LN96@operator:
  0016f	c6 45 e8 ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@operator:
  00173	6a 03		 push	 3
  00175	8d 45 e8	 lea	 eax, DWORD PTR __t$[ebp]
  00178	c6 45 f4 00	 mov	 BYTE PTR __t$[ebp+12], 0
  0017c	5a		 pop	 edx
$LL104@operator:
  0017d	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00183	83 c0 04	 add	 eax, 4
  00186	4a		 dec	 edx
  00187	75 f4		 jne	 SHORT $LL104@operator
  00189	8b cf		 mov	 ecx, edi
  0018b	8d 75 e8	 lea	 esi, DWORD PTR __t$[ebp]
  0018e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL111@operator:
  00194	8a 08		 mov	 cl, BYTE PTR [eax]
  00196	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00198	75 1a		 jne	 SHORT $LN112@operator
  0019a	84 c9		 test	 cl, cl
  0019c	74 12		 je	 SHORT $LN113@operator
  0019e	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  001a1	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  001a4	75 0e		 jne	 SHORT $LN112@operator
  001a6	83 c0 02	 add	 eax, 2
  001a9	83 c6 02	 add	 esi, 2
  001ac	84 c9		 test	 cl, cl
  001ae	75 e4		 jne	 SHORT $LL111@operator
$LN113@operator:
  001b0	33 c0		 xor	 eax, eax
  001b2	eb 05		 jmp	 SHORT $LN114@operator
$LN112@operator:
  001b4	1b c0		 sbb	 eax, eax
  001b6	83 d8 ff	 sbb	 eax, -1
$LN114@operator:
  001b9	33 c9		 xor	 ecx, ecx
  001bb	85 c0		 test	 eax, eax
  001bd	0f 94 c0	 sete	 al

; 148  : }

  001c0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001c3	5f		 pop	 edi
  001c4	33 cd		 xor	 ecx, ebp
  001c6	5e		 pop	 esi
  001c7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001cc	c9		 leave
  001cd	c3		 ret	 0
??$?8$0N@@@YA_NABVioHashString@@AAY0N@$$CBD@Z ENDP	; operator==<13>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$?8$0P@@@YA_NABVioHashString@@AAY0P@$$CBD@Z	; operator==<15>
; Function compile flags: /Ogsp
;	COMDAT ??$?8$0P@@@YA_NABVioHashString@@AAY0P@$$CBD@Z
_TEXT	SEGMENT
__t$ = -24						; size = 15
__$ArrayPad$ = -4					; size = 4
_lhs$ = 8						; size = 4
_t$ = 12						; size = 4
??$?8$0P@@@YA_NABVioHashString@@AAY0P@$$CBD@Z PROC	; operator==<15>, COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]

; 147  : 	_ENCSTR(t, _t); return ( strcmp( lhs.c_str(), _t ) == 0 );

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	8b 7d 08	 mov	 edi, DWORD PTR _lhs$[ebp]
  0001a	84 d2		 test	 dl, dl
  0001c	0f 84 75 01 00
	00		 je	 $LN96@operator@2
  00022	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00025	88 55 e8	 mov	 BYTE PTR __t$[ebp], dl
  00028	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0002b	84 d2		 test	 dl, dl
  0002d	0f 84 5e 01 00
	00		 je	 $LN95@operator@2
  00033	b1 ec		 mov	 cl, -20			; ffffffecH
  00035	32 d1		 xor	 dl, cl
  00037	88 55 e9	 mov	 BYTE PTR __t$[ebp+1], dl
  0003a	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003d	84 d2		 test	 dl, dl
  0003f	0f 84 46 01 00
	00		 je	 $LN94@operator@2
  00045	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00048	88 55 ea	 mov	 BYTE PTR __t$[ebp+2], dl
  0004b	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004e	84 d2		 test	 dl, dl
  00050	0f 84 2f 01 00
	00		 je	 $LN93@operator@2
  00056	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00059	88 55 eb	 mov	 BYTE PTR __t$[ebp+3], dl
  0005c	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005f	84 d2		 test	 dl, dl
  00061	0f 84 18 01 00
	00		 je	 $LN92@operator@2
  00067	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0006a	88 55 ec	 mov	 BYTE PTR __t$[ebp+4], dl
  0006d	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00070	84 d2		 test	 dl, dl
  00072	0f 84 02 01 00
	00		 je	 $LN91@operator@2
  00078	32 d1		 xor	 dl, cl
  0007a	88 55 ed	 mov	 BYTE PTR __t$[ebp+5], dl
  0007d	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00080	84 d2		 test	 dl, dl
  00082	0f 84 ec 00 00
	00		 je	 $LN90@operator@2
  00088	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0008b	88 55 ee	 mov	 BYTE PTR __t$[ebp+6], dl
  0008e	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00091	84 d2		 test	 dl, dl
  00093	0f 84 d5 00 00
	00		 je	 $LN89@operator@2
  00099	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009c	88 55 ef	 mov	 BYTE PTR __t$[ebp+7], dl
  0009f	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a2	84 d2		 test	 dl, dl
  000a4	0f 84 be 00 00
	00		 je	 $LN88@operator@2
  000aa	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ad	88 55 f0	 mov	 BYTE PTR __t$[ebp+8], dl
  000b0	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b3	84 d2		 test	 dl, dl
  000b5	0f 84 a8 00 00
	00		 je	 $LN87@operator@2
  000bb	32 d1		 xor	 dl, cl
  000bd	88 55 f1	 mov	 BYTE PTR __t$[ebp+9], dl
  000c0	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c3	84 d2		 test	 dl, dl
  000c5	0f 84 92 00 00
	00		 je	 $LN86@operator@2
  000cb	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000ce	88 55 f2	 mov	 BYTE PTR __t$[ebp+10], dl
  000d1	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d4	84 d2		 test	 dl, dl
  000d6	74 7f		 je	 SHORT $LN85@operator@2
  000d8	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000db	88 55 f3	 mov	 BYTE PTR __t$[ebp+11], dl
  000de	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e1	84 d2		 test	 dl, dl
  000e3	74 6c		 je	 SHORT $LN84@operator@2
  000e5	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e8	88 55 f4	 mov	 BYTE PTR __t$[ebp+12], dl
  000eb	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000ee	84 d2		 test	 dl, dl
  000f0	74 5a		 je	 SHORT $LN83@operator@2
  000f2	32 d1		 xor	 dl, cl
  000f4	80 78 0e 00	 cmp	 BYTE PTR [eax+14], 0
  000f8	88 55 f5	 mov	 BYTE PTR __t$[ebp+13], dl
  000fb	0f 84 9a 00 00
	00		 je	 $LN1@operator@2
  00101	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00104	84 d2		 test	 dl, dl
  00106	74 3e		 je	 SHORT $LN81@operator@2
  00108	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0010b	88 55 f7	 mov	 BYTE PTR __t$[ebp+15], dl
  0010e	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00111	84 d2		 test	 dl, dl
  00113	74 2b		 je	 SHORT $LN80@operator@2
  00115	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00118	88 55 f8	 mov	 BYTE PTR __t$[ebp+16], dl
  0011b	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  0011e	84 d2		 test	 dl, dl
  00120	74 19		 je	 SHORT $LN79@operator@2
  00122	8a 40 12	 mov	 al, BYTE PTR [eax+18]
  00125	32 d1		 xor	 dl, cl
  00127	88 55 f9	 mov	 BYTE PTR __t$[ebp+17], dl
  0012a	84 c0		 test	 al, al
  0012c	74 07		 je	 SHORT $LN78@operator@2
  0012e	34 eb		 xor	 al, -21			; ffffffebH
  00130	88 45 fa	 mov	 BYTE PTR __t$[ebp+18], al
  00133	eb 66		 jmp	 SHORT $LN1@operator@2
$LN78@operator@2:
  00135	c6 45 fa eb	 mov	 BYTE PTR __t$[ebp+18], -21 ; ffffffebH
  00139	eb 60		 jmp	 SHORT $LN1@operator@2
$LN79@operator@2:
  0013b	88 4d f9	 mov	 BYTE PTR __t$[ebp+17], cl
  0013e	eb 5b		 jmp	 SHORT $LN1@operator@2
$LN80@operator@2:
  00140	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+16], -19 ; ffffffedH
  00144	eb 55		 jmp	 SHORT $LN1@operator@2
$LN81@operator@2:
  00146	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+15], -22 ; ffffffeaH
  0014a	eb 4f		 jmp	 SHORT $LN1@operator@2
$LN83@operator@2:
  0014c	88 4d f5	 mov	 BYTE PTR __t$[ebp+13], cl
  0014f	eb 4a		 jmp	 SHORT $LN1@operator@2
$LN84@operator@2:
  00151	c6 45 f4 ed	 mov	 BYTE PTR __t$[ebp+12], -19 ; ffffffedH
  00155	eb 44		 jmp	 SHORT $LN1@operator@2
$LN85@operator@2:
  00157	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+11], -22 ; ffffffeaH
  0015b	eb 3e		 jmp	 SHORT $LN1@operator@2
$LN86@operator@2:
  0015d	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+10], -21 ; ffffffebH
  00161	eb 38		 jmp	 SHORT $LN1@operator@2
$LN87@operator@2:
  00163	88 4d f1	 mov	 BYTE PTR __t$[ebp+9], cl
  00166	eb 33		 jmp	 SHORT $LN1@operator@2
$LN88@operator@2:
  00168	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  0016c	eb 2d		 jmp	 SHORT $LN1@operator@2
$LN89@operator@2:
  0016e	c6 45 ef ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  00172	eb 27		 jmp	 SHORT $LN1@operator@2
$LN90@operator@2:
  00174	c6 45 ee eb	 mov	 BYTE PTR __t$[ebp+6], -21 ; ffffffebH
  00178	eb 21		 jmp	 SHORT $LN1@operator@2
$LN91@operator@2:
  0017a	88 4d ed	 mov	 BYTE PTR __t$[ebp+5], cl
  0017d	eb 1c		 jmp	 SHORT $LN1@operator@2
$LN92@operator@2:
  0017f	c6 45 ec ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  00183	eb 16		 jmp	 SHORT $LN1@operator@2
$LN93@operator@2:
  00185	c6 45 eb ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  00189	eb 10		 jmp	 SHORT $LN1@operator@2
$LN94@operator@2:
  0018b	c6 45 ea eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  0018f	eb 0a		 jmp	 SHORT $LN1@operator@2
$LN95@operator@2:
  00191	c6 45 e9 ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  00195	eb 04		 jmp	 SHORT $LN1@operator@2
$LN96@operator@2:
  00197	c6 45 e8 ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@operator@2:
  0019b	6a 03		 push	 3
  0019d	8d 45 e8	 lea	 eax, DWORD PTR __t$[ebp]
  001a0	c6 45 f6 00	 mov	 BYTE PTR __t$[ebp+14], 0
  001a4	5a		 pop	 edx
$LL104@operator@2:
  001a5	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001ab	83 c0 04	 add	 eax, 4
  001ae	4a		 dec	 edx
  001af	75 f4		 jne	 SHORT $LL104@operator@2
  001b1	6a 0c		 push	 12			; 0000000cH
  001b3	58		 pop	 eax
$LL101@operator@2:
  001b4	8b c8		 mov	 ecx, eax
  001b6	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  001bc	79 05		 jns	 SHORT $LN115@operator@2
  001be	49		 dec	 ecx
  001bf	83 c9 fc	 or	 ecx, -4			; fffffffcH
  001c2	41		 inc	 ecx
$LN115@operator@2:
  001c3	b2 ed		 mov	 dl, -19			; ffffffedH
  001c5	2a d1		 sub	 dl, cl
  001c7	30 54 05 e8	 xor	 BYTE PTR __t$[ebp+eax], dl
  001cb	40		 inc	 eax
  001cc	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  001cf	7c e3		 jl	 SHORT $LL101@operator@2
  001d1	8b cf		 mov	 ecx, edi
  001d3	8d 75 e8	 lea	 esi, DWORD PTR __t$[ebp]
  001d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL111@operator@2:
  001dc	8a 08		 mov	 cl, BYTE PTR [eax]
  001de	3a 0e		 cmp	 cl, BYTE PTR [esi]
  001e0	75 1a		 jne	 SHORT $LN112@operator@2
  001e2	84 c9		 test	 cl, cl
  001e4	74 12		 je	 SHORT $LN113@operator@2
  001e6	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  001e9	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  001ec	75 0e		 jne	 SHORT $LN112@operator@2
  001ee	83 c0 02	 add	 eax, 2
  001f1	83 c6 02	 add	 esi, 2
  001f4	84 c9		 test	 cl, cl
  001f6	75 e4		 jne	 SHORT $LL111@operator@2
$LN113@operator@2:
  001f8	33 c0		 xor	 eax, eax
  001fa	eb 05		 jmp	 SHORT $LN114@operator@2
$LN112@operator@2:
  001fc	1b c0		 sbb	 eax, eax
  001fe	83 d8 ff	 sbb	 eax, -1
$LN114@operator@2:
  00201	33 c9		 xor	 ecx, ecx
  00203	85 c0		 test	 eax, eax
  00205	0f 94 c0	 sete	 al

; 148  : }

  00208	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0020b	5f		 pop	 edi
  0020c	33 cd		 xor	 ecx, ebp
  0020e	5e		 pop	 esi
  0020f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00214	c9		 leave
  00215	c3		 ret	 0
??$?8$0P@@@YA_NABVioHashString@@AAY0P@$$CBD@Z ENDP	; operator==<15>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$?8$0BA@@@YA_NABVioHashString@@AAY0BA@$$CBD@Z	; operator==<16>
; Function compile flags: /Ogsp
;	COMDAT ??$?8$0BA@@@YA_NABVioHashString@@AAY0BA@$$CBD@Z
_TEXT	SEGMENT
__t$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_lhs$ = 8						; size = 4
_t$ = 12						; size = 4
??$?8$0BA@@@YA_NABVioHashString@@AAY0BA@$$CBD@Z PROC	; operator==<16>, COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]

; 147  : 	_ENCSTR(t, _t); return ( strcmp( lhs.c_str(), _t ) == 0 );

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	8b 7d 08	 mov	 edi, DWORD PTR _lhs$[ebp]
  0001a	84 d2		 test	 dl, dl
  0001c	0f 84 8c 01 00
	00		 je	 $LN96@operator@3
  00022	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00025	88 55 e8	 mov	 BYTE PTR __t$[ebp], dl
  00028	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0002b	84 d2		 test	 dl, dl
  0002d	0f 84 75 01 00
	00		 je	 $LN95@operator@3
  00033	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00036	88 55 e9	 mov	 BYTE PTR __t$[ebp+1], dl
  00039	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003c	84 d2		 test	 dl, dl
  0003e	0f 84 5e 01 00
	00		 je	 $LN94@operator@3
  00044	b1 eb		 mov	 cl, -21			; ffffffebH
  00046	32 d1		 xor	 dl, cl
  00048	88 55 ea	 mov	 BYTE PTR __t$[ebp+2], dl
  0004b	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004e	84 d2		 test	 dl, dl
  00050	0f 84 46 01 00
	00		 je	 $LN93@operator@3
  00056	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00059	88 55 eb	 mov	 BYTE PTR __t$[ebp+3], dl
  0005c	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005f	84 d2		 test	 dl, dl
  00061	0f 84 2f 01 00
	00		 je	 $LN92@operator@3
  00067	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0006a	88 55 ec	 mov	 BYTE PTR __t$[ebp+4], dl
  0006d	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00070	84 d2		 test	 dl, dl
  00072	0f 84 18 01 00
	00		 je	 $LN91@operator@3
  00078	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0007b	88 55 ed	 mov	 BYTE PTR __t$[ebp+5], dl
  0007e	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00081	84 d2		 test	 dl, dl
  00083	0f 84 02 01 00
	00		 je	 $LN90@operator@3
  00089	32 d1		 xor	 dl, cl
  0008b	88 55 ee	 mov	 BYTE PTR __t$[ebp+6], dl
  0008e	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00091	84 d2		 test	 dl, dl
  00093	0f 84 ec 00 00
	00		 je	 $LN89@operator@3
  00099	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009c	88 55 ef	 mov	 BYTE PTR __t$[ebp+7], dl
  0009f	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a2	84 d2		 test	 dl, dl
  000a4	0f 84 d5 00 00
	00		 je	 $LN88@operator@3
  000aa	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ad	88 55 f0	 mov	 BYTE PTR __t$[ebp+8], dl
  000b0	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b3	84 d2		 test	 dl, dl
  000b5	0f 84 be 00 00
	00		 je	 $LN87@operator@3
  000bb	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000be	88 55 f1	 mov	 BYTE PTR __t$[ebp+9], dl
  000c1	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c4	84 d2		 test	 dl, dl
  000c6	0f 84 a8 00 00
	00		 je	 $LN86@operator@3
  000cc	32 d1		 xor	 dl, cl
  000ce	88 55 f2	 mov	 BYTE PTR __t$[ebp+10], dl
  000d1	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d4	84 d2		 test	 dl, dl
  000d6	0f 84 92 00 00
	00		 je	 $LN85@operator@3
  000dc	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000df	88 55 f3	 mov	 BYTE PTR __t$[ebp+11], dl
  000e2	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e5	84 d2		 test	 dl, dl
  000e7	74 7f		 je	 SHORT $LN84@operator@3
  000e9	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ec	88 55 f4	 mov	 BYTE PTR __t$[ebp+12], dl
  000ef	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f2	84 d2		 test	 dl, dl
  000f4	74 6c		 je	 SHORT $LN83@operator@3
  000f6	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000f9	88 55 f5	 mov	 BYTE PTR __t$[ebp+13], dl
  000fc	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000ff	84 d2		 test	 dl, dl
  00101	74 5a		 je	 SHORT $LN82@operator@3
  00103	32 d1		 xor	 dl, cl
  00105	80 78 0f 00	 cmp	 BYTE PTR [eax+15], 0
  00109	88 55 f6	 mov	 BYTE PTR __t$[ebp+14], dl
  0010c	0f 84 a0 00 00
	00		 je	 $LN1@operator@3
  00112	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00115	84 d2		 test	 dl, dl
  00117	74 3e		 je	 SHORT $LN80@operator@3
  00119	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0011c	88 55 f8	 mov	 BYTE PTR __t$[ebp+16], dl
  0011f	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00122	84 d2		 test	 dl, dl
  00124	74 2b		 je	 SHORT $LN79@operator@3
  00126	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00129	88 55 f9	 mov	 BYTE PTR __t$[ebp+17], dl
  0012c	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  0012f	84 d2		 test	 dl, dl
  00131	74 19		 je	 SHORT $LN78@operator@3
  00133	8a 40 13	 mov	 al, BYTE PTR [eax+19]
  00136	32 d1		 xor	 dl, cl
  00138	88 55 fa	 mov	 BYTE PTR __t$[ebp+18], dl
  0013b	84 c0		 test	 al, al
  0013d	74 07		 je	 SHORT $LN77@operator@3
  0013f	34 ea		 xor	 al, -22			; ffffffeaH
  00141	88 45 fb	 mov	 BYTE PTR __t$[ebp+19], al
  00144	eb 6c		 jmp	 SHORT $LN1@operator@3
$LN77@operator@3:
  00146	c6 45 fb ea	 mov	 BYTE PTR __t$[ebp+19], -22 ; ffffffeaH
  0014a	eb 66		 jmp	 SHORT $LN1@operator@3
$LN78@operator@3:
  0014c	88 4d fa	 mov	 BYTE PTR __t$[ebp+18], cl
  0014f	eb 61		 jmp	 SHORT $LN1@operator@3
$LN79@operator@3:
  00151	c6 45 f9 ec	 mov	 BYTE PTR __t$[ebp+17], -20 ; ffffffecH
  00155	eb 5b		 jmp	 SHORT $LN1@operator@3
$LN80@operator@3:
  00157	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+16], -19 ; ffffffedH
  0015b	eb 55		 jmp	 SHORT $LN1@operator@3
$LN82@operator@3:
  0015d	88 4d f6	 mov	 BYTE PTR __t$[ebp+14], cl
  00160	eb 50		 jmp	 SHORT $LN1@operator@3
$LN83@operator@3:
  00162	c6 45 f5 ec	 mov	 BYTE PTR __t$[ebp+13], -20 ; ffffffecH
  00166	eb 4a		 jmp	 SHORT $LN1@operator@3
$LN84@operator@3:
  00168	c6 45 f4 ed	 mov	 BYTE PTR __t$[ebp+12], -19 ; ffffffedH
  0016c	eb 44		 jmp	 SHORT $LN1@operator@3
$LN85@operator@3:
  0016e	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+11], -22 ; ffffffeaH
  00172	eb 3e		 jmp	 SHORT $LN1@operator@3
$LN86@operator@3:
  00174	88 4d f2	 mov	 BYTE PTR __t$[ebp+10], cl
  00177	eb 39		 jmp	 SHORT $LN1@operator@3
$LN87@operator@3:
  00179	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+9], -20 ; ffffffecH
  0017d	eb 33		 jmp	 SHORT $LN1@operator@3
$LN88@operator@3:
  0017f	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  00183	eb 2d		 jmp	 SHORT $LN1@operator@3
$LN89@operator@3:
  00185	c6 45 ef ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  00189	eb 27		 jmp	 SHORT $LN1@operator@3
$LN90@operator@3:
  0018b	88 4d ee	 mov	 BYTE PTR __t$[ebp+6], cl
  0018e	eb 22		 jmp	 SHORT $LN1@operator@3
$LN91@operator@3:
  00190	c6 45 ed ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  00194	eb 1c		 jmp	 SHORT $LN1@operator@3
$LN92@operator@3:
  00196	c6 45 ec ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  0019a	eb 16		 jmp	 SHORT $LN1@operator@3
$LN93@operator@3:
  0019c	c6 45 eb ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  001a0	eb 10		 jmp	 SHORT $LN1@operator@3
$LN94@operator@3:
  001a2	c6 45 ea eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  001a6	eb 0a		 jmp	 SHORT $LN1@operator@3
$LN95@operator@3:
  001a8	c6 45 e9 ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  001ac	eb 04		 jmp	 SHORT $LN1@operator@3
$LN96@operator@3:
  001ae	c6 45 e8 ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@operator@3:
  001b2	6a 03		 push	 3
  001b4	8d 45 e8	 lea	 eax, DWORD PTR __t$[ebp]
  001b7	c6 45 f7 00	 mov	 BYTE PTR __t$[ebp+15], 0
  001bb	5a		 pop	 edx
$LL104@operator@3:
  001bc	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001c2	83 c0 04	 add	 eax, 4
  001c5	4a		 dec	 edx
  001c6	75 f4		 jne	 SHORT $LL104@operator@3
  001c8	6a 0c		 push	 12			; 0000000cH
  001ca	58		 pop	 eax
$LL101@operator@3:
  001cb	8b c8		 mov	 ecx, eax
  001cd	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  001d3	79 05		 jns	 SHORT $LN115@operator@3
  001d5	49		 dec	 ecx
  001d6	83 c9 fc	 or	 ecx, -4			; fffffffcH
  001d9	41		 inc	 ecx
$LN115@operator@3:
  001da	b2 ed		 mov	 dl, -19			; ffffffedH
  001dc	2a d1		 sub	 dl, cl
  001de	30 54 05 e8	 xor	 BYTE PTR __t$[ebp+eax], dl
  001e2	40		 inc	 eax
  001e3	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  001e6	7c e3		 jl	 SHORT $LL101@operator@3
  001e8	8b cf		 mov	 ecx, edi
  001ea	8d 75 e8	 lea	 esi, DWORD PTR __t$[ebp]
  001ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL111@operator@3:
  001f3	8a 08		 mov	 cl, BYTE PTR [eax]
  001f5	3a 0e		 cmp	 cl, BYTE PTR [esi]
  001f7	75 1a		 jne	 SHORT $LN112@operator@3
  001f9	84 c9		 test	 cl, cl
  001fb	74 12		 je	 SHORT $LN113@operator@3
  001fd	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00200	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  00203	75 0e		 jne	 SHORT $LN112@operator@3
  00205	83 c0 02	 add	 eax, 2
  00208	83 c6 02	 add	 esi, 2
  0020b	84 c9		 test	 cl, cl
  0020d	75 e4		 jne	 SHORT $LL111@operator@3
$LN113@operator@3:
  0020f	33 c0		 xor	 eax, eax
  00211	eb 05		 jmp	 SHORT $LN114@operator@3
$LN112@operator@3:
  00213	1b c0		 sbb	 eax, eax
  00215	83 d8 ff	 sbb	 eax, -1
$LN114@operator@3:
  00218	33 c9		 xor	 ecx, ecx
  0021a	85 c0		 test	 eax, eax
  0021c	0f 94 c0	 sete	 al

; 148  : }

  0021f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00222	5f		 pop	 edi
  00223	33 cd		 xor	 ecx, ebp
  00225	5e		 pop	 esi
  00226	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0022b	c9		 leave
  0022c	c3		 ret	 0
??$?8$0BA@@@YA_NABVioHashString@@AAY0BA@$$CBD@Z ENDP	; operator==<16>
_TEXT	ENDS
PUBLIC	?IsEmpty@ioComplexStringPrinter@@QBE_NXZ	; ioComplexStringPrinter::IsEmpty
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iocomplexstringprinter.h
;	COMDAT ?IsEmpty@ioComplexStringPrinter@@QBE_NXZ
_TEXT	SEGMENT
?IsEmpty@ioComplexStringPrinter@@QBE_NXZ PROC		; ioComplexStringPrinter::IsEmpty, COMDAT
; _this$ = ecx

; 124  : 	inline bool IsEmpty() const { return m_vPieceList.empty(); }

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00003	2b 41 10	 sub	 eax, DWORD PTR [ecx+16]
  00006	f7 d8		 neg	 eax
  00008	1b c0		 sbb	 eax, eax
  0000a	40		 inc	 eax
  0000b	c3		 ret	 0
?IsEmpty@ioComplexStringPrinter@@QBE_NXZ ENDP		; ioComplexStringPrinter::IsEmpty
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
EXTRN	__imp_?AddRenderFrame@ioButton@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\selectmaterialitembtn.cpp
;	COMDAT ?AddRenderFrame@SelectMaterialItemBtn@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
_TEXT	SEGMENT
_this$GSCopy$ = -28					; size = 4
__t$509060 = -24					; size = 13
__$ArrayPad$ = -4					; size = 4
_szType$ = 8						; size = 4
_pFrame$ = 12						; size = 4
?AddRenderFrame@SelectMaterialItemBtn@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z PROC ; SelectMaterialItemBtn::AddRenderFrame, COMDAT
; _this$ = ecx

; 42   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 0c	 mov	 ebx, DWORD PTR _pFrame$[ebp]
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b 7d 08	 mov	 edi, DWORD PTR _szType$[ebp]

; 43   : 	if( szType == "material_frm" )

  00019	6a 03		 push	 3
  0001b	89 4d e4	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  0001e	c7 45 e8 80 8d
	9f 8f		 mov	 DWORD PTR __t$509060[ebp], -1885368960 ; 8f9f8d80H
  00025	c7 45 ec 9f 85
	8a 86		 mov	 DWORD PTR __t$509060[ebp+4], -2037742177 ; 868a859fH
  0002c	c7 45 f0 b2 8a
	99 87		 mov	 DWORD PTR __t$509060[ebp+8], -2019980622 ; 87998ab2H
  00033	8d 45 e8	 lea	 eax, DWORD PTR __t$509060[ebp]
  00036	c6 45 f4 00	 mov	 BYTE PTR __t$509060[ebp+12], 0
  0003a	59		 pop	 ecx
$LL111@AddRenderF:
  0003b	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00041	83 c0 04	 add	 eax, 4
  00044	49		 dec	 ecx
  00045	75 f4		 jne	 SHORT $LL111@AddRenderF
  00047	8b cf		 mov	 ecx, edi
  00049	8d 75 e8	 lea	 esi, DWORD PTR __t$509060[ebp]
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL118@AddRenderF:
  00052	8a 08		 mov	 cl, BYTE PTR [eax]
  00054	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00056	75 1a		 jne	 SHORT $LN119@AddRenderF
  00058	84 c9		 test	 cl, cl
  0005a	74 12		 je	 SHORT $LN120@AddRenderF
  0005c	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  0005f	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  00062	75 0e		 jne	 SHORT $LN119@AddRenderF
  00064	83 c0 02	 add	 eax, 2
  00067	83 c6 02	 add	 esi, 2
  0006a	84 c9		 test	 cl, cl
  0006c	75 e4		 jne	 SHORT $LL118@AddRenderF
$LN120@AddRenderF:
  0006e	33 c0		 xor	 eax, eax
  00070	eb 05		 jmp	 SHORT $LN121@AddRenderF
$LN119@AddRenderF:
  00072	1b c0		 sbb	 eax, eax
  00074	83 d8 ff	 sbb	 eax, -1
$LN121@AddRenderF:
  00077	85 c0		 test	 eax, eax
  00079	75 23		 jne	 SHORT $LN3@AddRenderF

; 44   : 	{
; 45   : 		SAFEDELETE( m_pMaterialFrm );

  0007b	8b 75 e4	 mov	 esi, DWORD PTR _this$GSCopy$[ebp]
  0007e	8b 8e 2c 02 00
	00		 mov	 ecx, DWORD PTR [esi+556]
  00084	85 c9		 test	 ecx, ecx
  00086	74 0e		 je	 SHORT $LN2@AddRenderF
  00088	8b 01		 mov	 eax, DWORD PTR [ecx]
  0008a	6a 01		 push	 1
  0008c	ff 50 40	 call	 DWORD PTR [eax+64]
  0008f	83 a6 2c 02 00
	00 00		 and	 DWORD PTR [esi+556], 0
$LN2@AddRenderF:

; 46   : 		m_pMaterialFrm = pFrame;

  00096	89 9e 2c 02 00
	00		 mov	 DWORD PTR [esi+556], ebx

; 47   : 	}
; 48   : 	else

  0009c	eb 0b		 jmp	 SHORT $LN1@AddRenderF
$LN3@AddRenderF:

; 49   : 		ioButton::AddRenderFrame( szType, pFrame );

  0009e	8b 4d e4	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  000a1	53		 push	 ebx
  000a2	57		 push	 edi
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddRenderFrame@ioButton@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
$LN1@AddRenderF:

; 50   : }

  000a9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	33 cd		 xor	 ecx, ebp
  000b0	5b		 pop	 ebx
  000b1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b6	c9		 leave
  000b7	c2 08 00	 ret	 8
?AddRenderFrame@SelectMaterialItemBtn@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z ENDP ; SelectMaterialItemBtn::AddRenderFrame
_TEXT	ENDS
PUBLIC	_pImage$GSCopy$
PUBLIC	_this$GSCopy$
PUBLIC	_szType$GSCopy$
PUBLIC	__$ArrayPad$
EXTRN	__imp_?AddRenderImage@ioButton@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ?AddRenderImage@SelectMaterialItemBtn@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
_TEXT	SEGMENT
_pImage$GSCopy$ = -36					; size = 4
_this$GSCopy$ = -32					; size = 4
_szType$GSCopy$ = -28					; size = 4
__t$509331 = -24					; size = 16
__t$509206 = -24					; size = 15
__$ArrayPad$ = -4					; size = 4
_szType$ = 8						; size = 4
_pImage$ = 12						; size = 4
?AddRenderImage@SelectMaterialItemBtn@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z PROC ; SelectMaterialItemBtn::AddRenderImage, COMDAT
; _this$ = ecx

; 52   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _szType$[ebp]
  00013	56		 push	 esi
  00014	57		 push	 edi

; 59   : 	{
; 60   : 		SAFEDELETE( m_pIconBackImg );

  00015	89 45 e4	 mov	 DWORD PTR _szType$GSCopy$[ebp], eax
  00018	8b 45 0c	 mov	 eax, DWORD PTR _pImage$[ebp]
  0001b	6a 03		 push	 3
  0001d	89 4d e0	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  00020	89 45 dc	 mov	 DWORD PTR _pImage$GSCopy$[ebp], eax
  00023	c7 45 e8 80 8d
	9f 8f		 mov	 DWORD PTR __t$509206[ebp], -1885368960 ; 8f9f8d80H
  0002a	c7 45 ec 9f 85
	8a 86		 mov	 DWORD PTR __t$509206[ebp+4], -2037742177 ; 868a859fH
  00031	c7 45 f0 b2 85
	86 8b		 mov	 DWORD PTR __t$509206[ebp+8], -1954118222 ; 8b8685b2H
  00038	66 c7 45 f4 8a
	89		 mov	 WORD PTR __t$509206[ebp+12], 35210 ; 0000898aH
  0003e	8d 45 e8	 lea	 eax, DWORD PTR __t$509206[ebp]
  00041	c6 45 f6 00	 mov	 BYTE PTR __t$509206[ebp+14], 0
  00045	59		 pop	 ecx
  00046	bf ed ec eb ea	 mov	 edi, -353637139		; eaebecedH
$LL116@AddRenderI:

; 53   : 	if( szType == "material_image" )

  0004b	31 38		 xor	 DWORD PTR [eax], edi
  0004d	83 c0 04	 add	 eax, 4
  00050	49		 dec	 ecx
  00051	75 f8		 jne	 SHORT $LL116@AddRenderI
  00053	6a 0c		 push	 12			; 0000000cH
  00055	58		 pop	 eax
$LL113@AddRenderI:
  00056	8b c8		 mov	 ecx, eax
  00058	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0005e	79 05		 jns	 SHORT $LN242@AddRenderI
  00060	49		 dec	 ecx
  00061	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00064	41		 inc	 ecx
$LN242@AddRenderI:
  00065	b2 ed		 mov	 dl, -19			; ffffffedH
  00067	2a d1		 sub	 dl, cl
  00069	30 54 05 e8	 xor	 BYTE PTR __t$509206[ebp+eax], dl
  0006d	40		 inc	 eax
  0006e	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  00071	7c e3		 jl	 SHORT $LL113@AddRenderI
  00073	8b 4d e4	 mov	 ecx, DWORD PTR _szType$GSCopy$[ebp]
  00076	8d 75 e8	 lea	 esi, DWORD PTR __t$509206[ebp]
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL234@AddRenderI:
  0007f	8a 08		 mov	 cl, BYTE PTR [eax]
  00081	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00083	75 1a		 jne	 SHORT $LN235@AddRenderI
  00085	84 c9		 test	 cl, cl
  00087	74 12		 je	 SHORT $LN236@AddRenderI
  00089	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  0008c	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  0008f	75 0e		 jne	 SHORT $LN235@AddRenderI
  00091	83 c0 02	 add	 eax, 2
  00094	83 c6 02	 add	 esi, 2
  00097	84 c9		 test	 cl, cl
  00099	75 e4		 jne	 SHORT $LL234@AddRenderI
$LN236@AddRenderI:
  0009b	33 c0		 xor	 eax, eax
  0009d	eb 05		 jmp	 SHORT $LN237@AddRenderI
$LN235@AddRenderI:
  0009f	1b c0		 sbb	 eax, eax
  000a1	83 d8 ff	 sbb	 eax, -1
$LN237@AddRenderI:
  000a4	85 c0		 test	 eax, eax
  000a6	75 29		 jne	 SHORT $LN233@AddRenderI

; 54   : 	{
; 55   : 		SAFEDELETE( m_pMaterialImg );

  000a8	8b 75 e0	 mov	 esi, DWORD PTR _this$GSCopy$[ebp]
  000ab	8b 8e 30 02 00
	00		 mov	 ecx, DWORD PTR [esi+560]
  000b1	85 c9		 test	 ecx, ecx
  000b3	74 0e		 je	 SHORT $LN5@AddRenderI
  000b5	8b 01		 mov	 eax, DWORD PTR [ecx]
  000b7	6a 01		 push	 1
  000b9	ff 50 40	 call	 DWORD PTR [eax+64]
  000bc	83 a6 30 02 00
	00 00		 and	 DWORD PTR [esi+560], 0
$LN5@AddRenderI:

; 56   : 		m_pMaterialImg = pImage;

  000c3	8b 45 dc	 mov	 eax, DWORD PTR _pImage$GSCopy$[ebp]
  000c6	89 86 30 02 00
	00		 mov	 DWORD PTR [esi+560], eax
  000cc	e9 b4 00 00 00	 jmp	 $LN1@AddRenderI
$LN233@AddRenderI:

; 57   : 	}
; 58   : 	else if( szType == "icon_back_image" )

  000d1	6a 03		 push	 3
  000d3	c7 45 e8 84 8f
	84 84		 mov	 DWORD PTR __t$509331[ebp], -2071687292 ; 84848f84H
  000da	c7 45 ec b2 8e
	8a 89		 mov	 DWORD PTR __t$509331[ebp+4], -1987408206 ; 898a8eb2H
  000e1	c7 45 f0 86 b3
	82 87		 mov	 DWORD PTR __t$509331[ebp+8], -2021477498 ; 8782b386H
  000e8	8d 45 e8	 lea	 eax, DWORD PTR __t$509331[ebp]
  000eb	c7 45 f4 8c 8b
	8e 00		 mov	 DWORD PTR __t$509331[ebp+12], 9341836 ; 008e8b8cH
  000f2	59		 pop	 ecx
$LL222@AddRenderI:
  000f3	31 38		 xor	 DWORD PTR [eax], edi
  000f5	83 c0 04	 add	 eax, 4
  000f8	49		 dec	 ecx
  000f9	75 f8		 jne	 SHORT $LL222@AddRenderI
  000fb	6a 0c		 push	 12			; 0000000cH
  000fd	58		 pop	 eax
$LL219@AddRenderI:
  000fe	8b c8		 mov	 ecx, eax
  00100	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00106	79 05		 jns	 SHORT $LN243@AddRenderI
  00108	49		 dec	 ecx
  00109	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0010c	41		 inc	 ecx
$LN243@AddRenderI:
  0010d	b2 ed		 mov	 dl, -19			; ffffffedH
  0010f	2a d1		 sub	 dl, cl
  00111	30 54 05 e8	 xor	 BYTE PTR __t$509331[ebp+eax], dl
  00115	40		 inc	 eax
  00116	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  00119	7c e3		 jl	 SHORT $LL219@AddRenderI
  0011b	8b 4d e4	 mov	 ecx, DWORD PTR _szType$GSCopy$[ebp]
  0011e	8d 75 e8	 lea	 esi, DWORD PTR __t$509331[ebp]
  00121	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL238@AddRenderI:
  00127	8a 08		 mov	 cl, BYTE PTR [eax]
  00129	3a 0e		 cmp	 cl, BYTE PTR [esi]
  0012b	75 1a		 jne	 SHORT $LN239@AddRenderI
  0012d	84 c9		 test	 cl, cl
  0012f	74 12		 je	 SHORT $LN240@AddRenderI
  00131	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00134	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  00137	75 0e		 jne	 SHORT $LN239@AddRenderI
  00139	83 c0 02	 add	 eax, 2
  0013c	83 c6 02	 add	 esi, 2
  0013f	84 c9		 test	 cl, cl
  00141	75 e4		 jne	 SHORT $LL238@AddRenderI
$LN240@AddRenderI:
  00143	33 c0		 xor	 eax, eax
  00145	eb 05		 jmp	 SHORT $LN241@AddRenderI
$LN239@AddRenderI:
  00147	1b c0		 sbb	 eax, eax
  00149	83 d8 ff	 sbb	 eax, -1
$LN241@AddRenderI:
  0014c	85 c0		 test	 eax, eax
  0014e	75 26		 jne	 SHORT $LN3@AddRenderI

; 59   : 	{
; 60   : 		SAFEDELETE( m_pIconBackImg );

  00150	8b 75 e0	 mov	 esi, DWORD PTR _this$GSCopy$[ebp]
  00153	8b 8e 3c 02 00
	00		 mov	 ecx, DWORD PTR [esi+572]
  00159	85 c9		 test	 ecx, ecx
  0015b	74 0e		 je	 SHORT $LN2@AddRenderI
  0015d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0015f	6a 01		 push	 1
  00161	ff 50 40	 call	 DWORD PTR [eax+64]
  00164	83 a6 3c 02 00
	00 00		 and	 DWORD PTR [esi+572], 0
$LN2@AddRenderI:

; 61   : 		m_pIconBackImg = pImage;

  0016b	8b 45 dc	 mov	 eax, DWORD PTR _pImage$GSCopy$[ebp]
  0016e	89 86 3c 02 00
	00		 mov	 DWORD PTR [esi+572], eax

; 62   : 	}
; 63   : 	else

  00174	eb 0f		 jmp	 SHORT $LN1@AddRenderI
$LN3@AddRenderI:

; 64   : 	{
; 65   : 		ioButton::AddRenderImage( szType, pImage );	

  00176	ff 75 dc	 push	 DWORD PTR _pImage$GSCopy$[ebp]
  00179	8b 4d e0	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  0017c	ff 75 e4	 push	 DWORD PTR _szType$GSCopy$[ebp]
  0017f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddRenderImage@ioButton@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
$LN1@AddRenderI:

; 66   : 	}	
; 67   : }

  00185	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00188	5f		 pop	 edi
  00189	33 cd		 xor	 ecx, ebp
  0018b	5e		 pop	 esi
  0018c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00191	c9		 leave
  00192	c2 08 00	 ret	 8
?AddRenderImage@SelectMaterialItemBtn@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z ENDP ; SelectMaterialItemBtn::AddRenderImage
_TEXT	ENDS
PUBLIC	__real@3f400000
EXTRN	?PrintFullText@ioComplexStringPrinter@@QAEXMMW4TextAlignType@@E@Z:PROC ; ioComplexStringPrinter::PrintFullText
EXTRN	__imp_?IsOver@ioWnd@@QBE_NXZ:PROC
EXTRN	__imp_?GetDerivedPosY@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?GetDerivedPosX@ioWnd@@QBEHXZ:PROC
;	COMDAT __real@3f400000
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
CONST	SEGMENT
__real@3f400000 DD 03f400000r			; 0.75
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\selectmaterialitembtn.cpp
CONST	ENDS
;	COMDAT ?OnRender@SelectMaterialItemBtn@@MAEXXZ
_TEXT	SEGMENT
_iYPos$ = -4						; size = 4
?OnRender@SelectMaterialItemBtn@@MAEXXZ PROC		; SelectMaterialItemBtn::OnRender, COMDAT
; _this$ = ecx

; 87   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	8b f1		 mov	 esi, ecx

; 88   : 	int iXPos = GetDerivedPosX();

  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosX@ioWnd@@QBEHXZ

; 89   : 	int iYPos = GetDerivedPosY();

  0000f	8b ce		 mov	 ecx, esi
  00011	8b d8		 mov	 ebx, eax
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosY@ioWnd@@QBEHXZ

; 90   : 			
; 91   : 	if ( m_iCode <= 0)

  00019	33 ff		 xor	 edi, edi
  0001b	89 45 fc	 mov	 DWORD PTR _iYPos$[ebp], eax
  0001e	39 be fc 01 00
	00		 cmp	 DWORD PTR [esi+508], edi
  00024	0f 8f 9c 00 00
	00		 jg	 $LN10@OnRender

; 92   : 	{		
; 93   : 		if( m_pMaterialImg )

  0002a	39 be 30 02 00
	00		 cmp	 DWORD PTR [esi+560], edi
  00030	74 2a		 je	 SHORT $LN9@OnRender

; 94   : 			m_pMaterialImg->Render( iXPos, iYPos );

  00032	8b 8e 30 02 00
	00		 mov	 ecx, DWORD PTR [esi+560]
  00038	66 0f 6e 45 fc	 movd	 xmm0, DWORD PTR _iYPos$[ebp]
  0003d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0003f	57		 push	 edi
  00040	57		 push	 edi
  00041	57		 push	 edi
  00042	57		 push	 edi
  00043	51		 push	 ecx
  00044	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00047	51		 push	 ecx
  00048	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0004e	0f 57 c0	 xorps	 xmm0, xmm0
  00051	f3 0f 2a c3	 cvtsi2ss xmm0, ebx
  00055	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005a	ff 10		 call	 DWORD PTR [eax]
$LN9@OnRender:

; 95   : 
; 96   : 		if ( m_nRecommandCode > 0 )

  0005c	39 be 08 02 00
	00		 cmp	 DWORD PTR [esi+520], edi
  00062	0f 8e 53 01 00
	00		 jle	 $LN17@OnRender

; 97   : 		{
; 98   : 			if ( m_pRecommandMaterialImg )

  00068	39 be 34 02 00
	00		 cmp	 DWORD PTR [esi+564], edi
  0006e	0f 84 47 01 00
	00		 je	 $LN17@OnRender

; 99   : 			{
; 100  : 				m_pRecommandMaterialImg->SetScale( 0.75f );

  00074	8b 8e 34 02 00
	00		 mov	 ecx, DWORD PTR [esi+564]
  0007a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f400000
  00082	8b 01		 mov	 eax, DWORD PTR [ecx]
  00084	51		 push	 ecx
  00085	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008a	ff 50 1c	 call	 DWORD PTR [eax+28]

; 101  : 				m_pRecommandMaterialImg->Render( iXPos+32, iYPos+32, UI_RENDER_GRAY, TFO_BILINEAR );

  0008d	8b 8e 34 02 00
	00		 mov	 ecx, DWORD PTR [esi+564]
  00093	8b 55 fc	 mov	 edx, DWORD PTR _iYPos$[ebp]
  00096	8b 01		 mov	 eax, DWORD PTR [ecx]
  00098	57		 push	 edi
  00099	57		 push	 edi
  0009a	6a 01		 push	 1
  0009c	6a 02		 push	 2
  0009e	83 c2 20	 add	 edx, 32			; 00000020H
  000a1	0f 57 c0	 xorps	 xmm0, xmm0
  000a4	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000a8	51		 push	 ecx
  000a9	51		 push	 ecx
  000aa	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000b0	8d 53 20	 lea	 edx, DWORD PTR [ebx+32]
  000b3	0f 57 c0	 xorps	 xmm0, xmm0
  000b6	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bf	ff 10		 call	 DWORD PTR [eax]

; 102  : 			}
; 103  : 		}
; 104  : 	}
; 105  : 	else

  000c1	e9 f5 00 00 00	 jmp	 $LN17@OnRender
$LN10@OnRender:

; 106  : 	{
; 107  : 		if( m_pMaterialFrm )

  000c6	39 be 2c 02 00
	00		 cmp	 DWORD PTR [esi+556], edi
  000cc	74 2a		 je	 SHORT $LN5@OnRender

; 108  : 			m_pMaterialFrm->Render( iXPos, iYPos );

  000ce	8b 8e 2c 02 00
	00		 mov	 ecx, DWORD PTR [esi+556]
  000d4	66 0f 6e 45 fc	 movd	 xmm0, DWORD PTR _iYPos$[ebp]
  000d9	8b 01		 mov	 eax, DWORD PTR [ecx]
  000db	57		 push	 edi
  000dc	57		 push	 edi
  000dd	57		 push	 edi
  000de	57		 push	 edi
  000df	51		 push	 ecx
  000e0	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000e3	51		 push	 ecx
  000e4	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000ea	0f 57 c0	 xorps	 xmm0, xmm0
  000ed	f3 0f 2a c3	 cvtsi2ss xmm0, ebx
  000f1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f6	ff 10		 call	 DWORD PTR [eax]
$LN5@OnRender:

; 109  : 
; 110  : 		if( m_pIconBackImg )

  000f8	39 be 3c 02 00
	00		 cmp	 DWORD PTR [esi+572], edi
  000fe	74 4d		 je	 SHORT $LN4@OnRender

; 111  : 		{
; 112  : 			m_pIconBackImg->SetScale( 0.75f );

  00100	8b 8e 3c 02 00
	00		 mov	 ecx, DWORD PTR [esi+572]
  00106	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f400000
  0010e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00110	51		 push	 ecx
  00111	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00116	ff 50 1c	 call	 DWORD PTR [eax+28]

; 113  : 			m_pIconBackImg->Render( iXPos+32, iYPos+32, UI_RENDER_MULTIPLY, TFO_BILINEAR );

  00119	8b 8e 3c 02 00
	00		 mov	 ecx, DWORD PTR [esi+572]
  0011f	8b 55 fc	 mov	 edx, DWORD PTR _iYPos$[ebp]
  00122	8b 01		 mov	 eax, DWORD PTR [ecx]
  00124	57		 push	 edi
  00125	57		 push	 edi
  00126	6a 01		 push	 1
  00128	6a 08		 push	 8
  0012a	83 c2 20	 add	 edx, 32			; 00000020H
  0012d	0f 57 c0	 xorps	 xmm0, xmm0
  00130	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00134	51		 push	 ecx
  00135	51		 push	 ecx
  00136	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0013c	8d 53 20	 lea	 edx, DWORD PTR [ebx+32]
  0013f	0f 57 c0	 xorps	 xmm0, xmm0
  00142	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00146	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014b	ff 10		 call	 DWORD PTR [eax]
$LN4@OnRender:

; 114  : 		}
; 115  : 
; 116  : 		if( m_pIconImg )

  0014d	39 be 38 02 00
	00		 cmp	 DWORD PTR [esi+568], edi
  00153	74 4c		 je	 SHORT $LN3@OnRender

; 117  : 		{
; 118  : 			m_pIconImg->SetScale( 0.75f );

  00155	8b 8e 38 02 00
	00		 mov	 ecx, DWORD PTR [esi+568]
  0015b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f400000
  00163	8b 01		 mov	 eax, DWORD PTR [ecx]
  00165	51		 push	 ecx
  00166	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0016b	ff 50 1c	 call	 DWORD PTR [eax+28]

; 119  : 			m_pIconImg->Render( iXPos+32, iYPos+32, UI_RENDER_NORMAL, TFO_BILINEAR );

  0016e	8b 8e 38 02 00
	00		 mov	 ecx, DWORD PTR [esi+568]
  00174	8b 55 fc	 mov	 edx, DWORD PTR _iYPos$[ebp]
  00177	8b 01		 mov	 eax, DWORD PTR [ecx]
  00179	57		 push	 edi
  0017a	57		 push	 edi
  0017b	6a 01		 push	 1
  0017d	57		 push	 edi
  0017e	83 c2 20	 add	 edx, 32			; 00000020H
  00181	0f 57 c0	 xorps	 xmm0, xmm0
  00184	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00188	51		 push	 ecx
  00189	51		 push	 ecx
  0018a	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00190	8d 53 20	 lea	 edx, DWORD PTR [ebx+32]
  00193	0f 57 c0	 xorps	 xmm0, xmm0
  00196	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0019a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019f	ff 10		 call	 DWORD PTR [eax]
$LN3@OnRender:

; 120  : 		}
; 121  : 
; 122  : 		if( IsOver() )

  001a1	8b ce		 mov	 ecx, esi
  001a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsOver@ioWnd@@QBE_NXZ
  001a9	84 c0		 test	 al, al
  001ab	74 0e		 je	 SHORT $LN17@OnRender

; 123  : 			OnDrawOvered( iXPos, iYPos );

  001ad	ff 75 fc	 push	 DWORD PTR _iYPos$[ebp]
  001b0	8b 06		 mov	 eax, DWORD PTR [esi]
  001b2	53		 push	 ebx
  001b3	8b ce		 mov	 ecx, esi
  001b5	ff 90 34 01 00
	00		 call	 DWORD PTR [eax+308]
$LN17@OnRender:

; 124  : 	}
; 125  : 	
; 126  : 	if( !m_CountText.IsEmpty() )

  001bb	8b 8e 18 02 00
	00		 mov	 ecx, DWORD PTR [esi+536]
  001c1	3b 8e 1c 02 00
	00		 cmp	 ecx, DWORD PTR [esi+540]
  001c7	74 36		 je	 SHORT $LN1@OnRender

; 127  : 		m_CountText.PrintFullText( iXPos+32, iYPos+42, TAT_CENTER );

  001c9	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  001cc	68 ff 00 00 00	 push	 255			; 000000ffH
  001d1	6a 01		 push	 1
  001d3	51		 push	 ecx
  001d4	0f 57 c0	 xorps	 xmm0, xmm0
  001d7	51		 push	 ecx
  001d8	83 c0 2a	 add	 eax, 42			; 0000002aH
  001db	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  001df	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  001e5	83 c3 20	 add	 ebx, 32			; 00000020H
  001e8	0f 57 c0	 xorps	 xmm0, xmm0
  001eb	f3 0f 2a c3	 cvtsi2ss xmm0, ebx
  001ef	8d 8e 0c 02 00
	00		 lea	 ecx, DWORD PTR [esi+524]
  001f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001fa	e8 00 00 00 00	 call	 ?PrintFullText@ioComplexStringPrinter@@QAEXMMW4TextAlignType@@E@Z ; ioComplexStringPrinter::PrintFullText
$LN1@OnRender:
  001ff	5f		 pop	 edi
  00200	5e		 pop	 esi
  00201	5b		 pop	 ebx

; 128  : }

  00202	c9		 leave
  00203	c3		 ret	 0
?OnRender@SelectMaterialItemBtn@@MAEXXZ ENDP		; SelectMaterialItemBtn::OnRender
_TEXT	ENDS
END
