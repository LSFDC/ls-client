; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\GUI\NamedTitleBtn.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_7NamedTitleBtn@@6B@				; NamedTitleBtn::`vftable'
PUBLIC	??0NamedTitleBtn@@QAE@XZ			; NamedTitleBtn::NamedTitleBtn
PUBLIC	??_R4NamedTitleBtn@@6B@				; NamedTitleBtn::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNamedTitleBtn@@@8			; NamedTitleBtn `RTTI Type Descriptor'
PUBLIC	??_R3NamedTitleBtn@@8				; NamedTitleBtn::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NamedTitleBtn@@8				; NamedTitleBtn::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NamedTitleBtn@@8			; NamedTitleBtn::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioButton@@8			; ioButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioButton@@@8				; ioButton `RTTI Type Descriptor'
PUBLIC	??_R3ioButton@@8				; ioButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioButton@@8				; ioButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioWnd@@8				; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioWnd@@@8				; ioWnd `RTTI Type Descriptor'
PUBLIC	??_R3ioWnd@@8					; ioWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioWnd@@8					; ioWnd::`RTTI Base Class Array'
PUBLIC	?AddRenderFrame@NamedTitleBtn@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z ; NamedTitleBtn::AddRenderFrame
PUBLIC	?ParseExtraInfo@NamedTitleBtn@@UAEXAAVioXMLElement@@@Z ; NamedTitleBtn::ParseExtraInfo
PUBLIC	?OnRender@NamedTitleBtn@@MAEXXZ			; NamedTitleBtn::OnRender
PUBLIC	?OnProcess@NamedTitleBtn@@MAEXM@Z		; NamedTitleBtn::OnProcess
EXTRN	__imp_??0ioButton@@QAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?AddRenderImage@ioButton@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC ; ioButton::AddRenderImage
EXTRN	?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z:PROC ; ioWnd::AddTooltipHelp
EXTRN	?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC ; ioWnd::AddNamedRenderImage
EXTRN	?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z:PROC ; ioWnd::RemoveNamedRenderImage
EXTRN	?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z:PROC ; ioWnd::GetNamedRenderImage
EXTRN	?SetWindowAlpha@ioButton@@UAEXH@Z:PROC		; ioButton::SetWindowAlpha
EXTRN	?SetActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetActive
EXTRN	?SetInActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetInActive
EXTRN	?ClearElementImageList@ioWnd@@UAEXXZ:PROC	; ioWnd::ClearElementImageList
EXTRN	?SetSize@ioWnd@@UAEXHH@Z:PROC			; ioWnd::SetSize
EXTRN	?SetPositionToDefault@ioWnd@@UAEXHH_N0@Z:PROC	; ioWnd::SetPositionToDefault
EXTRN	?IsNeedProcess@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsNeedProcess
EXTRN	?IsCanMouseReaction@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsCanMouseReaction
EXTRN	?AddChild@ioWnd@@UAEXPAV1@@Z:PROC		; ioWnd::AddChild
EXTRN	?DeleteChild@ioWnd@@UAEXK@Z:PROC		; ioWnd::DeleteChild
EXTRN	?DeleteAllChild@ioWnd@@UAEXXZ:PROC		; ioWnd::DeleteAllChild
EXTRN	?OnRenderShowAndHide@ioWnd@@MAE_NXZ:PROC	; ioWnd::OnRenderShowAndHide
EXTRN	?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z:PROC ; ioWnd::OnRenderShowAndHideByDefault
EXTRN	?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByTop
EXTRN	?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByDown
EXTRN	?OnRenderAfterChild@ioWnd@@MAEXXZ:PROC		; ioWnd::OnRenderAfterChild
EXTRN	?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z:PROC	; ioWnd::OnMouseProcess
EXTRN	?CheckFrameReSize@ioButton@@MAEXHHHH@Z:PROC	; ioButton::CheckFrameReSize
EXTRN	?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z:PROC ; ioWnd::RenderImageList
EXTRN	?iwm_create@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_create
EXTRN	?iwm_destroy@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_destroy
EXTRN	?iwm_lbuttondown@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_lbuttondown
EXTRN	?iwm_lbuttonup@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_lbuttonup
EXTRN	?iwm_lbuttonDBLCLK@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_lbuttonDBLCLK
EXTRN	?iwm_rbuttondown@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_rbuttondown
EXTRN	?iwm_rbuttonup@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_rbuttonup
EXTRN	?iwm_command@ioWnd@@UAEXPAV1@HK@Z:PROC		; ioWnd::iwm_command
EXTRN	?iwm_mouseover@ioButton@@UAEXABVioMouse@@@Z:PROC ; ioButton::iwm_mouseover
EXTRN	?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mousemove
EXTRN	?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mouseleave
EXTRN	?iwm_vscroll@ioWnd@@UAEXKH@Z:PROC		; ioWnd::iwm_vscroll
EXTRN	?iwm_wheel@ioWnd@@UAEXH@Z:PROC			; ioWnd::iwm_wheel
EXTRN	?iwm_show@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_show
EXTRN	?iwm_hide@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_hide
EXTRN	?iwm_esc@ioWnd@@UAE_NXZ:PROC			; ioWnd::iwm_esc
EXTRN	?iwm_spacebar@ioWnd@@UAE_NXZ:PROC		; ioWnd::iwm_spacebar
EXTRN	?iwm_gototop@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_gototop
EXTRN	?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragenter
EXTRN	?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragover
EXTRN	?iwm_dragleave@ioWnd@@UAEXXZ:PROC		; ioWnd::iwm_dragleave
EXTRN	?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z:PROC ; ioWnd::iwm_dropitem
EXTRN	?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z:PROC ; ioWnd::iwm_dropdone
EXTRN	?IsEXType@ioWnd@@UBE_NXZ:PROC			; ioWnd::IsEXType
EXTRN	?GetWndType@ioButton@@UBEKXZ:PROC		; ioButton::GetWndType
EXTRN	?RenderWnd@ioWnd@@UAEXXZ:PROC			; ioWnd::RenderWnd
EXTRN	?SetIDEX@ioWnd@@UAEXAAK_N@Z:PROC		; ioWnd::SetIDEX
EXTRN	?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC	; ioWnd::ParseXML
EXTRN	?GetHeaderFileName@ioButton@@UAEPBDXZ:PROC	; ioButton::GetHeaderFileName
EXTRN	?GetTemplateName@ioButton@@UAEPBDXZ:PROC	; ioButton::GetTemplateName
EXTRN	?GetDefClassName@ioButton@@UBEPBDXZ:PROC	; ioButton::GetDefClassName
EXTRN	?_Clone@ioButton@@UAEPAVioWnd@@XZ:PROC		; ioButton::_Clone
EXTRN	?Copy@ioButton@@UAEXPAVioWnd@@@Z:PROC		; ioButton::Copy
EXTRN	?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z:PROC	; ioWnd::Save
EXTRN	?SetSaveData@ioButton@@UAEXAAVioXMLElement@@@Z:PROC ; ioButton::SetSaveData
EXTRN	?SetPosX@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosX
EXTRN	?SetPosY@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosY
EXTRN	?SetWidth@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetWidth
EXTRN	?SetHeight@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetHeight
EXTRN	?GetNumFixedRenderFrame@ioButton@@UBEHXZ:PROC	; ioButton::GetNumFixedRenderFrame
EXTRN	?GetFixedRenderFrameType@ioButton@@UAEPBDH@Z:PROC ; ioButton::GetFixedRenderFrameType
EXTRN	?GetRenderFrame@ioButton@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioButton::GetRenderFrame
EXTRN	?GetNumFixedRenderImage@ioButton@@UBEHXZ:PROC	; ioButton::GetNumFixedRenderImage
EXTRN	?GetFixedRenderImageType@ioButton@@UAEPBDH@Z:PROC ; ioButton::GetFixedRenderImageType
EXTRN	?GetRenderImage@ioButton@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioButton::GetRenderImage
EXTRN	?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z:PROC ; ioWnd::AddEffect
EXTRN	?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z:PROC ; ioWnd::GetEffect
EXTRN	??_ENamedTitleBtn@@UAEPAXI@Z:PROC		; NamedTitleBtn::`vector deleting destructor'
EXTRN	?OnDrawNormal@ioButton@@MAEXHH@Z:PROC		; ioButton::OnDrawNormal
EXTRN	?OnDrawOvered@ioButton@@MAEXHH@Z:PROC		; ioButton::OnDrawOvered
EXTRN	?OnDrawOveredAdd@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawOveredAdd
EXTRN	?OnDrawPushed@ioButton@@MAEXHH@Z:PROC		; ioButton::OnDrawPushed
EXTRN	?OnDrawDisabled@ioButton@@MAEXHH@Z:PROC		; ioButton::OnDrawDisabled
EXTRN	?OnDrawExDisabledNormal@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawExDisabledNormal
EXTRN	?OnDrawExDisabledOvered@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawExDisabledOvered
EXTRN	?OnDrawExDisabledPushed@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawExDisabledPushed
EXTRN	?OnDrawBack@ioButton@@MAEXHH@Z:PROC		; ioButton::OnDrawBack
EXTRN	?OnDrawNormalList@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawNormalList
EXTRN	?OnDrawDisableList@ioButton@@MAEXHH@Z:PROC	; ioButton::OnDrawDisableList
;	COMDAT ??_R2ioWnd@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\namedtitlebtn.cpp
rdata$r	SEGMENT
??_R2ioWnd@@8 DD FLAT:??_R1A@?0A@EA@ioWnd@@8		; ioWnd::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioWnd@@8
rdata$r	SEGMENT
??_R3ioWnd@@8 DD 00H					; ioWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioWnd@@@8
_DATA	SEGMENT
??_R0?AVioWnd@@@8 DD FLAT:??_7type_info@@6B@		; ioWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioWnd@@8 DD FLAT:??_R0?AVioWnd@@@8	; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2ioButton@@8
rdata$r	SEGMENT
??_R2ioButton@@8 DD FLAT:??_R1A@?0A@EA@ioButton@@8	; ioButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3ioButton@@8
rdata$r	SEGMENT
??_R3ioButton@@8 DD 00H					; ioButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioButton@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioButton@@@8
_DATA	SEGMENT
??_R0?AVioButton@@@8 DD FLAT:??_7type_info@@6B@		; ioButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioButton@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioButton@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioButton@@8 DD FLAT:??_R0?AVioButton@@@8	; ioButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioButton@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@NamedTitleBtn@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NamedTitleBtn@@8 DD FLAT:??_R0?AVNamedTitleBtn@@@8 ; NamedTitleBtn::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NamedTitleBtn@@8
rdata$r	ENDS
;	COMDAT ??_R2NamedTitleBtn@@8
rdata$r	SEGMENT
??_R2NamedTitleBtn@@8 DD FLAT:??_R1A@?0A@EA@NamedTitleBtn@@8 ; NamedTitleBtn::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioButton@@8
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3NamedTitleBtn@@8
rdata$r	SEGMENT
??_R3NamedTitleBtn@@8 DD 00H				; NamedTitleBtn::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NamedTitleBtn@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNamedTitleBtn@@@8
_DATA	SEGMENT
??_R0?AVNamedTitleBtn@@@8 DD FLAT:??_7type_info@@6B@	; NamedTitleBtn `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNamedTitleBtn@@', 00H
_DATA	ENDS
;	COMDAT ??_R4NamedTitleBtn@@6B@
rdata$r	SEGMENT
??_R4NamedTitleBtn@@6B@ DD 00H				; NamedTitleBtn::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNamedTitleBtn@@@8
	DD	FLAT:??_R3NamedTitleBtn@@8
rdata$r	ENDS
;	COMDAT ??_7NamedTitleBtn@@6B@
CONST	SEGMENT
??_7NamedTitleBtn@@6B@ DD FLAT:??_R4NamedTitleBtn@@6B@	; NamedTitleBtn::`vftable'
	DD	FLAT:?AddRenderFrame@NamedTitleBtn@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
	DD	FLAT:?AddRenderImage@ioButton@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z
	DD	FLAT:?ParseExtraInfo@NamedTitleBtn@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z
	DD	FLAT:?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z
	DD	FLAT:?SetWindowAlpha@ioButton@@UAEXH@Z
	DD	FLAT:?SetActive@ioWnd@@UAEXXZ
	DD	FLAT:?SetInActive@ioWnd@@UAEXXZ
	DD	FLAT:?ClearElementImageList@ioWnd@@UAEXXZ
	DD	FLAT:?SetSize@ioWnd@@UAEXHH@Z
	DD	FLAT:?SetPositionToDefault@ioWnd@@UAEXHH_N0@Z
	DD	FLAT:?IsNeedProcess@ioWnd@@UBE_NXZ
	DD	FLAT:?IsCanMouseReaction@ioWnd@@UBE_NXZ
	DD	FLAT:?AddChild@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?DeleteChild@ioWnd@@UAEXK@Z
	DD	FLAT:?DeleteAllChild@ioWnd@@UAEXXZ
	DD	FLAT:?OnRenderShowAndHide@ioWnd@@MAE_NXZ
	DD	FLAT:?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRender@NamedTitleBtn@@MAEXXZ
	DD	FLAT:?OnRenderAfterChild@ioWnd@@MAEXXZ
	DD	FLAT:?OnProcess@NamedTitleBtn@@MAEXM@Z
	DD	FLAT:?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z
	DD	FLAT:?CheckFrameReSize@ioButton@@MAEXHHHH@Z
	DD	FLAT:?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z
	DD	FLAT:?iwm_create@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_destroy@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_lbuttondown@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonup@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonDBLCLK@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttondown@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttonup@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_command@ioWnd@@UAEXPAV1@HK@Z
	DD	FLAT:?iwm_mouseover@ioButton@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_vscroll@ioWnd@@UAEXKH@Z
	DD	FLAT:?iwm_wheel@ioWnd@@UAEXH@Z
	DD	FLAT:?iwm_show@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_hide@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_esc@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_spacebar@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_gototop@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragleave@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z
	DD	FLAT:?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z
	DD	FLAT:?IsEXType@ioWnd@@UBE_NXZ
	DD	FLAT:?GetWndType@ioButton@@UBEKXZ
	DD	FLAT:?RenderWnd@ioWnd@@UAEXXZ
	DD	FLAT:?SetIDEX@ioWnd@@UAEXAAK_N@Z
	DD	FLAT:?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?GetHeaderFileName@ioButton@@UAEPBDXZ
	DD	FLAT:?GetTemplateName@ioButton@@UAEPBDXZ
	DD	FLAT:?GetDefClassName@ioButton@@UBEPBDXZ
	DD	FLAT:?_Clone@ioButton@@UAEPAVioWnd@@XZ
	DD	FLAT:?Copy@ioButton@@UAEXPAVioWnd@@@Z
	DD	FLAT:?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z
	DD	FLAT:?SetSaveData@ioButton@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?SetPosX@ioWnd@@UAEXH@Z
	DD	FLAT:?SetPosY@ioWnd@@UAEXH@Z
	DD	FLAT:?SetWidth@ioWnd@@UAEXH@Z
	DD	FLAT:?SetHeight@ioWnd@@UAEXH@Z
	DD	FLAT:?GetNumFixedRenderFrame@ioButton@@UBEHXZ
	DD	FLAT:?GetFixedRenderFrameType@ioButton@@UAEPBDH@Z
	DD	FLAT:?GetRenderFrame@ioButton@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?GetNumFixedRenderImage@ioButton@@UBEHXZ
	DD	FLAT:?GetFixedRenderImageType@ioButton@@UAEPBDH@Z
	DD	FLAT:?GetRenderImage@ioButton@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z
	DD	FLAT:?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z
	DD	FLAT:??_ENamedTitleBtn@@UAEPAXI@Z
	DD	FLAT:?OnDrawNormal@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawOvered@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawOveredAdd@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawPushed@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawDisabled@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawExDisabledNormal@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawExDisabledOvered@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawExDisabledPushed@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawBack@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawNormalList@ioButton@@MAEXHH@Z
	DD	FLAT:?OnDrawDisableList@ioButton@@MAEXHH@Z
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0NamedTitleBtn@@QAE@XZ
_TEXT	SEGMENT
??0NamedTitleBtn@@QAE@XZ PROC				; NamedTitleBtn::NamedTitleBtn, COMDAT
; _this$ = ecx

; 9    : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioButton@@QAE@XZ

; 10   : 	m_pEffectFrm = NULL;

  00009	33 c0		 xor	 eax, eax
  0000b	89 86 fc 01 00
	00		 mov	 DWORD PTR [esi+508], eax

; 11   : 
; 12   : 	m_dwCheckTime = 0;

  00011	89 86 00 02 00
	00		 mov	 DWORD PTR [esi+512], eax

; 13   : 	m_nCurAlpha = 0;

  00017	89 86 08 02 00
	00		 mov	 DWORD PTR [esi+520], eax

; 14   : 	m_bIsAddAlpha = false;

  0001d	66 89 86 10 02
	00 00		 mov	 WORD PTR [esi+528], ax
  00024	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7NamedTitleBtn@@6B@

; 15   : 	m_bIsEffect = false;
; 16   : }

  0002a	8b c6		 mov	 eax, esi
  0002c	5e		 pop	 esi
  0002d	c3		 ret	 0
??0NamedTitleBtn@@QAE@XZ ENDP				; NamedTitleBtn::NamedTitleBtn
_TEXT	ENDS
PUBLIC	??1NamedTitleBtn@@UAE@XZ			; NamedTitleBtn::~NamedTitleBtn
EXTRN	__imp_??1ioButton@@UAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1NamedTitleBtn@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1NamedTitleBtn@@UAE@XZ$0
__ehfuncinfo$??1NamedTitleBtn@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1NamedTitleBtn@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1NamedTitleBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1NamedTitleBtn@@UAE@XZ PROC				; NamedTitleBtn::~NamedTitleBtn, COMDAT
; _this$ = ecx

; 19   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1NamedTitleBtn@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00011	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7NamedTitleBtn@@6B@

; 20   : 	SAFEDELETE( m_pEffectFrm );

  00017	8b 8f fc 01 00
	00		 mov	 ecx, DWORD PTR [edi+508]
  0001d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00021	85 c9		 test	 ecx, ecx
  00023	74 0e		 je	 SHORT $LN1@NamedTitle
  00025	8b 01		 mov	 eax, DWORD PTR [ecx]
  00027	6a 01		 push	 1
  00029	ff 50 40	 call	 DWORD PTR [eax+64]
  0002c	83 a7 fc 01 00
	00 00		 and	 DWORD PTR [edi+508], 0
$LN1@NamedTitle:

; 21   : }

  00033	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00037	8b cf		 mov	 ecx, edi
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioButton@@UAE@XZ
  0003f	e8 00 00 00 00	 call	 __EH_epilog3
  00044	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1NamedTitleBtn@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioButton@@UAE@XZ
__ehhandler$??1NamedTitleBtn@@UAE@XZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1NamedTitleBtn@@UAE@XZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1NamedTitleBtn@@UAE@XZ ENDP				; NamedTitleBtn::~NamedTitleBtn
EXTRN	__imp_?GetDerivedPosY@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?GetDerivedPosX@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?OnRender@ioButton@@MAEXXZ:PROC
EXTRN	__fltused:DWORD
; Function compile flags: /Ogsp
;	COMDAT ?OnRender@NamedTitleBtn@@MAEXXZ
_TEXT	SEGMENT
?OnRender@NamedTitleBtn@@MAEXXZ PROC			; NamedTitleBtn::OnRender, COMDAT
; _this$ = ecx

; 58   : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f1		 mov	 esi, ecx

; 59   : 	ioButton::OnRender();

  00004	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?OnRender@ioButton@@MAEXXZ

; 60   : 
; 61   : 	int iXPos = GetDerivedPosX();

  0000a	8b ce		 mov	 ecx, esi
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosX@ioWnd@@QBEHXZ

; 62   : 	int iYPos = GetDerivedPosY();

  00012	8b ce		 mov	 ecx, esi
  00014	8b f8		 mov	 edi, eax
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosY@ioWnd@@QBEHXZ

; 63   : 
; 64   : 	if ( m_bIsEffect )

  0001c	33 d2		 xor	 edx, edx
  0001e	38 96 11 02 00
	00		 cmp	 BYTE PTR [esi+529], dl
  00024	74 31		 je	 SHORT $LN1@OnRender

; 65   : 	{
; 66   : 		if ( m_pEffectFrm )

  00026	39 96 fc 01 00
	00		 cmp	 DWORD PTR [esi+508], edx
  0002c	74 29		 je	 SHORT $LN1@OnRender

; 67   : 			m_pEffectFrm->Render( iXPos, iYPos );

  0002e	8b 8e fc 01 00
	00		 mov	 ecx, DWORD PTR [esi+508]
  00034	8b 31		 mov	 esi, DWORD PTR [ecx]
  00036	52		 push	 edx
  00037	52		 push	 edx
  00038	52		 push	 edx
  00039	52		 push	 edx
  0003a	0f 57 c0	 xorps	 xmm0, xmm0
  0003d	51		 push	 ecx
  0003e	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00042	51		 push	 ecx
  00043	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00049	0f 57 c0	 xorps	 xmm0, xmm0
  0004c	f3 0f 2a c7	 cvtsi2ss xmm0, edi
  00050	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00055	ff 16		 call	 DWORD PTR [esi]
$LN1@OnRender:

; 68   : 	}
; 69   : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	c3		 ret	 0
?OnRender@NamedTitleBtn@@MAEXXZ ENDP			; NamedTitleBtn::OnRender
_TEXT	ENDS
PUBLIC	?SetStartEffect@NamedTitleBtn@@QAEXXZ		; NamedTitleBtn::SetStartEffect
EXTRN	__imp_?GetLoopSec@ioFrameTimer@@QBEKXZ:PROC
EXTRN	__imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?SetStartEffect@NamedTitleBtn@@QAEXXZ
_TEXT	SEGMENT
?SetStartEffect@NamedTitleBtn@@QAEXXZ PROC		; NamedTitleBtn::SetStartEffect, COMDAT
; _this$ = ecx

; 74   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 75   : 	m_dwCheckTime = FRAMEGETTIME();

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00009	8b c8		 mov	 ecx, eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ

; 76   : 	m_nCurAlpha = 0;

  00011	83 a6 08 02 00
	00 00		 and	 DWORD PTR [esi+520], 0
  00018	89 86 00 02 00
	00		 mov	 DWORD PTR [esi+512], eax

; 77   : 	m_bIsAddAlpha = true;

  0001e	66 c7 86 10 02
	00 00 01 01	 mov	 WORD PTR [esi+528], 257	; 00000101H
  00027	5e		 pop	 esi

; 78   : 	m_bIsEffect = true;
; 79   : }

  00028	c3		 ret	 0
?SetStartEffect@NamedTitleBtn@@QAEXXZ ENDP		; NamedTitleBtn::SetStartEffect
_TEXT	ENDS
PUBLIC	?SetEndEffect@NamedTitleBtn@@QAEXXZ		; NamedTitleBtn::SetEndEffect
; Function compile flags: /Ogsp
;	COMDAT ?SetEndEffect@NamedTitleBtn@@QAEXXZ
_TEXT	SEGMENT
?SetEndEffect@NamedTitleBtn@@QAEXXZ PROC		; NamedTitleBtn::SetEndEffect, COMDAT
; _this$ = ecx

; 83   : 	m_bIsEffect = false;

  00000	c6 81 11 02 00
	00 00		 mov	 BYTE PTR [ecx+529], 0

; 84   : }

  00007	c3		 ret	 0
?SetEndEffect@NamedTitleBtn@@QAEXXZ ENDP		; NamedTitleBtn::SetEndEffect
_TEXT	ENDS
PUBLIC	?UpdateEffect@NamedTitleBtn@@IAEXXZ		; NamedTitleBtn::UpdateEffect
; Function compile flags: /Ogsp
;	COMDAT ?UpdateEffect@NamedTitleBtn@@IAEXXZ
_TEXT	SEGMENT
?UpdateEffect@NamedTitleBtn@@IAEXXZ PROC		; NamedTitleBtn::UpdateEffect, COMDAT
; _this$ = ecx

; 89   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 90   : 	DWORD dwCurTime = FRAMEGETTIME();

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00009	8b c8		 mov	 ecx, eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ

; 91   : 	if ( m_dwCheckTime + m_dwChangeTime > dwCurTime )

  00011	8b 96 04 02 00
	00		 mov	 edx, DWORD PTR [esi+516]
  00017	03 96 00 02 00
	00		 add	 edx, DWORD PTR [esi+512]
  0001d	3b d0		 cmp	 edx, eax
  0001f	77 6e		 ja	 SHORT $LN1@UpdateEffe

; 92   : 		return;
; 93   : 
; 94   : 	m_dwCheckTime = dwCurTime;

  00021	89 86 00 02 00
	00		 mov	 DWORD PTR [esi+512], eax

; 95   : 
; 96   : 	if ( m_nCurAlpha >= 255 )

  00027	8b 86 08 02 00
	00		 mov	 eax, DWORD PTR [esi+520]
  0002d	b9 ff 00 00 00	 mov	 ecx, 255		; 000000ffH
  00032	3b c1		 cmp	 eax, ecx
  00034	7c 09		 jl	 SHORT $LN6@UpdateEffe

; 97   : 		m_bIsAddAlpha = false;

  00036	c6 86 10 02 00
	00 00		 mov	 BYTE PTR [esi+528], 0
  0003d	eb 0b		 jmp	 SHORT $LN4@UpdateEffe
$LN6@UpdateEffe:

; 98   : 	else if ( m_nCurAlpha <= 0 )

  0003f	85 c0		 test	 eax, eax
  00041	7f 07		 jg	 SHORT $LN4@UpdateEffe

; 99   : 		m_bIsAddAlpha = true;

  00043	c6 86 10 02 00
	00 01		 mov	 BYTE PTR [esi+528], 1
$LN4@UpdateEffe:

; 100  : 
; 101  : 	if ( m_bIsAddAlpha )

  0004a	80 be 10 02 00
	00 00		 cmp	 BYTE PTR [esi+528], 0
  00051	74 0d		 je	 SHORT $LN3@UpdateEffe

; 102  : 	{
; 103  : 		m_nCurAlpha+=m_nAddAlpha;

  00053	03 86 0c 02 00
	00		 add	 eax, DWORD PTR [esi+524]

; 104  : 		m_nCurAlpha = min( m_nCurAlpha, 255 );

  00059	3b c1		 cmp	 eax, ecx
  0005b	0f 4d c1	 cmovge	 eax, ecx

; 105  : 	}
; 106  : 	else

  0005e	eb 12		 jmp	 SHORT $LN13@UpdateEffe
$LN3@UpdateEffe:

; 107  : 	{
; 108  : 		m_nCurAlpha-=m_nAddAlpha;

  00060	2b 86 0c 02 00
	00		 sub	 eax, DWORD PTR [esi+524]
  00066	89 86 08 02 00
	00		 mov	 DWORD PTR [esi+520], eax

; 109  : 		m_nCurAlpha = max( m_nCurAlpha, 0 );

  0006c	85 c0		 test	 eax, eax
  0006e	7f 02		 jg	 SHORT $LN13@UpdateEffe
  00070	33 c0		 xor	 eax, eax
$LN13@UpdateEffe:

; 110  : 	}
; 111  : 
; 112  : 	if ( m_pEffectFrm )

  00072	8b 8e fc 01 00
	00		 mov	 ecx, DWORD PTR [esi+508]
  00078	89 86 08 02 00
	00		 mov	 DWORD PTR [esi+520], eax
  0007e	85 c9		 test	 ecx, ecx
  00080	74 0d		 je	 SHORT $LN1@UpdateEffe

; 113  : 		m_pEffectFrm->SetAlpha( m_nCurAlpha );

  00082	0f b6 96 08 02
	00 00		 movzx	 edx, BYTE PTR [esi+520]
  00089	8b 01		 mov	 eax, DWORD PTR [ecx]
  0008b	52		 push	 edx
  0008c	ff 50 30	 call	 DWORD PTR [eax+48]
$LN1@UpdateEffe:
  0008f	5e		 pop	 esi

; 114  : }

  00090	c3		 ret	 0
?UpdateEffect@NamedTitleBtn@@IAEXXZ ENDP		; NamedTitleBtn::UpdateEffect
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GNamedTitleBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GNamedTitleBtn@@UAEPAXI@Z PROC			; NamedTitleBtn::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1NamedTitleBtn@@UAE@XZ ; NamedTitleBtn::~NamedTitleBtn
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GNamedTitleBtn@@UAEPAXI@Z ENDP			; NamedTitleBtn::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_?OnProcess@ioWnd@@MAEXM@Z:PROC
EXTRN	__imp_?IsShow@ioWnd@@QBE_NXZ:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\namedtitlebtn.cpp
;	COMDAT ?OnProcess@NamedTitleBtn@@MAEXM@Z
_TEXT	SEGMENT
_fTimePerSec$ = 8					; size = 4
?OnProcess@NamedTitleBtn@@MAEXM@Z PROC			; NamedTitleBtn::OnProcess, COMDAT
; _this$ = ecx

; 47   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 48   : 	if( !IsShow() )

  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsShow@ioWnd@@QBE_NXZ
  0000c	84 c0		 test	 al, al
  0000e	74 23		 je	 SHORT $LN1@OnProcess

; 49   : 		return;
; 50   : 
; 51   : 	ioButton::OnProcess( fTimePerSec );

  00010	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fTimePerSec$[ebp]
  00015	51		 push	 ecx
  00016	8b ce		 mov	 ecx, esi
  00018	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?OnProcess@ioWnd@@MAEXM@Z

; 52   : 
; 53   : 	if( m_bIsEffect )

  00023	80 be 11 02 00
	00 00		 cmp	 BYTE PTR [esi+529], 0
  0002a	74 07		 je	 SHORT $LN1@OnProcess

; 54   : 		UpdateEffect();

  0002c	8b ce		 mov	 ecx, esi
  0002e	e8 00 00 00 00	 call	 ?UpdateEffect@NamedTitleBtn@@IAEXXZ ; NamedTitleBtn::UpdateEffect
$LN1@OnProcess:
  00033	5e		 pop	 esi

; 55   : }

  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
?OnProcess@NamedTitleBtn@@MAEXM@Z ENDP			; NamedTitleBtn::OnProcess
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$?8$09@@YA_NABVioHashString@@AAY09$$CBD@Z	; operator==<10>
EXTRN	__imp_?c_str@ioHashString@@QBEPBDXZ:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iohashstring.h
;	COMDAT ??$?8$09@@YA_NABVioHashString@@AAY09$$CBD@Z
_TEXT	SEGMENT
__t$ = -20						; size = 10
__$ArrayPad$ = -4					; size = 4
_lhs$ = 8						; size = 4
_t$ = 12						; size = 4
??$?8$09@@YA_NABVioHashString@@AAY09$$CBD@Z PROC	; operator==<10>, COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]

; 147  : 	_ENCSTR(t, _t); return ( strcmp( lhs.c_str(), _t ) == 0 );

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _lhs$[ebp]
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 0d 01 00
	00		 je	 $LN96@operator
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 ec	 mov	 BYTE PTR __t$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 f6 00 00
	00		 je	 $LN95@operator
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 ed	 mov	 BYTE PTR __t$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 df 00 00
	00		 je	 $LN94@operator
  00042	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00045	88 55 ee	 mov	 BYTE PTR __t$[ebp+2], dl
  00048	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004b	84 d2		 test	 dl, dl
  0004d	0f 84 c8 00 00
	00		 je	 $LN93@operator
  00053	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00056	88 55 ef	 mov	 BYTE PTR __t$[ebp+3], dl
  00059	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005c	84 d2		 test	 dl, dl
  0005e	0f 84 b1 00 00
	00		 je	 $LN92@operator
  00064	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00067	88 55 f0	 mov	 BYTE PTR __t$[ebp+4], dl
  0006a	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006d	84 d2		 test	 dl, dl
  0006f	0f 84 9a 00 00
	00		 je	 $LN91@operator
  00075	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00078	88 55 f1	 mov	 BYTE PTR __t$[ebp+5], dl
  0007b	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007e	84 d2		 test	 dl, dl
  00080	0f 84 83 00 00
	00		 je	 $LN90@operator
  00086	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00089	88 55 f2	 mov	 BYTE PTR __t$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	74 70		 je	 SHORT $LN89@operator
  00093	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00096	88 55 f3	 mov	 BYTE PTR __t$[ebp+7], dl
  00099	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  0009c	84 d2		 test	 dl, dl
  0009e	74 5d		 je	 SHORT $LN88@operator
  000a0	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a3	80 78 09 00	 cmp	 BYTE PTR [eax+9], 0
  000a7	88 55 f4	 mov	 BYTE PTR __t$[ebp+8], dl
  000aa	0f 84 81 00 00
	00		 je	 $LN1@operator
  000b0	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000b3	84 d2		 test	 dl, dl
  000b5	74 40		 je	 SHORT $LN86@operator
  000b7	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000ba	88 55 f6	 mov	 BYTE PTR __t$[ebp+10], dl
  000bd	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000c0	84 d2		 test	 dl, dl
  000c2	74 2d		 je	 SHORT $LN85@operator
  000c4	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000c7	88 55 f7	 mov	 BYTE PTR __t$[ebp+11], dl
  000ca	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000cd	84 d2		 test	 dl, dl
  000cf	74 1a		 je	 SHORT $LN84@operator
  000d1	8a 40 0d	 mov	 al, BYTE PTR [eax+13]
  000d4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000d7	88 55 f8	 mov	 BYTE PTR __t$[ebp+12], dl
  000da	84 c0		 test	 al, al
  000dc	74 07		 je	 SHORT $LN83@operator
  000de	34 ec		 xor	 al, -20			; ffffffecH
  000e0	88 45 f9	 mov	 BYTE PTR __t$[ebp+13], al
  000e3	eb 4c		 jmp	 SHORT $LN1@operator
$LN83@operator:
  000e5	c6 45 f9 ec	 mov	 BYTE PTR __t$[ebp+13], -20 ; ffffffecH
  000e9	eb 46		 jmp	 SHORT $LN1@operator
$LN84@operator:
  000eb	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+12], -19 ; ffffffedH
  000ef	eb 40		 jmp	 SHORT $LN1@operator
$LN85@operator:
  000f1	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+11], -22 ; ffffffeaH
  000f5	eb 3a		 jmp	 SHORT $LN1@operator
$LN86@operator:
  000f7	c6 45 f6 eb	 mov	 BYTE PTR __t$[ebp+10], -21 ; ffffffebH
  000fb	eb 34		 jmp	 SHORT $LN1@operator
$LN88@operator:
  000fd	c6 45 f4 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  00101	eb 2e		 jmp	 SHORT $LN1@operator
$LN89@operator:
  00103	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  00107	eb 28		 jmp	 SHORT $LN1@operator
$LN90@operator:
  00109	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+6], -21 ; ffffffebH
  0010d	eb 22		 jmp	 SHORT $LN1@operator
$LN91@operator:
  0010f	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  00113	eb 1c		 jmp	 SHORT $LN1@operator
$LN92@operator:
  00115	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  00119	eb 16		 jmp	 SHORT $LN1@operator
$LN93@operator:
  0011b	c6 45 ef ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  0011f	eb 10		 jmp	 SHORT $LN1@operator
$LN94@operator:
  00121	c6 45 ee eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  00125	eb 0a		 jmp	 SHORT $LN1@operator
$LN95@operator:
  00127	c6 45 ed ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  0012b	eb 04		 jmp	 SHORT $LN1@operator
$LN96@operator:
  0012d	c6 45 ec ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@operator:
  00131	6a 02		 push	 2
  00133	8d 45 ec	 lea	 eax, DWORD PTR __t$[ebp]
  00136	c6 45 f5 00	 mov	 BYTE PTR __t$[ebp+9], 0
  0013a	5a		 pop	 edx
$LL104@operator:
  0013b	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00141	83 c0 04	 add	 eax, 4
  00144	4a		 dec	 edx
  00145	75 f4		 jne	 SHORT $LL104@operator
  00147	80 75 f4 ed	 xor	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  0014b	56		 push	 esi
  0014c	8d 75 ec	 lea	 esi, DWORD PTR __t$[ebp]
  0014f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL111@operator:
  00155	8a 08		 mov	 cl, BYTE PTR [eax]
  00157	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00159	75 1a		 jne	 SHORT $LN112@operator
  0015b	84 c9		 test	 cl, cl
  0015d	74 12		 je	 SHORT $LN113@operator
  0015f	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00162	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  00165	75 0e		 jne	 SHORT $LN112@operator
  00167	83 c0 02	 add	 eax, 2
  0016a	83 c6 02	 add	 esi, 2
  0016d	84 c9		 test	 cl, cl
  0016f	75 e4		 jne	 SHORT $LL111@operator
$LN113@operator:
  00171	33 c0		 xor	 eax, eax
  00173	eb 05		 jmp	 SHORT $LN114@operator
$LN112@operator:
  00175	1b c0		 sbb	 eax, eax
  00177	83 d8 ff	 sbb	 eax, -1
$LN114@operator:
  0017a	33 c9		 xor	 ecx, ecx
  0017c	85 c0		 test	 eax, eax
  0017e	0f 94 c0	 sete	 al

; 148  : }

  00181	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00184	33 cd		 xor	 ecx, ebp
  00186	5e		 pop	 esi
  00187	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0018c	c9		 leave
  0018d	c3		 ret	 0
??$?8$09@@YA_NABVioHashString@@AAY09$$CBD@Z ENDP	; operator==<10>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$GetIntAttribute_e@$0M@@ioXMLElement@@QBEHAAY0M@$$CBD@Z ; ioXMLElement::GetIntAttribute_e<12>
EXTRN	__imp_?GetIntAttribute@ioXMLElement@@QBEHPBD@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioxmlelement.h
;	COMDAT ??$GetIntAttribute_e@$0M@@ioXMLElement@@QBEHAAY0M@$$CBD@Z
_TEXT	SEGMENT
__k$ = -20						; size = 12
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
??$GetIntAttribute_e@$0M@@ioXMLElement@@QBEHAAY0M@$$CBD@Z PROC ; ioXMLElement::GetIntAttribute_e<12>, COMDAT
; _this$ = ecx

; 86   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 87   : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 32 01 00
	00		 je	 $LN96@GetIntAttr
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 ec	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 1b 01 00
	00		 je	 $LN95@GetIntAttr
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 ed	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 04 01 00
	00		 je	 $LN94@GetIntAttr
  00042	b1 eb		 mov	 cl, -21			; ffffffebH
  00044	32 d1		 xor	 dl, cl
  00046	88 55 ee	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 ec 00 00
	00		 je	 $LN93@GetIntAttr
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 ef	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 d5 00 00
	00		 je	 $LN92@GetIntAttr
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 f0	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 be 00 00
	00		 je	 $LN91@GetIntAttr
  00076	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00079	88 55 f1	 mov	 BYTE PTR __k$[ebp+5], dl
  0007c	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007f	84 d2		 test	 dl, dl
  00081	0f 84 a8 00 00
	00		 je	 $LN90@GetIntAttr
  00087	32 d1		 xor	 dl, cl
  00089	88 55 f2	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 92 00 00
	00		 je	 $LN89@GetIntAttr
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 f3	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	74 7f		 je	 SHORT $LN88@GetIntAttr
  000a4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a7	88 55 f4	 mov	 BYTE PTR __k$[ebp+8], dl
  000aa	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000ad	84 d2		 test	 dl, dl
  000af	74 6c		 je	 SHORT $LN87@GetIntAttr
  000b1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b4	88 55 f5	 mov	 BYTE PTR __k$[ebp+9], dl
  000b7	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000ba	84 d2		 test	 dl, dl
  000bc	74 5a		 je	 SHORT $LN86@GetIntAttr
  000be	32 d1		 xor	 dl, cl
  000c0	80 78 0b 00	 cmp	 BYTE PTR [eax+11], 0
  000c4	88 55 f6	 mov	 BYTE PTR __k$[ebp+10], dl
  000c7	0f 84 89 00 00
	00		 je	 $LN1@GetIntAttr
  000cd	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000d0	84 d2		 test	 dl, dl
  000d2	74 3e		 je	 SHORT $LN84@GetIntAttr
  000d4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000d7	88 55 f8	 mov	 BYTE PTR __k$[ebp+12], dl
  000da	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000dd	84 d2		 test	 dl, dl
  000df	74 2b		 je	 SHORT $LN83@GetIntAttr
  000e1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000e4	88 55 f9	 mov	 BYTE PTR __k$[ebp+13], dl
  000e7	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000ea	84 d2		 test	 dl, dl
  000ec	74 19		 je	 SHORT $LN82@GetIntAttr
  000ee	8a 40 0f	 mov	 al, BYTE PTR [eax+15]
  000f1	32 d1		 xor	 dl, cl
  000f3	88 55 fa	 mov	 BYTE PTR __k$[ebp+14], dl
  000f6	84 c0		 test	 al, al
  000f8	74 07		 je	 SHORT $LN81@GetIntAttr
  000fa	34 ea		 xor	 al, -22			; ffffffeaH
  000fc	88 45 fb	 mov	 BYTE PTR __k$[ebp+15], al
  000ff	eb 55		 jmp	 SHORT $LN1@GetIntAttr
$LN81@GetIntAttr:
  00101	c6 45 fb ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00105	eb 4f		 jmp	 SHORT $LN1@GetIntAttr
$LN82@GetIntAttr:
  00107	88 4d fa	 mov	 BYTE PTR __k$[ebp+14], cl
  0010a	eb 4a		 jmp	 SHORT $LN1@GetIntAttr
$LN83@GetIntAttr:
  0010c	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  00110	eb 44		 jmp	 SHORT $LN1@GetIntAttr
$LN84@GetIntAttr:
  00112	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00116	eb 3e		 jmp	 SHORT $LN1@GetIntAttr
$LN86@GetIntAttr:
  00118	88 4d f6	 mov	 BYTE PTR __k$[ebp+10], cl
  0011b	eb 39		 jmp	 SHORT $LN1@GetIntAttr
$LN87@GetIntAttr:
  0011d	c6 45 f5 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  00121	eb 33		 jmp	 SHORT $LN1@GetIntAttr
$LN88@GetIntAttr:
  00123	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00127	eb 2d		 jmp	 SHORT $LN1@GetIntAttr
$LN89@GetIntAttr:
  00129	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  0012d	eb 27		 jmp	 SHORT $LN1@GetIntAttr
$LN90@GetIntAttr:
  0012f	88 4d f2	 mov	 BYTE PTR __k$[ebp+6], cl
  00132	eb 22		 jmp	 SHORT $LN1@GetIntAttr
$LN91@GetIntAttr:
  00134	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  00138	eb 1c		 jmp	 SHORT $LN1@GetIntAttr
$LN92@GetIntAttr:
  0013a	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  0013e	eb 16		 jmp	 SHORT $LN1@GetIntAttr
$LN93@GetIntAttr:
  00140	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00144	eb 10		 jmp	 SHORT $LN1@GetIntAttr
$LN94@GetIntAttr:
  00146	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0014a	eb 0a		 jmp	 SHORT $LN1@GetIntAttr
$LN95@GetIntAttr:
  0014c	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00150	eb 04		 jmp	 SHORT $LN1@GetIntAttr
$LN96@GetIntAttr:
  00152	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@GetIntAttr:
  00156	6a 02		 push	 2
  00158	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  0015b	c6 45 f7 00	 mov	 BYTE PTR __k$[ebp+11], 0
  0015f	5a		 pop	 edx
$LL104@GetIntAttr:
  00160	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00166	83 c0 04	 add	 eax, 4
  00169	4a		 dec	 edx
  0016a	75 f4		 jne	 SHORT $LL104@GetIntAttr
  0016c	6a 08		 push	 8
  0016e	58		 pop	 eax
$LL101@GetIntAttr:
  0016f	8b c8		 mov	 ecx, eax
  00171	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00177	79 05		 jns	 SHORT $LN111@GetIntAttr
  00179	49		 dec	 ecx
  0017a	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0017d	41		 inc	 ecx
$LN111@GetIntAttr:
  0017e	b2 ed		 mov	 dl, -19			; ffffffedH
  00180	2a d1		 sub	 dl, cl
  00182	30 54 05 ec	 xor	 BYTE PTR __k$[ebp+eax], dl
  00186	40		 inc	 eax
  00187	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  0018a	7c e3		 jl	 SHORT $LL101@GetIntAttr

; 88   : 		return GetIntAttribute(_k);

  0018c	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  0018f	50		 push	 eax
  00190	8b ce		 mov	 ecx, esi
  00192	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetIntAttribute@ioXMLElement@@QBEHPBD@Z

; 89   : 	}

  00198	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0019b	33 cd		 xor	 ecx, ebp
  0019d	5e		 pop	 esi
  0019e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a3	c9		 leave
  001a4	c2 04 00	 ret	 4
??$GetIntAttribute_e@$0M@@ioXMLElement@@QBEHAAY0M@$$CBD@Z ENDP ; ioXMLElement::GetIntAttribute_e<12>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$GetIntAttribute_e@$09@ioXMLElement@@QBEHAAY09$$CBD@Z ; ioXMLElement::GetIntAttribute_e<10>
; Function compile flags: /Ogsp
;	COMDAT ??$GetIntAttribute_e@$09@ioXMLElement@@QBEHAAY09$$CBD@Z
_TEXT	SEGMENT
__k$ = -20						; size = 10
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
??$GetIntAttribute_e@$09@ioXMLElement@@QBEHAAY09$$CBD@Z PROC ; ioXMLElement::GetIntAttribute_e<10>, COMDAT
; _this$ = ecx

; 86   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 87   : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	84 d2		 test	 dl, dl
  00017	0f 84 0d 01 00
	00		 je	 $LN96@GetIntAttr@2
  0001d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00020	88 55 ec	 mov	 BYTE PTR __k$[ebp], dl
  00023	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00026	84 d2		 test	 dl, dl
  00028	0f 84 f6 00 00
	00		 je	 $LN95@GetIntAttr@2
  0002e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00031	88 55 ed	 mov	 BYTE PTR __k$[ebp+1], dl
  00034	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  00037	84 d2		 test	 dl, dl
  00039	0f 84 df 00 00
	00		 je	 $LN94@GetIntAttr@2
  0003f	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00042	88 55 ee	 mov	 BYTE PTR __k$[ebp+2], dl
  00045	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  00048	84 d2		 test	 dl, dl
  0004a	0f 84 c8 00 00
	00		 je	 $LN93@GetIntAttr@2
  00050	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00053	88 55 ef	 mov	 BYTE PTR __k$[ebp+3], dl
  00056	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00059	84 d2		 test	 dl, dl
  0005b	0f 84 b1 00 00
	00		 je	 $LN92@GetIntAttr@2
  00061	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00064	88 55 f0	 mov	 BYTE PTR __k$[ebp+4], dl
  00067	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006a	84 d2		 test	 dl, dl
  0006c	0f 84 9a 00 00
	00		 je	 $LN91@GetIntAttr@2
  00072	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00075	88 55 f1	 mov	 BYTE PTR __k$[ebp+5], dl
  00078	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007b	84 d2		 test	 dl, dl
  0007d	0f 84 83 00 00
	00		 je	 $LN90@GetIntAttr@2
  00083	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00086	88 55 f2	 mov	 BYTE PTR __k$[ebp+6], dl
  00089	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008c	84 d2		 test	 dl, dl
  0008e	74 70		 je	 SHORT $LN89@GetIntAttr@2
  00090	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00093	88 55 f3	 mov	 BYTE PTR __k$[ebp+7], dl
  00096	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  00099	84 d2		 test	 dl, dl
  0009b	74 5d		 je	 SHORT $LN88@GetIntAttr@2
  0009d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a0	80 78 09 00	 cmp	 BYTE PTR [eax+9], 0
  000a4	88 55 f4	 mov	 BYTE PTR __k$[ebp+8], dl
  000a7	0f 84 81 00 00
	00		 je	 $LN1@GetIntAttr@2
  000ad	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000b0	84 d2		 test	 dl, dl
  000b2	74 40		 je	 SHORT $LN86@GetIntAttr@2
  000b4	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000b7	88 55 f6	 mov	 BYTE PTR __k$[ebp+10], dl
  000ba	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000bd	84 d2		 test	 dl, dl
  000bf	74 2d		 je	 SHORT $LN85@GetIntAttr@2
  000c1	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000c4	88 55 f7	 mov	 BYTE PTR __k$[ebp+11], dl
  000c7	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000ca	84 d2		 test	 dl, dl
  000cc	74 1a		 je	 SHORT $LN84@GetIntAttr@2
  000ce	8a 40 0d	 mov	 al, BYTE PTR [eax+13]
  000d1	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000d4	88 55 f8	 mov	 BYTE PTR __k$[ebp+12], dl
  000d7	84 c0		 test	 al, al
  000d9	74 07		 je	 SHORT $LN83@GetIntAttr@2
  000db	34 ec		 xor	 al, -20			; ffffffecH
  000dd	88 45 f9	 mov	 BYTE PTR __k$[ebp+13], al
  000e0	eb 4c		 jmp	 SHORT $LN1@GetIntAttr@2
$LN83@GetIntAttr@2:
  000e2	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  000e6	eb 46		 jmp	 SHORT $LN1@GetIntAttr@2
$LN84@GetIntAttr@2:
  000e8	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  000ec	eb 40		 jmp	 SHORT $LN1@GetIntAttr@2
$LN85@GetIntAttr@2:
  000ee	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  000f2	eb 3a		 jmp	 SHORT $LN1@GetIntAttr@2
$LN86@GetIntAttr@2:
  000f4	c6 45 f6 eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  000f8	eb 34		 jmp	 SHORT $LN1@GetIntAttr@2
$LN88@GetIntAttr@2:
  000fa	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  000fe	eb 2e		 jmp	 SHORT $LN1@GetIntAttr@2
$LN89@GetIntAttr@2:
  00100	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  00104	eb 28		 jmp	 SHORT $LN1@GetIntAttr@2
$LN90@GetIntAttr@2:
  00106	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  0010a	eb 22		 jmp	 SHORT $LN1@GetIntAttr@2
$LN91@GetIntAttr@2:
  0010c	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  00110	eb 1c		 jmp	 SHORT $LN1@GetIntAttr@2
$LN92@GetIntAttr@2:
  00112	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00116	eb 16		 jmp	 SHORT $LN1@GetIntAttr@2
$LN93@GetIntAttr@2:
  00118	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  0011c	eb 10		 jmp	 SHORT $LN1@GetIntAttr@2
$LN94@GetIntAttr@2:
  0011e	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  00122	eb 0a		 jmp	 SHORT $LN1@GetIntAttr@2
$LN95@GetIntAttr@2:
  00124	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00128	eb 04		 jmp	 SHORT $LN1@GetIntAttr@2
$LN96@GetIntAttr@2:
  0012a	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@GetIntAttr@2:
  0012e	6a 02		 push	 2
  00130	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  00133	c6 45 f5 00	 mov	 BYTE PTR __k$[ebp+9], 0
  00137	5a		 pop	 edx
$LL104@GetIntAttr@2:
  00138	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0013e	83 c0 04	 add	 eax, 4
  00141	4a		 dec	 edx
  00142	75 f4		 jne	 SHORT $LL104@GetIntAttr@2
  00144	80 75 f4 ed	 xor	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH

; 88   : 		return GetIntAttribute(_k);

  00148	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  0014b	50		 push	 eax
  0014c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetIntAttribute@ioXMLElement@@QBEHPBD@Z

; 89   : 	}

  00152	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00155	33 cd		 xor	 ecx, ebp
  00157	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0015c	c9		 leave
  0015d	c2 04 00	 ret	 4
??$GetIntAttribute_e@$09@ioXMLElement@@QBEHAAY09$$CBD@Z ENDP ; ioXMLElement::GetIntAttribute_e<10>
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
EXTRN	__imp_?AddRenderFrame@ioButton@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\namedtitlebtn.cpp
;	COMDAT ?AddRenderFrame@NamedTitleBtn@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
_TEXT	SEGMENT
_this$GSCopy$ = -24					; size = 4
__t$505954 = -20					; size = 10
__$ArrayPad$ = -4					; size = 4
_szType$ = 8						; size = 4
_pFrame$ = 12						; size = 4
?AddRenderFrame@NamedTitleBtn@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z PROC ; NamedTitleBtn::AddRenderFrame, COMDAT
; _this$ = ecx

; 26   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 0c	 mov	 ebx, DWORD PTR _pFrame$[ebp]
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b 7d 08	 mov	 edi, DWORD PTR _szType$[ebp]

; 27   : 	if( szType == "EffectFrm" )

  00019	6a 02		 push	 2
  0001b	89 4d e8	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  0001e	c7 45 ec a8 8a
	8d 8f		 mov	 DWORD PTR __t$505954[ebp], -1886549336 ; 8f8d8aa8H
  00025	c7 45 f0 8e 98
	ad 98		 mov	 DWORD PTR __t$505954[ebp+4], -1733453682 ; 98ad988eH
  0002c	8d 45 ec	 lea	 eax, DWORD PTR __t$505954[ebp]
  0002f	66 c7 45 f4 80
	00		 mov	 WORD PTR __t$505954[ebp+8], 128 ; 00000080H
  00035	59		 pop	 ecx
$LL111@AddRenderF:
  00036	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0003c	83 c0 04	 add	 eax, 4
  0003f	49		 dec	 ecx
  00040	75 f4		 jne	 SHORT $LL111@AddRenderF
  00042	80 75 f4 ed	 xor	 BYTE PTR __t$505954[ebp+8], -19 ; ffffffedH
  00046	8b cf		 mov	 ecx, edi
  00048	8d 75 ec	 lea	 esi, DWORD PTR __t$505954[ebp]
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL118@AddRenderF:
  00051	8a 08		 mov	 cl, BYTE PTR [eax]
  00053	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00055	75 1a		 jne	 SHORT $LN119@AddRenderF
  00057	84 c9		 test	 cl, cl
  00059	74 12		 je	 SHORT $LN120@AddRenderF
  0005b	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  0005e	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  00061	75 0e		 jne	 SHORT $LN119@AddRenderF
  00063	83 c0 02	 add	 eax, 2
  00066	83 c6 02	 add	 esi, 2
  00069	84 c9		 test	 cl, cl
  0006b	75 e4		 jne	 SHORT $LL118@AddRenderF
$LN120@AddRenderF:
  0006d	33 c0		 xor	 eax, eax
  0006f	eb 05		 jmp	 SHORT $LN121@AddRenderF
$LN119@AddRenderF:
  00071	1b c0		 sbb	 eax, eax
  00073	83 d8 ff	 sbb	 eax, -1
$LN121@AddRenderF:
  00076	85 c0		 test	 eax, eax
  00078	75 23		 jne	 SHORT $LN3@AddRenderF

; 28   : 	{
; 29   : 		SAFEDELETE( m_pEffectFrm );

  0007a	8b 75 e8	 mov	 esi, DWORD PTR _this$GSCopy$[ebp]
  0007d	8b 8e fc 01 00
	00		 mov	 ecx, DWORD PTR [esi+508]
  00083	85 c9		 test	 ecx, ecx
  00085	74 0e		 je	 SHORT $LN2@AddRenderF
  00087	8b 01		 mov	 eax, DWORD PTR [ecx]
  00089	6a 01		 push	 1
  0008b	ff 50 40	 call	 DWORD PTR [eax+64]
  0008e	83 a6 fc 01 00
	00 00		 and	 DWORD PTR [esi+508], 0
$LN2@AddRenderF:

; 30   : 		m_pEffectFrm = pFrame;

  00095	89 9e fc 01 00
	00		 mov	 DWORD PTR [esi+508], ebx

; 31   : 	}
; 32   : 	else

  0009b	eb 0b		 jmp	 SHORT $LN1@AddRenderF
$LN3@AddRenderF:

; 33   : 		ioButton::AddRenderFrame( szType, pFrame );

  0009d	8b 4d e8	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  000a0	53		 push	 ebx
  000a1	57		 push	 edi
  000a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddRenderFrame@ioButton@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
$LN1@AddRenderF:

; 34   : }

  000a8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ab	5f		 pop	 edi
  000ac	5e		 pop	 esi
  000ad	33 cd		 xor	 ecx, ebp
  000af	5b		 pop	 ebx
  000b0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b5	c9		 leave
  000b6	c2 08 00	 ret	 8
?AddRenderFrame@NamedTitleBtn@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z ENDP ; NamedTitleBtn::AddRenderFrame
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_?ParseExtraInfo@ioButton@@UAEXAAVioXMLElement@@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ?ParseExtraInfo@NamedTitleBtn@@UAEXAAVioXMLElement@@@Z
_TEXT	SEGMENT
__k$506217 = -20					; size = 10
__k$506092 = -20					; size = 12
__$ArrayPad$ = -4					; size = 4
_xElement$ = 8						; size = 4
?ParseExtraInfo@NamedTitleBtn@@UAEXAAVioXMLElement@@@Z PROC ; NamedTitleBtn::ParseExtraInfo, COMDAT
; _this$ = ecx

; 37   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _xElement$[ebp]
  00014	56		 push	 esi
  00015	57		 push	 edi

; 38   : 	ioButton::ParseExtraInfo( xElement );

  00016	53		 push	 ebx
  00017	8b f9		 mov	 edi, ecx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ParseExtraInfo@ioButton@@UAEXAAVioXMLElement@@@Z

; 39   : 
; 40   : 	m_dwChangeTime = xElement.GetIntAttribute_e( "Change_Time" );

  0001f	6a 02		 push	 2
  00021	c7 45 ec ae 84
	8a 84		 mov	 DWORD PTR __k$506092[ebp], -2071296850 ; 848a84aeH
  00028	c7 45 f0 8a 89
	b4 be		 mov	 DWORD PTR __k$506092[ebp+4], -1095464566 ; beb4898aH
  0002f	8d 45 ec	 lea	 eax, DWORD PTR __k$506092[ebp]
  00032	c7 45 f4 84 81
	8e 00		 mov	 DWORD PTR __k$506092[ebp+8], 9339268 ; 008e8184H
  00039	59		 pop	 ecx
$LL106@ParseExtra:
  0003a	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00040	83 c0 04	 add	 eax, 4
  00043	49		 dec	 ecx
  00044	75 f4		 jne	 SHORT $LL106@ParseExtra
  00046	6a 08		 push	 8
  00048	5e		 pop	 esi
$LL103@ParseExtra:
  00049	8b c6		 mov	 eax, esi
  0004b	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  00050	79 05		 jns	 SHORT $LN223@ParseExtra
  00052	48		 dec	 eax
  00053	83 c8 fc	 or	 eax, -4			; fffffffcH
  00056	40		 inc	 eax
$LN223@ParseExtra:
  00057	b1 ed		 mov	 cl, -19			; ffffffedH
  00059	2a c8		 sub	 cl, al
  0005b	30 4c 35 ec	 xor	 BYTE PTR __k$506092[ebp+esi], cl
  0005f	46		 inc	 esi
  00060	83 fe 0b	 cmp	 esi, 11			; 0000000bH
  00063	7c e4		 jl	 SHORT $LL103@ParseExtra
  00065	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?GetIntAttribute@ioXMLElement@@QBEHPBD@Z
  0006b	8d 45 ec	 lea	 eax, DWORD PTR __k$506092[ebp]
  0006e	50		 push	 eax
  0006f	8b cb		 mov	 ecx, ebx
  00071	ff d6		 call	 esi
  00073	6a 02		 push	 2
  00075	89 87 04 02 00
	00		 mov	 DWORD PTR [edi+516], eax

; 41   : 	m_nAddAlpha = xElement.GetIntAttribute_e( "Add_Alpha" );

  0007b	c7 45 ec ac 88
	8f b5		 mov	 DWORD PTR __k$506217[ebp], -1248884564 ; b58f88acH
  00082	c7 45 f0 ac 80
	9b 82		 mov	 DWORD PTR __k$506217[ebp+4], -2103738196 ; 829b80acH
  00089	8d 45 ec	 lea	 eax, DWORD PTR __k$506217[ebp]
  0008c	66 c7 45 f4 8c
	00		 mov	 WORD PTR __k$506217[ebp+8], 140 ; 0000008cH
  00092	59		 pop	 ecx
$LL212@ParseExtra:
  00093	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00099	83 c0 04	 add	 eax, 4
  0009c	49		 dec	 ecx
  0009d	75 f4		 jne	 SHORT $LL212@ParseExtra
  0009f	80 75 f4 ed	 xor	 BYTE PTR __k$506217[ebp+8], -19 ; ffffffedH
  000a3	8d 45 ec	 lea	 eax, DWORD PTR __k$506217[ebp]
  000a6	50		 push	 eax
  000a7	8b cb		 mov	 ecx, ebx
  000a9	ff d6		 call	 esi

; 42   : }

  000ab	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ae	89 87 0c 02 00
	00		 mov	 DWORD PTR [edi+524], eax
  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	33 cd		 xor	 ecx, ebp
  000b8	5b		 pop	 ebx
  000b9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000be	c9		 leave
  000bf	c2 04 00	 ret	 4
?ParseExtraInfo@NamedTitleBtn@@UAEXAAVioXMLElement@@@Z ENDP ; NamedTitleBtn::ParseExtraInfo
_TEXT	ENDS
END
