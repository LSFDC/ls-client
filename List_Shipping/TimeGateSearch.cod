; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\GUI\TimeGateSearch.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?m_iReserveType@TimeGateSearch@@1HA		; TimeGateSearch::m_iReserveType
PUBLIC	?m_bSafetyRoom@TimeGateSearch@@1_NA		; TimeGateSearch::m_bSafetyRoom
PUBLIC	?m_dwTrainingStartTime@TimeGateSearch@@1KA	; TimeGateSearch::m_dwTrainingStartTime
PUBLIC	?m_dwPartyJoinStartTime@TimeGateSearch@@1KA	; TimeGateSearch::m_dwPartyJoinStartTime
PUBLIC	?m_dwPlazaStartTime@TimeGateSearch@@1KA		; TimeGateSearch::m_dwPlazaStartTime
PUBLIC	?m_dwPartyJoinTryCount@TimeGateSearch@@1KA	; TimeGateSearch::m_dwPartyJoinTryCount
_BSS	SEGMENT
?m_iReserveType@TimeGateSearch@@1HA DD 01H DUP (?)	; TimeGateSearch::m_iReserveType
?m_bSafetyRoom@TimeGateSearch@@1_NA DB 01H DUP (?)	; TimeGateSearch::m_bSafetyRoom
	ALIGN	4

?m_dwTrainingStartTime@TimeGateSearch@@1KA DD 01H DUP (?) ; TimeGateSearch::m_dwTrainingStartTime
?m_dwPartyJoinStartTime@TimeGateSearch@@1KA DD 01H DUP (?) ; TimeGateSearch::m_dwPartyJoinStartTime
?m_dwPlazaStartTime@TimeGateSearch@@1KA DD 01H DUP (?)	; TimeGateSearch::m_dwPlazaStartTime
?m_dwPartyJoinTryCount@TimeGateSearch@@1KA DD 01H DUP (?) ; TimeGateSearch::m_dwPartyJoinTryCount
_BSS	ENDS
PUBLIC	?return1@@YAIXZ					; return1
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
;	COMDAT ?return1@@YAIXZ
_TEXT	SEGMENT
?return1@@YAIXZ PROC					; return1, COMDAT

; 17   : 	__forceinline unsigned int return1() { __asm mov eax, 1 };

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?return1@@YAIXZ ENDP					; return1
_TEXT	ENDS
PUBLIC	?return5@@YAIXZ					; return5
; Function compile flags: /Ogsp
;	COMDAT ?return5@@YAIXZ
_TEXT	SEGMENT
?return5@@YAIXZ PROC					; return5, COMDAT

; 18   : 	__forceinline unsigned int return5() { __asm mov eax, 5 };

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?return5@@YAIXZ ENDP					; return5
_TEXT	ENDS
PUBLIC	?return10@@YAIXZ				; return10
; Function compile flags: /Ogsp
;	COMDAT ?return10@@YAIXZ
_TEXT	SEGMENT
?return10@@YAIXZ PROC					; return10, COMDAT

; 21   : 	__forceinline unsigned int return10() { __asm mov eax, 10 };

  00000	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  00005	c3		 ret	 0
?return10@@YAIXZ ENDP					; return10
_TEXT	ENDS
PUBLIC	?return1000@@YAIXZ				; return1000
; Function compile flags: /Ogsp
;	COMDAT ?return1000@@YAIXZ
_TEXT	SEGMENT
?return1000@@YAIXZ PROC					; return1000, COMDAT

; 29   : 	__forceinline unsigned int return1000() { __asm mov eax, 1000 };

  00000	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  00005	c3		 ret	 0
?return1000@@YAIXZ ENDP					; return1000
_TEXT	ENDS
PUBLIC	?return1000000000@@YAIXZ			; return1000000000
; Function compile flags: /Ogsp
;	COMDAT ?return1000000000@@YAIXZ
_TEXT	SEGMENT
?return1000000000@@YAIXZ PROC				; return1000000000, COMDAT

; 30   : 	__forceinline unsigned int return1000000000() { __asm mov eax, 1000000000 };

  00000	b8 00 ca 9a 3b	 mov	 eax, 1000000000		; 3b9aca00H
  00005	c3		 ret	 0
?return1000000000@@YAIXZ ENDP				; return1000000000
_TEXT	ENDS
PUBLIC	?return_PI@@YAIXZ				; return_PI
; Function compile flags: /Ogsp
;	COMDAT ?return_PI@@YAIXZ
_TEXT	SEGMENT
?return_PI@@YAIXZ PROC					; return_PI, COMDAT

; 31   : 	__forceinline unsigned int return_PI() { __asm mov eax,   3141592654 };

  00000	b8 4e e6 40 bb	 mov	 eax, -1153374642	; bb40e64eH
  00005	c3		 ret	 0
?return_PI@@YAIXZ ENDP					; return_PI
_TEXT	ENDS
PUBLIC	_cosf
EXTRN	__fltused:DWORD
EXTRN	__CIcos:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv69 = 8						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 410  :         {return ((float)cos((double)_X)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	d9 45 08	 fld	 DWORD PTR __X$[ebp]
  00006	e8 00 00 00 00	 call	 __CIcos
  0000b	d9 5d 08	 fstp	 DWORD PTR tv69[ebp]
  0000e	d9 45 08	 fld	 DWORD PTR tv69[ebp]
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
_cosf	ENDP
_TEXT	ENDS
PUBLIC	_sinf
EXTRN	__CIsin:PROC
; Function compile flags: /Ogsp
;	COMDAT _sinf
_TEXT	SEGMENT
tv69 = 8						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 430  :         {return ((float)sin((double)_X)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	d9 45 08	 fld	 DWORD PTR __X$[ebp]
  00006	e8 00 00 00 00	 call	 __CIsin
  0000b	d9 5d 08	 fstp	 DWORD PTR tv69[ebp]
  0000e	d9 45 08	 fld	 DWORD PTR tv69[ebp]
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
_sinf	ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendSearch@TimeGateSearch@@IAEXXZ		; TimeGateSearch::SendSearch
EXTRN	??1SP2Packet@@UAE@XZ:PROC			; SP2Packet::~SP2Packet
EXTRN	?SendToServer@TCPNetwork@@YAXAAVSP2Packet@@@Z:PROC ; TCPNetwork::SendToServer
EXTRN	??6SP2Packet@@QAEAAV0@H@Z:PROC			; SP2Packet::operator<<
EXTRN	??6SP2Packet@@QAEAAV0@_N@Z:PROC			; SP2Packet::operator<<
EXTRN	?GetCurPenaltyPeso@ioMyInfo@@QBEHXZ:PROC	; ioMyInfo::GetCurPenaltyPeso
EXTRN	?GetSingleton@ioMyInfo@@SAAAV1@XZ:PROC		; ioMyInfo::GetSingleton
EXTRN	?GetQuickStartMinPlayer@ioBattleRoomMgr@@QAEHH@Z:PROC ; ioBattleRoomMgr::GetQuickStartMinPlayer
EXTRN	?GetQuickStartMaxPlayer@ioBattleRoomMgr@@QAEHH@Z:PROC ; ioBattleRoomMgr::GetQuickStartMaxPlayer
EXTRN	?IsQuickStartSameUser@ioBattleRoomMgr@@QAE_NH@Z:PROC ; ioBattleRoomMgr::IsQuickStartSameUser
EXTRN	?GetQuickStartModeType@ioBattleRoomMgr@@QAEHXZ:PROC ; ioBattleRoomMgr::GetQuickStartModeType
EXTRN	?GetSingleton@ioBattleRoomMgr@@SAAAV1@XZ:PROC	; ioBattleRoomMgr::GetSingleton
EXTRN	??0SP2Packet@@QAE@K@Z:PROC			; SP2Packet::SP2Packet
EXTRN	?IsLadderTeam@ioLadderTeamMgr@@QAE_NXZ:PROC	; ioLadderTeamMgr::IsLadderTeam
EXTRN	?GetSingleton@ioLadderTeamMgr@@SAAAV1@XZ:PROC	; ioLadderTeamMgr::GetSingleton
EXTRN	?IsMouseBusy@ioApplication@@QAE_NXZ:PROC	; ioApplication::IsMouseBusy
EXTRN	?GetSingleton@ioApplication@@SAAAV1@XZ:PROC	; ioApplication::GetSingleton
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\timegatesearch.cpp
xdata$x	SEGMENT
__unwindtable$?SendSearch@TimeGateSearch@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendSearch@TimeGateSearch@@IAEXXZ$0
__ehfuncinfo$?SendSearch@TimeGateSearch@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SendSearch@TimeGateSearch@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?SendSearch@TimeGateSearch@@IAEXXZ
_TEXT	SEGMENT
_kPacket$511157 = -32808				; size = 32792
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?SendSearch@TimeGateSearch@@IAEXXZ PROC			; TimeGateSearch::SendSearch, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SendSearch@TimeGateSearch@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 1c 80 00 00	 mov	 eax, 32796		; 0000801cH
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	56		 push	 esi
  00026	50		 push	 eax
  00027	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00030	8b f1		 mov	 esi, ecx

; 106  : 	if( g_App.IsMouseBusy() ) return;  

  00032	e8 00 00 00 00	 call	 ?GetSingleton@ioApplication@@SAAAV1@XZ ; ioApplication::GetSingleton
  00037	8b c8		 mov	 ecx, eax
  00039	e8 00 00 00 00	 call	 ?IsMouseBusy@ioApplication@@QAE_NXZ ; ioApplication::IsMouseBusy
  0003e	84 c0		 test	 al, al
  00040	0f 85 11 01 00
	00		 jne	 $LN1@SendSearch

; 107  : 
; 108  : 	switch( m_iSearchType )

  00046	8b 86 d8 01 00
	00		 mov	 eax, DWORD PTR [esi+472]
  0004c	48		 dec	 eax
  0004d	48		 dec	 eax
  0004e	0f 85 03 01 00
	00		 jne	 $LN1@SendSearch

; 109  : 	{
; 110  : 	case ST_PARTY_JOIN:
; 111  : 		{
; 112  : 			if( !g_LadderTeamMgr.IsLadderTeam() )

  00054	e8 00 00 00 00	 call	 ?GetSingleton@ioLadderTeamMgr@@SAAAV1@XZ ; ioLadderTeamMgr::GetSingleton
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ?IsLadderTeam@ioLadderTeamMgr@@QAE_NXZ ; ioLadderTeamMgr::IsLadderTeam
  00060	84 c0		 test	 al, al
  00062	0f 85 ef 00 00
	00		 jne	 $LN1@SendSearch

; 113  : 			{
; 114  : 				SP2Packet kPacket( CTPK_USER_BATTLEROOM_JOIN );

  00068	6a 40		 push	 64			; 00000040H
  0006a	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$511157[ebp]
  00070	e8 00 00 00 00	 call	 ??0SP2Packet@@QAE@K@Z	; SP2Packet::SP2Packet
  00075	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 115  : 				// Observer << Invite << PenaltyPeso << iPenaltyPeso << .... ¼ø¼­·Î
; 116  : 				kPacket << false << false << m_bPenaltyPeso << g_MyInfo.GetCurPenaltyPeso() << -1 << g_BattleRoomMgr.GetQuickStartModeType() 
; 117  : 					<< g_BattleRoomMgr.GetQuickStartMinPlayer( g_BattleRoomMgr.GetQuickStartModeType() ) 
; 118  : 					<< g_BattleRoomMgr.GetQuickStartMaxPlayer( g_BattleRoomMgr.GetQuickStartModeType() )  
; 119  : 					<< g_BattleRoomMgr.IsQuickStartSameUser( g_BattleRoomMgr.GetQuickStartModeType() );

  00079	e8 00 00 00 00	 call	 ?GetSingleton@ioBattleRoomMgr@@SAAAV1@XZ ; ioBattleRoomMgr::GetSingleton
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ?GetQuickStartModeType@ioBattleRoomMgr@@QAEHXZ ; ioBattleRoomMgr::GetQuickStartModeType
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ?GetSingleton@ioBattleRoomMgr@@SAAAV1@XZ ; ioBattleRoomMgr::GetSingleton
  0008b	8b c8		 mov	 ecx, eax
  0008d	e8 00 00 00 00	 call	 ?IsQuickStartSameUser@ioBattleRoomMgr@@QAE_NH@Z ; ioBattleRoomMgr::IsQuickStartSameUser
  00092	0f b6 c0	 movzx	 eax, al
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?GetSingleton@ioBattleRoomMgr@@SAAAV1@XZ ; ioBattleRoomMgr::GetSingleton
  0009b	8b c8		 mov	 ecx, eax
  0009d	e8 00 00 00 00	 call	 ?GetQuickStartModeType@ioBattleRoomMgr@@QAEHXZ ; ioBattleRoomMgr::GetQuickStartModeType
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ?GetSingleton@ioBattleRoomMgr@@SAAAV1@XZ ; ioBattleRoomMgr::GetSingleton
  000a8	8b c8		 mov	 ecx, eax
  000aa	e8 00 00 00 00	 call	 ?GetQuickStartMaxPlayer@ioBattleRoomMgr@@QAEHH@Z ; ioBattleRoomMgr::GetQuickStartMaxPlayer
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ?GetSingleton@ioBattleRoomMgr@@SAAAV1@XZ ; ioBattleRoomMgr::GetSingleton
  000b5	8b c8		 mov	 ecx, eax
  000b7	e8 00 00 00 00	 call	 ?GetQuickStartModeType@ioBattleRoomMgr@@QAEHXZ ; ioBattleRoomMgr::GetQuickStartModeType
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?GetSingleton@ioBattleRoomMgr@@SAAAV1@XZ ; ioBattleRoomMgr::GetSingleton
  000c2	8b c8		 mov	 ecx, eax
  000c4	e8 00 00 00 00	 call	 ?GetQuickStartMinPlayer@ioBattleRoomMgr@@QAEHH@Z ; ioBattleRoomMgr::GetQuickStartMinPlayer
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ?GetSingleton@ioBattleRoomMgr@@SAAAV1@XZ ; ioBattleRoomMgr::GetSingleton
  000cf	8b c8		 mov	 ecx, eax
  000d1	e8 00 00 00 00	 call	 ?GetQuickStartModeType@ioBattleRoomMgr@@QAEHXZ ; ioBattleRoomMgr::GetQuickStartModeType
  000d6	50		 push	 eax
  000d7	6a ff		 push	 -1
  000d9	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  000de	8b c8		 mov	 ecx, eax
  000e0	e8 00 00 00 00	 call	 ?GetCurPenaltyPeso@ioMyInfo@@QBEHXZ ; ioMyInfo::GetCurPenaltyPeso
  000e5	50		 push	 eax
  000e6	0f b6 86 dc 01
	00 00		 movzx	 eax, BYTE PTR [esi+476]
  000ed	50		 push	 eax
  000ee	6a 00		 push	 0
  000f0	6a 00		 push	 0
  000f2	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$511157[ebp]
  000f8	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@_N@Z ; SP2Packet::operator<<
  000fd	8b c8		 mov	 ecx, eax
  000ff	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@_N@Z ; SP2Packet::operator<<
  00104	8b c8		 mov	 ecx, eax
  00106	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@_N@Z ; SP2Packet::operator<<
  0010b	8b c8		 mov	 ecx, eax
  0010d	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@H@Z ; SP2Packet::operator<<
  00112	8b c8		 mov	 ecx, eax
  00114	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@H@Z ; SP2Packet::operator<<
  00119	8b c8		 mov	 ecx, eax
  0011b	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@H@Z ; SP2Packet::operator<<
  00120	8b c8		 mov	 ecx, eax
  00122	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@H@Z ; SP2Packet::operator<<
  00127	8b c8		 mov	 ecx, eax
  00129	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@H@Z ; SP2Packet::operator<<
  0012e	8b c8		 mov	 ecx, eax
  00130	e8 00 00 00 00	 call	 ??6SP2Packet@@QAEAAV0@_N@Z ; SP2Packet::operator<<

; 120  : 				TCPNetwork::SendToServer( kPacket );

  00135	8d 85 d8 7f ff
	ff		 lea	 eax, DWORD PTR _kPacket$511157[ebp]
  0013b	50		 push	 eax
  0013c	e8 00 00 00 00	 call	 ?SendToServer@TCPNetwork@@YAXAAVSP2Packet@@@Z ; TCPNetwork::SendToServer

; 121  : 
; 122  : 				m_dwPartyJoinTryCount++;

  00141	ff 05 00 00 00
	00		 inc	 DWORD PTR ?m_dwPartyJoinTryCount@TimeGateSearch@@1KA ; TimeGateSearch::m_dwPartyJoinTryCount

; 123  : 			}

  00147	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0014b	59		 pop	 ecx
  0014c	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$511157[ebp]
  00152	e8 00 00 00 00	 call	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
$LN1@SendSearch:

; 124  : 		}
; 125  : 		break;
; 126  : 	}	
; 127  : }

  00157	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0015a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00161	59		 pop	 ecx
  00162	5e		 pop	 esi
  00163	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00166	33 cd		 xor	 ecx, ebp
  00168	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0016d	c9		 leave
  0016e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SendSearch@TimeGateSearch@@IAEXXZ$0:
  00000	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$511157[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
__ehhandler$?SendSearch@TimeGateSearch@@IAEXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a dc 7f ff
	ff		 mov	 ecx, DWORD PTR [edx-32804]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SendSearch@TimeGateSearch@@IAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SendSearch@TimeGateSearch@@IAEXXZ ENDP			; TimeGateSearch::SendSearch
PUBLIC	__$ArrayPad$
PUBLIC	?SendCancel@TimeGateSearch@@IAEXXZ		; TimeGateSearch::SendCancel
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SendCancel@TimeGateSearch@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendCancel@TimeGateSearch@@IAEXXZ$0
__ehfuncinfo$?SendCancel@TimeGateSearch@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SendCancel@TimeGateSearch@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?SendCancel@TimeGateSearch@@IAEXXZ
_TEXT	SEGMENT
_kPacket$511167 = -32808				; size = 32792
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?SendCancel@TimeGateSearch@@IAEXXZ PROC			; TimeGateSearch::SendCancel, COMDAT
; _this$ = ecx

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SendCancel@TimeGateSearch@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 1c 80 00 00	 mov	 eax, 32796		; 0000801cH
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	50		 push	 eax
  00026	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00029	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 131  : 	switch( m_iSearchType )

  0002f	8b 81 d8 01 00
	00		 mov	 eax, DWORD PTR [ecx+472]
  00035	48		 dec	 eax
  00036	48		 dec	 eax
  00037	75 3d		 jne	 SHORT $LN1@SendCancel

; 132  : 	{
; 133  : 	case ST_PARTY_JOIN:
; 134  : 		{
; 135  : 			if( !g_LadderTeamMgr.IsLadderTeam() )

  00039	e8 00 00 00 00	 call	 ?GetSingleton@ioLadderTeamMgr@@SAAAV1@XZ ; ioLadderTeamMgr::GetSingleton
  0003e	8b c8		 mov	 ecx, eax
  00040	e8 00 00 00 00	 call	 ?IsLadderTeam@ioLadderTeamMgr@@QAE_NXZ ; ioLadderTeamMgr::IsLadderTeam
  00045	84 c0		 test	 al, al
  00047	75 2d		 jne	 SHORT $LN1@SendCancel

; 136  : 			{
; 137  : 				SP2Packet kPacket( CTPK_RESERVE_BATTLEROOM_DELETE );

  00049	6a 78		 push	 120			; 00000078H
  0004b	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$511167[ebp]
  00051	e8 00 00 00 00	 call	 ??0SP2Packet@@QAE@K@Z	; SP2Packet::SP2Packet
  00056	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 138  : 				TCPNetwork::SendToServer( kPacket );

  0005a	8d 85 d8 7f ff
	ff		 lea	 eax, DWORD PTR _kPacket$511167[ebp]
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?SendToServer@TCPNetwork@@YAXAAVSP2Packet@@@Z ; TCPNetwork::SendToServer

; 139  : 			}

  00066	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0006a	59		 pop	 ecx
  0006b	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$511167[ebp]
  00071	e8 00 00 00 00	 call	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
$LN1@SendCancel:

; 140  : 		}
; 141  : 		break;
; 142  : 	}	
; 143  : }

  00076	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00079	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00080	59		 pop	 ecx
  00081	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00084	33 cd		 xor	 ecx, ebp
  00086	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008b	c9		 leave
  0008c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SendCancel@TimeGateSearch@@IAEXXZ$0:
  00000	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$511167[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
__ehhandler$?SendCancel@TimeGateSearch@@IAEXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a e0 7f ff
	ff		 mov	 ecx, DWORD PTR [edx-32800]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SendCancel@TimeGateSearch@@IAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SendCancel@TimeGateSearch@@IAEXXZ ENDP			; TimeGateSearch::SendCancel
PUBLIC	?iwm_hide@TimeGateSearch@@UAEXXZ		; TimeGateSearch::iwm_hide
; Function compile flags: /Ogsp
;	COMDAT ?iwm_hide@TimeGateSearch@@UAEXXZ
_TEXT	SEGMENT
?iwm_hide@TimeGateSearch@@UAEXXZ PROC			; TimeGateSearch::iwm_hide, COMDAT
; _this$ = ecx

; 191  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 192  : 	SendCancel();

  00003	e8 00 00 00 00	 call	 ?SendCancel@TimeGateSearch@@IAEXXZ ; TimeGateSearch::SendCancel

; 193  : 	m_iSearchType = 0;

  00008	83 a6 d8 01 00
	00 00		 and	 DWORD PTR [esi+472], 0
  0000f	5e		 pop	 esi

; 194  : }

  00010	c3		 ret	 0
?iwm_hide@TimeGateSearch@@UAEXXZ ENDP			; TimeGateSearch::iwm_hide
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1exception@std@@UAE@XZ
  00012	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00016	74 07		 je	 SHORT $LN1@scalar
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	59		 pop	 ecx
$LN1@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__real@4f800000
PUBLIC	?AutoSearchProcess@TimeGateSearch@@IAEXXZ	; TimeGateSearch::AutoSearchProcess
EXTRN	__imp_?ShowWnd@ioGUIManager@@QAEXK_N@Z:PROC
EXTRN	?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ:PROC	; ioSP2GUIManager::GetSingleton
EXTRN	__imp_?HideWnd@ioWnd@@QAEXXZ:PROC
EXTRN	__imp_?GetLoopSec@ioFrameTimer@@QBEKXZ:PROC
EXTRN	__imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ:PROC
EXTRN	__ftol2:PROC
;	COMDAT __real@4f800000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\timegatesearch.cpp
CONST	ENDS
;	COMDAT ?AutoSearchProcess@TimeGateSearch@@IAEXXZ
_TEXT	SEGMENT
tv186 = -4						; size = 4
tv183 = -4						; size = 4
?AutoSearchProcess@TimeGateSearch@@IAEXXZ PROC		; TimeGateSearch::AutoSearchProcess, COMDAT
; _this$ = ecx

; 273  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 274  : 	if( m_dwAutoSearchTime == 0 ) return;

  00007	83 be c4 01 00
	00 00		 cmp	 DWORD PTR [esi+452], 0
  0000e	0f 84 ce 00 00
	00		 je	 $LN1@AutoSearch

; 275  : 	
; 276  : 	if( m_iSearchType == ST_PARTY_JOIN )

  00014	83 be d8 01 00
	00 02		 cmp	 DWORD PTR [esi+472], 2
  0001b	57		 push	 edi
  0001c	0f 85 8b 00 00
	00		 jne	 $LN6@AutoSearch

; 277  : 	{
; 278  : 		DWORD dwCurSecGap = ( FRAMEGETTIME() - m_dwPartyJoinStartTime ) / FLOAT1000;

  00022	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  00027	8b f8		 mov	 edi, eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  0002f	8b c8		 mov	 ecx, eax
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00037	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?m_dwPartyJoinStartTime@TimeGateSearch@@1KA ; TimeGateSearch::m_dwPartyJoinStartTime
  0003d	89 45 fc	 mov	 DWORD PTR tv186[ebp], eax
  00040	db 45 fc	 fild	 DWORD PTR tv186[ebp]
  00043	79 06		 jns	 SHORT $LN13@AutoSearch
  00045	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN13@AutoSearch:
  0004b	89 7d fc	 mov	 DWORD PTR tv183[ebp], edi
  0004e	db 45 fc	 fild	 DWORD PTR tv183[ebp]
  00051	85 ff		 test	 edi, edi
  00053	79 06		 jns	 SHORT $LN14@AutoSearch
  00055	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN14@AutoSearch:
  0005b	de f9		 fdivp	 ST(1), ST(0)
  0005d	e8 00 00 00 00	 call	 __ftol2

; 279  : 		if( dwCurSecGap >= m_dwPartyJoinTryCount * m_dwBattleJoinTrySec )

  00062	8b 8e c0 01 00
	00		 mov	 ecx, DWORD PTR [esi+448]
  00068	8b d1		 mov	 edx, ecx
  0006a	0f af 15 00 00
	00 00		 imul	 edx, DWORD PTR ?m_dwPartyJoinTryCount@TimeGateSearch@@1KA ; TimeGateSearch::m_dwPartyJoinTryCount
  00071	3b c2		 cmp	 eax, edx
  00073	72 09		 jb	 SHORT $LN5@AutoSearch

; 280  : 		{
; 281  : 			//
; 282  : 			SendSearch();

  00075	8b ce		 mov	 ecx, esi
  00077	e8 00 00 00 00	 call	 ?SendSearch@TimeGateSearch@@IAEXXZ ; TimeGateSearch::SendSearch

; 283  : 		}
; 284  : 		else

  0007c	eb 63		 jmp	 SHORT $LN12@AutoSearch
$LN5@AutoSearch:

; 285  : 		{
; 286  : 			if( dwCurSecGap >= ( ( m_dwBattleJoinTry - 1 ) * m_dwBattleJoinTrySec ) + 2 )      // 2ÃÊÁ¤µµ ÅÒÀ» ÁØ´Ù.

  0007e	8b 96 bc 01 00
	00		 mov	 edx, DWORD PTR [esi+444]
  00084	4a		 dec	 edx
  00085	0f af d1	 imul	 edx, ecx
  00088	83 c2 02	 add	 edx, 2
  0008b	3b c2		 cmp	 eax, edx
  0008d	72 52		 jb	 SHORT $LN12@AutoSearch

; 287  : 			{
; 288  : 				HideWnd();

  0008f	8b ce		 mov	 ecx, esi
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HideWnd@ioWnd@@QAEXXZ

; 289  : 				g_GUIMgr.ShowWnd( TIMEGATE_SEARCH_RESULT );

  00097	6a 00		 push	 0
  00099	68 bc 0b 00 00	 push	 3004			; 00000bbcH
  0009e	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  000a3	8b c8		 mov	 ecx, eax
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ShowWnd@ioGUIManager@@QAEXK_N@Z

; 290  : 			}
; 291  : 		}		
; 292  : 	}
; 293  : 	else

  000ab	eb 34		 jmp	 SHORT $LN12@AutoSearch
$LN6@AutoSearch:

; 294  : 	{
; 295  : 		DWORD dwGap = FRAMEGETTIME() - m_dwAutoSearchTime;

  000ad	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  000b3	ff d7		 call	 edi
  000b5	8b c8		 mov	 ecx, eax
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  000bd	2b 86 c4 01 00
	00		 sub	 eax, DWORD PTR [esi+452]

; 296  : 		if( dwGap > 10000 )

  000c3	3d 10 27 00 00	 cmp	 eax, 10000		; 00002710H
  000c8	76 17		 jbe	 SHORT $LN12@AutoSearch

; 297  : 		{
; 298  : 			//
; 299  : 			SendSearch();

  000ca	8b ce		 mov	 ecx, esi
  000cc	e8 00 00 00 00	 call	 ?SendSearch@TimeGateSearch@@IAEXXZ ; TimeGateSearch::SendSearch

; 300  : 			m_dwAutoSearchTime = FRAMEGETTIME();

  000d1	ff d7		 call	 edi
  000d3	8b c8		 mov	 ecx, eax
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  000db	89 86 c4 01 00
	00		 mov	 DWORD PTR [esi+452], eax
$LN12@AutoSearch:
  000e1	5f		 pop	 edi
$LN1@AutoSearch:
  000e2	5e		 pop	 esi

; 301  : 		}
; 302  : 	}
; 303  : }

  000e3	c9		 leave
  000e4	c3		 ret	 0
?AutoSearchProcess@TimeGateSearch@@IAEXXZ ENDP		; TimeGateSearch::AutoSearchProcess
_TEXT	ENDS
PUBLIC	?SetSearching@TimeGateSearch@@QAEXABVioHashString@@H_N1@Z ; TimeGateSearch::SetSearching
EXTRN	__imp_?ShowWnd@ioWnd@@QAEXXZ:PROC
EXTRN	__imp_??4ioHashString@@QAEAAV0@ABV0@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ?SetSearching@TimeGateSearch@@QAEXABVioHashString@@H_N1@Z
_TEXT	SEGMENT
_szTitle$ = 8						; size = 4
_eSearchType$ = 12					; size = 4
_bReserve$ = 16						; size = 1
_bSafetyRoom$ = 20					; size = 1
?SetSearching@TimeGateSearch@@QAEXABVioHashString@@H_N1@Z PROC ; TimeGateSearch::SetSearching, COMDAT
; _this$ = ecx

; 306  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f1		 mov	 esi, ecx

; 307  : 	HideWnd();

  00007	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HideWnd@ioWnd@@QAEXXZ

; 308  : 
; 309  : 	DWORD dwCurTime = FRAMEGETTIME();

  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00013	8b c8		 mov	 ecx, eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ

; 310  : 
; 311  : 	m_szCurTitle = szTitle;

  0001b	ff 75 08	 push	 DWORD PTR _szTitle$[ebp]
  0001e	8d 8e c8 01 00
	00		 lea	 ecx, DWORD PTR [esi+456]
  00024	8b f8		 mov	 edi, eax
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z

; 312  : 	m_iSearchType = eSearchType;

  0002c	8b 45 0c	 mov	 eax, DWORD PTR _eSearchType$[ebp]
  0002f	89 86 d8 01 00
	00		 mov	 DWORD PTR [esi+472], eax

; 313  : 
; 314  : 	switch(m_iSearchType)

  00035	48		 dec	 eax
  00036	74 16		 je	 SHORT $LN2@SetSearchi
  00038	48		 dec	 eax
  00039	75 1f		 jne	 SHORT $LN1@SetSearchi

; 315  : 	{
; 316  : 	case ST_PARTY_JOIN:
; 317  : 		{
; 318  : 			if( !bReserve )

  0003b	38 45 10	 cmp	 BYTE PTR _bReserve$[ebp], al
  0003e	75 1a		 jne	 SHORT $LN1@SetSearchi

; 319  : 			{
; 320  : 				m_dwPartyJoinStartTime = dwCurTime;
; 321  : 				m_dwPartyJoinTryCount  = 0;

  00040	21 05 00 00 00
	00		 and	 DWORD PTR ?m_dwPartyJoinTryCount@TimeGateSearch@@1KA, eax ; TimeGateSearch::m_dwPartyJoinTryCount
  00046	89 3d 00 00 00
	00		 mov	 DWORD PTR ?m_dwPartyJoinStartTime@TimeGateSearch@@1KA, edi ; TimeGateSearch::m_dwPartyJoinStartTime

; 322  : 			}
; 323  : 		}
; 324  : 		break;

  0004c	eb 0c		 jmp	 SHORT $LN1@SetSearchi
$LN2@SetSearchi:

; 325  : 	case ST_PLAZA:
; 326  : 		{
; 327  : 			if( !bReserve )

  0004e	80 7d 10 00	 cmp	 BYTE PTR _bReserve$[ebp], 0
  00052	75 06		 jne	 SHORT $LN1@SetSearchi

; 328  : 				m_dwPlazaStartTime = dwCurTime;

  00054	89 3d 00 00 00
	00		 mov	 DWORD PTR ?m_dwPlazaStartTime@TimeGateSearch@@1KA, edi ; TimeGateSearch::m_dwPlazaStartTime
$LN1@SetSearchi:

; 329  : 		}
; 330  : 		break;
; 331  : 	}
; 332  : 	
; 333  : 	ShowWnd();

  0005a	8b ce		 mov	 ecx, esi
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ShowWnd@ioWnd@@QAEXXZ

; 334  : 	SendSearch();

  00062	8b ce		 mov	 ecx, esi
  00064	e8 00 00 00 00	 call	 ?SendSearch@TimeGateSearch@@IAEXXZ ; TimeGateSearch::SendSearch
  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi

; 335  : }

  0006b	5d		 pop	 ebp
  0006c	c2 10 00	 ret	 16			; 00000010H
?SetSearching@TimeGateSearch@@QAEXABVioHashString@@H_N1@Z ENDP ; TimeGateSearch::SetSearching
_TEXT	ENDS
PUBLIC	?iwm_esc@TimeGateSearch@@UAE_NXZ		; TimeGateSearch::iwm_esc
EXTRN	__imp_?FindChildWnd@ioWnd@@QAEPAV1@K@Z:PROC
EXTRN	__imp_?HasWndStyle@ioWnd@@QBE_NK@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ?iwm_esc@TimeGateSearch@@UAE_NXZ
_TEXT	SEGMENT
?iwm_esc@TimeGateSearch@@UAE_NXZ PROC			; TimeGateSearch::iwm_esc, COMDAT
; _this$ = ecx

; 347  : {

  00000	57		 push	 edi

; 348  : 	if( HasWndStyle( IWS_EXIT_ESC ) )

  00001	6a 20		 push	 32			; 00000020H
  00003	8b f9		 mov	 edi, ecx
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HasWndStyle@ioWnd@@QBE_NK@Z
  0000b	84 c0		 test	 al, al
  0000d	74 1f		 je	 SHORT $LN1@iwm_esc

; 349  : 	{
; 350  : 		iwm_command( FindChildWnd( ID_EXIT ), IOBN_BTNUP, 0 );

  0000f	56		 push	 esi
  00010	8b 37		 mov	 esi, DWORD PTR [edi]
  00012	6a 00		 push	 0
  00014	6a 11		 push	 17			; 00000011H
  00016	6a 01		 push	 1
  00018	8b cf		 mov	 ecx, edi
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindChildWnd@ioWnd@@QAEPAV1@K@Z
  00020	50		 push	 eax
  00021	8b cf		 mov	 ecx, edi
  00023	ff 96 8c 00 00
	00		 call	 DWORD PTR [esi+140]
  00029	5e		 pop	 esi

; 351  : 		return true;

  0002a	b0 01		 mov	 al, 1
  0002c	5f		 pop	 edi

; 354  : }

  0002d	c3		 ret	 0
$LN1@iwm_esc:

; 352  : 	}
; 353  : 	return false;

  0002e	32 c0		 xor	 al, al
  00030	5f		 pop	 edi

; 354  : }

  00031	c3		 ret	 0
?iwm_esc@TimeGateSearch@@UAE_NXZ ENDP			; TimeGateSearch::iwm_esc
_TEXT	ENDS
PUBLIC	?iwm_command@TimeGateSearch@@UAEXPAVioWnd@@HK@Z	; TimeGateSearch::iwm_command
EXTRN	__imp_?GetID@ioWnd@@QBEKXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?iwm_command@TimeGateSearch@@UAEXPAVioWnd@@HK@Z
_TEXT	SEGMENT
_pWnd$ = 8						; size = 4
_cmd$ = 12						; size = 4
_param$ = 16						; size = 4
?iwm_command@TimeGateSearch@@UAEXPAVioWnd@@HK@Z PROC	; TimeGateSearch::iwm_command, COMDAT
; _this$ = ecx

; 357  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 358  : 	DWORD dwID = pWnd->GetID();

  00006	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetID@ioWnd@@QBEKXZ

; 359  : 	
; 360  : 	switch( dwID )

  0000f	48		 dec	 eax
  00010	75 0e		 jne	 SHORT $LN1@iwm_comman

; 361  : 	{
; 362  : 	case ID_EXIT:
; 363  : 		if( cmd == IOBN_BTNUP )

  00012	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  00016	75 08		 jne	 SHORT $LN1@iwm_comman

; 364  : 		{
; 365  : 			HideWnd();

  00018	8b ce		 mov	 ecx, esi
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HideWnd@ioWnd@@QAEXXZ
$LN1@iwm_comman:
  00020	5e		 pop	 esi

; 366  : 		}
; 367  : 		break;
; 368  : 	}
; 369  : }

  00021	5d		 pop	 ebp
  00022	c2 0c 00	 ret	 12			; 0000000cH
?iwm_command@TimeGateSearch@@UAEXPAVioWnd@@HK@Z ENDP	; TimeGateSearch::iwm_command
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	return (_Where);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 58   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 62   : 	}

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??_7TimeGateSearchResult@@6B@			; TimeGateSearchResult::`vftable'
PUBLIC	??0TimeGateSearchResult@@QAE@XZ			; TimeGateSearchResult::TimeGateSearchResult
PUBLIC	??_R4TimeGateSearchResult@@6B@			; TimeGateSearchResult::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTimeGateSearchResult@@@8		; TimeGateSearchResult `RTTI Type Descriptor'
PUBLIC	??_R3TimeGateSearchResult@@8			; TimeGateSearchResult::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TimeGateSearchResult@@8			; TimeGateSearchResult::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TimeGateSearchResult@@8		; TimeGateSearchResult::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioWnd@@8				; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioWnd@@@8				; ioWnd `RTTI Type Descriptor'
PUBLIC	??_R3ioWnd@@8					; ioWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioWnd@@8					; ioWnd::`RTTI Base Class Array'
PUBLIC	?OnRender@TimeGateSearchResult@@MAEXXZ		; TimeGateSearchResult::OnRender
PUBLIC	?iwm_command@TimeGateSearchResult@@UAEXPAVioWnd@@HK@Z ; TimeGateSearchResult::iwm_command
PUBLIC	?iwm_spacebar@TimeGateSearchResult@@UAE_NXZ	; TimeGateSearchResult::iwm_spacebar
EXTRN	__imp_??0ioWnd@@QAE@XZ:PROC
EXTRN	?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z:PROC ; ioWnd::AddRenderFrame
EXTRN	?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC ; ioWnd::AddRenderImage
EXTRN	?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z:PROC ; ioWnd::AddTooltipHelp
EXTRN	?ParseExtraInfo@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC ; ioWnd::ParseExtraInfo
EXTRN	?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC ; ioWnd::AddNamedRenderImage
EXTRN	?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z:PROC ; ioWnd::RemoveNamedRenderImage
EXTRN	?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z:PROC ; ioWnd::GetNamedRenderImage
EXTRN	?SetWindowAlpha@ioWnd@@UAEXH@Z:PROC		; ioWnd::SetWindowAlpha
EXTRN	?SetActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetActive
EXTRN	?SetInActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetInActive
EXTRN	?ClearElementImageList@ioWnd@@UAEXXZ:PROC	; ioWnd::ClearElementImageList
EXTRN	?SetSize@ioWnd@@UAEXHH@Z:PROC			; ioWnd::SetSize
EXTRN	?SetPositionToDefault@ioWnd@@UAEXHH_N0@Z:PROC	; ioWnd::SetPositionToDefault
EXTRN	?IsNeedProcess@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsNeedProcess
EXTRN	?IsCanMouseReaction@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsCanMouseReaction
EXTRN	?AddChild@ioWnd@@UAEXPAV1@@Z:PROC		; ioWnd::AddChild
EXTRN	?DeleteChild@ioWnd@@UAEXK@Z:PROC		; ioWnd::DeleteChild
EXTRN	?DeleteAllChild@ioWnd@@UAEXXZ:PROC		; ioWnd::DeleteAllChild
EXTRN	?OnRenderShowAndHide@ioWnd@@MAE_NXZ:PROC	; ioWnd::OnRenderShowAndHide
EXTRN	?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z:PROC ; ioWnd::OnRenderShowAndHideByDefault
EXTRN	?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByTop
EXTRN	?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByDown
EXTRN	?OnRenderAfterChild@ioWnd@@MAEXXZ:PROC		; ioWnd::OnRenderAfterChild
EXTRN	?OnProcess@ioWnd@@MAEXM@Z:PROC			; ioWnd::OnProcess
EXTRN	?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z:PROC	; ioWnd::OnMouseProcess
EXTRN	?CheckFrameReSize@ioWnd@@MAEXHHHH@Z:PROC	; ioWnd::CheckFrameReSize
EXTRN	?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z:PROC ; ioWnd::RenderImageList
EXTRN	?iwm_create@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_create
EXTRN	?iwm_destroy@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_destroy
EXTRN	?iwm_lbuttondown@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_lbuttondown
EXTRN	?iwm_lbuttonup@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_lbuttonup
EXTRN	?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z:PROC ; ioWnd::iwm_lbuttonDBLCLK
EXTRN	?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_rbuttondown
EXTRN	?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_rbuttonup
EXTRN	?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mouseover
EXTRN	?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mousemove
EXTRN	?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mouseleave
EXTRN	?iwm_vscroll@ioWnd@@UAEXKH@Z:PROC		; ioWnd::iwm_vscroll
EXTRN	?iwm_wheel@ioWnd@@UAEXH@Z:PROC			; ioWnd::iwm_wheel
EXTRN	?iwm_show@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_show
EXTRN	?iwm_hide@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_hide
EXTRN	?iwm_esc@ioWnd@@UAE_NXZ:PROC			; ioWnd::iwm_esc
EXTRN	?iwm_gototop@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_gototop
EXTRN	?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragenter
EXTRN	?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragover
EXTRN	?iwm_dragleave@ioWnd@@UAEXXZ:PROC		; ioWnd::iwm_dragleave
EXTRN	?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z:PROC ; ioWnd::iwm_dropitem
EXTRN	?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z:PROC ; ioWnd::iwm_dropdone
EXTRN	?IsEXType@ioWnd@@UBE_NXZ:PROC			; ioWnd::IsEXType
EXTRN	?GetWndType@ioWnd@@UBEKXZ:PROC			; ioWnd::GetWndType
EXTRN	?RenderWnd@ioWnd@@UAEXXZ:PROC			; ioWnd::RenderWnd
EXTRN	?SetIDEX@ioWnd@@UAEXAAK_N@Z:PROC		; ioWnd::SetIDEX
EXTRN	?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC	; ioWnd::ParseXML
EXTRN	?GetHeaderFileName@ioWnd@@UAEPBDXZ:PROC		; ioWnd::GetHeaderFileName
EXTRN	?GetTemplateName@ioWnd@@UAEPBDXZ:PROC		; ioWnd::GetTemplateName
EXTRN	?GetDefClassName@ioWnd@@UBEPBDXZ:PROC		; ioWnd::GetDefClassName
EXTRN	?_Clone@ioWnd@@UAEPAV1@XZ:PROC			; ioWnd::_Clone
EXTRN	?Copy@ioWnd@@UAEXPAV1@@Z:PROC			; ioWnd::Copy
EXTRN	?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z:PROC	; ioWnd::Save
EXTRN	?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC ; ioWnd::SetSaveData
EXTRN	?SetPosX@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosX
EXTRN	?SetPosY@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosY
EXTRN	?SetWidth@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetWidth
EXTRN	?SetHeight@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetHeight
EXTRN	?GetNumFixedRenderFrame@ioWnd@@UBEHXZ:PROC	; ioWnd::GetNumFixedRenderFrame
EXTRN	?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z:PROC	; ioWnd::GetFixedRenderFrameType
EXTRN	?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioWnd::GetRenderFrame
EXTRN	?GetNumFixedRenderImage@ioWnd@@UBEHXZ:PROC	; ioWnd::GetNumFixedRenderImage
EXTRN	?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z:PROC	; ioWnd::GetFixedRenderImageType
EXTRN	?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioWnd::GetRenderImage
EXTRN	?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z:PROC ; ioWnd::AddEffect
EXTRN	?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z:PROC ; ioWnd::GetEffect
EXTRN	??_ETimeGateSearchResult@@UAEPAXI@Z:PROC	; TimeGateSearchResult::`vector deleting destructor'
;	COMDAT ??_R2ioWnd@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\timegatesearch.cpp
rdata$r	SEGMENT
??_R2ioWnd@@8 DD FLAT:??_R1A@?0A@EA@ioWnd@@8		; ioWnd::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioWnd@@8
rdata$r	SEGMENT
??_R3ioWnd@@8 DD 00H					; ioWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioWnd@@@8
_DATA	SEGMENT
??_R0?AVioWnd@@@8 DD FLAT:??_7type_info@@6B@		; ioWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioWnd@@8 DD FLAT:??_R0?AVioWnd@@@8	; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@TimeGateSearchResult@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TimeGateSearchResult@@8 DD FLAT:??_R0?AVTimeGateSearchResult@@@8 ; TimeGateSearchResult::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TimeGateSearchResult@@8
rdata$r	ENDS
;	COMDAT ??_R2TimeGateSearchResult@@8
rdata$r	SEGMENT
??_R2TimeGateSearchResult@@8 DD FLAT:??_R1A@?0A@EA@TimeGateSearchResult@@8 ; TimeGateSearchResult::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3TimeGateSearchResult@@8
rdata$r	SEGMENT
??_R3TimeGateSearchResult@@8 DD 00H			; TimeGateSearchResult::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2TimeGateSearchResult@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTimeGateSearchResult@@@8
_DATA	SEGMENT
??_R0?AVTimeGateSearchResult@@@8 DD FLAT:??_7type_info@@6B@ ; TimeGateSearchResult `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTimeGateSearchResult@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TimeGateSearchResult@@6B@
rdata$r	SEGMENT
??_R4TimeGateSearchResult@@6B@ DD 00H			; TimeGateSearchResult::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTimeGateSearchResult@@@8
	DD	FLAT:??_R3TimeGateSearchResult@@8
rdata$r	ENDS
;	COMDAT ??_7TimeGateSearchResult@@6B@
CONST	SEGMENT
??_7TimeGateSearchResult@@6B@ DD FLAT:??_R4TimeGateSearchResult@@6B@ ; TimeGateSearchResult::`vftable'
	DD	FLAT:?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
	DD	FLAT:?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z
	DD	FLAT:?ParseExtraInfo@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z
	DD	FLAT:?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z
	DD	FLAT:?SetWindowAlpha@ioWnd@@UAEXH@Z
	DD	FLAT:?SetActive@ioWnd@@UAEXXZ
	DD	FLAT:?SetInActive@ioWnd@@UAEXXZ
	DD	FLAT:?ClearElementImageList@ioWnd@@UAEXXZ
	DD	FLAT:?SetSize@ioWnd@@UAEXHH@Z
	DD	FLAT:?SetPositionToDefault@ioWnd@@UAEXHH_N0@Z
	DD	FLAT:?IsNeedProcess@ioWnd@@UBE_NXZ
	DD	FLAT:?IsCanMouseReaction@ioWnd@@UBE_NXZ
	DD	FLAT:?AddChild@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?DeleteChild@ioWnd@@UAEXK@Z
	DD	FLAT:?DeleteAllChild@ioWnd@@UAEXXZ
	DD	FLAT:?OnRenderShowAndHide@ioWnd@@MAE_NXZ
	DD	FLAT:?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRender@TimeGateSearchResult@@MAEXXZ
	DD	FLAT:?OnRenderAfterChild@ioWnd@@MAEXXZ
	DD	FLAT:?OnProcess@ioWnd@@MAEXM@Z
	DD	FLAT:?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z
	DD	FLAT:?CheckFrameReSize@ioWnd@@MAEXHHHH@Z
	DD	FLAT:?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z
	DD	FLAT:?iwm_create@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_destroy@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_lbuttondown@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonup@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_command@TimeGateSearchResult@@UAEXPAVioWnd@@HK@Z
	DD	FLAT:?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_vscroll@ioWnd@@UAEXKH@Z
	DD	FLAT:?iwm_wheel@ioWnd@@UAEXH@Z
	DD	FLAT:?iwm_show@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_hide@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_esc@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_spacebar@TimeGateSearchResult@@UAE_NXZ
	DD	FLAT:?iwm_gototop@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragleave@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z
	DD	FLAT:?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z
	DD	FLAT:?IsEXType@ioWnd@@UBE_NXZ
	DD	FLAT:?GetWndType@ioWnd@@UBEKXZ
	DD	FLAT:?RenderWnd@ioWnd@@UAEXXZ
	DD	FLAT:?SetIDEX@ioWnd@@UAEXAAK_N@Z
	DD	FLAT:?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?GetHeaderFileName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetTemplateName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetDefClassName@ioWnd@@UBEPBDXZ
	DD	FLAT:?_Clone@ioWnd@@UAEPAV1@XZ
	DD	FLAT:?Copy@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z
	DD	FLAT:?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?SetPosX@ioWnd@@UAEXH@Z
	DD	FLAT:?SetPosY@ioWnd@@UAEXH@Z
	DD	FLAT:?SetWidth@ioWnd@@UAEXH@Z
	DD	FLAT:?SetHeight@ioWnd@@UAEXH@Z
	DD	FLAT:?GetNumFixedRenderFrame@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?GetNumFixedRenderImage@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z
	DD	FLAT:?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z
	DD	FLAT:??_ETimeGateSearchResult@@UAEPAXI@Z
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0TimeGateSearchResult@@QAE@XZ
_TEXT	SEGMENT
??0TimeGateSearchResult@@QAE@XZ PROC			; TimeGateSearchResult::TimeGateSearchResult, COMDAT
; _this$ = ecx

; 427  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioWnd@@QAE@XZ
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7TimeGateSearchResult@@6B@

; 428  : 
; 429  : }

  0000f	8b c6		 mov	 eax, esi
  00011	5e		 pop	 esi
  00012	c3		 ret	 0
??0TimeGateSearchResult@@QAE@XZ ENDP			; TimeGateSearchResult::TimeGateSearchResult
_TEXT	ENDS
PUBLIC	??1TimeGateSearchResult@@UAE@XZ			; TimeGateSearchResult::~TimeGateSearchResult
EXTRN	__imp_??1ioWnd@@UAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1TimeGateSearchResult@@UAE@XZ
_TEXT	SEGMENT
??1TimeGateSearchResult@@UAE@XZ PROC			; TimeGateSearchResult::~TimeGateSearchResult, COMDAT
; _this$ = ecx

; 432  : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7TimeGateSearchResult@@6B@

; 433  : 
; 434  : }

  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioWnd@@UAE@XZ
??1TimeGateSearchResult@@UAE@XZ ENDP			; TimeGateSearchResult::~TimeGateSearchResult
_TEXT	ENDS
EXTRN	__imp_?IsShow@ioWnd@@QBE_NXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?iwm_spacebar@TimeGateSearchResult@@UAE_NXZ
_TEXT	SEGMENT
?iwm_spacebar@TimeGateSearchResult@@UAE_NXZ PROC	; TimeGateSearchResult::iwm_spacebar, COMDAT
; _this$ = ecx

; 437  : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 438  : 	ioWnd *pBtn = FindChildWnd( ID_SEARCH_CORRECTION );

  00002	6a 02		 push	 2
  00004	8b f1		 mov	 esi, ecx
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindChildWnd@ioWnd@@QAEPAV1@K@Z
  0000c	8b f8		 mov	 edi, eax

; 439  : 	if( !pBtn ) return false;

  0000e	85 ff		 test	 edi, edi
  00010	75 04		 jne	 SHORT $LN2@iwm_spaceb
$LN5@iwm_spaceb:
  00012	32 c0		 xor	 al, al
  00014	eb 1d		 jmp	 SHORT $LN3@iwm_spaceb
$LN2@iwm_spaceb:

; 440  : 	if( !pBtn->IsShow() ) return false;

  00016	8b cf		 mov	 ecx, edi
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsShow@ioWnd@@QBE_NXZ
  0001e	84 c0		 test	 al, al
  00020	74 f0		 je	 SHORT $LN5@iwm_spaceb

; 441  : 
; 442  : 	iwm_command( pBtn, IOBN_BTNUP, 0 );

  00022	8b 06		 mov	 eax, DWORD PTR [esi]
  00024	6a 00		 push	 0
  00026	6a 11		 push	 17			; 00000011H
  00028	57		 push	 edi
  00029	8b ce		 mov	 ecx, esi
  0002b	ff 90 8c 00 00
	00		 call	 DWORD PTR [eax+140]

; 443  : 	return true;

  00031	b0 01		 mov	 al, 1
$LN3@iwm_spaceb:

; 444  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	c3		 ret	 0
?iwm_spacebar@TimeGateSearchResult@@UAE_NXZ ENDP	; TimeGateSearchResult::iwm_spacebar
_TEXT	ENDS
PUBLIC	??_R0?AVBattleQuickStartOption@@@8		; BattleQuickStartOption `RTTI Type Descriptor'
PUBLIC	??_C@_0CC@GACIPLEP@TimeGateSearchResult?3?3iwm_comman@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_R0?AVTimeGateSearch@@@8			; TimeGateSearch `RTTI Type Descriptor'
EXTRN	?SetQuickStart@BattleQuickStartOption@@QAEXPAVioWnd@@W4KINDWND@1@@Z:PROC ; BattleQuickStartOption::SetQuickStart
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
EXTRN	__imp_??0ioHashString@@QAE@PBD@Z:PROC
EXTRN	__imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z:PROC
EXTRN	__imp_?GetSingleton@ioStringManager@@SAAAV1@XZ:PROC
EXTRN	__imp_?FindWnd@ioGUIManager@@QAEPAVioWnd@@K@Z:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
EXTRN	___RTDynamicCast:PROC
;	COMDAT ??_R0?AVBattleQuickStartOption@@@8
_DATA	SEGMENT
??_R0?AVBattleQuickStartOption@@@8 DD FLAT:??_7type_info@@6B@ ; BattleQuickStartOption `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBattleQuickStartOption@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_0CC@GACIPLEP@TimeGateSearchResult?3?3iwm_comman@
CONST	SEGMENT
??_C@_0CC@GACIPLEP@TimeGateSearchResult?3?3iwm_comman@ DB 'TimeGateSearch'
	DB	'Result::iwm_command', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_R0?AVTimeGateSearch@@@8
_DATA	SEGMENT
??_R0?AVTimeGateSearch@@@8 DD FLAT:??_7type_info@@6B@	; TimeGateSearch `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTimeGateSearch@@', 00H
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?iwm_command@TimeGateSearchResult@@UAEXPAVioWnd@@HK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?iwm_command@TimeGateSearchResult@@UAEXPAVioWnd@@HK@Z$0
__ehfuncinfo$?iwm_command@TimeGateSearchResult@@UAEXPAVioWnd@@HK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?iwm_command@TimeGateSearchResult@@UAEXPAVioWnd@@HK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?iwm_command@TimeGateSearchResult@@UAEXPAVioWnd@@HK@Z
_TEXT	SEGMENT
$T513492 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_pWnd$ = 8						; size = 4
_cmd$ = 12						; size = 4
_param$ = 16						; size = 4
?iwm_command@TimeGateSearchResult@@UAEXPAVioWnd@@HK@Z PROC ; TimeGateSearchResult::iwm_command, COMDAT
; _this$ = ecx

; 447  : {

  00000	6a 10		 push	 16			; 00000010H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?iwm_command@TimeGateSearchResult@@UAEXPAVioWnd@@HK@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b d9		 mov	 ebx, ecx

; 448  : 	DWORD dwID = pWnd->GetID();

  0000e	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetID@ioWnd@@QBEKXZ

; 449  : 	switch( dwID )

  00017	48		 dec	 eax
  00018	74 0d		 je	 SHORT $LN8@iwm_comman@2
  0001a	48		 dec	 eax
  0001b	0f 84 a2 00 00
	00		 je	 $LN3@iwm_comman@2
  00021	48		 dec	 eax
  00022	74 19		 je	 SHORT $LN6@iwm_comman@2
  00024	48		 dec	 eax
  00025	75 0e		 jne	 SHORT $LN7@iwm_comman@2
$LN8@iwm_comman@2:

; 450  : 	{
; 451  : 	case ID_EXIT:
; 452  : 	case ID_CLOSE:
; 453  : 		if( cmd == IOBN_BTNUP )

  00027	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  0002b	75 08		 jne	 SHORT $LN7@iwm_comman@2

; 454  : 			HideWnd();

  0002d	8b cb		 mov	 ecx, ebx
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HideWnd@ioWnd@@QAEXXZ
$LN7@iwm_comman@2:

; 480  : 	}
; 481  : }

  00035	e8 00 00 00 00	 call	 __EH_epilog3
  0003a	c2 0c 00	 ret	 12			; 0000000cH
$LN6@iwm_comman@2:

; 455  : 		break;
; 456  : 	case ID_RESEARCH:
; 457  : 		if( cmd == IOBN_BTNUP )

  0003d	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  00041	75 f2		 jne	 SHORT $LN7@iwm_comman@2

; 458  : 		{
; 459  : 			HideWnd();

  00043	8b cb		 mov	 ecx, ebx
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HideWnd@ioWnd@@QAEXXZ

; 460  : 
; 461  : 			TimeGateSearch *pSearchWnd = dynamic_cast<TimeGateSearch*>(g_GUIMgr.FindWnd( TIMEGATE_SEARCH ));

  0004b	33 f6		 xor	 esi, esi
  0004d	56		 push	 esi
  0004e	68 00 00 00 00	 push	 OFFSET ??_R0?AVTimeGateSearch@@@8
  00053	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWnd@@@8
  00058	56		 push	 esi
  00059	68 ba 0b 00 00	 push	 3002			; 00000bbaH
  0005e	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  00063	8b c8		 mov	 ecx, eax
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindWnd@ioGUIManager@@QAEPAVioWnd@@K@Z
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ___RTDynamicCast
  00071	8b f8		 mov	 edi, eax
  00073	83 c4 14	 add	 esp, 20			; 00000014H

; 462  : 			if( pSearchWnd )

  00076	3b fe		 cmp	 edi, esi
  00078	74 bb		 je	 SHORT $LN7@iwm_comman@2

; 463  : 			{
; 464  : 				pSearchWnd->SetSearching( STR(1), TimeGateSearch::ST_PARTY_JOIN );

  0007a	56		 push	 esi
  0007b	6a 01		 push	 1
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00082	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@GACIPLEP@TimeGateSearchResult?3?3iwm_comman@
  00087	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioStringManager@@SAAAV1@XZ
  0008d	8b c8		 mov	 ecx, eax
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  00095	50		 push	 eax
  00096	8d 4d e4	 lea	 ecx, DWORD PTR $T513492[ebp]
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  0009f	56		 push	 esi
  000a0	56		 push	 esi
  000a1	6a 02		 push	 2
  000a3	8d 45 e4	 lea	 eax, DWORD PTR $T513492[ebp]
  000a6	50		 push	 eax
  000a7	8b cf		 mov	 ecx, edi
  000a9	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
  000ac	e8 00 00 00 00	 call	 ?SetSearching@TimeGateSearch@@QAEXABVioHashString@@H_N1@Z ; TimeGateSearch::SetSearching
  000b1	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000b5	8d 4d e4	 lea	 ecx, DWORD PTR $T513492[ebp]
  000b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ

; 465  : 			}
; 466  : 		}
; 467  : 		break;

  000be	e9 72 ff ff ff	 jmp	 $LN7@iwm_comman@2
$LN3@iwm_comman@2:

; 468  : 	case ID_SEARCH_CORRECTION:
; 469  : 		if( cmd == IOBN_BTNUP )

  000c3	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  000c7	0f 85 68 ff ff
	ff		 jne	 $LN7@iwm_comman@2

; 470  : 		{
; 471  : 			HideWnd();

  000cd	8b cb		 mov	 ecx, ebx
  000cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HideWnd@ioWnd@@QAEXXZ

; 472  : 			BattleQuickStartOption *pSelectWnd = dynamic_cast<BattleQuickStartOption*>(g_GUIMgr.FindWnd( BATTLE_QUICKSTART_OPTION ));

  000d5	33 f6		 xor	 esi, esi
  000d7	56		 push	 esi
  000d8	68 00 00 00 00	 push	 OFFSET ??_R0?AVBattleQuickStartOption@@@8
  000dd	68 00 00 00 00	 push	 OFFSET ??_R0?AVioWnd@@@8
  000e2	56		 push	 esi
  000e3	68 ce 0b 00 00	 push	 3022			; 00000bceH
  000e8	e8 00 00 00 00	 call	 ?GetSingleton@ioSP2GUIManager@@SAAAV1@XZ ; ioSP2GUIManager::GetSingleton
  000ed	8b c8		 mov	 ecx, eax
  000ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindWnd@ioGUIManager@@QAEPAVioWnd@@K@Z
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ___RTDynamicCast
  000fb	8b f8		 mov	 edi, eax
  000fd	83 c4 14	 add	 esp, 20			; 00000014H

; 473  : 			if( pSelectWnd )

  00100	3b fe		 cmp	 edi, esi
  00102	0f 84 2d ff ff
	ff		 je	 $LN7@iwm_comman@2

; 474  : 			{
; 475  : 				pSelectWnd->SetQuickStart( this );

  00108	56		 push	 esi
  00109	53		 push	 ebx
  0010a	8b cf		 mov	 ecx, edi
  0010c	e8 00 00 00 00	 call	 ?SetQuickStart@BattleQuickStartOption@@QAEXPAVioWnd@@W4KINDWND@1@@Z ; BattleQuickStartOption::SetQuickStart

; 476  : 				pSelectWnd->ShowWnd();

  00111	8b cf		 mov	 ecx, edi
  00113	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ShowWnd@ioWnd@@QAEXXZ

; 477  : 			}
; 478  : 		}
; 479  : 		break;

  00119	e9 17 ff ff ff	 jmp	 $LN7@iwm_comman@2
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?iwm_command@TimeGateSearchResult@@UAEXPAVioWnd@@HK@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR $T513492[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?iwm_command@TimeGateSearchResult@@UAEXPAVioWnd@@HK@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?iwm_command@TimeGateSearchResult@@UAEXPAVioWnd@@HK@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?iwm_command@TimeGateSearchResult@@UAEXPAVioWnd@@HK@Z ENDP ; TimeGateSearchResult::iwm_command
PUBLIC	__real@3f266666
PUBLIC	??_C@_0BP@GCLNCKIL@TimeGateSearchResult?3?3OnRender?$AA@ ; `string'
EXTRN	__imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ:PROC
EXTRN	__imp_?SetTextColor@ioFontManager@@QAEXK@Z:PROC
EXTRN	__imp_?SetBkColor@ioFontManager@@QAEXHHH@Z:PROC
EXTRN	__imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z:PROC
EXTRN	__imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z:PROC
EXTRN	__imp_?GetSingleton@ioFontManager@@SAAAV1@XZ:PROC
EXTRN	__imp_?GetDerivedPosY@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?GetDerivedPosX@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?OnRender@ioWnd@@MAEXXZ:PROC
;	COMDAT __real@3f266666
CONST	SEGMENT
__real@3f266666 DD 03f266666r			; 0.65
CONST	ENDS
;	COMDAT ??_C@_0BP@GCLNCKIL@TimeGateSearchResult?3?3OnRender?$AA@
CONST	SEGMENT
??_C@_0BP@GCLNCKIL@TimeGateSearchResult?3?3OnRender?$AA@ DB 'TimeGateSear'
	DB	'chResult::OnRender', 00H			; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?OnRender@TimeGateSearchResult@@MAEXXZ
_TEXT	SEGMENT
tv195 = -8						; size = 4
_iYPos$ = -4						; size = 4
?OnRender@TimeGateSearchResult@@MAEXXZ PROC		; TimeGateSearchResult::OnRender, COMDAT
; _this$ = ecx

; 484  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	53		 push	 ebx
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f1		 mov	 esi, ecx

; 485  : 	ioWnd::OnRender();

  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?OnRender@ioWnd@@MAEXXZ

; 486  : 
; 487  : 	int iXPos = GetDerivedPosX();

  00010	8b ce		 mov	 ecx, esi
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosX@ioWnd@@QBEHXZ

; 488  : 	int iYPos = GetDerivedPosY();

  00018	8b ce		 mov	 ecx, esi
  0001a	8b f8		 mov	 edi, eax
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosY@ioWnd@@QBEHXZ

; 489  : 
; 490  : 	g_FontMgr.SetTextStyle( TS_NORMAL );

  00022	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?GetSingleton@ioFontManager@@SAAAV1@XZ
  00028	33 db		 xor	 ebx, ebx
  0002a	53		 push	 ebx
  0002b	89 45 fc	 mov	 DWORD PTR _iYPos$[ebp], eax
  0002e	ff d6		 call	 esi
  00030	8b c8		 mov	 ecx, eax
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z

; 491  : 	g_FontMgr.SetAlignType( TAT_CENTER );

  00038	6a 01		 push	 1
  0003a	ff d6		 call	 esi
  0003c	8b c8		 mov	 ecx, eax
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 492  : 	g_FontMgr.SetBkColor( 0, 0, 0 );

  00044	53		 push	 ebx
  00045	53		 push	 ebx
  00046	53		 push	 ebx
  00047	ff d6		 call	 esi
  00049	8b c8		 mov	 ecx, eax
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetBkColor@ioFontManager@@QAEXHHH@Z

; 493  : 	g_FontMgr.SetTextColor( TCT_DEFAULT_DARKGRAY );

  00051	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  00056	ff d6		 call	 esi
  00058	8b c8		 mov	 ecx, eax
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 494  : 	g_FontMgr.PrintText( iXPos + 215, iYPos + 144, FONT_SIZE_13, STR(1) );

  00060	53		 push	 ebx
  00061	6a 01		 push	 1
  00063	81 c7 d7 00 00
	00		 add	 edi, 215		; 000000d7H
  00069	0f 57 c0	 xorps	 xmm0, xmm0
  0006c	f3 0f 2a c7	 cvtsi2ss xmm0, edi
  00070	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetSingleton@ioStringManager@@SAAAV1@XZ
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@GCLNCKIL@TimeGateSearchResult?3?3OnRender?$AA@
  00080	f3 0f 11 45 f8	 movss	 DWORD PTR tv195[ebp], xmm0
  00085	ff d7		 call	 edi
  00087	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  0008d	8b c8		 mov	 ecx, eax
  0008f	ff d3		 call	 ebx
  00091	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  00099	50		 push	 eax
  0009a	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  0009d	83 ec 0c	 sub	 esp, 12			; 0000000cH
  000a0	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000a6	05 90 00 00 00	 add	 eax, 144		; 00000090H
  000ab	0f 57 c0	 xorps	 xmm0, xmm0
  000ae	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000b2	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000b8	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv195[ebp]
  000bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c2	ff d6		 call	 esi
  000c4	50		 push	 eax
  000c5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  000cb	83 c4 14	 add	 esp, 20			; 00000014H

; 495  : 
; 496  : 	g_FontMgr.SetTextColor( TCT_DEFAULT_GRAY );

  000ce	68 6e 6e 6e ff	 push	 -9539986		; ff6e6e6eH
  000d3	ff d6		 call	 esi
  000d5	8b c8		 mov	 ecx, eax
  000d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 497  : 	g_FontMgr.PrintText( iXPos + 215, iYPos + 164, FONT_SIZE_13, STR(2) );

  000dd	6a 00		 push	 0
  000df	6a 02		 push	 2
  000e1	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  000e6	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@GCLNCKIL@TimeGateSearchResult?3?3OnRender?$AA@
  000eb	ff d7		 call	 edi
  000ed	8b c8		 mov	 ecx, eax
  000ef	ff d3		 call	 ebx
  000f1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  000f9	50		 push	 eax
  000fa	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  000fd	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00100	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00106	05 a4 00 00 00	 add	 eax, 164		; 000000a4H
  0010b	0f 57 c0	 xorps	 xmm0, xmm0
  0010e	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00112	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00118	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv195[ebp]
  0011d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00122	ff d6		 call	 esi
  00124	50		 push	 eax
  00125	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  0012b	83 c4 14	 add	 esp, 20			; 00000014H

; 498  : 	g_FontMgr.PrintText( iXPos + 215, iYPos + 184, FONT_SIZE_13, STR(3) );

  0012e	6a 00		 push	 0
  00130	6a 03		 push	 3
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00137	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@GCLNCKIL@TimeGateSearchResult?3?3OnRender?$AA@
  0013c	ff d7		 call	 edi
  0013e	8b c8		 mov	 ecx, eax
  00140	ff d3		 call	 ebx
  00142	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  0014a	50		 push	 eax
  0014b	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  0014e	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00151	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00157	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  0015c	0f 57 c0	 xorps	 xmm0, xmm0
  0015f	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00163	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00169	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv195[ebp]
  0016e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00173	ff d6		 call	 esi
  00175	50		 push	 eax
  00176	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  0017c	83 c4 14	 add	 esp, 20			; 00000014H
  0017f	5f		 pop	 edi
  00180	5e		 pop	 esi
  00181	5b		 pop	 ebx

; 499  : }

  00182	c9		 leave
  00183	c3		 ret	 0
?OnRender@TimeGateSearchResult@@MAEXXZ ENDP		; TimeGateSearchResult::OnRender
_TEXT	ENDS
PUBLIC	?size@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBEIXZ ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBEIXZ PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBEIXZ ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::size
_TEXT	ENDS
PUBLIC	?empty@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBE_NXZ ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::empty
; Function compile flags: /Ogsp
;	COMDAT ?empty@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBE_NXZ PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::empty, COMDAT
; _this$ = ecx

; 889  : 		return (this->_Myfirst == this->_Mylast);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00005	f7 d8		 neg	 eax
  00007	1b c0		 sbb	 eax, eax
  00009	40		 inc	 eax

; 890  : 		}

  0000a	c3		 ret	 0
?empty@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBE_NXZ ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::empty
_TEXT	ENDS
PUBLIC	??A?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAEAAPAUScaleImage@TimeGateSearch@@I@Z ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAEAAPAUScaleImage@TimeGateSearch@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAEAAPAUScaleImage@TimeGateSearch@@I@Z PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00008	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAEAAPAUScaleImage@TimeGateSearch@@I@Z ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::operator[]
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IBE_NPBQAUScaleImage@TimeGateSearch@@@Z ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Inside
; Function compile flags: /Ogsp
;	COMDAT ?_Inside@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IBE_NPBQAUScaleImage@TimeGateSearch@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IBE_NPBQAUScaleImage@TimeGateSearch@@@Z PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IBE_NPBQAUScaleImage@TimeGateSearch@@@Z ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IBEXPAPAUScaleImage@TimeGateSearch@@0@Z ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IBEXPAPAUScaleImage@TimeGateSearch@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IBEXPAPAUScaleImage@TimeGateSearch@@0@Z PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IBEXPAPAUScaleImage@TimeGateSearch@@0@Z ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE@XZ ; std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::~_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::~_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::~_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >
_TEXT	ENDS
PUBLIC	??0?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAE@XZ ; std::allocator<TimeGateSearch::ScaleImage *>::allocator<TimeGateSearch::ScaleImage *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAE@XZ PROC ; std::allocator<TimeGateSearch::ScaleImage *>::allocator<TimeGateSearch::ScaleImage *>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAE@XZ ENDP ; std::allocator<TimeGateSearch::ScaleImage *>::allocator<TimeGateSearch::ScaleImage *>
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with null pointer

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0

; 41   : 		}

  00005	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBEABQAUScaleImage@TimeGateSearch@@XZ ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBEABQAUScaleImage@TimeGateSearch@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBEABQAUScaleImage@TimeGateSearch@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::operator*, COMDAT
; _this$ = ecx

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 85   : 		}

  00002	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBEABQAUScaleImage@TimeGateSearch@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::operator++, COMDAT
; _this$ = ecx

; 93   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 111  : 		return (*this);
; 112  : 		}

  00005	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::operator++
_TEXT	ENDS
PUBLIC	?capacity@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBEIXZ ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::capacity
; Function compile flags: /Ogsp
;	COMDAT ?capacity@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBEIXZ PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 778  : 		}

  00008	c3		 ret	 0
?capacity@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBEIXZ ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::capacity
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IBEXXZ ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IBEXXZ PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
  0000b	cc		 int	 3
?_Xlen@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IBEXXZ ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAE@ABV01@@Z ; std::allocator<TimeGateSearch::ScaleImage *>::allocator<TimeGateSearch::ScaleImage *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAE@ABV01@@Z PROC ; std::allocator<TimeGateSearch::ScaleImage *>::allocator<TimeGateSearch::ScaleImage *>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<TimeGateSearch::ScaleImage *>::allocator<TimeGateSearch::ScaleImage *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAEXPAPAUScaleImage@TimeGateSearch@@I@Z ; std::allocator<TimeGateSearch::ScaleImage *>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAEXPAPAUScaleImage@TimeGateSearch@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAEXPAPAUScaleImage@TimeGateSearch@@I@Z PROC ; std::allocator<TimeGateSearch::ScaleImage *>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAEXPAPAUScaleImage@TimeGateSearch@@I@Z ENDP ; std::allocator<TimeGateSearch::ScaleImage *>::deallocate
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::_Compat
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::_Compat
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QBEIXZ ; std::allocator<TimeGateSearch::ScaleImage *>::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QBEIXZ PROC ; std::allocator<TimeGateSearch::ScaleImage *>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QBEIXZ ENDP ; std::allocator<TimeGateSearch::ScaleImage *>::max_size
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	??$addressof@QAUScaleImage@TimeGateSearch@@@std@@YAPBQAUScaleImage@TimeGateSearch@@ABQAU12@@Z ; std::addressof<TimeGateSearch::ScaleImage * const>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@QAUScaleImage@TimeGateSearch@@@std@@YAPBQAUScaleImage@TimeGateSearch@@ABQAU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAUScaleImage@TimeGateSearch@@@std@@YAPBQAUScaleImage@TimeGateSearch@@ABQAU12@@Z PROC ; std::addressof<TimeGateSearch::ScaleImage * const>, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@QAUScaleImage@TimeGateSearch@@@std@@YAPBQAUScaleImage@TimeGateSearch@@ABQAU12@@Z ENDP ; std::addressof<TimeGateSearch::ScaleImage * const>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@PAUScaleImage@TimeGateSearch@@@std@@YAPAPAUScaleImage@TimeGateSearch@@IPAPAU12@@Z ; std::_Allocate<TimeGateSearch::ScaleImage *>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@PAUScaleImage@TimeGateSearch@@@std@@YAPAPAUScaleImage@TimeGateSearch@@IPAPAU12@@Z
_TEXT	SEGMENT
$T513564 = -12						; size = 12
$T513569 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAUScaleImage@TimeGateSearch@@@std@@YAPAPAUScaleImage@TimeGateSearch@@IPAPAU12@@Z PROC ; std::_Allocate<TimeGateSearch::ScaleImage *>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3e		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate
  00017	8b c1		 mov	 eax, ecx
  00019	c1 e0 02	 shl	 eax, 2
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	59		 pop	 ecx
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 26		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	83 65 08 00	 and	 DWORD PTR $T513569[ebp], 0
  0002b	8d 45 08	 lea	 eax, DWORD PTR $T513569[ebp]
  0002e	50		 push	 eax
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T513564[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003d	8d 45 f4	 lea	 eax, DWORD PTR $T513564[ebp]
  00040	50		 push	 eax
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T513564[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  0004d	c9		 leave
  0004e	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@PAUScaleImage@TimeGateSearch@@@std@@YAPAPAUScaleImage@TimeGateSearch@@IPAPAU12@@Z ENDP ; std::_Allocate<TimeGateSearch::ScaleImage *>
_TEXT	ENDS
PUBLIC	??$forward@AAPAUScaleImage@TimeGateSearch@@@std@@YAAAPAUScaleImage@TimeGateSearch@@AAPAU12@@Z ; std::forward<TimeGateSearch::ScaleImage * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAPAUScaleImage@TimeGateSearch@@@std@@YAAAPAUScaleImage@TimeGateSearch@@AAPAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAUScaleImage@TimeGateSearch@@@std@@YAAAPAUScaleImage@TimeGateSearch@@AAPAU12@@Z PROC ; std::forward<TimeGateSearch::ScaleImage * &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAUScaleImage@TimeGateSearch@@@std@@YAAAPAUScaleImage@TimeGateSearch@@AAPAU12@@Z ENDP ; std::forward<TimeGateSearch::ScaleImage * &>
_TEXT	ENDS
PUBLIC	??$construct@AAPAUScaleImage@TimeGateSearch@@@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAEXPAPAUScaleImage@TimeGateSearch@@AAPAU23@@Z ; std::allocator<TimeGateSearch::ScaleImage *>::construct<TimeGateSearch::ScaleImage * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAPAUScaleImage@TimeGateSearch@@@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAEXPAPAUScaleImage@TimeGateSearch@@AAPAU23@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAPAUScaleImage@TimeGateSearch@@@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAEXPAPAUScaleImage@TimeGateSearch@@AAPAU23@@Z PROC ; std::allocator<TimeGateSearch::ScaleImage *>::construct<TimeGateSearch::ScaleImage * &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@construct:

; 209  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
??$construct@AAPAUScaleImage@TimeGateSearch@@@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAEXPAPAUScaleImage@TimeGateSearch@@AAPAU23@@Z ENDP ; std::allocator<TimeGateSearch::ScaleImage *>::construct<TimeGateSearch::ScaleImage * &>
_TEXT	ENDS
PUBLIC	??$forward@ABQAUScaleImage@TimeGateSearch@@@std@@YAABQAUScaleImage@TimeGateSearch@@ABQAU12@@Z ; std::forward<TimeGateSearch::ScaleImage * const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABQAUScaleImage@TimeGateSearch@@@std@@YAABQAUScaleImage@TimeGateSearch@@ABQAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAUScaleImage@TimeGateSearch@@@std@@YAABQAUScaleImage@TimeGateSearch@@ABQAU12@@Z PROC ; std::forward<TimeGateSearch::ScaleImage * const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABQAUScaleImage@TimeGateSearch@@@std@@YAABQAUScaleImage@TimeGateSearch@@ABQAU12@@Z ENDP ; std::forward<TimeGateSearch::ScaleImage * const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAUScaleImage@TimeGateSearch@@PAU12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUScaleImage@TimeGateSearch@@0@Z ; std::_Ptr_cat<TimeGateSearch::ScaleImage *,TimeGateSearch::ScaleImage *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAUScaleImage@TimeGateSearch@@PAU12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUScaleImage@TimeGateSearch@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUScaleImage@TimeGateSearch@@PAU12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUScaleImage@TimeGateSearch@@0@Z PROC ; std::_Ptr_cat<TimeGateSearch::ScaleImage *,TimeGateSearch::ScaleImage *>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@PAUScaleImage@TimeGateSearch@@PAU12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUScaleImage@TimeGateSearch@@0@Z ENDP ; std::_Ptr_cat<TimeGateSearch::ScaleImage *,TimeGateSearch::ScaleImage *>
_TEXT	ENDS
PUBLIC	??$_Move@PAPAUScaleImage@TimeGateSearch@@PAPAU12@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<TimeGateSearch::ScaleImage * *,TimeGateSearch::ScaleImage * *>
EXTRN	__imp__memmove:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$_Move@PAPAUScaleImage@TimeGateSearch@@PAPAU12@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAPAUScaleImage@TimeGateSearch@@PAPAU12@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<TimeGateSearch::ScaleImage * *,TimeGateSearch::ScaleImage * *>, COMDAT

; 2522 : 	{	// move [_First, _Last) to [_Dest, ...), pointers to scalars

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2523 : 	ptrdiff_t _Count = _Last - _First;

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	57		 push	 edi

; 2524 : 	_CSTD memmove(&*_Dest, &*_First,
; 2525 : 		_Count * sizeof (*_First));

  0000b	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0000e	c1 fe 02	 sar	 esi, 2
  00011	c1 e6 02	 shl	 esi, 2
  00014	56		 push	 esi
  00015	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00018	57		 push	 edi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2526 : 	return (_Dest + _Count);

  00022	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 2527 : 	}

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Move@PAPAUScaleImage@TimeGateSearch@@PAPAU12@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<TimeGateSearch::ScaleImage * *,TimeGateSearch::ScaleImage * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@YAXPAPAUScaleImage@TimeGateSearch@@0AAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<TimeGateSearch::ScaleImage *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@YAXPAPAUScaleImage@TimeGateSearch@@0AAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@YAXPAPAUScaleImage@TimeGateSearch@@0AAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<TimeGateSearch::ScaleImage *> >, COMDAT

; 105  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@YAXPAPAUScaleImage@TimeGateSearch@@0AAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<TimeGateSearch::ScaleImage *> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAUScaleImage@TimeGateSearch@@ABQAU12@@std@@YAXPAPAUScaleImage@TimeGateSearch@@ABQAU12@@Z ; std::_Construct<TimeGateSearch::ScaleImage *,TimeGateSearch::ScaleImage * const &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Construct@PAUScaleImage@TimeGateSearch@@ABQAU12@@std@@YAXPAPAUScaleImage@TimeGateSearch@@ABQAU12@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAUScaleImage@TimeGateSearch@@ABQAU12@@std@@YAXPAPAUScaleImage@TimeGateSearch@@ABQAU12@@Z PROC ; std::_Construct<TimeGateSearch::ScaleImage *,TimeGateSearch::ScaleImage * const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@Construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@Construct:

; 49   : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Construct@PAUScaleImage@TimeGateSearch@@ABQAU12@@std@@YAXPAPAUScaleImage@TimeGateSearch@@ABQAU12@@Z ENDP ; std::_Construct<TimeGateSearch::ScaleImage *,TimeGateSearch::ScaleImage * const &>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAPAUScaleImage@TimeGateSearch@@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@@Z ; std::_Val_type<TimeGateSearch::ScaleImage * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAPAUScaleImage@TimeGateSearch@@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAUScaleImage@TimeGateSearch@@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@@Z PROC ; std::_Val_type<TimeGateSearch::ScaleImage * *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAPAUScaleImage@TimeGateSearch@@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@@Z ENDP ; std::_Val_type<TimeGateSearch::ScaleImage * *>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAUScaleImage@TimeGateSearch@@PAU12@PAU12@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00AAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<TimeGateSearch::ScaleImage *,TimeGateSearch::ScaleImage *,TimeGateSearch::ScaleImage *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@PAUScaleImage@TimeGateSearch@@PAU12@PAU12@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00AAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUScaleImage@TimeGateSearch@@PAU12@PAU12@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00AAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<TimeGateSearch::ScaleImage *,TimeGateSearch::ScaleImage *,TimeGateSearch::ScaleImage *>, COMDAT

; 456  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 457  : 	_DEBUG_RANGE(_First, _Last);
; 458  : 	_DEBUG_POINTER(_Dest);
; 459  : 	size_t _Count = (size_t)(_Last - _First);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2

; 460  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 461  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 462  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninit_move@PAUScaleImage@TimeGateSearch@@PAU12@PAU12@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00AAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<TimeGateSearch::ScaleImage *,TimeGateSearch::ScaleImage *,TimeGateSearch::ScaleImage *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\strsafe.h
_TEXT	ENDS
;	COMDAT ?StringValidateDestA@@YGJPBDII@Z
_TEXT	SEGMENT
_cchMax$ = 8						; size = 4
?StringValidateDestA@@YGJPBDII@Z PROC			; StringValidateDestA, COMDAT
; _cchDest$ = ecx

; 8721 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 8722 :     HRESULT hr = S_OK;

  00003	33 c0		 xor	 eax, eax

; 8723 : 
; 8724 :     if ((cchDest == 0) || (cchDest > cchMax))

  00005	85 c9		 test	 ecx, ecx
  00007	74 05		 je	 SHORT $LN1@StringVali
  00009	3b 4d 08	 cmp	 ecx, DWORD PTR _cchMax$[ebp]
  0000c	76 05		 jbe	 SHORT $LN2@StringVali
$LN1@StringVali:

; 8725 :     {
; 8726 :         hr = STRSAFE_E_INVALID_PARAMETER;

  0000e	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
$LN2@StringVali:

; 8727 :     }
; 8728 : 
; 8729 :     return hr;
; 8730 : }

  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?StringValidateDestA@@YGJPBDII@Z ENDP			; StringValidateDestA
_TEXT	ENDS
EXTRN	__imp___vsnprintf:PROC
; Function compile flags: /Ogsp
;	COMDAT ?StringVPrintfWorkerA@@YGJPADIPAIPBD0@Z
_TEXT	SEGMENT
_pcchNewDestLength$ = 8					; size = 4
_pszFormat$ = 12					; size = 4
_argList$ = 16						; size = 4
?StringVPrintfWorkerA@@YGJPADIPAIPBD0@Z PROC		; StringVPrintfWorkerA, COMDAT
; _pszDest$ = edi
; _cchDest$ = eax

; 9029 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 9030 :     HRESULT hr = S_OK;
; 9031 :     int iRet;
; 9032 :     size_t cchMax;
; 9033 :     size_t cchNewDestLength = 0;
; 9034 : 
; 9035 :     // leave the last space for the null terminator
; 9036 :     cchMax = cchDest - 1;
; 9037 : 
; 9038 : #if (STRSAFE_USE_SECURE_CRT == 1) && !defined(STRSAFE_LIB_IMPL)
; 9039 :     iRet = _vsnprintf_s(pszDest, cchDest, cchMax, pszFormat, argList);
; 9040 : #else
; 9041 :     #pragma warning(push)
; 9042 :     #pragma warning(disable: __WARNING_BANNED_API_USAGE)// "STRSAFE not included"
; 9043 :     iRet = _vsnprintf(pszDest, cchMax, pszFormat, argList);

  00005	ff 75 10	 push	 DWORD PTR _argList$[ebp]
  00008	8d 70 ff	 lea	 esi, DWORD PTR [eax-1]
  0000b	ff 75 0c	 push	 DWORD PTR _pszFormat$[ebp]
  0000e	33 db		 xor	 ebx, ebx
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___vsnprintf
  00018	83 c4 10	 add	 esp, 16			; 00000010H

; 9044 :     #pragma warning(pop)
; 9045 : #endif
; 9046 :     // ASSERT((iRet < 0) || (((size_t)iRet) <= cchMax));
; 9047 : 
; 9048 :     if ((iRet < 0) || (((size_t)iRet) > cchMax))

  0001b	85 c0		 test	 eax, eax
  0001d	78 0b		 js	 SHORT $LN5@StringVPri
  0001f	3b c6		 cmp	 eax, esi
  00021	77 07		 ja	 SHORT $LN5@StringVPri

; 9058 :     }
; 9059 :     else if (((size_t)iRet) == cchMax)

  00023	75 0f		 jne	 SHORT $LN2@StringVPri

; 9060 :     {
; 9061 :         // need to null terminate the string
; 9062 :         pszDest += cchMax;
; 9063 :         *pszDest = '\0';

  00025	88 1c 3e	 mov	 BYTE PTR [esi+edi], bl

; 9064 : 
; 9065 :         cchNewDestLength = cchMax;
; 9066 :     }
; 9067 :     else

  00028	eb 08		 jmp	 SHORT $LN9@StringVPri
$LN5@StringVPri:

; 9049 :     {
; 9050 :         // need to null terminate the string
; 9051 :         pszDest += cchMax;
; 9052 :         *pszDest = '\0';

  0002a	88 1c 3e	 mov	 BYTE PTR [esi+edi], bl

; 9055 : 
; 9056 :         // we have truncated pszDest
; 9057 :         hr = STRSAFE_E_INSUFFICIENT_BUFFER;

  0002d	bb 7a 00 07 80	 mov	 ebx, -2147024774	; 8007007aH
$LN9@StringVPri:

; 9053 : 
; 9054 :         cchNewDestLength = cchMax;

  00032	8b c6		 mov	 eax, esi
$LN2@StringVPri:

; 9068 :     {
; 9069 :         cchNewDestLength = (size_t)iRet;
; 9070 :     }
; 9071 : 
; 9072 :     if (pcchNewDestLength)

  00034	8b 4d 08	 mov	 ecx, DWORD PTR _pcchNewDestLength$[ebp]
  00037	85 c9		 test	 ecx, ecx
  00039	74 02		 je	 SHORT $LN1@StringVPri

; 9073 :     {
; 9074 :         *pcchNewDestLength = cchNewDestLength;

  0003b	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@StringVPri:
  0003d	5e		 pop	 esi

; 9075 :     }
; 9076 : 
; 9077 :     return hr;

  0003e	8b c3		 mov	 eax, ebx
  00040	5b		 pop	 ebx

; 9078 : }

  00041	5d		 pop	 ebp
  00042	c2 0c 00	 ret	 12			; 0000000cH
?StringVPrintfWorkerA@@YGJPADIPAIPBD0@Z ENDP		; StringVPrintfWorkerA
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogsp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 4d 10	 dec	 DWORD PTR ___n$[ebp]
  00006	78 12		 js	 SHORT $LN1@vector
  00008	56		 push	 esi
  00009	8b 75 08	 mov	 esi, DWORD PTR ___t$[ebp]
$LL2@vector:
  0000c	8b ce		 mov	 ecx, esi
  0000e	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  00011	03 75 0c	 add	 esi, DWORD PTR ___s$[ebp]
  00014	ff 4d 10	 dec	 DWORD PTR ___n$[ebp]
  00017	79 f3		 jns	 SHORT $LL2@vector
  00019	5e		 pop	 esi
$LN1@vector:
  0001a	5d		 pop	 ebp
  0001b	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??_C@_0BK@LAMALIHJ@TimeGateSearch?3?3DoReserve?$AA@ ; `string'
PUBLIC	?DoReserve@TimeGateSearch@@QAEXXZ		; TimeGateSearch::DoReserve
;	COMDAT ??_C@_0BK@LAMALIHJ@TimeGateSearch?3?3DoReserve?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\timegatesearch.cpp
CONST	SEGMENT
??_C@_0BK@LAMALIHJ@TimeGateSearch?3?3DoReserve?$AA@ DB 'TimeGateSearch::D'
	DB	'oReserve', 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DoReserve@TimeGateSearch@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoReserve@TimeGateSearch@@QAEXXZ$0
__ehfuncinfo$?DoReserve@TimeGateSearch@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DoReserve@TimeGateSearch@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?DoReserve@TimeGateSearch@@QAEXXZ
_TEXT	SEGMENT
$T513636 = -28						; size = 16
__$EHRec$ = -12						; size = 12
?DoReserve@TimeGateSearch@@QAEXXZ PROC			; TimeGateSearch::DoReserve, COMDAT
; _this$ = ecx

; 146  : {

  00000	6a 10		 push	 16			; 00000010H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?DoReserve@TimeGateSearch@@QAEXXZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f9		 mov	 edi, ecx

; 147  : 	switch( m_iReserveType )

  0000e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_iReserveType@TimeGateSearch@@1HA ; TimeGateSearch::m_iReserveType
  00013	48		 dec	 eax
  00014	48		 dec	 eax
  00015	75 4b		 jne	 SHORT $LN2@DoReserve

; 148  : 	{
; 149  : 	case ST_PARTY_JOIN:
; 150  : 		SetSearching( STR(1), m_iReserveType, true );

  00017	50		 push	 eax
  00018	6a 01		 push	 1
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@LAMALIHJ@TimeGateSearch?3?3DoReserve?$AA@
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioStringManager@@SAAAV1@XZ
  0002a	8b c8		 mov	 ecx, eax
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  00032	50		 push	 eax
  00033	8d 4d e4	 lea	 ecx, DWORD PTR $T513636[ebp]
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  0003c	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00040	6a 00		 push	 0
  00042	6a 01		 push	 1
  00044	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_iReserveType@TimeGateSearch@@1HA ; TimeGateSearch::m_iReserveType
  0004a	8d 45 e4	 lea	 eax, DWORD PTR $T513636[ebp]
  0004d	50		 push	 eax
  0004e	8b cf		 mov	 ecx, edi
  00050	e8 00 00 00 00	 call	 ?SetSearching@TimeGateSearch@@QAEXABVioHashString@@H_N1@Z ; TimeGateSearch::SetSearching
  00055	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00059	8d 4d e4	 lea	 ecx, DWORD PTR $T513636[ebp]
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
$LN2@DoReserve:

; 151  : 		break;
; 152  : 	}
; 153  : 	m_iReserveType = 0;

  00062	83 25 00 00 00
	00 00		 and	 DWORD PTR ?m_iReserveType@TimeGateSearch@@1HA, 0 ; TimeGateSearch::m_iReserveType

; 154  : }

  00069	e8 00 00 00 00	 call	 __EH_epilog3
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoReserve@TimeGateSearch@@QAEXXZ$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR $T513636[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?DoReserve@TimeGateSearch@@QAEXXZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DoReserve@TimeGateSearch@@QAEXXZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DoReserve@TimeGateSearch@@QAEXXZ ENDP			; TimeGateSearch::DoReserve
PUBLIC	?iwm_create@TimeGateSearch@@UAEXXZ		; TimeGateSearch::iwm_create
; Function compile flags: /Ogsp
;	COMDAT ?iwm_create@TimeGateSearch@@UAEXXZ
_TEXT	SEGMENT
?iwm_create@TimeGateSearch@@UAEXXZ PROC			; TimeGateSearch::iwm_create, COMDAT
; _this$ = ecx

; 158  : 	DoReserve();

  00000	e9 00 00 00 00	 jmp	 ?DoReserve@TimeGateSearch@@QAEXXZ ; TimeGateSearch::DoReserve
?iwm_create@TimeGateSearch@@UAEXXZ ENDP			; TimeGateSearch::iwm_create
_TEXT	ENDS
PUBLIC	?ScaleIconImage@TimeGateSearch@@IAEXXZ		; TimeGateSearch::ScaleIconImage
; Function compile flags: /Ogsp
;	COMDAT ?ScaleIconImage@TimeGateSearch@@IAEXXZ
_TEXT	SEGMENT
_iScaleImageCount$ = -32				; size = 4
tv467 = -28						; size = 4
tv463 = -28						; size = 4
tv455 = -28						; size = 4
tv452 = -28						; size = 4
tv407 = -28						; size = 4
tv403 = -28						; size = 4
tv399 = -28						; size = 4
tv395 = -28						; size = 4
tv389 = -28						; size = 4
$T513690 = -28						; size = 4
tv361 = -24						; size = 8
tv441 = -20						; size = 4
tv435 = -20						; size = 4
tv423 = -20						; size = 4
tv418 = -20						; size = 4
tv414 = -20						; size = 4
tv410 = -20						; size = 4
$T513694 = -20						; size = 4
_iGapTime$511222 = -20					; size = 4
tv459 = -16						; size = 4
tv448 = -16						; size = 4
$T513698 = -16						; size = 4
_iAniTime$511223 = -12					; size = 4
_i$511216 = -8						; size = 4
_fCurScale$511224 = -4					; size = 4
?ScaleIconImage@TimeGateSearch@@IAEXXZ PROC		; TimeGateSearch::ScaleIconImage, COMDAT
; _this$ = ecx

; 238  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H

; 239  : 	int iScaleImageCount = m_ScaleImageList.size();
; 240  : 	for( int i=0 ; i<iScaleImageCount ; i++ )

  00006	83 65 f8 00	 and	 DWORD PTR _i$511216[ebp], 0
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	8b 86 94 01 00
	00		 mov	 eax, DWORD PTR [esi+404]
  00013	2b 86 90 01 00
	00		 sub	 eax, DWORD PTR [esi+400]
  00019	c1 f8 02	 sar	 eax, 2
  0001c	89 45 e0	 mov	 DWORD PTR _iScaleImageCount$[ebp], eax
  0001f	85 c0		 test	 eax, eax
  00021	0f 8e 1c 02 00
	00		 jle	 $LN7@ScaleIconI
  00027	53		 push	 ebx
  00028	57		 push	 edi
$LL44@ScaleIconI:

; 241  : 	{
; 242  : 		ScaleImage *pImage = m_ScaleImageList[i];

  00029	8b 8e 90 01 00
	00		 mov	 ecx, DWORD PTR [esi+400]
  0002f	8b 55 f8	 mov	 edx, DWORD PTR _i$511216[ebp]
  00032	8b 3c 91	 mov	 edi, DWORD PTR [ecx+edx*4]

; 243  : 		if( !pImage )

  00035	85 ff		 test	 edi, edi
  00037	0f 84 f8 01 00
	00		 je	 $LN8@ScaleIconI

; 244  : 			continue;
; 245  : 
; 246  : 		int iGapTime  = FRAMEGETTIME() - pImage->m_dwScaleTime;

  0003d	8b 5f 04	 mov	 ebx, DWORD PTR [edi+4]
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00046	8b c8		 mov	 ecx, eax
  00048	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ

; 247  : 		int iAniTime  = m_dwChangeDuration;

  0004e	8b 96 a4 01 00
	00		 mov	 edx, DWORD PTR [esi+420]

; 248  : 		float fCurScale = m_fSmallScale;

  00054	f3 0f 10 86 ac
	01 00 00	 movss	 xmm0, DWORD PTR [esi+428]
  0005c	8b c8		 mov	 ecx, eax
  0005e	2b cb		 sub	 ecx, ebx
  00060	89 4d ec	 mov	 DWORD PTR _iGapTime$511222[ebp], ecx
  00063	89 55 f4	 mov	 DWORD PTR _iAniTime$511223[ebp], edx
  00066	f3 0f 11 45 fc	 movss	 DWORD PTR _fCurScale$511224[ebp], xmm0

; 249  : 
; 250  : 		if( pImage->m_dwScaleTime != 0 )

  0006b	85 db		 test	 ebx, ebx
  0006d	0f 84 60 01 00
	00		 je	 $LN1@ScaleIconI

; 251  : 		{
; 252  : 			if( iGapTime < iAniTime )

  00073	3b ca		 cmp	 ecx, edx
  00075	0f 8d 99 00 00
	00		 jge	 $LN4@ScaleIconI

; 253  : 			{
; 254  : 				fCurScale += ( (m_fBigScale - m_fSmallScale) * sinf( ( FLOAT_PI * FLOAT05 ) * ( (float)iGapTime / (float)iAniTime ) ) );				

  0007b	b8 4e e6 40 bb	 mov	 eax, -1153374642	; bb40e64eH
  00080	8b c8		 mov	 ecx, eax
  00082	b8 00 ca 9a 3b	 mov	 eax, 1000000000		; 3b9aca00H
  00087	8b d0		 mov	 edx, eax
  00089	b8 05 00 00 00	 mov	 eax, 5
  0008e	8b d8		 mov	 ebx, eax
  00090	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  00095	89 5d e4	 mov	 DWORD PTR tv467[ebp], ebx
  00098	db 45 e4	 fild	 DWORD PTR tv467[ebp]
  0009b	85 db		 test	 ebx, ebx
  0009d	79 06		 jns	 SHORT $LN45@ScaleIconI
  0009f	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN45@ScaleIconI:
  000a5	89 45 e4	 mov	 DWORD PTR tv463[ebp], eax
  000a8	db 45 e4	 fild	 DWORD PTR tv463[ebp]
  000ab	85 c0		 test	 eax, eax
  000ad	79 06		 jns	 SHORT $LN46@ScaleIconI
  000af	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN46@ScaleIconI:
  000b5	de f9		 fdivp	 ST(1), ST(0)
  000b7	89 4d e4	 mov	 DWORD PTR tv455[ebp], ecx
  000ba	d9 5d f0	 fstp	 DWORD PTR tv459[ebp]
  000bd	d9 45 f0	 fld	 DWORD PTR tv459[ebp]
  000c0	db 45 e4	 fild	 DWORD PTR tv455[ebp]
  000c3	85 c9		 test	 ecx, ecx
  000c5	79 06		 jns	 SHORT $LN47@ScaleIconI
  000c7	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN47@ScaleIconI:
  000cd	89 55 e4	 mov	 DWORD PTR tv452[ebp], edx
  000d0	db 45 e4	 fild	 DWORD PTR tv452[ebp]
  000d3	85 d2		 test	 edx, edx
  000d5	79 06		 jns	 SHORT $LN48@ScaleIconI
  000d7	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN48@ScaleIconI:
  000dd	de f9		 fdivp	 ST(1), ST(0)
  000df	d9 5d f0	 fstp	 DWORD PTR tv448[ebp]
  000e2	d8 4d f0	 fmul	 DWORD PTR tv448[ebp]
  000e5	db 45 ec	 fild	 DWORD PTR _iGapTime$511222[ebp]
  000e8	da 75 f4	 fidiv	 DWORD PTR _iAniTime$511223[ebp]
  000eb	de c9		 fmulp	 ST(1), ST(0)
  000ed	d9 5d ec	 fstp	 DWORD PTR tv441[ebp]
  000f0	d9 45 ec	 fld	 DWORD PTR tv441[ebp]
  000f3	e8 00 00 00 00	 call	 __CIsin
  000f8	d9 5d ec	 fstp	 DWORD PTR tv435[ebp]
  000fb	d9 45 ec	 fld	 DWORD PTR tv435[ebp]
  000fe	d9 86 a8 01 00
	00		 fld	 DWORD PTR [esi+424]
  00104	d8 a6 ac 01 00
	00		 fsub	 DWORD PTR [esi+428]
  0010a	de c9		 fmulp	 ST(1), ST(0)
  0010c	d8 45 fc	 fadd	 DWORD PTR _fCurScale$511224[ebp]
  0010f	e9 b1 00 00 00	 jmp	 $LN53@ScaleIconI
$LN4@ScaleIconI:

; 255  : 			}
; 256  : 			else if( iGapTime < iAniTime * 2 )

  00114	8d 04 12	 lea	 eax, DWORD PTR [edx+edx]
  00117	3b c8		 cmp	 ecx, eax
  00119	0f 8d b0 00 00
	00		 jge	 $LN2@ScaleIconI

; 257  : 			{
; 258  : 				fCurScale -= ( (m_fBigScale - m_fSmallScale) * cosf( ( FLOAT_PI * FLOAT05 ) * ( (float)( iGapTime + iAniTime ) / (float)iAniTime ) ) );

  0011f	b8 4e e6 40 bb	 mov	 eax, -1153374642	; bb40e64eH
  00124	8b d8		 mov	 ebx, eax
  00126	b8 00 ca 9a 3b	 mov	 eax, 1000000000		; 3b9aca00H
  0012b	89 45 e4	 mov	 DWORD PTR $T513690[ebp], eax
  0012e	b8 05 00 00 00	 mov	 eax, 5
  00133	89 45 ec	 mov	 DWORD PTR $T513694[ebp], eax
  00136	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  0013b	d9 45 fc	 fld	 DWORD PTR _fCurScale$511224[ebp]
  0013e	db 45 ec	 fild	 DWORD PTR $T513694[ebp]
  00141	89 45 f0	 mov	 DWORD PTR $T513698[ebp], eax
  00144	8b 45 ec	 mov	 eax, DWORD PTR $T513694[ebp]
  00147	85 c0		 test	 eax, eax
  00149	79 06		 jns	 SHORT $LN49@ScaleIconI
  0014b	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN49@ScaleIconI:
  00151	8b 45 f0	 mov	 eax, DWORD PTR $T513698[ebp]
  00154	db 45 f0	 fild	 DWORD PTR $T513698[ebp]
  00157	85 c0		 test	 eax, eax
  00159	79 06		 jns	 SHORT $LN50@ScaleIconI
  0015b	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN50@ScaleIconI:
  00161	de f9		 fdivp	 ST(1), ST(0)
  00163	d9 5d ec	 fstp	 DWORD PTR tv414[ebp]
  00166	d9 45 ec	 fld	 DWORD PTR tv414[ebp]
  00169	89 5d ec	 mov	 DWORD PTR tv410[ebp], ebx
  0016c	db 45 ec	 fild	 DWORD PTR tv410[ebp]
  0016f	85 db		 test	 ebx, ebx
  00171	79 06		 jns	 SHORT $LN51@ScaleIconI
  00173	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN51@ScaleIconI:
  00179	8b 45 e4	 mov	 eax, DWORD PTR $T513690[ebp]
  0017c	db 45 e4	 fild	 DWORD PTR $T513690[ebp]
  0017f	85 c0		 test	 eax, eax
  00181	79 06		 jns	 SHORT $LN52@ScaleIconI
  00183	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN52@ScaleIconI:
  00189	de f9		 fdivp	 ST(1), ST(0)
  0018b	03 d1		 add	 edx, ecx
  0018d	d9 5d e4	 fstp	 DWORD PTR tv403[ebp]
  00190	d8 4d e4	 fmul	 DWORD PTR tv403[ebp]
  00193	89 55 e4	 mov	 DWORD PTR tv399[ebp], edx
  00196	db 45 e4	 fild	 DWORD PTR tv399[ebp]
  00199	da 75 f4	 fidiv	 DWORD PTR _iAniTime$511223[ebp]
  0019c	de c9		 fmulp	 ST(1), ST(0)
  0019e	d9 5d e4	 fstp	 DWORD PTR tv395[ebp]
  001a1	d9 45 e4	 fld	 DWORD PTR tv395[ebp]
  001a4	d9 c9		 fxch	 ST(1)
  001a6	dd 5d e8	 fstp	 QWORD PTR tv361[ebp]
  001a9	e8 00 00 00 00	 call	 __CIcos
  001ae	d9 5d e4	 fstp	 DWORD PTR tv389[ebp]
  001b1	d9 45 e4	 fld	 DWORD PTR tv389[ebp]
  001b4	d9 86 a8 01 00
	00		 fld	 DWORD PTR [esi+424]
  001ba	d8 a6 ac 01 00
	00		 fsub	 DWORD PTR [esi+428]
  001c0	de c9		 fmulp	 ST(1), ST(0)
  001c2	dc 6d e8	 fsubr	 QWORD PTR tv361[ebp]
$LN53@ScaleIconI:
  001c5	d9 5d fc	 fstp	 DWORD PTR _fCurScale$511224[ebp]

; 259  : 			}
; 260  : 			else 

  001c8	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fCurScale$511224[ebp]
  001cd	eb 04		 jmp	 SHORT $LN1@ScaleIconI
$LN2@ScaleIconI:

; 261  : 			{
; 262  : 				pImage->m_dwScaleTime = 0;

  001cf	83 67 04 00	 and	 DWORD PTR [edi+4], 0
$LN1@ScaleIconI:

; 263  : 			}
; 264  : 		}
; 265  : 
; 266  : 		fCurScale = max( m_fSmallScale, min( fCurScale, m_fBigScale ) );

  001d3	f3 0f 10 96 a8
	01 00 00	 movss	 xmm2, DWORD PTR [esi+424]
  001db	0f 57 c9	 xorps	 xmm1, xmm1
  001de	0f 57 db	 xorps	 xmm3, xmm3
  001e1	0f 5a c8	 cvtps2pd xmm1, xmm0
  001e4	0f 5a da	 cvtps2pd xmm3, xmm2
  001e7	66 0f 2f d9	 comisd	 xmm3, xmm1
  001eb	76 05		 jbe	 SHORT $LN12@ScaleIconI
  001ed	0f 28 d8	 movaps	 xmm3, xmm0
  001f0	eb 03		 jmp	 SHORT $LN13@ScaleIconI
$LN12@ScaleIconI:
  001f2	0f 28 da	 movaps	 xmm3, xmm2
$LN13@ScaleIconI:
  001f5	f3 0f 10 8e ac
	01 00 00	 movss	 xmm1, DWORD PTR [esi+428]
  001fd	0f 5a e1	 cvtps2pd xmm4, xmm1
  00200	f3 0f 5a db	 cvtss2sd xmm3, xmm3
  00204	66 0f 2f e3	 comisd	 xmm4, xmm3
  00208	76 05		 jbe	 SHORT $LN16@ScaleIconI
  0020a	0f 28 c1	 movaps	 xmm0, xmm1
  0020d	eb 0f		 jmp	 SHORT $LN15@ScaleIconI
$LN16@ScaleIconI:
  0020f	0f 5a c8	 cvtps2pd xmm1, xmm0
  00212	0f 5a da	 cvtps2pd xmm3, xmm2
  00215	66 0f 2f d9	 comisd	 xmm3, xmm1
  00219	77 03		 ja	 SHORT $LN15@ScaleIconI
  0021b	0f 28 c2	 movaps	 xmm0, xmm2
$LN15@ScaleIconI:

; 267  : 		pImage->m_fCurScale = fCurScale;

  0021e	f3 0f 11 47 08	 movss	 DWORD PTR [edi+8], xmm0

; 268  : 		pImage->m_pImage->SetScale( pImage->m_fCurScale );

  00223	8b 3f		 mov	 edi, DWORD PTR [edi]
  00225	8b 07		 mov	 eax, DWORD PTR [edi]
  00227	51		 push	 ecx
  00228	8b cf		 mov	 ecx, edi
  0022a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0022f	ff 50 1c	 call	 DWORD PTR [eax+28]
  00232	8b 45 e0	 mov	 eax, DWORD PTR _iScaleImageCount$[ebp]
$LN8@ScaleIconI:

; 239  : 	int iScaleImageCount = m_ScaleImageList.size();
; 240  : 	for( int i=0 ; i<iScaleImageCount ; i++ )

  00235	ff 45 f8	 inc	 DWORD PTR _i$511216[ebp]
  00238	39 45 f8	 cmp	 DWORD PTR _i$511216[ebp], eax
  0023b	0f 8c e8 fd ff
	ff		 jl	 $LL44@ScaleIconI
  00241	5f		 pop	 edi
  00242	5b		 pop	 ebx
$LN7@ScaleIconI:
  00243	5e		 pop	 esi

; 269  : 	}
; 270  : }

  00244	c9		 leave
  00245	c3		 ret	 0
?ScaleIconImage@TimeGateSearch@@IAEXXZ ENDP		; TimeGateSearch::ScaleIconImage
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GTimeGateSearchResult@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GTimeGateSearchResult@@UAEPAXI@Z PROC		; TimeGateSearchResult::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1TimeGateSearchResult@@UAE@XZ ; TimeGateSearchResult::~TimeGateSearchResult
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@2
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@2:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GTimeGateSearchResult@@UAEPAXI@Z ENDP		; TimeGateSearchResult::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::_Vector_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::_Vector_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >, COMDAT
; _this$ = ecx

; 298  : 	_Vector_iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0

; 299  : 		{	// construct with null vector pointer
; 300  : 		}

  00005	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::_Vector_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBEAAPAUScaleImage@TimeGateSearch@@XZ ; std::_Vector_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBEAAPAUScaleImage@TimeGateSearch@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBEAAPAUScaleImage@TimeGateSearch@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::operator*, COMDAT
; _this$ = ecx

; 322  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 323  : 		}

  00002	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBEAAPAUScaleImage@TimeGateSearch@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::operator++, COMDAT
; _this$ = ecx

; 331  : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 332  : 		++*(_Mybase *)this;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 333  : 		return (*this);
; 334  : 		}

  00005	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE@V?$allocator@PAUScaleImage@TimeGateSearch@@@1@@Z ; std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE@V?$allocator@PAUScaleImage@TimeGateSearch@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE@V?$allocator@PAUScaleImage@TimeGateSearch@@@1@@Z PROC ; std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE@V?$allocator@PAUScaleImage@TimeGateSearch@@@1@@Z ENDP ; std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::operator==
; Function compile flags: /Ogsp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::operator==
_TEXT	ENDS
PUBLIC	?max_size@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBEIXZ ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBEIXZ PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBEIXZ ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IBEII@Z ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IBEII@Z PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  00008	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  0000d	c1 f8 02	 sar	 eax, 2
  00010	8b c8		 mov	 ecx, eax
  00012	d1 e9		 shr	 ecx, 1
  00014	2b d1		 sub	 edx, ecx
  00016	3b d0		 cmp	 edx, eax
  00018	73 04		 jae	 SHORT $LN4@Grow_to
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 02		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  0001e	03 c1		 add	 eax, ecx
$LN5@Grow_to:

; 1279 : 		if (_Capacity < _Count)

  00020	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00023	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IBEII@Z ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Grow_to
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAE@PAPAUScaleImage@TimeGateSearch@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAE@PAPAUScaleImage@TimeGateSearch@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAE@PAPAUScaleImage@TimeGateSearch@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAE@PAPAUScaleImage@TimeGateSearch@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAEPAPAUScaleImage@TimeGateSearch@@I@Z ; std::allocator<TimeGateSearch::ScaleImage *>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAEPAPAUScaleImage@TimeGateSearch@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAEPAPAUScaleImage@TimeGateSearch@@I@Z PROC ; std::allocator<TimeGateSearch::ScaleImage *>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@PAUScaleImage@TimeGateSearch@@@std@@YAPAPAUScaleImage@TimeGateSearch@@IPAPAU12@@Z ; std::_Allocate<TimeGateSearch::ScaleImage *>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAEPAPAUScaleImage@TimeGateSearch@@I@Z ENDP ; std::allocator<TimeGateSearch::ScaleImage *>::allocate
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$?8$0L@@@YA_NABVioHashString@@AAY0L@$$CBD@Z	; operator==<11>
EXTRN	__imp_?c_str@ioHashString@@QBEPBDXZ:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iohashstring.h
;	COMDAT ??$?8$0L@@@YA_NABVioHashString@@AAY0L@$$CBD@Z
_TEXT	SEGMENT
__t$ = -20						; size = 11
__$ArrayPad$ = -4					; size = 4
_lhs$ = 8						; size = 4
_t$ = 12						; size = 4
??$?8$0L@@@YA_NABVioHashString@@AAY0L@$$CBD@Z PROC	; operator==<11>, COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]

; 147  : 	_ENCSTR(t, _t); return ( strcmp( lhs.c_str(), _t ) == 0 );

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	8b 7d 08	 mov	 edi, DWORD PTR _lhs$[ebp]
  0001a	84 d2		 test	 dl, dl
  0001c	0f 84 24 01 00
	00		 je	 $LN96@operator
  00022	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00025	88 55 ec	 mov	 BYTE PTR __t$[ebp], dl
  00028	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0002b	84 d2		 test	 dl, dl
  0002d	0f 84 0d 01 00
	00		 je	 $LN95@operator
  00033	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00036	88 55 ed	 mov	 BYTE PTR __t$[ebp+1], dl
  00039	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003c	84 d2		 test	 dl, dl
  0003e	0f 84 f6 00 00
	00		 je	 $LN94@operator
  00044	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00047	88 55 ee	 mov	 BYTE PTR __t$[ebp+2], dl
  0004a	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004d	84 d2		 test	 dl, dl
  0004f	0f 84 df 00 00
	00		 je	 $LN93@operator
  00055	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00058	88 55 ef	 mov	 BYTE PTR __t$[ebp+3], dl
  0005b	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005e	84 d2		 test	 dl, dl
  00060	0f 84 c8 00 00
	00		 je	 $LN92@operator
  00066	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00069	88 55 f0	 mov	 BYTE PTR __t$[ebp+4], dl
  0006c	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006f	84 d2		 test	 dl, dl
  00071	0f 84 b1 00 00
	00		 je	 $LN91@operator
  00077	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0007a	88 55 f1	 mov	 BYTE PTR __t$[ebp+5], dl
  0007d	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00080	84 d2		 test	 dl, dl
  00082	0f 84 9a 00 00
	00		 je	 $LN90@operator
  00088	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0008b	88 55 f2	 mov	 BYTE PTR __t$[ebp+6], dl
  0008e	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00091	84 d2		 test	 dl, dl
  00093	0f 84 83 00 00
	00		 je	 $LN89@operator
  00099	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009c	88 55 f3	 mov	 BYTE PTR __t$[ebp+7], dl
  0009f	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a2	84 d2		 test	 dl, dl
  000a4	74 70		 je	 SHORT $LN88@operator
  000a6	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a9	88 55 f4	 mov	 BYTE PTR __t$[ebp+8], dl
  000ac	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000af	84 d2		 test	 dl, dl
  000b1	74 5d		 je	 SHORT $LN87@operator
  000b3	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b6	80 78 0a 00	 cmp	 BYTE PTR [eax+10], 0
  000ba	88 55 f5	 mov	 BYTE PTR __t$[ebp+9], dl
  000bd	0f 84 87 00 00
	00		 je	 $LN1@operator
  000c3	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000c6	84 d2		 test	 dl, dl
  000c8	74 40		 je	 SHORT $LN85@operator
  000ca	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000cd	88 55 f7	 mov	 BYTE PTR __t$[ebp+11], dl
  000d0	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000d3	84 d2		 test	 dl, dl
  000d5	74 2d		 je	 SHORT $LN84@operator
  000d7	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000da	88 55 f8	 mov	 BYTE PTR __t$[ebp+12], dl
  000dd	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000e0	84 d2		 test	 dl, dl
  000e2	74 1a		 je	 SHORT $LN83@operator
  000e4	8a 40 0e	 mov	 al, BYTE PTR [eax+14]
  000e7	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000ea	88 55 f9	 mov	 BYTE PTR __t$[ebp+13], dl
  000ed	84 c0		 test	 al, al
  000ef	74 07		 je	 SHORT $LN82@operator
  000f1	34 eb		 xor	 al, -21			; ffffffebH
  000f3	88 45 fa	 mov	 BYTE PTR __t$[ebp+14], al
  000f6	eb 52		 jmp	 SHORT $LN1@operator
$LN82@operator:
  000f8	c6 45 fa eb	 mov	 BYTE PTR __t$[ebp+14], -21 ; ffffffebH
  000fc	eb 4c		 jmp	 SHORT $LN1@operator
$LN83@operator:
  000fe	c6 45 f9 ec	 mov	 BYTE PTR __t$[ebp+13], -20 ; ffffffecH
  00102	eb 46		 jmp	 SHORT $LN1@operator
$LN84@operator:
  00104	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+12], -19 ; ffffffedH
  00108	eb 40		 jmp	 SHORT $LN1@operator
$LN85@operator:
  0010a	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+11], -22 ; ffffffeaH
  0010e	eb 3a		 jmp	 SHORT $LN1@operator
$LN87@operator:
  00110	c6 45 f5 ec	 mov	 BYTE PTR __t$[ebp+9], -20 ; ffffffecH
  00114	eb 34		 jmp	 SHORT $LN1@operator
$LN88@operator:
  00116	c6 45 f4 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  0011a	eb 2e		 jmp	 SHORT $LN1@operator
$LN89@operator:
  0011c	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  00120	eb 28		 jmp	 SHORT $LN1@operator
$LN90@operator:
  00122	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+6], -21 ; ffffffebH
  00126	eb 22		 jmp	 SHORT $LN1@operator
$LN91@operator:
  00128	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  0012c	eb 1c		 jmp	 SHORT $LN1@operator
$LN92@operator:
  0012e	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  00132	eb 16		 jmp	 SHORT $LN1@operator
$LN93@operator:
  00134	c6 45 ef ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  00138	eb 10		 jmp	 SHORT $LN1@operator
$LN94@operator:
  0013a	c6 45 ee eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  0013e	eb 0a		 jmp	 SHORT $LN1@operator
$LN95@operator:
  00140	c6 45 ed ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  00144	eb 04		 jmp	 SHORT $LN1@operator
$LN96@operator:
  00146	c6 45 ec ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@operator:
  0014a	6a 02		 push	 2
  0014c	8d 45 ec	 lea	 eax, DWORD PTR __t$[ebp]
  0014f	c6 45 f6 00	 mov	 BYTE PTR __t$[ebp+10], 0
  00153	5a		 pop	 edx
$LL104@operator:
  00154	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0015a	83 c0 04	 add	 eax, 4
  0015d	4a		 dec	 edx
  0015e	75 f4		 jne	 SHORT $LL104@operator
  00160	6a 08		 push	 8
  00162	58		 pop	 eax
$LL101@operator:
  00163	8b c8		 mov	 ecx, eax
  00165	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0016b	79 05		 jns	 SHORT $LN115@operator
  0016d	49		 dec	 ecx
  0016e	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00171	41		 inc	 ecx
$LN115@operator:
  00172	b2 ed		 mov	 dl, -19			; ffffffedH
  00174	2a d1		 sub	 dl, cl
  00176	30 54 05 ec	 xor	 BYTE PTR __t$[ebp+eax], dl
  0017a	40		 inc	 eax
  0017b	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0017e	7c e3		 jl	 SHORT $LL101@operator
  00180	8b cf		 mov	 ecx, edi
  00182	8d 75 ec	 lea	 esi, DWORD PTR __t$[ebp]
  00185	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL111@operator:
  0018b	8a 08		 mov	 cl, BYTE PTR [eax]
  0018d	3a 0e		 cmp	 cl, BYTE PTR [esi]
  0018f	75 1a		 jne	 SHORT $LN112@operator
  00191	84 c9		 test	 cl, cl
  00193	74 12		 je	 SHORT $LN113@operator
  00195	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00198	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  0019b	75 0e		 jne	 SHORT $LN112@operator
  0019d	83 c0 02	 add	 eax, 2
  001a0	83 c6 02	 add	 esi, 2
  001a3	84 c9		 test	 cl, cl
  001a5	75 e4		 jne	 SHORT $LL111@operator
$LN113@operator:
  001a7	33 c0		 xor	 eax, eax
  001a9	eb 05		 jmp	 SHORT $LN114@operator
$LN112@operator:
  001ab	1b c0		 sbb	 eax, eax
  001ad	83 d8 ff	 sbb	 eax, -1
$LN114@operator:
  001b0	33 c9		 xor	 ecx, ecx
  001b2	85 c0		 test	 eax, eax
  001b4	0f 94 c0	 sete	 al

; 148  : }

  001b7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ba	5f		 pop	 edi
  001bb	33 cd		 xor	 ecx, ebp
  001bd	5e		 pop	 esi
  001be	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001c3	c9		 leave
  001c4	c3		 ret	 0
??$?8$0L@@@YA_NABVioHashString@@AAY0L@$$CBD@Z ENDP	; operator==<11>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$?8$0P@@@YA_NABVioHashString@@AAY0P@$$CBD@Z	; operator==<15>
; Function compile flags: /Ogsp
;	COMDAT ??$?8$0P@@@YA_NABVioHashString@@AAY0P@$$CBD@Z
_TEXT	SEGMENT
__t$ = -24						; size = 15
__$ArrayPad$ = -4					; size = 4
_lhs$ = 8						; size = 4
_t$ = 12						; size = 4
??$?8$0P@@@YA_NABVioHashString@@AAY0P@$$CBD@Z PROC	; operator==<15>, COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]

; 147  : 	_ENCSTR(t, _t); return ( strcmp( lhs.c_str(), _t ) == 0 );

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	8b 7d 08	 mov	 edi, DWORD PTR _lhs$[ebp]
  0001a	84 d2		 test	 dl, dl
  0001c	0f 84 75 01 00
	00		 je	 $LN96@operator@2
  00022	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00025	88 55 e8	 mov	 BYTE PTR __t$[ebp], dl
  00028	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0002b	84 d2		 test	 dl, dl
  0002d	0f 84 5e 01 00
	00		 je	 $LN95@operator@2
  00033	b1 ec		 mov	 cl, -20			; ffffffecH
  00035	32 d1		 xor	 dl, cl
  00037	88 55 e9	 mov	 BYTE PTR __t$[ebp+1], dl
  0003a	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003d	84 d2		 test	 dl, dl
  0003f	0f 84 46 01 00
	00		 je	 $LN94@operator@2
  00045	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00048	88 55 ea	 mov	 BYTE PTR __t$[ebp+2], dl
  0004b	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004e	84 d2		 test	 dl, dl
  00050	0f 84 2f 01 00
	00		 je	 $LN93@operator@2
  00056	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00059	88 55 eb	 mov	 BYTE PTR __t$[ebp+3], dl
  0005c	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005f	84 d2		 test	 dl, dl
  00061	0f 84 18 01 00
	00		 je	 $LN92@operator@2
  00067	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0006a	88 55 ec	 mov	 BYTE PTR __t$[ebp+4], dl
  0006d	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00070	84 d2		 test	 dl, dl
  00072	0f 84 02 01 00
	00		 je	 $LN91@operator@2
  00078	32 d1		 xor	 dl, cl
  0007a	88 55 ed	 mov	 BYTE PTR __t$[ebp+5], dl
  0007d	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00080	84 d2		 test	 dl, dl
  00082	0f 84 ec 00 00
	00		 je	 $LN90@operator@2
  00088	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0008b	88 55 ee	 mov	 BYTE PTR __t$[ebp+6], dl
  0008e	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00091	84 d2		 test	 dl, dl
  00093	0f 84 d5 00 00
	00		 je	 $LN89@operator@2
  00099	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009c	88 55 ef	 mov	 BYTE PTR __t$[ebp+7], dl
  0009f	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a2	84 d2		 test	 dl, dl
  000a4	0f 84 be 00 00
	00		 je	 $LN88@operator@2
  000aa	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ad	88 55 f0	 mov	 BYTE PTR __t$[ebp+8], dl
  000b0	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b3	84 d2		 test	 dl, dl
  000b5	0f 84 a8 00 00
	00		 je	 $LN87@operator@2
  000bb	32 d1		 xor	 dl, cl
  000bd	88 55 f1	 mov	 BYTE PTR __t$[ebp+9], dl
  000c0	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c3	84 d2		 test	 dl, dl
  000c5	0f 84 92 00 00
	00		 je	 $LN86@operator@2
  000cb	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000ce	88 55 f2	 mov	 BYTE PTR __t$[ebp+10], dl
  000d1	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d4	84 d2		 test	 dl, dl
  000d6	74 7f		 je	 SHORT $LN85@operator@2
  000d8	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000db	88 55 f3	 mov	 BYTE PTR __t$[ebp+11], dl
  000de	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e1	84 d2		 test	 dl, dl
  000e3	74 6c		 je	 SHORT $LN84@operator@2
  000e5	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e8	88 55 f4	 mov	 BYTE PTR __t$[ebp+12], dl
  000eb	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000ee	84 d2		 test	 dl, dl
  000f0	74 5a		 je	 SHORT $LN83@operator@2
  000f2	32 d1		 xor	 dl, cl
  000f4	80 78 0e 00	 cmp	 BYTE PTR [eax+14], 0
  000f8	88 55 f5	 mov	 BYTE PTR __t$[ebp+13], dl
  000fb	0f 84 9a 00 00
	00		 je	 $LN1@operator@2
  00101	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00104	84 d2		 test	 dl, dl
  00106	74 3e		 je	 SHORT $LN81@operator@2
  00108	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0010b	88 55 f7	 mov	 BYTE PTR __t$[ebp+15], dl
  0010e	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00111	84 d2		 test	 dl, dl
  00113	74 2b		 je	 SHORT $LN80@operator@2
  00115	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00118	88 55 f8	 mov	 BYTE PTR __t$[ebp+16], dl
  0011b	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  0011e	84 d2		 test	 dl, dl
  00120	74 19		 je	 SHORT $LN79@operator@2
  00122	8a 40 12	 mov	 al, BYTE PTR [eax+18]
  00125	32 d1		 xor	 dl, cl
  00127	88 55 f9	 mov	 BYTE PTR __t$[ebp+17], dl
  0012a	84 c0		 test	 al, al
  0012c	74 07		 je	 SHORT $LN78@operator@2
  0012e	34 eb		 xor	 al, -21			; ffffffebH
  00130	88 45 fa	 mov	 BYTE PTR __t$[ebp+18], al
  00133	eb 66		 jmp	 SHORT $LN1@operator@2
$LN78@operator@2:
  00135	c6 45 fa eb	 mov	 BYTE PTR __t$[ebp+18], -21 ; ffffffebH
  00139	eb 60		 jmp	 SHORT $LN1@operator@2
$LN79@operator@2:
  0013b	88 4d f9	 mov	 BYTE PTR __t$[ebp+17], cl
  0013e	eb 5b		 jmp	 SHORT $LN1@operator@2
$LN80@operator@2:
  00140	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+16], -19 ; ffffffedH
  00144	eb 55		 jmp	 SHORT $LN1@operator@2
$LN81@operator@2:
  00146	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+15], -22 ; ffffffeaH
  0014a	eb 4f		 jmp	 SHORT $LN1@operator@2
$LN83@operator@2:
  0014c	88 4d f5	 mov	 BYTE PTR __t$[ebp+13], cl
  0014f	eb 4a		 jmp	 SHORT $LN1@operator@2
$LN84@operator@2:
  00151	c6 45 f4 ed	 mov	 BYTE PTR __t$[ebp+12], -19 ; ffffffedH
  00155	eb 44		 jmp	 SHORT $LN1@operator@2
$LN85@operator@2:
  00157	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+11], -22 ; ffffffeaH
  0015b	eb 3e		 jmp	 SHORT $LN1@operator@2
$LN86@operator@2:
  0015d	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+10], -21 ; ffffffebH
  00161	eb 38		 jmp	 SHORT $LN1@operator@2
$LN87@operator@2:
  00163	88 4d f1	 mov	 BYTE PTR __t$[ebp+9], cl
  00166	eb 33		 jmp	 SHORT $LN1@operator@2
$LN88@operator@2:
  00168	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  0016c	eb 2d		 jmp	 SHORT $LN1@operator@2
$LN89@operator@2:
  0016e	c6 45 ef ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  00172	eb 27		 jmp	 SHORT $LN1@operator@2
$LN90@operator@2:
  00174	c6 45 ee eb	 mov	 BYTE PTR __t$[ebp+6], -21 ; ffffffebH
  00178	eb 21		 jmp	 SHORT $LN1@operator@2
$LN91@operator@2:
  0017a	88 4d ed	 mov	 BYTE PTR __t$[ebp+5], cl
  0017d	eb 1c		 jmp	 SHORT $LN1@operator@2
$LN92@operator@2:
  0017f	c6 45 ec ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  00183	eb 16		 jmp	 SHORT $LN1@operator@2
$LN93@operator@2:
  00185	c6 45 eb ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  00189	eb 10		 jmp	 SHORT $LN1@operator@2
$LN94@operator@2:
  0018b	c6 45 ea eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  0018f	eb 0a		 jmp	 SHORT $LN1@operator@2
$LN95@operator@2:
  00191	c6 45 e9 ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  00195	eb 04		 jmp	 SHORT $LN1@operator@2
$LN96@operator@2:
  00197	c6 45 e8 ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@operator@2:
  0019b	6a 03		 push	 3
  0019d	8d 45 e8	 lea	 eax, DWORD PTR __t$[ebp]
  001a0	c6 45 f6 00	 mov	 BYTE PTR __t$[ebp+14], 0
  001a4	5a		 pop	 edx
$LL104@operator@2:
  001a5	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001ab	83 c0 04	 add	 eax, 4
  001ae	4a		 dec	 edx
  001af	75 f4		 jne	 SHORT $LL104@operator@2
  001b1	6a 0c		 push	 12			; 0000000cH
  001b3	58		 pop	 eax
$LL101@operator@2:
  001b4	8b c8		 mov	 ecx, eax
  001b6	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  001bc	79 05		 jns	 SHORT $LN115@operator@2
  001be	49		 dec	 ecx
  001bf	83 c9 fc	 or	 ecx, -4			; fffffffcH
  001c2	41		 inc	 ecx
$LN115@operator@2:
  001c3	b2 ed		 mov	 dl, -19			; ffffffedH
  001c5	2a d1		 sub	 dl, cl
  001c7	30 54 05 e8	 xor	 BYTE PTR __t$[ebp+eax], dl
  001cb	40		 inc	 eax
  001cc	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  001cf	7c e3		 jl	 SHORT $LL101@operator@2
  001d1	8b cf		 mov	 ecx, edi
  001d3	8d 75 e8	 lea	 esi, DWORD PTR __t$[ebp]
  001d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL111@operator@2:
  001dc	8a 08		 mov	 cl, BYTE PTR [eax]
  001de	3a 0e		 cmp	 cl, BYTE PTR [esi]
  001e0	75 1a		 jne	 SHORT $LN112@operator@2
  001e2	84 c9		 test	 cl, cl
  001e4	74 12		 je	 SHORT $LN113@operator@2
  001e6	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  001e9	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  001ec	75 0e		 jne	 SHORT $LN112@operator@2
  001ee	83 c0 02	 add	 eax, 2
  001f1	83 c6 02	 add	 esi, 2
  001f4	84 c9		 test	 cl, cl
  001f6	75 e4		 jne	 SHORT $LL111@operator@2
$LN113@operator@2:
  001f8	33 c0		 xor	 eax, eax
  001fa	eb 05		 jmp	 SHORT $LN114@operator@2
$LN112@operator@2:
  001fc	1b c0		 sbb	 eax, eax
  001fe	83 d8 ff	 sbb	 eax, -1
$LN114@operator@2:
  00201	33 c9		 xor	 ecx, ecx
  00203	85 c0		 test	 eax, eax
  00205	0f 94 c0	 sete	 al

; 148  : }

  00208	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0020b	5f		 pop	 edi
  0020c	33 cd		 xor	 ecx, ebp
  0020e	5e		 pop	 esi
  0020f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00214	c9		 leave
  00215	c3		 ret	 0
??$?8$0P@@@YA_NABVioHashString@@AAY0P@$$CBD@Z ENDP	; operator==<15>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$GetIntAttribute_e@$0P@@ioXMLElement@@QBEHAAY0P@$$CBD@Z ; ioXMLElement::GetIntAttribute_e<15>
EXTRN	__imp_?GetIntAttribute@ioXMLElement@@QBEHPBD@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioxmlelement.h
;	COMDAT ??$GetIntAttribute_e@$0P@@ioXMLElement@@QBEHAAY0P@$$CBD@Z
_TEXT	SEGMENT
__k$ = -24						; size = 15
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
??$GetIntAttribute_e@$0P@@ioXMLElement@@QBEHAAY0P@$$CBD@Z PROC ; ioXMLElement::GetIntAttribute_e<15>, COMDAT
; _this$ = ecx

; 86   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 87   : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 75 01 00
	00		 je	 $LN96@GetIntAttr
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e8	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 5e 01 00
	00		 je	 $LN95@GetIntAttr
  00031	b1 ec		 mov	 cl, -20			; ffffffecH
  00033	32 d1		 xor	 dl, cl
  00035	88 55 e9	 mov	 BYTE PTR __k$[ebp+1], dl
  00038	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003b	84 d2		 test	 dl, dl
  0003d	0f 84 46 01 00
	00		 je	 $LN94@GetIntAttr
  00043	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00046	88 55 ea	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 2f 01 00
	00		 je	 $LN93@GetIntAttr
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 eb	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 18 01 00
	00		 je	 $LN92@GetIntAttr
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 ec	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 02 01 00
	00		 je	 $LN91@GetIntAttr
  00076	32 d1		 xor	 dl, cl
  00078	88 55 ed	 mov	 BYTE PTR __k$[ebp+5], dl
  0007b	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007e	84 d2		 test	 dl, dl
  00080	0f 84 ec 00 00
	00		 je	 $LN90@GetIntAttr
  00086	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00089	88 55 ee	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 d5 00 00
	00		 je	 $LN89@GetIntAttr
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 ef	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 be 00 00
	00		 je	 $LN88@GetIntAttr
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 f0	 mov	 BYTE PTR __k$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 a8 00 00
	00		 je	 $LN87@GetIntAttr
  000b9	32 d1		 xor	 dl, cl
  000bb	88 55 f1	 mov	 BYTE PTR __k$[ebp+9], dl
  000be	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c1	84 d2		 test	 dl, dl
  000c3	0f 84 92 00 00
	00		 je	 $LN86@GetIntAttr
  000c9	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000cc	88 55 f2	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	74 7f		 je	 SHORT $LN85@GetIntAttr
  000d6	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d9	88 55 f3	 mov	 BYTE PTR __k$[ebp+11], dl
  000dc	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000df	84 d2		 test	 dl, dl
  000e1	74 6c		 je	 SHORT $LN84@GetIntAttr
  000e3	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e6	88 55 f4	 mov	 BYTE PTR __k$[ebp+12], dl
  000e9	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000ec	84 d2		 test	 dl, dl
  000ee	74 5a		 je	 SHORT $LN83@GetIntAttr
  000f0	32 d1		 xor	 dl, cl
  000f2	80 78 0e 00	 cmp	 BYTE PTR [eax+14], 0
  000f6	88 55 f5	 mov	 BYTE PTR __k$[ebp+13], dl
  000f9	0f 84 9a 00 00
	00		 je	 $LN1@GetIntAttr
  000ff	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00102	84 d2		 test	 dl, dl
  00104	74 3e		 je	 SHORT $LN81@GetIntAttr
  00106	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00109	88 55 f7	 mov	 BYTE PTR __k$[ebp+15], dl
  0010c	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  0010f	84 d2		 test	 dl, dl
  00111	74 2b		 je	 SHORT $LN80@GetIntAttr
  00113	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00116	88 55 f8	 mov	 BYTE PTR __k$[ebp+16], dl
  00119	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  0011c	84 d2		 test	 dl, dl
  0011e	74 19		 je	 SHORT $LN79@GetIntAttr
  00120	8a 40 12	 mov	 al, BYTE PTR [eax+18]
  00123	32 d1		 xor	 dl, cl
  00125	88 55 f9	 mov	 BYTE PTR __k$[ebp+17], dl
  00128	84 c0		 test	 al, al
  0012a	74 07		 je	 SHORT $LN78@GetIntAttr
  0012c	34 eb		 xor	 al, -21			; ffffffebH
  0012e	88 45 fa	 mov	 BYTE PTR __k$[ebp+18], al
  00131	eb 66		 jmp	 SHORT $LN1@GetIntAttr
$LN78@GetIntAttr:
  00133	c6 45 fa eb	 mov	 BYTE PTR __k$[ebp+18], -21 ; ffffffebH
  00137	eb 60		 jmp	 SHORT $LN1@GetIntAttr
$LN79@GetIntAttr:
  00139	88 4d f9	 mov	 BYTE PTR __k$[ebp+17], cl
  0013c	eb 5b		 jmp	 SHORT $LN1@GetIntAttr
$LN80@GetIntAttr:
  0013e	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  00142	eb 55		 jmp	 SHORT $LN1@GetIntAttr
$LN81@GetIntAttr:
  00144	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00148	eb 4f		 jmp	 SHORT $LN1@GetIntAttr
$LN83@GetIntAttr:
  0014a	88 4d f5	 mov	 BYTE PTR __k$[ebp+13], cl
  0014d	eb 4a		 jmp	 SHORT $LN1@GetIntAttr
$LN84@GetIntAttr:
  0014f	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00153	eb 44		 jmp	 SHORT $LN1@GetIntAttr
$LN85@GetIntAttr:
  00155	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00159	eb 3e		 jmp	 SHORT $LN1@GetIntAttr
$LN86@GetIntAttr:
  0015b	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  0015f	eb 38		 jmp	 SHORT $LN1@GetIntAttr
$LN87@GetIntAttr:
  00161	88 4d f1	 mov	 BYTE PTR __k$[ebp+9], cl
  00164	eb 33		 jmp	 SHORT $LN1@GetIntAttr
$LN88@GetIntAttr:
  00166	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  0016a	eb 2d		 jmp	 SHORT $LN1@GetIntAttr
$LN89@GetIntAttr:
  0016c	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  00170	eb 27		 jmp	 SHORT $LN1@GetIntAttr
$LN90@GetIntAttr:
  00172	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  00176	eb 21		 jmp	 SHORT $LN1@GetIntAttr
$LN91@GetIntAttr:
  00178	88 4d ed	 mov	 BYTE PTR __k$[ebp+5], cl
  0017b	eb 1c		 jmp	 SHORT $LN1@GetIntAttr
$LN92@GetIntAttr:
  0017d	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00181	eb 16		 jmp	 SHORT $LN1@GetIntAttr
$LN93@GetIntAttr:
  00183	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00187	eb 10		 jmp	 SHORT $LN1@GetIntAttr
$LN94@GetIntAttr:
  00189	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0018d	eb 0a		 jmp	 SHORT $LN1@GetIntAttr
$LN95@GetIntAttr:
  0018f	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00193	eb 04		 jmp	 SHORT $LN1@GetIntAttr
$LN96@GetIntAttr:
  00195	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@GetIntAttr:
  00199	6a 03		 push	 3
  0019b	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  0019e	c6 45 f6 00	 mov	 BYTE PTR __k$[ebp+14], 0
  001a2	5a		 pop	 edx
$LL104@GetIntAttr:
  001a3	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001a9	83 c0 04	 add	 eax, 4
  001ac	4a		 dec	 edx
  001ad	75 f4		 jne	 SHORT $LL104@GetIntAttr
  001af	6a 0c		 push	 12			; 0000000cH
  001b1	58		 pop	 eax
$LL101@GetIntAttr:
  001b2	8b c8		 mov	 ecx, eax
  001b4	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  001ba	79 05		 jns	 SHORT $LN111@GetIntAttr
  001bc	49		 dec	 ecx
  001bd	83 c9 fc	 or	 ecx, -4			; fffffffcH
  001c0	41		 inc	 ecx
$LN111@GetIntAttr:
  001c1	b2 ed		 mov	 dl, -19			; ffffffedH
  001c3	2a d1		 sub	 dl, cl
  001c5	30 54 05 e8	 xor	 BYTE PTR __k$[ebp+eax], dl
  001c9	40		 inc	 eax
  001ca	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  001cd	7c e3		 jl	 SHORT $LL101@GetIntAttr

; 88   : 		return GetIntAttribute(_k);

  001cf	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001d2	50		 push	 eax
  001d3	8b ce		 mov	 ecx, esi
  001d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetIntAttribute@ioXMLElement@@QBEHPBD@Z

; 89   : 	}

  001db	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001de	33 cd		 xor	 ecx, ebp
  001e0	5e		 pop	 esi
  001e1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e6	c9		 leave
  001e7	c2 04 00	 ret	 4
??$GetIntAttribute_e@$0P@@ioXMLElement@@QBEHAAY0P@$$CBD@Z ENDP ; ioXMLElement::GetIntAttribute_e<15>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$GetFloatAttribute_e@$08@ioXMLElement@@QBEMAAY08$$CBD@Z ; ioXMLElement::GetFloatAttribute_e<9>
EXTRN	__imp_?GetFloatAttribute@ioXMLElement@@QBEMPBD@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$GetFloatAttribute_e@$08@ioXMLElement@@QBEMAAY08$$CBD@Z
_TEXT	SEGMENT
__k$ = -20						; size = 9
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
??$GetFloatAttribute_e@$08@ioXMLElement@@QBEMAAY08$$CBD@Z PROC ; ioXMLElement::GetFloatAttribute_e<9>, COMDAT
; _this$ = ecx

; 100  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 101  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	84 d2		 test	 dl, dl
  00017	0f 84 ee 00 00
	00		 je	 $LN96@GetFloatAt
  0001d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00020	88 55 ec	 mov	 BYTE PTR __k$[ebp], dl
  00023	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00026	84 d2		 test	 dl, dl
  00028	0f 84 d7 00 00
	00		 je	 $LN95@GetFloatAt
  0002e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00031	88 55 ed	 mov	 BYTE PTR __k$[ebp+1], dl
  00034	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  00037	84 d2		 test	 dl, dl
  00039	0f 84 c0 00 00
	00		 je	 $LN94@GetFloatAt
  0003f	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00042	88 55 ee	 mov	 BYTE PTR __k$[ebp+2], dl
  00045	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  00048	84 d2		 test	 dl, dl
  0004a	0f 84 a9 00 00
	00		 je	 $LN93@GetFloatAt
  00050	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00053	88 55 ef	 mov	 BYTE PTR __k$[ebp+3], dl
  00056	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00059	84 d2		 test	 dl, dl
  0005b	0f 84 92 00 00
	00		 je	 $LN92@GetFloatAt
  00061	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00064	88 55 f0	 mov	 BYTE PTR __k$[ebp+4], dl
  00067	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006a	84 d2		 test	 dl, dl
  0006c	74 7f		 je	 SHORT $LN91@GetFloatAt
  0006e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00071	88 55 f1	 mov	 BYTE PTR __k$[ebp+5], dl
  00074	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00077	84 d2		 test	 dl, dl
  00079	74 6c		 je	 SHORT $LN90@GetFloatAt
  0007b	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0007e	88 55 f2	 mov	 BYTE PTR __k$[ebp+6], dl
  00081	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00084	84 d2		 test	 dl, dl
  00086	74 59		 je	 SHORT $LN89@GetFloatAt
  00088	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0008b	80 78 08 00	 cmp	 BYTE PTR [eax+8], 0
  0008f	88 55 f3	 mov	 BYTE PTR __k$[ebp+7], dl
  00092	74 7b		 je	 SHORT $LN1@GetFloatAt
  00094	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  00097	84 d2		 test	 dl, dl
  00099	74 40		 je	 SHORT $LN87@GetFloatAt
  0009b	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0009e	88 55 f5	 mov	 BYTE PTR __k$[ebp+9], dl
  000a1	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000a4	84 d2		 test	 dl, dl
  000a6	74 2d		 je	 SHORT $LN86@GetFloatAt
  000a8	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000ab	88 55 f6	 mov	 BYTE PTR __k$[ebp+10], dl
  000ae	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000b1	84 d2		 test	 dl, dl
  000b3	74 1a		 je	 SHORT $LN85@GetFloatAt
  000b5	8a 40 0c	 mov	 al, BYTE PTR [eax+12]
  000b8	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000bb	88 55 f7	 mov	 BYTE PTR __k$[ebp+11], dl
  000be	84 c0		 test	 al, al
  000c0	74 07		 je	 SHORT $LN84@GetFloatAt
  000c2	34 ed		 xor	 al, -19			; ffffffedH
  000c4	88 45 f8	 mov	 BYTE PTR __k$[ebp+12], al
  000c7	eb 46		 jmp	 SHORT $LN1@GetFloatAt
$LN84@GetFloatAt:
  000c9	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  000cd	eb 40		 jmp	 SHORT $LN1@GetFloatAt
$LN85@GetFloatAt:
  000cf	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  000d3	eb 3a		 jmp	 SHORT $LN1@GetFloatAt
$LN86@GetFloatAt:
  000d5	c6 45 f6 eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  000d9	eb 34		 jmp	 SHORT $LN1@GetFloatAt
$LN87@GetFloatAt:
  000db	c6 45 f5 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  000df	eb 2e		 jmp	 SHORT $LN1@GetFloatAt
$LN89@GetFloatAt:
  000e1	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  000e5	eb 28		 jmp	 SHORT $LN1@GetFloatAt
$LN90@GetFloatAt:
  000e7	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  000eb	eb 22		 jmp	 SHORT $LN1@GetFloatAt
$LN91@GetFloatAt:
  000ed	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  000f1	eb 1c		 jmp	 SHORT $LN1@GetFloatAt
$LN92@GetFloatAt:
  000f3	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  000f7	eb 16		 jmp	 SHORT $LN1@GetFloatAt
$LN93@GetFloatAt:
  000f9	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  000fd	eb 10		 jmp	 SHORT $LN1@GetFloatAt
$LN94@GetFloatAt:
  000ff	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  00103	eb 0a		 jmp	 SHORT $LN1@GetFloatAt
$LN95@GetFloatAt:
  00105	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00109	eb 04		 jmp	 SHORT $LN1@GetFloatAt
$LN96@GetFloatAt:
  0010b	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@GetFloatAt:
  0010f	6a 02		 push	 2
  00111	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  00114	c6 45 f4 00	 mov	 BYTE PTR __k$[ebp+8], 0
  00118	5a		 pop	 edx
$LL104@GetFloatAt:
  00119	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0011f	83 c0 04	 add	 eax, 4
  00122	4a		 dec	 edx
  00123	75 f4		 jne	 SHORT $LL104@GetFloatAt

; 102  : 		return GetFloatAttribute(_k);

  00125	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  00128	50		 push	 eax
  00129	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetFloatAttribute@ioXMLElement@@QBEMPBD@Z

; 103  : 	}

  0012f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00132	33 cd		 xor	 ecx, ebp
  00134	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00139	c9		 leave
  0013a	c2 04 00	 ret	 4
??$GetFloatAttribute_e@$08@ioXMLElement@@QBEMAAY08$$CBD@Z ENDP ; ioXMLElement::GetFloatAttribute_e<9>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$GetFloatAttribute_e@$0L@@ioXMLElement@@QBEMAAY0L@$$CBD@Z ; ioXMLElement::GetFloatAttribute_e<11>
; Function compile flags: /Ogsp
;	COMDAT ??$GetFloatAttribute_e@$0L@@ioXMLElement@@QBEMAAY0L@$$CBD@Z
_TEXT	SEGMENT
__k$ = -20						; size = 11
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
??$GetFloatAttribute_e@$0L@@ioXMLElement@@QBEMAAY0L@$$CBD@Z PROC ; ioXMLElement::GetFloatAttribute_e<11>, COMDAT
; _this$ = ecx

; 100  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 101  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 24 01 00
	00		 je	 $LN96@GetFloatAt@2
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 ec	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 0d 01 00
	00		 je	 $LN95@GetFloatAt@2
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 ed	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 f6 00 00
	00		 je	 $LN94@GetFloatAt@2
  00042	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00045	88 55 ee	 mov	 BYTE PTR __k$[ebp+2], dl
  00048	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004b	84 d2		 test	 dl, dl
  0004d	0f 84 df 00 00
	00		 je	 $LN93@GetFloatAt@2
  00053	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00056	88 55 ef	 mov	 BYTE PTR __k$[ebp+3], dl
  00059	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005c	84 d2		 test	 dl, dl
  0005e	0f 84 c8 00 00
	00		 je	 $LN92@GetFloatAt@2
  00064	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00067	88 55 f0	 mov	 BYTE PTR __k$[ebp+4], dl
  0006a	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006d	84 d2		 test	 dl, dl
  0006f	0f 84 b1 00 00
	00		 je	 $LN91@GetFloatAt@2
  00075	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00078	88 55 f1	 mov	 BYTE PTR __k$[ebp+5], dl
  0007b	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007e	84 d2		 test	 dl, dl
  00080	0f 84 9a 00 00
	00		 je	 $LN90@GetFloatAt@2
  00086	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00089	88 55 f2	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 83 00 00
	00		 je	 $LN89@GetFloatAt@2
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 f3	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	74 70		 je	 SHORT $LN88@GetFloatAt@2
  000a4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a7	88 55 f4	 mov	 BYTE PTR __k$[ebp+8], dl
  000aa	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000ad	84 d2		 test	 dl, dl
  000af	74 5d		 je	 SHORT $LN87@GetFloatAt@2
  000b1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b4	80 78 0a 00	 cmp	 BYTE PTR [eax+10], 0
  000b8	88 55 f5	 mov	 BYTE PTR __k$[ebp+9], dl
  000bb	0f 84 87 00 00
	00		 je	 $LN1@GetFloatAt@2
  000c1	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000c4	84 d2		 test	 dl, dl
  000c6	74 40		 je	 SHORT $LN85@GetFloatAt@2
  000c8	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000cb	88 55 f7	 mov	 BYTE PTR __k$[ebp+11], dl
  000ce	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000d1	84 d2		 test	 dl, dl
  000d3	74 2d		 je	 SHORT $LN84@GetFloatAt@2
  000d5	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000d8	88 55 f8	 mov	 BYTE PTR __k$[ebp+12], dl
  000db	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000de	84 d2		 test	 dl, dl
  000e0	74 1a		 je	 SHORT $LN83@GetFloatAt@2
  000e2	8a 40 0e	 mov	 al, BYTE PTR [eax+14]
  000e5	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000e8	88 55 f9	 mov	 BYTE PTR __k$[ebp+13], dl
  000eb	84 c0		 test	 al, al
  000ed	74 07		 je	 SHORT $LN82@GetFloatAt@2
  000ef	34 eb		 xor	 al, -21			; ffffffebH
  000f1	88 45 fa	 mov	 BYTE PTR __k$[ebp+14], al
  000f4	eb 52		 jmp	 SHORT $LN1@GetFloatAt@2
$LN82@GetFloatAt@2:
  000f6	c6 45 fa eb	 mov	 BYTE PTR __k$[ebp+14], -21 ; ffffffebH
  000fa	eb 4c		 jmp	 SHORT $LN1@GetFloatAt@2
$LN83@GetFloatAt@2:
  000fc	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  00100	eb 46		 jmp	 SHORT $LN1@GetFloatAt@2
$LN84@GetFloatAt@2:
  00102	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00106	eb 40		 jmp	 SHORT $LN1@GetFloatAt@2
$LN85@GetFloatAt@2:
  00108	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  0010c	eb 3a		 jmp	 SHORT $LN1@GetFloatAt@2
$LN87@GetFloatAt@2:
  0010e	c6 45 f5 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  00112	eb 34		 jmp	 SHORT $LN1@GetFloatAt@2
$LN88@GetFloatAt@2:
  00114	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00118	eb 2e		 jmp	 SHORT $LN1@GetFloatAt@2
$LN89@GetFloatAt@2:
  0011a	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  0011e	eb 28		 jmp	 SHORT $LN1@GetFloatAt@2
$LN90@GetFloatAt@2:
  00120	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  00124	eb 22		 jmp	 SHORT $LN1@GetFloatAt@2
$LN91@GetFloatAt@2:
  00126	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  0012a	eb 1c		 jmp	 SHORT $LN1@GetFloatAt@2
$LN92@GetFloatAt@2:
  0012c	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00130	eb 16		 jmp	 SHORT $LN1@GetFloatAt@2
$LN93@GetFloatAt@2:
  00132	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00136	eb 10		 jmp	 SHORT $LN1@GetFloatAt@2
$LN94@GetFloatAt@2:
  00138	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0013c	eb 0a		 jmp	 SHORT $LN1@GetFloatAt@2
$LN95@GetFloatAt@2:
  0013e	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00142	eb 04		 jmp	 SHORT $LN1@GetFloatAt@2
$LN96@GetFloatAt@2:
  00144	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@GetFloatAt@2:
  00148	6a 02		 push	 2
  0014a	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  0014d	c6 45 f6 00	 mov	 BYTE PTR __k$[ebp+10], 0
  00151	5a		 pop	 edx
$LL104@GetFloatAt@2:
  00152	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00158	83 c0 04	 add	 eax, 4
  0015b	4a		 dec	 edx
  0015c	75 f4		 jne	 SHORT $LL104@GetFloatAt@2
  0015e	6a 08		 push	 8
  00160	58		 pop	 eax
$LL101@GetFloatAt@2:
  00161	8b c8		 mov	 ecx, eax
  00163	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00169	79 05		 jns	 SHORT $LN111@GetFloatAt@2
  0016b	49		 dec	 ecx
  0016c	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0016f	41		 inc	 ecx
$LN111@GetFloatAt@2:
  00170	b2 ed		 mov	 dl, -19			; ffffffedH
  00172	2a d1		 sub	 dl, cl
  00174	30 54 05 ec	 xor	 BYTE PTR __k$[ebp+eax], dl
  00178	40		 inc	 eax
  00179	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0017c	7c e3		 jl	 SHORT $LL101@GetFloatAt@2

; 102  : 		return GetFloatAttribute(_k);

  0017e	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  00181	50		 push	 eax
  00182	8b ce		 mov	 ecx, esi
  00184	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetFloatAttribute@ioXMLElement@@QBEMPBD@Z

; 103  : 	}

  0018a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0018d	33 cd		 xor	 ecx, ebp
  0018f	5e		 pop	 esi
  00190	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00195	c9		 leave
  00196	c2 04 00	 ret	 4
??$GetFloatAttribute_e@$0L@@ioXMLElement@@QBEMAAY0L@$$CBD@Z ENDP ; ioXMLElement::GetFloatAttribute_e<11>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$GetIntAttribute_e@$0O@@ioXMLElement@@QBEHAAY0O@$$CBD@Z ; ioXMLElement::GetIntAttribute_e<14>
; Function compile flags: /Ogsp
;	COMDAT ??$GetIntAttribute_e@$0O@@ioXMLElement@@QBEHAAY0O@$$CBD@Z
_TEXT	SEGMENT
__k$ = -24						; size = 14
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
??$GetIntAttribute_e@$0O@@ioXMLElement@@QBEHAAY0O@$$CBD@Z PROC ; ioXMLElement::GetIntAttribute_e<14>, COMDAT
; _this$ = ecx

; 86   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 87   : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 64 01 00
	00		 je	 $LN96@GetIntAttr@2
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e8	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 4d 01 00
	00		 je	 $LN95@GetIntAttr@2
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 e9	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 36 01 00
	00		 je	 $LN94@GetIntAttr@2
  00042	b1 eb		 mov	 cl, -21			; ffffffebH
  00044	32 d1		 xor	 dl, cl
  00046	88 55 ea	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 1e 01 00
	00		 je	 $LN93@GetIntAttr@2
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 eb	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 07 01 00
	00		 je	 $LN92@GetIntAttr@2
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 ec	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 f0 00 00
	00		 je	 $LN91@GetIntAttr@2
  00076	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00079	88 55 ed	 mov	 BYTE PTR __k$[ebp+5], dl
  0007c	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007f	84 d2		 test	 dl, dl
  00081	0f 84 da 00 00
	00		 je	 $LN90@GetIntAttr@2
  00087	32 d1		 xor	 dl, cl
  00089	88 55 ee	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 c4 00 00
	00		 je	 $LN89@GetIntAttr@2
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 ef	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 ad 00 00
	00		 je	 $LN88@GetIntAttr@2
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 f0	 mov	 BYTE PTR __k$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 96 00 00
	00		 je	 $LN87@GetIntAttr@2
  000b9	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000bc	88 55 f1	 mov	 BYTE PTR __k$[ebp+9], dl
  000bf	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c2	84 d2		 test	 dl, dl
  000c4	0f 84 80 00 00
	00		 je	 $LN86@GetIntAttr@2
  000ca	32 d1		 xor	 dl, cl
  000cc	88 55 f2	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	74 6e		 je	 SHORT $LN85@GetIntAttr@2
  000d6	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d9	88 55 f3	 mov	 BYTE PTR __k$[ebp+11], dl
  000dc	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000df	84 d2		 test	 dl, dl
  000e1	74 5b		 je	 SHORT $LN84@GetIntAttr@2
  000e3	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e6	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000ea	88 55 f4	 mov	 BYTE PTR __k$[ebp+12], dl
  000ed	0f 84 95 00 00
	00		 je	 $LN1@GetIntAttr@2
  000f3	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000f6	84 d2		 test	 dl, dl
  000f8	74 3f		 je	 SHORT $LN82@GetIntAttr@2
  000fa	32 d1		 xor	 dl, cl
  000fc	88 55 f6	 mov	 BYTE PTR __k$[ebp+14], dl
  000ff	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00102	84 d2		 test	 dl, dl
  00104	74 2d		 je	 SHORT $LN81@GetIntAttr@2
  00106	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00109	88 55 f7	 mov	 BYTE PTR __k$[ebp+15], dl
  0010c	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  0010f	84 d2		 test	 dl, dl
  00111	74 1a		 je	 SHORT $LN80@GetIntAttr@2
  00113	8a 40 11	 mov	 al, BYTE PTR [eax+17]
  00116	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00119	88 55 f8	 mov	 BYTE PTR __k$[ebp+16], dl
  0011c	84 c0		 test	 al, al
  0011e	74 07		 je	 SHORT $LN79@GetIntAttr@2
  00120	34 ec		 xor	 al, -20			; ffffffecH
  00122	88 45 f9	 mov	 BYTE PTR __k$[ebp+17], al
  00125	eb 61		 jmp	 SHORT $LN1@GetIntAttr@2
$LN79@GetIntAttr@2:
  00127	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+17], -20 ; ffffffecH
  0012b	eb 5b		 jmp	 SHORT $LN1@GetIntAttr@2
$LN80@GetIntAttr@2:
  0012d	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  00131	eb 55		 jmp	 SHORT $LN1@GetIntAttr@2
$LN81@GetIntAttr@2:
  00133	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00137	eb 4f		 jmp	 SHORT $LN1@GetIntAttr@2
$LN82@GetIntAttr@2:
  00139	88 4d f6	 mov	 BYTE PTR __k$[ebp+14], cl
  0013c	eb 4a		 jmp	 SHORT $LN1@GetIntAttr@2
$LN84@GetIntAttr@2:
  0013e	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00142	eb 44		 jmp	 SHORT $LN1@GetIntAttr@2
$LN85@GetIntAttr@2:
  00144	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00148	eb 3e		 jmp	 SHORT $LN1@GetIntAttr@2
$LN86@GetIntAttr@2:
  0014a	88 4d f2	 mov	 BYTE PTR __k$[ebp+10], cl
  0014d	eb 39		 jmp	 SHORT $LN1@GetIntAttr@2
$LN87@GetIntAttr@2:
  0014f	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  00153	eb 33		 jmp	 SHORT $LN1@GetIntAttr@2
$LN88@GetIntAttr@2:
  00155	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00159	eb 2d		 jmp	 SHORT $LN1@GetIntAttr@2
$LN89@GetIntAttr@2:
  0015b	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  0015f	eb 27		 jmp	 SHORT $LN1@GetIntAttr@2
$LN90@GetIntAttr@2:
  00161	88 4d ee	 mov	 BYTE PTR __k$[ebp+6], cl
  00164	eb 22		 jmp	 SHORT $LN1@GetIntAttr@2
$LN91@GetIntAttr@2:
  00166	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  0016a	eb 1c		 jmp	 SHORT $LN1@GetIntAttr@2
$LN92@GetIntAttr@2:
  0016c	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00170	eb 16		 jmp	 SHORT $LN1@GetIntAttr@2
$LN93@GetIntAttr@2:
  00172	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00176	eb 10		 jmp	 SHORT $LN1@GetIntAttr@2
$LN94@GetIntAttr@2:
  00178	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0017c	eb 0a		 jmp	 SHORT $LN1@GetIntAttr@2
$LN95@GetIntAttr@2:
  0017e	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00182	eb 04		 jmp	 SHORT $LN1@GetIntAttr@2
$LN96@GetIntAttr@2:
  00184	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@GetIntAttr@2:
  00188	6a 03		 push	 3
  0018a	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  0018d	c6 45 f5 00	 mov	 BYTE PTR __k$[ebp+13], 0
  00191	5a		 pop	 edx
$LL104@GetIntAttr@2:
  00192	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00198	83 c0 04	 add	 eax, 4
  0019b	4a		 dec	 edx
  0019c	75 f4		 jne	 SHORT $LL104@GetIntAttr@2
  0019e	80 75 f4 ed	 xor	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH

; 88   : 		return GetIntAttribute(_k);

  001a2	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001a5	50		 push	 eax
  001a6	8b ce		 mov	 ecx, esi
  001a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetIntAttribute@ioXMLElement@@QBEHPBD@Z

; 89   : 	}

  001ae	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001b1	33 cd		 xor	 ecx, ebp
  001b3	5e		 pop	 esi
  001b4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001b9	c9		 leave
  001ba	c2 04 00	 ret	 4
??$GetIntAttribute_e@$0O@@ioXMLElement@@QBEHAAY0O@$$CBD@Z ENDP ; ioXMLElement::GetIntAttribute_e<14>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$GetIntAttribute_e@$0BB@@ioXMLElement@@QBEHAAY0BB@$$CBD@Z ; ioXMLElement::GetIntAttribute_e<17>
; Function compile flags: /Ogsp
;	COMDAT ??$GetIntAttribute_e@$0BB@@ioXMLElement@@QBEHAAY0BB@$$CBD@Z
_TEXT	SEGMENT
__k$ = -28						; size = 17
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
??$GetIntAttribute_e@$0BB@@ioXMLElement@@QBEHAAY0BB@$$CBD@Z PROC ; ioXMLElement::GetIntAttribute_e<17>, COMDAT
; _this$ = ecx

; 86   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 87   : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 a7 01 00
	00		 je	 $LN96@GetIntAttr@3
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e4	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 90 01 00
	00		 je	 $LN95@GetIntAttr@3
  00031	b1 ec		 mov	 cl, -20			; ffffffecH
  00033	32 d1		 xor	 dl, cl
  00035	88 55 e5	 mov	 BYTE PTR __k$[ebp+1], dl
  00038	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003b	84 d2		 test	 dl, dl
  0003d	0f 84 78 01 00
	00		 je	 $LN94@GetIntAttr@3
  00043	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00046	88 55 e6	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 61 01 00
	00		 je	 $LN93@GetIntAttr@3
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 e7	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 4a 01 00
	00		 je	 $LN92@GetIntAttr@3
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 e8	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 34 01 00
	00		 je	 $LN91@GetIntAttr@3
  00076	32 d1		 xor	 dl, cl
  00078	88 55 e9	 mov	 BYTE PTR __k$[ebp+5], dl
  0007b	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007e	84 d2		 test	 dl, dl
  00080	0f 84 1e 01 00
	00		 je	 $LN90@GetIntAttr@3
  00086	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00089	88 55 ea	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 07 01 00
	00		 je	 $LN89@GetIntAttr@3
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 eb	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 f0 00 00
	00		 je	 $LN88@GetIntAttr@3
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 ec	 mov	 BYTE PTR __k$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 da 00 00
	00		 je	 $LN87@GetIntAttr@3
  000b9	32 d1		 xor	 dl, cl
  000bb	88 55 ed	 mov	 BYTE PTR __k$[ebp+9], dl
  000be	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c1	84 d2		 test	 dl, dl
  000c3	0f 84 c4 00 00
	00		 je	 $LN86@GetIntAttr@3
  000c9	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000cc	88 55 ee	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	0f 84 ad 00 00
	00		 je	 $LN85@GetIntAttr@3
  000da	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000dd	88 55 ef	 mov	 BYTE PTR __k$[ebp+11], dl
  000e0	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e3	84 d2		 test	 dl, dl
  000e5	0f 84 96 00 00
	00		 je	 $LN84@GetIntAttr@3
  000eb	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ee	88 55 f0	 mov	 BYTE PTR __k$[ebp+12], dl
  000f1	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f4	84 d2		 test	 dl, dl
  000f6	0f 84 80 00 00
	00		 je	 $LN83@GetIntAttr@3
  000fc	32 d1		 xor	 dl, cl
  000fe	88 55 f1	 mov	 BYTE PTR __k$[ebp+13], dl
  00101	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  00104	84 d2		 test	 dl, dl
  00106	74 6e		 je	 SHORT $LN82@GetIntAttr@3
  00108	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0010b	88 55 f2	 mov	 BYTE PTR __k$[ebp+14], dl
  0010e	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00111	84 d2		 test	 dl, dl
  00113	74 5b		 je	 SHORT $LN81@GetIntAttr@3
  00115	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00118	80 78 10 00	 cmp	 BYTE PTR [eax+16], 0
  0011c	88 55 f3	 mov	 BYTE PTR __k$[ebp+15], dl
  0011f	0f 84 a6 00 00
	00		 je	 $LN1@GetIntAttr@3
  00125	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00128	84 d2		 test	 dl, dl
  0012a	74 3f		 je	 SHORT $LN79@GetIntAttr@3
  0012c	32 d1		 xor	 dl, cl
  0012e	88 55 f5	 mov	 BYTE PTR __k$[ebp+17], dl
  00131	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  00134	84 d2		 test	 dl, dl
  00136	74 2d		 je	 SHORT $LN78@GetIntAttr@3
  00138	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0013b	88 55 f6	 mov	 BYTE PTR __k$[ebp+18], dl
  0013e	8a 50 13	 mov	 dl, BYTE PTR [eax+19]
  00141	84 d2		 test	 dl, dl
  00143	74 1a		 je	 SHORT $LN77@GetIntAttr@3
  00145	8a 40 14	 mov	 al, BYTE PTR [eax+20]
  00148	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0014b	88 55 f7	 mov	 BYTE PTR __k$[ebp+19], dl
  0014e	84 c0		 test	 al, al
  00150	74 07		 je	 SHORT $LN76@GetIntAttr@3
  00152	34 ed		 xor	 al, -19			; ffffffedH
  00154	88 45 f8	 mov	 BYTE PTR __k$[ebp+20], al
  00157	eb 72		 jmp	 SHORT $LN1@GetIntAttr@3
$LN76@GetIntAttr@3:
  00159	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+20], -19 ; ffffffedH
  0015d	eb 6c		 jmp	 SHORT $LN1@GetIntAttr@3
$LN77@GetIntAttr@3:
  0015f	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+19], -22 ; ffffffeaH
  00163	eb 66		 jmp	 SHORT $LN1@GetIntAttr@3
$LN78@GetIntAttr@3:
  00165	c6 45 f6 eb	 mov	 BYTE PTR __k$[ebp+18], -21 ; ffffffebH
  00169	eb 60		 jmp	 SHORT $LN1@GetIntAttr@3
$LN79@GetIntAttr@3:
  0016b	88 4d f5	 mov	 BYTE PTR __k$[ebp+17], cl
  0016e	eb 5b		 jmp	 SHORT $LN1@GetIntAttr@3
$LN81@GetIntAttr@3:
  00170	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00174	eb 55		 jmp	 SHORT $LN1@GetIntAttr@3
$LN82@GetIntAttr@3:
  00176	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+14], -21 ; ffffffebH
  0017a	eb 4f		 jmp	 SHORT $LN1@GetIntAttr@3
$LN83@GetIntAttr@3:
  0017c	88 4d f1	 mov	 BYTE PTR __k$[ebp+13], cl
  0017f	eb 4a		 jmp	 SHORT $LN1@GetIntAttr@3
$LN84@GetIntAttr@3:
  00181	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00185	eb 44		 jmp	 SHORT $LN1@GetIntAttr@3
$LN85@GetIntAttr@3:
  00187	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  0018b	eb 3e		 jmp	 SHORT $LN1@GetIntAttr@3
$LN86@GetIntAttr@3:
  0018d	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  00191	eb 38		 jmp	 SHORT $LN1@GetIntAttr@3
$LN87@GetIntAttr@3:
  00193	88 4d ed	 mov	 BYTE PTR __k$[ebp+9], cl
  00196	eb 33		 jmp	 SHORT $LN1@GetIntAttr@3
$LN88@GetIntAttr@3:
  00198	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  0019c	eb 2d		 jmp	 SHORT $LN1@GetIntAttr@3
$LN89@GetIntAttr@3:
  0019e	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  001a2	eb 27		 jmp	 SHORT $LN1@GetIntAttr@3
$LN90@GetIntAttr@3:
  001a4	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  001a8	eb 21		 jmp	 SHORT $LN1@GetIntAttr@3
$LN91@GetIntAttr@3:
  001aa	88 4d e9	 mov	 BYTE PTR __k$[ebp+5], cl
  001ad	eb 1c		 jmp	 SHORT $LN1@GetIntAttr@3
$LN92@GetIntAttr@3:
  001af	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  001b3	eb 16		 jmp	 SHORT $LN1@GetIntAttr@3
$LN93@GetIntAttr@3:
  001b5	c6 45 e7 ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  001b9	eb 10		 jmp	 SHORT $LN1@GetIntAttr@3
$LN94@GetIntAttr@3:
  001bb	c6 45 e6 eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  001bf	eb 0a		 jmp	 SHORT $LN1@GetIntAttr@3
$LN95@GetIntAttr@3:
  001c1	c6 45 e5 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  001c5	eb 04		 jmp	 SHORT $LN1@GetIntAttr@3
$LN96@GetIntAttr@3:
  001c7	c6 45 e4 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@GetIntAttr@3:
  001cb	6a 04		 push	 4
  001cd	8d 45 e4	 lea	 eax, DWORD PTR __k$[ebp]
  001d0	c6 45 f4 00	 mov	 BYTE PTR __k$[ebp+16], 0
  001d4	5a		 pop	 edx
$LL104@GetIntAttr@3:
  001d5	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001db	83 c0 04	 add	 eax, 4
  001de	4a		 dec	 edx
  001df	75 f4		 jne	 SHORT $LL104@GetIntAttr@3

; 88   : 		return GetIntAttribute(_k);

  001e1	8d 45 e4	 lea	 eax, DWORD PTR __k$[ebp]
  001e4	50		 push	 eax
  001e5	8b ce		 mov	 ecx, esi
  001e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetIntAttribute@ioXMLElement@@QBEHPBD@Z

; 89   : 	}

  001ed	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001f0	33 cd		 xor	 ecx, ebp
  001f2	5e		 pop	 esi
  001f3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f8	c9		 leave
  001f9	c2 04 00	 ret	 4
??$GetIntAttribute_e@$0BB@@ioXMLElement@@QBEHAAY0BB@$$CBD@Z ENDP ; ioXMLElement::GetIntAttribute_e<17>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@PAUScaleImage@TimeGateSearch@@AAPAU34@@std@@YAXAAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@PAPAUScaleImage@TimeGateSearch@@AAPAU23@@Z ; std::_Cons_val<std::allocator<TimeGateSearch::ScaleImage *>,TimeGateSearch::ScaleImage *,TimeGateSearch::ScaleImage * &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@PAUScaleImage@TimeGateSearch@@AAPAU34@@std@@YAXAAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@PAPAUScaleImage@TimeGateSearch@@AAPAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@PAUScaleImage@TimeGateSearch@@AAPAU34@@std@@YAXAAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@PAPAUScaleImage@TimeGateSearch@@AAPAU23@@Z PROC ; std::_Cons_val<std::allocator<TimeGateSearch::ScaleImage *>,TimeGateSearch::ScaleImage *,TimeGateSearch::ScaleImage * &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN7@Cons_val
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@Cons_val:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@PAUScaleImage@TimeGateSearch@@AAPAU34@@std@@YAXAAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@PAPAUScaleImage@TimeGateSearch@@AAPAU23@@Z ENDP ; std::_Cons_val<std::allocator<TimeGateSearch::ScaleImage *>,TimeGateSearch::ScaleImage *,TimeGateSearch::ScaleImage * &>
_TEXT	ENDS
PUBLIC	??$_Move@PAPAUScaleImage@TimeGateSearch@@PAPAU12@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00@Z ; std::_Move<TimeGateSearch::ScaleImage * *,TimeGateSearch::ScaleImage * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAPAUScaleImage@TimeGateSearch@@PAPAU12@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00@Z
_TEXT	SEGMENT
__Cat$513979 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAPAUScaleImage@TimeGateSearch@@PAPAU12@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00@Z PROC ; std::_Move<TimeGateSearch::ScaleImage * *,TimeGateSearch::ScaleImage * *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$513979[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAPAUScaleImage@TimeGateSearch@@PAPAU12@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<TimeGateSearch::ScaleImage * *,TimeGateSearch::ScaleImage * *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAPAUScaleImage@TimeGateSearch@@PAPAU12@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00@Z ENDP ; std::_Move<TimeGateSearch::ScaleImage * *,TimeGateSearch::ScaleImage * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@YAXPAPAUScaleImage@TimeGateSearch@@0AAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@@Z ; std::_Destroy_range<std::allocator<TimeGateSearch::ScaleImage *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@YAXPAPAUScaleImage@TimeGateSearch@@0AAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@YAXPAPAUScaleImage@TimeGateSearch@@0AAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@@Z PROC ; std::_Destroy_range<std::allocator<TimeGateSearch::ScaleImage *> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@YAXPAPAUScaleImage@TimeGateSearch@@0AAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<TimeGateSearch::ScaleImage *> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAEXPAPAUScaleImage@TimeGateSearch@@ABQAU34@@Z ; std::allocator<TimeGateSearch::ScaleImage *>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAEXPAPAUScaleImage@TimeGateSearch@@ABQAU34@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAEXPAPAUScaleImage@TimeGateSearch@@ABQAU34@@Z PROC ; std::allocator<TimeGateSearch::ScaleImage *>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN5@construct@2
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN5@construct@2:

; 198  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?construct@?$allocator@PAUScaleImage@TimeGateSearch@@@std@@QAEXPAPAUScaleImage@TimeGateSearch@@ABQAU34@@Z ENDP ; std::allocator<TimeGateSearch::ScaleImage *>::construct
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAPAUScaleImage@TimeGateSearch@@PAPAU12@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00AAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@@Z ; std::_Uninitialized_move<TimeGateSearch::ScaleImage * *,TimeGateSearch::ScaleImage * *,std::allocator<TimeGateSearch::ScaleImage *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAPAUScaleImage@TimeGateSearch@@PAPAU12@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00AAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUScaleImage@TimeGateSearch@@PAPAU12@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00AAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@@Z PROC ; std::_Uninitialized_move<TimeGateSearch::ScaleImage * *,TimeGateSearch::ScaleImage * *,std::allocator<TimeGateSearch::ScaleImage *> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2
  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 472  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAUScaleImage@TimeGateSearch@@PAPAU12@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00AAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@@Z ENDP ; std::_Uninitialized_move<TimeGateSearch::ScaleImage * *,TimeGateSearch::ScaleImage * *,std::allocator<TimeGateSearch::ScaleImage *> >
_TEXT	ENDS
PUBLIC	?StringCbPrintfA@@YAJPADIPBDZZ			; StringCbPrintfA
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\strsafe.h
;	COMDAT ?StringCbPrintfA@@YAJPADIPBDZZ
_TEXT	SEGMENT
_pszDest$ = 8						; size = 4
_cbDest$ = 12						; size = 4
_pszFormat$ = 16					; size = 4
?StringCbPrintfA@@YAJPADIPBDZZ PROC			; StringCbPrintfA, COMDAT

; 4767 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4768 :     HRESULT hr;
; 4769 :     size_t cchDest = cbDest / sizeof(char);
; 4770 : 
; 4771 :     hr = StringValidateDestA(pszDest, cchDest, STRSAFE_MAX_CCH);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _cbDest$[ebp]
  00006	33 c0		 xor	 eax, eax
  00008	85 c9		 test	 ecx, ecx
  0000a	74 08		 je	 SHORT $LN4@StringCbPr
  0000c	81 f9 ff ff ff
	7f		 cmp	 ecx, 2147483647		; 7fffffffH
  00012	76 05		 jbe	 SHORT $LN5@StringCbPr
$LN4@StringCbPr:
  00014	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
$LN5@StringCbPr:

; 4772 :     
; 4773 :     if (SUCCEEDED(hr))

  00019	85 c0		 test	 eax, eax
  0001b	78 39		 js	 SHORT $LN1@StringCbPr

; 4774 :     {
; 4775 :         va_list argList;
; 4776 : 
; 4777 :         va_start(argList, pszFormat);
; 4778 : 
; 4779 :         hr = StringVPrintfWorkerA(pszDest,
; 4780 :                                   cchDest,
; 4781 :                                   NULL,
; 4782 :                                   pszFormat,
; 4783 :                                   argList);

  0001d	53		 push	 ebx
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	8b 7d 08	 mov	 edi, DWORD PTR _pszDest$[ebp]
  00023	8d 45 14	 lea	 eax, DWORD PTR _pszFormat$[ebp+4]
  00026	50		 push	 eax
  00027	ff 75 10	 push	 DWORD PTR _pszFormat$[ebp]
  0002a	8d 71 ff	 lea	 esi, DWORD PTR [ecx-1]
  0002d	56		 push	 esi
  0002e	57		 push	 edi
  0002f	33 db		 xor	 ebx, ebx
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___vsnprintf
  00037	83 c4 10	 add	 esp, 16			; 00000010H
  0003a	85 c0		 test	 eax, eax
  0003c	78 0b		 js	 SHORT $LN12@StringCbPr
  0003e	3b c6		 cmp	 eax, esi
  00040	77 07		 ja	 SHORT $LN12@StringCbPr
  00042	75 0d		 jne	 SHORT $LN9@StringCbPr
  00044	88 1c 3e	 mov	 BYTE PTR [esi+edi], bl
  00047	eb 08		 jmp	 SHORT $LN9@StringCbPr
$LN12@StringCbPr:
  00049	88 1c 3e	 mov	 BYTE PTR [esi+edi], bl
  0004c	bb 7a 00 07 80	 mov	 ebx, -2147024774	; 8007007aH
$LN9@StringCbPr:
  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	8b c3		 mov	 eax, ebx
  00055	5b		 pop	 ebx
$LN1@StringCbPr:

; 4784 : 
; 4785 :         va_end(argList);
; 4786 :     }
; 4787 : 
; 4788 :     return hr;
; 4789 : }

  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
?StringCbPrintfA@@YAJPADIPBDZZ ENDP			; StringCbPrintfA
_TEXT	ENDS
PUBLIC	?OnProcess@TimeGateSearch@@MAEXM@Z		; TimeGateSearch::OnProcess
EXTRN	__imp_?OnProcess@ioWnd@@MAEXM@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\timegatesearch.cpp
;	COMDAT ?OnProcess@TimeGateSearch@@MAEXM@Z
_TEXT	SEGMENT
_fTimePerSec$ = 8					; size = 4
?OnProcess@TimeGateSearch@@MAEXM@Z PROC			; TimeGateSearch::OnProcess, COMDAT
; _this$ = ecx

; 197  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 198  : 	if( !IsShow() ) return;

  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsShow@ioWnd@@QBE_NXZ
  0000c	84 c0		 test	 al, al
  0000e	0f 84 10 01 00
	00		 je	 $LN8@OnProcess

; 199  : 
; 200  : 	DWORD dwCurTime = FRAMEGETTIME();

  00014	53		 push	 ebx
  00015	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  0001b	57		 push	 edi
  0001c	ff d3		 call	 ebx
  0001e	8b c8		 mov	 ecx, eax
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ

; 201  : 	ioMovingWnd::OnProcess( fTimePerSec );

  00026	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fTimePerSec$[ebp]
  0002b	51		 push	 ecx
  0002c	8b ce		 mov	 ecx, esi
  0002e	8b f8		 mov	 edi, eax
  00030	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?OnProcess@ioWnd@@MAEXM@Z

; 202  : 
; 203  : 	if( m_dwChangeTime < dwCurTime )

  0003b	39 be b0 01 00
	00		 cmp	 DWORD PTR [esi+432], edi
  00041	0f 83 cd 00 00
	00		 jae	 $LN1@OnProcess

; 204  : 	{
; 205  : 		if( !m_bReverse )

  00047	80 be b8 01 00
	00 00		 cmp	 BYTE PTR [esi+440], 0
  0004e	75 2f		 jne	 SHORT $LN5@OnProcess

; 206  : 		{
; 207  : 			m_iCurBigIdx++;

  00050	ff 86 b4 01 00
	00		 inc	 DWORD PTR [esi+436]

; 208  : 
; 209  : 			if( m_iCurBigIdx >= (int)m_ScaleImageList.size() )

  00056	8b 86 94 01 00
	00		 mov	 eax, DWORD PTR [esi+404]
  0005c	2b 86 90 01 00
	00		 sub	 eax, DWORD PTR [esi+400]
  00062	c1 f8 02	 sar	 eax, 2
  00065	39 86 b4 01 00
	00		 cmp	 DWORD PTR [esi+436], eax
  0006b	7c 2b		 jl	 SHORT $LN2@OnProcess

; 210  : 			{
; 211  : 				m_iCurBigIdx = m_ScaleImageList.size() - 2;

  0006d	83 c0 fe	 add	 eax, -2			; fffffffeH
  00070	89 86 b4 01 00
	00		 mov	 DWORD PTR [esi+436], eax

; 212  : 				m_bReverse = true;

  00076	c6 86 b8 01 00
	00 01		 mov	 BYTE PTR [esi+440], 1

; 213  : 			}
; 214  : 		}
; 215  : 		else

  0007d	eb 19		 jmp	 SHORT $LN2@OnProcess
$LN5@OnProcess:

; 216  : 		{
; 217  : 			m_iCurBigIdx--;

  0007f	ff 8e b4 01 00
	00		 dec	 DWORD PTR [esi+436]

; 218  : 			if( m_iCurBigIdx < 0 )

  00085	79 11		 jns	 SHORT $LN2@OnProcess

; 219  : 			{
; 220  : 				m_iCurBigIdx = 1;

  00087	c7 86 b4 01 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+436], 1

; 221  : 				m_bReverse = false;

  00091	c6 86 b8 01 00
	00 00		 mov	 BYTE PTR [esi+440], 0
$LN2@OnProcess:

; 222  : 			}			
; 223  : 		}			
; 224  : 
; 225  : 		m_dwChangeTime = dwCurTime + m_dwChangeDuration;

  00098	8b 86 a4 01 00
	00		 mov	 eax, DWORD PTR [esi+420]
  0009e	03 c7		 add	 eax, edi
  000a0	89 86 b0 01 00
	00		 mov	 DWORD PTR [esi+432], eax

; 226  : 		if( COMPARE( m_iCurBigIdx, 0, (int)m_ScaleImageList.size() ) )

  000a6	8b 86 b4 01 00
	00		 mov	 eax, DWORD PTR [esi+436]
  000ac	85 c0		 test	 eax, eax
  000ae	78 64		 js	 SHORT $LN1@OnProcess
  000b0	8b 8e 94 01 00
	00		 mov	 ecx, DWORD PTR [esi+404]
  000b6	2b 8e 90 01 00
	00		 sub	 ecx, DWORD PTR [esi+400]
  000bc	c1 f9 02	 sar	 ecx, 2
  000bf	3b c1		 cmp	 eax, ecx
  000c1	7d 51		 jge	 SHORT $LN1@OnProcess

; 227  : 		{
; 228  : 			m_ScaleImageList[m_iCurBigIdx]->m_fCurScale = m_fSmallScale;

  000c3	8b 8e 90 01 00
	00		 mov	 ecx, DWORD PTR [esi+400]
  000c9	d9 86 ac 01 00
	00		 fld	 DWORD PTR [esi+428]
  000cf	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
  000d2	d9 58 08	 fstp	 DWORD PTR [eax+8]

; 229  : 			m_ScaleImageList[m_iCurBigIdx]->m_pImage->SetScale( m_ScaleImageList[m_iCurBigIdx]->m_fCurScale );

  000d5	8b 8e 90 01 00
	00		 mov	 ecx, DWORD PTR [esi+400]
  000db	8b 86 b4 01 00
	00		 mov	 eax, DWORD PTR [esi+436]
  000e1	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
  000e4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e6	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  000eb	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ed	51		 push	 ecx
  000ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f3	ff 52 1c	 call	 DWORD PTR [edx+28]

; 230  : 			m_ScaleImageList[m_iCurBigIdx]->m_dwScaleTime = FRAMEGETTIME();

  000f6	8b 86 b4 01 00
	00		 mov	 eax, DWORD PTR [esi+436]
  000fc	8b 8e 90 01 00
	00		 mov	 ecx, DWORD PTR [esi+400]
  00102	8d 3c 81	 lea	 edi, DWORD PTR [ecx+eax*4]
  00105	ff d3		 call	 ebx
  00107	8b c8		 mov	 ecx, eax
  00109	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  0010f	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00111	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN1@OnProcess:

; 231  : 		}
; 232  : 	}
; 233  : 	ScaleIconImage();

  00114	8b ce		 mov	 ecx, esi
  00116	e8 00 00 00 00	 call	 ?ScaleIconImage@TimeGateSearch@@IAEXXZ ; TimeGateSearch::ScaleIconImage

; 234  : 	AutoSearchProcess();

  0011b	8b ce		 mov	 ecx, esi
  0011d	e8 00 00 00 00	 call	 ?AutoSearchProcess@TimeGateSearch@@IAEXXZ ; TimeGateSearch::AutoSearchProcess
  00122	5f		 pop	 edi
  00123	5b		 pop	 ebx
$LN8@OnProcess:
  00124	5e		 pop	 esi

; 235  : }

  00125	5d		 pop	 ebp
  00126	c2 04 00	 ret	 4
?OnProcess@TimeGateSearch@@MAEXM@Z ENDP			; TimeGateSearch::OnProcess
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ParseExtraInfo@TimeGateSearch@@UAEXAAVioXMLElement@@@Z ; TimeGateSearch::ParseExtraInfo
; Function compile flags: /Ogsp
;	COMDAT ?ParseExtraInfo@TimeGateSearch@@UAEXAAVioXMLElement@@@Z
_TEXT	SEGMENT
__k$514596 = -28					; size = 17
__k$514471 = -28					; size = 14
__k$514126 = -28					; size = 15
__k$514346 = -24					; size = 11
__k$514221 = -20					; size = 9
__$ArrayPad$ = -4					; size = 4
_xElement$ = 8						; size = 4
?ParseExtraInfo@TimeGateSearch@@UAEXAAVioXMLElement@@@Z PROC ; TimeGateSearch::ParseExtraInfo, COMDAT
; _this$ = ecx

; 338  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _xElement$[ebp]
  00014	56		 push	 esi
  00015	57		 push	 edi

; 339  : 	m_dwChangeDuration = xElement.GetIntAttribute_e( "ChangeDuration" );

  00016	6a 03		 push	 3
  00018	8b f1		 mov	 esi, ecx
  0001a	c7 45 e4 ae 84
	8a 84		 mov	 DWORD PTR __k$514126[ebp], -2071296850 ; 848a84aeH
  00021	c7 45 e8 8a 89
	af 9f		 mov	 DWORD PTR __k$514126[ebp+4], -1615885942 ; 9faf898aH
  00028	c7 45 ec 9f 8d
	9f 83		 mov	 DWORD PTR __k$514126[ebp+8], -2086695521 ; 839f8d9fH
  0002f	66 c7 45 f0 82
	82		 mov	 WORD PTR __k$514126[ebp+12], 33410 ; 00008282H
  00035	8d 45 e4	 lea	 eax, DWORD PTR __k$514126[ebp]
  00038	c6 45 f2 00	 mov	 BYTE PTR __k$514126[ebp+14], 0
  0003c	59		 pop	 ecx
$LL106@ParseExtra:
  0003d	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00043	83 c0 04	 add	 eax, 4
  00046	49		 dec	 ecx
  00047	75 f4		 jne	 SHORT $LL106@ParseExtra
  00049	6a 0c		 push	 12			; 0000000cH
  0004b	5f		 pop	 edi
$LL103@ParseExtra:
  0004c	8b c7		 mov	 eax, edi
  0004e	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  00053	79 05		 jns	 SHORT $LN553@ParseExtra
  00055	48		 dec	 eax
  00056	83 c8 fc	 or	 eax, -4			; fffffffcH
  00059	40		 inc	 eax
$LN553@ParseExtra:
  0005a	b1 ed		 mov	 cl, -19			; ffffffedH
  0005c	2a c8		 sub	 cl, al
  0005e	30 4c 3d e4	 xor	 BYTE PTR __k$514126[ebp+edi], cl
  00062	47		 inc	 edi
  00063	83 ff 0e	 cmp	 edi, 14			; 0000000eH
  00066	7c e4		 jl	 SHORT $LL103@ParseExtra
  00068	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetIntAttribute@ioXMLElement@@QBEHPBD@Z
  0006e	8d 45 e4	 lea	 eax, DWORD PTR __k$514126[ebp]
  00071	50		 push	 eax
  00072	8b cb		 mov	 ecx, ebx
  00074	ff d7		 call	 edi
  00076	6a 02		 push	 2
  00078	89 86 a4 01 00
	00		 mov	 DWORD PTR [esi+420], eax

; 340  : 	m_fBigScale   = xElement.GetFloatAttribute_e( "BigScale" );

  0007e	c7 45 ec af 85
	8c b9		 mov	 DWORD PTR __k$514221[ebp], -1181973073 ; b98c85afH
  00085	c7 45 f0 8e 8d
	87 8f		 mov	 DWORD PTR __k$514221[ebp+4], -1886941810 ; 8f878d8eH
  0008c	8d 45 ec	 lea	 eax, DWORD PTR __k$514221[ebp]
  0008f	c6 45 f4 00	 mov	 BYTE PTR __k$514221[ebp+8], 0
  00093	59		 pop	 ecx
$LL212@ParseExtra:
  00094	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0009a	83 c0 04	 add	 eax, 4
  0009d	49		 dec	 ecx
  0009e	75 f4		 jne	 SHORT $LL212@ParseExtra
  000a0	8d 45 ec	 lea	 eax, DWORD PTR __k$514221[ebp]
  000a3	50		 push	 eax
  000a4	8b cb		 mov	 ecx, ebx
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetFloatAttribute@ioXMLElement@@QBEMPBD@Z
  000ac	d9 9e a8 01 00
	00		 fstp	 DWORD PTR [esi+424]
  000b2	6a 02		 push	 2

; 341  : 	m_fSmallScale = xElement.GetFloatAttribute_e( "SmallScale" );

  000b4	c7 45 e8 be 81
	8a 86		 mov	 DWORD PTR __k$514346[ebp], -2037743170 ; 868a81beH
  000bb	c7 45 ec 81 bf
	88 8b		 mov	 DWORD PTR __k$514346[ebp+4], -1953972351 ; 8b88bf81H
  000c2	66 c7 45 f0 81
	89		 mov	 WORD PTR __k$514346[ebp+8], 35201 ; 00008981H
  000c8	8d 45 e8	 lea	 eax, DWORD PTR __k$514346[ebp]
  000cb	c6 45 f2 00	 mov	 BYTE PTR __k$514346[ebp+10], 0
  000cf	59		 pop	 ecx
$LL318@ParseExtra:
  000d0	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  000d6	83 c0 04	 add	 eax, 4
  000d9	49		 dec	 ecx
  000da	75 f4		 jne	 SHORT $LL318@ParseExtra
  000dc	6a 08		 push	 8
  000de	58		 pop	 eax
$LL315@ParseExtra:
  000df	8b c8		 mov	 ecx, eax
  000e1	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  000e7	79 05		 jns	 SHORT $LN554@ParseExtra
  000e9	49		 dec	 ecx
  000ea	83 c9 fc	 or	 ecx, -4			; fffffffcH
  000ed	41		 inc	 ecx
$LN554@ParseExtra:
  000ee	b2 ed		 mov	 dl, -19			; ffffffedH
  000f0	2a d1		 sub	 dl, cl
  000f2	30 54 05 e8	 xor	 BYTE PTR __k$514346[ebp+eax], dl
  000f6	40		 inc	 eax
  000f7	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  000fa	7c e3		 jl	 SHORT $LL315@ParseExtra
  000fc	8d 45 e8	 lea	 eax, DWORD PTR __k$514346[ebp]
  000ff	50		 push	 eax
  00100	8b cb		 mov	 ecx, ebx
  00102	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetFloatAttribute@ioXMLElement@@QBEMPBD@Z
  00108	d9 9e ac 01 00
	00		 fstp	 DWORD PTR [esi+428]
  0010e	6a 03		 push	 3

; 342  : 	m_dwBattleJoinTry = xElement.GetIntAttribute_e( "BattleJoinTry" );

  00110	c7 45 e4 af 8d
	9f 9e		 mov	 DWORD PTR __k$514471[ebp], -1633710673 ; 9e9f8dafH
  00117	c7 45 e8 81 89
	a1 85		 mov	 DWORD PTR __k$514471[ebp+4], -2053011071 ; 85a18981H
  0011e	c7 45 ec 84 82
	bf 98		 mov	 DWORD PTR __k$514471[ebp+8], -1732279676 ; 98bf8284H
  00125	8d 45 e4	 lea	 eax, DWORD PTR __k$514471[ebp]
  00128	66 c7 45 f0 94
	00		 mov	 WORD PTR __k$514471[ebp+12], 148 ; 00000094H
  0012e	59		 pop	 ecx
$LL424@ParseExtra:
  0012f	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00135	83 c0 04	 add	 eax, 4
  00138	49		 dec	 ecx
  00139	75 f4		 jne	 SHORT $LL424@ParseExtra
  0013b	80 75 f0 ed	 xor	 BYTE PTR __k$514471[ebp+12], -19 ; ffffffedH
  0013f	8d 45 e4	 lea	 eax, DWORD PTR __k$514471[ebp]
  00142	50		 push	 eax
  00143	8b cb		 mov	 ecx, ebx
  00145	ff d7		 call	 edi
  00147	6a 04		 push	 4
  00149	89 86 bc 01 00
	00		 mov	 DWORD PTR [esi+444], eax

; 343  : 	m_dwBattleJoinTrySec = xElement.GetIntAttribute_e( "BattleJoinTrySec" );

  0014f	c7 45 e4 af 8d
	9f 9e		 mov	 DWORD PTR __k$514596[ebp], -1633710673 ; 9e9f8dafH
  00156	c7 45 e8 81 89
	a1 85		 mov	 DWORD PTR __k$514596[ebp+4], -2053011071 ; 85a18981H
  0015d	c7 45 ec 84 82
	bf 98		 mov	 DWORD PTR __k$514596[ebp+8], -1732279676 ; 98bf8284H
  00164	c7 45 f0 94 bf
	8e 89		 mov	 DWORD PTR __k$514596[ebp+12], -1987133548 ; 898ebf94H
  0016b	8d 45 e4	 lea	 eax, DWORD PTR __k$514596[ebp]
  0016e	c6 45 f4 00	 mov	 BYTE PTR __k$514596[ebp+16], 0
  00172	59		 pop	 ecx
$LL530@ParseExtra:
  00173	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00179	83 c0 04	 add	 eax, 4
  0017c	49		 dec	 ecx
  0017d	75 f4		 jne	 SHORT $LL530@ParseExtra
  0017f	8d 45 e4	 lea	 eax, DWORD PTR __k$514596[ebp]
  00182	50		 push	 eax
  00183	8b cb		 mov	 ecx, ebx
  00185	ff d7		 call	 edi

; 344  : }

  00187	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0018a	5f		 pop	 edi
  0018b	89 86 c0 01 00
	00		 mov	 DWORD PTR [esi+448], eax
  00191	5e		 pop	 esi
  00192	33 cd		 xor	 ecx, ebp
  00194	5b		 pop	 ebx
  00195	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0019a	c9		 leave
  0019b	c2 04 00	 ret	 4
?ParseExtraInfo@TimeGateSearch@@UAEXAAVioXMLElement@@@Z ENDP ; TimeGateSearch::ParseExtraInfo
_TEXT	ENDS
PUBLIC	??0?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE@XZ ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE@XZ PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE@XZ ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::operator!=
; Function compile flags: /Ogsp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::operator!=
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAE@PAPAUScaleImage@TimeGateSearch@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::_Vector_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAE@PAPAUScaleImage@TimeGateSearch@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAE@PAPAUScaleImage@TimeGateSearch@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::_Vector_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@std@@QAE@PAPAUScaleImage@TimeGateSearch@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >::_Vector_iterator<std::_Vector_val<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> > >
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@@Z ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@@Z PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@@Z ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Make_iter
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEXPAPAUScaleImage@TimeGateSearch@@0@Z ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEXPAPAUScaleImage@TimeGateSearch@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEXPAPAUScaleImage@TimeGateSearch@@0@Z PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEXPAPAUScaleImage@TimeGateSearch@@0@Z ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Destroy
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@PAUScaleImage@TimeGateSearch@@ABQAU34@@std@@YAXAAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@PAPAUScaleImage@TimeGateSearch@@ABQAU23@@Z ; std::_Cons_val<std::allocator<TimeGateSearch::ScaleImage *>,TimeGateSearch::ScaleImage *,TimeGateSearch::ScaleImage * const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@PAUScaleImage@TimeGateSearch@@ABQAU34@@std@@YAXAAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@PAPAUScaleImage@TimeGateSearch@@ABQAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@PAUScaleImage@TimeGateSearch@@ABQAU34@@std@@YAXAAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@PAPAUScaleImage@TimeGateSearch@@ABQAU23@@Z PROC ; std::_Cons_val<std::allocator<TimeGateSearch::ScaleImage *>,TimeGateSearch::ScaleImage *,TimeGateSearch::ScaleImage * const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN9@Cons_val@2
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN9@Cons_val@2:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@PAUScaleImage@TimeGateSearch@@ABQAU34@@std@@YAXAAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@PAPAUScaleImage@TimeGateSearch@@ABQAU23@@Z ENDP ; std::_Cons_val<std::allocator<TimeGateSearch::ScaleImage *>,TimeGateSearch::ScaleImage *,TimeGateSearch::ScaleImage * const &>
_TEXT	ENDS
PUBLIC	??$_Umove@PAPAUScaleImage@TimeGateSearch@@@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEPAPAUScaleImage@TimeGateSearch@@PAPAU23@00@Z ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Umove<TimeGateSearch::ScaleImage * *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??$_Umove@PAPAUScaleImage@TimeGateSearch@@@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEPAPAUScaleImage@TimeGateSearch@@PAPAU23@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAUScaleImage@TimeGateSearch@@@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEPAPAUScaleImage@TimeGateSearch@@PAPAU23@00@Z PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Umove<TimeGateSearch::ScaleImage * *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUScaleImage@TimeGateSearch@@PAPAU12@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00AAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@@Z ; std::_Uninitialized_move<TimeGateSearch::ScaleImage * *,TimeGateSearch::ScaleImage * *,std::allocator<TimeGateSearch::ScaleImage *> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAPAUScaleImage@TimeGateSearch@@@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEPAPAUScaleImage@TimeGateSearch@@PAPAU23@00@Z ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Umove<TimeGateSearch::ScaleImage * *>
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@XZ ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@XZ PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@XZ ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@XZ ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@XZ PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@XZ ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::end
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@0@Z ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$514959 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@0@Z PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __First_arg$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	8b f1		 mov	 esi, ecx
  0000d	89 07		 mov	 DWORD PTR [edi], eax

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 45 10	 cmp	 eax, DWORD PTR __Last_arg$[ebp]
  00012	74 16		 je	 SHORT $LN1@erase

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	ff 75 10	 push	 DWORD PTR __Cat$514959[ebp]
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  0001f	e8 00 00 00 00	 call	 ??$_Move@PAPAUScaleImage@TimeGateSearch@@PAPAU12@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<TimeGateSearch::ScaleImage * *,TimeGateSearch::ScaleImage * *>
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

  00027	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN1@erase:

; 1212 : 			}
; 1213 : 		return (_First);

  0002a	8b c7		 mov	 eax, edi
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi

; 1214 : 		}

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@0@Z ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEXXZ ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Tidy
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEXXZ PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN12@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN12@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEXXZ ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Tidy
_TEXT	ENDS
PUBLIC	?reserve@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAEXI@Z ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::reserve
; Function compile flags: /Ogsp
;	COMDAT ?reserve@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?reserve@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAEXI@Z PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 747  : 		if (max_size() < _Count)

  00003	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	76 0b		 jbe	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN43@reserve:
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  0001a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0001d	2b 06		 sub	 eax, DWORD PTR [esi]
  0001f	c1 f8 02	 sar	 eax, 2
  00022	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00025	73 52		 jae	 SHORT $LN3@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00027	53		 push	 ebx
  00028	57		 push	 edi
  00029	6a 00		 push	 0
  0002b	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate@PAUScaleImage@TimeGateSearch@@@std@@YAPAPAUScaleImage@TimeGateSearch@@IPAPAU12@@Z ; std::_Allocate<TimeGateSearch::ScaleImage *>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00033	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00035	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00038	52		 push	 edx
  00039	8b d8		 mov	 ebx, eax
  0003b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003e	53		 push	 ebx
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUScaleImage@TimeGateSearch@@PAPAU12@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@YAPAPAUScaleImage@TimeGateSearch@@PAPAU12@00AAV?$allocator@PAUScaleImage@TimeGateSearch@@@0@@Z ; std::_Uninitialized_move<TimeGateSearch::ScaleImage * *,TimeGateSearch::ScaleImage * *,std::allocator<TimeGateSearch::ScaleImage *> >

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00046	8b 06		 mov	 eax, DWORD PTR [esi]
  00048	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0004b	2b f8		 sub	 edi, eax
  0004d	83 c4 18	 add	 esp, 24			; 00000018H
  00050	c1 ff 02	 sar	 edi, 2

; 761  : 			if (this->_Myfirst != 0)

  00053	85 c0		 test	 eax, eax
  00055	74 07		 je	 SHORT $LN39@reserve

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);
; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0005d	59		 pop	 ecx
$LN39@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  0005e	8b ce		 mov	 ecx, esi
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00066	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00069	8d 04 83	 lea	 eax, DWORD PTR [ebx+eax*4]
  0006c	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 770  : 			this->_Mylast = _Ptr + _Size;

  0006f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00072	5f		 pop	 edi

; 771  : 			this->_Myfirst = _Ptr;

  00073	89 1e		 mov	 DWORD PTR [esi], ebx
  00075	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00078	5b		 pop	 ebx
$LN3@reserve:
  00079	5e		 pop	 esi

; 772  : 			}
; 773  : 		}

  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
$LN42@reserve:
?reserve@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAEXI@Z ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::reserve
_TEXT	ENDS
PUBLIC	?iwm_show@TimeGateSearch@@UAEXXZ		; TimeGateSearch::iwm_show
EXTRN	?IsBattleRoomMovePenaltyPeso@ioBattleRoomMgr@@QAE_NXZ:PROC ; ioBattleRoomMgr::IsBattleRoomMovePenaltyPeso
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\timegatesearch.cpp
;	COMDAT ?iwm_show@TimeGateSearch@@UAEXXZ
_TEXT	SEGMENT
?iwm_show@TimeGateSearch@@UAEXXZ PROC			; TimeGateSearch::iwm_show, COMDAT
; _this$ = ecx

; 162  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 163  : 	m_dwChangeTime = FRAMEGETTIME() + m_dwChangeDuration;

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00009	8b c8		 mov	 ecx, eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00011	03 86 a4 01 00
	00		 add	 eax, DWORD PTR [esi+420]

; 164  : 	m_iCurBigIdx   = 0;

  00017	83 a6 b4 01 00
	00 00		 and	 DWORD PTR [esi+436], 0
  0001e	89 86 b0 01 00
	00		 mov	 DWORD PTR [esi+432], eax

; 165  : 
; 166  : 	if( !m_ScaleImageList.empty() )

  00024	8b 86 90 01 00
	00		 mov	 eax, DWORD PTR [esi+400]
  0002a	3b 86 94 01 00
	00		 cmp	 eax, DWORD PTR [esi+404]
  00030	74 70		 je	 SHORT $LN1@iwm_show

; 167  : 	{
; 168  : 		ScaleImageList::iterator iter;
; 169  : 		for( iter=m_ScaleImageList.begin() ; iter!=m_ScaleImageList.end() ; ++iter )

  00032	53		 push	 ebx
  00033	57		 push	 edi
  00034	8b d8		 mov	 ebx, eax
  00036	eb 27		 jmp	 SHORT $LN52@iwm_show
$LL25@iwm_show:

; 170  : 		{
; 171  : 			ScaleImage *pImage = (*iter);

  00038	8b 3b		 mov	 edi, DWORD PTR [ebx]

; 172  : 			if( !pImage )

  0003a	85 ff		 test	 edi, edi
  0003c	74 1e		 je	 SHORT $LN4@iwm_show

; 173  : 				continue;
; 174  : 			pImage->m_fCurScale = m_fSmallScale;
; 175  : 			pImage->m_pImage->SetScale( pImage->m_fCurScale );

  0003e	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00040	f3 0f 10 86 ac
	01 00 00	 movss	 xmm0, DWORD PTR [esi+428]
  00048	f3 0f 11 47 08	 movss	 DWORD PTR [edi+8], xmm0
  0004d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004f	51		 push	 ecx
  00050	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00055	ff 50 1c	 call	 DWORD PTR [eax+28]

; 176  : 			pImage->m_dwScaleTime = 0;

  00058	83 67 04 00	 and	 DWORD PTR [edi+4], 0
$LN4@iwm_show:

; 167  : 	{
; 168  : 		ScaleImageList::iterator iter;
; 169  : 		for( iter=m_ScaleImageList.begin() ; iter!=m_ScaleImageList.end() ; ++iter )

  0005c	83 c3 04	 add	 ebx, 4
$LN52@iwm_show:
  0005f	3b 9e 94 01 00
	00		 cmp	 ebx, DWORD PTR [esi+404]
  00065	75 d1		 jne	 SHORT $LL25@iwm_show

; 177  : 		}
; 178  : 
; 179  : 		if( COMPARE( m_iCurBigIdx, 0, (int) m_ScaleImageList.size() ) )

  00067	8b 86 b4 01 00
	00		 mov	 eax, DWORD PTR [esi+436]
  0006d	85 c0		 test	 eax, eax
  0006f	78 2f		 js	 SHORT $LN51@iwm_show
  00071	8b 8e 94 01 00
	00		 mov	 ecx, DWORD PTR [esi+404]
  00077	2b 8e 90 01 00
	00		 sub	 ecx, DWORD PTR [esi+400]
  0007d	c1 f9 02	 sar	 ecx, 2
  00080	3b c1		 cmp	 eax, ecx
  00082	7d 1c		 jge	 SHORT $LN51@iwm_show

; 180  : 			m_ScaleImageList[m_iCurBigIdx]->m_dwScaleTime = FRAMEGETTIME();

  00084	8b 8e 90 01 00
	00		 mov	 ecx, DWORD PTR [esi+400]
  0008a	8d 3c 81	 lea	 edi, DWORD PTR [ecx+eax*4]
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00093	8b c8		 mov	 ecx, eax
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  0009b	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0009d	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN51@iwm_show:
  000a0	5f		 pop	 edi
  000a1	5b		 pop	 ebx
$LN1@iwm_show:

; 181  : 	}
; 182  : 
; 183  : 	m_bReverse			= false;

  000a2	c6 86 b8 01 00
	00 00		 mov	 BYTE PTR [esi+440], 0

; 184  : 	m_dwAutoSearchTime	= FRAMEGETTIME();	

  000a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  000af	8b c8		 mov	 ecx, eax
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  000b7	89 86 c4 01 00
	00		 mov	 DWORD PTR [esi+452], eax

; 185  : 
; 186  : 	// ÀüÅõ¹æ Æä³ÎÆ¼ ¹Þ´ÂÁö Ã¼Å©
; 187  : 	m_bPenaltyPeso      = g_BattleRoomMgr.IsBattleRoomMovePenaltyPeso();

  000bd	e8 00 00 00 00	 call	 ?GetSingleton@ioBattleRoomMgr@@SAAAV1@XZ ; ioBattleRoomMgr::GetSingleton
  000c2	8b c8		 mov	 ecx, eax
  000c4	e8 00 00 00 00	 call	 ?IsBattleRoomMovePenaltyPeso@ioBattleRoomMgr@@QAE_NXZ ; ioBattleRoomMgr::IsBattleRoomMovePenaltyPeso
  000c9	88 86 dc 01 00
	00		 mov	 BYTE PTR [esi+476], al
  000cf	5e		 pop	 esi

; 188  : }

  000d0	c3		 ret	 0
?iwm_show@TimeGateSearch@@UAEXXZ ENDP			; TimeGateSearch::iwm_show
_TEXT	ENDS
PUBLIC	??_C@_0BJ@DOMOBEEJ@TimeGateSearch?3?3OnRender?$AA@ ; `string'
PUBLIC	??_C@_0L@OJELONAP@?$CFs?5?$CFd?5?1?5?$CFd?$AA@	; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?OnRender@TimeGateSearch@@MAEXXZ		; TimeGateSearch::OnRender
EXTRN	__imp_?SafeSprintf@@YAXPADHPBD1K@Z:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0BJ@DOMOBEEJ@TimeGateSearch?3?3OnRender?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
CONST	SEGMENT
??_C@_0BJ@DOMOBEEJ@TimeGateSearch?3?3OnRender?$AA@ DB 'TimeGateSearch::On'
	DB	'Render', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OJELONAP@?$CFs?5?$CFd?5?1?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0L@OJELONAP@?$CFs?5?$CFd?5?1?5?$CFd?$AA@ DB '%s %d / %d', 00H ; `string'
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\timegatesearch.cpp
CONST	ENDS
;	COMDAT ?OnRender@TimeGateSearch@@MAEXXZ
_TEXT	SEGMENT
_pImage$511340 = -280					; size = 4
_iYPos$ = -276						; size = 4
_iter$ = -272						; size = 4
tv442 = -268						; size = 4
_iXPos$ = -268						; size = 4
_szBuf$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
?OnRender@TimeGateSearch@@MAEXXZ PROC			; TimeGateSearch::OnRender, COMDAT
; _this$ = ecx

; 372  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 18 01 00
	00		 sub	 esp, 280		; 00000118H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b f9		 mov	 edi, ecx

; 373  : 	ioWnd::OnRender();

  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?OnRender@ioWnd@@MAEXXZ

; 374  : 
; 375  : 	int iXPos = GetDerivedPosX();

  0001e	8b cf		 mov	 ecx, edi
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosX@ioWnd@@QBEHXZ

; 376  : 	int iYPos = GetDerivedPosY();

  00026	8b cf		 mov	 ecx, edi
  00028	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _iXPos$[ebp], eax
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosY@ioWnd@@QBEHXZ

; 377  : 
; 378  : 	g_FontMgr.SetTextStyle( TS_NORMAL );	

  00034	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?GetSingleton@ioFontManager@@SAAAV1@XZ
  0003a	33 db		 xor	 ebx, ebx
  0003c	53		 push	 ebx
  0003d	89 85 ec fe ff
	ff		 mov	 DWORD PTR _iYPos$[ebp], eax
  00043	ff d6		 call	 esi
  00045	8b c8		 mov	 ecx, eax
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z

; 379  : 	g_FontMgr.SetAlignType( TAT_CENTER );

  0004d	6a 01		 push	 1
  0004f	ff d6		 call	 esi
  00051	8b c8		 mov	 ecx, eax
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 380  : 	g_FontMgr.SetBkColor( 0, 0, 0 );

  00059	53		 push	 ebx
  0005a	53		 push	 ebx
  0005b	53		 push	 ebx
  0005c	ff d6		 call	 esi
  0005e	8b c8		 mov	 ecx, eax
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetBkColor@ioFontManager@@QAEXHHH@Z

; 381  : 	g_FontMgr.SetTextColor( TCT_DEFAULT_GRAY );

  00066	68 6e 6e 6e ff	 push	 -9539986		; ff6e6e6eH
  0006b	ff d6		 call	 esi
  0006d	8b c8		 mov	 ecx, eax
  0006f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 382  : 
; 383  : 	DWORD dwCurGap = 0;
; 384  : 	char szBuf[MAX_PATH] = "";

  00075	68 03 01 00 00	 push	 259			; 00000103H
  0007a	8d 85 f9 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp+1]
  00080	53		 push	 ebx
  00081	50		 push	 eax
  00082	88 9d f8 fe ff
	ff		 mov	 BYTE PTR _szBuf$[ebp], bl
  00088	e8 00 00 00 00	 call	 _memset
  0008d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 385  : 	DWORD dwCurTime = FRAMEGETTIME();

  00090	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00096	8b c8		 mov	 ecx, eax
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ

; 386  : 	switch(m_iSearchType)

  0009e	8b 8f d8 01 00
	00		 mov	 ecx, DWORD PTR [edi+472]
  000a4	49		 dec	 ecx
  000a5	74 53		 je	 SHORT $LN7@OnRender
  000a7	49		 dec	 ecx
  000a8	0f 85 9a 00 00
	00		 jne	 $LN9@OnRender

; 387  : 	{
; 388  : 	case ST_PARTY_JOIN:
; 389  : 		{
; 390  : 			dwCurGap = dwCurTime - m_dwPartyJoinStartTime;

  000ae	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?m_dwPartyJoinStartTime@TimeGateSearch@@1KA ; TimeGateSearch::m_dwPartyJoinStartTime

; 391  : 			dwCurGap /= 1000;

  000b4	33 d2		 xor	 edx, edx
  000b6	b9 e8 03 00 00	 mov	 ecx, 1000		; 000003e8H
  000bb	f7 f1		 div	 ecx

; 392  : 			DWORD dwMax = ( m_dwBattleJoinTry - 1 ) * m_dwBattleJoinTrySec;

  000bd	8b 8f bc 01 00
	00		 mov	 ecx, DWORD PTR [edi+444]
  000c3	49		 dec	 ecx
  000c4	0f af 8f c0 01
	00 00		 imul	 ecx, DWORD PTR [edi+448]

; 393  : 			StringCbPrintf( szBuf, sizeof(szBuf), "%s %d / %d", m_szCurTitle.c_str(), min( dwCurGap, dwMax ), dwMax );

  000cb	51		 push	 ecx
  000cc	3b c1		 cmp	 eax, ecx
  000ce	0f 43 c1	 cmovae	 eax, ecx
  000d1	50		 push	 eax
  000d2	8d 8f c8 01 00
	00		 lea	 ecx, DWORD PTR [edi+456]
  000d8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  000de	50		 push	 eax
  000df	68 00 00 00 00	 push	 OFFSET ??_C@_0L@OJELONAP@?$CFs?5?$CFd?5?1?5?$CFd?$AA@
  000e4	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  000ea	68 04 01 00 00	 push	 260			; 00000104H
  000ef	50		 push	 eax
  000f0	e8 00 00 00 00	 call	 ?StringCbPrintfA@@YAJPADIPBDZZ ; StringCbPrintfA
  000f5	83 c4 18	 add	 esp, 24			; 00000018H

; 394  : 		}		
; 395  : 		break;

  000f8	eb 4e		 jmp	 SHORT $LN9@OnRender
$LN7@OnRender:

; 396  : 	case ST_PLAZA:
; 397  : 		{
; 398  : 			dwCurGap = dwCurTime - m_dwPlazaStartTime;

  000fa	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?m_dwPlazaStartTime@TimeGateSearch@@1KA ; TimeGateSearch::m_dwPlazaStartTime

; 399  : 			dwCurGap /= 1000;

  00100	33 d2		 xor	 edx, edx
  00102	b9 e8 03 00 00	 mov	 ecx, 1000		; 000003e8H
  00107	f7 f1		 div	 ecx

; 400  : 			SafeSprintf( szBuf, sizeof(szBuf), STR(1), m_szCurTitle.c_str(), dwCurGap );

  00109	8d 8f c8 01 00
	00		 lea	 ecx, DWORD PTR [edi+456]
  0010f	50		 push	 eax
  00110	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  00116	50		 push	 eax
  00117	53		 push	 ebx
  00118	6a 01		 push	 1
  0011a	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0011f	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DOMOBEEJ@TimeGateSearch?3?3OnRender?$AA@
  00124	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioStringManager@@SAAAV1@XZ
  0012a	8b c8		 mov	 ecx, eax
  0012c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  00132	50		 push	 eax
  00133	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00139	68 04 01 00 00	 push	 260			; 00000104H
  0013e	50		 push	 eax
  0013f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SafeSprintf@@YAXPADHPBD1K@Z
  00145	83 c4 14	 add	 esp, 20			; 00000014H
$LN9@OnRender:

; 401  : 		}		
; 402  : 		break;
; 403  : 	}
; 404  : 	g_FontMgr.PrintText( iXPos + 151, iYPos + 53, FONT_SIZE_13, szBuf );

  00148	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  00150	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00156	50		 push	 eax
  00157	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _iYPos$[ebp]
  0015d	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00160	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00166	83 c0 35	 add	 eax, 53			; 00000035H
  00169	0f 57 c0	 xorps	 xmm0, xmm0
  0016c	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00170	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _iXPos$[ebp]
  00176	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0017c	05 97 00 00 00	 add	 eax, 151		; 00000097H
  00181	0f 57 c0	 xorps	 xmm0, xmm0
  00184	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00188	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018d	ff d6		 call	 esi
  0018f	50		 push	 eax
  00190	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ

; 405  : 
; 406  : 	int iRealXPos = 45;
; 407  : 	ScaleImageList::iterator iter;
; 408  : 	for( iter=m_ScaleImageList.begin() ; iter!=m_ScaleImageList.end() ; ++iter )

  00196	8b 8f 90 01 00
	00		 mov	 ecx, DWORD PTR [edi+400]
  0019c	83 c4 14	 add	 esp, 20			; 00000014H
  0019f	89 8d f0 fe ff
	ff		 mov	 DWORD PTR _iter$[ebp], ecx
  001a5	3b 8f 94 01 00
	00		 cmp	 ecx, DWORD PTR [edi+404]
  001ab	0f 84 de 00 00
	00		 je	 $LN4@OnRender

; 401  : 		}		
; 402  : 		break;
; 403  : 	}
; 404  : 	g_FontMgr.PrintText( iXPos + 151, iYPos + 53, FONT_SIZE_13, szBuf );

  001b1	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _iXPos$[ebp]
  001b7	83 c0 2d	 add	 eax, 45			; 0000002dH
  001ba	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv442[ebp], eax

; 405  : 
; 406  : 	int iRealXPos = 45;
; 407  : 	ScaleImageList::iterator iter;
; 408  : 	for( iter=m_ScaleImageList.begin() ; iter!=m_ScaleImageList.end() ; ++iter )

$LL29@OnRender:

; 409  : 	{
; 410  : 		ScaleImage *pImage = (*iter);

  001c0	8b 01		 mov	 eax, DWORD PTR [ecx]
  001c2	89 85 e8 fe ff
	ff		 mov	 DWORD PTR _pImage$511340[ebp], eax

; 411  : 		if( !pImage )

  001c8	3b c3		 cmp	 eax, ebx
  001ca	0f 84 aa 00 00
	00		 je	 $LN5@OnRender

; 412  : 			continue;
; 413  : 		if( m_pScaleImageBack )

  001d0	39 9f a0 01 00
	00		 cmp	 DWORD PTR [edi+416], ebx
  001d6	74 5c		 je	 SHORT $LN51@OnRender

; 414  : 		{
; 415  : 			m_pScaleImageBack->SetScale( pImage->m_fCurScale );

  001d8	8b 8f a0 01 00
	00		 mov	 ecx, DWORD PTR [edi+416]
  001de	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  001e3	8b 11		 mov	 edx, DWORD PTR [ecx]
  001e5	51		 push	 ecx
  001e6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001eb	ff 52 1c	 call	 DWORD PTR [edx+28]

; 416  : 			m_pScaleImageBack->Render( iXPos + iRealXPos, iYPos + 120, UI_RENDER_MULTIPLY, TFO_BILINEAR );

  001ee	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _iYPos$[ebp]
  001f4	8b b7 a0 01 00
	00		 mov	 esi, DWORD PTR [edi+416]
  001fa	8b 06		 mov	 eax, DWORD PTR [esi]
  001fc	53		 push	 ebx
  001fd	53		 push	 ebx
  001fe	6a 01		 push	 1
  00200	83 c1 78	 add	 ecx, 120		; 00000078H
  00203	6a 08		 push	 8
  00205	51		 push	 ecx
  00206	0f 57 c0	 xorps	 xmm0, xmm0
  00209	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0020d	51		 push	 ecx
  0020e	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00214	66 0f 6e 85 f4
	fe ff ff	 movd	 xmm0, DWORD PTR tv442[ebp]
  0021c	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0021f	8b ce		 mov	 ecx, esi
  00221	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00226	ff 10		 call	 DWORD PTR [eax]
  00228	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _pImage$511340[ebp]
  0022e	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR _iter$[ebp]
$LN51@OnRender:

; 417  : 		}
; 418  : 		if( pImage->m_pImage )

  00234	8b 00		 mov	 eax, DWORD PTR [eax]
  00236	3b c3		 cmp	 eax, ebx
  00238	74 39		 je	 SHORT $LN1@OnRender

; 419  : 		{
; 420  : 			pImage->m_pImage->Render( iXPos + iRealXPos, iYPos + 120, UI_RENDER_NORMAL, TFO_BILINEAR );

  0023a	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _iYPos$[ebp]
  00240	8b 10		 mov	 edx, DWORD PTR [eax]
  00242	53		 push	 ebx
  00243	53		 push	 ebx
  00244	6a 01		 push	 1
  00246	83 c1 78	 add	 ecx, 120		; 00000078H
  00249	53		 push	 ebx
  0024a	51		 push	 ecx
  0024b	0f 57 c0	 xorps	 xmm0, xmm0
  0024e	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00252	51		 push	 ecx
  00253	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00259	66 0f 6e 85 f4
	fe ff ff	 movd	 xmm0, DWORD PTR tv442[ebp]
  00261	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00264	8b c8		 mov	 ecx, eax
  00266	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026b	ff 12		 call	 DWORD PTR [edx]
  0026d	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR _iter$[ebp]
$LN1@OnRender:

; 421  : 		}
; 422  : 		iRealXPos += 71;

  00273	83 85 f4 fe ff
	ff 47		 add	 DWORD PTR tv442[ebp], 71 ; 00000047H
$LN5@OnRender:

; 405  : 
; 406  : 	int iRealXPos = 45;
; 407  : 	ScaleImageList::iterator iter;
; 408  : 	for( iter=m_ScaleImageList.begin() ; iter!=m_ScaleImageList.end() ; ++iter )

  0027a	83 c1 04	 add	 ecx, 4
  0027d	89 8d f0 fe ff
	ff		 mov	 DWORD PTR _iter$[ebp], ecx
  00283	3b 8f 94 01 00
	00		 cmp	 ecx, DWORD PTR [edi+404]
  00289	0f 85 31 ff ff
	ff		 jne	 $LL29@OnRender
$LN4@OnRender:

; 423  : 	}
; 424  : }

  0028f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00292	5f		 pop	 edi
  00293	5e		 pop	 esi
  00294	33 cd		 xor	 ecx, ebp
  00296	5b		 pop	 ebx
  00297	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0029c	c9		 leave
  0029d	c3		 ret	 0
?OnRender@TimeGateSearch@@MAEXXZ ENDP			; TimeGateSearch::OnRender
_TEXT	ENDS
PUBLIC	??1?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE@XZ ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::~vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE@XZ PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::~vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEXXZ ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Tidy
??1?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE@XZ ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::~vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAEXXZ ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T515332 = -4						; size = 4
?clear@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAEXXZ PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T515332[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@0@Z ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAEXXZ ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::clear
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEXI@Z ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEXI@Z PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx

; 1292 : 		if (max_size() - _Count < _Size)

  0000d	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  00012	2b 55 08	 sub	 edx, DWORD PTR __Count$[ebp]
  00015	c1 f8 02	 sar	 eax, 2
  00018	3b d0		 cmp	 edx, eax
  0001a	73 0b		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve:
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  00027	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0002a	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0002d	2b d1		 sub	 edx, ecx
  0002f	c1 fa 02	 sar	 edx, 2
  00032	3b c2		 cmp	 eax, edx
  00034	76 10		 jbe	 SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  00036	50		 push	 eax
  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IBEII@Z ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Grow_to
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?reserve@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAEXI@Z ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::reserve
$LN1@Reserve:
  00046	5e		 pop	 esi

; 1298 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN20@Reserve:
?_Reserve@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEXI@Z ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Reserve
_TEXT	ENDS
PUBLIC	__real@3f333333
PUBLIC	??_7TimeGateSearch@@6B@				; TimeGateSearch::`vftable'
PUBLIC	??0TimeGateSearch@@QAE@XZ			; TimeGateSearch::TimeGateSearch
PUBLIC	??_R4TimeGateSearch@@6B@			; TimeGateSearch::`RTTI Complete Object Locator'
PUBLIC	??_R3TimeGateSearch@@8				; TimeGateSearch::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TimeGateSearch@@8				; TimeGateSearch::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TimeGateSearch@@8			; TimeGateSearch::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioMovingWnd@@8			; ioMovingWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioMovingWnd@@@8				; ioMovingWnd `RTTI Type Descriptor'
PUBLIC	??_R3ioMovingWnd@@8				; ioMovingWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioMovingWnd@@8				; ioMovingWnd::`RTTI Base Class Array'
PUBLIC	?AddRenderImage@TimeGateSearch@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z ; TimeGateSearch::AddRenderImage
EXTRN	__imp_??1ioMovingWnd@@UAE@XZ:PROC
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
EXTRN	__imp_??0ioMovingWnd@@QAE@XZ:PROC
EXTRN	?SetPositionToDefault@ioMovingWnd@@UAEXHH_N0@Z:PROC ; ioMovingWnd::SetPositionToDefault
EXTRN	?OnMouseProcess@ioMovingWnd@@MAEXABVioMouse@@@Z:PROC ; ioMovingWnd::OnMouseProcess
EXTRN	?iwm_lbuttondown@ioMovingWnd@@UAEXABVioMouse@@@Z:PROC ; ioMovingWnd::iwm_lbuttondown
EXTRN	?iwm_lbuttonup@ioMovingWnd@@UAEXABVioMouse@@@Z:PROC ; ioMovingWnd::iwm_lbuttonup
EXTRN	?iwm_spacebar@ioWnd@@UAE_NXZ:PROC		; ioWnd::iwm_spacebar
EXTRN	??_ETimeGateSearch@@UAEPAXI@Z:PROC		; TimeGateSearch::`vector deleting destructor'
;	COMDAT ??_R2ioMovingWnd@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
rdata$r	SEGMENT
??_R2ioMovingWnd@@8 DD FLAT:??_R1A@?0A@EA@ioMovingWnd@@8 ; ioMovingWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3ioMovingWnd@@8
rdata$r	SEGMENT
??_R3ioMovingWnd@@8 DD 00H				; ioMovingWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioMovingWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioMovingWnd@@@8
_DATA	SEGMENT
??_R0?AVioMovingWnd@@@8 DD FLAT:??_7type_info@@6B@	; ioMovingWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioMovingWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioMovingWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioMovingWnd@@8 DD FLAT:??_R0?AVioMovingWnd@@@8 ; ioMovingWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioMovingWnd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@TimeGateSearch@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TimeGateSearch@@8 DD FLAT:??_R0?AVTimeGateSearch@@@8 ; TimeGateSearch::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TimeGateSearch@@8
rdata$r	ENDS
;	COMDAT ??_R2TimeGateSearch@@8
rdata$r	SEGMENT
??_R2TimeGateSearch@@8 DD FLAT:??_R1A@?0A@EA@TimeGateSearch@@8 ; TimeGateSearch::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioMovingWnd@@8
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3TimeGateSearch@@8
rdata$r	SEGMENT
??_R3TimeGateSearch@@8 DD 00H				; TimeGateSearch::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2TimeGateSearch@@8
rdata$r	ENDS
;	COMDAT ??_R4TimeGateSearch@@6B@
rdata$r	SEGMENT
??_R4TimeGateSearch@@6B@ DD 00H				; TimeGateSearch::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTimeGateSearch@@@8
	DD	FLAT:??_R3TimeGateSearch@@8
rdata$r	ENDS
;	COMDAT __real@3f333333
CONST	SEGMENT
__real@3f333333 DD 03f333333r			; 0.7
CONST	ENDS
;	COMDAT ??_7TimeGateSearch@@6B@
CONST	SEGMENT
??_7TimeGateSearch@@6B@ DD FLAT:??_R4TimeGateSearch@@6B@ ; TimeGateSearch::`vftable'
	DD	FLAT:?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
	DD	FLAT:?AddRenderImage@TimeGateSearch@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z
	DD	FLAT:?ParseExtraInfo@TimeGateSearch@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z
	DD	FLAT:?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z
	DD	FLAT:?SetWindowAlpha@ioWnd@@UAEXH@Z
	DD	FLAT:?SetActive@ioWnd@@UAEXXZ
	DD	FLAT:?SetInActive@ioWnd@@UAEXXZ
	DD	FLAT:?ClearElementImageList@ioWnd@@UAEXXZ
	DD	FLAT:?SetSize@ioWnd@@UAEXHH@Z
	DD	FLAT:?SetPositionToDefault@ioMovingWnd@@UAEXHH_N0@Z
	DD	FLAT:?IsNeedProcess@ioWnd@@UBE_NXZ
	DD	FLAT:?IsCanMouseReaction@ioWnd@@UBE_NXZ
	DD	FLAT:?AddChild@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?DeleteChild@ioWnd@@UAEXK@Z
	DD	FLAT:?DeleteAllChild@ioWnd@@UAEXXZ
	DD	FLAT:?OnRenderShowAndHide@ioWnd@@MAE_NXZ
	DD	FLAT:?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRender@TimeGateSearch@@MAEXXZ
	DD	FLAT:?OnRenderAfterChild@ioWnd@@MAEXXZ
	DD	FLAT:?OnProcess@TimeGateSearch@@MAEXM@Z
	DD	FLAT:?OnMouseProcess@ioMovingWnd@@MAEXABVioMouse@@@Z
	DD	FLAT:?CheckFrameReSize@ioWnd@@MAEXHHHH@Z
	DD	FLAT:?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z
	DD	FLAT:?iwm_create@TimeGateSearch@@UAEXXZ
	DD	FLAT:?iwm_destroy@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_lbuttondown@ioMovingWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonup@ioMovingWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_command@TimeGateSearch@@UAEXPAVioWnd@@HK@Z
	DD	FLAT:?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_vscroll@ioWnd@@UAEXKH@Z
	DD	FLAT:?iwm_wheel@ioWnd@@UAEXH@Z
	DD	FLAT:?iwm_show@TimeGateSearch@@UAEXXZ
	DD	FLAT:?iwm_hide@TimeGateSearch@@UAEXXZ
	DD	FLAT:?iwm_esc@TimeGateSearch@@UAE_NXZ
	DD	FLAT:?iwm_spacebar@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_gototop@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragleave@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z
	DD	FLAT:?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z
	DD	FLAT:?IsEXType@ioWnd@@UBE_NXZ
	DD	FLAT:?GetWndType@ioWnd@@UBEKXZ
	DD	FLAT:?RenderWnd@ioWnd@@UAEXXZ
	DD	FLAT:?SetIDEX@ioWnd@@UAEXAAK_N@Z
	DD	FLAT:?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?GetHeaderFileName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetTemplateName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetDefClassName@ioWnd@@UBEPBDXZ
	DD	FLAT:?_Clone@ioWnd@@UAEPAV1@XZ
	DD	FLAT:?Copy@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z
	DD	FLAT:?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?SetPosX@ioWnd@@UAEXH@Z
	DD	FLAT:?SetPosY@ioWnd@@UAEXH@Z
	DD	FLAT:?SetWidth@ioWnd@@UAEXH@Z
	DD	FLAT:?SetHeight@ioWnd@@UAEXH@Z
	DD	FLAT:?GetNumFixedRenderFrame@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?GetNumFixedRenderImage@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z
	DD	FLAT:?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z
	DD	FLAT:??_ETimeGateSearch@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TimeGateSearch@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TimeGateSearch@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0TimeGateSearch@@QAE@XZ$1
__ehfuncinfo$??0TimeGateSearch@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0TimeGateSearch@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\timegatesearch.cpp
xdata$x	ENDS
;	COMDAT ??0TimeGateSearch@@QAE@XZ
_TEXT	SEGMENT
tv241 = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0TimeGateSearch@@QAE@XZ PROC				; TimeGateSearch::TimeGateSearch, COMDAT
; _this$ = ecx

; 43   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0TimeGateSearch@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioMovingWnd@@QAE@XZ
  00017	33 db		 xor	 ebx, ebx
  00019	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7TimeGateSearch@@6B@
  0001f	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00022	89 9e 90 01 00
	00		 mov	 DWORD PTR [esi+400], ebx
  00028	89 9e 94 01 00
	00		 mov	 DWORD PTR [esi+404], ebx
  0002e	89 9e 98 01 00
	00		 mov	 DWORD PTR [esi+408], ebx
  00034	8d 8e c8 01 00
	00		 lea	 ecx, DWORD PTR [esi+456]
  0003a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ

; 44   : 	m_pScaleImageBack = NULL;

  00044	89 9e a0 01 00
	00		 mov	 DWORD PTR [esi+416], ebx

; 45   : 
; 46   : 	m_dwChangeDuration = 200;

  0004a	c7 86 a4 01 00
	00 c8 00 00 00	 mov	 DWORD PTR [esi+420], 200 ; 000000c8H

; 47   : 	m_fBigScale = FLOAT1;

  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	89 45 f0	 mov	 DWORD PTR tv241[ebp], eax
  0005c	db 45 f0	 fild	 DWORD PTR tv241[ebp]
  0005f	85 c0		 test	 eax, eax
  00061	79 06		 jns	 SHORT $LN17@TimeGateSe
  00063	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN17@TimeGateSe:

; 48   : 	m_fSmallScale = 0.7f;

  00069	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  00071	d9 9e a8 01 00
	00		 fstp	 DWORD PTR [esi+424]
  00077	f3 0f 11 86 ac
	01 00 00	 movss	 DWORD PTR [esi+428], xmm0

; 49   : 
; 50   : 	m_dwChangeTime	= 0;

  0007f	89 9e b0 01 00
	00		 mov	 DWORD PTR [esi+432], ebx

; 51   : 	m_iCurBigIdx	= 0;

  00085	89 9e b4 01 00
	00		 mov	 DWORD PTR [esi+436], ebx

; 52   : 	m_bReverse	= false;

  0008b	88 9e b8 01 00
	00		 mov	 BYTE PTR [esi+440], bl

; 53   : 	m_dwAutoSearchTime = 0;

  00091	89 9e c4 01 00
	00		 mov	 DWORD PTR [esi+452], ebx

; 54   : 	m_iSearchType = 0;

  00097	89 9e d8 01 00
	00		 mov	 DWORD PTR [esi+472], ebx

; 55   : 	m_dwBattleJoinTry = 0;

  0009d	89 9e bc 01 00
	00		 mov	 DWORD PTR [esi+444], ebx

; 56   : 	m_dwBattleJoinTrySec = 0;

  000a3	89 9e c0 01 00
	00		 mov	 DWORD PTR [esi+448], ebx

; 57   : 
; 58   : 	m_bPenaltyPeso = false;

  000a9	88 9e dc 01 00
	00		 mov	 BYTE PTR [esi+476], bl

; 59   : }

  000af	8b c6		 mov	 eax, esi
  000b1	e8 00 00 00 00	 call	 __EH_epilog3
  000b6	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TimeGateSearch@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioMovingWnd@@UAE@XZ
__unwindfunclet$??0TimeGateSearch@@QAE@XZ$1:
  00009	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	81 c1 90 01 00
	00		 add	 ecx, 400		; 00000190H
  00012	e9 00 00 00 00	 jmp	 ??1?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE@XZ ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::~vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >
__ehhandler$??0TimeGateSearch@@QAE@XZ:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0TimeGateSearch@@QAE@XZ
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0TimeGateSearch@@QAE@XZ ENDP				; TimeGateSearch::TimeGateSearch
PUBLIC	??1TimeGateSearch@@UAE@XZ			; TimeGateSearch::~TimeGateSearch
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??1TimeGateSearch@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1TimeGateSearch@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1TimeGateSearch@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1TimeGateSearch@@UAE@XZ$2
__ehfuncinfo$??1TimeGateSearch@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1TimeGateSearch@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\timegatesearch.cpp
xdata$x	ENDS
;	COMDAT ??1TimeGateSearch@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T515623 = -16						; size = 4
_iter$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1TimeGateSearch@@UAE@XZ PROC				; TimeGateSearch::~TimeGateSearch, COMDAT
; _this$ = ecx

; 62   : {

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1TimeGateSearch@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7TimeGateSearch@@6B@

; 63   : 	ScaleImageList::iterator iter;
; 64   : 	for( iter=m_ScaleImageList.begin() ; iter!=m_ScaleImageList.end() ; ++iter )

  00017	8b 86 90 01 00
	00		 mov	 eax, DWORD PTR [esi+400]
  0001d	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00024	eb 23		 jmp	 SHORT $LN76@TimeGateSe@2
$LL31@TimeGateSe@2:

; 65   : 	{
; 66   : 		ScaleImage *pImage = (*iter);

  00026	8b 18		 mov	 ebx, DWORD PTR [eax]

; 67   : 		if( !pImage )

  00028	85 db		 test	 ebx, ebx
  0002a	74 1a		 je	 SHORT $LN6@TimeGateSe@2

; 68   : 			continue;
; 69   : 		SAFEDELETE( pImage->m_pImage );

  0002c	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0002e	85 c9		 test	 ecx, ecx
  00030	74 0a		 je	 SHORT $LN3@TimeGateSe@2
  00032	8b 01		 mov	 eax, DWORD PTR [ecx]
  00034	6a 01		 push	 1
  00036	ff 50 40	 call	 DWORD PTR [eax+64]
  00039	83 23 00	 and	 DWORD PTR [ebx], 0
$LN3@TimeGateSe@2:

; 70   : 		SAFEDELETE( pImage );

  0003c	53		 push	 ebx
  0003d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00042	8b 45 f0	 mov	 eax, DWORD PTR _iter$[ebp]
  00045	59		 pop	 ecx
$LN6@TimeGateSe@2:

; 63   : 	ScaleImageList::iterator iter;
; 64   : 	for( iter=m_ScaleImageList.begin() ; iter!=m_ScaleImageList.end() ; ++iter )

  00046	83 c0 04	 add	 eax, 4
$LN76@TimeGateSe@2:
  00049	89 45 f0	 mov	 DWORD PTR _iter$[ebp], eax
  0004c	3b 86 94 01 00
	00		 cmp	 eax, DWORD PTR [esi+404]
  00052	75 d2		 jne	 SHORT $LL31@TimeGateSe@2

; 71   : 	}
; 72   : 	m_ScaleImageList.clear();

  00054	8b 86 94 01 00
	00		 mov	 eax, DWORD PTR [esi+404]
  0005a	8b 8e 90 01 00
	00		 mov	 ecx, DWORD PTR [esi+400]
  00060	50		 push	 eax
  00061	51		 push	 ecx
  00062	8d 45 f0	 lea	 eax, DWORD PTR $T515623[ebp]
  00065	50		 push	 eax
  00066	8d 8e 90 01 00
	00		 lea	 ecx, DWORD PTR [esi+400]
  0006c	e8 00 00 00 00	 call	 ?erase@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@@2@0@Z ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::erase

; 73   : 
; 74   : 	SAFEDELETE( m_pScaleImageBack );

  00071	8b 8e a0 01 00
	00		 mov	 ecx, DWORD PTR [esi+416]
  00077	85 c9		 test	 ecx, ecx
  00079	74 0e		 je	 SHORT $LN1@TimeGateSe@2
  0007b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0007d	6a 01		 push	 1
  0007f	ff 50 40	 call	 DWORD PTR [eax+64]
  00082	83 a6 a0 01 00
	00 00		 and	 DWORD PTR [esi+416], 0
$LN1@TimeGateSe@2:

; 75   : }

  00089	8d 8e c8 01 00
	00		 lea	 ecx, DWORD PTR [esi+456]
  0008f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00099	8d 8e 90 01 00
	00		 lea	 ecx, DWORD PTR [esi+400]
  0009f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000a3	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEXXZ ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Tidy
  000a8	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000ac	8b ce		 mov	 ecx, esi
  000ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioMovingWnd@@UAE@XZ
  000b4	e8 00 00 00 00	 call	 __EH_epilog3
  000b9	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1TimeGateSearch@@UAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioMovingWnd@@UAE@XZ
__unwindfunclet$??1TimeGateSearch@@UAE@XZ$1:
  00009	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	81 c1 90 01 00
	00		 add	 ecx, 400		; 00000190H
  00012	e9 00 00 00 00	 jmp	 ??1?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAE@XZ ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::~vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >
__unwindfunclet$??1TimeGateSearch@@UAE@XZ$2:
  00017	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	81 c1 c8 01 00
	00		 add	 ecx, 456		; 000001c8H
  00020	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??1TimeGateSearch@@UAE@XZ:
  00026	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002d	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00030	33 c8		 xor	 ecx, eax
  00032	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00037	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1TimeGateSearch@@UAE@XZ
  0003c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1TimeGateSearch@@UAE@XZ ENDP				; TimeGateSearch::~TimeGateSearch
PUBLIC	?push_back@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAEXABQAUScaleImage@TimeGateSearch@@@Z ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::push_back
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?push_back@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAEXABQAUScaleImage@TimeGateSearch@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAEXABQAUScaleImage@TimeGateSearch@@@Z PROC ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f8		 cmp	 edi, eax
  0000f	73 27		 jae	 SHORT $LN4@push_back
  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	3b cf		 cmp	 ecx, edi
  00015	77 21		 ja	 SHORT $LN4@push_back

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	2b f9		 sub	 edi, ecx
  00019	c1 ff 02	 sar	 edi, 2

; 980  : 			if (this->_Mylast == this->_Myend)

  0001c	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0001f	75 09		 jne	 SHORT $LN3@push_back

; 981  : 				_Reserve(1);

  00021	6a 01		 push	 1
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEXI@Z ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Reserve
$LN3@push_back:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	85 c0		 test	 eax, eax
  0002f	74 20		 je	 SHORT $LN39@push_back
  00031	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00033	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00036	eb 17		 jmp	 SHORT $LN46@push_back
$LN4@push_back:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00038	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0003b	75 09		 jne	 SHORT $LN1@push_back

; 991  : 				_Reserve(1);

  0003d	6a 01		 push	 1
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@IAEXI@Z ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::_Reserve
$LN1@push_back:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00046	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00049	85 c0		 test	 eax, eax
  0004b	74 04		 je	 SHORT $LN39@push_back
  0004d	8b 0f		 mov	 ecx, DWORD PTR [edi]
$LN46@push_back:
  0004f	89 08		 mov	 DWORD PTR [eax], ecx
$LN39@push_back:

; 996  : 			++this->_Mylast;

  00051	83 46 04 04	 add	 DWORD PTR [esi+4], 4
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
?push_back@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAEXABQAUScaleImage@TimeGateSearch@@@Z ENDP ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::push_back
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GTimeGateSearch@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GTimeGateSearch@@UAEPAXI@Z PROC			; TimeGateSearch::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1TimeGateSearch@@UAE@XZ ; TimeGateSearch::~TimeGateSearch
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@3
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@3:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GTimeGateSearch@@UAEPAXI@Z ENDP			; TimeGateSearch::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	_szType$GSCopy$
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
EXTRN	__imp_?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\timegatesearch.cpp
;	COMDAT ?AddRenderImage@TimeGateSearch@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
_TEXT	SEGMENT
_this$GSCopy$ = -32					; size = 4
_szType$GSCopy$ = -28					; size = 4
_pScaleImage$511128 = -28				; size = 4
__t$515929 = -24					; size = 15
__t$515804 = -20					; size = 11
__$ArrayPad$ = -4					; size = 4
_szType$ = 8						; size = 4
_pImage$ = 12						; size = 4
?AddRenderImage@TimeGateSearch@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z PROC ; TimeGateSearch::AddRenderImage, COMDAT
; _this$ = ecx

; 78   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _szType$[ebp]
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b 7d 0c	 mov	 edi, DWORD PTR _pImage$[ebp]

; 79   : 	if( szType == "ScaleImage" )

  00019	6a 02		 push	 2
  0001b	89 4d e0	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx

; 92   : 	}
; 93   : 	else if( szType == "ScaleImageBack" )

  0001e	89 45 e4	 mov	 DWORD PTR _szType$GSCopy$[ebp], eax
  00021	c7 45 ec be 8f
	8a 86		 mov	 DWORD PTR __t$515804[ebp], -2037739586 ; 868a8fbeH
  00028	c7 45 f0 88 a5
	86 8b		 mov	 DWORD PTR __t$515804[ebp+4], -1954110072 ; 8b86a588H
  0002f	66 c7 45 f4 8a
	89		 mov	 WORD PTR __t$515804[ebp+8], 35210 ; 0000898aH
  00035	8d 45 ec	 lea	 eax, DWORD PTR __t$515804[ebp]
  00038	c6 45 f6 00	 mov	 BYTE PTR __t$515804[ebp+10], 0
  0003c	59		 pop	 ecx
  0003d	bb ed ec eb ea	 mov	 ebx, -353637139		; eaebecedH
$LL115@AddRenderI:

; 79   : 	if( szType == "ScaleImage" )

  00042	31 18		 xor	 DWORD PTR [eax], ebx
  00044	83 c0 04	 add	 eax, 4
  00047	49		 dec	 ecx
  00048	75 f8		 jne	 SHORT $LL115@AddRenderI
  0004a	6a 08		 push	 8
  0004c	58		 pop	 eax
$LL112@AddRenderI:
  0004d	8b c8		 mov	 ecx, eax
  0004f	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00055	79 05		 jns	 SHORT $LN241@AddRenderI
  00057	49		 dec	 ecx
  00058	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0005b	41		 inc	 ecx
$LN241@AddRenderI:
  0005c	b2 ed		 mov	 dl, -19			; ffffffedH
  0005e	2a d1		 sub	 dl, cl
  00060	30 54 05 ec	 xor	 BYTE PTR __t$515804[ebp+eax], dl
  00064	40		 inc	 eax
  00065	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00068	7c e3		 jl	 SHORT $LL112@AddRenderI
  0006a	8b 4d e4	 mov	 ecx, DWORD PTR _szType$GSCopy$[ebp]
  0006d	8d 75 ec	 lea	 esi, DWORD PTR __t$515804[ebp]
  00070	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL233@AddRenderI:
  00076	8a 08		 mov	 cl, BYTE PTR [eax]
  00078	3a 0e		 cmp	 cl, BYTE PTR [esi]
  0007a	75 1a		 jne	 SHORT $LN234@AddRenderI
  0007c	84 c9		 test	 cl, cl
  0007e	74 12		 je	 SHORT $LN235@AddRenderI
  00080	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00083	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  00086	75 0e		 jne	 SHORT $LN234@AddRenderI
  00088	83 c0 02	 add	 eax, 2
  0008b	83 c6 02	 add	 esi, 2
  0008e	84 c9		 test	 cl, cl
  00090	75 e4		 jne	 SHORT $LL233@AddRenderI
$LN235@AddRenderI:
  00092	33 c0		 xor	 eax, eax
  00094	eb 05		 jmp	 SHORT $LN236@AddRenderI
$LN234@AddRenderI:
  00096	1b c0		 sbb	 eax, eax
  00098	83 d8 ff	 sbb	 eax, -1
$LN236@AddRenderI:
  0009b	85 c0		 test	 eax, eax
  0009d	75 52		 jne	 SHORT $LN232@AddRenderI

; 80   : 	{
; 81   : 		if( !pImage )

  0009f	85 ff		 test	 edi, edi
  000a1	0f 84 fc 00 00
	00		 je	 $LN1@AddRenderI

; 82   : 			return;
; 83   : 		ScaleImage *pScaleImage = new ScaleImage;

  000a7	6a 0c		 push	 12			; 0000000cH
  000a9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000ae	59		 pop	 ecx
  000af	89 45 e4	 mov	 DWORD PTR _pScaleImage$511128[ebp], eax

; 84   : 		if( !pScaleImage)

  000b2	85 c0		 test	 eax, eax
  000b4	0f 84 e9 00 00
	00		 je	 $LN1@AddRenderI

; 85   : 			return;
; 86   : 		pScaleImage->m_pImage = pImage;
; 87   : 		pScaleImage->m_dwScaleTime = 0;
; 88   : 		pScaleImage->m_fCurScale   = m_fSmallScale;

  000ba	8b 75 e0	 mov	 esi, DWORD PTR _this$GSCopy$[ebp]
  000bd	89 38		 mov	 DWORD PTR [eax], edi
  000bf	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  000c3	f3 0f 10 86 ac
	01 00 00	 movss	 xmm0, DWORD PTR [esi+428]

; 89   : 		pImage->SetScale( pScaleImage->m_fCurScale );

  000cb	51		 push	 ecx
  000cc	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
  000d1	8b 07		 mov	 eax, DWORD PTR [edi]
  000d3	8b cf		 mov	 ecx, edi
  000d5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000da	ff 50 1c	 call	 DWORD PTR [eax+28]

; 90   : 
; 91   : 		m_ScaleImageList.push_back( pScaleImage );

  000dd	8d 45 e4	 lea	 eax, DWORD PTR _pScaleImage$511128[ebp]
  000e0	50		 push	 eax
  000e1	8d 8e 90 01 00
	00		 lea	 ecx, DWORD PTR [esi+400]
  000e7	e8 00 00 00 00	 call	 ?push_back@?$vector@PAUScaleImage@TimeGateSearch@@V?$allocator@PAUScaleImage@TimeGateSearch@@@std@@@std@@QAEXABQAUScaleImage@TimeGateSearch@@@Z ; std::vector<TimeGateSearch::ScaleImage *,std::allocator<TimeGateSearch::ScaleImage *> >::push_back
  000ec	e9 b2 00 00 00	 jmp	 $LN1@AddRenderI
$LN232@AddRenderI:

; 92   : 	}
; 93   : 	else if( szType == "ScaleImageBack" )

  000f1	6a 03		 push	 3
  000f3	c7 45 e8 be 8f
	8a 86		 mov	 DWORD PTR __t$515929[ebp], -2037739586 ; 868a8fbeH
  000fa	c7 45 ec 88 a5
	86 8b		 mov	 DWORD PTR __t$515929[ebp+4], -1954110072 ; 8b86a588H
  00101	c7 45 f0 8a 89
	a9 8b		 mov	 DWORD PTR __t$515929[ebp+8], -1951823478 ; 8ba9898aH
  00108	66 c7 45 f4 8e
	87		 mov	 WORD PTR __t$515929[ebp+12], 34702 ; 0000878eH
  0010e	8d 45 e8	 lea	 eax, DWORD PTR __t$515929[ebp]
  00111	c6 45 f6 00	 mov	 BYTE PTR __t$515929[ebp+14], 0
  00115	59		 pop	 ecx
$LL221@AddRenderI:
  00116	31 18		 xor	 DWORD PTR [eax], ebx
  00118	83 c0 04	 add	 eax, 4
  0011b	49		 dec	 ecx
  0011c	75 f8		 jne	 SHORT $LL221@AddRenderI
  0011e	6a 0c		 push	 12			; 0000000cH
  00120	58		 pop	 eax
$LL218@AddRenderI:
  00121	8b c8		 mov	 ecx, eax
  00123	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00129	79 05		 jns	 SHORT $LN242@AddRenderI
  0012b	49		 dec	 ecx
  0012c	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0012f	41		 inc	 ecx
$LN242@AddRenderI:
  00130	b2 ed		 mov	 dl, -19			; ffffffedH
  00132	2a d1		 sub	 dl, cl
  00134	30 54 05 e8	 xor	 BYTE PTR __t$515929[ebp+eax], dl
  00138	40		 inc	 eax
  00139	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  0013c	7c e3		 jl	 SHORT $LL218@AddRenderI
  0013e	8b 4d e4	 mov	 ecx, DWORD PTR _szType$GSCopy$[ebp]
  00141	8d 75 e8	 lea	 esi, DWORD PTR __t$515929[ebp]
  00144	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL237@AddRenderI:
  0014a	8a 08		 mov	 cl, BYTE PTR [eax]
  0014c	3a 0e		 cmp	 cl, BYTE PTR [esi]
  0014e	75 1a		 jne	 SHORT $LN238@AddRenderI
  00150	84 c9		 test	 cl, cl
  00152	74 12		 je	 SHORT $LN239@AddRenderI
  00154	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00157	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  0015a	75 0e		 jne	 SHORT $LN238@AddRenderI
  0015c	83 c0 02	 add	 eax, 2
  0015f	83 c6 02	 add	 esi, 2
  00162	84 c9		 test	 cl, cl
  00164	75 e4		 jne	 SHORT $LL237@AddRenderI
$LN239@AddRenderI:
  00166	33 c0		 xor	 eax, eax
  00168	eb 05		 jmp	 SHORT $LN240@AddRenderI
$LN238@AddRenderI:
  0016a	1b c0		 sbb	 eax, eax
  0016c	83 d8 ff	 sbb	 eax, -1
$LN240@AddRenderI:
  0016f	85 c0		 test	 eax, eax
  00171	75 23		 jne	 SHORT $LN3@AddRenderI

; 94   : 	{
; 95   : 		SAFEDELETE( m_pScaleImageBack );

  00173	8b 75 e0	 mov	 esi, DWORD PTR _this$GSCopy$[ebp]
  00176	8b 8e a0 01 00
	00		 mov	 ecx, DWORD PTR [esi+416]
  0017c	85 c9		 test	 ecx, ecx
  0017e	74 0e		 je	 SHORT $LN2@AddRenderI
  00180	8b 01		 mov	 eax, DWORD PTR [ecx]
  00182	6a 01		 push	 1
  00184	ff 50 40	 call	 DWORD PTR [eax+64]
  00187	83 a6 a0 01 00
	00 00		 and	 DWORD PTR [esi+416], 0
$LN2@AddRenderI:

; 96   : 		m_pScaleImageBack = pImage;

  0018e	89 be a0 01 00
	00		 mov	 DWORD PTR [esi+416], edi

; 97   : 	}
; 98   : 	else

  00194	eb 0d		 jmp	 SHORT $LN1@AddRenderI
$LN3@AddRenderI:

; 99   : 	{
; 100  : 		ioWnd::AddRenderImage( szType, pImage );

  00196	8b 4d e0	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00199	57		 push	 edi
  0019a	ff 75 e4	 push	 DWORD PTR _szType$GSCopy$[ebp]
  0019d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
$LN1@AddRenderI:

; 101  : 	}
; 102  : }

  001a3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a6	5f		 pop	 edi
  001a7	5e		 pop	 esi
  001a8	33 cd		 xor	 ecx, ebp
  001aa	5b		 pop	 ebx
  001ab	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001b0	c9		 leave
  001b1	c2 08 00	 ret	 8
?AddRenderImage@TimeGateSearch@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z ENDP ; TimeGateSearch::AddRenderImage
_TEXT	ENDS
END
