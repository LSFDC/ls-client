; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioOwnerMark.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_7ioOwnerMark@@6B@				; ioOwnerMark::`vftable'
PUBLIC	??0ioOwnerMark@@QAE@XZ				; ioOwnerMark::ioOwnerMark
PUBLIC	??_R4ioOwnerMark@@6B@				; ioOwnerMark::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioOwnerMark@@@8				; ioOwnerMark `RTTI Type Descriptor'
PUBLIC	??_R3ioOwnerMark@@8				; ioOwnerMark::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioOwnerMark@@8				; ioOwnerMark::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioOwnerMark@@8			; ioOwnerMark::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_?GetLoopSec@ioFrameTimer@@QBEKXZ:PROC
EXTRN	__imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_EioOwnerMark@@UAEPAXI@Z:PROC			; ioOwnerMark::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@ioOwnerMark@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioownermark.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@ioOwnerMark@@8 DD FLAT:??_R0?AVioOwnerMark@@@8 ; ioOwnerMark::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioOwnerMark@@8
rdata$r	ENDS
;	COMDAT ??_R2ioOwnerMark@@8
rdata$r	SEGMENT
??_R2ioOwnerMark@@8 DD FLAT:??_R1A@?0A@EA@ioOwnerMark@@8 ; ioOwnerMark::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioOwnerMark@@8
rdata$r	SEGMENT
??_R3ioOwnerMark@@8 DD 00H				; ioOwnerMark::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioOwnerMark@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioOwnerMark@@@8
_DATA	SEGMENT
??_R0?AVioOwnerMark@@@8 DD FLAT:??_7type_info@@6B@	; ioOwnerMark `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioOwnerMark@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioOwnerMark@@6B@
rdata$r	SEGMENT
??_R4ioOwnerMark@@6B@ DD 00H				; ioOwnerMark::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioOwnerMark@@@8
	DD	FLAT:??_R3ioOwnerMark@@8
rdata$r	ENDS
;	COMDAT ??_7ioOwnerMark@@6B@
CONST	SEGMENT
??_7ioOwnerMark@@6B@ DD FLAT:??_R4ioOwnerMark@@6B@	; ioOwnerMark::`vftable'
	DD	FLAT:??_EioOwnerMark@@UAEPAXI@Z
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0ioOwnerMark@@QAE@XZ
_TEXT	SEGMENT
??0ioOwnerMark@@QAE@XZ PROC				; ioOwnerMark::ioOwnerMark, COMDAT
; _this$ = ecx

; 6    : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 7    : 	m_pOwnerMark   = NULL;

  00003	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 8    : 	m_TeamType	   = TEAM_NONE;

  00007	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  0000b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioOwnerMark@@6B@

; 9    : 	m_dwFrameTimer = FRAMEGETTIME();

  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00017	8b c8		 mov	 ecx, eax
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ

; 10   : 	m_iFrame       = 0;

  0001f	83 66 10 00	 and	 DWORD PTR [esi+16], 0
  00023	89 46 0c	 mov	 DWORD PTR [esi+12], eax

; 11   : }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	c3		 ret	 0
??0ioOwnerMark@@QAE@XZ ENDP				; ioOwnerMark::ioOwnerMark
_TEXT	ENDS
PUBLIC	?ClearResource@ioOwnerMark@@AAEXXZ		; ioOwnerMark::ClearResource
; Function compile flags: /Ogsp
;	COMDAT ?ClearResource@ioOwnerMark@@AAEXXZ
_TEXT	SEGMENT
?ClearResource@ioOwnerMark@@AAEXXZ PROC			; ioOwnerMark::ClearResource, COMDAT
; _this$ = ecx

; 19   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 20   : 	SAFEDELETE( m_pOwnerMark );

  00003	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00006	85 c9		 test	 ecx, ecx
  00008	74 0b		 je	 SHORT $LN1@ClearResou
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 50 40	 call	 DWORD PTR [eax+64]
  00011	83 66 04 00	 and	 DWORD PTR [esi+4], 0
$LN1@ClearResou:
  00015	5e		 pop	 esi

; 21   : }

  00016	c3		 ret	 0
?ClearResource@ioOwnerMark@@AAEXXZ ENDP			; ioOwnerMark::ClearResource
_TEXT	ENDS
PUBLIC	?IsResouceOK@ioOwnerMark@@ABE_NXZ		; ioOwnerMark::IsResouceOK
; Function compile flags: /Ogsp
;	COMDAT ?IsResouceOK@ioOwnerMark@@ABE_NXZ
_TEXT	SEGMENT
?IsResouceOK@ioOwnerMark@@ABE_NXZ PROC			; ioOwnerMark::IsResouceOK, COMDAT
; _this$ = ecx

; 25   : 	if( !m_pOwnerMark )

  00000	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00004	0f 95 c0	 setne	 al

; 26   : 		return false;
; 27   : 
; 28   : 	return true;
; 29   : }

  00007	c3		 ret	 0
?IsResouceOK@ioOwnerMark@@ABE_NXZ ENDP			; ioOwnerMark::IsResouceOK
_TEXT	ENDS
PUBLIC	??_C@_09NHNIDENO@Itsme_Red?$AA@			; `string'
PUBLIC	??_C@_0N@JEFKIHHB@BaseImage010?$AA@		; `string'
PUBLIC	??_C@_0L@HJDKKJEK@Itsme_Blue?$AA@		; `string'
PUBLIC	?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z	; ioOwnerMark::SetTeam
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
EXTRN	__imp_?CreateImage@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@0_N@Z:PROC
EXTRN	__imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ:PROC
EXTRN	__imp_??0ioHashString@@QAE@PBD@Z:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
;	COMDAT ??_C@_09NHNIDENO@Itsme_Red?$AA@
CONST	SEGMENT
??_C@_09NHNIDENO@Itsme_Red?$AA@ DB 'Itsme_Red', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JEFKIHHB@BaseImage010?$AA@
CONST	SEGMENT
??_C@_0N@JEFKIHHB@BaseImage010?$AA@ DB 'BaseImage010', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HJDKKJEK@Itsme_Blue?$AA@
CONST	SEGMENT
??_C@_0L@HJDKKJEK@Itsme_Blue?$AA@ DB 'Itsme_Blue', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z$5
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z
_TEXT	SEGMENT
$T505217 = -108						; size = 16
$T505218 = -92						; size = 16
$T505215 = -76						; size = 16
$T505216 = -60						; size = 16
$T505219 = -44						; size = 16
$T505220 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_eTeam$ = 8						; size = 4
?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z PROC		; ioOwnerMark::SetTeam, COMDAT
; _this$ = ecx

; 32   : {

  00000	6a 60		 push	 96			; 00000060H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 33   : 	if( m_TeamType == eTeam )	return;

  0000e	8b 7d 08	 mov	 edi, DWORD PTR _eTeam$[ebp]
  00011	39 7e 08	 cmp	 DWORD PTR [esi+8], edi
  00014	0f 84 07 01 00
	00		 je	 $LN4@SetTeam

; 34   : 
; 35   : 	m_TeamType = eTeam;

  0001a	89 7e 08	 mov	 DWORD PTR [esi+8], edi

; 36   : 
; 37   : 	ClearResource();

  0001d	e8 00 00 00 00	 call	 ?ClearResource@ioOwnerMark@@AAEXXZ ; ioOwnerMark::ClearResource

; 38   : 
; 39   : 	switch( eTeam )

  00022	4f		 dec	 edi
  00023	0f 84 a0 00 00
	00		 je	 $LN2@SetTeam
  00029	4f		 dec	 edi

; 46   : 		break;
; 47   : 	default:
; 48   : 		m_pOwnerMark		 = g_UIImageSetMgr.CreateImage( "BaseImage010", "Itsme_Blue" );

  0002a	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0L@HJDKKJEK@Itsme_Blue?$AA@
  00035	74 4c		 je	 SHORT $LN3@SetTeam
  00037	8d 4d d4	 lea	 ecx, DWORD PTR $T505219[ebp]
  0003a	ff d7		 call	 edi
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JEFKIHHB@BaseImage010?$AA@
  00041	8d 4d e4	 lea	 ecx, DWORD PTR $T505220[ebp]
  00044	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  0004b	ff d7		 call	 edi
  0004d	6a 00		 push	 0
  0004f	8d 45 d4	 lea	 eax, DWORD PTR $T505219[ebp]
  00052	50		 push	 eax
  00053	8d 45 e4	 lea	 eax, DWORD PTR $T505220[ebp]
  00056	50		 push	 eax
  00057	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ
  00061	8b c8		 mov	 ecx, eax
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CreateImage@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@0_N@Z
  00069	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0006c	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00072	8d 4d e4	 lea	 ecx, DWORD PTR $T505220[ebp]
  00075	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00079	ff d6		 call	 esi
  0007b	8d 4d d4	 lea	 ecx, DWORD PTR $T505219[ebp]

; 49   : 		break;

  0007e	e9 98 00 00 00	 jmp	 $LN16@SetTeam
$LN3@SetTeam:

; 40   : 	{
; 41   : 	case TEAM_BLUE:
; 42   : 		m_pOwnerMark		 = g_UIImageSetMgr.CreateImage( "BaseImage010", "Itsme_Blue" );

  00083	8d 4d b4	 lea	 ecx, DWORD PTR $T505215[ebp]
  00086	ff d7		 call	 edi
  00088	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JEFKIHHB@BaseImage010?$AA@
  00091	8d 4d c4	 lea	 ecx, DWORD PTR $T505216[ebp]
  00094	ff d7		 call	 edi
  00096	6a 00		 push	 0
  00098	8d 45 b4	 lea	 eax, DWORD PTR $T505215[ebp]
  0009b	50		 push	 eax
  0009c	8d 45 c4	 lea	 eax, DWORD PTR $T505216[ebp]
  0009f	50		 push	 eax
  000a0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ
  000aa	8b c8		 mov	 ecx, eax
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CreateImage@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@0_N@Z
  000b2	89 46 04	 mov	 DWORD PTR [esi+4], eax
  000b5	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_??1ioHashString@@QAE@XZ
  000bb	8d 4d c4	 lea	 ecx, DWORD PTR $T505216[ebp]
  000be	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000c2	ff d6		 call	 esi
  000c4	8d 4d b4	 lea	 ecx, DWORD PTR $T505215[ebp]

; 43   : 		break;

  000c7	eb 52		 jmp	 SHORT $LN16@SetTeam
$LN2@SetTeam:

; 44   : 	case TEAM_RED:
; 45   : 		m_pOwnerMark		 = g_UIImageSetMgr.CreateImage( "BaseImage010", "Itsme_Red" );

  000c9	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_??0ioHashString@@QAE@PBD@Z
  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_09NHNIDENO@Itsme_Red?$AA@
  000d4	8d 4d 94	 lea	 ecx, DWORD PTR $T505217[ebp]
  000d7	ff d7		 call	 edi
  000d9	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JEFKIHHB@BaseImage010?$AA@
  000de	8d 4d a4	 lea	 ecx, DWORD PTR $T505218[ebp]
  000e1	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  000e8	ff d7		 call	 edi
  000ea	6a 00		 push	 0
  000ec	8d 45 94	 lea	 eax, DWORD PTR $T505217[ebp]
  000ef	50		 push	 eax
  000f0	8d 45 a4	 lea	 eax, DWORD PTR $T505218[ebp]
  000f3	50		 push	 eax
  000f4	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ
  000fe	8b c8		 mov	 ecx, eax
  00100	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CreateImage@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@0_N@Z
  00106	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00109	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_??1ioHashString@@QAE@XZ
  0010f	8d 4d a4	 lea	 ecx, DWORD PTR $T505218[ebp]
  00112	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00116	ff d6		 call	 esi
  00118	8d 4d 94	 lea	 ecx, DWORD PTR $T505217[ebp]
$LN16@SetTeam:
  0011b	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0011f	ff d6		 call	 esi
$LN4@SetTeam:

; 50   : 	}
; 51   : }

  00121	e8 00 00 00 00	 call	 __EH_epilog3
  00126	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z$4:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR $T505219[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z$5:
  00009	8d 4d e4	 lea	 ecx, DWORD PTR $T505220[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z$0:
  00012	8d 4d b4	 lea	 ecx, DWORD PTR $T505215[ebp]
  00015	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z$1:
  0001b	8d 4d c4	 lea	 ecx, DWORD PTR $T505216[ebp]
  0001e	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z$2:
  00024	8d 4d 94	 lea	 ecx, DWORD PTR $T505217[ebp]
  00027	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__unwindfunclet$?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z$3:
  0002d	8d 4d a4	 lea	 ecx, DWORD PTR $T505218[ebp]
  00030	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z:
  00036	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003d	8b 4a 90	 mov	 ecx, DWORD PTR [edx-112]
  00040	33 c8		 xor	 ecx, eax
  00042	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00047	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z
  0004c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetTeam@ioOwnerMark@@QAEXW4TeamType@@@Z ENDP		; ioOwnerMark::SetTeam
PUBLIC	?Update@ioOwnerMark@@QAEXXZ			; ioOwnerMark::Update
; Function compile flags: /Ogsp
;	COMDAT ?Update@ioOwnerMark@@QAEXXZ
_TEXT	SEGMENT
?Update@ioOwnerMark@@QAEXXZ PROC			; ioOwnerMark::Update, COMDAT
; _this$ = ecx

; 54   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 55   : 	if( !IsResouceOK() )

  00003	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  00007	74 34		 je	 SHORT $LN1@Update

; 56   : 		return;
; 57   : 
; 58   : 	enum { DELAY_TIME = 50, };
; 59   : 	if( FRAMEGETTIME() - m_dwFrameTimer >= DELAY_TIME )

  00009	57		 push	 edi
  0000a	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00010	ff d7		 call	 edi
  00012	8b c8		 mov	 ecx, eax
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  0001a	2b 46 0c	 sub	 eax, DWORD PTR [esi+12]
  0001d	83 f8 32	 cmp	 eax, 50			; 00000032H
  00020	72 1a		 jb	 SHORT $LN9@Update

; 60   : 	{
; 61   : 		m_dwFrameTimer = FRAMEGETTIME();

  00022	ff d7		 call	 edi
  00024	8b c8		 mov	 ecx, eax
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ

; 62   : 		m_iFrame++;

  0002c	ff 46 10	 inc	 DWORD PTR [esi+16]

; 63   : 		if( m_iFrame == MAX_FRAME )

  0002f	83 7e 10 08	 cmp	 DWORD PTR [esi+16], 8
  00033	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  00036	75 04		 jne	 SHORT $LN9@Update

; 64   : 			m_iFrame = 0;

  00038	83 66 10 00	 and	 DWORD PTR [esi+16], 0
$LN9@Update:
  0003c	5f		 pop	 edi
$LN1@Update:
  0003d	5e		 pop	 esi

; 65   : 	}
; 66   : }

  0003e	c3		 ret	 0
?Update@ioOwnerMark@@QAEXXZ ENDP			; ioOwnerMark::Update
_TEXT	ENDS
PUBLIC	?Render@ioOwnerMark@@QAEXMM@Z			; ioOwnerMark::Render
EXTRN	__imp_?RenderWidthCut@ioUIRenderImage@@QAEXMMHHW4UIRenderType@@W4TextureFilterOption@@0@Z:PROC
EXTRN	__fltused:DWORD
; Function compile flags: /Ogsp
;	COMDAT ?Render@ioOwnerMark@@QAEXMM@Z
_TEXT	SEGMENT
_fXPos$ = 8						; size = 4
_fYPos$ = 12						; size = 4
?Render@ioOwnerMark@@QAEXMM@Z PROC			; ioOwnerMark::Render, COMDAT
; _this$ = ecx

; 69   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx

; 70   : 	if( !IsResouceOK() )	

  00005	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00008	33 d2		 xor	 edx, edx
  0000a	3b ca		 cmp	 ecx, edx
  0000c	74 49		 je	 SHORT $LN1@Render

; 71   : 		return;
; 72   : 
; 73   : 	if( !COMPARE( m_iFrame, 0, MAX_FRAME ) )

  0000e	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00011	3b c2		 cmp	 eax, edx
  00013	7c 42		 jl	 SHORT $LN1@Render
  00015	83 f8 08	 cmp	 eax, 8
  00018	7d 3d		 jge	 SHORT $LN1@Render

; 74   : 		return;
; 75   : 	
; 76   : 	enum { FRAME_WIDTH = 36, FRAME_HEIGHT = 35, };
; 77   : 	int iWidthStart = m_iFrame*FRAME_WIDTH;
; 78   : 	m_pOwnerMark->RenderWidthCut( fXPos - iWidthStart, fYPos, iWidthStart, iWidthStart+FRAME_WIDTH  );

  0001a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fYPos$[ebp]
  0001f	6b c0 24	 imul	 eax, 36			; 00000024H
  00022	52		 push	 edx
  00023	52		 push	 edx
  00024	52		 push	 edx
  00025	8d 50 24	 lea	 edx, DWORD PTR [eax+36]
  00028	52		 push	 edx
  00029	50		 push	 eax
  0002a	51		 push	 ecx
  0002b	51		 push	 ecx
  0002c	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00032	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fXPos$[ebp]
  00037	0f 57 c9	 xorps	 xmm1, xmm1
  0003a	0f 5a c0	 cvtps2pd xmm0, xmm0
  0003d	f3 0f 2a c8	 cvtsi2ss xmm1, eax
  00041	0f 5a c9	 cvtps2pd xmm1, xmm1
  00044	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00048	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0004c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?RenderWidthCut@ioUIRenderImage@@QAEXMMHHW4UIRenderType@@W4TextureFilterOption@@0@Z
$LN1@Render:

; 79   : }

  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
?Render@ioOwnerMark@@QAEXMM@Z ENDP			; ioOwnerMark::Render
_TEXT	ENDS
PUBLIC	??1ioOwnerMark@@UAE@XZ				; ioOwnerMark::~ioOwnerMark
; Function compile flags: /Ogsp
;	COMDAT ??1ioOwnerMark@@UAE@XZ
_TEXT	SEGMENT
??1ioOwnerMark@@UAE@XZ PROC				; ioOwnerMark::~ioOwnerMark, COMDAT
; _this$ = ecx

; 14   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ioOwnerMark@@6B@

; 15   : 	ClearResource();

  00006	e9 00 00 00 00	 jmp	 ?ClearResource@ioOwnerMark@@AAEXXZ ; ioOwnerMark::ClearResource
??1ioOwnerMark@@UAE@XZ ENDP				; ioOwnerMark::~ioOwnerMark
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GioOwnerMark@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioOwnerMark@@UAEPAXI@Z PROC				; ioOwnerMark::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioOwnerMark@@6B@
  0000c	e8 00 00 00 00	 call	 ?ClearResource@ioOwnerMark@@AAEXXZ ; ioOwnerMark::ClearResource
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 07		 je	 SHORT $LN1@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001d	59		 pop	 ecx
$LN1@scalar:
  0001e	8b c6		 mov	 eax, esi
  00020	5e		 pop	 esi
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??_GioOwnerMark@@UAEPAXI@Z ENDP				; ioOwnerMark::`scalar deleting destructor'
_TEXT	ENDS
END
