; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\GUI\IDChangeWnd.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_7IDChangeWnd@@6B@				; IDChangeWnd::`vftable'
PUBLIC	??0IDChangeWnd@@QAE@XZ				; IDChangeWnd::IDChangeWnd
PUBLIC	??_R4IDChangeWnd@@6B@				; IDChangeWnd::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIDChangeWnd@@@8				; IDChangeWnd `RTTI Type Descriptor'
PUBLIC	??_R3IDChangeWnd@@8				; IDChangeWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IDChangeWnd@@8				; IDChangeWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IDChangeWnd@@8			; IDChangeWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioWnd@@8				; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioWnd@@@8				; ioWnd `RTTI Type Descriptor'
PUBLIC	??_R3ioWnd@@8					; ioWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioWnd@@8					; ioWnd::`RTTI Base Class Array'
PUBLIC	?AddRenderImage@IDChangeWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z ; IDChangeWnd::AddRenderImage
PUBLIC	?OnRender@IDChangeWnd@@MAEXXZ			; IDChangeWnd::OnRender
PUBLIC	?OnProcess@IDChangeWnd@@MAEXM@Z			; IDChangeWnd::OnProcess
PUBLIC	?iwm_command@IDChangeWnd@@UAEXPAVioWnd@@HK@Z	; IDChangeWnd::iwm_command
EXTRN	__imp_??1ioWnd@@UAE@XZ:PROC
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
EXTRN	__imp_??0ioWnd@@QAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z:PROC ; ioWnd::AddRenderFrame
EXTRN	?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z:PROC ; ioWnd::AddTooltipHelp
EXTRN	?ParseExtraInfo@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC ; ioWnd::ParseExtraInfo
EXTRN	?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC ; ioWnd::AddNamedRenderImage
EXTRN	?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z:PROC ; ioWnd::RemoveNamedRenderImage
EXTRN	?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z:PROC ; ioWnd::GetNamedRenderImage
EXTRN	?SetWindowAlpha@ioWnd@@UAEXH@Z:PROC		; ioWnd::SetWindowAlpha
EXTRN	?SetActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetActive
EXTRN	?SetInActive@ioWnd@@UAEXXZ:PROC			; ioWnd::SetInActive
EXTRN	?ClearElementImageList@ioWnd@@UAEXXZ:PROC	; ioWnd::ClearElementImageList
EXTRN	?SetSize@ioWnd@@UAEXHH@Z:PROC			; ioWnd::SetSize
EXTRN	?SetPositionToDefault@ioWnd@@UAEXHH_N0@Z:PROC	; ioWnd::SetPositionToDefault
EXTRN	?IsNeedProcess@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsNeedProcess
EXTRN	?IsCanMouseReaction@ioWnd@@UBE_NXZ:PROC		; ioWnd::IsCanMouseReaction
EXTRN	?AddChild@ioWnd@@UAEXPAV1@@Z:PROC		; ioWnd::AddChild
EXTRN	?DeleteChild@ioWnd@@UAEXK@Z:PROC		; ioWnd::DeleteChild
EXTRN	?DeleteAllChild@ioWnd@@UAEXXZ:PROC		; ioWnd::DeleteAllChild
EXTRN	?OnRenderShowAndHide@ioWnd@@MAE_NXZ:PROC	; ioWnd::OnRenderShowAndHide
EXTRN	?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z:PROC ; ioWnd::OnRenderShowAndHideByDefault
EXTRN	?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByTop
EXTRN	?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z:PROC	; ioWnd::OnRenderShowAndHideByDown
EXTRN	?OnRenderAfterChild@ioWnd@@MAEXXZ:PROC		; ioWnd::OnRenderAfterChild
EXTRN	?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z:PROC	; ioWnd::OnMouseProcess
EXTRN	?CheckFrameReSize@ioWnd@@MAEXHHHH@Z:PROC	; ioWnd::CheckFrameReSize
EXTRN	?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z:PROC ; ioWnd::RenderImageList
EXTRN	?iwm_create@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_create
EXTRN	?iwm_destroy@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_destroy
EXTRN	?iwm_lbuttondown@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_lbuttondown
EXTRN	?iwm_lbuttonup@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_lbuttonup
EXTRN	?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z:PROC ; ioWnd::iwm_lbuttonDBLCLK
EXTRN	?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_rbuttondown
EXTRN	?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_rbuttonup
EXTRN	?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mouseover
EXTRN	?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mousemove
EXTRN	?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z:PROC	; ioWnd::iwm_mouseleave
EXTRN	?iwm_vscroll@ioWnd@@UAEXKH@Z:PROC		; ioWnd::iwm_vscroll
EXTRN	?iwm_wheel@ioWnd@@UAEXH@Z:PROC			; ioWnd::iwm_wheel
EXTRN	?iwm_show@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_show
EXTRN	?iwm_hide@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_hide
EXTRN	?iwm_esc@ioWnd@@UAE_NXZ:PROC			; ioWnd::iwm_esc
EXTRN	?iwm_spacebar@ioWnd@@UAE_NXZ:PROC		; ioWnd::iwm_spacebar
EXTRN	?iwm_gototop@ioWnd@@UAEXXZ:PROC			; ioWnd::iwm_gototop
EXTRN	?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragenter
EXTRN	?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z:PROC ; ioWnd::iwm_dragover
EXTRN	?iwm_dragleave@ioWnd@@UAEXXZ:PROC		; ioWnd::iwm_dragleave
EXTRN	?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z:PROC ; ioWnd::iwm_dropitem
EXTRN	?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z:PROC ; ioWnd::iwm_dropdone
EXTRN	?IsEXType@ioWnd@@UBE_NXZ:PROC			; ioWnd::IsEXType
EXTRN	?GetWndType@ioWnd@@UBEKXZ:PROC			; ioWnd::GetWndType
EXTRN	?RenderWnd@ioWnd@@UAEXXZ:PROC			; ioWnd::RenderWnd
EXTRN	?SetIDEX@ioWnd@@UAEXAAK_N@Z:PROC		; ioWnd::SetIDEX
EXTRN	?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC	; ioWnd::ParseXML
EXTRN	?GetHeaderFileName@ioWnd@@UAEPBDXZ:PROC		; ioWnd::GetHeaderFileName
EXTRN	?GetTemplateName@ioWnd@@UAEPBDXZ:PROC		; ioWnd::GetTemplateName
EXTRN	?GetDefClassName@ioWnd@@UBEPBDXZ:PROC		; ioWnd::GetDefClassName
EXTRN	?_Clone@ioWnd@@UAEPAV1@XZ:PROC			; ioWnd::_Clone
EXTRN	?Copy@ioWnd@@UAEXPAV1@@Z:PROC			; ioWnd::Copy
EXTRN	?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z:PROC	; ioWnd::Save
EXTRN	?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z:PROC ; ioWnd::SetSaveData
EXTRN	?SetPosX@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosX
EXTRN	?SetPosY@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetPosY
EXTRN	?SetWidth@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetWidth
EXTRN	?SetHeight@ioWnd@@UAEXH@Z:PROC			; ioWnd::SetHeight
EXTRN	?GetNumFixedRenderFrame@ioWnd@@UBEHXZ:PROC	; ioWnd::GetNumFixedRenderFrame
EXTRN	?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z:PROC	; ioWnd::GetFixedRenderFrameType
EXTRN	?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioWnd::GetRenderFrame
EXTRN	?GetNumFixedRenderImage@ioWnd@@UBEHXZ:PROC	; ioWnd::GetNumFixedRenderImage
EXTRN	?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z:PROC	; ioWnd::GetFixedRenderImageType
EXTRN	?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z:PROC ; ioWnd::GetRenderImage
EXTRN	?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z:PROC ; ioWnd::AddEffect
EXTRN	?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z:PROC ; ioWnd::GetEffect
EXTRN	??_EIDChangeWnd@@UAEPAXI@Z:PROC			; IDChangeWnd::`vector deleting destructor'
;	COMDAT ??_R2ioWnd@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\idchangewnd.cpp
rdata$r	SEGMENT
??_R2ioWnd@@8 DD FLAT:??_R1A@?0A@EA@ioWnd@@8		; ioWnd::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioWnd@@8
rdata$r	SEGMENT
??_R3ioWnd@@8 DD 00H					; ioWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioWnd@@@8
_DATA	SEGMENT
??_R0?AVioWnd@@@8 DD FLAT:??_7type_info@@6B@		; ioWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioWnd@@8 DD FLAT:??_R0?AVioWnd@@@8	; ioWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IDChangeWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IDChangeWnd@@8 DD FLAT:??_R0?AVIDChangeWnd@@@8 ; IDChangeWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDChangeWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2IDChangeWnd@@8
rdata$r	SEGMENT
??_R2IDChangeWnd@@8 DD FLAT:??_R1A@?0A@EA@IDChangeWnd@@8 ; IDChangeWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWnd@@8
rdata$r	ENDS
;	COMDAT ??_R3IDChangeWnd@@8
rdata$r	SEGMENT
??_R3IDChangeWnd@@8 DD 00H				; IDChangeWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IDChangeWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIDChangeWnd@@@8
_DATA	SEGMENT
??_R0?AVIDChangeWnd@@@8 DD FLAT:??_7type_info@@6B@	; IDChangeWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIDChangeWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R4IDChangeWnd@@6B@
rdata$r	SEGMENT
??_R4IDChangeWnd@@6B@ DD 00H				; IDChangeWnd::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIDChangeWnd@@@8
	DD	FLAT:??_R3IDChangeWnd@@8
rdata$r	ENDS
;	COMDAT ??_7IDChangeWnd@@6B@
CONST	SEGMENT
??_7IDChangeWnd@@6B@ DD FLAT:??_R4IDChangeWnd@@6B@	; IDChangeWnd::`vftable'
	DD	FLAT:?AddRenderFrame@ioWnd@@UAEXABVioHashString@@PAVioUIRenderFrame@@@Z
	DD	FLAT:?AddRenderImage@IDChangeWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?AddTooltipHelp@ioWnd@@UAEXABVioHashString@@00@Z
	DD	FLAT:?ParseExtraInfo@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?AddNamedRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
	DD	FLAT:?RemoveNamedRenderImage@ioWnd@@UAEXABVioHashString@@@Z
	DD	FLAT:?GetNamedRenderImage@ioWnd@@UBEPAVioUIRenderImage@@ABVioHashString@@@Z
	DD	FLAT:?SetWindowAlpha@ioWnd@@UAEXH@Z
	DD	FLAT:?SetActive@ioWnd@@UAEXXZ
	DD	FLAT:?SetInActive@ioWnd@@UAEXXZ
	DD	FLAT:?ClearElementImageList@ioWnd@@UAEXXZ
	DD	FLAT:?SetSize@ioWnd@@UAEXHH@Z
	DD	FLAT:?SetPositionToDefault@ioWnd@@UAEXHH_N0@Z
	DD	FLAT:?IsNeedProcess@ioWnd@@UBE_NXZ
	DD	FLAT:?IsCanMouseReaction@ioWnd@@UBE_NXZ
	DD	FLAT:?AddChild@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?DeleteChild@ioWnd@@UAEXK@Z
	DD	FLAT:?DeleteAllChild@ioWnd@@UAEXXZ
	DD	FLAT:?OnRenderShowAndHide@ioWnd@@MAE_NXZ
	DD	FLAT:?OnRenderShowAndHideByDefault@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByTop@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRenderShowAndHideByDown@ioWnd@@MAE_NK@Z
	DD	FLAT:?OnRender@IDChangeWnd@@MAEXXZ
	DD	FLAT:?OnRenderAfterChild@ioWnd@@MAEXXZ
	DD	FLAT:?OnProcess@IDChangeWnd@@MAEXM@Z
	DD	FLAT:?OnMouseProcess@ioWnd@@MAEXABVioMouse@@@Z
	DD	FLAT:?CheckFrameReSize@ioWnd@@MAEXHHHH@Z
	DD	FLAT:?RenderImageList@ioWnd@@MAEXHHW4UIRenderType@@@Z
	DD	FLAT:?iwm_create@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_destroy@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_lbuttondown@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonup@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_lbuttonDBLCLK@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttondown@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_rbuttonup@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_command@IDChangeWnd@@UAEXPAVioWnd@@HK@Z
	DD	FLAT:?iwm_mouseover@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mousemove@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_mouseleave@ioWnd@@UAEXABVioMouse@@@Z
	DD	FLAT:?iwm_vscroll@ioWnd@@UAEXKH@Z
	DD	FLAT:?iwm_wheel@ioWnd@@UAEXH@Z
	DD	FLAT:?iwm_show@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_hide@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_esc@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_spacebar@ioWnd@@UAE_NXZ
	DD	FLAT:?iwm_gototop@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dragenter@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragover@ioWnd@@UAE?AW4IWDropEffect@@PAVioDragItem@@ABVioMouse@@@Z
	DD	FLAT:?iwm_dragleave@ioWnd@@UAEXXZ
	DD	FLAT:?iwm_dropitem@ioWnd@@UAE_NPAVioDragItem@@ABVioMouse@@PAV1@@Z
	DD	FLAT:?iwm_dropdone@ioWnd@@UAEXPAVioDragItem@@PAV1@_N@Z
	DD	FLAT:?IsEXType@ioWnd@@UBE_NXZ
	DD	FLAT:?GetWndType@ioWnd@@UBEKXZ
	DD	FLAT:?RenderWnd@ioWnd@@UAEXXZ
	DD	FLAT:?SetIDEX@ioWnd@@UAEXAAK_N@Z
	DD	FLAT:?ParseXML@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?GetHeaderFileName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetTemplateName@ioWnd@@UAEPBDXZ
	DD	FLAT:?GetDefClassName@ioWnd@@UBEPBDXZ
	DD	FLAT:?_Clone@ioWnd@@UAEPAV1@XZ
	DD	FLAT:?Copy@ioWnd@@UAEXPAV1@@Z
	DD	FLAT:?Save@ioWnd@@UAE_NAAVioXMLElement@@@Z
	DD	FLAT:?SetSaveData@ioWnd@@UAEXAAVioXMLElement@@@Z
	DD	FLAT:?SetPosX@ioWnd@@UAEXH@Z
	DD	FLAT:?SetPosY@ioWnd@@UAEXH@Z
	DD	FLAT:?SetWidth@ioWnd@@UAEXH@Z
	DD	FLAT:?SetHeight@ioWnd@@UAEXH@Z
	DD	FLAT:?GetNumFixedRenderFrame@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderFrameType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderFrame@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?GetNumFixedRenderImage@ioWnd@@UBEHXZ
	DD	FLAT:?GetFixedRenderImageType@ioWnd@@UAEPBDH@Z
	DD	FLAT:?GetRenderImage@ioWnd@@UAEPAPAVioUIRenderElement@@PBD@Z
	DD	FLAT:?AddEffect@ioWnd@@UAEXABVioHashString@@PAVioUI3DEffectRender@@@Z
	DD	FLAT:?GetEffect@ioWnd@@UAEPAVioUI3DEffectRender@@VioHashString@@@Z
	DD	FLAT:??_EIDChangeWnd@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0IDChangeWnd@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0IDChangeWnd@@QAE@XZ$0
__ehfuncinfo$??0IDChangeWnd@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0IDChangeWnd@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0IDChangeWnd@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0IDChangeWnd@@QAE@XZ PROC				; IDChangeWnd::IDChangeWnd, COMDAT
; _this$ = ecx

; 32   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0IDChangeWnd@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioWnd@@QAE@XZ
  00017	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001b	8d 8e 68 01 00
	00		 lea	 ecx, DWORD PTR [esi+360]
  00021	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7IDChangeWnd@@6B@
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ

; 33   : 	m_pIcon = NULL;

  0002d	83 a6 60 01 00
	00 00		 and	 DWORD PTR [esi+352], 0

; 34   : 	m_pBackEffect = NULL;

  00034	83 a6 64 01 00
	00 00		 and	 DWORD PTR [esi+356], 0

; 35   : }

  0003b	8b c6		 mov	 eax, esi
  0003d	e8 00 00 00 00	 call	 __EH_epilog3
  00042	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0IDChangeWnd@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioWnd@@UAE@XZ
__ehhandler$??0IDChangeWnd@@QAE@XZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0IDChangeWnd@@QAE@XZ
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0IDChangeWnd@@QAE@XZ ENDP				; IDChangeWnd::IDChangeWnd
PUBLIC	??1IDChangeWnd@@UAE@XZ				; IDChangeWnd::~IDChangeWnd
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1IDChangeWnd@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1IDChangeWnd@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1IDChangeWnd@@UAE@XZ$1
__ehfuncinfo$??1IDChangeWnd@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1IDChangeWnd@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1IDChangeWnd@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1IDChangeWnd@@UAE@XZ PROC				; IDChangeWnd::~IDChangeWnd, COMDAT
; _this$ = ecx

; 38   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1IDChangeWnd@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7IDChangeWnd@@6B@

; 39   : 	SAFEDELETE( m_pIcon );

  00017	8b 8e 60 01 00
	00		 mov	 ecx, DWORD PTR [esi+352]
  0001d	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00024	85 c9		 test	 ecx, ecx
  00026	74 0e		 je	 SHORT $LN2@IDChangeWn
  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	6a 01		 push	 1
  0002c	ff 50 40	 call	 DWORD PTR [eax+64]
  0002f	83 a6 60 01 00
	00 00		 and	 DWORD PTR [esi+352], 0
$LN2@IDChangeWn:

; 40   : 	SAFEDELETE( m_pBackEffect );

  00036	8b 8e 64 01 00
	00		 mov	 ecx, DWORD PTR [esi+356]
  0003c	85 c9		 test	 ecx, ecx
  0003e	74 0e		 je	 SHORT $LN1@IDChangeWn
  00040	8b 01		 mov	 eax, DWORD PTR [ecx]
  00042	6a 01		 push	 1
  00044	ff 50 40	 call	 DWORD PTR [eax+64]
  00047	83 a6 64 01 00
	00 00		 and	 DWORD PTR [esi+356], 0
$LN1@IDChangeWn:

; 41   : }

  0004e	8d 8e 68 01 00
	00		 lea	 ecx, DWORD PTR [esi+360]
  00054	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  0005e	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00062	8b ce		 mov	 ecx, esi
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioWnd@@UAE@XZ
  0006a	e8 00 00 00 00	 call	 __EH_epilog3
  0006f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1IDChangeWnd@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioWnd@@UAE@XZ
__unwindfunclet$??1IDChangeWnd@@UAE@XZ$1:
  00009	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	81 c1 68 01 00
	00		 add	 ecx, 360		; 00000168H
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??1IDChangeWnd@@UAE@XZ:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1IDChangeWnd@@UAE@XZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1IDChangeWnd@@UAE@XZ ENDP				; IDChangeWnd::~IDChangeWnd
PUBLIC	?GetSingleton@?$Singleton@VioEtcItemManager@@@@SAAAVioEtcItemManager@@XZ ; Singleton<ioEtcItemManager>::GetSingleton
EXTRN	?ms_Singleton@?$Singleton@VioEtcItemManager@@@@1PAVioEtcItemManager@@A:DWORD ; Singleton<ioEtcItemManager>::ms_Singleton
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iosingleton.h
;	COMDAT ?GetSingleton@?$Singleton@VioEtcItemManager@@@@SAAAVioEtcItemManager@@XZ
_TEXT	SEGMENT
?GetSingleton@?$Singleton@VioEtcItemManager@@@@SAAAVioEtcItemManager@@XZ PROC ; Singleton<ioEtcItemManager>::GetSingleton, COMDAT

; 42   : 		assert( ms_Singleton );
; 43   : 		return (*ms_Singleton);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_Singleton@?$Singleton@VioEtcItemManager@@@@1PAVioEtcItemManager@@A ; Singleton<ioEtcItemManager>::ms_Singleton

; 44   : 	}

  00005	c3		 ret	 0
?GetSingleton@?$Singleton@VioEtcItemManager@@@@SAAAVioEtcItemManager@@XZ ENDP ; Singleton<ioEtcItemManager>::GetSingleton
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\strsafe.h
_TEXT	ENDS
;	COMDAT ?StringValidateDestA@@YGJPBDII@Z
_TEXT	SEGMENT
_cchMax$ = 8						; size = 4
?StringValidateDestA@@YGJPBDII@Z PROC			; StringValidateDestA, COMDAT
; _cchDest$ = ecx

; 8721 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 8722 :     HRESULT hr = S_OK;

  00003	33 c0		 xor	 eax, eax

; 8723 : 
; 8724 :     if ((cchDest == 0) || (cchDest > cchMax))

  00005	85 c9		 test	 ecx, ecx
  00007	74 05		 je	 SHORT $LN1@StringVali
  00009	3b 4d 08	 cmp	 ecx, DWORD PTR _cchMax$[ebp]
  0000c	76 05		 jbe	 SHORT $LN2@StringVali
$LN1@StringVali:

; 8725 :     {
; 8726 :         hr = STRSAFE_E_INVALID_PARAMETER;

  0000e	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
$LN2@StringVali:

; 8727 :     }
; 8728 : 
; 8729 :     return hr;
; 8730 : }

  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?StringValidateDestA@@YGJPBDII@Z ENDP			; StringValidateDestA
_TEXT	ENDS
EXTRN	__imp___vsnprintf:PROC
; Function compile flags: /Ogsp
;	COMDAT ?StringVPrintfWorkerA@@YGJPADIPAIPBD0@Z
_TEXT	SEGMENT
_pcchNewDestLength$ = 8					; size = 4
_pszFormat$ = 12					; size = 4
_argList$ = 16						; size = 4
?StringVPrintfWorkerA@@YGJPADIPAIPBD0@Z PROC		; StringVPrintfWorkerA, COMDAT
; _pszDest$ = edi
; _cchDest$ = eax

; 9029 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 9030 :     HRESULT hr = S_OK;
; 9031 :     int iRet;
; 9032 :     size_t cchMax;
; 9033 :     size_t cchNewDestLength = 0;
; 9034 : 
; 9035 :     // leave the last space for the null terminator
; 9036 :     cchMax = cchDest - 1;
; 9037 : 
; 9038 : #if (STRSAFE_USE_SECURE_CRT == 1) && !defined(STRSAFE_LIB_IMPL)
; 9039 :     iRet = _vsnprintf_s(pszDest, cchDest, cchMax, pszFormat, argList);
; 9040 : #else
; 9041 :     #pragma warning(push)
; 9042 :     #pragma warning(disable: __WARNING_BANNED_API_USAGE)// "STRSAFE not included"
; 9043 :     iRet = _vsnprintf(pszDest, cchMax, pszFormat, argList);

  00005	ff 75 10	 push	 DWORD PTR _argList$[ebp]
  00008	8d 70 ff	 lea	 esi, DWORD PTR [eax-1]
  0000b	ff 75 0c	 push	 DWORD PTR _pszFormat$[ebp]
  0000e	33 db		 xor	 ebx, ebx
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___vsnprintf
  00018	83 c4 10	 add	 esp, 16			; 00000010H

; 9044 :     #pragma warning(pop)
; 9045 : #endif
; 9046 :     // ASSERT((iRet < 0) || (((size_t)iRet) <= cchMax));
; 9047 : 
; 9048 :     if ((iRet < 0) || (((size_t)iRet) > cchMax))

  0001b	85 c0		 test	 eax, eax
  0001d	78 0b		 js	 SHORT $LN5@StringVPri
  0001f	3b c6		 cmp	 eax, esi
  00021	77 07		 ja	 SHORT $LN5@StringVPri

; 9058 :     }
; 9059 :     else if (((size_t)iRet) == cchMax)

  00023	75 0f		 jne	 SHORT $LN2@StringVPri

; 9060 :     {
; 9061 :         // need to null terminate the string
; 9062 :         pszDest += cchMax;
; 9063 :         *pszDest = '\0';

  00025	88 1c 3e	 mov	 BYTE PTR [esi+edi], bl

; 9064 : 
; 9065 :         cchNewDestLength = cchMax;
; 9066 :     }
; 9067 :     else

  00028	eb 08		 jmp	 SHORT $LN9@StringVPri
$LN5@StringVPri:

; 9049 :     {
; 9050 :         // need to null terminate the string
; 9051 :         pszDest += cchMax;
; 9052 :         *pszDest = '\0';

  0002a	88 1c 3e	 mov	 BYTE PTR [esi+edi], bl

; 9055 : 
; 9056 :         // we have truncated pszDest
; 9057 :         hr = STRSAFE_E_INSUFFICIENT_BUFFER;

  0002d	bb 7a 00 07 80	 mov	 ebx, -2147024774	; 8007007aH
$LN9@StringVPri:

; 9053 : 
; 9054 :         cchNewDestLength = cchMax;

  00032	8b c6		 mov	 eax, esi
$LN2@StringVPri:

; 9068 :     {
; 9069 :         cchNewDestLength = (size_t)iRet;
; 9070 :     }
; 9071 : 
; 9072 :     if (pcchNewDestLength)

  00034	8b 4d 08	 mov	 ecx, DWORD PTR _pcchNewDestLength$[ebp]
  00037	85 c9		 test	 ecx, ecx
  00039	74 02		 je	 SHORT $LN1@StringVPri

; 9073 :     {
; 9074 :         *pcchNewDestLength = cchNewDestLength;

  0003b	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@StringVPri:
  0003d	5e		 pop	 esi

; 9075 :     }
; 9076 : 
; 9077 :     return hr;

  0003e	8b c3		 mov	 eax, ebx
  00040	5b		 pop	 ebx

; 9078 : }

  00041	5d		 pop	 ebp
  00042	c2 0c 00	 ret	 12			; 0000000cH
?StringVPrintfWorkerA@@YGJPADIPAIPBD0@Z ENDP		; StringVPrintfWorkerA
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
PUBLIC	?GetIconName@ioEtcItem@@QBEABVioHashString@@XZ	; ioEtcItem::GetIconName
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioetcitem.h
;	COMDAT ?GetIconName@ioEtcItem@@QBEABVioHashString@@XZ
_TEXT	SEGMENT
?GetIconName@ioEtcItem@@QBEABVioHashString@@XZ PROC	; ioEtcItem::GetIconName, COMDAT
; _this$ = ecx

; 467  : 	inline const ioHashString& GetIconName() const { return m_IconName; }

  00000	8d 81 60 01 00
	00		 lea	 eax, DWORD PTR [ecx+352]
  00006	c3		 ret	 0
?GetIconName@ioEtcItem@@QBEABVioHashString@@XZ ENDP	; ioEtcItem::GetIconName
_TEXT	ENDS
PUBLIC	?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ	; ioMyInfo::GetPublicID
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomyinfo.h
;	COMDAT ?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ
_TEXT	SEGMENT
?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ PROC	; ioMyInfo::GetPublicID, COMDAT
; _this$ = ecx

; 517  : 	const ioHashString& GetPublicID() const { return m_user_data.m_public_id; }    

  00000	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  00003	c3		 ret	 0
?GetPublicID@ioMyInfo@@QBEABVioHashString@@XZ ENDP	; ioMyInfo::GetPublicID
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GIDChangeWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GIDChangeWnd@@UAEPAXI@Z PROC				; IDChangeWnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1IDChangeWnd@@UAE@XZ	; IDChangeWnd::~IDChangeWnd
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GIDChangeWnd@@UAEPAXI@Z ENDP				; IDChangeWnd::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?SetInfoAndShow@IDChangeWnd@@QAEXABVioHashString@@@Z ; IDChangeWnd::SetInfoAndShow
EXTRN	__imp_?ShowWnd@ioWnd@@QAEXXZ:PROC
EXTRN	__imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z:PROC
EXTRN	__imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ:PROC
EXTRN	?FindEtcItem@ioEtcItemManager@@QAEPAVioEtcItem@@K@Z:PROC ; ioEtcItemManager::FindEtcItem
EXTRN	__imp_?GetLoopSec@ioFrameTimer@@QBEKXZ:PROC
EXTRN	__imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ:PROC
EXTRN	__imp_??4ioHashString@@QAEAAV0@ABV0@@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\idchangewnd.cpp
;	COMDAT ?SetInfoAndShow@IDChangeWnd@@QAEXABVioHashString@@@Z
_TEXT	SEGMENT
_szNewName$ = 8						; size = 4
?SetInfoAndShow@IDChangeWnd@@QAEXABVioHashString@@@Z PROC ; IDChangeWnd::SetInfoAndShow, COMDAT
; _this$ = ecx

; 58   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 59   : 	m_iShutDownCnt = 0;
; 60   : 	m_szNewName = szNewName;

  00005	ff 75 08	 push	 DWORD PTR _szNewName$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	83 a6 78 01 00
	00 00		 and	 DWORD PTR [esi+376], 0
  00011	8d 8e 68 01 00
	00		 lea	 ecx, DWORD PTR [esi+360]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@ABV0@@Z

; 61   : 
; 62   : 	m_iShutDownCnt = 10;

  0001d	c7 86 78 01 00
	00 0a 00 00 00	 mov	 DWORD PTR [esi+376], 10	; 0000000aH

; 63   : 	m_dwCntStartTime = FRAMEGETTIME();

  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  0002d	8b c8		 mov	 ecx, eax
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ

; 64   : 
; 65   : 	SAFEDELETE(m_pIcon);

  00035	8b 8e 60 01 00
	00		 mov	 ecx, DWORD PTR [esi+352]
  0003b	89 86 7c 01 00
	00		 mov	 DWORD PTR [esi+380], eax
  00041	85 c9		 test	 ecx, ecx
  00043	74 0e		 je	 SHORT $LN2@SetInfoAnd
  00045	8b 01		 mov	 eax, DWORD PTR [ecx]
  00047	6a 01		 push	 1
  00049	ff 50 40	 call	 DWORD PTR [eax+64]
  0004c	83 a6 60 01 00
	00 00		 and	 DWORD PTR [esi+352], 0
$LN2@SetInfoAnd:

; 66   : 	ioEtcItem *pItem = g_EtcItemMgr.FindEtcItem( ioEtcItem::EIT_ETC_CHANGE_ID );

  00053	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_Singleton@?$Singleton@VioEtcItemManager@@@@1PAVioEtcItemManager@@A ; Singleton<ioEtcItemManager>::ms_Singleton
  00059	68 c4 c6 2d 00	 push	 3000004			; 002dc6c4H
  0005e	e8 00 00 00 00	 call	 ?FindEtcItem@ioEtcItemManager@@QAEPAVioEtcItem@@K@Z ; ioEtcItemManager::FindEtcItem

; 67   : 	if( pItem )

  00063	85 c0		 test	 eax, eax
  00065	74 1c		 je	 SHORT $LN1@SetInfoAnd

; 68   : 	{
; 69   : 		m_pIcon = g_UIImageSetMgr.CreateImageByFullName( pItem->GetIconName() );

  00067	05 60 01 00 00	 add	 eax, 352		; 00000160H
  0006c	6a 00		 push	 0
  0006e	50		 push	 eax
  0006f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioUIImageSetManager@@SAAAV1@XZ
  00075	8b c8		 mov	 ecx, eax
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CreateImageByFullName@ioUIImageSetManager@@QAEPAVioUIRenderImage@@ABVioHashString@@_N@Z
  0007d	89 86 60 01 00
	00		 mov	 DWORD PTR [esi+352], eax
$LN1@SetInfoAnd:

; 70   : 	}
; 71   : 
; 72   : 	ShowWnd();

  00083	8b ce		 mov	 ecx, esi
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ShowWnd@ioWnd@@QAEXXZ
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi

; 73   : }

  0008d	5d		 pop	 ebp
  0008e	c2 04 00	 ret	 4
?SetInfoAndShow@IDChangeWnd@@QAEXABVioHashString@@@Z ENDP ; IDChangeWnd::SetInfoAndShow
_TEXT	ENDS
PUBLIC	__real@3f266666
PUBLIC	__real@3f59999a
PUBLIC	??_C@_0BG@GDDHBBMG@IDChangeWnd?3?3OnRender?$AA@	; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
EXTRN	?GetSingleton@ioMyInfo@@SAAAV1@XZ:PROC		; ioMyInfo::GetSingleton
EXTRN	__imp_?PrintText@ioFontManager@@QAEXMMMPBD0@Z:PROC
EXTRN	__imp_?c_str@ioHashString@@QBEPBDXZ:PROC
EXTRN	__imp_?PrintText@ioFontManager@@QAEXMMMPBDH@Z:PROC
EXTRN	__imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ:PROC
EXTRN	__imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z:PROC
EXTRN	__imp_?GetSingleton@ioStringManager@@SAAAV1@XZ:PROC
EXTRN	__imp_?SetTextColor@ioFontManager@@QAEXK@Z:PROC
EXTRN	__imp_?SetBkColor@ioFontManager@@QAEXHHH@Z:PROC
EXTRN	__imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z:PROC
EXTRN	__imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z:PROC
EXTRN	__imp_?GetSingleton@ioFontManager@@SAAAV1@XZ:PROC
EXTRN	__imp_?GetDerivedPosY@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?GetDerivedPosX@ioWnd@@QBEHXZ:PROC
EXTRN	__imp_?OnRender@ioWnd@@MAEXXZ:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@3f266666
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iomyinfo.h
CONST	SEGMENT
__real@3f266666 DD 03f266666r			; 0.65
CONST	ENDS
;	COMDAT __real@3f59999a
CONST	SEGMENT
__real@3f59999a DD 03f59999ar			; 0.85
CONST	ENDS
;	COMDAT ??_C@_0BG@GDDHBBMG@IDChangeWnd?3?3OnRender?$AA@
CONST	SEGMENT
??_C@_0BG@GDDHBBMG@IDChangeWnd?3?3OnRender?$AA@ DB 'IDChangeWnd::OnRender'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\idchangewnd.cpp
CONST	ENDS
;	COMDAT ?OnRender@IDChangeWnd@@MAEXXZ
_TEXT	SEGMENT
tv501 = -20						; size = 4
tv452 = -20						; size = 4
_this$ = -16						; size = 4
tv459 = -12						; size = 4
_iXPos$ = -12						; size = 4
tv454 = -8						; size = 4
tv427 = -8						; size = 4
tv456 = -4						; size = 4
_iYPos$ = -4						; size = 4
?OnRender@IDChangeWnd@@MAEXXZ PROC			; IDChangeWnd::OnRender, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi
  0000b	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 106  : 	ioWnd::OnRender();

  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?OnRender@ioWnd@@MAEXXZ

; 107  : 
; 108  : 	int iXPos = GetDerivedPosX();

  00014	8b ce		 mov	 ecx, esi
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosX@ioWnd@@QBEHXZ
  0001c	8b d8		 mov	 ebx, eax

; 109  : 	int iYPos = GetDerivedPosY();

  0001e	8b ce		 mov	 ecx, esi
  00020	89 5d f4	 mov	 DWORD PTR _iXPos$[ebp], ebx
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetDerivedPosY@ioWnd@@QBEHXZ

; 110  : 
; 111  : 	enum
; 112  : 	{
; 113  : 		ICON_X	= 125,
; 114  : 		ICON_Y	= 98,
; 115  : 
; 116  : 		TITLE_X	= 125,
; 117  : 		TITLE_Y	= 146,
; 118  : 
; 119  : 		DESC_X	= 125,
; 120  : 		DESC_Y	= 169,
; 121  : 
; 122  : 		LEFT_X	= 27,
; 123  : 		LEFT_Y	= 240,
; 124  : 
; 125  : 		RIGHT_X	= 227,
; 126  : 		RIGHT_Y	= 240,
; 127  : 	};
; 128  : 
; 129  : 	if( m_pBackEffect )

  00029	33 ff		 xor	 edi, edi
  0002b	8b d0		 mov	 edx, eax
  0002d	89 55 fc	 mov	 DWORD PTR _iYPos$[ebp], edx
  00030	39 be 64 01 00
	00		 cmp	 DWORD PTR [esi+356], edi
  00036	74 37		 je	 SHORT $LN2@OnRender

; 130  : 		m_pBackEffect->Render( iXPos+ICON_X, iYPos+ICON_Y, UI_RENDER_MULTIPLY );

  00038	8b 86 64 01 00
	00		 mov	 eax, DWORD PTR [esi+356]
  0003e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00040	57		 push	 edi
  00041	57		 push	 edi
  00042	57		 push	 edi
  00043	6a 08		 push	 8
  00045	51		 push	 ecx
  00046	83 c2 62	 add	 edx, 98			; 00000062H
  00049	0f 57 c0	 xorps	 xmm0, xmm0
  0004c	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00050	51		 push	 ecx
  00051	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00057	8d 53 7d	 lea	 edx, DWORD PTR [ebx+125]
  0005a	0f 57 c0	 xorps	 xmm0, xmm0
  0005d	8b c8		 mov	 ecx, eax
  0005f	8b 00		 mov	 eax, DWORD PTR [eax]
  00061	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00065	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006a	ff 10		 call	 DWORD PTR [eax]
  0006c	8b 55 fc	 mov	 edx, DWORD PTR _iYPos$[ebp]
$LN2@OnRender:

; 131  : 
; 132  : 	if( m_pIcon )

  0006f	39 be 60 01 00
	00		 cmp	 DWORD PTR [esi+352], edi
  00075	74 2f		 je	 SHORT $LN1@OnRender

; 133  : 		m_pIcon->Render( iXPos+ICON_X, iYPos+ICON_Y );

  00077	8b 8e 60 01 00
	00		 mov	 ecx, DWORD PTR [esi+352]
  0007d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0007f	57		 push	 edi
  00080	57		 push	 edi
  00081	57		 push	 edi
  00082	57		 push	 edi
  00083	83 c2 62	 add	 edx, 98			; 00000062H
  00086	0f 57 c0	 xorps	 xmm0, xmm0
  00089	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0008d	51		 push	 ecx
  0008e	51		 push	 ecx
  0008f	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00095	8d 53 7d	 lea	 edx, DWORD PTR [ebx+125]
  00098	0f 57 c0	 xorps	 xmm0, xmm0
  0009b	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0009f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a4	ff 10		 call	 DWORD PTR [eax]
$LN1@OnRender:

; 134  : 
; 135  : 	//
; 136  : 	g_FontMgr.SetTextStyle( TS_NORMAL );

  000a6	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?GetSingleton@ioFontManager@@SAAAV1@XZ
  000ac	57		 push	 edi
  000ad	ff d6		 call	 esi
  000af	8b c8		 mov	 ecx, eax
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z

; 137  : 	g_FontMgr.SetAlignType( TAT_CENTER );

  000b7	6a 01		 push	 1
  000b9	ff d6		 call	 esi
  000bb	8b c8		 mov	 ecx, eax
  000bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 138  : 	g_FontMgr.SetBkColor( 0, 0, 0 );

  000c3	57		 push	 edi
  000c4	57		 push	 edi
  000c5	57		 push	 edi
  000c6	ff d6		 call	 esi
  000c8	8b c8		 mov	 ecx, eax
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetBkColor@ioFontManager@@QAEXHHH@Z

; 139  : 	g_FontMgr.SetTextColor( TCT_DEFAULT_GREEN );

  000d0	68 22 72 11 ff	 push	 -15633886		; ff117222H
  000d5	ff d6		 call	 esi
  000d7	8b c8		 mov	 ecx, eax
  000d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 140  : 	g_FontMgr.PrintText( iXPos+TITLE_X, iYPos+TITLE_Y, FONT_SIZE_17, STR(1) );

  000df	57		 push	 edi
  000e0	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetSingleton@ioStringManager@@SAAAV1@XZ
  000e6	6a 01		 push	 1
  000e8	83 c3 7d	 add	 ebx, 125		; 0000007dH
  000eb	0f 57 c0	 xorps	 xmm0, xmm0
  000ee	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  000f3	f3 0f 2a c3	 cvtsi2ss xmm0, ebx
  000f7	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GDDHBBMG@IDChangeWnd?3?3OnRender?$AA@
  000fc	f3 0f 11 45 f8	 movss	 DWORD PTR tv427[ebp], xmm0
  00101	ff d7		 call	 edi
  00103	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_?GetString@ioStringManager@@QAEPADPBD0HW4FileNamePrefix@1@@Z
  00109	8b c8		 mov	 ecx, eax
  0010b	ff d3		 call	 ebx
  0010d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f59999a
  00115	50		 push	 eax
  00116	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  00119	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0011c	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00122	05 92 00 00 00	 add	 eax, 146		; 00000092H
  00127	0f 57 c0	 xorps	 xmm0, xmm0
  0012a	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0012e	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00134	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv427[ebp]
  00139	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0013e	ff d6		 call	 esi
  00140	50		 push	 eax
  00141	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  00147	83 c4 14	 add	 esp, 20			; 00000014H

; 141  : 
; 142  : 	//
; 143  : 	g_FontMgr.SetTextStyle( TS_NORMAL );

  0014a	6a 00		 push	 0
  0014c	ff d6		 call	 esi
  0014e	8b c8		 mov	 ecx, eax
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z

; 144  : 	g_FontMgr.SetAlignType( TAT_CENTER );

  00156	6a 01		 push	 1
  00158	ff d6		 call	 esi
  0015a	8b c8		 mov	 ecx, eax
  0015c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 145  : 	g_FontMgr.SetBkColor( 0, 0, 0 );

  00162	33 c0		 xor	 eax, eax
  00164	50		 push	 eax
  00165	50		 push	 eax
  00166	50		 push	 eax
  00167	ff d6		 call	 esi
  00169	8b c8		 mov	 ecx, eax
  0016b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetBkColor@ioFontManager@@QAEXHHH@Z

; 146  : 	g_FontMgr.SetTextColor( TCT_DEFAULT_DARKGRAY );

  00171	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  00176	ff d6		 call	 esi
  00178	8b c8		 mov	 ecx, eax
  0017a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 147  : 	g_FontMgr.PrintText( iXPos+DESC_X, iYPos+DESC_Y, FONT_SIZE_13, STR(2) );

  00180	6a 00		 push	 0
  00182	6a 02		 push	 2
  00184	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00189	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GDDHBBMG@IDChangeWnd?3?3OnRender?$AA@
  0018e	ff d7		 call	 edi
  00190	8b c8		 mov	 ecx, eax
  00192	ff d3		 call	 ebx
  00194	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  0019c	50		 push	 eax
  0019d	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  001a0	83 ec 0c	 sub	 esp, 12			; 0000000cH
  001a3	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  001a9	05 a9 00 00 00	 add	 eax, 169		; 000000a9H
  001ae	0f 57 c0	 xorps	 xmm0, xmm0
  001b1	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  001b5	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  001bb	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv427[ebp]
  001c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c5	ff d6		 call	 esi
  001c7	50		 push	 eax
  001c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  001ce	83 c4 14	 add	 esp, 20			; 00000014H

; 148  : 
; 149  : 	g_FontMgr.PrintText( iXPos+DESC_X, iYPos+DESC_Y+20, FONT_SIZE_13, STR(3) );

  001d1	6a 00		 push	 0
  001d3	6a 03		 push	 3
  001d5	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  001da	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GDDHBBMG@IDChangeWnd?3?3OnRender?$AA@
  001df	ff d7		 call	 edi
  001e1	8b c8		 mov	 ecx, eax
  001e3	ff d3		 call	 ebx
  001e5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  001ed	50		 push	 eax
  001ee	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  001f1	83 ec 0c	 sub	 esp, 12			; 0000000cH
  001f4	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  001fa	05 bd 00 00 00	 add	 eax, 189		; 000000bdH
  001ff	0f 57 c0	 xorps	 xmm0, xmm0
  00202	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00206	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0020c	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv427[ebp]
  00211	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00216	ff d6		 call	 esi
  00218	50		 push	 eax
  00219	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  0021f	83 c4 14	 add	 esp, 20			; 00000014H

; 150  : 
; 151  : 	g_FontMgr.SetTextColor( TCT_DEFAULT_RED );

  00222	68 00 16 b9 ff	 push	 -4647424		; ffb91600H
  00227	ff d6		 call	 esi
  00229	8b c8		 mov	 ecx, eax
  0022b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 152  : 	g_FontMgr.PrintText( iXPos+DESC_X, iYPos+DESC_Y+40, FONT_SIZE_13, STR(4), m_iShutDownCnt );

  00231	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00234	ff b0 78 01 00
	00		 push	 DWORD PTR [eax+376]
  0023a	6a 00		 push	 0
  0023c	6a 04		 push	 4
  0023e	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00243	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GDDHBBMG@IDChangeWnd?3?3OnRender?$AA@
  00248	ff d7		 call	 edi
  0024a	8b c8		 mov	 ecx, eax
  0024c	ff d3		 call	 ebx
  0024e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  00256	50		 push	 eax
  00257	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  0025a	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0025d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00263	05 d1 00 00 00	 add	 eax, 209		; 000000d1H
  00268	0f 57 c0	 xorps	 xmm0, xmm0
  0026b	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0026f	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00275	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv427[ebp]
  0027a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0027f	ff d6		 call	 esi
  00281	8b c8		 mov	 ecx, eax
  00283	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAEXMMMPBDH@Z

; 153  : 
; 154  : 
; 155  : 	//
; 156  : 	g_FontMgr.SetTextStyle( TS_NORMAL );

  00289	6a 00		 push	 0
  0028b	ff d6		 call	 esi
  0028d	8b c8		 mov	 ecx, eax
  0028f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z

; 157  : 	g_FontMgr.SetAlignType( TAT_LEFT );

  00295	6a 00		 push	 0
  00297	ff d6		 call	 esi
  00299	8b c8		 mov	 ecx, eax
  0029b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 158  : 	g_FontMgr.SetBkColor( 0, 0, 0 );

  002a1	33 c0		 xor	 eax, eax
  002a3	50		 push	 eax
  002a4	50		 push	 eax
  002a5	50		 push	 eax
  002a6	ff d6		 call	 esi
  002a8	8b c8		 mov	 ecx, eax
  002aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetBkColor@ioFontManager@@QAEXHHH@Z

; 159  : 	g_FontMgr.SetTextColor( TCT_DEFAULT_DARKGRAY );

  002b0	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  002b5	ff d6		 call	 esi
  002b7	8b c8		 mov	 ecx, eax
  002b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 160  : 	g_FontMgr.PrintText( iXPos+LEFT_X, iYPos+LEFT_Y, FONT_SIZE_13, STR(5) );

  002bf	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  002c2	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  002c7	0f 57 c0	 xorps	 xmm0, xmm0
  002ca	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  002ce	8b 45 f4	 mov	 eax, DWORD PTR _iXPos$[ebp]
  002d1	f3 0f 11 45 ec	 movss	 DWORD PTR tv452[ebp], xmm0
  002d6	6a 00		 push	 0
  002d8	6a 05		 push	 5
  002da	83 c0 1b	 add	 eax, 27			; 0000001bH
  002dd	0f 57 c0	 xorps	 xmm0, xmm0
  002e0	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  002e5	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  002e9	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GDDHBBMG@IDChangeWnd?3?3OnRender?$AA@
  002ee	f3 0f 11 45 f8	 movss	 DWORD PTR tv454[ebp], xmm0
  002f3	ff d7		 call	 edi
  002f5	8b c8		 mov	 ecx, eax
  002f7	ff d3		 call	 ebx
  002f9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  00301	50		 push	 eax
  00302	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00305	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0030b	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR tv452[ebp]
  00310	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00316	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv454[ebp]
  0031b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00320	ff d6		 call	 esi
  00322	50		 push	 eax
  00323	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  00329	83 c4 14	 add	 esp, 20			; 00000014H

; 161  : 
; 162  : 	g_FontMgr.SetTextColor( TCT_DEFAULT_LIGHTGRAY );

  0032c	68 a7 a7 a7 ff	 push	 -5789785		; ffa7a7a7H
  00331	ff d6		 call	 esi
  00333	8b c8		 mov	 ecx, eax
  00335	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 163  : 	g_FontMgr.PrintText( iXPos+LEFT_X, iYPos+LEFT_Y+21, FONT_SIZE_13, STR(6) );

  0033b	8b 45 fc	 mov	 eax, DWORD PTR _iYPos$[ebp]
  0033e	6a 00		 push	 0
  00340	6a 06		 push	 6
  00342	05 05 01 00 00	 add	 eax, 261		; 00000105H
  00347	0f 57 c0	 xorps	 xmm0, xmm0
  0034a	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0034f	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00353	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GDDHBBMG@IDChangeWnd?3?3OnRender?$AA@
  00358	f3 0f 11 45 fc	 movss	 DWORD PTR tv456[ebp], xmm0
  0035d	ff d7		 call	 edi
  0035f	8b c8		 mov	 ecx, eax
  00361	ff d3		 call	 ebx
  00363	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  0036b	50		 push	 eax
  0036c	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0036f	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00375	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR tv456[ebp]
  0037a	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00380	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv454[ebp]
  00385	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0038a	ff d6		 call	 esi
  0038c	50		 push	 eax
  0038d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAAXMMMPBDZZ
  00393	83 c4 14	 add	 esp, 20			; 00000014H

; 164  : 
; 165  : 	//
; 166  : 	g_FontMgr.SetTextStyle( TS_NORMAL );

  00396	6a 00		 push	 0
  00398	ff d6		 call	 esi
  0039a	8b c8		 mov	 ecx, eax
  0039c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextStyle@ioFontManager@@QAEXW4TextStyle@@@Z

; 167  : 	g_FontMgr.SetAlignType( TAT_RIGHT );

  003a2	6a 02		 push	 2
  003a4	ff d6		 call	 esi
  003a6	8b c8		 mov	 ecx, eax
  003a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetAlignType@ioFontManager@@QAEXW4TextAlignType@@@Z

; 168  : 	g_FontMgr.SetBkColor( 0, 0, 0 );

  003ae	33 c0		 xor	 eax, eax
  003b0	50		 push	 eax
  003b1	50		 push	 eax
  003b2	50		 push	 eax
  003b3	ff d6		 call	 esi
  003b5	8b c8		 mov	 ecx, eax
  003b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetBkColor@ioFontManager@@QAEXHHH@Z

; 169  : 	g_FontMgr.SetTextColor( TCT_DEFAULT_DARKGRAY );

  003bd	68 3a 3a 3a ff	 push	 -12961222		; ff3a3a3aH
  003c2	ff d6		 call	 esi
  003c4	8b c8		 mov	 ecx, eax
  003c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 170  : 	g_FontMgr.PrintText( iXPos+RIGHT_X, iYPos+RIGHT_Y, FONT_SIZE_13, STR(7), m_szNewName.c_str() );

  003cc	8b 45 f4	 mov	 eax, DWORD PTR _iXPos$[ebp]
  003cf	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  003d2	05 e3 00 00 00	 add	 eax, 227		; 000000e3H
  003d7	0f 57 c0	 xorps	 xmm0, xmm0
  003da	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  003de	81 c1 68 01 00
	00		 add	 ecx, 360		; 00000168H
  003e4	f3 0f 11 45 f4	 movss	 DWORD PTR tv459[ebp], xmm0
  003e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  003ef	50		 push	 eax
  003f0	6a 00		 push	 0
  003f2	6a 07		 push	 7
  003f4	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  003f9	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GDDHBBMG@IDChangeWnd?3?3OnRender?$AA@
  003fe	ff d7		 call	 edi
  00400	8b c8		 mov	 ecx, eax
  00402	ff d3		 call	 ebx
  00404	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  0040c	50		 push	 eax
  0040d	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00410	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00416	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR tv452[ebp]
  0041b	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00421	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR tv459[ebp]
  00426	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0042b	ff d6		 call	 esi
  0042d	8b c8		 mov	 ecx, eax
  0042f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAEXMMMPBD0@Z

; 171  : 
; 172  : 	g_FontMgr.SetTextColor( TCT_DEFAULT_LIGHTGRAY );

  00435	68 a7 a7 a7 ff	 push	 -5789785		; ffa7a7a7H
  0043a	ff d6		 call	 esi
  0043c	8b c8		 mov	 ecx, eax
  0043e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTextColor@ioFontManager@@QAEXK@Z

; 173  : 	g_FontMgr.PrintText( iXPos+RIGHT_X, iYPos+RIGHT_Y+21, FONT_SIZE_13, STR(8), g_MyInfo.GetPublicID().c_str() );

  00444	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  00449	8d 48 1c	 lea	 ecx, DWORD PTR [eax+28]
  0044c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  00452	50		 push	 eax
  00453	6a 00		 push	 0
  00455	6a 08		 push	 8
  00457	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0045c	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GDDHBBMG@IDChangeWnd?3?3OnRender?$AA@
  00461	ff d7		 call	 edi
  00463	8b c8		 mov	 ecx, eax
  00465	ff d3		 call	 ebx
  00467	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  0046f	50		 push	 eax
  00470	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00473	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00479	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR tv456[ebp]
  0047e	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00484	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR tv459[ebp]
  00489	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0048e	ff d6		 call	 esi
  00490	8b c8		 mov	 ecx, eax
  00492	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintText@ioFontManager@@QAEXMMMPBD0@Z
  00498	5f		 pop	 edi
  00499	5e		 pop	 esi
  0049a	5b		 pop	 ebx

; 174  : }

  0049b	c9		 leave
  0049c	c3		 ret	 0
?OnRender@IDChangeWnd@@MAEXXZ ENDP			; IDChangeWnd::OnRender
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$?8$0M@@@YA_NABVioHashString@@AAY0M@$$CBD@Z	; operator==<12>
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\iohashstring.h
;	COMDAT ??$?8$0M@@@YA_NABVioHashString@@AAY0M@$$CBD@Z
_TEXT	SEGMENT
__t$ = -20						; size = 12
__$ArrayPad$ = -4					; size = 4
_lhs$ = 8						; size = 4
_t$ = 12						; size = 4
??$?8$0M@@@YA_NABVioHashString@@AAY0M@$$CBD@Z PROC	; operator==<12>, COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]

; 147  : 	_ENCSTR(t, _t); return ( strcmp( lhs.c_str(), _t ) == 0 );

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	8b 7d 08	 mov	 edi, DWORD PTR _lhs$[ebp]
  0001a	84 d2		 test	 dl, dl
  0001c	0f 84 32 01 00
	00		 je	 $LN96@operator
  00022	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00025	88 55 ec	 mov	 BYTE PTR __t$[ebp], dl
  00028	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0002b	84 d2		 test	 dl, dl
  0002d	0f 84 1b 01 00
	00		 je	 $LN95@operator
  00033	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00036	88 55 ed	 mov	 BYTE PTR __t$[ebp+1], dl
  00039	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003c	84 d2		 test	 dl, dl
  0003e	0f 84 04 01 00
	00		 je	 $LN94@operator
  00044	b1 eb		 mov	 cl, -21			; ffffffebH
  00046	32 d1		 xor	 dl, cl
  00048	88 55 ee	 mov	 BYTE PTR __t$[ebp+2], dl
  0004b	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004e	84 d2		 test	 dl, dl
  00050	0f 84 ec 00 00
	00		 je	 $LN93@operator
  00056	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00059	88 55 ef	 mov	 BYTE PTR __t$[ebp+3], dl
  0005c	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005f	84 d2		 test	 dl, dl
  00061	0f 84 d5 00 00
	00		 je	 $LN92@operator
  00067	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0006a	88 55 f0	 mov	 BYTE PTR __t$[ebp+4], dl
  0006d	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00070	84 d2		 test	 dl, dl
  00072	0f 84 be 00 00
	00		 je	 $LN91@operator
  00078	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0007b	88 55 f1	 mov	 BYTE PTR __t$[ebp+5], dl
  0007e	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00081	84 d2		 test	 dl, dl
  00083	0f 84 a8 00 00
	00		 je	 $LN90@operator
  00089	32 d1		 xor	 dl, cl
  0008b	88 55 f2	 mov	 BYTE PTR __t$[ebp+6], dl
  0008e	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00091	84 d2		 test	 dl, dl
  00093	0f 84 92 00 00
	00		 je	 $LN89@operator
  00099	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009c	88 55 f3	 mov	 BYTE PTR __t$[ebp+7], dl
  0009f	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a2	84 d2		 test	 dl, dl
  000a4	74 7f		 je	 SHORT $LN88@operator
  000a6	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a9	88 55 f4	 mov	 BYTE PTR __t$[ebp+8], dl
  000ac	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000af	84 d2		 test	 dl, dl
  000b1	74 6c		 je	 SHORT $LN87@operator
  000b3	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b6	88 55 f5	 mov	 BYTE PTR __t$[ebp+9], dl
  000b9	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000bc	84 d2		 test	 dl, dl
  000be	74 5a		 je	 SHORT $LN86@operator
  000c0	32 d1		 xor	 dl, cl
  000c2	80 78 0b 00	 cmp	 BYTE PTR [eax+11], 0
  000c6	88 55 f6	 mov	 BYTE PTR __t$[ebp+10], dl
  000c9	0f 84 89 00 00
	00		 je	 $LN1@operator
  000cf	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000d2	84 d2		 test	 dl, dl
  000d4	74 3e		 je	 SHORT $LN84@operator
  000d6	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000d9	88 55 f8	 mov	 BYTE PTR __t$[ebp+12], dl
  000dc	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000df	84 d2		 test	 dl, dl
  000e1	74 2b		 je	 SHORT $LN83@operator
  000e3	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000e6	88 55 f9	 mov	 BYTE PTR __t$[ebp+13], dl
  000e9	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000ec	84 d2		 test	 dl, dl
  000ee	74 19		 je	 SHORT $LN82@operator
  000f0	8a 40 0f	 mov	 al, BYTE PTR [eax+15]
  000f3	32 d1		 xor	 dl, cl
  000f5	88 55 fa	 mov	 BYTE PTR __t$[ebp+14], dl
  000f8	84 c0		 test	 al, al
  000fa	74 07		 je	 SHORT $LN81@operator
  000fc	34 ea		 xor	 al, -22			; ffffffeaH
  000fe	88 45 fb	 mov	 BYTE PTR __t$[ebp+15], al
  00101	eb 55		 jmp	 SHORT $LN1@operator
$LN81@operator:
  00103	c6 45 fb ea	 mov	 BYTE PTR __t$[ebp+15], -22 ; ffffffeaH
  00107	eb 4f		 jmp	 SHORT $LN1@operator
$LN82@operator:
  00109	88 4d fa	 mov	 BYTE PTR __t$[ebp+14], cl
  0010c	eb 4a		 jmp	 SHORT $LN1@operator
$LN83@operator:
  0010e	c6 45 f9 ec	 mov	 BYTE PTR __t$[ebp+13], -20 ; ffffffecH
  00112	eb 44		 jmp	 SHORT $LN1@operator
$LN84@operator:
  00114	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+12], -19 ; ffffffedH
  00118	eb 3e		 jmp	 SHORT $LN1@operator
$LN86@operator:
  0011a	88 4d f6	 mov	 BYTE PTR __t$[ebp+10], cl
  0011d	eb 39		 jmp	 SHORT $LN1@operator
$LN87@operator:
  0011f	c6 45 f5 ec	 mov	 BYTE PTR __t$[ebp+9], -20 ; ffffffecH
  00123	eb 33		 jmp	 SHORT $LN1@operator
$LN88@operator:
  00125	c6 45 f4 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  00129	eb 2d		 jmp	 SHORT $LN1@operator
$LN89@operator:
  0012b	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  0012f	eb 27		 jmp	 SHORT $LN1@operator
$LN90@operator:
  00131	88 4d f2	 mov	 BYTE PTR __t$[ebp+6], cl
  00134	eb 22		 jmp	 SHORT $LN1@operator
$LN91@operator:
  00136	c6 45 f1 ec	 mov	 BYTE PTR __t$[ebp+5], -20 ; ffffffecH
  0013a	eb 1c		 jmp	 SHORT $LN1@operator
$LN92@operator:
  0013c	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  00140	eb 16		 jmp	 SHORT $LN1@operator
$LN93@operator:
  00142	c6 45 ef ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  00146	eb 10		 jmp	 SHORT $LN1@operator
$LN94@operator:
  00148	c6 45 ee eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  0014c	eb 0a		 jmp	 SHORT $LN1@operator
$LN95@operator:
  0014e	c6 45 ed ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  00152	eb 04		 jmp	 SHORT $LN1@operator
$LN96@operator:
  00154	c6 45 ec ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@operator:
  00158	6a 02		 push	 2
  0015a	8d 45 ec	 lea	 eax, DWORD PTR __t$[ebp]
  0015d	c6 45 f7 00	 mov	 BYTE PTR __t$[ebp+11], 0
  00161	5a		 pop	 edx
$LL104@operator:
  00162	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00168	83 c0 04	 add	 eax, 4
  0016b	4a		 dec	 edx
  0016c	75 f4		 jne	 SHORT $LL104@operator
  0016e	6a 08		 push	 8
  00170	58		 pop	 eax
$LL101@operator:
  00171	8b c8		 mov	 ecx, eax
  00173	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00179	79 05		 jns	 SHORT $LN115@operator
  0017b	49		 dec	 ecx
  0017c	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0017f	41		 inc	 ecx
$LN115@operator:
  00180	b2 ed		 mov	 dl, -19			; ffffffedH
  00182	2a d1		 sub	 dl, cl
  00184	30 54 05 ec	 xor	 BYTE PTR __t$[ebp+eax], dl
  00188	40		 inc	 eax
  00189	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  0018c	7c e3		 jl	 SHORT $LL101@operator
  0018e	8b cf		 mov	 ecx, edi
  00190	8d 75 ec	 lea	 esi, DWORD PTR __t$[ebp]
  00193	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL111@operator:
  00199	8a 08		 mov	 cl, BYTE PTR [eax]
  0019b	3a 0e		 cmp	 cl, BYTE PTR [esi]
  0019d	75 1a		 jne	 SHORT $LN112@operator
  0019f	84 c9		 test	 cl, cl
  001a1	74 12		 je	 SHORT $LN113@operator
  001a3	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  001a6	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  001a9	75 0e		 jne	 SHORT $LN112@operator
  001ab	83 c0 02	 add	 eax, 2
  001ae	83 c6 02	 add	 esi, 2
  001b1	84 c9		 test	 cl, cl
  001b3	75 e4		 jne	 SHORT $LL111@operator
$LN113@operator:
  001b5	33 c0		 xor	 eax, eax
  001b7	eb 05		 jmp	 SHORT $LN114@operator
$LN112@operator:
  001b9	1b c0		 sbb	 eax, eax
  001bb	83 d8 ff	 sbb	 eax, -1
$LN114@operator:
  001be	33 c9		 xor	 ecx, ecx
  001c0	85 c0		 test	 eax, eax
  001c2	0f 94 c0	 sete	 al

; 148  : }

  001c5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001c8	5f		 pop	 edi
  001c9	33 cd		 xor	 ecx, ebp
  001cb	5e		 pop	 esi
  001cc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001d1	c9		 leave
  001d2	c3		 ret	 0
??$?8$0M@@@YA_NABVioHashString@@AAY0M@$$CBD@Z ENDP	; operator==<12>
_TEXT	ENDS
PUBLIC	?StringCbPrintfA@@YAJPADIPBDZZ			; StringCbPrintfA
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\strsafe.h
;	COMDAT ?StringCbPrintfA@@YAJPADIPBDZZ
_TEXT	SEGMENT
_pszDest$ = 8						; size = 4
_cbDest$ = 12						; size = 4
_pszFormat$ = 16					; size = 4
?StringCbPrintfA@@YAJPADIPBDZZ PROC			; StringCbPrintfA, COMDAT

; 4767 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4768 :     HRESULT hr;
; 4769 :     size_t cchDest = cbDest / sizeof(char);
; 4770 : 
; 4771 :     hr = StringValidateDestA(pszDest, cchDest, STRSAFE_MAX_CCH);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _cbDest$[ebp]
  00006	33 c0		 xor	 eax, eax
  00008	85 c9		 test	 ecx, ecx
  0000a	74 08		 je	 SHORT $LN4@StringCbPr
  0000c	81 f9 ff ff ff
	7f		 cmp	 ecx, 2147483647		; 7fffffffH
  00012	76 05		 jbe	 SHORT $LN5@StringCbPr
$LN4@StringCbPr:
  00014	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
$LN5@StringCbPr:

; 4772 :     
; 4773 :     if (SUCCEEDED(hr))

  00019	85 c0		 test	 eax, eax
  0001b	78 39		 js	 SHORT $LN1@StringCbPr

; 4774 :     {
; 4775 :         va_list argList;
; 4776 : 
; 4777 :         va_start(argList, pszFormat);
; 4778 : 
; 4779 :         hr = StringVPrintfWorkerA(pszDest,
; 4780 :                                   cchDest,
; 4781 :                                   NULL,
; 4782 :                                   pszFormat,
; 4783 :                                   argList);

  0001d	53		 push	 ebx
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	8b 7d 08	 mov	 edi, DWORD PTR _pszDest$[ebp]
  00023	8d 45 14	 lea	 eax, DWORD PTR _pszFormat$[ebp+4]
  00026	50		 push	 eax
  00027	ff 75 10	 push	 DWORD PTR _pszFormat$[ebp]
  0002a	8d 71 ff	 lea	 esi, DWORD PTR [ecx-1]
  0002d	56		 push	 esi
  0002e	57		 push	 edi
  0002f	33 db		 xor	 ebx, ebx
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___vsnprintf
  00037	83 c4 10	 add	 esp, 16			; 00000010H
  0003a	85 c0		 test	 eax, eax
  0003c	78 0b		 js	 SHORT $LN12@StringCbPr
  0003e	3b c6		 cmp	 eax, esi
  00040	77 07		 ja	 SHORT $LN12@StringCbPr
  00042	75 0d		 jne	 SHORT $LN9@StringCbPr
  00044	88 1c 3e	 mov	 BYTE PTR [esi+edi], bl
  00047	eb 08		 jmp	 SHORT $LN9@StringCbPr
$LN12@StringCbPr:
  00049	88 1c 3e	 mov	 BYTE PTR [esi+edi], bl
  0004c	bb 7a 00 07 80	 mov	 ebx, -2147024774	; 8007007aH
$LN9@StringCbPr:
  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	8b c3		 mov	 eax, ebx
  00055	5b		 pop	 ebx
$LN1@StringCbPr:

; 4784 : 
; 4785 :         va_end(argList);
; 4786 :     }
; 4787 : 
; 4788 :     return hr;
; 4789 : }

  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
?StringCbPrintfA@@YAJPADIPBDZZ ENDP			; StringCbPrintfA
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
EXTRN	__imp_?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\idchangewnd.cpp
;	COMDAT ?AddRenderImage@IDChangeWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z
_TEXT	SEGMENT
_this$GSCopy$ = -24					; size = 4
__t$506076 = -20					; size = 12
__$ArrayPad$ = -4					; size = 4
_szType$ = 8						; size = 4
_pImage$ = 12						; size = 4
?AddRenderImage@IDChangeWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z PROC ; IDChangeWnd::AddRenderImage, COMDAT
; _this$ = ecx

; 76   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 0c	 mov	 ebx, DWORD PTR _pImage$[ebp]
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b 7d 08	 mov	 edi, DWORD PTR _szType$[ebp]

; 77   : 	if( szType == "back_effect" )

  00019	6a 02		 push	 2
  0001b	89 4d e8	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  0001e	c7 45 ec 8f 8d
	88 81		 mov	 DWORD PTR __t$506076[ebp], -2121757297 ; 81888d8fH
  00025	c7 45 f0 b2 89
	8d 8c		 mov	 DWORD PTR __t$506076[ebp+4], -1936881230 ; 8c8d89b2H
  0002c	8d 45 ec	 lea	 eax, DWORD PTR __t$506076[ebp]
  0002f	c7 45 f4 88 8f
	9f 00		 mov	 DWORD PTR __t$506076[ebp+8], 10456968 ; 009f8f88H
  00036	59		 pop	 ecx
$LL111@AddRenderI:
  00037	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0003d	83 c0 04	 add	 eax, 4
  00040	49		 dec	 ecx
  00041	75 f4		 jne	 SHORT $LL111@AddRenderI
  00043	6a 08		 push	 8
  00045	58		 pop	 eax
$LL108@AddRenderI:
  00046	8b c8		 mov	 ecx, eax
  00048	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0004e	79 05		 jns	 SHORT $LN122@AddRenderI
  00050	49		 dec	 ecx
  00051	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00054	41		 inc	 ecx
$LN122@AddRenderI:
  00055	b2 ed		 mov	 dl, -19			; ffffffedH
  00057	2a d1		 sub	 dl, cl
  00059	30 54 05 ec	 xor	 BYTE PTR __t$506076[ebp+eax], dl
  0005d	40		 inc	 eax
  0005e	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  00061	7c e3		 jl	 SHORT $LL108@AddRenderI
  00063	8b cf		 mov	 ecx, edi
  00065	8d 75 ec	 lea	 esi, DWORD PTR __t$506076[ebp]
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
$LL118@AddRenderI:
  0006e	8a 08		 mov	 cl, BYTE PTR [eax]
  00070	3a 0e		 cmp	 cl, BYTE PTR [esi]
  00072	75 1a		 jne	 SHORT $LN119@AddRenderI
  00074	84 c9		 test	 cl, cl
  00076	74 12		 je	 SHORT $LN120@AddRenderI
  00078	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  0007b	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  0007e	75 0e		 jne	 SHORT $LN119@AddRenderI
  00080	83 c0 02	 add	 eax, 2
  00083	83 c6 02	 add	 esi, 2
  00086	84 c9		 test	 cl, cl
  00088	75 e4		 jne	 SHORT $LL118@AddRenderI
$LN120@AddRenderI:
  0008a	33 c0		 xor	 eax, eax
  0008c	eb 05		 jmp	 SHORT $LN121@AddRenderI
$LN119@AddRenderI:
  0008e	1b c0		 sbb	 eax, eax
  00090	83 d8 ff	 sbb	 eax, -1
$LN121@AddRenderI:
  00093	85 c0		 test	 eax, eax
  00095	75 23		 jne	 SHORT $LN3@AddRenderI

; 78   : 	{
; 79   : 		SAFEDELETE( m_pBackEffect );

  00097	8b 75 e8	 mov	 esi, DWORD PTR _this$GSCopy$[ebp]
  0009a	8b 8e 64 01 00
	00		 mov	 ecx, DWORD PTR [esi+356]
  000a0	85 c9		 test	 ecx, ecx
  000a2	74 0e		 je	 SHORT $LN2@AddRenderI
  000a4	8b 01		 mov	 eax, DWORD PTR [ecx]
  000a6	6a 01		 push	 1
  000a8	ff 50 40	 call	 DWORD PTR [eax+64]
  000ab	83 a6 64 01 00
	00 00		 and	 DWORD PTR [esi+356], 0
$LN2@AddRenderI:

; 80   : 		m_pBackEffect = pImage;

  000b2	89 9e 64 01 00
	00		 mov	 DWORD PTR [esi+356], ebx

; 81   : 	}
; 82   : 	else

  000b8	eb 0b		 jmp	 SHORT $LN1@AddRenderI
$LN3@AddRenderI:

; 83   : 		ioWnd::AddRenderImage( szType, pImage );

  000ba	8b 4d e8	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  000bd	53		 push	 ebx
  000be	57		 push	 edi
  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddRenderImage@ioWnd@@UAEXABVioHashString@@PAVioUIRenderImage@@@Z
$LN1@AddRenderI:

; 84   : }

  000c5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c8	5f		 pop	 edi
  000c9	5e		 pop	 esi
  000ca	33 cd		 xor	 ecx, ebp
  000cc	5b		 pop	 ebx
  000cd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d2	c9		 leave
  000d3	c2 08 00	 ret	 8
?AddRenderImage@IDChangeWnd@@MAEXABVioHashString@@PAVioUIRenderImage@@@Z ENDP ; IDChangeWnd::AddRenderImage
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	?MakeNewSaveFile@IDChangeWnd@@IAEXXZ		; IDChangeWnd::MakeNewSaveFile
EXTRN	??1CCopyFolder@@QAE@XZ:PROC			; CCopyFolder::~CCopyFolder
EXTRN	?CopyFolder@CCopyFolder@@QAE_NPBD0AB_NP6AXPAX_NH@Z2@Z:PROC ; CCopyFolder::CopyFolder
EXTRN	??0CCopyFolder@@QAE@XZ:PROC			; CCopyFolder::CCopyFolder
EXTRN	__imp__GetCurrentDirectoryA@8:PROC
EXTRN	__EH_epilog3_GS:PROC
EXTRN	__EH_prolog3_GS:PROC
EXTRN	_memset:PROC
;	COMDAT xdata$x
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
xdata$x	SEGMENT
__unwindtable$?MakeNewSaveFile@IDChangeWnd@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeNewSaveFile@IDChangeWnd@@IAEXXZ$0
__ehfuncinfo$?MakeNewSaveFile@IDChangeWnd@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?MakeNewSaveFile@IDChangeWnd@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\gui\idchangewnd.cpp
xdata$x	ENDS
;	COMDAT ?MakeNewSaveFile@IDChangeWnd@@IAEXXZ
_TEXT	SEGMENT
_cf$ = -868						; size = 32
_this$GSCopy$ = -836					; size = 4
_bActive$ = -829					; size = 1
_szRootDir$ = -828					; size = 260
_szSourcePath$ = -568					; size = 260
_szDestath$ = -308					; size = 260
___encStr$505273 = -48					; size = 11
___encStr$505426 = -32					; size = 11
__$EHRec$ = -12						; size = 12
?MakeNewSaveFile@IDChangeWnd@@IAEXXZ PROC		; IDChangeWnd::MakeNewSaveFile, COMDAT
; _this$ = ecx

; 189  : {

  00000	68 58 03 00 00	 push	 856			; 00000358H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?MakeNewSaveFile@IDChangeWnd@@IAEXXZ
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS

; 190  : 	char szRootDir[MAX_PATH];
; 191  : 	::GetCurrentDirectory(MAX_PATH,szRootDir);

  0000f	8d 85 c4 fc ff
	ff		 lea	 eax, DWORD PTR _szRootDir$[ebp]
  00015	50		 push	 eax
  00016	bf 04 01 00 00	 mov	 edi, 260		; 00000104H
  0001b	57		 push	 edi
  0001c	89 8d bc fc ff
	ff		 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentDirectoryA@8

; 192  : 
; 193  : 	char szSourcePath[MAX_PATH]="";

  00028	8d 77 ff	 lea	 esi, DWORD PTR [edi-1]
  0002b	33 db		 xor	 ebx, ebx
  0002d	56		 push	 esi
  0002e	8d 85 c9 fd ff
	ff		 lea	 eax, DWORD PTR _szSourcePath$[ebp+1]
  00034	53		 push	 ebx
  00035	50		 push	 eax
  00036	88 9d c8 fd ff
	ff		 mov	 BYTE PTR _szSourcePath$[ebp], bl
  0003c	e8 00 00 00 00	 call	 _memset

; 194  : 	char szDestath[MAX_PATH]="";

  00041	56		 push	 esi
  00042	8d 85 cd fe ff
	ff		 lea	 eax, DWORD PTR _szDestath$[ebp+1]
  00048	53		 push	 ebx
  00049	50		 push	 eax
  0004a	88 9d cc fe ff
	ff		 mov	 BYTE PTR _szDestath$[ebp], bl
  00050	e8 00 00 00 00	 call	 _memset
  00055	83 c4 18	 add	 esp, 24			; 00000018H

; 195  : 
; 196  : 	StringCbPrintf_e( szSourcePath, sizeof( szSourcePath ), "%s\\Save\\%s", szRootDir, g_MyInfo.GetPublicID().c_str() );

  00058	6a 02		 push	 2
  0005a	c7 45 d0 c8 9f
	b7 b9		 mov	 DWORD PTR ___encStr$505273[ebp], -1179148344 ; b9b79fc8H
  00061	c7 45 d4 8c 9a
	8e b6		 mov	 DWORD PTR ___encStr$505273[ebp+4], -1232168308 ; b68e9a8cH
  00068	66 c7 45 d8 c8
	9f		 mov	 WORD PTR ___encStr$505273[ebp+8], 40904 ; 00009fc8H
  0006e	8d 45 d0	 lea	 eax, DWORD PTR ___encStr$505273[ebp]
  00071	88 5d da	 mov	 BYTE PTR ___encStr$505273[ebp+10], bl
  00074	59		 pop	 ecx
$LL207@MakeNewSav:
  00075	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0007b	83 c0 04	 add	 eax, 4
  0007e	49		 dec	 ecx
  0007f	75 f4		 jne	 SHORT $LL207@MakeNewSav
  00081	6a 08		 push	 8
  00083	5e		 pop	 esi
$LL204@MakeNewSav:
  00084	8b c6		 mov	 eax, esi
  00086	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  0008b	79 05		 jns	 SHORT $LN229@MakeNewSav
  0008d	48		 dec	 eax
  0008e	83 c8 fc	 or	 eax, -4			; fffffffcH
  00091	40		 inc	 eax
$LN229@MakeNewSav:
  00092	b1 ed		 mov	 cl, -19			; ffffffedH
  00094	2a c8		 sub	 cl, al
  00096	30 4c 35 d0	 xor	 BYTE PTR ___encStr$505273[ebp+esi], cl
  0009a	46		 inc	 esi
  0009b	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  0009e	7c e4		 jl	 SHORT $LL204@MakeNewSav
  000a0	e8 00 00 00 00	 call	 ?GetSingleton@ioMyInfo@@SAAAV1@XZ ; ioMyInfo::GetSingleton
  000a5	8d 48 1c	 lea	 ecx, DWORD PTR [eax+28]
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  000ae	50		 push	 eax
  000af	8d 85 c4 fc ff
	ff		 lea	 eax, DWORD PTR _szRootDir$[ebp]
  000b5	50		 push	 eax
  000b6	8d 45 d0	 lea	 eax, DWORD PTR ___encStr$505273[ebp]
  000b9	50		 push	 eax
  000ba	8d 85 c8 fd ff
	ff		 lea	 eax, DWORD PTR _szSourcePath$[ebp]
  000c0	57		 push	 edi
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 ?StringCbPrintfA@@YAJPADIPBDZZ ; StringCbPrintfA
  000c7	83 c4 14	 add	 esp, 20			; 00000014H
  000ca	6a 02		 push	 2

; 197  : 	StringCbPrintf_e( szDestath, sizeof( szDestath ), "%s\\Save\\%s", szRootDir, m_szNewName.c_str() );

  000cc	c7 45 e0 c8 9f
	b7 b9		 mov	 DWORD PTR ___encStr$505426[ebp], -1179148344 ; b9b79fc8H
  000d3	c7 45 e4 8c 9a
	8e b6		 mov	 DWORD PTR ___encStr$505426[ebp+4], -1232168308 ; b68e9a8cH
  000da	66 c7 45 e8 c8
	9f		 mov	 WORD PTR ___encStr$505426[ebp+8], 40904 ; 00009fc8H
  000e0	8d 45 e0	 lea	 eax, DWORD PTR ___encStr$505426[ebp]
  000e3	88 5d ea	 mov	 BYTE PTR ___encStr$505426[ebp+10], bl
  000e6	59		 pop	 ecx
$LL217@MakeNewSav:
  000e7	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  000ed	83 c0 04	 add	 eax, 4
  000f0	49		 dec	 ecx
  000f1	75 f4		 jne	 SHORT $LL217@MakeNewSav
  000f3	6a 08		 push	 8
  000f5	5e		 pop	 esi
$LL214@MakeNewSav:
  000f6	8b c6		 mov	 eax, esi
  000f8	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  000fd	79 05		 jns	 SHORT $LN230@MakeNewSav
  000ff	48		 dec	 eax
  00100	83 c8 fc	 or	 eax, -4			; fffffffcH
  00103	40		 inc	 eax
$LN230@MakeNewSav:
  00104	b1 ed		 mov	 cl, -19			; ffffffedH
  00106	2a c8		 sub	 cl, al
  00108	30 4c 35 e0	 xor	 BYTE PTR ___encStr$505426[ebp+esi], cl
  0010c	46		 inc	 esi
  0010d	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  00110	7c e4		 jl	 SHORT $LL214@MakeNewSav
  00112	8b 8d bc fc ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00118	81 c1 68 01 00
	00		 add	 ecx, 360		; 00000168H
  0011e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@ioHashString@@QBEPBDXZ
  00124	50		 push	 eax
  00125	8d 85 c4 fc ff
	ff		 lea	 eax, DWORD PTR _szRootDir$[ebp]
  0012b	50		 push	 eax
  0012c	8d 45 e0	 lea	 eax, DWORD PTR ___encStr$505426[ebp]
  0012f	50		 push	 eax
  00130	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR _szDestath$[ebp]
  00136	57		 push	 edi
  00137	50		 push	 eax
  00138	e8 00 00 00 00	 call	 ?StringCbPrintfA@@YAJPADIPBDZZ ; StringCbPrintfA
  0013d	83 c4 14	 add	 esp, 20			; 00000014H

; 198  : 
; 199  : 	bool bActive = true;
; 200  : 	CCopyFolder cf;	

  00140	8d 8d 9c fc ff
	ff		 lea	 ecx, DWORD PTR _cf$[ebp]
  00146	c6 85 c3 fc ff
	ff 01		 mov	 BYTE PTR _bActive$[ebp], 1
  0014d	e8 00 00 00 00	 call	 ??0CCopyFolder@@QAE@XZ	; CCopyFolder::CCopyFolder

; 201  : 	cf.CopyFolder( szSourcePath, szDestath, bActive );

  00152	53		 push	 ebx
  00153	53		 push	 ebx
  00154	8d 85 c3 fc ff
	ff		 lea	 eax, DWORD PTR _bActive$[ebp]
  0015a	50		 push	 eax
  0015b	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR _szDestath$[ebp]
  00161	50		 push	 eax
  00162	8d 85 c8 fd ff
	ff		 lea	 eax, DWORD PTR _szSourcePath$[ebp]
  00168	50		 push	 eax
  00169	8d 8d 9c fc ff
	ff		 lea	 ecx, DWORD PTR _cf$[ebp]
  0016f	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00172	e8 00 00 00 00	 call	 ?CopyFolder@CCopyFolder@@QAE_NPBD0AB_NP6AXPAX_NH@Z2@Z ; CCopyFolder::CopyFolder

; 202  : }

  00177	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0017b	8d 8d 9c fc ff
	ff		 lea	 ecx, DWORD PTR _cf$[ebp]
  00181	e8 00 00 00 00	 call	 ??1CCopyFolder@@QAE@XZ	; CCopyFolder::~CCopyFolder
  00186	e8 00 00 00 00	 call	 __EH_epilog3_GS
  0018b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeNewSaveFile@IDChangeWnd@@IAEXXZ$0:
  00000	8d 8d 9c fc ff
	ff		 lea	 ecx, DWORD PTR _cf$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CCopyFolder@@QAE@XZ	; CCopyFolder::~CCopyFolder
__ehhandler$?MakeNewSaveFile@IDChangeWnd@@IAEXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 98 fc ff
	ff		 mov	 ecx, DWORD PTR [edx-872]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?MakeNewSaveFile@IDChangeWnd@@IAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?MakeNewSaveFile@IDChangeWnd@@IAEXXZ ENDP		; IDChangeWnd::MakeNewSaveFile
PUBLIC	??_C@_0BE@NKMBNLOD@ID_CHANGE?5to?5LOGOUT?$AA@	; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?SetExit@IDChangeWnd@@IAEXXZ			; IDChangeWnd::SetExit
EXTRN	??1SP2Packet@@UAE@XZ:PROC			; SP2Packet::~SP2Packet
EXTRN	__imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ:PROC
EXTRN	__imp_?LOG@@3VCLog@@A:BYTE
EXTRN	?SendToServer@TCPNetwork@@YAXAAVSP2Packet@@@Z:PROC ; TCPNetwork::SendToServer
EXTRN	??0SP2Packet@@QAE@K@Z:PROC			; SP2Packet::SP2Packet
EXTRN	?ProcessChangeStage@ioQuestManager@@QAEXXZ:PROC	; ioQuestManager::ProcessChangeStage
EXTRN	?GetSingleton@ioQuestManager@@SAAAV1@XZ:PROC	; ioQuestManager::GetSingleton
EXTRN	__imp_?HideWnd@ioWnd@@QAEXXZ:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BE@NKMBNLOD@ID_CHANGE?5to?5LOGOUT?$AA@
CONST	SEGMENT
??_C@_0BE@NKMBNLOD@ID_CHANGE?5to?5LOGOUT?$AA@ DB 'ID_CHANGE to LOGOUT', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetExit@IDChangeWnd@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetExit@IDChangeWnd@@IAEXXZ$0
__ehfuncinfo$?SetExit@IDChangeWnd@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetExit@IDChangeWnd@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ?SetExit@IDChangeWnd@@IAEXXZ
_TEXT	SEGMENT
_kPacket$ = -32808					; size = 32792
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?SetExit@IDChangeWnd@@IAEXXZ PROC			; IDChangeWnd::SetExit, COMDAT
; _this$ = ecx

; 177  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetExit@IDChangeWnd@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 1c 80 00 00	 mov	 eax, 32796		; 0000801cH
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	56		 push	 esi
  00026	50		 push	 eax
  00027	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00030	8b f1		 mov	 esi, ecx

; 178  : 	HideWnd();

  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?HideWnd@ioWnd@@QAEXXZ

; 179  : 
; 180  : 	g_QuestMgr.ProcessChangeStage();

  00038	e8 00 00 00 00	 call	 ?GetSingleton@ioQuestManager@@SAAAV1@XZ ; ioQuestManager::GetSingleton
  0003d	8b c8		 mov	 ecx, eax
  0003f	e8 00 00 00 00	 call	 ?ProcessChangeStage@ioQuestManager@@QAEXXZ ; ioQuestManager::ProcessChangeStage

; 181  : 	SP2Packet kPacket( CTPK_LOGOUT );

  00044	6a 04		 push	 4
  00046	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$[ebp]
  0004c	e8 00 00 00 00	 call	 ??0SP2Packet@@QAE@K@Z	; SP2Packet::SP2Packet
  00051	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 182  : 	TCPNetwork::SendToServer( kPacket );

  00055	8d 85 d8 7f ff
	ff		 lea	 eax, DWORD PTR _kPacket$[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?SendToServer@TCPNetwork@@YAXAAVSP2Packet@@@Z ; TCPNetwork::SendToServer
  00061	59		 pop	 ecx

; 183  : 	MakeNewSaveFile();

  00062	8b ce		 mov	 ecx, esi
  00064	e8 00 00 00 00	 call	 ?MakeNewSaveFile@IDChangeWnd@@IAEXXZ ; IDChangeWnd::MakeNewSaveFile

; 184  : 
; 185  : 	LOG.PrintTimeAndLog(0, "ID_CHANGE to LOGOUT" );

  00069	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NKMBNLOD@ID_CHANGE?5to?5LOGOUT?$AA@
  0006e	6a 00		 push	 0
  00070	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ

; 186  : }

  0007c	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00080	83 c4 0c	 add	 esp, 12			; 0000000cH
  00083	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$[ebp]
  00089	e8 00 00 00 00	 call	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
  0008e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00091	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00098	59		 pop	 ecx
  00099	5e		 pop	 esi
  0009a	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009d	33 cd		 xor	 ecx, ebp
  0009f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a4	c9		 leave
  000a5	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetExit@IDChangeWnd@@IAEXXZ$0:
  00000	8d 8d d8 7f ff
	ff		 lea	 ecx, DWORD PTR _kPacket$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1SP2Packet@@UAE@XZ	; SP2Packet::~SP2Packet
__ehhandler$?SetExit@IDChangeWnd@@IAEXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a dc 7f ff
	ff		 mov	 ecx, DWORD PTR [edx-32804]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetExit@IDChangeWnd@@IAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetExit@IDChangeWnd@@IAEXXZ ENDP			; IDChangeWnd::SetExit
EXTRN	__imp_?GetID@ioWnd@@QBEKXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?iwm_command@IDChangeWnd@@UAEXPAVioWnd@@HK@Z
_TEXT	SEGMENT
_pWnd$ = 8						; size = 4
_cmd$ = 12						; size = 4
_param$ = 16						; size = 4
?iwm_command@IDChangeWnd@@UAEXPAVioWnd@@HK@Z PROC	; IDChangeWnd::iwm_command, COMDAT
; _this$ = ecx

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 45   : 	DWORD dwID = pWnd->GetID();

  00006	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetID@ioWnd@@QBEKXZ

; 46   : 	switch( dwID )

  0000f	48		 dec	 eax
  00010	75 0d		 jne	 SHORT $LN1@iwm_comman

; 47   : 	{
; 48   : 	case ID_SHOTDOWN_BTN:
; 49   : 		if( cmd == IOBN_BTNUP )

  00012	83 7d 0c 11	 cmp	 DWORD PTR _cmd$[ebp], 17 ; 00000011H
  00016	75 07		 jne	 SHORT $LN1@iwm_comman

; 50   : 		{
; 51   : 			SetExit();

  00018	8b ce		 mov	 ecx, esi
  0001a	e8 00 00 00 00	 call	 ?SetExit@IDChangeWnd@@IAEXXZ ; IDChangeWnd::SetExit
$LN1@iwm_comman:
  0001f	5e		 pop	 esi

; 52   : 		}
; 53   : 		break;
; 54   : 	}
; 55   : }

  00020	5d		 pop	 ebp
  00021	c2 0c 00	 ret	 12			; 0000000cH
?iwm_command@IDChangeWnd@@UAEXPAVioWnd@@HK@Z ENDP	; IDChangeWnd::iwm_command
_TEXT	ENDS
EXTRN	__imp_?IsShow@ioWnd@@QBE_NXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?OnProcess@IDChangeWnd@@MAEXM@Z
_TEXT	SEGMENT
_fTimePerSec$ = 8					; size = 4
?OnProcess@IDChangeWnd@@MAEXM@Z PROC			; IDChangeWnd::OnProcess, COMDAT
; _this$ = ecx

; 87   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 88   : 	if( !IsShow() )

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsShow@ioWnd@@QBE_NXZ
  00009	84 c0		 test	 al, al
  0000b	74 45		 je	 SHORT $LN1@OnProcess

; 89   : 		return;
; 90   : 
; 91   : 	enum { COUNT_WAIT_TIME = 1000, }; 
; 92   : 	if( FRAMEGETTIME() - m_dwCntStartTime < COUNT_WAIT_TIME )

  0000d	57		 push	 edi
  0000e	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00014	ff d7		 call	 edi
  00016	8b c8		 mov	 ecx, eax
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  0001e	2b 86 7c 01 00
	00		 sub	 eax, DWORD PTR [esi+380]
  00024	3d e8 03 00 00	 cmp	 eax, 1000		; 000003e8H
  00029	72 26		 jb	 SHORT $LN6@OnProcess

; 93   : 		return;
; 94   : 
; 95   : 	m_dwCntStartTime = FRAMEGETTIME();

  0002b	ff d7		 call	 edi
  0002d	8b c8		 mov	 ecx, eax
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ

; 96   : 	m_iShutDownCnt--;

  00035	ff 8e 78 01 00
	00		 dec	 DWORD PTR [esi+376]
  0003b	89 86 7c 01 00
	00		 mov	 DWORD PTR [esi+380], eax

; 97   : 	if( m_iShutDownCnt < 0 )

  00041	79 0e		 jns	 SHORT $LN6@OnProcess

; 98   : 	{
; 99   : 		m_iShutDownCnt = 0;

  00043	83 a6 78 01 00
	00 00		 and	 DWORD PTR [esi+376], 0

; 100  : 		SetExit();

  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?SetExit@IDChangeWnd@@IAEXXZ ; IDChangeWnd::SetExit
$LN6@OnProcess:
  00051	5f		 pop	 edi
$LN1@OnProcess:
  00052	5e		 pop	 esi

; 101  : 	}
; 102  : }

  00053	c2 04 00	 ret	 4
?OnProcess@IDChangeWnd@@MAEXM@Z ENDP			; IDChangeWnd::OnProcess
_TEXT	ENDS
END
