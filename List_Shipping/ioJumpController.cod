; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioJumpController.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
;	COMDAT ?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB DD 01H ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
CONST	ENDS
PUBLIC	??0JumpData@ioJumpController@@QAE@XZ		; ioJumpController::JumpData::JumpData
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iojumpcontroller.h
;	COMDAT ??0JumpData@ioJumpController@@QAE@XZ
_TEXT	SEGMENT
??0JumpData@ioJumpController@@QAE@XZ PROC		; ioJumpController::JumpData::JumpData, COMDAT
; _this$ = ecx

; 11   : 		JumpData()

  00000	8b c1		 mov	 eax, ecx

; 12   : 		{
; 13   : 			m_wKeyData = 0;

  00002	33 c9		 xor	 ecx, ecx

; 14   : 			m_dwDelayTime = 0;

  00004	21 48 04	 and	 DWORD PTR [eax+4], ecx
  00007	66 89 08	 mov	 WORD PTR [eax], cx

; 15   : 		}

  0000a	c3		 ret	 0
??0JumpData@ioJumpController@@QAE@XZ ENDP		; ioJumpController::JumpData::JumpData
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1exception@std@@UAE@XZ
  00012	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00016	74 07		 je	 SHORT $LN1@scalar
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	59		 pop	 ecx
$LN1@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	return (_Where);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 58   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 62   : 	}

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	?empty@?$vector@KV?$allocator@K@std@@@std@@QBE_NXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::empty
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?empty@?$vector@KV?$allocator@K@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@KV?$allocator@K@std@@@std@@QBE_NXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::empty, COMDAT
; _this$ = ecx

; 889  : 		return (this->_Myfirst == this->_Mylast);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00005	f7 d8		 neg	 eax
  00007	1b c0		 sbb	 eax, eax
  00009	40		 inc	 eax

; 890  : 		}

  0000a	c3		 ret	 0
?empty@?$vector@KV?$allocator@K@std@@@std@@QBE_NXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::empty
_TEXT	ENDS
PUBLIC	?size@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBEIXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::size
; Function compile flags: /Ogsp
;	COMDAT ?size@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBEIXZ PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 03	 sar	 eax, 3

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::size
_TEXT	ENDS
PUBLIC	?empty@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBE_NXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::empty
; Function compile flags: /Ogsp
;	COMDAT ?empty@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBE_NXZ PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::empty, COMDAT
; _this$ = ecx

; 889  : 		return (this->_Myfirst == this->_Mylast);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00005	f7 d8		 neg	 eax
  00007	1b c0		 sbb	 eax, eax
  00009	40		 inc	 eax

; 890  : 		}

  0000a	c3		 ret	 0
?empty@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBE_NXZ ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::empty
_TEXT	ENDS
PUBLIC	??A?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEAAUJumpData@ioJumpController@@I@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEAAUJumpData@ioJumpController@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEAAUJumpData@ioJumpController@@I@Z PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00008	8d 04 c8	 lea	 eax, DWORD PTR [eax+ecx*8]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEAAUJumpData@ioJumpController@@I@Z ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::operator[]
_TEXT	ENDS
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xfunctional
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@K@std@@QBE_NABK0@Z PROC			; std::less<unsigned long>::operator(), COMDAT
; _this$ = ecx

; 124  : 		{	// apply operator< to operands

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 125  : 		return (_Left < _Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000b	3b 01		 cmp	 eax, DWORD PTR [ecx]
  0000d	1b c0		 sbb	 eax, eax
  0000f	f7 d8		 neg	 eax

; 126  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IBE_NPBUJumpData@ioJumpController@@@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Inside
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IBE_NPBUJumpData@ioJumpController@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IBE_NPBUJumpData@ioJumpController@@@Z PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IBE_NPBUJumpData@ioJumpController@@@Z ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IBEXPAUJumpData@ioJumpController@@0@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IBEXPAUJumpData@ioJumpController@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IBEXPAUJumpData@ioJumpController@@0@Z PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IBEXPAUJumpData@ioJumpController@@0@Z ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@XZ ; std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::~_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::~_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::~_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UJumpData@ioJumpController@@@std@@QAE@XZ ; std::allocator<ioJumpController::JumpData>::allocator<ioJumpController::JumpData>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UJumpData@ioJumpController@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UJumpData@ioJumpController@@@std@@QAE@XZ PROC ; std::allocator<ioJumpController::JumpData>::allocator<ioJumpController::JumpData>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@UJumpData@ioJumpController@@@std@@QAE@XZ ENDP ; std::allocator<ioJumpController::JumpData>::allocator<ioJumpController::JumpData>
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >
_TEXT	ENDS
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator==
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())
; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 331  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::_Mynode
; Function compile flags: /Ogsp
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 123  : 		}

  00002	c3		 ret	 0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
PUBLIC	?capacity@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBEIXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBEIXZ PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 03	 sar	 eax, 3

; 778  : 		}

  00008	c3		 ret	 0
?capacity@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::capacity
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IBEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IBEXXZ PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
  0000b	cc		 int	 3
?_Xlen@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IBEXXZ ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@UJumpData@ioJumpController@@@std@@QAE@ABV01@@Z ; std::allocator<ioJumpController::JumpData>::allocator<ioJumpController::JumpData>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UJumpData@ioJumpController@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UJumpData@ioJumpController@@@std@@QAE@ABV01@@Z PROC ; std::allocator<ioJumpController::JumpData>::allocator<ioJumpController::JumpData>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@UJumpData@ioJumpController@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<ioJumpController::JumpData>::allocator<ioJumpController::JumpData>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@I@Z ; std::allocator<ioJumpController::JumpData>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@I@Z PROC ; std::allocator<ioJumpController::JumpData>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@I@Z ENDP ; std::allocator<ioJumpController::JumpData>::deallocate
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Left
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@$$CBKUJumpList@ioJumpController@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Myval
; Function compile flags: /Ogsp
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@$$CBKUJumpList@ioJumpController@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@$$CBKUJumpList@ioJumpController@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 637  : 		return ((reference)(*_Pnode)._Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 638  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@$$CBKUJumpList@ioJumpController@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Node>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKUJumpList@ioJumpController@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKUJumpList@ioJumpController@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKUJumpList@ioJumpController@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 		if (this->_Getcont() == 0
; 233  : 			|| this->_Ptr == 0
; 234  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)
; 235  : 			{	// report error
; 236  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 237  : 			_SCL_SECURE_OUT_OF_RANGE;
; 238  : 			}
; 239  : 
; 240  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 241  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 242  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 243  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 244  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 245  : 
; 246  : 		return (_Mytree::_Myval(this->_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 247  : 		}

  00005	c3		 ret	 0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBKUJumpList@ioJumpController@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0

; 39   : 		}

  00005	c3		 ret	 0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QAE@PAUJumpData@ioJumpController@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QAE@PAUJumpData@ioJumpController@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QAE@PAUJumpData@ioJumpController@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QAE@PAUJumpData@ioJumpController@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UJumpData@ioJumpController@@@std@@QBEIXZ ; std::allocator<ioJumpController::JumpData>::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@UJumpData@ioJumpController@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@UJumpData@ioJumpController@@@std@@QBEIXZ PROC ; std::allocator<ioJumpController::JumpData>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@UJumpData@ioJumpController@@@std@@QBEIXZ ENDP ; std::allocator<ioJumpController::JumpData>::max_size
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Color
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 607  : 		return ((char&)(*_Pnode)._Color);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 24	 add	 eax, 36			; 00000024H

; 608  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Isnil
; Function compile flags: /Ogsp
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 612  : 		return ((char&)(*_Pnode)._Isnil);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 25	 add	 eax, 37			; 00000025H

; 613  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Parent
; Function compile flags: /Ogsp
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 628  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Right
; Function compile flags: /Ogsp
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 633  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Min
; Function compile flags: /Ogsp
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Min
$LL2@Min:

; 650  : 			_Pnode = _Left(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Min:

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	80 79 25 00	 cmp	 BYTE PTR [ecx+37], 0
  00010	74 f6		 je	 SHORT $LL2@Min

; 651  : 		return (_Pnode);
; 652  : 		}

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?_Min@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Min
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 44   : 		this->_Adopt(_Plist);
; 45   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Rmost
; Function compile flags: /Ogsp
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1784 : 		return (this->_Right(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1785 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Max
; Function compile flags: /Ogsp
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	eb 02		 jmp	 SHORT $LN14@Max
$LL2@Max:

; 643  : 			_Pnode = _Right(_Pnode);

  00008	8b c1		 mov	 eax, ecx
$LN14@Max:

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	80 79 25 00	 cmp	 BYTE PTR [ecx+37], 0
  00011	74 f5		 je	 SHORT $LL2@Max

; 644  : 		return (_Pnode);
; 645  : 		}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Max@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Max
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0>::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@QAE@U?$less@K@1@@Z PROC ; std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0>::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0>, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 41   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0>::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0>
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::_Compat
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

  00000	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::_Compat
_TEXT	ENDS
PUBLIC	??$addressof@$$CBUJumpData@ioJumpController@@@std@@YAPBUJumpData@ioJumpController@@ABU12@@Z ; std::addressof<ioJumpController::JumpData const >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@$$CBUJumpData@ioJumpController@@@std@@YAPBUJumpData@ioJumpController@@ABU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUJumpData@ioJumpController@@@std@@YAPBUJumpData@ioJumpController@@ABU12@@Z PROC ; std::addressof<ioJumpController::JumpData const >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@$$CBUJumpData@ioJumpController@@@std@@YAPBUJumpData@ioJumpController@@ABU12@@Z ENDP ; std::addressof<ioJumpController::JumpData const >
_TEXT	ENDS
PUBLIC	??$_Kfn@$$CBKUJumpList@ioJumpController@@@?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z ; std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0>::_Kfn<unsigned long const ,ioJumpController::JumpList>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??$_Kfn@$$CBKUJumpList@ioJumpController@@@?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBKUJumpList@ioJumpController@@@?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z PROC ; std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0>::_Kfn<unsigned long const ,ioJumpController::JumpList>, COMDAT

; 66   : 		static const _Kty& _Kfn(const _STD pair<_Ty1, _Ty2>& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 		{	// extract key from element value
; 68   : 		return (_Val.first);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 69   : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Kfn@$$CBKUJumpList@ioJumpController@@@?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z ENDP ; std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0>::_Kfn<unsigned long const ,ioJumpController::JumpList>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@UJumpData@ioJumpController@@@std@@YAPAUJumpData@ioJumpController@@IPAU12@@Z ; std::_Allocate<ioJumpController::JumpData>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@UJumpData@ioJumpController@@@std@@YAPAUJumpData@ioJumpController@@IPAU12@@Z
_TEXT	SEGMENT
$T536416 = -12						; size = 12
$T536421 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UJumpData@ioJumpController@@@std@@YAPAUJumpData@ioJumpController@@IPAU12@@Z PROC ; std::_Allocate<ioJumpController::JumpData>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3e		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	1f		 cmp	 ecx, 536870911		; 1fffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate
  00017	8b c1		 mov	 eax, ecx
  00019	c1 e0 03	 shl	 eax, 3
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	59		 pop	 ecx
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 26		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	83 65 08 00	 and	 DWORD PTR $T536421[ebp], 0
  0002b	8d 45 08	 lea	 eax, DWORD PTR $T536421[ebp]
  0002e	50		 push	 eax
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T536416[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003d	8d 45 f4	 lea	 eax, DWORD PTR $T536416[ebp]
  00040	50		 push	 eax
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T536416[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  0004d	c9		 leave
  0004e	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@UJumpData@ioJumpController@@@std@@YAPAUJumpData@ioJumpController@@IPAU12@@Z ENDP ; std::_Allocate<ioJumpController::JumpData>
_TEXT	ENDS
PUBLIC	??$addressof@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@YAPAU?$pair@$$CBKUJumpList@ioJumpController@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned long const ,ioJumpController::JumpList> >
; Function compile flags: /Ogsp
;	COMDAT ??$addressof@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@YAPAU?$pair@$$CBKUJumpList@ioJumpController@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@YAPAU?$pair@$$CBKUJumpList@ioJumpController@@@0@AAU10@@Z PROC ; std::addressof<std::pair<unsigned long const ,ioJumpController::JumpList> >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@YAPAU?$pair@$$CBKUJumpList@ioJumpController@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<unsigned long const ,ioJumpController::JumpList> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Node><std::pair<unsigned long const ,ioJumpController::JumpList> >
; Function compile flags: /Ogsp
;	COMDAT ??$?0U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Node><std::pair<unsigned long const ,ioJumpController::JumpList> >, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Node><std::pair<unsigned long const ,ioJumpController::JumpList> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Node>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T536431 = -12						; size = 12
$T536435 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3c		 je	 SHORT $LN5@Allocate@2

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 66 66 66
	06		 cmp	 ecx, 107374182		; 06666666H
  00015	77 0e		 ja	 SHORT $LN1@Allocate@2
  00017	6b c9 28	 imul	 ecx, 40			; 00000028H
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00020	59		 pop	 ecx
  00021	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00023	75 26		 jne	 SHORT $LN5@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00025	83 65 08 00	 and	 DWORD PTR $T536435[ebp], 0
  00029	8d 45 08	 lea	 eax, DWORD PTR $T536435[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR $T536431[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00036	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003b	8d 45 f4	 lea	 eax, DWORD PTR $T536431[ebp]
  0003e	50		 push	 eax
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T536431[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00046	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:

; 40   : 	}

  0004b	c9		 leave
  0004c	c3		 ret	 0
$LN9@Allocate@2:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 aa aa aa 0a	 mov	 eax, 178956970		; 0aaaaaaaH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >::max_size
_TEXT	ENDS
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::operator--
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 83   : 		{	// predecrement

  00000	8b c1		 mov	 eax, ecx

; 84   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	53		 push	 ebx
  00005	32 db		 xor	 bl, bl
  00007	38 59 25	 cmp	 BYTE PTR [ecx+37], bl
  0000a	74 07		 je	 SHORT $LN8@operator

; 85   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

  0000c	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
  00011	5b		 pop	 ebx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00012	c3		 ret	 0
$LN8@operator:

; 86   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	38 5a 25	 cmp	 BYTE PTR [edx+37], bl
  00018	74 07		 je	 SHORT $LN44@operator

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0001a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001d	eb 17		 jmp	 SHORT $LN46@operator

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

$LL22@operator:
  0001f	8b d1		 mov	 edx, ecx
$LN44@operator:
  00021	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00024	38 59 25	 cmp	 BYTE PTR [ecx+37], bl
  00027	74 f6		 je	 SHORT $LL22@operator

; 89   : 		else

  00029	eb 17		 jmp	 SHORT $LN45@operator
$LL4@operator:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0002f	75 0a		 jne	 SHORT $LN3@operator

; 94   : 				_Ptr = _Pnode;	// ==> parent while left subtree

  00031	89 10		 mov	 DWORD PTR [eax], edx
  00033	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
$LN46@operator:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  00036	38 5a 25	 cmp	 BYTE PTR [edx+37], bl
  00039	74 f0		 je	 SHORT $LL4@operator
$LN3@operator:

; 95   : 			if (_Mytree::_Isnil(_Ptr))

  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	38 59 25	 cmp	 BYTE PTR [ecx+37], bl
  00040	75 02		 jne	 SHORT $LN1@operator
$LN45@operator:

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

  00042	89 10		 mov	 DWORD PTR [eax], edx
$LN1@operator:
  00044	5b		 pop	 ebx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00045	c3		 ret	 0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
PUBLIC	??$forward@AAUJumpList@ioJumpController@@@std@@YAAAUJumpList@ioJumpController@@AAU12@@Z ; std::forward<ioJumpController::JumpList &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAUJumpList@ioJumpController@@@std@@YAAAUJumpList@ioJumpController@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUJumpList@ioJumpController@@@std@@YAAAUJumpList@ioJumpController@@AAU12@@Z PROC ; std::forward<ioJumpController::JumpList &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAUJumpList@ioJumpController@@@std@@YAAAUJumpList@ioJumpController@@AAU12@@Z ENDP ; std::forward<ioJumpController::JumpList &>
_TEXT	ENDS
PUBLIC	??$forward@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@YA$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@0@AAU10@@Z ; std::forward<std::pair<unsigned long const ,ioJumpController::JumpList> >
; Function compile flags: /Ogsp
;	COMDAT ??$forward@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@YA$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@YA$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@0@AAU10@@Z PROC ; std::forward<std::pair<unsigned long const ,ioJumpController::JumpList> >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@YA$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@0@AAU10@@Z ENDP ; std::forward<std::pair<unsigned long const ,ioJumpController::JumpList> >
_TEXT	ENDS
PUBLIC	??$forward@AAUJumpData@ioJumpController@@@std@@YAAAUJumpData@ioJumpController@@AAU12@@Z ; std::forward<ioJumpController::JumpData &>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@AAUJumpData@ioJumpController@@@std@@YAAAUJumpData@ioJumpController@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUJumpData@ioJumpController@@@std@@YAAAUJumpData@ioJumpController@@AAU12@@Z PROC ; std::forward<ioJumpController::JumpData &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAUJumpData@ioJumpController@@@std@@YAAAUJumpData@ioJumpController@@AAU12@@Z ENDP ; std::forward<ioJumpController::JumpData &>
_TEXT	ENDS
PUBLIC	??$construct@AAUJumpData@ioJumpController@@@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@AAU23@@Z ; std::allocator<ioJumpController::JumpData>::construct<ioJumpController::JumpData &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAUJumpData@ioJumpController@@@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@AAU23@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUJumpData@ioJumpController@@@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@AAU23@@Z PROC ; std::allocator<ioJumpController::JumpData>::construct<ioJumpController::JumpData &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN3@construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN3@construct:

; 209  : 		}

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
??$construct@AAUJumpData@ioJumpController@@@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@AAU23@@Z ENDP ; std::allocator<ioJumpController::JumpData>::construct<ioJumpController::JumpData &>
_TEXT	ENDS
PUBLIC	??$forward@ABUJumpData@ioJumpController@@@std@@YAABUJumpData@ioJumpController@@ABU12@@Z ; std::forward<ioJumpController::JumpData const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABUJumpData@ioJumpController@@@std@@YAABUJumpData@ioJumpController@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUJumpData@ioJumpController@@@std@@YAABUJumpData@ioJumpController@@ABU12@@Z PROC ; std::forward<ioJumpController::JumpData const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABUJumpData@ioJumpController@@@std@@YAABUJumpData@ioJumpController@@ABU12@@Z ENDP ; std::forward<ioJumpController::JumpData const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@UJumpData@ioJumpController@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUJumpData@ioJumpController@@0@Z ; std::_Ptr_cat<ioJumpController::JumpData,ioJumpController::JumpData>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@UJumpData@ioJumpController@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUJumpData@ioJumpController@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UJumpData@ioJumpController@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUJumpData@ioJumpController@@0@Z PROC ; std::_Ptr_cat<ioJumpController::JumpData,ioJumpController::JumpData>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@UJumpData@ioJumpController@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUJumpData@ioJumpController@@0@Z ENDP ; std::_Ptr_cat<ioJumpController::JumpData,ioJumpController::JumpData>
_TEXT	ENDS
PUBLIC	??$_Construct@UJumpData@ioJumpController@@ABU12@@std@@YAXPAUJumpData@ioJumpController@@ABU12@@Z ; std::_Construct<ioJumpController::JumpData,ioJumpController::JumpData const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Construct@UJumpData@ioJumpController@@ABU12@@std@@YAXPAUJumpData@ioJumpController@@ABU12@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UJumpData@ioJumpController@@ABU12@@std@@YAXPAUJumpData@ioJumpController@@ABU12@@Z PROC ; std::_Construct<ioJumpController::JumpData,ioJumpController::JumpData const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN3@Construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN3@Construct:

; 49   : 	}

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Construct@UJumpData@ioJumpController@@ABU12@@std@@YAXPAUJumpData@ioJumpController@@ABU12@@Z ENDP ; std::_Construct<ioJumpController::JumpData,ioJumpController::JumpData const &>
_TEXT	ENDS
PUBLIC	??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > > &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > > &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > > &>
_TEXT	ENDS
PUBLIC	?begin@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@XZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::begin
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?begin@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@XZ PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::begin, COMDAT
; _this$ = ecx

; 786  : 		{	// return iterator for beginning of nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 787  : 		return (const_iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 788  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@XZ ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@XZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@XZ PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::end, COMDAT
; _this$ = ecx

; 796  : 		{	// return iterator for end of nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 797  : 		return (const_iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 798  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@XZ ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::end
_TEXT	ENDS
PUBLIC	??$move@AAUJumpData@ioJumpController@@@std@@YA$$QAUJumpData@ioJumpController@@AAU12@@Z ; std::move<ioJumpController::JumpData &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAUJumpData@ioJumpController@@@std@@YA$$QAUJumpData@ioJumpController@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUJumpData@ioJumpController@@@std@@YA$$QAUJumpData@ioJumpController@@AAU12@@Z PROC ; std::move<ioJumpController::JumpData &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAUJumpData@ioJumpController@@@std@@YA$$QAUJumpData@ioJumpController@@AAU12@@Z ENDP ; std::move<ioJumpController::JumpData &>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAUJumpData@ioJumpController@@@std@@YAPAUJumpData@ioJumpController@@PAU12@@Z ; std::_Val_type<ioJumpController::JumpData *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAUJumpData@ioJumpController@@@std@@YAPAUJumpData@ioJumpController@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUJumpData@ioJumpController@@@std@@YAPAUJumpData@ioJumpController@@PAU12@@Z PROC ; std::_Val_type<ioJumpController::JumpData *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAUJumpData@ioJumpController@@@std@@YAPAUJumpData@ioJumpController@@PAU12@@Z ENDP ; std::_Val_type<ioJumpController::JumpData *>
_TEXT	ENDS
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > > &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > > &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$_Destroy@UJumpData@ioJumpController@@@std@@YAXPAUJumpData@ioJumpController@@@Z ; std::_Destroy<ioJumpController::JumpData>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@UJumpData@ioJumpController@@@std@@YAXPAUJumpData@ioJumpController@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UJumpData@ioJumpController@@@std@@YAXPAUJumpData@ioJumpController@@@Z PROC ; std::_Destroy<ioJumpController::JumpData>, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@UJumpData@ioJumpController@@@std@@YAXPAUJumpData@ioJumpController@@@Z ENDP ; std::_Destroy<ioJumpController::JumpData>
_TEXT	ENDS
PUBLIC	??$forward@UJumpData@ioJumpController@@@std@@YA$$QAUJumpData@ioJumpController@@AAU12@@Z ; std::forward<ioJumpController::JumpData>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@UJumpData@ioJumpController@@@std@@YA$$QAUJumpData@ioJumpController@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UJumpData@ioJumpController@@@std@@YA$$QAUJumpData@ioJumpController@@AAU12@@Z PROC ; std::forward<ioJumpController::JumpData>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@UJumpData@ioJumpController@@@std@@YA$$QAUJumpData@ioJumpController@@AAU12@@Z ENDP ; std::forward<ioJumpController::JumpData>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@PAUJumpData@ioJumpController@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@0@AAPAUJumpData@ioJumpController@@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >,ioJumpController::JumpData *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@PAUJumpData@ioJumpController@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@0@AAPAUJumpData@ioJumpController@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@PAUJumpData@ioJumpController@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@0@AAPAUJumpData@ioJumpController@@@Z PROC ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >,ioJumpController::JumpData *>, COMDAT

; 485  : 	{	// return pointer category from arbitrary arguments

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 486  : 	_Nonscalar_ptr_iterator_tag _Cat;
; 487  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 488  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@PAUJumpData@ioJumpController@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@0@AAPAUJumpData@ioJumpController@@@Z ENDP ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >,ioJumpController::JumpData *>
_TEXT	ENDS
PUBLIC	??$forward@$$CBK@std@@YA$$QBKABK@Z		; std::forward<unsigned long const >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@$$CBK@std@@YA$$QBKABK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@$$CBK@std@@YA$$QBKABK@Z PROC			; std::forward<unsigned long const >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@$$CBK@std@@YA$$QBKABK@Z ENDP			; std::forward<unsigned long const >
_TEXT	ENDS
PUBLIC	??$forward@UJumpList@ioJumpController@@@std@@YA$$QAUJumpList@ioJumpController@@AAU12@@Z ; std::forward<ioJumpController::JumpList>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@UJumpList@ioJumpController@@@std@@YA$$QAUJumpList@ioJumpController@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UJumpList@ioJumpController@@@std@@YA$$QAUJumpList@ioJumpController@@AAU12@@Z PROC ; std::forward<ioJumpController::JumpList>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@UJumpList@ioJumpController@@@std@@YA$$QAUJumpList@ioJumpController@@AAU12@@Z ENDP ; std::forward<ioJumpController::JumpList>
_TEXT	ENDS
PUBLIC	??$move@ABK@std@@YA$$QBKABK@Z			; std::move<unsigned long const &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@ABK@std@@YA$$QBKABK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@ABK@std@@YA$$QBKABK@Z PROC			; std::move<unsigned long const &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@ABK@std@@YA$$QBKABK@Z ENDP			; std::move<unsigned long const &>
_TEXT	ENDS
PUBLIC	??$move@AAUJumpList@ioJumpController@@@std@@YA$$QAUJumpList@ioJumpController@@AAU12@@Z ; std::move<ioJumpController::JumpList &>
; Function compile flags: /Ogsp
;	COMDAT ??$move@AAUJumpList@ioJumpController@@@std@@YA$$QAUJumpList@ioJumpController@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUJumpList@ioJumpController@@@std@@YA$$QAUJumpList@ioJumpController@@AAU12@@Z PROC ; std::move<ioJumpController::JumpList &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAUJumpList@ioJumpController@@@std@@YA$$QAUJumpList@ioJumpController@@AAU12@@Z ENDP ; std::move<ioJumpController::JumpList &>
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QBEABUJumpData@ioJumpController@@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::operator*
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QBEABUJumpData@ioJumpController@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QBEABUJumpData@ioJumpController@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::operator*, COMDAT
; _this$ = ecx

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 85   : 		}

  00002	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QBEABUJumpData@ioJumpController@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::operator++, COMDAT
; _this$ = ecx

; 93   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

  00002	83 00 08	 add	 DWORD PTR [eax], 8

; 111  : 		return (*this);
; 112  : 		}

  00005	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::operator++
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
PUBLIC	?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::operator[]
; Function compile flags: /Ogsp
;	COMDAT ??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00008	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::operator[]
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@KV?$allocator@K@std@@@std@@IBE_NPBK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Inside
; Function compile flags: /Ogsp
;	COMDAT ?_Inside@?$vector@KV?$allocator@K@std@@@std@@IBE_NPBK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@KV?$allocator@K@std@@@std@@IBE_NPBK@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 09		 jae	 SHORT $LN3@Inside@2
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 05		 ja	 SHORT $LN3@Inside@2
  0000f	33 c0		 xor	 eax, eax
  00011	40		 inc	 eax
  00012	eb 02		 jmp	 SHORT $LN4@Inside@2
$LN3@Inside@2:
  00014	33 c0		 xor	 eax, eax
$LN4@Inside@2:

; 1287 : 		}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?_Inside@?$vector@KV?$allocator@K@std@@@std@@IBE_NPBK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@IBEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range
; Function compile flags: /Ogsp
;	COMDAT ?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@IBEXPAK0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@IBEXPAK0@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@IBEXPAK0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@XZ ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::~_Vector_val<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::~_Vector_val<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::~_Vector_val<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??0?$allocator@K@std@@QAE@XZ			; std::allocator<unsigned long>::allocator<unsigned long>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@K@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@K@std@@QAE@XZ PROC			; std::allocator<unsigned long>::allocator<unsigned long>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@K@std@@QAE@XZ ENDP			; std::allocator<unsigned long>::allocator<unsigned long>
_TEXT	ENDS
PUBLIC	?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 778  : 		}

  00008	c3		 ret	 0
?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
; Function compile flags: /Ogsp
;	COMDAT ?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@2:
$LN3@Xlen@2:
  0000b	cc		 int	 3
?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@K@std@@QAE@ABV01@@Z		; std::allocator<unsigned long>::allocator<unsigned long>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@K@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@K@std@@QAE@ABV01@@Z PROC			; std::allocator<unsigned long>::allocator<unsigned long>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@K@std@@QAE@ABV01@@Z ENDP			; std::allocator<unsigned long>::allocator<unsigned long>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@K@std@@QAEXPAKI@Z	; std::allocator<unsigned long>::deallocate
; Function compile flags: /Ogsp
;	COMDAT ?deallocate@?$allocator@K@std@@QAEXPAKI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@K@std@@QAEXPAKI@Z PROC		; std::allocator<unsigned long>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 183  : 		}

  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?deallocate@?$allocator@K@std@@QAEXPAKI@Z ENDP		; std::allocator<unsigned long>::deallocate
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@K@std@@QBEIXZ		; std::allocator<unsigned long>::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$allocator@K@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@K@std@@QBEIXZ PROC		; std::allocator<unsigned long>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@K@std@@QBEIXZ ENDP		; std::allocator<unsigned long>::max_size
_TEXT	ENDS
PUBLIC	??$addressof@$$CBK@std@@YAPBKABK@Z		; std::addressof<unsigned long const >
; Function compile flags: /Ogsp
;	COMDAT ??$addressof@$$CBK@std@@YAPBKABK@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBK@std@@YAPBKABK@Z PROC			; std::addressof<unsigned long const >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@$$CBK@std@@YAPBKABK@Z ENDP			; std::addressof<unsigned long const >
_TEXT	ENDS
PUBLIC	??$_Allocate@K@std@@YAPAKIPAK@Z			; std::_Allocate<unsigned long>
; Function compile flags: /Ogsp
;	COMDAT ??$_Allocate@K@std@@YAPAKIPAK@Z
_TEXT	SEGMENT
$T536640 = -12						; size = 12
$T536644 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@K@std@@YAPAKIPAK@Z PROC			; std::_Allocate<unsigned long>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3e		 je	 SHORT $LN5@Allocate@3

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00015	77 10		 ja	 SHORT $LN1@Allocate@3
  00017	8b c1		 mov	 eax, ecx
  00019	c1 e0 02	 shl	 eax, 2
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	59		 pop	 ecx
  00023	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00025	75 26		 jne	 SHORT $LN5@Allocate@3
$LN1@Allocate@3:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00027	83 65 08 00	 and	 DWORD PTR $T536644[ebp], 0
  0002b	8d 45 08	 lea	 eax, DWORD PTR $T536644[ebp]
  0002e	50		 push	 eax
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T536640[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00038	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0003d	8d 45 f4	 lea	 eax, DWORD PTR $T536640[ebp]
  00040	50		 push	 eax
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T536640[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00048	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@3:
$LN5@Allocate@3:

; 40   : 	}

  0004d	c9		 leave
  0004e	c3		 ret	 0
$LN9@Allocate@3:
??$_Allocate@K@std@@YAPAKIPAK@Z ENDP			; std::_Allocate<unsigned long>
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$forward@AAK@std@@YAAAKAAK@Z			; std::forward<unsigned long &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAK@std@@YAAAKAAK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAK@std@@YAAAKAAK@Z PROC			; std::forward<unsigned long &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAK@std@@YAAAKAAK@Z ENDP			; std::forward<unsigned long &>
_TEXT	ENDS
PUBLIC	??$construct@AAK@?$allocator@K@std@@QAEXPAKAAK@Z ; std::allocator<unsigned long>::construct<unsigned long &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAK@?$allocator@K@std@@QAEXPAKAAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAK@?$allocator@K@std@@QAEXPAKAAK@Z PROC	; std::allocator<unsigned long>::construct<unsigned long &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@construct@2
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@construct@2:

; 209  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
??$construct@AAK@?$allocator@K@std@@QAEXPAKAAK@Z ENDP	; std::allocator<unsigned long>::construct<unsigned long &>
_TEXT	ENDS
PUBLIC	??$forward@ABK@std@@YAABKABK@Z			; std::forward<unsigned long const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABK@std@@YAABKABK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABK@std@@YAABKABK@Z PROC			; std::forward<unsigned long const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABK@std@@YAABKABK@Z ENDP			; std::forward<unsigned long const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z ; std::_Ptr_cat<unsigned long,unsigned long>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z PROC ; std::_Ptr_cat<unsigned long,unsigned long>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	c9		 leave
  00008	c3		 ret	 0
??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z ENDP ; std::_Ptr_cat<unsigned long,unsigned long>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<unsigned long> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned long> >, COMDAT

; 105  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT

; 94   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 95   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 96   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
_TEXT	ENDS
PUBLIC	??$_Construct@KABK@std@@YAXPAKABK@Z		; std::_Construct<unsigned long,unsigned long const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Construct@KABK@std@@YAXPAKABK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@KABK@std@@YAXPAKABK@Z PROC		; std::_Construct<unsigned long,unsigned long const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@Construct@2
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@Construct@2:

; 49   : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Construct@KABK@std@@YAXPAKABK@Z ENDP		; std::_Construct<unsigned long,unsigned long const &>
_TEXT	ENDS
PUBLIC	??$move@AA_N@std@@YA$$QA_NAA_N@Z		; std::move<bool &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AA_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AA_N@std@@YA$$QA_NAA_N@Z PROC			; std::move<bool &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AA_N@std@@YA$$QA_NAA_N@Z ENDP			; std::move<bool &>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAK@std@@YAPAKPAK@Z		; std::_Val_type<unsigned long *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAK@std@@YAPAKPAK@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAK@std@@YAPAKPAK@Z PROC			; std::_Val_type<unsigned long *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAK@std@@YAPAKPAK@Z ENDP			; std::_Val_type<unsigned long *>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@KKK@std@@YAPAKPAK00AAV?$allocator@K@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<unsigned long,unsigned long,unsigned long>
EXTRN	__imp__memmove:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@KKK@std@@YAPAKPAK00AAV?$allocator@K@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@KKK@std@@YAPAKPAK00AAV?$allocator@K@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<unsigned long,unsigned long,unsigned long>, COMDAT

; 456  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 457  : 	_DEBUG_RANGE(_First, _Last);
; 458  : 	_DEBUG_POINTER(_Dest);
; 459  : 	size_t _Count = (size_t)(_Last - _First);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2

; 460  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 461  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 462  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninit_move@KKK@std@@YAPAKPAK00AAV?$allocator@K@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<unsigned long,unsigned long,unsigned long>
_TEXT	ENDS
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
PUBLIC	??$forward@H@std@@YA$$QAHAAH@Z			; std::forward<int>
; Function compile flags: /Ogsp
;	COMDAT ??$forward@H@std@@YA$$QAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@H@std@@YA$$QAHAAH@Z PROC			; std::forward<int>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@H@std@@YA$$QAHAAH@Z ENDP			; std::forward<int>
_TEXT	ENDS
PUBLIC	?IsJump@ioJumpController@@QAE_NXZ		; ioJumpController::IsJump
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iojumpcontroller.cpp
;	COMDAT ?IsJump@ioJumpController@@QAE_NXZ
_TEXT	SEGMENT
?IsJump@ioJumpController@@QAE_NXZ PROC			; ioJumpController::IsJump, COMDAT
; _this$ = ecx

; 124  : 	if( m_CurJump.m_Jump.empty() )

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00003	3b 41 18	 cmp	 eax, DWORD PTR [ecx+24]
  00006	0f 95 c0	 setne	 al

; 125  : 		return false;
; 126  : 	return true;
; 127  : }

  00009	c3		 ret	 0
?IsJump@ioJumpController@@QAE_NXZ ENDP			; ioJumpController::IsJump
_TEXT	ENDS
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator!=
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator!=, COMDAT
; _this$ = ecx

; 334  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 335  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 336  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@V?$allocator@UJumpData@ioJumpController@@@1@@Z ; std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@V?$allocator@UJumpData@ioJumpController@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@V?$allocator@UJumpData@ioJumpController@@@1@@Z PROC ; std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@V?$allocator@UJumpData@ioJumpController@@@1@@Z ENDP ; std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Lmost
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1759 : 		return (this->_Left(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1760 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >, COMDAT
; _this$ = ecx

; 555  : 		this->_Alnod.deallocate(this->_Myhead, 1);

  00000	ff 71 04	 push	 DWORD PTR [ecx+4]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx

; 556  : 		}

  00009	c3		 ret	 0
??1?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Key
; Function compile flags: /Ogsp
;	COMDAT ?_Key@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Key, COMDAT

; 616  : 		{	// return reference to key in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 617  : 		return ((key_type&)_Traits::_Kfn(_Myval(_Pnode)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 618  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Key@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@SAAAKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Key
_TEXT	ENDS
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKUJumpList@ioJumpController@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator*
; Function compile flags: /Ogsp
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKUJumpList@ioJumpController@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKUJumpList@ioJumpController@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 396  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 397  : 		}

  00005	c3		 ret	 0
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBKUJumpList@ioJumpController@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >, COMDAT
; _this$ = ecx

; 208  : 		{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0

; 209  : 		}

  00005	c3		 ret	 0
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QAE@PAUJumpData@ioJumpController@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::_Vector_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QAE@PAUJumpData@ioJumpController@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QAE@PAUJumpData@ioJumpController@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::_Vector_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 305  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QAE@PAUJumpData@ioJumpController@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::_Vector_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >
_TEXT	ENDS
PUBLIC	?max_size@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBEIXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBEIXZ PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBEIXZ ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IBEII@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IBEII@Z PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  00008	ba ff ff ff 1f	 mov	 edx, 536870911		; 1fffffffH
  0000d	c1 f8 03	 sar	 eax, 3
  00010	8b c8		 mov	 ecx, eax
  00012	d1 e9		 shr	 ecx, 1
  00014	2b d1		 sub	 edx, ecx
  00016	3b d0		 cmp	 edx, eax
  00018	73 04		 jae	 SHORT $LN4@Grow_to
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 02		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  0001e	03 c1		 add	 eax, ecx
$LN5@Grow_to:

; 1279 : 		if (_Capacity < _Count)

  00020	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00023	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?_Grow_to@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IBEII@Z ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Grow_to
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 214  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	53		 push	 ebx
  00005	32 db		 xor	 bl, bl
  00007	38 59 25	 cmp	 BYTE PTR [ecx+37], bl
  0000a	75 2d		 jne	 SHORT $LN3@operator@2

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

  0000c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000f	38 5a 25	 cmp	 BYTE PTR [edx+37], bl
  00012	75 0d		 jne	 SHORT $LN34@operator@2

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

$LL18@operator@2:
  00014	8b ca		 mov	 ecx, edx
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	38 5a 25	 cmp	 BYTE PTR [edx+37], bl
  0001b	74 f7		 je	 SHORT $LL18@operator@2
  0001d	89 08		 mov	 DWORD PTR [eax], ecx
  0001f	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  00020	c3		 ret	 0
$LN34@operator@2:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00021	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00024	eb 0c		 jmp	 SHORT $LN38@operator@2
$LL2@operator@2:
  00026	8b 08		 mov	 ecx, DWORD PTR [eax]
  00028	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  0002b	75 0a		 jne	 SHORT $LN1@operator@2

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
$LN38@operator@2:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00032	38 5a 25	 cmp	 BYTE PTR [edx+37], bl
  00035	74 ef		 je	 SHORT $LL2@operator@2
$LN1@operator@2:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

  00037	89 10		 mov	 DWORD PTR [eax], edx
$LN3@operator@2:
  00039	5b		 pop	 ebx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  0003a	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@UJumpData@ioJumpController@@@std@@QAEPAUJumpData@ioJumpController@@I@Z ; std::allocator<ioJumpController::JumpData>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@UJumpData@ioJumpController@@@std@@QAEPAUJumpData@ioJumpController@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@UJumpData@ioJumpController@@@std@@QAEPAUJumpData@ioJumpController@@I@Z PROC ; std::allocator<ioJumpController::JumpData>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@UJumpData@ioJumpController@@@std@@YAPAUJumpData@ioJumpController@@IPAU12@@Z ; std::_Allocate<ioJumpController::JumpData>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@UJumpData@ioJumpController@@@std@@QAEPAUJumpData@ioJumpController@@I@Z ENDP ; std::allocator<ioJumpController::JumpData>::allocate
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Root
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1790 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >, COMDAT
; _this$ = ecx

; 482  : 		{	// construct traits from _Parg and allocators from _Al

  00000	8b c1		 mov	 eax, ecx

; 483  : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Node>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Node>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::operator==
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::operator==, COMDAT
; _this$ = ecx

; 201  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000a	f7 d8		 neg	 eax
  0000c	1b c0		 sbb	 eax, eax
  0000e	40		 inc	 eax

; 204  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::operator==
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Lrotate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00009	56		 push	 esi

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

  0000f	8b 30		 mov	 esi, DWORD PTR [eax]
  00011	80 7e 25 00	 cmp	 BYTE PTR [esi+37], 0
  00015	75 03		 jne	 SHORT $LN5@Lrotate

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Lrotate:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 05		 jne	 SHORT $LN4@Lrotate

; 1772 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

  0002c	eb 0e		 jmp	 SHORT $LN1@Lrotate
$LN4@Lrotate:
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00033	75 04		 jne	 SHORT $LN2@Lrotate

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  00035	89 01		 mov	 DWORD PTR [ecx], eax

; 1775 : 		else

  00037	eb 03		 jmp	 SHORT $LN1@Lrotate
$LN2@Lrotate:

; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00039	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@Lrotate:

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0003c	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  0003e	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Rrotate
; Function compile flags: /Ogsp
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	56		 push	 esi

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

  00009	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000c	89 32		 mov	 DWORD PTR [edx], esi

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

  0000e	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00011	80 7e 25 00	 cmp	 BYTE PTR [esi+37], 0
  00015	75 03		 jne	 SHORT $LN5@Rrotate

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Rrotate:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 05		 jne	 SHORT $LN4@Rrotate

; 1802 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

  0002c	eb 0f		 jmp	 SHORT $LN1@Rrotate
$LN4@Rrotate:
  0002e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00031	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00034	75 05		 jne	 SHORT $LN2@Rrotate

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00036	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1805 : 		else

  00039	eb 02		 jmp	 SHORT $LN1@Rrotate
$LN2@Rrotate:

; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  0003b	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@Rrotate:

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  0003d	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00040	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$SetTitle_e@$0P@@ioINILoader@@QAEXAAY0P@$$CBD@Z ; ioINILoader::SetTitle_e<15>
EXTRN	__imp_?SetTitle@ioINILoader@@QAEXPBD@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$SetTitle_e@$0P@@ioINILoader@@QAEXAAY0P@$$CBD@Z
_TEXT	SEGMENT
__t$ = -24						; size = 15
__$ArrayPad$ = -4					; size = 4
_t$ = 8							; size = 4
??$SetTitle_e@$0P@@ioINILoader@@QAEXAAY0P@$$CBD@Z PROC	; ioINILoader::SetTitle_e<15>, COMDAT
; _this$ = ecx

; 188  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]

; 189  : 		_ENCSTR(t, _t);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 75 01 00
	00		 je	 $LN96@SetTitle_e
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e8	 mov	 BYTE PTR __t$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 5e 01 00
	00		 je	 $LN95@SetTitle_e
  00031	b1 ec		 mov	 cl, -20			; ffffffecH
  00033	32 d1		 xor	 dl, cl
  00035	88 55 e9	 mov	 BYTE PTR __t$[ebp+1], dl
  00038	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003b	84 d2		 test	 dl, dl
  0003d	0f 84 46 01 00
	00		 je	 $LN94@SetTitle_e
  00043	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00046	88 55 ea	 mov	 BYTE PTR __t$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 2f 01 00
	00		 je	 $LN93@SetTitle_e
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 eb	 mov	 BYTE PTR __t$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 18 01 00
	00		 je	 $LN92@SetTitle_e
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 ec	 mov	 BYTE PTR __t$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 02 01 00
	00		 je	 $LN91@SetTitle_e
  00076	32 d1		 xor	 dl, cl
  00078	88 55 ed	 mov	 BYTE PTR __t$[ebp+5], dl
  0007b	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007e	84 d2		 test	 dl, dl
  00080	0f 84 ec 00 00
	00		 je	 $LN90@SetTitle_e
  00086	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00089	88 55 ee	 mov	 BYTE PTR __t$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 d5 00 00
	00		 je	 $LN89@SetTitle_e
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 ef	 mov	 BYTE PTR __t$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 be 00 00
	00		 je	 $LN88@SetTitle_e
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 f0	 mov	 BYTE PTR __t$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 a8 00 00
	00		 je	 $LN87@SetTitle_e
  000b9	32 d1		 xor	 dl, cl
  000bb	88 55 f1	 mov	 BYTE PTR __t$[ebp+9], dl
  000be	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c1	84 d2		 test	 dl, dl
  000c3	0f 84 92 00 00
	00		 je	 $LN86@SetTitle_e
  000c9	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000cc	88 55 f2	 mov	 BYTE PTR __t$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	74 7f		 je	 SHORT $LN85@SetTitle_e
  000d6	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d9	88 55 f3	 mov	 BYTE PTR __t$[ebp+11], dl
  000dc	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000df	84 d2		 test	 dl, dl
  000e1	74 6c		 je	 SHORT $LN84@SetTitle_e
  000e3	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e6	88 55 f4	 mov	 BYTE PTR __t$[ebp+12], dl
  000e9	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000ec	84 d2		 test	 dl, dl
  000ee	74 5a		 je	 SHORT $LN83@SetTitle_e
  000f0	32 d1		 xor	 dl, cl
  000f2	80 78 0e 00	 cmp	 BYTE PTR [eax+14], 0
  000f6	88 55 f5	 mov	 BYTE PTR __t$[ebp+13], dl
  000f9	0f 84 9a 00 00
	00		 je	 $LN1@SetTitle_e
  000ff	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00102	84 d2		 test	 dl, dl
  00104	74 3e		 je	 SHORT $LN81@SetTitle_e
  00106	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00109	88 55 f7	 mov	 BYTE PTR __t$[ebp+15], dl
  0010c	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  0010f	84 d2		 test	 dl, dl
  00111	74 2b		 je	 SHORT $LN80@SetTitle_e
  00113	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00116	88 55 f8	 mov	 BYTE PTR __t$[ebp+16], dl
  00119	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  0011c	84 d2		 test	 dl, dl
  0011e	74 19		 je	 SHORT $LN79@SetTitle_e
  00120	8a 40 12	 mov	 al, BYTE PTR [eax+18]
  00123	32 d1		 xor	 dl, cl
  00125	88 55 f9	 mov	 BYTE PTR __t$[ebp+17], dl
  00128	84 c0		 test	 al, al
  0012a	74 07		 je	 SHORT $LN78@SetTitle_e
  0012c	34 eb		 xor	 al, -21			; ffffffebH
  0012e	88 45 fa	 mov	 BYTE PTR __t$[ebp+18], al
  00131	eb 66		 jmp	 SHORT $LN1@SetTitle_e
$LN78@SetTitle_e:
  00133	c6 45 fa eb	 mov	 BYTE PTR __t$[ebp+18], -21 ; ffffffebH
  00137	eb 60		 jmp	 SHORT $LN1@SetTitle_e
$LN79@SetTitle_e:
  00139	88 4d f9	 mov	 BYTE PTR __t$[ebp+17], cl
  0013c	eb 5b		 jmp	 SHORT $LN1@SetTitle_e
$LN80@SetTitle_e:
  0013e	c6 45 f8 ed	 mov	 BYTE PTR __t$[ebp+16], -19 ; ffffffedH
  00142	eb 55		 jmp	 SHORT $LN1@SetTitle_e
$LN81@SetTitle_e:
  00144	c6 45 f7 ea	 mov	 BYTE PTR __t$[ebp+15], -22 ; ffffffeaH
  00148	eb 4f		 jmp	 SHORT $LN1@SetTitle_e
$LN83@SetTitle_e:
  0014a	88 4d f5	 mov	 BYTE PTR __t$[ebp+13], cl
  0014d	eb 4a		 jmp	 SHORT $LN1@SetTitle_e
$LN84@SetTitle_e:
  0014f	c6 45 f4 ed	 mov	 BYTE PTR __t$[ebp+12], -19 ; ffffffedH
  00153	eb 44		 jmp	 SHORT $LN1@SetTitle_e
$LN85@SetTitle_e:
  00155	c6 45 f3 ea	 mov	 BYTE PTR __t$[ebp+11], -22 ; ffffffeaH
  00159	eb 3e		 jmp	 SHORT $LN1@SetTitle_e
$LN86@SetTitle_e:
  0015b	c6 45 f2 eb	 mov	 BYTE PTR __t$[ebp+10], -21 ; ffffffebH
  0015f	eb 38		 jmp	 SHORT $LN1@SetTitle_e
$LN87@SetTitle_e:
  00161	88 4d f1	 mov	 BYTE PTR __t$[ebp+9], cl
  00164	eb 33		 jmp	 SHORT $LN1@SetTitle_e
$LN88@SetTitle_e:
  00166	c6 45 f0 ed	 mov	 BYTE PTR __t$[ebp+8], -19 ; ffffffedH
  0016a	eb 2d		 jmp	 SHORT $LN1@SetTitle_e
$LN89@SetTitle_e:
  0016c	c6 45 ef ea	 mov	 BYTE PTR __t$[ebp+7], -22 ; ffffffeaH
  00170	eb 27		 jmp	 SHORT $LN1@SetTitle_e
$LN90@SetTitle_e:
  00172	c6 45 ee eb	 mov	 BYTE PTR __t$[ebp+6], -21 ; ffffffebH
  00176	eb 21		 jmp	 SHORT $LN1@SetTitle_e
$LN91@SetTitle_e:
  00178	88 4d ed	 mov	 BYTE PTR __t$[ebp+5], cl
  0017b	eb 1c		 jmp	 SHORT $LN1@SetTitle_e
$LN92@SetTitle_e:
  0017d	c6 45 ec ed	 mov	 BYTE PTR __t$[ebp+4], -19 ; ffffffedH
  00181	eb 16		 jmp	 SHORT $LN1@SetTitle_e
$LN93@SetTitle_e:
  00183	c6 45 eb ea	 mov	 BYTE PTR __t$[ebp+3], -22 ; ffffffeaH
  00187	eb 10		 jmp	 SHORT $LN1@SetTitle_e
$LN94@SetTitle_e:
  00189	c6 45 ea eb	 mov	 BYTE PTR __t$[ebp+2], -21 ; ffffffebH
  0018d	eb 0a		 jmp	 SHORT $LN1@SetTitle_e
$LN95@SetTitle_e:
  0018f	c6 45 e9 ec	 mov	 BYTE PTR __t$[ebp+1], -20 ; ffffffecH
  00193	eb 04		 jmp	 SHORT $LN1@SetTitle_e
$LN96@SetTitle_e:
  00195	c6 45 e8 ed	 mov	 BYTE PTR __t$[ebp], -19	; ffffffedH
$LN1@SetTitle_e:
  00199	6a 03		 push	 3
  0019b	8d 45 e8	 lea	 eax, DWORD PTR __t$[ebp]
  0019e	c6 45 f6 00	 mov	 BYTE PTR __t$[ebp+14], 0
  001a2	5a		 pop	 edx
$LL104@SetTitle_e:
  001a3	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001a9	83 c0 04	 add	 eax, 4
  001ac	4a		 dec	 edx
  001ad	75 f4		 jne	 SHORT $LL104@SetTitle_e
  001af	6a 0c		 push	 12			; 0000000cH
  001b1	58		 pop	 eax
$LL101@SetTitle_e:
  001b2	8b c8		 mov	 ecx, eax
  001b4	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  001ba	79 05		 jns	 SHORT $LN111@SetTitle_e
  001bc	49		 dec	 ecx
  001bd	83 c9 fc	 or	 ecx, -4			; fffffffcH
  001c0	41		 inc	 ecx
$LN111@SetTitle_e:
  001c1	b2 ed		 mov	 dl, -19			; ffffffedH
  001c3	2a d1		 sub	 dl, cl
  001c5	30 54 05 e8	 xor	 BYTE PTR __t$[ebp+eax], dl
  001c9	40		 inc	 eax
  001ca	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  001cd	7c e3		 jl	 SHORT $LL101@SetTitle_e

; 190  : 		SetTitle(_t);

  001cf	8d 45 e8	 lea	 eax, DWORD PTR __t$[ebp]
  001d2	50		 push	 eax
  001d3	8b ce		 mov	 ecx, esi
  001d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 191  : 	}

  001db	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001de	33 cd		 xor	 ecx, ebp
  001e0	5e		 pop	 esi
  001e1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e6	c9		 leave
  001e7	c2 04 00	 ret	 4
??$SetTitle_e@$0P@@ioINILoader@@QAEXAAY0P@$$CBD@Z ENDP	; ioINILoader::SetTitle_e<15>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$0O@@ioINILoader@@QAEHAAY0O@$$CBDH@Z ; ioINILoader::LoadInt_e<14>
EXTRN	__imp_?LoadInt@ioINILoader@@QAEHPBDH@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$0O@@ioINILoader@@QAEHAAY0O@$$CBDH@Z
_TEXT	SEGMENT
__k$ = -24						; size = 14
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$0O@@ioINILoader@@QAEHAAY0O@$$CBDH@Z PROC	; ioINILoader::LoadInt_e<14>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 64 01 00
	00		 je	 $LN96@LoadInt_e
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e8	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 4d 01 00
	00		 je	 $LN95@LoadInt_e
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 e9	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 36 01 00
	00		 je	 $LN94@LoadInt_e
  00042	b1 eb		 mov	 cl, -21			; ffffffebH
  00044	32 d1		 xor	 dl, cl
  00046	88 55 ea	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 1e 01 00
	00		 je	 $LN93@LoadInt_e
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 eb	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 07 01 00
	00		 je	 $LN92@LoadInt_e
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 ec	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 f0 00 00
	00		 je	 $LN91@LoadInt_e
  00076	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00079	88 55 ed	 mov	 BYTE PTR __k$[ebp+5], dl
  0007c	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007f	84 d2		 test	 dl, dl
  00081	0f 84 da 00 00
	00		 je	 $LN90@LoadInt_e
  00087	32 d1		 xor	 dl, cl
  00089	88 55 ee	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 c4 00 00
	00		 je	 $LN89@LoadInt_e
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 ef	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 ad 00 00
	00		 je	 $LN88@LoadInt_e
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 f0	 mov	 BYTE PTR __k$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 96 00 00
	00		 je	 $LN87@LoadInt_e
  000b9	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000bc	88 55 f1	 mov	 BYTE PTR __k$[ebp+9], dl
  000bf	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c2	84 d2		 test	 dl, dl
  000c4	0f 84 80 00 00
	00		 je	 $LN86@LoadInt_e
  000ca	32 d1		 xor	 dl, cl
  000cc	88 55 f2	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	74 6e		 je	 SHORT $LN85@LoadInt_e
  000d6	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d9	88 55 f3	 mov	 BYTE PTR __k$[ebp+11], dl
  000dc	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000df	84 d2		 test	 dl, dl
  000e1	74 5b		 je	 SHORT $LN84@LoadInt_e
  000e3	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e6	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000ea	88 55 f4	 mov	 BYTE PTR __k$[ebp+12], dl
  000ed	0f 84 95 00 00
	00		 je	 $LN1@LoadInt_e
  000f3	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000f6	84 d2		 test	 dl, dl
  000f8	74 3f		 je	 SHORT $LN82@LoadInt_e
  000fa	32 d1		 xor	 dl, cl
  000fc	88 55 f6	 mov	 BYTE PTR __k$[ebp+14], dl
  000ff	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00102	84 d2		 test	 dl, dl
  00104	74 2d		 je	 SHORT $LN81@LoadInt_e
  00106	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00109	88 55 f7	 mov	 BYTE PTR __k$[ebp+15], dl
  0010c	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  0010f	84 d2		 test	 dl, dl
  00111	74 1a		 je	 SHORT $LN80@LoadInt_e
  00113	8a 40 11	 mov	 al, BYTE PTR [eax+17]
  00116	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00119	88 55 f8	 mov	 BYTE PTR __k$[ebp+16], dl
  0011c	84 c0		 test	 al, al
  0011e	74 07		 je	 SHORT $LN79@LoadInt_e
  00120	34 ec		 xor	 al, -20			; ffffffecH
  00122	88 45 f9	 mov	 BYTE PTR __k$[ebp+17], al
  00125	eb 61		 jmp	 SHORT $LN1@LoadInt_e
$LN79@LoadInt_e:
  00127	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+17], -20 ; ffffffecH
  0012b	eb 5b		 jmp	 SHORT $LN1@LoadInt_e
$LN80@LoadInt_e:
  0012d	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  00131	eb 55		 jmp	 SHORT $LN1@LoadInt_e
$LN81@LoadInt_e:
  00133	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00137	eb 4f		 jmp	 SHORT $LN1@LoadInt_e
$LN82@LoadInt_e:
  00139	88 4d f6	 mov	 BYTE PTR __k$[ebp+14], cl
  0013c	eb 4a		 jmp	 SHORT $LN1@LoadInt_e
$LN84@LoadInt_e:
  0013e	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00142	eb 44		 jmp	 SHORT $LN1@LoadInt_e
$LN85@LoadInt_e:
  00144	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00148	eb 3e		 jmp	 SHORT $LN1@LoadInt_e
$LN86@LoadInt_e:
  0014a	88 4d f2	 mov	 BYTE PTR __k$[ebp+10], cl
  0014d	eb 39		 jmp	 SHORT $LN1@LoadInt_e
$LN87@LoadInt_e:
  0014f	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  00153	eb 33		 jmp	 SHORT $LN1@LoadInt_e
$LN88@LoadInt_e:
  00155	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00159	eb 2d		 jmp	 SHORT $LN1@LoadInt_e
$LN89@LoadInt_e:
  0015b	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  0015f	eb 27		 jmp	 SHORT $LN1@LoadInt_e
$LN90@LoadInt_e:
  00161	88 4d ee	 mov	 BYTE PTR __k$[ebp+6], cl
  00164	eb 22		 jmp	 SHORT $LN1@LoadInt_e
$LN91@LoadInt_e:
  00166	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  0016a	eb 1c		 jmp	 SHORT $LN1@LoadInt_e
$LN92@LoadInt_e:
  0016c	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00170	eb 16		 jmp	 SHORT $LN1@LoadInt_e
$LN93@LoadInt_e:
  00172	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00176	eb 10		 jmp	 SHORT $LN1@LoadInt_e
$LN94@LoadInt_e:
  00178	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0017c	eb 0a		 jmp	 SHORT $LN1@LoadInt_e
$LN95@LoadInt_e:
  0017e	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00182	eb 04		 jmp	 SHORT $LN1@LoadInt_e
$LN96@LoadInt_e:
  00184	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e:
  00188	6a 03		 push	 3
  0018a	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  0018d	c6 45 f5 00	 mov	 BYTE PTR __k$[ebp+13], 0
  00191	5a		 pop	 edx
$LL104@LoadInt_e:
  00192	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00198	83 c0 04	 add	 eax, 4
  0019b	4a		 dec	 edx
  0019c	75 f4		 jne	 SHORT $LL104@LoadInt_e

; 120  : 		return LoadInt(_k, i);

  0019e	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  001a1	80 75 f4 ed	 xor	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  001a5	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001a8	50		 push	 eax
  001a9	8b ce		 mov	 ecx, esi
  001ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  001b1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001b4	33 cd		 xor	 ecx, ebp
  001b6	5e		 pop	 esi
  001b7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001bc	c9		 leave
  001bd	c2 08 00	 ret	 8
??$LoadInt_e@$0O@@ioINILoader@@QAEHAAY0O@$$CBDH@Z ENDP	; ioINILoader::LoadInt_e<14>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadFloat_e@$0M@@ioINILoader@@QAEMAAY0M@$$CBDM@Z ; ioINILoader::LoadFloat_e<12>
EXTRN	__imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z:PROC
EXTRN	__fltused:DWORD
; Function compile flags: /Ogsp
;	COMDAT ??$LoadFloat_e@$0M@@ioINILoader@@QAEMAAY0M@$$CBDM@Z
_TEXT	SEGMENT
__k$ = -20						; size = 12
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_f$ = 12						; size = 4
??$LoadFloat_e@$0M@@ioINILoader@@QAEMAAY0M@$$CBDM@Z PROC ; ioINILoader::LoadFloat_e<12>, COMDAT
; _this$ = ecx

; 135  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 136  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 32 01 00
	00		 je	 $LN96@LoadFloat_
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 ec	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 1b 01 00
	00		 je	 $LN95@LoadFloat_
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 ed	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 04 01 00
	00		 je	 $LN94@LoadFloat_
  00042	b1 eb		 mov	 cl, -21			; ffffffebH
  00044	32 d1		 xor	 dl, cl
  00046	88 55 ee	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 ec 00 00
	00		 je	 $LN93@LoadFloat_
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 ef	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 d5 00 00
	00		 je	 $LN92@LoadFloat_
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 f0	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 be 00 00
	00		 je	 $LN91@LoadFloat_
  00076	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00079	88 55 f1	 mov	 BYTE PTR __k$[ebp+5], dl
  0007c	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007f	84 d2		 test	 dl, dl
  00081	0f 84 a8 00 00
	00		 je	 $LN90@LoadFloat_
  00087	32 d1		 xor	 dl, cl
  00089	88 55 f2	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 92 00 00
	00		 je	 $LN89@LoadFloat_
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 f3	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	74 7f		 je	 SHORT $LN88@LoadFloat_
  000a4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a7	88 55 f4	 mov	 BYTE PTR __k$[ebp+8], dl
  000aa	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000ad	84 d2		 test	 dl, dl
  000af	74 6c		 je	 SHORT $LN87@LoadFloat_
  000b1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000b4	88 55 f5	 mov	 BYTE PTR __k$[ebp+9], dl
  000b7	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000ba	84 d2		 test	 dl, dl
  000bc	74 5a		 je	 SHORT $LN86@LoadFloat_
  000be	32 d1		 xor	 dl, cl
  000c0	80 78 0b 00	 cmp	 BYTE PTR [eax+11], 0
  000c4	88 55 f6	 mov	 BYTE PTR __k$[ebp+10], dl
  000c7	0f 84 89 00 00
	00		 je	 $LN1@LoadFloat_
  000cd	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000d0	84 d2		 test	 dl, dl
  000d2	74 3e		 je	 SHORT $LN84@LoadFloat_
  000d4	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000d7	88 55 f8	 mov	 BYTE PTR __k$[ebp+12], dl
  000da	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000dd	84 d2		 test	 dl, dl
  000df	74 2b		 je	 SHORT $LN83@LoadFloat_
  000e1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000e4	88 55 f9	 mov	 BYTE PTR __k$[ebp+13], dl
  000e7	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000ea	84 d2		 test	 dl, dl
  000ec	74 19		 je	 SHORT $LN82@LoadFloat_
  000ee	8a 40 0f	 mov	 al, BYTE PTR [eax+15]
  000f1	32 d1		 xor	 dl, cl
  000f3	88 55 fa	 mov	 BYTE PTR __k$[ebp+14], dl
  000f6	84 c0		 test	 al, al
  000f8	74 07		 je	 SHORT $LN81@LoadFloat_
  000fa	34 ea		 xor	 al, -22			; ffffffeaH
  000fc	88 45 fb	 mov	 BYTE PTR __k$[ebp+15], al
  000ff	eb 55		 jmp	 SHORT $LN1@LoadFloat_
$LN81@LoadFloat_:
  00101	c6 45 fb ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00105	eb 4f		 jmp	 SHORT $LN1@LoadFloat_
$LN82@LoadFloat_:
  00107	88 4d fa	 mov	 BYTE PTR __k$[ebp+14], cl
  0010a	eb 4a		 jmp	 SHORT $LN1@LoadFloat_
$LN83@LoadFloat_:
  0010c	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  00110	eb 44		 jmp	 SHORT $LN1@LoadFloat_
$LN84@LoadFloat_:
  00112	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00116	eb 3e		 jmp	 SHORT $LN1@LoadFloat_
$LN86@LoadFloat_:
  00118	88 4d f6	 mov	 BYTE PTR __k$[ebp+10], cl
  0011b	eb 39		 jmp	 SHORT $LN1@LoadFloat_
$LN87@LoadFloat_:
  0011d	c6 45 f5 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  00121	eb 33		 jmp	 SHORT $LN1@LoadFloat_
$LN88@LoadFloat_:
  00123	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00127	eb 2d		 jmp	 SHORT $LN1@LoadFloat_
$LN89@LoadFloat_:
  00129	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  0012d	eb 27		 jmp	 SHORT $LN1@LoadFloat_
$LN90@LoadFloat_:
  0012f	88 4d f2	 mov	 BYTE PTR __k$[ebp+6], cl
  00132	eb 22		 jmp	 SHORT $LN1@LoadFloat_
$LN91@LoadFloat_:
  00134	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  00138	eb 1c		 jmp	 SHORT $LN1@LoadFloat_
$LN92@LoadFloat_:
  0013a	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  0013e	eb 16		 jmp	 SHORT $LN1@LoadFloat_
$LN93@LoadFloat_:
  00140	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00144	eb 10		 jmp	 SHORT $LN1@LoadFloat_
$LN94@LoadFloat_:
  00146	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0014a	eb 0a		 jmp	 SHORT $LN1@LoadFloat_
$LN95@LoadFloat_:
  0014c	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00150	eb 04		 jmp	 SHORT $LN1@LoadFloat_
$LN96@LoadFloat_:
  00152	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadFloat_:
  00156	6a 02		 push	 2
  00158	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  0015b	c6 45 f7 00	 mov	 BYTE PTR __k$[ebp+11], 0
  0015f	5a		 pop	 edx
$LL104@LoadFloat_:
  00160	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00166	83 c0 04	 add	 eax, 4
  00169	4a		 dec	 edx
  0016a	75 f4		 jne	 SHORT $LL104@LoadFloat_
  0016c	6a 08		 push	 8
  0016e	58		 pop	 eax
$LL101@LoadFloat_:
  0016f	8b c8		 mov	 ecx, eax
  00171	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00177	79 05		 jns	 SHORT $LN111@LoadFloat_
  00179	49		 dec	 ecx
  0017a	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0017d	41		 inc	 ecx
$LN111@LoadFloat_:
  0017e	b2 ed		 mov	 dl, -19			; ffffffedH
  00180	2a d1		 sub	 dl, cl
  00182	30 54 05 ec	 xor	 BYTE PTR __k$[ebp+eax], dl
  00186	40		 inc	 eax
  00187	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  0018a	7c e3		 jl	 SHORT $LL101@LoadFloat_

; 137  : 		return LoadFloat(_k, f);

  0018c	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _f$[ebp]
  00191	51		 push	 ecx
  00192	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  00195	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019a	50		 push	 eax
  0019b	8b ce		 mov	 ecx, esi
  0019d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z

; 138  : 	}

  001a3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a6	33 cd		 xor	 ecx, ebp
  001a8	5e		 pop	 esi
  001a9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ae	c9		 leave
  001af	c2 08 00	 ret	 8
??$LoadFloat_e@$0M@@ioINILoader@@QAEMAAY0M@$$CBDM@Z ENDP ; ioINILoader::LoadFloat_e<12>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$06@ioINILoader@@QAEHAAY06$$CBDH@Z	; ioINILoader::LoadInt_e<7>
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$06@ioINILoader@@QAEHAAY06$$CBDH@Z
_TEXT	SEGMENT
__k$ = -16						; size = 7
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$06@ioINILoader@@QAEHAAY06$$CBDH@Z PROC	; ioINILoader::LoadInt_e<7>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 c0 00 00
	00		 je	 $LN96@LoadInt_e@2
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 f0	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 a9 00 00
	00		 je	 $LN95@LoadInt_e@2
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 f1	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 92 00 00
	00		 je	 $LN94@LoadInt_e@2
  00042	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00045	88 55 f2	 mov	 BYTE PTR __k$[ebp+2], dl
  00048	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004b	84 d2		 test	 dl, dl
  0004d	74 7f		 je	 SHORT $LN93@LoadInt_e@2
  0004f	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00052	88 55 f3	 mov	 BYTE PTR __k$[ebp+3], dl
  00055	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00058	84 d2		 test	 dl, dl
  0005a	74 6c		 je	 SHORT $LN92@LoadInt_e@2
  0005c	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0005f	88 55 f4	 mov	 BYTE PTR __k$[ebp+4], dl
  00062	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00065	84 d2		 test	 dl, dl
  00067	74 59		 je	 SHORT $LN91@LoadInt_e@2
  00069	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0006c	80 78 06 00	 cmp	 BYTE PTR [eax+6], 0
  00070	88 55 f5	 mov	 BYTE PTR __k$[ebp+5], dl
  00073	74 6f		 je	 SHORT $LN1@LoadInt_e@2
  00075	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00078	84 d2		 test	 dl, dl
  0007a	74 40		 je	 SHORT $LN89@LoadInt_e@2
  0007c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0007f	88 55 f7	 mov	 BYTE PTR __k$[ebp+7], dl
  00082	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  00085	84 d2		 test	 dl, dl
  00087	74 2d		 je	 SHORT $LN88@LoadInt_e@2
  00089	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0008c	88 55 f8	 mov	 BYTE PTR __k$[ebp+8], dl
  0008f	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  00092	84 d2		 test	 dl, dl
  00094	74 1a		 je	 SHORT $LN87@LoadInt_e@2
  00096	8a 40 0a	 mov	 al, BYTE PTR [eax+10]
  00099	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0009c	88 55 f9	 mov	 BYTE PTR __k$[ebp+9], dl
  0009f	84 c0		 test	 al, al
  000a1	74 07		 je	 SHORT $LN86@LoadInt_e@2
  000a3	34 eb		 xor	 al, -21			; ffffffebH
  000a5	88 45 fa	 mov	 BYTE PTR __k$[ebp+10], al
  000a8	eb 3a		 jmp	 SHORT $LN1@LoadInt_e@2
$LN86@LoadInt_e@2:
  000aa	c6 45 fa eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  000ae	eb 34		 jmp	 SHORT $LN1@LoadInt_e@2
$LN87@LoadInt_e@2:
  000b0	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  000b4	eb 2e		 jmp	 SHORT $LN1@LoadInt_e@2
$LN88@LoadInt_e@2:
  000b6	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  000ba	eb 28		 jmp	 SHORT $LN1@LoadInt_e@2
$LN89@LoadInt_e@2:
  000bc	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  000c0	eb 22		 jmp	 SHORT $LN1@LoadInt_e@2
$LN91@LoadInt_e@2:
  000c2	c6 45 f5 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  000c6	eb 1c		 jmp	 SHORT $LN1@LoadInt_e@2
$LN92@LoadInt_e@2:
  000c8	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  000cc	eb 16		 jmp	 SHORT $LN1@LoadInt_e@2
$LN93@LoadInt_e@2:
  000ce	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  000d2	eb 10		 jmp	 SHORT $LN1@LoadInt_e@2
$LN94@LoadInt_e@2:
  000d4	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  000d8	eb 0a		 jmp	 SHORT $LN1@LoadInt_e@2
$LN95@LoadInt_e@2:
  000da	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  000de	eb 04		 jmp	 SHORT $LN1@LoadInt_e@2
$LN96@LoadInt_e@2:
  000e0	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e@2:
  000e4	81 75 f0 ed ec
	eb ea		 xor	 DWORD PTR __k$[ebp], -353637139 ; eaebecedH
  000eb	6a 04		 push	 4
  000ed	c6 45 f6 00	 mov	 BYTE PTR __k$[ebp+6], 0
  000f1	58		 pop	 eax
$LL101@LoadInt_e@2:
  000f2	8b c8		 mov	 ecx, eax
  000f4	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  000fa	79 05		 jns	 SHORT $LN111@LoadInt_e@2
  000fc	49		 dec	 ecx
  000fd	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00100	41		 inc	 ecx
$LN111@LoadInt_e@2:
  00101	b2 ed		 mov	 dl, -19			; ffffffedH
  00103	2a d1		 sub	 dl, cl
  00105	30 54 05 f0	 xor	 BYTE PTR __k$[ebp+eax], dl
  00109	40		 inc	 eax
  0010a	83 f8 06	 cmp	 eax, 6
  0010d	7c e3		 jl	 SHORT $LL101@LoadInt_e@2

; 120  : 		return LoadInt(_k, i);

  0010f	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  00112	8d 45 f0	 lea	 eax, DWORD PTR __k$[ebp]
  00115	50		 push	 eax
  00116	8b ce		 mov	 ecx, esi
  00118	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  0011e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00121	33 cd		 xor	 ecx, ebp
  00123	5e		 pop	 esi
  00124	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00129	c9		 leave
  0012a	c2 08 00	 ret	 8
??$LoadInt_e@$06@ioINILoader@@QAEHAAY06$$CBDH@Z ENDP	; ioINILoader::LoadInt_e<7>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@AAU34@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@AAU23@@Z ; std::_Cons_val<std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData,ioJumpController::JumpData &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@AAU34@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@AAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@AAU34@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@AAU23@@Z PROC ; std::_Cons_val<std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData,ioJumpController::JumpData &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN7@Cons_val
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN7@Cons_val:

; 281  : 	}

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Cons_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@AAU34@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@AAU23@@Z ENDP ; std::_Cons_val<std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData,ioJumpController::JumpData &>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@ABU34@@Z ; std::allocator<ioJumpController::JumpData>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@ABU34@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@ABU34@@Z PROC ; std::allocator<ioJumpController::JumpData>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN5@construct@3
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN5@construct@3:

; 198  : 		}

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
?construct@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@ABU34@@Z ENDP ; std::allocator<ioJumpController::JumpData>::construct
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::max_size
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::max_size, COMDAT
; _this$ = ecx

; 874  : 		return (this->_Alval.max_size());

  00000	b8 aa aa aa 0a	 mov	 eax, 178956970		; 0aaaaaaaH

; 875  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::max_size
_TEXT	ENDS
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator--
; Function compile flags: /Ogsp
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 277  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 278  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 279  : 		if (this->_Getcont() == 0
; 280  : 			|| this->_Ptr == 0)
; 281  : 			{	// report error
; 282  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 283  : 			_SCL_SECURE_OUT_OF_RANGE;
; 284  : 			}
; 285  : 
; 286  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 287  : 		--(*(_Mybase *)this);
; 288  : 		if (_Ptrsav == this->_Ptr)
; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 291  : 			_SCL_SECURE_OUT_OF_RANGE;
; 292  : 			}
; 293  : 
; 294  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 295  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 296  : 
; 297  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 298  : 		--(*(_Mybase *)this);
; 299  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 300  : 
; 301  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 302  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::operator--

; 303  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 304  : 
; 305  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 306  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 146  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??$_Move@PAUJumpData@ioJumpController@@PAU12@@std@@YAPAUJumpData@ioJumpController@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioJumpController::JumpData *,ioJumpController::JumpData *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAUJumpData@ioJumpController@@PAU12@@std@@YAPAUJumpData@ioJumpController@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAUJumpData@ioJumpController@@PAU12@@std@@YAPAUJumpData@ioJumpController@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<ioJumpController::JumpData *,ioJumpController::JumpData *>, COMDAT

; 2512 : 	{	// move [_First, _Last) to [_Dest, ...), arbitrary iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
$LN11@Move:
  00009	3b 4d 0c	 cmp	 ecx, DWORD PTR __Last$[ebp]
  0000c	74 12		 je	 SHORT $LN1@Move

; 2514 : 		*_Dest = _STD move(*_First);

  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 10		 mov	 DWORD PTR [eax], edx
  00012	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00015	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00018	83 c0 08	 add	 eax, 8
  0001b	83 c1 08	 add	 ecx, 8
  0001e	eb e9		 jmp	 SHORT $LN11@Move
$LN1@Move:

; 2515 : 	return (_Dest);
; 2516 : 	}

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Move@PAUJumpData@ioJumpController@@PAU12@@std@@YAPAUJumpData@ioJumpController@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<ioJumpController::JumpData *,ioJumpController::JumpData *>
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Buynode
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
$T537223 = -16						; size = 12
$T537207 = -4						; size = 4
?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 559  : 		{	// allocate a node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00007	6a 28		 push	 40			; 00000028H
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	59		 pop	 ecx
  00011	33 c9		 xor	 ecx, ecx
  00013	3b c1		 cmp	 eax, ecx
  00015	74 18		 je	 SHORT $LN5@Buynode

; 561  : 
; 562  : 		this->_Left(_Wherenode) = this->_Myhead;

  00017	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001a	89 10		 mov	 DWORD PTR [eax], edx

; 563  : 		this->_Parent(_Wherenode) = this->_Myhead;

  0001c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001f	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 564  : 		this->_Right(_Wherenode) = this->_Myhead;

  00022	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00025	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 565  : 		this->_Color(_Wherenode) = this->_Red;

  00028	66 89 48 24	 mov	 WORD PTR [eax+36], cx
  0002c	5e		 pop	 esi

; 566  : 		this->_Isnil(_Wherenode) = false;
; 567  : 		return (_Wherenode);
; 568  : 		}

  0002d	c9		 leave
  0002e	c3		 ret	 0

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

$LN5@Buynode:
  0002f	8d 45 fc	 lea	 eax, DWORD PTR $T537207[ebp]
  00032	89 4d fc	 mov	 DWORD PTR $T537207[ebp], ecx
  00035	50		 push	 eax
  00036	8d 4d f0	 lea	 ecx, DWORD PTR $T537223[ebp]
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  0003f	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00044	8d 45 f0	 lea	 eax, DWORD PTR $T537223[ebp]
  00047	50		 push	 eax
  00048	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T537223[ebp], OFFSET ??_7bad_alloc@std@@6B@
  0004f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN27@Buynode:
$LN26@Buynode:
  00054	cc		 int	 3
?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAE_NI@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Buy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Buy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAE_NI@Z PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Buy, COMDAT
; _this$ = ecx

; 1250 : 		{	// allocate array with _Capacity elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1251 : 		this->_Myfirst = 0;

  00004	33 c0		 xor	 eax, eax
  00006	57		 push	 edi

; 1252 : 		this->_Mylast = 0;
; 1253 : 		this->_Myend = 0;
; 1254 : 
; 1255 : 		if (_Capacity == 0)

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Capacity$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 06		 mov	 DWORD PTR [esi], eax
  0000e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00011	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00014	3b f8		 cmp	 edi, eax
  00016	75 04		 jne	 SHORT $LN4@Buy

; 1256 : 			return (false);

  00018	32 c0		 xor	 al, al
  0001a	eb 29		 jmp	 SHORT $LN5@Buy
$LN4@Buy:

; 1257 : 		else if (max_size() < _Capacity)

  0001c	81 ff ff ff ff
	1f		 cmp	 edi, 536870911		; 1fffffffH
  00022	76 0b		 jbe	 SHORT $LN2@Buy

; 1258 : 			_Xlen();	// result too long

  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN19@Buy:
$LN2@Buy:

; 1259 : 		else
; 1260 : 			{	// nonempty array, allocate storage
; 1261 : 			this->_Myfirst = this->_Alval.allocate(_Capacity);

  0002f	50		 push	 eax
  00030	57		 push	 edi
  00031	e8 00 00 00 00	 call	 ??$_Allocate@UJumpData@ioJumpController@@@std@@YAPAUJumpData@ioJumpController@@IPAU12@@Z ; std::_Allocate<ioJumpController::JumpData>
  00036	89 06		 mov	 DWORD PTR [esi], eax

; 1262 : 			this->_Mylast = this->_Myfirst;

  00038	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1263 : 			this->_Myend = this->_Myfirst + _Capacity;

  0003b	8d 04 f8	 lea	 eax, DWORD PTR [eax+edi*8]
  0003e	59		 pop	 ecx
  0003f	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00042	59		 pop	 ecx

; 1264 : 			}
; 1265 : 		return (true);

  00043	b0 01		 mov	 al, 1
$LN5@Buy:
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi

; 1266 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN18@Buy:
?_Buy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Buy
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > > &,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 164  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@@Z ; std::allocator<ioJumpController::JumpData>::destroy
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@@Z PROC ; std::allocator<ioJumpController::JumpData>::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@@Z ENDP ; std::allocator<ioJumpController::JumpData>::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@$$QAU34@@Z ; std::allocator<ioJumpController::JumpData>::construct
; Function compile flags: /Ogsp
;	COMDAT ?construct@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@$$QAU34@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@$$QAU34@@Z PROC ; std::allocator<ioJumpController::JumpData>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN3@construct@4
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN3@construct@4:

; 203  : 		}

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
?construct@?$allocator@UJumpData@ioJumpController@@@std@@QAEXPAUJumpData@ioJumpController@@$$QAU34@@Z ENDP ; std::allocator<ioJumpController::JumpData>::construct
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@V?$allocator@K@1@@Z ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::_Vector_val<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@V?$allocator@K@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@V?$allocator@K@1@@Z PROC ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::_Vector_val<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@KV?$allocator@K@std@@@std@@QAE@V?$allocator@K@1@@Z ENDP ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::_Vector_val<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
; Function compile flags: /Ogsp
;	COMDAT ?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Grow_to
; Function compile flags: /Ogsp
;	COMDAT ?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  00008	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  0000d	c1 f8 02	 sar	 eax, 2
  00010	8b c8		 mov	 ecx, eax
  00012	d1 e9		 shr	 ecx, 1
  00014	2b d1		 sub	 edx, ecx
  00016	3b d0		 cmp	 edx, eax
  00018	73 04		 jae	 SHORT $LN4@Grow_to@2
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 02		 jmp	 SHORT $LN5@Grow_to@2
$LN4@Grow_to@2:
  0001e	03 c1		 add	 eax, ecx
$LN5@Grow_to@2:

; 1279 : 		if (_Capacity < _Count)

  00020	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]

; 1280 : 			_Capacity = _Count;

  00023	0f 42 45 08	 cmovb	 eax, DWORD PTR __Count$[ebp]

; 1281 : 		return (_Capacity);
; 1282 : 		}

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Grow_to
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@K@std@@QAEPAKI@Z		; std::allocator<unsigned long>::allocate
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@K@std@@QAEPAKI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@K@std@@QAEPAKI@Z PROC		; std::allocator<unsigned long>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	6a 00		 push	 0
  00005	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Allocate@K@std@@YAPAKIPAK@Z ; std::_Allocate<unsigned long>
  0000d	59		 pop	 ecx
  0000e	59		 pop	 ecx

; 188  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?allocate@?$allocator@K@std@@QAEPAKI@Z ENDP		; std::allocator<unsigned long>::allocate
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@K@std@@KAAK@std@@YAXAAV?$allocator@K@0@PAKAAK@Z ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long &>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@K@std@@KAAK@std@@YAXAAV?$allocator@K@0@PAKAAK@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@K@std@@KAAK@std@@YAXAAV?$allocator@K@0@PAKAAK@Z PROC ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN7@Cons_val@2
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@Cons_val@2:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@K@std@@KAAK@std@@YAXAAV?$allocator@K@0@PAKAAK@Z ENDP ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long &>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z ; std::_Destroy_range<std::allocator<unsigned long> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned long> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 101  : 	{	// exchange values stored at _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 102  : 	_Ty _Tmp = _Move(_Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8a 08		 mov	 cl, BYTE PTR [eax]
  00008	56		 push	 esi

; 103  : 	_Left = _Move(_Right);

  00009	8b 75 0c	 mov	 esi, DWORD PTR __Right$[ebp]
  0000c	8a 16		 mov	 dl, BYTE PTR [esi]
  0000e	88 10		 mov	 BYTE PTR [eax], dl

; 104  : 	_Right = _Move(_Tmp);

  00010	88 0e		 mov	 BYTE PTR [esi], cl
  00012	5e		 pop	 esi

; 105  : 	}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@K@std@@QAEXPAKABK@Z	; std::allocator<unsigned long>::construct
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@K@std@@QAEXPAKABK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@K@std@@QAEXPAKABK@Z PROC		; std::allocator<unsigned long>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN5@construct@5
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN5@construct@5:

; 198  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?construct@?$allocator@K@std@@QAEXPAKABK@Z ENDP		; std::allocator<unsigned long>::construct
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::allocator<unsigned long> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z PROC ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::allocator<unsigned long> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00007	2b 75 08	 sub	 esi, DWORD PTR __First$[ebp]
  0000a	c1 fe 02	 sar	 esi, 2
  0000d	c1 e6 02	 shl	 esi, 2
  00010	56		 push	 esi
  00011	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00014	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 c6		 add	 eax, esi
  00022	5e		 pop	 esi

; 472  : 	}

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z ENDP ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@XZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@XZ PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >
_TEXT	ENDS
PUBLIC	?begin@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@XZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::begin
; Function compile flags: /Ogsp
;	COMDAT ?begin@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@XZ PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 782  : 		return (iterator(this->_Myfirst, this));

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 783  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?begin@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@XZ ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::begin
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >, COMDAT
; _this$ = ecx

; 372  : 	_Tree_iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	83 20 00	 and	 DWORD PTR [eax], 0

; 373  : 		{	// construct with null node
; 374  : 		}

  00005	c3		 ret	 0
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >
_TEXT	ENDS
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKUJumpList@ioJumpController@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator->
; Function compile flags: /Ogsp
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKUJumpList@ioJumpController@@@1@XZ
_TEXT	SEGMENT
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKUJumpList@ioJumpController@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator->, COMDAT
; _this$ = ecx

; 401  : 		return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 402  : 		}

  00005	c3		 ret	 0
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBKUJumpList@ioJumpController@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator->
_TEXT	ENDS
PUBLIC	?end@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@XZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::end
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?end@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@XZ PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 792  : 		return (iterator(this->_Mylast, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 793  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@XZ ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::end
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Make_iter
; Function compile flags: /Ogsp
;	COMDAT ?_Make_iter@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@@Z PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 		return (iterator(_Where._Ptr, this));

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 803  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?_Make_iter@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@@Z ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Make_iter
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >, COMDAT
; _this$ = ecx

; 378  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 379  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))
; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 257  : 			_SCL_SECURE_OUT_OF_RANGE;
; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::operator++

; 266  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 267  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Lbound
; Function compile flags: /Ogsp
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 1741 : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1742 : 		_Nodeptr _Pnode = _Root();

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00009	80 79 25 00	 cmp	 BYTE PTR [ecx+37], 0
  0000d	75 19		 jne	 SHORT $LN3@Lbound
  0000f	8b 55 08	 mov	 edx, DWORD PTR __Keyval$[ebp]
  00012	8b 12		 mov	 edx, DWORD PTR [edx]
$LL4@Lbound:

; 1746 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $LN2@Lbound

; 1747 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1748 : 			else

  0001c	eb 04		 jmp	 SHORT $LN1@Lbound
$LN2@Lbound:

; 1749 : 				{	// _Pnode not less than _Keyval, remember it
; 1750 : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 1751 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN1@Lbound:

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00022	80 79 25 00	 cmp	 BYTE PTR [ecx+37], 0
  00026	74 ec		 je	 SHORT $LL4@Lbound
$LN3@Lbound:

; 1752 : 				}
; 1753 : 
; 1754 : 		return (_Wherenode);	// return best remembered candidate
; 1755 : 		}

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z
_TEXT	SEGMENT
$T537637 = -16						; size = 12
$T537621 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >, COMDAT
; _this$ = ecx

; 542  : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 543  : 		this->_Mysize = 0;

  00009	83 66 08 00	 and	 DWORD PTR [esi+8], 0

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

  0000d	6a 28		 push	 40			; 00000028H
  0000f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00014	59		 pop	 ecx
  00015	85 c0		 test	 eax, eax
  00017	74 26		 je	 SHORT $LN15@Tree_val
  00019	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 545  : 
; 546  : 		this->_Left(this->_Myhead) = this->_Myhead;

  0001c	89 00		 mov	 DWORD PTR [eax], eax

; 547  : 		this->_Parent(this->_Myhead) = this->_Myhead;

  0001e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00021	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 548  : 		this->_Right(this->_Myhead) = this->_Myhead;

  00024	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00027	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 549  : 		this->_Color(this->_Myhead) = this->_Black;

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	c6 40 24 01	 mov	 BYTE PTR [eax+36], 1

; 550  : 		this->_Isnil(this->_Myhead) = true;

  00031	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00034	c6 40 25 01	 mov	 BYTE PTR [eax+37], 1

; 551  : 		}

  00038	8b c6		 mov	 eax, esi
  0003a	5e		 pop	 esi
  0003b	c9		 leave
  0003c	c2 08 00	 ret	 8

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

$LN15@Tree_val:
  0003f	83 65 fc 00	 and	 DWORD PTR $T537621[ebp], 0
  00043	8d 45 fc	 lea	 eax, DWORD PTR $T537621[ebp]
  00046	50		 push	 eax
  00047	8d 4d f0	 lea	 ecx, DWORD PTR $T537637[ebp]
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
  00050	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00055	8d 45 f0	 lea	 eax, DWORD PTR $T537637[ebp]
  00058	50		 push	 eax
  00059	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T537637[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00060	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN37@Tree_val:
$LN36@Tree_val:
  00065	cc		 int	 3
??0?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::operator!=
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::operator!=, COMDAT
; _this$ = ecx

; 207  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 209  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >::operator!=
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator++
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 270  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 271  : 		_Myiter _Tmp = *this;

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 06		 mov	 DWORD PTR [esi], eax

; 272  : 		++*this;

  0000b	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::operator++

; 273  : 		return (_Tmp);

  00010	8b c6		 mov	 eax, esi
  00012	5e		 pop	 esi

; 274  : 		}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@ABU34@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@ABU23@@Z ; std::_Cons_val<std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData,ioJumpController::JumpData const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@ABU34@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@ABU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@ABU34@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@ABU23@@Z PROC ; std::_Cons_val<std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData,ioJumpController::JumpData const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN9@Cons_val@3
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN9@Cons_val@3:

; 281  : 	}

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Cons_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@ABU34@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@ABU23@@Z ENDP ; std::_Cons_val<std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData,ioJumpController::JumpData const &>
_TEXT	ENDS
PUBLIC	??$_Move@PAUJumpData@ioJumpController@@PAU12@@std@@YAPAUJumpData@ioJumpController@@PAU12@00@Z ; std::_Move<ioJumpController::JumpData *,ioJumpController::JumpData *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Move@PAUJumpData@ioJumpController@@PAU12@@std@@YAPAUJumpData@ioJumpController@@PAU12@00@Z
_TEXT	SEGMENT
__Cat$537730 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAUJumpData@ioJumpController@@PAU12@@std@@YAPAUJumpData@ioJumpController@@PAU12@00@Z PROC ; std::_Move<ioJumpController::JumpData *,ioJumpController::JumpData *>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$537730[ebp]
  00007	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Move@PAUJumpData@ioJumpController@@PAU12@@std@@YAPAUJumpData@ioJumpController@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioJumpController::JumpData *,ioJumpController::JumpData *>
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 2536 : 	}

  00018	c9		 leave
  00019	c3		 ret	 0
??$_Move@PAUJumpData@ioJumpController@@PAU12@@std@@YAPAUJumpData@ioJumpController@@PAU12@00@Z ENDP ; std::_Move<ioJumpController::JumpData *,ioJumpController::JumpData *>
_TEXT	ENDS
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator--
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 418  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 419  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::operator--

; 420  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 421  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 227  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 228  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > > &,bool>
; Function compile flags: /Ogsp
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000f	8a 09		 mov	 cl, BYTE PTR [ecx]
  00011	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 248  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@@Z ; std::_Dest_val<std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@@Z PROC ; std::_Dest_val<std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData>, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@@Z ENDP ; std::_Dest_val<std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@U34@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@$$QAU23@@Z ; std::_Cons_val<std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData,ioJumpController::JumpData>
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@U34@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@$$QAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@U34@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@$$QAU23@@Z PROC ; std::_Cons_val<std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData,ioJumpController::JumpData>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN7@Cons_val@4
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN7@Cons_val@4:

; 281  : 	}

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Cons_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@U34@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@$$QAU23@@Z ENDP ; std::_Cons_val<std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData,ioJumpController::JumpData>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@PAUJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@2@@std@@YAPAUJumpData@ioJumpController@@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@0@0PAU12@AAV?$allocator@UJumpData@ioJumpController@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >,ioJumpController::JumpData *,std::allocator<ioJumpController::JumpData> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@PAUJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@2@@std@@YAPAUJumpData@ioJumpController@@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@0@0PAU12@AAV?$allocator@UJumpData@ioJumpController@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@PAUJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@2@@std@@YAPAUJumpData@ioJumpController@@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@0@0PAU12@AAV?$allocator@UJumpData@ioJumpController@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >,ioJumpController::JumpData *,std::allocator<ioJumpController::JumpData> >, COMDAT

; 369  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;
; 373  : 
; 374  : 	_TRY_BEGIN
; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

  00003	eb 19		 jmp	 SHORT $LN35@Uninit_cop
$LL14@Uninit_cop:

; 376  : 		_Cons_val(_Al, _Dest, *_First);

  00005	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00008	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000b	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000e	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@ABU34@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@ABU23@@Z ; std::_Cons_val<std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData,ioJumpController::JumpData const &>
  00013	83 45 10 08	 add	 DWORD PTR __Dest$[ebp], 8
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001a	83 45 08 08	 add	 DWORD PTR __First$[ebp], 8
$LN35@Uninit_cop:

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;
; 373  : 
; 374  : 	_TRY_BEGIN
; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

  0001e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00021	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00024	75 df		 jne	 SHORT $LL14@Uninit_cop

; 377  : 	_CATCH_ALL
; 378  : 	for (; _Next != _Dest; ++_Next)
; 379  : 		_Dest_val(_Al, _Next);
; 380  : 	_RERAISE;
; 381  : 	_CATCH_END
; 382  : 	return (_Dest);

  00026	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 383  : 	}

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@PAUJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@2@@std@@YAPAUJumpData@ioJumpController@@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@0@0PAU12@AAV?$allocator@UJumpData@ioJumpController@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >,ioJumpController::JumpData *,std::allocator<ioJumpController::JumpData> >
_TEXT	ENDS
PUBLIC	??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@K@std@@KABK@std@@YAXAAV?$allocator@K@0@PAKABK@Z ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long const &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@K@std@@KABK@std@@YAXAAV?$allocator@K@0@PAKABK@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@K@std@@KABK@std@@YAXAAV?$allocator@K@0@PAKABK@Z PROC ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN9@Cons_val@5
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx
$LN9@Cons_val@5:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@K@std@@KABK@std@@YAXAAV?$allocator@K@0@PAKABK@Z ENDP ; std::_Cons_val<std::allocator<unsigned long>,unsigned long,unsigned long const &>
_TEXT	ENDS
PUBLIC	??$_Umove@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Umove<unsigned long *>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??$_Umove@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Umove<unsigned long *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::allocator<unsigned long> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Umove<unsigned long *>
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::begin
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 807  : 		return (iterator(_Lmost(), this));

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 808  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::end
; Function compile flags: /Ogsp
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 817  : 		return (iterator(this->_Myhead, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 818  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::end
_TEXT	ENDS
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator++
; Function compile flags: /Ogsp
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 405  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 406  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::operator++

; 407  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 408  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z
_TEXT	SEGMENT
$T538024 = -4						; size = 4
$T538019 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >, COMDAT
; _this$ = ecx

; 698  : 		{	// construct empty tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	51		 push	 ecx
  00006	89 65 fc	 mov	 DWORD PTR $T538019[ebp], esp
  00009	89 65 fc	 mov	 DWORD PTR $T538024[ebp], esp
  0000c	ff 75 08	 push	 DWORD PTR __Parg$[ebp]
  0000f	8b f1		 mov	 esi, ecx
  00011	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >

; 699  : 		}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	c9		 leave
  0001a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::lower_bound
; Function compile flags: /Ogsp
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1449 : 		{	// find leftmost node not less than _Keyval in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1450 : 		return (iterator(_Lbound(_Keyval), this));

  00003	ff 75 0c	 push	 DWORD PTR __Keyval$[ebp]
  00006	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Lbound
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000e	89 01		 mov	 DWORD PTR [ecx], eax
  00010	8b c1		 mov	 eax, ecx

; 1451 : 		}

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@YAXPAUJumpData@ioJumpController@@0AAV?$allocator@UJumpData@ioJumpController@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ioJumpController::JumpData> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@YAXPAUJumpData@ioJumpController@@0AAV?$allocator@UJumpData@ioJumpController@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@YAXPAUJumpData@ioJumpController@@0AAV?$allocator@UJumpData@ioJumpController@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ioJumpController::JumpData> >, COMDAT

; 96   : 	for (; _First != _Last; ++_First)
; 97   : 		_Dest_val(_Al, _First);
; 98   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@YAXPAUJumpData@ioJumpController@@0AAV?$allocator@UJumpData@ioJumpController@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioJumpController::JumpData> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAUJumpData@ioJumpController@@PAU12@V?$allocator@UJumpData@ioJumpController@@@std@@U12@@std@@YAPAUJumpData@ioJumpController@@PAU12@00AAV?$allocator@UJumpData@ioJumpController@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioJumpController::JumpData *,ioJumpController::JumpData *,std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@PAUJumpData@ioJumpController@@PAU12@V?$allocator@UJumpData@ioJumpController@@@std@@U12@@std@@YAPAUJumpData@ioJumpController@@PAU12@00AAV?$allocator@UJumpData@ioJumpController@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUJumpData@ioJumpController@@PAU12@V?$allocator@UJumpData@ioJumpController@@@std@@U12@@std@@YAPAUJumpData@ioJumpController@@PAU12@00AAV?$allocator@UJumpData@ioJumpController@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<ioJumpController::JumpData *,ioJumpController::JumpData *,std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData>, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	eb 16		 jmp	 SHORT $LN24@Uninit_mov
$LL6@Uninit_mov:

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

  00009	56		 push	 esi
  0000a	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000d	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@U34@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@$$QAU23@@Z ; std::_Cons_val<std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData,ioJumpController::JumpData>
  00015	83 45 10 08	 add	 DWORD PTR __Dest$[ebp], 8
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001c	83 c6 08	 add	 esi, 8
$LN24@Uninit_mov:

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

  0001f	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00022	75 e5		 jne	 SHORT $LL6@Uninit_mov

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)
; 434  : 		_Dest_val(_Al, _Next);
; 435  : 	_RERAISE;
; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

  00024	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00027	5e		 pop	 esi

; 438  : 	}

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$_Uninit_move@PAUJumpData@ioJumpController@@PAU12@V?$allocator@UJumpData@ioJumpController@@@std@@U12@@std@@YAPAUJumpData@ioJumpController@@PAU12@00AAV?$allocator@UJumpData@ioJumpController@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<ioJumpController::JumpData *,ioJumpController::JumpData *,std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@PAUJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@2@@std@@YAPAUJumpData@ioJumpController@@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@0@0PAU12@AAV?$allocator@UJumpData@ioJumpController@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >,ioJumpController::JumpData *,std::allocator<ioJumpController::JumpData> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@PAUJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@2@@std@@YAPAUJumpData@ioJumpController@@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@0@0PAU12@AAV?$allocator@UJumpData@ioJumpController@@@0@@Z
_TEXT	SEGMENT
__Cat$538105 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@PAUJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@2@@std@@YAPAUJumpData@ioJumpController@@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@0@0PAU12@AAV?$allocator@UJumpData@ioJumpController@@@0@@Z PROC ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >,ioJumpController::JumpData *,std::allocator<ioJumpController::JumpData> >, COMDAT

; 412  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 413  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 414  : 		_Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$538105[ebp]
  00007	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000a	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00010	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00013	e8 00 00 00 00	 call	 ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@PAUJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@2@@std@@YAPAUJumpData@ioJumpController@@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@0@0PAU12@AAV?$allocator@UJumpData@ioJumpController@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >,ioJumpController::JumpData *,std::allocator<ioJumpController::JumpData> >
  00018	83 c4 14	 add	 esp, 20			; 00000014H

; 415  : 	}

  0001b	c9		 leave
  0001c	c3		 ret	 0
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@PAUJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@2@@std@@YAPAUJumpData@ioJumpController@@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@0@0PAU12@AAV?$allocator@UJumpData@ioJumpController@@@0@@Z ENDP ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >,ioJumpController::JumpData *,std::allocator<ioJumpController::JumpData> >
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN12@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN12@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
_TEXT	ENDS
PUBLIC	?reserve@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::reserve
; Function compile flags: /Ogsp
;	COMDAT ?reserve@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?reserve@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 747  : 		if (max_size() < _Count)

  00003	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	76 0b		 jbe	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN43@reserve:
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  0001a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0001d	2b 06		 sub	 eax, DWORD PTR [esi]
  0001f	c1 f8 02	 sar	 eax, 2
  00022	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00025	73 52		 jae	 SHORT $LN3@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00027	53		 push	 ebx
  00028	57		 push	 edi
  00029	6a 00		 push	 0
  0002b	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate@K@std@@YAPAKIPAK@Z ; std::_Allocate<unsigned long>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00033	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00035	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00038	52		 push	 edx
  00039	8b d8		 mov	 ebx, eax
  0003b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003e	53		 push	 ebx
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::allocator<unsigned long> >

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00046	8b 06		 mov	 eax, DWORD PTR [esi]
  00048	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0004b	2b f8		 sub	 edi, eax
  0004d	83 c4 18	 add	 esp, 24			; 00000018H
  00050	c1 ff 02	 sar	 edi, 2

; 761  : 			if (this->_Myfirst != 0)

  00053	85 c0		 test	 eax, eax
  00055	74 07		 je	 SHORT $LN39@reserve

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);
; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0005d	59		 pop	 ecx
$LN39@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  0005e	8b ce		 mov	 ecx, esi
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00066	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00069	8d 04 83	 lea	 eax, DWORD PTR [ebx+eax*4]
  0006c	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 770  : 			this->_Mylast = _Ptr + _Size;

  0006f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00072	5f		 pop	 edi

; 771  : 			this->_Myfirst = _Ptr;

  00073	89 1e		 mov	 DWORD PTR [esi], ebx
  00075	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00078	5b		 pop	 ebx
$LN3@reserve:
  00079	5e		 pop	 esi

; 772  : 			}
; 773  : 		}

  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
$LN42@reserve:
?reserve@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::reserve
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::find
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z
_TEXT	SEGMENT
$T538229 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::find, COMDAT
; _this$ = ecx

; 1423 : 		{	// find an element in mutable sequence that matches _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1424 : 		iterator _Where = lower_bound(_Keyval);

  00006	8b 7d 0c	 mov	 edi, DWORD PTR __Keyval$[ebp]
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Lbound

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

  00011	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00014	89 45 0c	 mov	 DWORD PTR __Where$[ebp], eax
  00017	3b c6		 cmp	 eax, esi
  00019	74 0c		 je	 SHORT $LN3@find
  0001b	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0001d	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00020	72 05		 jb	 SHORT $LN3@find
  00022	8d 45 0c	 lea	 eax, DWORD PTR __Where$[ebp]
  00025	eb 06		 jmp	 SHORT $LN4@find
$LN3@find:
  00027	89 75 fc	 mov	 DWORD PTR $T538229[ebp], esi
  0002a	8d 45 fc	 lea	 eax, DWORD PTR $T538229[ebp]
$LN4@find:
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00032	5f		 pop	 edi
  00033	89 08		 mov	 DWORD PTR [eax], ecx
  00035	5e		 pop	 esi

; 1429 : 		}

  00036	c9		 leave
  00037	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::find
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@YAXPAUJumpData@ioJumpController@@0AAV?$allocator@UJumpData@ioJumpController@@@0@@Z ; std::_Destroy_range<std::allocator<ioJumpController::JumpData> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@YAXPAUJumpData@ioJumpController@@0AAV?$allocator@UJumpData@ioJumpController@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@YAXPAUJumpData@ioJumpController@@0AAV?$allocator@UJumpData@ioJumpController@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ioJumpController::JumpData> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@YAXPAUJumpData@ioJumpController@@0AAV?$allocator@UJumpData@ioJumpController@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ioJumpController::JumpData> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAUJumpData@ioJumpController@@PAU12@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@YAPAUJumpData@ioJumpController@@PAU12@00AAV?$allocator@UJumpData@ioJumpController@@@0@@Z ; std::_Uninitialized_move<ioJumpController::JumpData *,ioJumpController::JumpData *,std::allocator<ioJumpController::JumpData> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAUJumpData@ioJumpController@@PAU12@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@YAPAUJumpData@ioJumpController@@PAU12@00AAV?$allocator@UJumpData@ioJumpController@@@0@@Z
_TEXT	SEGMENT
__Cat$538405 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUJumpData@ioJumpController@@PAU12@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@YAPAUJumpData@ioJumpController@@PAU12@00AAV?$allocator@UJumpData@ioJumpController@@@0@@Z PROC ; std::_Uninitialized_move<ioJumpController::JumpData *,ioJumpController::JumpData *,std::allocator<ioJumpController::JumpData> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00004	ff 75 fc	 push	 DWORD PTR __Cat$538405[ebp]
  00007	6a 00		 push	 0
  00009	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0000c	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00012	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00015	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUJumpData@ioJumpController@@PAU12@V?$allocator@UJumpData@ioJumpController@@@std@@U12@@std@@YAPAUJumpData@ioJumpController@@PAU12@00AAV?$allocator@UJumpData@ioJumpController@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ioJumpController::JumpData *,ioJumpController::JumpData *,std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData>
  0001a	83 c4 18	 add	 esp, 24			; 00000018H

; 472  : 	}

  0001d	c9		 leave
  0001e	c3		 ret	 0
??$_Uninitialized_move@PAUJumpData@ioJumpController@@PAU12@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@YAPAUJumpData@ioJumpController@@PAU12@00AAV?$allocator@UJumpData@ioJumpController@@@0@@Z ENDP ; std::_Uninitialized_move<ioJumpController::JumpData *,ioJumpController::JumpData *,std::allocator<ioJumpController::JumpData> >
_TEXT	ENDS
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEPAUJumpData@ioJumpController@@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@1@0PAU23@@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEPAUJumpData@ioJumpController@@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@1@0PAU23@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$538421 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEPAUJumpData@ioJumpController@@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@1@0PAU23@@Z PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > > >, COMDAT
; _this$ = ecx

; 1315 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1316 : 		{	// copy initializing [_First, _Last), using allocator
; 1317 : 		return (_Uninitialized_copy(_First, _Last,
; 1318 : 			_Ptr, this->_Alval));

  00003	ff 75 10	 push	 DWORD PTR __Cat$538421[ebp]
  00006	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00009	51		 push	 ecx
  0000a	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00010	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00013	e8 00 00 00 00	 call	 ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@PAUJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@2@@std@@YAPAUJumpData@ioJumpController@@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@0@0PAU12@AAV?$allocator@UJumpData@ioJumpController@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >,ioJumpController::JumpData *,std::allocator<ioJumpController::JumpData> >
  00018	83 c4 14	 add	 esp, 20			; 00000014H

; 1319 : 		}

  0001b	5d		 pop	 ebp
  0001c	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEPAUJumpData@ioJumpController@@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@1@0PAU23@@Z ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > > >
_TEXT	ENDS
PUBLIC	??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx

; 1292 : 		if (max_size() - _Count < _Size)

  0000d	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  00012	2b 55 08	 sub	 edx, DWORD PTR __Count$[ebp]
  00015	c1 f8 02	 sar	 eax, 2
  00018	3b d0		 cmp	 edx, eax
  0001a	73 0b		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve:
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  00027	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0002a	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0002d	2b d1		 sub	 edx, ecx
  0002f	c1 fa 02	 sar	 edx, 2
  00032	3b c2		 cmp	 eax, edx
  00034	76 10		 jbe	 SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  00036	50		 push	 eax
  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Grow_to
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?reserve@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::reserve
$LN1@Reserve:
  00046	5e		 pop	 esi

; 1298 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN20@Reserve:
?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXPAUJumpData@ioJumpController@@0@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Destroy
; Function compile flags: /Ogsp
;	COMDAT ?_Destroy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXPAUJumpData@ioJumpController@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXPAUJumpData@ioJumpController@@0@Z PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXPAUJumpData@ioJumpController@@0@Z ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 0e		 je	 SHORT $LN21@Tidy@2

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
$LN21@Tidy@2:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00016	83 26 00	 and	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00019	83 66 04 00	 and	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001d	83 66 08 00	 and	 DWORD PTR [esi+8], 0
  00021	5e		 pop	 esi

; 1312 : 		}

  00022	c3		 ret	 0
?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy
_TEXT	ENDS
PUBLIC	??$_Umove@PAUJumpData@ioJumpController@@@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEPAUJumpData@ioJumpController@@PAU23@00@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Umove<ioJumpController::JumpData *>
; Function compile flags: /Ogsp
;	COMDAT ??$_Umove@PAUJumpData@ioJumpController@@@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEPAUJumpData@ioJumpController@@PAU23@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUJumpData@ioJumpController@@@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEPAUJumpData@ioJumpController@@PAU23@00@Z PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Umove<ioJumpController::JumpData *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	51		 push	 ecx
  00007	ff 75 10	 push	 DWORD PTR __Ptr$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUJumpData@ioJumpController@@PAU12@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@YAPAUJumpData@ioJumpController@@PAU12@00AAV?$allocator@UJumpData@ioJumpController@@@0@@Z ; std::_Uninitialized_move<ioJumpController::JumpData *,ioJumpController::JumpData *,std::allocator<ioJumpController::JumpData> >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 1326 : 		}

  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAUJumpData@ioJumpController@@@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEPAUJumpData@ioJumpController@@PAU23@00@Z ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Umove<ioJumpController::JumpData *>
_TEXT	ENDS
PUBLIC	??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3_catch:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__catchsym$??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z$0
__unwindtable$??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z$2
__ehfuncinfo$??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Cat$538680 = 8					; size = 1
__Right$ = 8						; size = 4
??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >, COMDAT
; _this$ = ecx

; 535  : 		{	// construct by copying _Right

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi

; 536  : 		if (_Buy(_Right.size()))

  00011	8b 7d 08	 mov	 edi, DWORD PTR __Right$[ebp]
  00014	33 db		 xor	 ebx, ebx
  00016	89 1e		 mov	 DWORD PTR [esi], ebx
  00018	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  0001b	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  0001e	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00021	2b 07		 sub	 eax, DWORD PTR [edi]
  00023	c1 f8 03	 sar	 eax, 3
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?_Buy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAE_NI@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Buy
  0002c	84 c0		 test	 al, al
  0002e	74 1f		 je	 SHORT $LN7@vector

; 537  : 			_TRY_BEGIN
; 538  : 			this->_Mylast = _Ucopy(_Right.begin(), _Right.end(),
; 539  : 				this->_Myfirst);

  00030	ff 75 08	 push	 DWORD PTR __Cat$538680[ebp]
  00033	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	8b 3f		 mov	 edi, DWORD PTR [edi]
  0003a	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  0003d	52		 push	 edx
  0003e	51		 push	 ecx
  0003f	50		 push	 eax
  00040	57		 push	 edi
  00041	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+12], ebx
  00044	e8 00 00 00 00	 call	 ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@std@@PAUJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@2@@std@@YAPAUJumpData@ioJumpController@@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@0@0PAU12@AAV?$allocator@UJumpData@ioJumpController@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> > >,ioJumpController::JumpData *,std::allocator<ioJumpController::JumpData> >
  00049	83 c4 14	 add	 esp, 20			; 00000014H
  0004c	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN7@vector:

; 543  : 			_CATCH_END
; 544  : 		}

  0004f	8b c6		 mov	 eax, esi
  00051	e8 00 00 00 00	 call	 __EH_epilog3
  00056	c2 04 00	 ret	 4
__catch$??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z$0:

; 540  : 			_CATCH_ALL
; 541  : 			_Tidy();

  00059	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy

; 542  : 			_RERAISE;

  00061	33 db		 xor	 ebx, ebx
  00063	53		 push	 ebx
  00064	53		 push	 ebx
  00065	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN38@vector:
$LN37@vector:
  0006a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >
PUBLIC	?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back
; Function compile flags: /Ogsp
;	COMDAT ?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f8		 cmp	 edi, eax
  0000f	73 27		 jae	 SHORT $LN4@push_back
  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	3b cf		 cmp	 ecx, edi
  00015	77 21		 ja	 SHORT $LN4@push_back

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	2b f9		 sub	 edi, ecx
  00019	c1 ff 02	 sar	 edi, 2

; 980  : 			if (this->_Mylast == this->_Myend)

  0001c	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0001f	75 09		 jne	 SHORT $LN3@push_back

; 981  : 				_Reserve(1);

  00021	6a 01		 push	 1
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve
$LN3@push_back:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  0002a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002d	85 c0		 test	 eax, eax
  0002f	74 20		 je	 SHORT $LN39@push_back
  00031	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00033	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  00036	eb 17		 jmp	 SHORT $LN46@push_back
$LN4@push_back:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  00038	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0003b	75 09		 jne	 SHORT $LN1@push_back

; 991  : 				_Reserve(1);

  0003d	6a 01		 push	 1
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve
$LN1@push_back:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00046	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00049	85 c0		 test	 eax, eax
  0004b	74 04		 je	 SHORT $LN39@push_back
  0004d	8b 0f		 mov	 ecx, DWORD PTR [edi]
$LN46@push_back:
  0004f	89 08		 mov	 DWORD PTR [eax], ecx
$LN39@push_back:

; 996  : 			++this->_Mylast;

  00051	83 46 04 04	 add	 DWORD PTR [esi+4], 4
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back
_TEXT	ENDS
PUBLIC	??1?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@XZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::~vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >
; Function compile flags: /Ogsp
;	COMDAT ??1?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@XZ PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::~vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >, COMDAT
; _this$ = ecx

; 705  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy
??1?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@XZ ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::~vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >
_TEXT	ENDS
PUBLIC	?erase@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cat$538840 = 12					; size = 1
__Where$ = 12						; size = 4
?erase@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@@Z PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::erase, COMDAT
; _this$ = ecx

; 1179 : 		{	// erase element at where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1180 : 		_Move(_VIPTR(_Where) + 1, this->_Mylast,
; 1181 : 			_VIPTR(_Where));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	56		 push	 esi
  00007	ff 75 0c	 push	 DWORD PTR __Cat$538840[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	ff 76 04	 push	 DWORD PTR [esi+4]
  00010	83 c0 08	 add	 eax, 8
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Move@PAUJumpData@ioJumpController@@PAU12@@std@@YAPAUJumpData@ioJumpController@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioJumpController::JumpData *,ioJumpController::JumpData *>

; 1182 : 		_Destroy(this->_Mylast - 1, this->_Mylast);
; 1183 : 		--this->_Mylast;
; 1184 : 		return (_Make_iter(_Where));

  00019	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  0001f	83 c4 10	 add	 esp, 16			; 00000010H
  00022	83 46 04 f8	 add	 DWORD PTR [esi+4], -8	; fffffff8H
  00026	89 08		 mov	 DWORD PTR [eax], ecx
  00028	5e		 pop	 esi

; 1185 : 		}

  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?erase@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@@Z ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@0@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::erase
; Function compile flags: /Ogsp
;	COMDAT ?erase@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Cat$539015 = 16					; size = 1
__Last_arg$ = 16					; size = 4
?erase@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@0@Z PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::erase, COMDAT
; _this$ = ecx

; 1190 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1191 : 		iterator _First = _Make_iter(_First_arg);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __First_arg$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	8b f1		 mov	 esi, ecx
  0000d	89 07		 mov	 DWORD PTR [edi], eax

; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

  0000f	3b 45 10	 cmp	 eax, DWORD PTR __Last_arg$[ebp]
  00012	74 16		 je	 SHORT $LN1@erase

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

  00014	ff 75 10	 push	 DWORD PTR __Cat$539015[ebp]
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	ff 75 10	 push	 DWORD PTR __Last_arg$[ebp]
  0001f	e8 00 00 00 00	 call	 ??$_Move@PAUJumpData@ioJumpController@@PAU12@@std@@YAPAUJumpData@ioJumpController@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<ioJumpController::JumpData *,ioJumpController::JumpData *>
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

  00027	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN1@erase:

; 1212 : 			}
; 1213 : 		return (_First);

  0002a	8b c7		 mov	 eax, edi
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi

; 1214 : 		}

  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@0@Z ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::erase
_TEXT	ENDS
PUBLIC	?reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXI@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::reserve
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Ptr$533953 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXI@Z PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXI@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx

; 747  : 		if (max_size() < _Count)

  0000e	81 7d 08 ff ff
	ff 1f		 cmp	 DWORD PTR __Count$[ebp], 536870911 ; 1fffffffH
  00015	76 0b		 jbe	 SHORT $LN5@reserve@2

; 748  : 			_Xlen();	// result too long

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN56@reserve@2:
$LN5@reserve@2:

; 749  : 		else if (capacity() < _Count)

  00022	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00025	2b 06		 sub	 eax, DWORD PTR [esi]
  00027	c1 f8 03	 sar	 eax, 3
  0002a	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0002d	73 65		 jae	 SHORT $LN3@reserve@2

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  0002f	6a 00		 push	 0
  00031	ff 75 08	 push	 DWORD PTR __Count$[ebp]
  00034	e8 00 00 00 00	 call	 ??$_Allocate@UJumpData@ioJumpController@@@std@@YAPAUJumpData@ioJumpController@@IPAU12@@Z ; std::_Allocate<ioJumpController::JumpData>

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00039	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0003b	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  0003f	8b d8		 mov	 ebx, eax
  00041	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00044	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00047	52		 push	 edx
  00048	53		 push	 ebx
  00049	50		 push	 eax
  0004a	51		 push	 ecx
  0004b	89 5d ec	 mov	 DWORD PTR __Ptr$533953[ebp], ebx
  0004e	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUJumpData@ioJumpController@@PAU12@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@YAPAUJumpData@ioJumpController@@PAU12@00AAV?$allocator@UJumpData@ioJumpController@@@0@@Z ; std::_Uninitialized_move<ioJumpController::JumpData *,ioJumpController::JumpData *,std::allocator<ioJumpController::JumpData> >

; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00053	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00056	8b 06		 mov	 eax, DWORD PTR [esi]
  00058	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  0005c	8b f9		 mov	 edi, ecx
  0005e	2b f8		 sub	 edi, eax
  00060	83 c4 18	 add	 esp, 24			; 00000018H
  00063	c1 ff 03	 sar	 edi, 3
  00066	85 c0		 test	 eax, eax
  00068	74 11		 je	 SHORT $LN48@reserve@2

; 761  : 			if (this->_Myfirst != 0)

  0006a	eb 03		 jmp	 SHORT $LN55@reserve@2

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);

$LL39@reserve@2:
  0006c	83 c0 08	 add	 eax, 8
$LN55@reserve@2:
  0006f	3b c1		 cmp	 eax, ecx
  00071	75 f9		 jne	 SHORT $LL39@reserve@2

; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  00073	ff 36		 push	 DWORD PTR [esi]
  00075	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0007a	59		 pop	 ecx
$LN48@reserve@2:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();

  0007b	8b ce		 mov	 ecx, esi
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ

; 769  : 			this->_Myend = _Ptr + _Count;

  00083	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00086	8d 04 c3	 lea	 eax, DWORD PTR [ebx+eax*8]
  00089	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 770  : 			this->_Mylast = _Ptr + _Size;

  0008c	8d 04 fb	 lea	 eax, DWORD PTR [ebx+edi*8]
  0008f	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 771  : 			this->_Myfirst = _Ptr;

  00092	89 1e		 mov	 DWORD PTR [esi], ebx
$LN3@reserve@2:

; 772  : 			}
; 773  : 		}

  00094	e8 00 00 00 00	 call	 __EH_epilog3
  00099	c2 04 00	 ret	 4
__catch$?reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXI@Z$0:

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

  0009c	ff 75 ec	 push	 DWORD PTR __Ptr$533953[ebp]
  0009f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000a4	59		 pop	 ecx

; 757  : 			_RERAISE;

  000a5	6a 00		 push	 0
  000a7	6a 00		 push	 0
  000a9	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN57@reserve@2:
$LN54@reserve@2:
  000ae	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXI@Z ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::reserve
PUBLIC	??0JumpList@ioJumpController@@QAE@ABU01@@Z	; ioJumpController::JumpList::JumpList
; Function compile flags: /Ogsp
;	COMDAT ??0JumpList@ioJumpController@@QAE@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0JumpList@ioJumpController@@QAE@ABU01@@Z PROC		; ioJumpController::JumpList::JumpList, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b 7d 08	 mov	 edi, DWORD PTR ___that$[ebp]
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >
  00010	d9 47 10	 fld	 DWORD PTR [edi+16]
  00013	5f		 pop	 edi
  00014	d9 5e 10	 fstp	 DWORD PTR [esi+16]
  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
??0JumpList@ioJumpController@@QAE@ABU01@@Z ENDP		; ioJumpController::JumpList::JumpList
_TEXT	ENDS
PUBLIC	??0JumpList@ioJumpController@@QAE@XZ		; ioJumpController::JumpList::JumpList
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iojumpcontroller.h
;	COMDAT ??0JumpList@ioJumpController@@QAE@XZ
_TEXT	SEGMENT
??0JumpList@ioJumpController@@QAE@XZ PROC		; ioJumpController::JumpList::JumpList, COMDAT
; _this$ = ecx

; 23   : 		{
; 24   : 			m_fJumpRange = 0.0f;

  00000	0f 57 c0	 xorps	 xmm0, xmm0
  00003	8b c1		 mov	 eax, ecx
  00005	33 c9		 xor	 ecx, ecx
  00007	89 08		 mov	 DWORD PTR [eax], ecx
  00009	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0000c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0000f	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 25   : 		}

  00014	c3		 ret	 0
??0JumpList@ioJumpController@@QAE@XZ ENDP		; ioJumpController::JumpList::JumpList
_TEXT	ENDS
PUBLIC	??1JumpList@ioJumpController@@QAE@XZ		; ioJumpController::JumpList::~JumpList
; Function compile flags: /Ogsp
;	COMDAT ??1JumpList@ioJumpController@@QAE@XZ
_TEXT	SEGMENT
??1JumpList@ioJumpController@@QAE@XZ PROC		; ioJumpController::JumpList::~JumpList, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy
??1JumpList@ioJumpController@@QAE@XZ ENDP		; ioJumpController::JumpList::~JumpList
_TEXT	ENDS
PUBLIC	??1?$_Pair_base@$$CBKUJumpList@ioJumpController@@@std@@QAE@XZ ; std::_Pair_base<unsigned long const ,ioJumpController::JumpList>::~_Pair_base<unsigned long const ,ioJumpController::JumpList>
; Function compile flags: /Ogsp
;	COMDAT ??1?$_Pair_base@$$CBKUJumpList@ioJumpController@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Pair_base@$$CBKUJumpList@ioJumpController@@@std@@QAE@XZ PROC ; std::_Pair_base<unsigned long const ,ioJumpController::JumpList>::~_Pair_base<unsigned long const ,ioJumpController::JumpList>, COMDAT
; _this$ = ecx
  00000	83 c1 04	 add	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy
??1?$_Pair_base@$$CBKUJumpList@ioJumpController@@@std@@QAE@XZ ENDP ; std::_Pair_base<unsigned long const ,ioJumpController::JumpList>::~_Pair_base<unsigned long const ,ioJumpController::JumpList>
_TEXT	ENDS
PUBLIC	?OnJumpAction@ioJumpController@@QAE_NPAVioNpcChar@@PAVioBaseChar@@@Z ; ioJumpController::OnJumpAction
EXTRN	__imp_?GetLoopSec@ioFrameTimer@@QBEKXZ:PROC
EXTRN	__imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ:PROC
EXTRN	?SetActionKey@ioNpcChar@@QAEXGGG@Z:PROC		; ioNpcChar::SetActionKey
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iojumpcontroller.cpp
;	COMDAT ?OnJumpAction@ioJumpController@@QAE_NPAVioNpcChar@@PAVioBaseChar@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
$T539299 = 8						; size = 4
_pOwner$ = 8						; size = 4
_pTarget$ = 12						; size = 4
?OnJumpAction@ioJumpController@@QAE_NPAVioNpcChar@@PAVioBaseChar@@@Z PROC ; ioJumpController::OnJumpAction, COMDAT
; _this$ = ecx

; 106  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 107  : 	if( m_CurJump.m_Jump.empty() ) return false;

  00005	8d 71 14	 lea	 esi, DWORD PTR [ecx+20]
  00008	8b 06		 mov	 eax, DWORD PTR [esi]
  0000a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000d	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  00010	75 04		 jne	 SHORT $LN2@OnJumpActi@6
  00012	32 c0		 xor	 al, al
  00014	eb 50		 jmp	 SHORT $LN3@OnJumpActi@6
$LN2@OnJumpActi@6:

; 108  : 
; 109  : 	JumpData &rkData = m_CurJump.m_Jump[0];
; 110  : 	{
; 111  : 		pOwner->SetActionKey( KEY_NONE, rkData.m_wKeyData, KEY_NONE );

  00016	8b 4d 08	 mov	 ecx, DWORD PTR _pOwner$[ebp]
  00019	53		 push	 ebx
  0001a	57		 push	 edi
  0001b	8b f8		 mov	 edi, eax
  0001d	0f b7 07	 movzx	 eax, WORD PTR [edi]
  00020	6a 00		 push	 0
  00022	50		 push	 eax
  00023	6a 00		 push	 0
  00025	e8 00 00 00 00	 call	 ?SetActionKey@ioNpcChar@@QAEXGGG@Z ; ioNpcChar::SetActionKey

; 112  : 
; 113  : 		if( FRAMEGETTIME() - m_dwCurrentTime > rkData.m_dwDelayTime )

  0002a	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00030	ff d3		 call	 ebx
  00032	8b c8		 mov	 ecx, eax
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	2b 41 28	 sub	 eax, DWORD PTR [ecx+40]
  00040	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
  00043	76 1d		 jbe	 SHORT $LN1@OnJumpActi@6

; 114  : 		{
; 115  : 			m_dwCurrentTime = FRAMEGETTIME();

  00045	ff d3		 call	 ebx
  00047	8b c8		 mov	 ecx, eax
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]

; 116  : 			m_CurJump.m_Jump.erase( m_CurJump.m_Jump.begin() );

  00052	ff 36		 push	 DWORD PTR [esi]
  00054	89 41 28	 mov	 DWORD PTR [ecx+40], eax
  00057	8d 45 08	 lea	 eax, DWORD PTR $T539299[ebp]
  0005a	50		 push	 eax
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?erase@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::erase
$LN1@OnJumpActi@6:

; 117  : 		}
; 118  : 	}			
; 119  : 	return true;

  00062	5f		 pop	 edi
  00063	b0 01		 mov	 al, 1
  00065	5b		 pop	 ebx
$LN3@OnJumpActi@6:
  00066	5e		 pop	 esi

; 120  : }

  00067	c9		 leave
  00068	c2 08 00	 ret	 8
?OnJumpAction@ioJumpController@@QAE_NPAVioNpcChar@@PAVioBaseChar@@@Z ENDP ; ioJumpController::OnJumpAction
_TEXT	ENDS
PUBLIC	?clear@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::clear
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?clear@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T539338 = -4						; size = 4
?clear@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXXZ PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::clear, COMDAT
; _this$ = ecx

; 1217 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1218 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T539338[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@0@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::erase

; 1219 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?clear@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXXZ ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::clear
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXI@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Reserve
; Function compile flags: /Ogsp
;	COMDAT ?_Reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXI@Z PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1291 : 		size_type _Size = size();

  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	2b c1		 sub	 eax, ecx

; 1292 : 		if (max_size() - _Count < _Size)

  0000d	ba ff ff ff 1f	 mov	 edx, 536870911		; 1fffffffH
  00012	2b 55 08	 sub	 edx, DWORD PTR __Count$[ebp]
  00015	c1 f8 03	 sar	 eax, 3
  00018	3b d0		 cmp	 edx, eax
  0001a	73 0b		 jae	 SHORT $LN4@Reserve@2

; 1293 : 			_Xlen();

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN21@Reserve@2:
$LN4@Reserve@2:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  00027	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0002a	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0002d	2b d1		 sub	 edx, ecx
  0002f	c1 fa 03	 sar	 edx, 3
  00032	3b c2		 cmp	 eax, edx
  00034	76 10		 jbe	 SHORT $LN1@Reserve@2

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  00036	50		 push	 eax
  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IBEII@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Grow_to
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXI@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::reserve
$LN1@Reserve@2:
  00046	5e		 pop	 esi

; 1298 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN20@Reserve@2:
?_Reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXI@Z ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Reserve
_TEXT	ENDS
PUBLIC	??$?0HAAUJumpList@ioJumpController@@@?$_Pair_base@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QAHAAUJumpList@ioJumpController@@@Z ; std::_Pair_base<unsigned long const ,ioJumpController::JumpList>::_Pair_base<unsigned long const ,ioJumpController::JumpList><int,ioJumpController::JumpList &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0HAAUJumpList@ioJumpController@@@?$_Pair_base@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QAHAAUJumpList@ioJumpController@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0HAAUJumpList@ioJumpController@@@?$_Pair_base@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QAHAAUJumpList@ioJumpController@@@Z PROC ; std::_Pair_base<unsigned long const ,ioJumpController::JumpList>::_Pair_base<unsigned long const ,ioJumpController::JumpList><int,ioJumpController::JumpList &>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	53		 push	 ebx
  00009	8b 5d 0c	 mov	 ebx, DWORD PTR __Val2$[ebp]
  0000c	56		 push	 esi
  0000d	8b f1		 mov	 esi, ecx
  0000f	57		 push	 edi
  00010	53		 push	 ebx
  00011	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00014	89 06		 mov	 DWORD PTR [esi], eax
  00016	e8 00 00 00 00	 call	 ??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >
  0001b	d9 43 10	 fld	 DWORD PTR [ebx+16]
  0001e	5f		 pop	 edi
  0001f	d9 5e 14	 fstp	 DWORD PTR [esi+20]

; 164  : 		}

  00022	8b c6		 mov	 eax, esi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??$?0HAAUJumpList@ioJumpController@@@?$_Pair_base@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QAHAAUJumpList@ioJumpController@@@Z ENDP ; std::_Pair_base<unsigned long const ,ioJumpController::JumpList>::_Pair_base<unsigned long const ,ioJumpController::JumpList><int,ioJumpController::JumpList &>
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QBK$$QAUJumpList@ioJumpController@@@Z ; std::_Pair_base<unsigned long const ,ioJumpController::JumpList>::_Pair_base<unsigned long const ,ioJumpController::JumpList>
; Function compile flags: /Ogsp
;	COMDAT ??0?$_Pair_base@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QBK$$QAUJumpList@ioJumpController@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QBK$$QAUJumpList@ioJumpController@@@Z PROC ; std::_Pair_base<unsigned long const ,ioJumpController::JumpList>::_Pair_base<unsigned long const ,ioJumpController::JumpList>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	53		 push	 ebx
  00009	8b 5d 0c	 mov	 ebx, DWORD PTR __Val2$[ebp]
  0000c	56		 push	 esi
  0000d	8b f1		 mov	 esi, ecx
  0000f	57		 push	 edi
  00010	53		 push	 ebx
  00011	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00014	89 06		 mov	 DWORD PTR [esi], eax
  00016	e8 00 00 00 00	 call	 ??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >
  0001b	d9 43 10	 fld	 DWORD PTR [ebx+16]
  0001e	5f		 pop	 edi
  0001f	d9 5e 14	 fstp	 DWORD PTR [esi+20]

; 146  : 		}

  00022	8b c6		 mov	 eax, esi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??0?$_Pair_base@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QBK$$QAUJumpList@ioJumpController@@@Z ENDP ; std::_Pair_base<unsigned long const ,ioJumpController::JumpList>::_Pair_base<unsigned long const ,ioJumpController::JumpList>
_TEXT	ENDS
PUBLIC	??1?$pair@$$CBKUJumpList@ioJumpController@@@std@@QAE@XZ ; std::pair<unsigned long const ,ioJumpController::JumpList>::~pair<unsigned long const ,ioJumpController::JumpList>
; Function compile flags: /Ogsp
;	COMDAT ??1?$pair@$$CBKUJumpList@ioJumpController@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@$$CBKUJumpList@ioJumpController@@@std@@QAE@XZ PROC ; std::pair<unsigned long const ,ioJumpController::JumpList>::~pair<unsigned long const ,ioJumpController::JumpList>, COMDAT
; _this$ = ecx
  00000	83 c1 04	 add	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy
??1?$pair@$$CBKUJumpList@ioJumpController@@@std@@QAE@XZ ENDP ; std::pair<unsigned long const ,ioJumpController::JumpList>::~pair<unsigned long const ,ioJumpController::JumpList>
_TEXT	ENDS
PUBLIC	?ClearCurrentData@ioJumpController@@QAEXXZ	; ioJumpController::ClearCurrentData
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iojumpcontroller.cpp
;	COMDAT ?ClearCurrentData@ioJumpController@@QAEXXZ
_TEXT	SEGMENT
$T539543 = -4						; size = 4
?ClearCurrentData@ioJumpController@@QAEXXZ PROC		; ioJumpController::ClearCurrentData, COMDAT
; _this$ = ecx

; 55   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 56   : 	m_dwCurrentTime = 0;

  00004	83 61 28 00	 and	 DWORD PTR [ecx+40], 0

; 57   : 	m_CurJump.m_Jump.clear();

  00008	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  0000b	83 c1 14	 add	 ecx, 20			; 00000014H
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	50		 push	 eax
  00011	52		 push	 edx
  00012	8d 45 fc	 lea	 eax, DWORD PTR $T539543[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?erase@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@0@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::erase

; 58   : }

  0001b	c9		 leave
  0001c	c3		 ret	 0
?ClearCurrentData@ioJumpController@@QAEXXZ ENDP		; ioJumpController::ClearCurrentData
_TEXT	ENDS
PUBLIC	?push_back@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXABUJumpData@ioJumpController@@@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::push_back
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?push_back@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXABUJumpData@ioJumpController@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXABUJumpData@ioJumpController@@@Z PROC ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f8		 cmp	 edi, eax
  0000f	73 2d		 jae	 SHORT $LN4@push_back@2
  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	3b cf		 cmp	 ecx, edi
  00015	77 27		 ja	 SHORT $LN4@push_back@2

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	2b f9		 sub	 edi, ecx
  00019	c1 ff 03	 sar	 edi, 3

; 980  : 			if (this->_Mylast == this->_Myend)

  0001c	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0001f	75 09		 jne	 SHORT $LN3@push_back@2

; 981  : 				_Reserve(1);

  00021	6a 01		 push	 1
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXI@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Reserve
$LN3@push_back@2:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  0002a	8b 06		 mov	 eax, DWORD PTR [esi]
  0002c	8d 04 f8	 lea	 eax, DWORD PTR [eax+edi*8]
  0002f	50		 push	 eax
  00030	ff 76 04	 push	 DWORD PTR [esi+4]
  00033	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@AAU34@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@AAU23@@Z ; std::_Cons_val<std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData,ioJumpController::JumpData &>

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else

  0003c	eb 1b		 jmp	 SHORT $LN20@push_back@2
$LN4@push_back@2:

; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  0003e	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  00041	75 09		 jne	 SHORT $LN1@push_back@2

; 991  : 				_Reserve(1);

  00043	6a 01		 push	 1
  00045	8b ce		 mov	 ecx, esi
  00047	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXI@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Reserve
$LN1@push_back@2:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  0004c	57		 push	 edi
  0004d	ff 76 04	 push	 DWORD PTR [esi+4]
  00050	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@UJumpData@ioJumpController@@@std@@UJumpData@ioJumpController@@ABU34@@std@@YAXAAV?$allocator@UJumpData@ioJumpController@@@0@PAUJumpData@ioJumpController@@ABU23@@Z ; std::_Cons_val<std::allocator<ioJumpController::JumpData>,ioJumpController::JumpData,ioJumpController::JumpData const &>
$LN20@push_back@2:
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH

; 996  : 			++this->_Mylast;

  0005c	83 46 04 08	 add	 DWORD PTR [esi+4], 8
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
?push_back@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXABUJumpData@ioJumpController@@@Z ENDP ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::push_back
_TEXT	ENDS
PUBLIC	??$?0HAAUJumpList@ioJumpController@@@?$pair@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QAHAAUJumpList@ioJumpController@@@Z ; std::pair<unsigned long const ,ioJumpController::JumpList>::pair<unsigned long const ,ioJumpController::JumpList><int,ioJumpController::JumpList &>
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0HAAUJumpList@ioJumpController@@@?$pair@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QAHAAUJumpList@ioJumpController@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0HAAUJumpList@ioJumpController@@@?$pair@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QAHAAUJumpList@ioJumpController@@@Z PROC ; std::pair<unsigned long const ,ioJumpController::JumpList>::pair<unsigned long const ,ioJumpController::JumpList><int,ioJumpController::JumpList &>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	ff 75 0c	 push	 DWORD PTR __Val2$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 08	 push	 DWORD PTR __Val1$[ebp]
  0000c	e8 00 00 00 00	 call	 ??$?0HAAUJumpList@ioJumpController@@@?$_Pair_base@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QAHAAUJumpList@ioJumpController@@@Z ; std::_Pair_base<unsigned long const ,ioJumpController::JumpList>::_Pair_base<unsigned long const ,ioJumpController::JumpList><int,ioJumpController::JumpList &>

; 248  : 		}

  00011	8b c6		 mov	 eax, esi
  00013	5e		 pop	 esi
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0HAAUJumpList@ioJumpController@@@?$pair@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QAHAAUJumpList@ioJumpController@@@Z ENDP ; std::pair<unsigned long const ,ioJumpController::JumpList>::pair<unsigned long const ,ioJumpController::JumpList><int,ioJumpController::JumpList &>
_TEXT	ENDS
PUBLIC	??_G?$pair@$$CBKUJumpList@ioJumpController@@@std@@QAEPAXI@Z ; std::pair<unsigned long const ,ioJumpController::JumpList>::`scalar deleting destructor'
; Function compile flags: /Ogsp
;	COMDAT ??_G?$pair@$$CBKUJumpList@ioJumpController@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$pair@$$CBKUJumpList@ioJumpController@@@std@@QAEPAXI@Z PROC ; std::pair<unsigned long const ,ioJumpController::JumpList>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00009	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy
  0000e	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00012	74 07		 je	 SHORT $LN1@scalar@2
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001a	59		 pop	 ecx
$LN1@scalar@2:
  0001b	8b c6		 mov	 eax, esi
  0001d	5e		 pop	 esi
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??_G?$pair@$$CBKUJumpList@ioJumpController@@@std@@QAEPAXI@Z ENDP ; std::pair<unsigned long const ,ioJumpController::JumpList>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$?0$$CBKUJumpList@ioJumpController@@@?$pair@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QAU01@@Z ; std::pair<unsigned long const ,ioJumpController::JumpList>::pair<unsigned long const ,ioJumpController::JumpList><unsigned long const ,ioJumpController::JumpList>
; Function compile flags: /Ogsp
;	COMDAT ??$?0$$CBKUJumpList@ioJumpController@@@?$pair@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0$$CBKUJumpList@ioJumpController@@@?$pair@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QAU01@@Z PROC ; std::pair<unsigned long const ,ioJumpController::JumpList>::pair<unsigned long const ,ioJumpController::JumpList><unsigned long const ,ioJumpController::JumpList>, COMDAT
; _this$ = ecx

; 255  : 		{	// construct from moved compatible pair

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  0000c	51		 push	 ecx
  0000d	50		 push	 eax
  0000e	8b ce		 mov	 ecx, esi
  00010	e8 00 00 00 00	 call	 ??0?$_Pair_base@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QBK$$QAUJumpList@ioJumpController@@@Z ; std::_Pair_base<unsigned long const ,ioJumpController::JumpList>::_Pair_base<unsigned long const ,ioJumpController::JumpList>

; 256  : 		}

  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??$?0$$CBKUJumpList@ioJumpController@@@?$pair@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QAU01@@Z ENDP ; std::pair<unsigned long const ,ioJumpController::JumpList>::pair<unsigned long const ,ioJumpController::JumpList><unsigned long const ,ioJumpController::JumpList>
_TEXT	ENDS
PUBLIC	?AttachJumpData@ioJumpController@@IAEXAAUJumpList@1@@Z ; ioJumpController::AttachJumpData
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iojumpcontroller.cpp
;	COMDAT ?AttachJumpData@ioJumpController@@IAEXAAUJumpList@1@@Z
_TEXT	SEGMENT
$T539703 = 8						; size = 4
_i$533432 = 8						; size = 4
_rkList$ = 8						; size = 4
?AttachJumpData@ioJumpController@@IAEXAAUJumpList@1@@Z PROC ; ioJumpController::AttachJumpData, COMDAT
; _this$ = ecx

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 62   : 	// Jump Copy
; 63   : 	m_CurJump.m_fJumpRange = rkList.m_fJumpRange;

  00005	8b 75 08	 mov	 esi, DWORD PTR _rkList$[ebp]
  00008	d9 46 10	 fld	 DWORD PTR [esi+16]
  0000b	8b d9		 mov	 ebx, ecx
  0000d	d9 5b 24	 fstp	 DWORD PTR [ebx+36]

; 64   : 	m_CurJump.m_Jump.clear();

  00010	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00013	8b 4b 14	 mov	 ecx, DWORD PTR [ebx+20]
  00016	57		 push	 edi
  00017	50		 push	 eax
  00018	51		 push	 ecx
  00019	8d 45 08	 lea	 eax, DWORD PTR $T539703[ebp]
  0001c	50		 push	 eax
  0001d	8d 4b 14	 lea	 ecx, DWORD PTR [ebx+20]
  00020	e8 00 00 00 00	 call	 ?erase@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@0@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::erase

; 65   : 	for(int i = 0;i < (int)rkList.m_Jump.size();i++)

  00025	8b 06		 mov	 eax, DWORD PTR [esi]
  00027	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0002a	83 65 08 00	 and	 DWORD PTR _i$533432[ebp], 0
  0002e	2b c8		 sub	 ecx, eax
  00030	f7 c1 f8 ff ff
	ff		 test	 ecx, -8			; fffffff8H
  00036	7e 21		 jle	 SHORT $LN1@AttachJump
$LL30@AttachJump:
  00038	8b 4d 08	 mov	 ecx, DWORD PTR _i$533432[ebp]
  0003b	8d 04 c8	 lea	 eax, DWORD PTR [eax+ecx*8]

; 66   : 	{
; 67   : 		JumpData &rkData = rkList.m_Jump[i];
; 68   : 		m_CurJump.m_Jump.push_back( rkData );

  0003e	50		 push	 eax
  0003f	8d 4b 14	 lea	 ecx, DWORD PTR [ebx+20]
  00042	e8 00 00 00 00	 call	 ?push_back@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXABUJumpData@ioJumpController@@@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::push_back
  00047	8b 06		 mov	 eax, DWORD PTR [esi]
  00049	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0004c	ff 45 08	 inc	 DWORD PTR _i$533432[ebp]
  0004f	2b c8		 sub	 ecx, eax
  00051	c1 f9 03	 sar	 ecx, 3
  00054	39 4d 08	 cmp	 DWORD PTR _i$533432[ebp], ecx
  00057	7c df		 jl	 SHORT $LL30@AttachJump
$LN1@AttachJump:

; 69   : 	}
; 70   : 	m_dwCurrentTime = FRAMEGETTIME();

  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  0005f	8b c8		 mov	 ecx, eax
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	89 43 28	 mov	 DWORD PTR [ebx+40], eax
  0006c	5b		 pop	 ebx

; 71   : }

  0006d	5d		 pop	 ebp
  0006e	c2 04 00	 ret	 4
?AttachJumpData@ioJumpController@@IAEXAAUJumpList@1@@Z ENDP ; ioJumpController::AttachJumpData
_TEXT	ENDS
PUBLIC	?Attach@ioJumpController@@QAE_NPAVioNpcChar@@PAVioBaseChar@@M@Z ; ioJumpController::Attach
EXTRN	__imp__rand:PROC
EXTRN	__EH_prolog3:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$?Attach@ioJumpController@@QAE_NPAVioNpcChar@@PAVioBaseChar@@M@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Attach@ioJumpController@@QAE_NPAVioNpcChar@@PAVioBaseChar@@M@Z$0
__ehfuncinfo$?Attach@ioJumpController@@QAE_NPAVioNpcChar@@PAVioBaseChar@@M@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Attach@ioJumpController@@QAE_NPAVioNpcChar@@PAVioBaseChar@@M@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iojumpcontroller.cpp
xdata$x	ENDS
;	COMDAT ?Attach@ioJumpController@@QAE_NPAVioNpcChar@@PAVioBaseChar@@M@Z
_TEXT	SEGMENT
_vJumpID$ = -32						; size = 16
_iCreate$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_fMinRange$ = 8						; size = 4
_pOwner$ = 8						; size = 4
_pTarget$ = 12						; size = 4
_iter$533458 = 16					; size = 4
_fDistSq$ = 16						; size = 4
?Attach@ioJumpController@@QAE_NPAVioNpcChar@@PAVioBaseChar@@M@Z PROC ; ioJumpController::Attach, COMDAT
; _this$ = ecx

; 74   : {

  00000	6a 14		 push	 20			; 00000014H
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?Attach@ioJumpController@@QAE_NPAVioNpcChar@@PAVioBaseChar@@M@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx

; 75   : 	if( pOwner == NULL ) return false;

  0000e	33 db		 xor	 ebx, ebx
  00010	39 5d 08	 cmp	 DWORD PTR _pOwner$[ebp], ebx
  00013	75 07		 jne	 SHORT $LN7@Attach
  00015	32 c0		 xor	 al, al
  00017	e9 e7 00 00 00	 jmp	 $LN8@Attach
$LN7@Attach:

; 76   : 
; 77   : 	float fMinRange = 0.0f;

  0001c	0f 57 c0	 xorps	 xmm0, xmm0
  0001f	f3 0f 11 45 08	 movss	 DWORD PTR _fMinRange$[ebp], xmm0

; 78   : 	DWORDVec vJumpID;

  00024	89 5d e0	 mov	 DWORD PTR _vJumpID$[ebp], ebx
  00027	89 5d e4	 mov	 DWORD PTR _vJumpID$[ebp+4], ebx
  0002a	89 5d e8	 mov	 DWORD PTR _vJumpID$[ebp+8], ebx

; 79   : 	JumpMap::iterator iCreate;
; 80   : 	for( iCreate = m_JumpMap.begin() ; iCreate != m_JumpMap.end() ; ++iCreate )

  0002d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	8b f9		 mov	 edi, ecx
  00034	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00037	89 7d f0	 mov	 DWORD PTR _iCreate$[ebp], edi
  0003a	3b c8		 cmp	 ecx, eax
  0003c	0f 84 b3 00 00
	00		 je	 $LN111@Attach
$LN41@Attach:

; 81   : 	{
; 82   : 		JumpList &rkList = iCreate->second;
; 83   : 		
; 84   : 		float fJumpRange = rkList.m_fJumpRange * rkList.m_fJumpRange;

  00042	f3 0f 10 47 20	 movss	 xmm0, DWORD PTR [edi+32]

; 85   : 		if( fDistSq > fMinRange && fDistSq < fJumpRange )

  00047	f3 0f 10 4d 10	 movss	 xmm1, DWORD PTR _fDistSq$[ebp]
  0004c	f3 0f 10 55 08	 movss	 xmm2, DWORD PTR _fMinRange$[ebp]
  00051	0f 5a c0	 cvtps2pd xmm0, xmm0
  00054	0f 5a c9	 cvtps2pd xmm1, xmm1
  00057	0f 5a d2	 cvtps2pd xmm2, xmm2
  0005a	66 0f 2f ca	 comisd	 xmm1, xmm2
  0005e	f2 0f 59 c0	 mulsd	 xmm0, xmm0
  00062	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00066	76 1e		 jbe	 SHORT $LN3@Attach
  00068	f3 0f 10 4d 10	 movss	 xmm1, DWORD PTR _fDistSq$[ebp]
  0006d	0f 5a c9	 cvtps2pd xmm1, xmm1
  00070	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00074	66 0f 2f c1	 comisd	 xmm0, xmm1
  00078	76 0c		 jbe	 SHORT $LN3@Attach

; 86   : 		{
; 87   : 			vJumpID.push_back( iCreate->first );						

  0007a	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  0007d	50		 push	 eax
  0007e	8d 4d e0	 lea	 ecx, DWORD PTR _vJumpID$[ebp]
  00081	e8 00 00 00 00	 call	 ?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back
$LN3@Attach:

; 88   : 		}
; 89   : 		fMinRange += rkList.m_fJumpRange;

  00086	f3 0f 10 4d 08	 movss	 xmm1, DWORD PTR _fMinRange$[ebp]
  0008b	f3 0f 10 47 20	 movss	 xmm0, DWORD PTR [edi+32]
  00090	0f 5a c0	 cvtps2pd xmm0, xmm0
  00093	0f 5a c9	 cvtps2pd xmm1, xmm1
  00096	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0009a	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0009e	8d 4d f0	 lea	 ecx, DWORD PTR _iCreate$[ebp]
  000a1	f3 0f 11 45 08	 movss	 DWORD PTR _fMinRange$[ebp], xmm0
  000a6	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::operator++
  000ab	8b 7d f0	 mov	 edi, DWORD PTR _iCreate$[ebp]
  000ae	3b 7e 08	 cmp	 edi, DWORD PTR [esi+8]
  000b1	75 8f		 jne	 SHORT $LN41@Attach

; 90   : 	}
; 91   : 
; 92   : 	if( !vJumpID.empty() )

  000b3	8b 45 e4	 mov	 eax, DWORD PTR _vJumpID$[ebp+4]
  000b6	39 45 e0	 cmp	 DWORD PTR _vJumpID$[ebp], eax
  000b9	74 3a		 je	 SHORT $LN111@Attach

; 93   : 	{
; 94   : 		int r = rand()%vJumpID.size();

  000bb	2b 45 e0	 sub	 eax, DWORD PTR _vJumpID$[ebp]
  000be	c1 f8 02	 sar	 eax, 2
  000c1	8b f8		 mov	 edi, eax
  000c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  000c9	33 d2		 xor	 edx, edx
  000cb	f7 f7		 div	 edi

; 95   : 		JumpMap::iterator iter = m_JumpMap.find( vJumpID[r] );

  000cd	8b 45 e0	 mov	 eax, DWORD PTR _vJumpID$[ebp]
  000d0	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  000d3	8d 04 90	 lea	 eax, DWORD PTR [eax+edx*4]
  000d6	50		 push	 eax
  000d7	8d 45 10	 lea	 eax, DWORD PTR _iter$533458[ebp]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::find

; 96   : 		if( iter != m_JumpMap.end() )

  000e0	8b 4d 10	 mov	 ecx, DWORD PTR _iter$533458[ebp]
  000e3	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  000e6	74 0d		 je	 SHORT $LN111@Attach

; 97   : 		{
; 98   : 			AttachJumpData( iter->second );

  000e8	83 c1 10	 add	 ecx, 16			; 00000010H
  000eb	51		 push	 ecx
  000ec	8b ce		 mov	 ecx, esi
  000ee	e8 00 00 00 00	 call	 ?AttachJumpData@ioJumpController@@IAEXAAUJumpList@1@@Z ; ioJumpController::AttachJumpData
  000f3	b3 01		 mov	 bl, 1
$LN111@Attach:

; 99   : 			return true;

  000f5	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000f9	8d 4d e0	 lea	 ecx, DWORD PTR _vJumpID$[ebp]
  000fc	e8 00 00 00 00	 call	 ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
  00101	8a c3		 mov	 al, bl
$LN8@Attach:

; 100  : 		}
; 101  : 	}
; 102  : 	return false;
; 103  : }

  00103	e8 00 00 00 00	 call	 __EH_epilog3
  00108	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Attach@ioJumpController@@QAE_NPAVioNpcChar@@PAVioBaseChar@@M@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _vJumpID$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
__ehhandler$?Attach@ioJumpController@@QAE_NPAVioNpcChar@@PAVioBaseChar@@M@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Attach@ioJumpController@@QAE_NPAVioNpcChar@@PAVioBaseChar@@M@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Attach@ioJumpController@@QAE_NPAVioNpcChar@@PAVioBaseChar@@M@Z ENDP ; ioJumpController::Attach
PUBLIC	??$_Destroy@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@YAXPAU?$pair@$$CBKUJumpList@ioJumpController@@@0@@Z ; std::_Destroy<std::pair<unsigned long const ,ioJumpController::JumpList> >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@YAXPAU?$pair@$$CBKUJumpList@ioJumpController@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@YAXPAU?$pair@$$CBKUJumpList@ioJumpController@@@0@@Z PROC ; std::_Destroy<std::pair<unsigned long const ,ioJumpController::JumpList> >, COMDAT

; 62   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	_Ptr->~_Ty();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	83 c1 04	 add	 ecx, 4

; 64   : 	}

  00009	5d		 pop	 ebp

; 63   : 	_Ptr->~_Ty();

  0000a	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy
??$_Destroy@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@YAXPAU?$pair@$$CBKUJumpList@ioJumpController@@@0@@Z ENDP ; std::_Destroy<std::pair<unsigned long const ,ioJumpController::JumpList> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAEXPAU?$pair@$$CBKUJumpList@ioJumpController@@@2@$$QAU32@@Z ; std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >::construct
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAEXPAU?$pair@$$CBKUJumpList@ioJumpController@@@2@$$QAU32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAEXPAU?$pair@$$CBKUJumpList@ioJumpController@@@2@$$QAU32@@Z$0
__ehfuncinfo$?construct@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAEXPAU?$pair@$$CBKUJumpList@ioJumpController@@@2@$$QAU32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAEXPAU?$pair@$$CBKUJumpList@ioJumpController@@@2@$$QAU32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAEXPAU?$pair@$$CBKUJumpList@ioJumpController@@@2@$$QAU32@@Z
_TEXT	SEGMENT
$T540095 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAEXPAU?$pair@$$CBKUJumpList@ioJumpController@@@2@$$QAU32@@Z PROC ; std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$?construct@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAEXPAU?$pair@$$CBKUJumpList@ioJumpController@@@2@$$QAU32@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0000f	89 4d f0	 mov	 DWORD PTR $T540095[ebp], ecx
  00012	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00016	85 c9		 test	 ecx, ecx
  00018	74 0d		 je	 SHORT $LN3@construct@6
  0001a	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  0001d	8d 50 04	 lea	 edx, DWORD PTR [eax+4]
  00020	52		 push	 edx
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??0?$_Pair_base@$$CBKUJumpList@ioJumpController@@@std@@QAE@$$QBK$$QAUJumpList@ioJumpController@@@Z ; std::_Pair_base<unsigned long const ,ioJumpController::JumpList>::_Pair_base<unsigned long const ,ioJumpController::JumpList>
$LN3@construct@6:

; 203  : 		}

  00027	e8 00 00 00 00	 call	 __EH_epilog3
  0002c	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAEXPAU?$pair@$$CBKUJumpList@ioJumpController@@@2@$$QAU32@@Z$0:
  00000	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00003	ff 75 f0	 push	 DWORD PTR $T540095[ebp]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$?construct@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAEXPAU?$pair@$$CBKUJumpList@ioJumpController@@@2@$$QAU32@@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?construct@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAEXPAU?$pair@$$CBKUJumpList@ioJumpController@@@2@$$QAU32@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAEXPAU?$pair@$$CBKUJumpList@ioJumpController@@@2@$$QAU32@@Z ENDP ; std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >::construct
PUBLIC	?destroy@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAEXPAU?$pair@$$CBKUJumpList@ioJumpController@@@2@@Z ; std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >::destroy
; Function compile flags: /Ogsp
;	COMDAT ?destroy@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAEXPAU?$pair@$$CBKUJumpList@ioJumpController@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAEXPAU?$pair@$$CBKUJumpList@ioJumpController@@@2@@Z PROC ; std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 213  : 		_Destroy(_Ptr);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00006	83 c1 04	 add	 ecx, 4
  00009	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy

; 214  : 		}

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?destroy@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAEXPAU?$pair@$$CBKUJumpList@ioJumpController@@@2@@Z ENDP ; std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >::destroy
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@U?$pair@$$CBKUJumpList@ioJumpController@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@0@PAU?$pair@$$CBKUJumpList@ioJumpController@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,std::pair<unsigned long const ,ioJumpController::JumpList>,std::pair<unsigned long const ,ioJumpController::JumpList> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Cons_val@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@U?$pair@$$CBKUJumpList@ioJumpController@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@0@PAU?$pair@$$CBKUJumpList@ioJumpController@@@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@U?$pair@$$CBKUJumpList@ioJumpController@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@0@PAU?$pair@$$CBKUJumpList@ioJumpController@@@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,std::pair<unsigned long const ,ioJumpController::JumpList>,std::pair<unsigned long const ,ioJumpController::JumpList> >, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	ff 75 10	 push	 DWORD PTR __Src$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __Alval$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR __Pdest$[ebp]
  0000c	e8 00 00 00 00	 call	 ?construct@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAEXPAU?$pair@$$CBKUJumpList@ioJumpController@@@2@$$QAU32@@Z ; std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >::construct

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@U?$pair@$$CBKUJumpList@ioJumpController@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@0@PAU?$pair@$$CBKUJumpList@ioJumpController@@@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,std::pair<unsigned long const ,ioJumpController::JumpList>,std::pair<unsigned long const ,ioJumpController::JumpList> >
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@U?$pair@$$CBKUJumpList@ioJumpController@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@0@PAU?$pair@$$CBKUJumpList@ioJumpController@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,std::pair<unsigned long const ,ioJumpController::JumpList> >
; Function compile flags: /Ogsp
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@U?$pair@$$CBKUJumpList@ioJumpController@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@0@PAU?$pair@$$CBKUJumpList@ioJumpController@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@U?$pair@$$CBKUJumpList@ioJumpController@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@0@PAU?$pair@$$CBKUJumpList@ioJumpController@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,std::pair<unsigned long const ,ioJumpController::JumpList> >, COMDAT

; 286  : 	{	// destroy using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Pdest$[ebp]
  00006	83 c1 04	 add	 ecx, 4

; 288  : 	}

  00009	5d		 pop	 ebp

; 287  : 	_Alval.destroy(_Pdest);

  0000a	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy
??$_Dest_val@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@U?$pair@$$CBKUJumpList@ioJumpController@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@0@PAU?$pair@$$CBKUJumpList@ioJumpController@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,std::pair<unsigned long const ,ioJumpController::JumpList> >
_TEXT	ENDS
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Insert
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1631 : 		{	// add node with value next to _Wherenode, to left if _Addleft

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 1632 : 		if (max_size() - 1 <= this->_Mysize)

  00008	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0000b	3d a9 aa aa 0a	 cmp	 eax, 178956969		; 0aaaaaa9H
  00010	72 1e		 jb	 SHORT $LN17@Insert

; 1633 : 			{	// tree would get too big, fail
; 1634 : 			_Dest_val(this->_Alval,
; 1635 : 				_STD addressof(this->_Myval(_Newnode)));

  00012	8b 75 14	 mov	 esi, DWORD PTR __Newnode$[ebp]
  00015	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00018	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy

; 1636 : 
; 1637 : 			this->_Alnod.deallocate(_Newnode, 1);

  0001d	56		 push	 esi
  0001e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 1638 : 
; 1639 : 			_Xlength_error("map/set<T> too long");

  00023	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN204@Insert:
$LN17@Insert:

; 1640 : 			}
; 1641 : 		++this->_Mysize;
; 1642 : 		_Newnode->_Parent = _Wherenode;

  00030	8b 5d 14	 mov	 ebx, DWORD PTR __Newnode$[ebp]
  00033	40		 inc	 eax
  00034	89 47 08	 mov	 DWORD PTR [edi+8], eax
  00037	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0003a	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 1643 : 
; 1644 : 		if (_Wherenode == this->_Myhead)

  0003d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00040	3b c1		 cmp	 eax, ecx
  00042	75 10		 jne	 SHORT $LN16@Insert

; 1645 : 			{	// first node in tree, just set head values
; 1646 : 			_Root() = _Newnode;

  00044	89 59 04	 mov	 DWORD PTR [ecx+4], ebx

; 1647 : 			_Lmost() = _Newnode;

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	89 18		 mov	 DWORD PTR [eax], ebx

; 1648 : 			_Rmost() = _Newnode;

  0004c	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004f	89 58 08	 mov	 DWORD PTR [eax+8], ebx
  00052	eb 21		 jmp	 SHORT $LN11@Insert
$LN16@Insert:

; 1649 : 			}
; 1650 : 		else if (_Addleft)

  00054	80 7d 0c 00	 cmp	 BYTE PTR __Addleft$[ebp], 0
  00058	74 0d		 je	 SHORT $LN14@Insert

; 1651 : 			{	// add to left of _Wherenode
; 1652 : 			this->_Left(_Wherenode) = _Newnode;

  0005a	89 18		 mov	 DWORD PTR [eax], ebx

; 1653 : 			if (_Wherenode == _Lmost())

  0005c	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0005f	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00061	75 12		 jne	 SHORT $LN11@Insert

; 1654 : 				_Lmost() = _Newnode;

  00063	89 19		 mov	 DWORD PTR [ecx], ebx

; 1655 : 			}
; 1656 : 		else

  00065	eb 0e		 jmp	 SHORT $LN11@Insert
$LN14@Insert:

; 1657 : 			{	// add to right of _Wherenode
; 1658 : 			this->_Right(_Wherenode) = _Newnode;

  00067	89 58 08	 mov	 DWORD PTR [eax+8], ebx

; 1659 : 			if (_Wherenode == _Rmost())

  0006a	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0006d	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00070	75 03		 jne	 SHORT $LN11@Insert

; 1660 : 				_Rmost() = _Newnode;

  00072	89 59 08	 mov	 DWORD PTR [ecx+8], ebx
$LN11@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  00075	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00078	8b f3		 mov	 esi, ebx
  0007a	e9 93 00 00 00	 jmp	 $LN202@Insert
$LL10@Insert:

; 1665 : 			if (this->_Parent(_Pnode)
; 1666 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

  0007f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00082	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00085	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00087	75 38		 jne	 SHORT $LN8@Insert

; 1667 : 				{	// fixup red-red in left subtree
; 1668 : 				_Wherenode =
; 1669 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

  00089	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1670 : 				if (this->_Color(_Wherenode) == this->_Red)

  0008c	80 79 24 00	 cmp	 BYTE PTR [ecx+36], 0

; 1671 : 					{	// parent has two red children, blacken both
; 1672 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;
; 1673 : 					this->_Color(_Wherenode) = this->_Black;
; 1674 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1675 : 						= this->_Red;
; 1676 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));
; 1677 : 					}
; 1678 : 				else

  00090	74 37		 je	 SHORT $LN203@Insert

; 1679 : 					{	// parent has red and black children
; 1680 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

  00092	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00095	75 0a		 jne	 SHORT $LN5@Insert

; 1681 : 						{	// rotate right child to left
; 1682 : 						_Pnode = this->_Parent(_Pnode);

  00097	8b f0		 mov	 esi, eax

; 1683 : 						_Lrotate(_Pnode);

  00099	56		 push	 esi
  0009a	8b cf		 mov	 ecx, edi
  0009c	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Lrotate
$LN5@Insert:

; 1684 : 						}
; 1685 : 					this->_Color(this->_Parent(_Pnode)) =
; 1686 : 						this->_Black;	// propagate red up

  000a1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a4	c6 40 24 01	 mov	 BYTE PTR [eax+36], 1

; 1687 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1688 : 						this->_Red;

  000a8	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000ab	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000ae	c6 40 24 00	 mov	 BYTE PTR [eax+36], 0

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

  000b2	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b5	ff 70 04	 push	 DWORD PTR [eax+4]
  000b8	8b cf		 mov	 ecx, edi
  000ba	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Rrotate

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  000bf	eb 4e		 jmp	 SHORT $LN2@Insert
$LN8@Insert:

; 1693 : 				{	// fixup red-red in right subtree
; 1694 : 				_Wherenode =
; 1695 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

  000c1	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1696 : 				if (this->_Color(_Wherenode) == this->_Red)

  000c3	80 79 24 00	 cmp	 BYTE PTR [ecx+36], 0
  000c7	75 1a		 jne	 SHORT $LN3@Insert
$LN203@Insert:

; 1697 : 					{	// parent has two red children, blacken both
; 1698 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  000c9	c6 40 24 01	 mov	 BYTE PTR [eax+36], 1

; 1699 : 					this->_Color(_Wherenode) = this->_Black;

  000cd	c6 41 24 01	 mov	 BYTE PTR [ecx+36], 1

; 1700 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1701 : 						this->_Red;

  000d1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000d4	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000d7	c6 40 24 00	 mov	 BYTE PTR [eax+36], 0

; 1702 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  000db	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000de	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 1703 : 					}
; 1704 : 				else

  000e1	eb 2c		 jmp	 SHORT $LN2@Insert
$LN3@Insert:

; 1705 : 					{	// parent has red and black children
; 1706 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

  000e3	3b 30		 cmp	 esi, DWORD PTR [eax]
  000e5	75 0a		 jne	 SHORT $LN1@Insert

; 1707 : 						{	// rotate left child to right
; 1708 : 						_Pnode = this->_Parent(_Pnode);

  000e7	8b f0		 mov	 esi, eax

; 1709 : 						_Rrotate(_Pnode);

  000e9	56		 push	 esi
  000ea	8b cf		 mov	 ecx, edi
  000ec	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Rrotate
$LN1@Insert:

; 1710 : 						}
; 1711 : 					this->_Color(this->_Parent(_Pnode)) =
; 1712 : 						this->_Black;	// propagate red up

  000f1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000f4	c6 40 24 01	 mov	 BYTE PTR [eax+36], 1

; 1713 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1714 : 						this->_Red;

  000f8	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000fb	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000fe	c6 40 24 00	 mov	 BYTE PTR [eax+36], 0

; 1715 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

  00102	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00105	ff 70 04	 push	 DWORD PTR [eax+4]
  00108	8b cf		 mov	 ecx, edi
  0010a	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Lrotate
$LN2@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  0010f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
$LN202@Insert:
  00112	80 78 24 00	 cmp	 BYTE PTR [eax+36], 0
  00116	0f 84 63 ff ff
	ff		 je	 $LL10@Insert

; 1716 : 					}
; 1717 : 				}
; 1718 : 
; 1719 : 		this->_Color(_Root()) = this->_Black;	// root is always black

  0011c	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0011f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00122	5f		 pop	 edi
  00123	c6 40 24 01	 mov	 BYTE PTR [eax+36], 1

; 1720 : 		return (iterator(_Newnode, this));

  00127	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0012a	5e		 pop	 esi
  0012b	89 18		 mov	 DWORD PTR [eax], ebx
  0012d	5b		 pop	 ebx

; 1721 : 		}

  0012e	5d		 pop	 ebp
  0012f	c2 10 00	 ret	 16			; 00000010H
$LN201@Insert:
?_Insert@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??$_Buynode@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Buynode<std::pair<unsigned long const ,ioJumpController::JumpList> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??$_Buynode@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z$0
__unwindtable$??$_Buynode@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z$2
__ehfuncinfo$??$_Buynode@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??$_Buynode@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z
_TEXT	SEGMENT
__Wherenode$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Val$ = 8						; size = 4
??$_Buynode@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Buynode<std::pair<unsigned long const ,ioJumpController::JumpList> >, COMDAT
; _this$ = ecx

; 586  : 		_Nodeptr _Buynode(_Valty&& _Val)

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??$_Buynode@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3_catch
  0000c	8b f1		 mov	 esi, ecx

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

  0000e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Buynode

; 589  : 
; 590  : 		_TRY_BEGIN
; 591  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Wherenode)),
; 592  : 			_STD forward<_Valty>(_Val));

  00013	ff 75 08	 push	 DWORD PTR __Val$[ebp]
  00016	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
  0001a	8b f8		 mov	 edi, eax
  0001c	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  0001f	50		 push	 eax
  00020	8d 4e 0d	 lea	 ecx, DWORD PTR [esi+13]
  00023	89 7d ec	 mov	 DWORD PTR __Wherenode$[ebp], edi
  00026	e8 00 00 00 00	 call	 ?construct@?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@std@@QAEXPAU?$pair@$$CBKUJumpList@ioJumpController@@@2@$$QAU32@@Z ; std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >::construct

; 596  : 		_CATCH_END
; 597  : 
; 598  : 		return (_Wherenode);

  0002b	8b c7		 mov	 eax, edi

; 599  : 		}

  0002d	e8 00 00 00 00	 call	 __EH_epilog3
  00032	c2 04 00	 ret	 4
__catch$??$_Buynode@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z$0:

; 593  : 		_CATCH_ALL
; 594  : 		this->_Alnod.deallocate(_Wherenode, 1);

  00035	ff 75 ec	 push	 DWORD PTR __Wherenode$[ebp]
  00038	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003d	59		 pop	 ecx

; 595  : 		_RERAISE;

  0003e	6a 00		 push	 0
  00040	6a 00		 push	 0
  00042	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN23@Buynode@2:
$LN22@Buynode@2:
  00047	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Buynode@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Buynode@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Buynode<std::pair<unsigned long const ,ioJumpController::JumpList> >
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::erase
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::erase, COMDAT
; _this$ = ecx

; 1195 : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))
; 1198 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1199 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1200 : 		++_Where;	// save successor iterator for return
; 1201 : 		_Orphan_ptr(*this, _Erasednode);
; 1202 : 
; 1203 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1204 : 		if (this->_Isnil(_Where._Mynode()))

  00005	8b 5d 0c	 mov	 ebx, DWORD PTR __Where$[ebp]
  00008	80 7b 25 00	 cmp	 BYTE PTR [ebx+37], 0
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00011	74 0b		 je	 SHORT $LN40@erase@2

; 1205 : 			_Xout_of_range("invalid map/set<T> iterator");

  00013	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN345@erase@2:
$LN40@erase@2:

; 1206 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1207 : 		++_Where;	// save successor iterator for return

  0001e	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00021	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::operator++

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1211 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1212 : 		_Nodeptr _Pnode = _Erasednode;
; 1213 : 
; 1214 : 		if (this->_Isnil(this->_Left(_Pnode)))

  00026	8b 13		 mov	 edx, DWORD PTR [ebx]
  00028	80 7a 25 00	 cmp	 BYTE PTR [edx+37], 0
  0002c	74 05		 je	 SHORT $LN39@erase@2

; 1215 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

  0002e	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 1216 : 		else if (this->_Isnil(this->_Right(_Pnode)))

  00031	eb 17		 jmp	 SHORT $LN337@erase@2
$LN39@erase@2:
  00033	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00036	80 78 25 00	 cmp	 BYTE PTR [eax+37], 0
  0003a	74 04		 je	 SHORT $LN37@erase@2

; 1217 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

  0003c	8b fa		 mov	 edi, edx

; 1218 : 		else

  0003e	eb 0a		 jmp	 SHORT $LN337@erase@2
$LN37@erase@2:

; 1219 : 			{	// two subtrees, must lift successor node to replace erased
; 1220 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

  00040	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 1221 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

  00043	8b 78 08	 mov	 edi, DWORD PTR [eax+8]

; 1222 : 			}
; 1223 : 
; 1224 : 		if (_Pnode == _Erasednode)

  00046	3b c3		 cmp	 eax, ebx
  00048	75 76		 jne	 SHORT $LN35@erase@2
$LN337@erase@2:

; 1225 : 			{	// at most one subtree, relink it
; 1226 : 			_Fixnodeparent = this->_Parent(_Erasednode);
; 1227 : 			if (!this->_Isnil(_Fixnode))

  0004a	80 7f 25 00	 cmp	 BYTE PTR [edi+37], 0
  0004e	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  00051	75 03		 jne	 SHORT $LN34@erase@2

; 1228 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

  00053	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN34@erase@2:

; 1229 : 
; 1230 : 			if (_Root() == _Erasednode)

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0005c	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0005f	75 05		 jne	 SHORT $LN33@erase@2

; 1231 : 				_Root() = _Fixnode;	// link down from root

  00061	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 1232 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

  00064	eb 0b		 jmp	 SHORT $LN30@erase@2
$LN33@erase@2:
  00066	39 1e		 cmp	 DWORD PTR [esi], ebx
  00068	75 04		 jne	 SHORT $LN31@erase@2

; 1233 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  0006a	89 3e		 mov	 DWORD PTR [esi], edi

; 1234 : 			else

  0006c	eb 03		 jmp	 SHORT $LN30@erase@2
$LN31@erase@2:

; 1235 : 				this->_Right(_Fixnodeparent) =
; 1236 : 					_Fixnode;	// link down to right

  0006e	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$LN30@erase@2:

; 1237 : 
; 1238 : 			if (_Lmost() == _Erasednode)

  00071	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00074	39 19		 cmp	 DWORD PTR [ecx], ebx
  00076	75 1c		 jne	 SHORT $LN29@erase@2

; 1239 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1240 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1241 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

  00078	80 7f 25 00	 cmp	 BYTE PTR [edi+37], 0
  0007c	74 04		 je	 SHORT $LN43@erase@2
  0007e	8b d6		 mov	 edx, esi
  00080	eb 10		 jmp	 SHORT $LN97@erase@2
$LN43@erase@2:
  00082	8b 07		 mov	 eax, DWORD PTR [edi]
  00084	8b d7		 mov	 edx, edi
  00086	eb 04		 jmp	 SHORT $LN339@erase@2
$LL98@erase@2:
  00088	8b d0		 mov	 edx, eax
  0008a	8b 02		 mov	 eax, DWORD PTR [edx]
$LN339@erase@2:
  0008c	80 78 25 00	 cmp	 BYTE PTR [eax+37], 0
  00090	74 f6		 je	 SHORT $LL98@erase@2
$LN97@erase@2:
  00092	89 11		 mov	 DWORD PTR [ecx], edx
$LN29@erase@2:

; 1242 : 
; 1243 : 			if (_Rmost() == _Erasednode)

  00094	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00097	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0009a	39 59 08	 cmp	 DWORD PTR [ecx+8], ebx
  0009d	75 7b		 jne	 SHORT $LN185@erase@2

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  0009f	80 7f 25 00	 cmp	 BYTE PTR [edi+37], 0
  000a3	74 04		 je	 SHORT $LN45@erase@2
  000a5	8b d6		 mov	 edx, esi
  000a7	eb 12		 jmp	 SHORT $LN117@erase@2
$LN45@erase@2:
  000a9	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000ac	8b d7		 mov	 edx, edi
  000ae	eb 05		 jmp	 SHORT $LN340@erase@2
$LL118@erase@2:
  000b0	8b d0		 mov	 edx, eax
  000b2	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
$LN340@erase@2:
  000b5	80 78 25 00	 cmp	 BYTE PTR [eax+37], 0
  000b9	74 f5		 je	 SHORT $LL118@erase@2
$LN117@erase@2:
  000bb	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 1247 : 			}
; 1248 : 		else

  000be	eb 5a		 jmp	 SHORT $LN185@erase@2
$LN35@erase@2:

; 1249 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1250 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1251 : 				_Pnode;	// link left up

  000c0	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1252 : 			this->_Left(_Pnode) =
; 1253 : 				this->_Left(_Erasednode);	// link successor down

  000c3	8b 13		 mov	 edx, DWORD PTR [ebx]
  000c5	89 10		 mov	 DWORD PTR [eax], edx

; 1254 : 
; 1255 : 			if (_Pnode == this->_Right(_Erasednode))

  000c7	3b 43 08	 cmp	 eax, DWORD PTR [ebx+8]
  000ca	75 04		 jne	 SHORT $LN26@erase@2

; 1256 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  000cc	8b f0		 mov	 esi, eax

; 1257 : 			else

  000ce	eb 1a		 jmp	 SHORT $LN25@erase@2
$LN26@erase@2:

; 1258 : 				{	// successor further down, link in place of erased
; 1259 : 				_Fixnodeparent =
; 1260 : 					this->_Parent(_Pnode);	// parent is successor's
; 1261 : 				if (!this->_Isnil(_Fixnode))

  000d0	80 7f 25 00	 cmp	 BYTE PTR [edi+37], 0
  000d4	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000d7	75 03		 jne	 SHORT $LN24@erase@2

; 1262 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  000d9	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN24@erase@2:

; 1263 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  000dc	89 3e		 mov	 DWORD PTR [esi], edi

; 1264 : 				this->_Right(_Pnode) =
; 1265 : 					this->_Right(_Erasednode);	// link next down

  000de	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  000e1	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1266 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1267 : 					_Pnode;	// right up

  000e4	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000e7	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN25@erase@2:

; 1268 : 				}
; 1269 : 
; 1270 : 			if (_Root() == _Erasednode)

  000ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000f0	39 59 04	 cmp	 DWORD PTR [ecx+4], ebx
  000f3	75 05		 jne	 SHORT $LN23@erase@2

; 1271 : 				_Root() = _Pnode;	// link down from root

  000f5	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1272 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

  000f8	eb 0e		 jmp	 SHORT $LN20@erase@2
$LN23@erase@2:
  000fa	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000fd	39 19		 cmp	 DWORD PTR [ecx], ebx
  000ff	75 04		 jne	 SHORT $LN21@erase@2

; 1273 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1274 : 					_Pnode;	// link down to left

  00101	89 01		 mov	 DWORD PTR [ecx], eax

; 1275 : 			else

  00103	eb 03		 jmp	 SHORT $LN20@erase@2
$LN21@erase@2:

; 1276 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1277 : 					_Pnode;	// link down to right

  00105	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN20@erase@2:

; 1278 : 
; 1279 : 			this->_Parent(_Pnode) =
; 1280 : 				this->_Parent(_Erasednode);	// link successor up

  00108	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0010b	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1281 : 			_STD swap(this->_Color(_Pnode),
; 1282 : 				this->_Color(_Erasednode));	// recolor it

  0010e	8a 53 24	 mov	 dl, BYTE PTR [ebx+36]
  00111	8a 48 24	 mov	 cl, BYTE PTR [eax+36]
  00114	88 50 24	 mov	 BYTE PTR [eax+36], dl
  00117	88 4b 24	 mov	 BYTE PTR [ebx+36], cl
$LN185@erase@2:

; 1283 : 			}
; 1284 : 
; 1285 : 		if (this->_Color(_Erasednode) == this->_Black)

  0011a	80 7b 24 01	 cmp	 BYTE PTR [ebx+36], 1
  0011e	0f 85 03 01 00
	00		 jne	 $LN19@erase@2

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00124	e9 b2 00 00 00	 jmp	 $LN342@erase@2
$LL18@erase@2:
  00129	80 7f 24 01	 cmp	 BYTE PTR [edi+36], 1
  0012d	0f 85 f0 00 00
	00		 jne	 $LN16@erase@2

; 1290 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

  00133	8b 06		 mov	 eax, DWORD PTR [esi]
  00135	3b f8		 cmp	 edi, eax
  00137	75 6c		 jne	 SHORT $LN15@erase@2

; 1291 : 					{	// fixup left subtree
; 1292 : 					_Pnode = this->_Right(_Fixnodeparent);

  00139	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 1293 : 					if (this->_Color(_Pnode) == this->_Red)

  0013c	80 78 24 00	 cmp	 BYTE PTR [eax+36], 0
  00140	75 11		 jne	 SHORT $LN14@erase@2

; 1294 : 						{	// rotate red up from right subtree
; 1295 : 						this->_Color(_Pnode) = this->_Black;

  00142	c6 40 24 01	 mov	 BYTE PTR [eax+36], 1

; 1296 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1297 : 						_Lrotate(_Fixnodeparent);

  00146	56		 push	 esi
  00147	c6 46 24 00	 mov	 BYTE PTR [esi+36], 0
  0014b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Lrotate

; 1298 : 						_Pnode = this->_Right(_Fixnodeparent);

  00150	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN14@erase@2:

; 1299 : 						}
; 1300 : 
; 1301 : 					if (this->_Isnil(_Pnode))

  00153	80 78 25 00	 cmp	 BYTE PTR [eax+37], 0

; 1302 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1303 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

  00157	75 7d		 jne	 SHORT $LN343@erase@2

; 1304 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

  00159	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015b	80 79 24 01	 cmp	 BYTE PTR [ecx+36], 1
  0015f	75 09		 jne	 SHORT $LN11@erase@2
  00161	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00164	80 79 24 01	 cmp	 BYTE PTR [ecx+36], 1
  00168	74 68		 je	 SHORT $LN344@erase@2
$LN11@erase@2:

; 1305 : 						{	// redden right subtree with black children
; 1306 : 						this->_Color(_Pnode) = this->_Red;
; 1307 : 						_Fixnode = _Fixnodeparent;
; 1308 : 						}
; 1309 : 					else
; 1310 : 						{	// must rearrange right subtree
; 1311 : 						if (this->_Color(this->_Right(_Pnode))
; 1312 : 							== this->_Black)

  0016a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0016d	80 79 24 01	 cmp	 BYTE PTR [ecx+36], 1
  00171	75 16		 jne	 SHORT $LN9@erase@2

; 1313 : 							{	// rotate red up from left sub-subtree
; 1314 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

  00173	8b 08		 mov	 ecx, DWORD PTR [eax]
  00175	c6 41 24 01	 mov	 BYTE PTR [ecx+36], 1

; 1315 : 							this->_Color(_Pnode) = this->_Red;
; 1316 : 							_Rrotate(_Pnode);

  00179	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017c	50		 push	 eax
  0017d	c6 40 24 00	 mov	 BYTE PTR [eax+36], 0
  00181	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Rrotate

; 1317 : 							_Pnode = this->_Right(_Fixnodeparent);

  00186	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN9@erase@2:

; 1318 : 							}
; 1319 : 
; 1320 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  00189	8a 4e 24	 mov	 cl, BYTE PTR [esi+36]
  0018c	88 48 24	 mov	 BYTE PTR [eax+36], cl

; 1321 : 						this->_Color(_Fixnodeparent) = this->_Black;
; 1322 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;
; 1323 : 						_Lrotate(_Fixnodeparent);

  0018f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00192	c6 46 24 01	 mov	 BYTE PTR [esi+36], 1
  00196	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00199	56		 push	 esi
  0019a	c6 40 24 01	 mov	 BYTE PTR [eax+36], 1
  0019e	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Lrotate

; 1324 : 						break;	// tree now recolored/rebalanced

  001a3	eb 7e		 jmp	 SHORT $LN16@erase@2
$LN15@erase@2:

; 1325 : 						}
; 1326 : 					}
; 1327 : 				else
; 1328 : 					{	// fixup right subtree
; 1329 : 					_Pnode = this->_Left(_Fixnodeparent);
; 1330 : 					if (this->_Color(_Pnode) == this->_Red)

  001a5	80 78 24 00	 cmp	 BYTE PTR [eax+36], 0
  001a9	75 10		 jne	 SHORT $LN7@erase@2

; 1331 : 						{	// rotate red up from left subtree
; 1332 : 						this->_Color(_Pnode) = this->_Black;

  001ab	c6 40 24 01	 mov	 BYTE PTR [eax+36], 1

; 1333 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1334 : 						_Rrotate(_Fixnodeparent);

  001af	56		 push	 esi
  001b0	c6 46 24 00	 mov	 BYTE PTR [esi+36], 0
  001b4	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Rrotate

; 1335 : 						_Pnode = this->_Left(_Fixnodeparent);

  001b9	8b 06		 mov	 eax, DWORD PTR [esi]
$LN7@erase@2:

; 1336 : 						}
; 1337 : 					if (this->_Isnil(_Pnode))

  001bb	80 78 25 00	 cmp	 BYTE PTR [eax+37], 0

; 1338 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1339 : 					else if (this->_Color(this->_Right(_Pnode)) ==

  001bf	75 15		 jne	 SHORT $LN343@erase@2

; 1340 : 						this->_Black
; 1341 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

  001c1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001c4	80 79 24 01	 cmp	 BYTE PTR [ecx+36], 1
  001c8	75 22		 jne	 SHORT $LN4@erase@2
  001ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  001cc	80 79 24 01	 cmp	 BYTE PTR [ecx+36], 1
  001d0	75 1a		 jne	 SHORT $LN4@erase@2
$LN344@erase@2:

; 1342 : 						{	// redden left subtree with black children
; 1343 : 						this->_Color(_Pnode) = this->_Red;

  001d2	c6 40 24 00	 mov	 BYTE PTR [eax+36], 0
$LN343@erase@2:

; 1344 : 						_Fixnode = _Fixnodeparent;

  001d6	8b fe		 mov	 edi, esi
  001d8	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
$LN342@erase@2:

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  001db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001de	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001e1	3b 78 04	 cmp	 edi, DWORD PTR [eax+4]
  001e4	0f 85 3f ff ff
	ff		 jne	 $LL18@erase@2
  001ea	eb 37		 jmp	 SHORT $LN16@erase@2
$LN4@erase@2:

; 1345 : 						}
; 1346 : 					else
; 1347 : 						{	// must rearrange left subtree
; 1348 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

  001ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ee	80 79 24 01	 cmp	 BYTE PTR [ecx+36], 1
  001f2	75 16		 jne	 SHORT $LN2@erase@2

; 1349 : 							{	// rotate red up from right sub-subtree
; 1350 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

  001f4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001f7	c6 41 24 01	 mov	 BYTE PTR [ecx+36], 1

; 1351 : 							this->_Color(_Pnode) = this->_Red;
; 1352 : 							_Lrotate(_Pnode);

  001fb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001fe	50		 push	 eax
  001ff	c6 40 24 00	 mov	 BYTE PTR [eax+36], 0
  00203	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Lrotate

; 1353 : 							_Pnode = this->_Left(_Fixnodeparent);

  00208	8b 06		 mov	 eax, DWORD PTR [esi]
$LN2@erase@2:

; 1354 : 							}
; 1355 : 
; 1356 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  0020a	8a 4e 24	 mov	 cl, BYTE PTR [esi+36]
  0020d	88 48 24	 mov	 BYTE PTR [eax+36], cl

; 1357 : 						this->_Color(_Fixnodeparent) = this->_Black;
; 1358 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;
; 1359 : 						_Rrotate(_Fixnodeparent);

  00210	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00213	c6 46 24 01	 mov	 BYTE PTR [esi+36], 1
  00217	8b 00		 mov	 eax, DWORD PTR [eax]
  00219	56		 push	 esi
  0021a	c6 40 24 01	 mov	 BYTE PTR [eax+36], 1
  0021e	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Rrotate
$LN16@erase@2:

; 1360 : 						break;	// tree now recolored/rebalanced
; 1361 : 						}
; 1362 : 					}
; 1363 : 
; 1364 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

  00223	c6 47 24 01	 mov	 BYTE PTR [edi+36], 1
$LN19@erase@2:

; 1365 : 			}
; 1366 : 
; 1367 : 		_Dest_val(this->_Alval,
; 1368 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node

  00227	8d 4b 10	 lea	 ecx, DWORD PTR [ebx+16]
  0022a	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy

; 1369 : 
; 1370 : 		this->_Alnod.deallocate(_Erasednode, 1);

  0022f	53		 push	 ebx
  00230	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00235	59		 pop	 ecx

; 1371 : 
; 1372 : 		if (0 < this->_Mysize)

  00236	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00239	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0023c	5f		 pop	 edi
  0023d	5e		 pop	 esi
  0023e	5b		 pop	 ebx
  0023f	85 c0		 test	 eax, eax
  00241	74 04		 je	 SHORT $LN1@erase@2

; 1373 : 			--this->_Mysize;

  00243	48		 dec	 eax
  00244	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@erase@2:

; 1374 : 
; 1375 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

  00247	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0024a	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  0024d	89 08		 mov	 DWORD PTR [eax], ecx

; 1376 : 		}

  0024f	c9		 leave
  00250	c2 08 00	 ret	 8
$LN338@erase@2:
?erase@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Erase
; Function compile flags: /Ogsp
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1610 : 		{	// free entire subtree, recursively

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1611 : 		for (_Nodeptr _Pnode = _Rootnode;

  00006	8b 7d 08	 mov	 edi, DWORD PTR __Rootnode$[ebp]

; 1612 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

  00009	80 7f 25 00	 cmp	 BYTE PTR [edi+37], 0
  0000d	8b d9		 mov	 ebx, ecx
  0000f	8b f7		 mov	 esi, edi
  00011	75 23		 jne	 SHORT $LN1@Erase
$LL3@Erase:

; 1613 : 			{	// free subtrees, then node
; 1614 : 			_Erase(this->_Right(_Pnode));

  00013	ff 76 08	 push	 DWORD PTR [esi+8]
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Erase

; 1615 : 			_Pnode = this->_Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 1616 : 			_Dest_val(this->_Alval,
; 1617 : 				_STD addressof(this->_Myval(_Rootnode)));

  0001f	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00022	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy

; 1618 : 
; 1619 : 			this->_Alnod.deallocate(_Rootnode, 1);

  00027	57		 push	 edi
  00028	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002d	80 7e 25 00	 cmp	 BYTE PTR [esi+37], 0
  00031	59		 pop	 ecx
  00032	8b fe		 mov	 edi, esi
  00034	74 dd		 je	 SHORT $LL3@Erase
$LN1@Erase:
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx

; 1620 : 			}
; 1621 : 		}

  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?_Linsert@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Linsert
; Function compile flags: /Ogsp
;	COMDAT ?_Linsert@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Node$ = 12						; size = 4
$T541438 = 16						; size = 4
__Where$535223 = 16					; size = 4
__Leftish$ = 16						; size = 1
?_Linsert@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Linsert, COMDAT
; _this$ = ecx

; 944  : 		{	// try to insert node at _Node, on left if _Leftish

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 945  : 		const value_type& _Val = this->_Myval(_Node);
; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();
; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  00004	8b 55 0c	 mov	 edx, DWORD PTR __Node$[ebp]
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0000e	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00011	80 78 25 00	 cmp	 BYTE PTR [eax+37], 0
  00015	8b d9		 mov	 ebx, ecx
  00017	b1 01		 mov	 cl, 1
  00019	57		 push	 edi
  0001a	88 4d fc	 mov	 BYTE PTR __Addleft$[ebp], cl
  0001d	75 2e		 jne	 SHORT $LN11@Linsert
  0001f	8b 7a 0c	 mov	 edi, DWORD PTR [edx+12]
$LL12@Linsert:

; 951  : 			{	// look for leaf to insert before (_Addleft) or after
; 952  : 			_Wherenode = _Trynode;
; 953  : 			if (_Leftish)

  00022	80 7d 10 00	 cmp	 BYTE PTR __Leftish$[ebp], 0
  00026	8b d8		 mov	 ebx, eax
  00028	74 09		 je	 SHORT $LN10@Linsert

; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,

  0002a	39 78 0c	 cmp	 DWORD PTR [eax+12], edi
  0002d	1a c9		 sbb	 cl, cl
  0002f	fe c1		 inc	 cl

; 955  : 					this->_Key(_Trynode),
; 956  : 					this->_Kfn(_Val));	// favor left end
; 957  : 			else

  00031	eb 06		 jmp	 SHORT $LN168@Linsert
$LN10@Linsert:

; 958  : 				_Addleft = _DEBUG_LT_PRED(this->comp,

  00033	3b 78 0c	 cmp	 edi, DWORD PTR [eax+12]
  00036	0f 92 c1	 setb	 cl
$LN168@Linsert:
  00039	88 4d fc	 mov	 BYTE PTR __Addleft$[ebp], cl

; 959  : 					this->_Kfn(_Val),
; 960  : 					this->_Key(_Trynode));	// favor right end
; 961  : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 962  : 				: this->_Right(_Trynode);

  0003c	84 c9		 test	 cl, cl
  0003e	74 04		 je	 SHORT $LN15@Linsert
  00040	8b 00		 mov	 eax, DWORD PTR [eax]
  00042	eb 03		 jmp	 SHORT $LN16@Linsert
$LN15@Linsert:
  00044	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$LN16@Linsert:

; 945  : 		const value_type& _Val = this->_Myval(_Node);
; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();
; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  00047	80 78 25 00	 cmp	 BYTE PTR [eax+37], 0
  0004b	74 d5		 je	 SHORT $LL12@Linsert
$LN11@Linsert:

; 963  : 			}
; 964  : 
; 965  : 		if (this->_Multi)
; 966  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));
; 967  : 		else
; 968  : 			{	// insert only if unique
; 969  : 			iterator _Where = iterator(_Wherenode, this);

  0004d	8b fb		 mov	 edi, ebx
  0004f	89 7d 10	 mov	 DWORD PTR __Where$535223[ebp], edi

; 970  : 			if (!_Addleft)

  00052	84 c9		 test	 cl, cl
  00054	74 31		 je	 SHORT $LN99@Linsert

; 971  : 				;	// need to test if insert after is okay
; 972  : 			else if (_Where == begin())

  00056	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00059	3b 18		 cmp	 ebx, DWORD PTR [eax]
  0005b	75 1c		 jne	 SHORT $LN4@Linsert

; 973  : 				return (_Pairib(_Insert(true, _Wherenode, _Node), true));

  0005d	52		 push	 edx
  0005e	53		 push	 ebx
  0005f	6a 01		 push	 1
$LN169@Linsert:
  00061	8d 45 10	 lea	 eax, DWORD PTR $T541438[ebp]
  00064	50		 push	 eax
  00065	8b ce		 mov	 ecx, esi
  00067	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Insert
  0006c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00071	89 08		 mov	 DWORD PTR [eax], ecx
  00073	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  00077	eb 37		 jmp	 SHORT $LN1@Linsert
$LN4@Linsert:

; 974  : 			else
; 975  : 				--_Where;	// need to test if insert before is okay

  00079	8d 4d 10	 lea	 ecx, DWORD PTR __Where$535223[ebp]
  0007c	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::operator--
  00081	8b 7d 10	 mov	 edi, DWORD PTR __Where$535223[ebp]
  00084	8b 55 0c	 mov	 edx, DWORD PTR __Node$[ebp]
$LN99@Linsert:

; 976  : 
; 977  : 			if (_DEBUG_LT_PRED(this->comp,

  00087	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  0008a	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  0008d	73 07		 jae	 SHORT $LN2@Linsert

; 978  : 				this->_Key(_Where._Mynode()),
; 979  : 				this->_Kfn(_Val)))
; 980  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

  0008f	52		 push	 edx
  00090	53		 push	 ebx
  00091	ff 75 fc	 push	 DWORD PTR __Addleft$[ebp]
  00094	eb cb		 jmp	 SHORT $LN169@Linsert
$LN2@Linsert:

; 981  : 			else
; 982  : 				{	// duplicate, don't insert
; 983  : 				_Dest_val(this->_Alval,
; 984  : 					_STD addressof(this->_Myval(_Node)));

  00096	8d 4a 10	 lea	 ecx, DWORD PTR [edx+16]
  00099	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy

; 985  : 
; 986  : 				this->_Alnod.deallocate(_Node, 1);

  0009e	ff 75 0c	 push	 DWORD PTR __Node$[ebp]
  000a1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

  000a6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a9	59		 pop	 ecx
  000aa	89 38		 mov	 DWORD PTR [eax], edi
  000ac	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
$LN1@Linsert:
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  000b3	c9		 leave
  000b4	c2 0c 00	 ret	 12			; 0000000cH
?_Linsert@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Linsert
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::clear
; Function compile flags: /Ogsp
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::clear, COMDAT
; _this$ = ecx

; 1410 : 		{	// erase all

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 1411 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1412 : 		this->_Orphan_ptr(*this, 0);
; 1413 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1414 : 
; 1415 : 		_Erase(_Root());

  00004	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00007	ff 70 04	 push	 DWORD PTR [eax+4]
  0000a	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Erase

; 1416 : 		_Root() = this->_Myhead;

  0000f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1417 : 		_Lmost() = this->_Myhead;

  00015	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax

; 1418 : 		_Rmost() = this->_Myhead;

  0001a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0001d	89 76 08	 mov	 DWORD PTR [esi+8], esi

; 1419 : 		this->_Mysize = 0;

  00020	83 67 08 00	 and	 DWORD PTR [edi+8], 0
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi

; 1420 : 		}

  00026	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::clear
_TEXT	ENDS
PUBLIC	??$insert@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::insert<std::pair<unsigned long const ,ioJumpController::JumpList> >
; Function compile flags: /Ogsp
;	COMDAT ??$insert@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::insert<std::pair<unsigned long const ,ioJumpController::JumpList> >, COMDAT
; _this$ = ecx

; 753  : 		_Pairib insert(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 754  : 		{	// try to insert node with value _Val, favoring right side
; 755  : 		return (_Linsert(this->_Buynode(_STD forward<_Valty>(_Val)),
; 756  : 			false));

  00004	6a 00		 push	 0
  00006	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Buynode<std::pair<unsigned long const ,ioJumpController::JumpList> >
  00010	50		 push	 eax
  00011	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  00014	8b ce		 mov	 ecx, esi
  00016	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Linsert
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	5e		 pop	 esi

; 757  : 		}

  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
??$insert@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::insert<std::pair<unsigned long const ,ioJumpController::JumpList> >
_TEXT	ENDS
PUBLIC	__real@4cbebc20
PUBLIC	_rkLoader$GSCopy$
PUBLIC	_this$GSCopy$
PUBLIC	?LoadController@ioJumpController@@QAEXAAVioINILoader@@@Z ; ioJumpController::LoadController
EXTRN	__imp__sprintf:PROC
EXTRN	__EH_epilog3_GS:PROC
EXTRN	__EH_prolog3_GS:PROC
EXTRN	_memset:PROC
;	COMDAT __real@4cbebc20
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
CONST	SEGMENT
__real@4cbebc20 DD 04cbebc20r			; 1e+008
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadController@ioJumpController@@QAEXAAVioINILoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadController@ioJumpController@@QAEXAAVioINILoader@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadController@ioJumpController@@QAEXAAVioINILoader@@@Z$1
__ehfuncinfo$?LoadController@ioJumpController@@QAEXAAVioINILoader@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?LoadController@ioJumpController@@QAEXAAVioINILoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iojumpcontroller.cpp
xdata$x	ENDS
;	COMDAT ?LoadController@ioJumpController@@QAEXAAVioINILoader@@@Z
_TEXT	SEGMENT
$T541905 = -432						; size = 8
$T541903 = -424						; size = 24
_kData$532983 = -400					; size = 8
_kJumpList$532967 = -392				; size = 20
tv3775 = -372						; size = 4
$T542534 = -368						; size = 4
tv6158 = -364						; size = 4
_this$GSCopy$ = -360					; size = 4
tv3186 = -360						; size = 4
tv6169 = -356						; size = 4
_rkLoader$GSCopy$ = -352				; size = 4
_szKey$532813 = -348					; size = 260
___encStr$532987 = -88					; size = 6
__k$542312 = -76					; size = 12
__k$542346 = -60					; size = 7
___encStr$532817 = -48					; size = 7
__k$542061 = -36					; size = 14
__t$541936 = -36					; size = 15
___encStr$533139 = -36					; size = 12
__$EHRec$ = -12						; size = 12
_rkLoader$ = 8						; size = 4
?LoadController@ioJumpController@@QAEXAAVioINILoader@@@Z PROC ; ioJumpController::LoadController, COMDAT
; _this$ = ecx

; 26   : {

  00000	68 a4 01 00 00	 push	 420			; 000001a4H
  00005	b8 00 00 00 00	 mov	 eax, __ehhandler$?LoadController@ioJumpController@@QAEXAAVioINILoader@@@Z
  0000a	e8 00 00 00 00	 call	 __EH_prolog3_GS
  0000f	8b 7d 08	 mov	 edi, DWORD PTR _rkLoader$[ebp]

; 27   : 	rkLoader.SetTitle_e( "JumpController" );

  00012	33 db		 xor	 ebx, ebx
  00014	6a 03		 push	 3
  00016	89 8d 98 fe ff
	ff		 mov	 DWORD PTR _this$GSCopy$[ebp], ecx

; 49   : 		}

  0001c	89 bd a0 fe ff
	ff		 mov	 DWORD PTR _rkLoader$GSCopy$[ebp], edi
  00022	c7 45 dc a7 99
	86 9a		 mov	 DWORD PTR __t$541936[ebp], -1702454873 ; 9a8699a7H
  00029	c7 45 e0 ae 83
	85 9e		 mov	 DWORD PTR __t$541936[ebp+4], -1635417170 ; 9e8583aeH
  00030	c7 45 e4 9f 83
	87 86		 mov	 DWORD PTR __t$541936[ebp+8], -2037939297 ; 8687839fH
  00037	66 c7 45 e8 88
	9e		 mov	 WORD PTR __t$541936[ebp+12], 40584 ; 00009e88H
  0003d	8d 45 dc	 lea	 eax, DWORD PTR __t$541936[ebp]
  00040	88 5d ea	 mov	 BYTE PTR __t$541936[ebp+14], bl
  00043	59		 pop	 ecx
  00044	be ed ec eb ea	 mov	 esi, -353637139		; eaebecedH
$LL411@LoadContro:

; 27   : 	rkLoader.SetTitle_e( "JumpController" );

  00049	31 30		 xor	 DWORD PTR [eax], esi
  0004b	83 c0 04	 add	 eax, 4
  0004e	49		 dec	 ecx
  0004f	75 f8		 jne	 SHORT $LL411@LoadContro
  00051	6a 0c		 push	 12			; 0000000cH
  00053	58		 pop	 eax
$LL408@LoadContro:
  00054	8b c8		 mov	 ecx, eax
  00056	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0005c	79 05		 jns	 SHORT $LN843@LoadContro
  0005e	49		 dec	 ecx
  0005f	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00062	41		 inc	 ecx
$LN843@LoadContro:
  00063	b2 ed		 mov	 dl, -19			; ffffffedH
  00065	2a d1		 sub	 dl, cl
  00067	30 54 05 dc	 xor	 BYTE PTR __t$541936[ebp+eax], dl
  0006b	40		 inc	 eax
  0006c	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  0006f	7c e3		 jl	 SHORT $LL408@LoadContro
  00071	8d 45 dc	 lea	 eax, DWORD PTR __t$541936[ebp]
  00074	50		 push	 eax
  00075	8b cf		 mov	 ecx, edi
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z
  0007d	6a 03		 push	 3

; 28   : 	int iMaxController = rkLoader.LoadInt_e( "MaxController", 0 );

  0007f	c7 45 dc a0 8d
	93 a9		 mov	 DWORD PTR __k$542061[ebp], -1449947744 ; a9938da0H
  00086	c7 45 e0 82 82
	9f 98		 mov	 DWORD PTR __k$542061[ebp+4], -1734376830 ; 989f8282H
  0008d	c7 45 e4 82 80
	87 8f		 mov	 DWORD PTR __k$542061[ebp+8], -1886945150 ; 8f878082H
  00094	8d 45 dc	 lea	 eax, DWORD PTR __k$542061[ebp]
  00097	66 c7 45 e8 9f
	00		 mov	 WORD PTR __k$542061[ebp+12], 159 ; 0000009fH
  0009d	59		 pop	 ecx
$LL517@LoadContro:
  0009e	31 30		 xor	 DWORD PTR [eax], esi
  000a0	83 c0 04	 add	 eax, 4
  000a3	49		 dec	 ecx
  000a4	75 f8		 jne	 SHORT $LL517@LoadContro
  000a6	80 75 e8 ed	 xor	 BYTE PTR __k$542061[ebp+12], -19 ; ffffffedH
  000aa	53		 push	 ebx
  000ab	8d 45 dc	 lea	 eax, DWORD PTR __k$542061[ebp]
  000ae	50		 push	 eax
  000af	8b cf		 mov	 ecx, edi
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 29   : 	for(int i = 0;i < iMaxController;i++)

  000b7	3b c3		 cmp	 eax, ebx
  000b9	0f 8e de 02 00
	00		 jle	 $LN301@LoadContro
  000bf	8b 8d 98 fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  000c5	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__sprintf
  000cb	83 c1 04	 add	 ecx, 4
  000ce	89 8d 90 fe ff
	ff		 mov	 DWORD PTR $T542534[ebp], ecx
  000d4	c7 85 9c fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv6169[ebp], 1
  000de	89 85 98 fe ff
	ff		 mov	 DWORD PTR tv3186[ebp], eax
$LL303@LoadContro:

; 30   : 	{
; 31   : 		char szKey[MAX_PATH] = "";

  000e4	68 03 01 00 00	 push	 259			; 00000103H
  000e9	8d 85 a5 fe ff
	ff		 lea	 eax, DWORD PTR _szKey$532813[ebp+1]
  000ef	53		 push	 ebx
  000f0	50		 push	 eax
  000f1	88 9d a4 fe ff
	ff		 mov	 BYTE PTR _szKey$532813[ebp], bl
  000f7	e8 00 00 00 00	 call	 _memset
  000fc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 32   : 		sprintf_e( szKey, "jump%d", i + 1 );

  000ff	6a 04		 push	 4
  00101	c7 45 d0 87 99
	86 9a		 mov	 DWORD PTR ___encStr$532817[ebp], -1702454905 ; 9a869987H
  00108	31 75 d0	 xor	 DWORD PTR ___encStr$532817[ebp], esi
  0010b	66 c7 45 d4 c8
	88		 mov	 WORD PTR ___encStr$532817[ebp+4], 35016 ; 000088c8H
  00111	88 5d d6	 mov	 BYTE PTR ___encStr$532817[ebp+6], bl
  00114	58		 pop	 eax
$LL522@LoadContro:
  00115	8b c8		 mov	 ecx, eax
  00117	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0011d	79 05		 jns	 SHORT $LN844@LoadContro
  0011f	49		 dec	 ecx
  00120	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00123	41		 inc	 ecx
$LN844@LoadContro:
  00124	b2 ed		 mov	 dl, -19			; ffffffedH
  00126	2a d1		 sub	 dl, cl
  00128	30 54 05 d0	 xor	 BYTE PTR ___encStr$532817[ebp+eax], dl
  0012c	40		 inc	 eax
  0012d	83 f8 06	 cmp	 eax, 6
  00130	7c e3		 jl	 SHORT $LL522@LoadContro
  00132	ff b5 9c fe ff
	ff		 push	 DWORD PTR tv6169[ebp]
  00138	8d 45 d0	 lea	 eax, DWORD PTR ___encStr$532817[ebp]
  0013b	50		 push	 eax
  0013c	8d 85 a4 fe ff
	ff		 lea	 eax, DWORD PTR _szKey$532813[ebp]
  00142	50		 push	 eax
  00143	ff d7		 call	 edi

; 33   : 		rkLoader.SetTitle( szKey );

  00145	8b 8d a0 fe ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  0014b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0014e	8d 85 a4 fe ff
	ff		 lea	 eax, DWORD PTR _szKey$532813[ebp]
  00154	50		 push	 eax
  00155	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetTitle@ioINILoader@@QAEXPBD@Z

; 34   : 
; 35   : 		JumpList kJumpList;

  0015b	0f 57 c0	 xorps	 xmm0, xmm0
  0015e	89 9d 78 fe ff
	ff		 mov	 DWORD PTR _kJumpList$532967[ebp], ebx
  00164	89 9d 7c fe ff
	ff		 mov	 DWORD PTR _kJumpList$532967[ebp+4], ebx
  0016a	89 9d 80 fe ff
	ff		 mov	 DWORD PTR _kJumpList$532967[ebp+8], ebx
  00170	f3 0f 11 85 88
	fe ff ff	 movss	 DWORD PTR _kJumpList$532967[ebp+16], xmm0
  00178	6a 02		 push	 2
  0017a	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx

; 36   : 		kJumpList.m_fJumpRange = rkLoader.LoadFloat_e( "TargetRange", 99999999.0f );

  0017d	c7 45 b4 b9 8d
	99 8d		 mov	 DWORD PTR __k$542312[ebp], -1919316551 ; 8d998db9H
  00184	c7 45 b8 88 98
	b9 8b		 mov	 DWORD PTR __k$542312[ebp+4], -1950771064 ; 8bb99888H
  0018b	8d 45 b4	 lea	 eax, DWORD PTR __k$542312[ebp]
  0018e	c7 45 bc 83 8b
	8e 00		 mov	 DWORD PTR __k$542312[ebp+8], 9341827 ; 008e8b83H
  00195	59		 pop	 ecx
$LL641@LoadContro:
  00196	31 30		 xor	 DWORD PTR [eax], esi
  00198	83 c0 04	 add	 eax, 4
  0019b	49		 dec	 ecx
  0019c	75 f8		 jne	 SHORT $LL641@LoadContro
  0019e	6a 08		 push	 8
  001a0	58		 pop	 eax
$LL638@LoadContro:
  001a1	8b c8		 mov	 ecx, eax
  001a3	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  001a9	79 05		 jns	 SHORT $LN845@LoadContro
  001ab	49		 dec	 ecx
  001ac	83 c9 fc	 or	 ecx, -4			; fffffffcH
  001af	41		 inc	 ecx
$LN845@LoadContro:
  001b0	b2 ed		 mov	 dl, -19			; ffffffedH
  001b2	2a d1		 sub	 dl, cl
  001b4	30 54 05 b4	 xor	 BYTE PTR __k$542312[ebp+eax], dl
  001b8	40		 inc	 eax
  001b9	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  001bc	7c e3		 jl	 SHORT $LL638@LoadContro
  001be	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4cbebc20
  001c6	51		 push	 ecx
  001c7	8b 8d a0 fe ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  001cd	8d 45 b4	 lea	 eax, DWORD PTR __k$542312[ebp]
  001d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d5	50		 push	 eax
  001d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z
  001dc	d9 9d 88 fe ff
	ff		 fstp	 DWORD PTR _kJumpList$532967[ebp+16]

; 37   : 
; 38   : 		int iMaxJump = rkLoader.LoadInt_e( "MaxKey", 0 );

  001e2	6a 04		 push	 4
  001e4	c7 45 c4 a0 8d
	93 a1		 mov	 DWORD PTR __k$542346[ebp], -1584165472 ; a1938da0H
  001eb	31 75 c4	 xor	 DWORD PTR __k$542346[ebp], esi
  001ee	66 c7 45 c8 88
	95		 mov	 WORD PTR __k$542346[ebp+4], 38280 ; 00009588H
  001f4	88 5d ca	 mov	 BYTE PTR __k$542346[ebp+6], bl
  001f7	58		 pop	 eax
$LL744@LoadContro:
  001f8	8b c8		 mov	 ecx, eax
  001fa	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00200	79 05		 jns	 SHORT $LN846@LoadContro
  00202	49		 dec	 ecx
  00203	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00206	41		 inc	 ecx
$LN846@LoadContro:
  00207	b2 ed		 mov	 dl, -19			; ffffffedH
  00209	2a d1		 sub	 dl, cl
  0020b	30 54 05 c4	 xor	 BYTE PTR __k$542346[ebp+eax], dl
  0020f	40		 inc	 eax
  00210	83 f8 06	 cmp	 eax, 6
  00213	7c e3		 jl	 SHORT $LL744@LoadContro
  00215	8b 8d a0 fe ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  0021b	53		 push	 ebx
  0021c	8d 45 c4	 lea	 eax, DWORD PTR __k$542346[ebp]
  0021f	50		 push	 eax
  00220	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 39   : 		for(int j = 0;j < iMaxJump;j++)

  00226	3b c3		 cmp	 eax, ebx
  00228	0f 8e e8 00 00
	00		 jle	 $LN199@LoadContro

; 37   : 
; 38   : 		int iMaxJump = rkLoader.LoadInt_e( "MaxKey", 0 );

  0022e	c7 85 94 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv6158[ebp], 1
  00238	89 85 8c fe ff
	ff		 mov	 DWORD PTR tv3775[ebp], eax
$LN201@LoadContro:

; 40   : 		{
; 41   : 			JumpData kData;
; 42   : 
; 43   : 			sprintf_e( szKey, "Key%d", j + 1 );

  0023e	ff b5 94 fe ff
	ff		 push	 DWORD PTR tv6158[ebp]
  00244	8d 45 a8	 lea	 eax, DWORD PTR ___encStr$532987[ebp]
  00247	50		 push	 eax
  00248	8d 85 a4 fe ff
	ff		 lea	 eax, DWORD PTR _szKey$532813[ebp]
  0024e	c7 45 a8 a6 89
	92 cf		 mov	 DWORD PTR ___encStr$532987[ebp], -812480090 ; cf9289a6H
  00255	31 75 a8	 xor	 DWORD PTR ___encStr$532987[ebp], esi
  00258	50		 push	 eax
  00259	66 c7 45 ac 64
	00		 mov	 WORD PTR ___encStr$532987[ebp+4], 100 ; 00000064H
  0025f	ff d7		 call	 edi

; 44   : 			kData.m_wKeyData  = rkLoader.LoadInt( szKey, 0 );

  00261	8b 8d a0 fe ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  00267	83 c4 0c	 add	 esp, 12			; 0000000cH
  0026a	53		 push	 ebx
  0026b	8d 85 a4 fe ff
	ff		 lea	 eax, DWORD PTR _szKey$532813[ebp]
  00271	50		 push	 eax
  00272	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z
  00278	6a 02		 push	 2
  0027a	66 89 85 70 fe
	ff ff		 mov	 WORD PTR _kData$532983[ebp], ax

; 45   : 			sprintf_e( szKey, "Key%d_Delay", j + 1 );

  00281	c7 45 dc a6 89
	92 cf		 mov	 DWORD PTR ___encStr$533139[ebp], -812480090 ; cf9289a6H
  00288	c7 45 e0 89 b3
	af 8f		 mov	 DWORD PTR ___encStr$533139[ebp+4], -1884310647 ; 8fafb389H
  0028f	8d 45 dc	 lea	 eax, DWORD PTR ___encStr$533139[ebp]
  00292	c7 45 e4 81 8d
	92 00		 mov	 DWORD PTR ___encStr$533139[ebp+8], 9604481 ; 00928d81H
  00299	59		 pop	 ecx
$LL765@LoadContro:
  0029a	31 30		 xor	 DWORD PTR [eax], esi
  0029c	83 c0 04	 add	 eax, 4
  0029f	49		 dec	 ecx
  002a0	75 f8		 jne	 SHORT $LL765@LoadContro
  002a2	6a 08		 push	 8
  002a4	58		 pop	 eax
$LL762@LoadContro:
  002a5	8b c8		 mov	 ecx, eax
  002a7	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  002ad	79 05		 jns	 SHORT $LN847@LoadContro
  002af	49		 dec	 ecx
  002b0	83 c9 fc	 or	 ecx, -4			; fffffffcH
  002b3	41		 inc	 ecx
$LN847@LoadContro:
  002b4	b2 ed		 mov	 dl, -19			; ffffffedH
  002b6	2a d1		 sub	 dl, cl
  002b8	30 54 05 dc	 xor	 BYTE PTR ___encStr$533139[ebp+eax], dl
  002bc	40		 inc	 eax
  002bd	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  002c0	7c e3		 jl	 SHORT $LL762@LoadContro
  002c2	ff b5 94 fe ff
	ff		 push	 DWORD PTR tv6158[ebp]
  002c8	8d 45 dc	 lea	 eax, DWORD PTR ___encStr$533139[ebp]
  002cb	50		 push	 eax
  002cc	8d 85 a4 fe ff
	ff		 lea	 eax, DWORD PTR _szKey$532813[ebp]
  002d2	50		 push	 eax
  002d3	ff d7		 call	 edi

; 46   : 			kData.m_dwDelayTime = rkLoader.LoadInt( szKey, 0 );

  002d5	8b 8d a0 fe ff
	ff		 mov	 ecx, DWORD PTR _rkLoader$GSCopy$[ebp]
  002db	83 c4 0c	 add	 esp, 12			; 0000000cH
  002de	53		 push	 ebx
  002df	8d 85 a4 fe ff
	ff		 lea	 eax, DWORD PTR _szKey$532813[ebp]
  002e5	50		 push	 eax
  002e6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z
  002ec	89 85 74 fe ff
	ff		 mov	 DWORD PTR _kData$532983[ebp+4], eax

; 47   : 
; 48   : 			kJumpList.m_Jump.push_back( kData );

  002f2	8d 85 70 fe ff
	ff		 lea	 eax, DWORD PTR _kData$532983[ebp]
  002f8	50		 push	 eax
  002f9	8d 8d 78 fe ff
	ff		 lea	 ecx, DWORD PTR _kJumpList$532967[ebp]
  002ff	e8 00 00 00 00	 call	 ?push_back@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAEXABUJumpData@ioJumpController@@@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::push_back
  00304	ff 85 94 fe ff
	ff		 inc	 DWORD PTR tv6158[ebp]
  0030a	ff 8d 8c fe ff
	ff		 dec	 DWORD PTR tv3775[ebp]
  00310	0f 85 28 ff ff
	ff		 jne	 $LN201@LoadContro
$LN199@LoadContro:

; 50   : 		m_JumpMap.insert( JumpMap::value_type( i + 1, kJumpList ) );

  00316	8b 85 9c fe ff
	ff		 mov	 eax, DWORD PTR tv6169[ebp]
  0031c	89 85 58 fe ff
	ff		 mov	 DWORD PTR $T541903[ebp], eax
  00322	8d 85 78 fe ff
	ff		 lea	 eax, DWORD PTR _kJumpList$532967[ebp]
  00328	50		 push	 eax
  00329	8d 8d 5c fe ff
	ff		 lea	 ecx, DWORD PTR $T541903[ebp+4]
  0032f	e8 00 00 00 00	 call	 ??0?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE@ABV01@@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >
  00334	f3 0f 10 85 88
	fe ff ff	 movss	 xmm0, DWORD PTR _kJumpList$532967[ebp+16]
  0033c	f3 0f 11 85 6c
	fe ff ff	 movss	 DWORD PTR $T541903[ebp+20], xmm0
  00344	8b 8d 90 fe ff
	ff		 mov	 ecx, DWORD PTR $T542534[ebp]
  0034a	53		 push	 ebx
  0034b	8d 85 58 fe ff
	ff		 lea	 eax, DWORD PTR $T541903[ebp]
  00351	50		 push	 eax
  00352	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00356	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@$$CBKUJumpList@ioJumpController@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Buynode<std::pair<unsigned long const ,ioJumpController::JumpList> >
  0035b	8b 8d 90 fe ff
	ff		 mov	 ecx, DWORD PTR $T542534[ebp]
  00361	50		 push	 eax
  00362	8d 85 50 fe ff
	ff		 lea	 eax, DWORD PTR $T541905[ebp]
  00368	50		 push	 eax
  00369	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Linsert
  0036e	8d 8d 5c fe ff
	ff		 lea	 ecx, DWORD PTR $T541903[ebp+4]
  00374	88 5d fc	 mov	 BYTE PTR __$EHRec$[ebp+8], bl
  00377	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy

; 51   : 	}

  0037c	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00380	8d 8d 78 fe ff
	ff		 lea	 ecx, DWORD PTR _kJumpList$532967[ebp]
  00386	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy
  0038b	ff 85 9c fe ff
	ff		 inc	 DWORD PTR tv6169[ebp]
  00391	ff 8d 98 fe ff
	ff		 dec	 DWORD PTR tv3186[ebp]
  00397	0f 85 47 fd ff
	ff		 jne	 $LL303@LoadContro
$LN301@LoadContro:

; 52   : }

  0039d	e8 00 00 00 00	 call	 __EH_epilog3_GS
  003a2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadController@ioJumpController@@QAEXAAVioINILoader@@@Z$0:
  00000	8d 8d 78 fe ff
	ff		 lea	 ecx, DWORD PTR _kJumpList$532967[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1JumpList@ioJumpController@@QAE@XZ
__unwindfunclet$?LoadController@ioJumpController@@QAEXAAVioINILoader@@@Z$1:
  0000b	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR $T541903[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBKUJumpList@ioJumpController@@@std@@QAE@XZ
__ehhandler$?LoadController@ioJumpController@@QAEXAAVioINILoader@@@Z:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 8a 4c fe ff
	ff		 mov	 ecx, DWORD PTR [edx-436]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002d	33 c8		 xor	 ecx, eax
  0002f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00034	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadController@ioJumpController@@QAEXAAVioINILoader@@@Z
  00039	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadController@ioJumpController@@QAEXAAVioINILoader@@@Z ENDP ; ioJumpController::LoadController
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::erase
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T542647 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::erase, COMDAT
; _this$ = ecx

; 1379 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1380 : 		if (_First == begin() && _Last == end())

  00007	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  0000d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0000f	75 13		 jne	 SHORT $LN65@erase@3
  00011	39 45 10	 cmp	 DWORD PTR __Last$[ebp], eax
  00014	75 0e		 jne	 SHORT $LN65@erase@3

; 1381 : 			{	// erase all
; 1382 : 			clear();

  00016	8b ce		 mov	 ecx, esi
  00018	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::clear

; 1383 : 			return (begin());

  0001d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00020	8b 08		 mov	 ecx, DWORD PTR [eax]
  00022	eb 25		 jmp	 SHORT $LN1@erase@3
$LN65@erase@3:

; 1384 : 			}
; 1385 : 		else
; 1386 : 			{	// partial erase, one at a time
; 1387 : 			while (_First != _Last)

  00024	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00027	74 20		 je	 SHORT $LN1@erase@3
  00029	57		 push	 edi
$LL2@erase@3:

; 1388 : 				erase(_First++);

  0002a	8b f9		 mov	 edi, ecx
  0002c	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0002f	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::operator++
  00034	57		 push	 edi
  00035	8d 45 fc	 lea	 eax, DWORD PTR $T542647[ebp]
  00038	50		 push	 eax
  00039	8b ce		 mov	 ecx, esi
  0003b	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::erase
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00043	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00046	75 e2		 jne	 SHORT $LL2@erase@3
  00048	5f		 pop	 edi
$LN1@erase@3:

; 1389 : 			return (iterator(_First._Ptr, this));

  00049	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0004c	89 08		 mov	 DWORD PTR [eax], ecx
  0004e	5e		 pop	 esi

; 1390 : 			}
; 1391 : 		}

  0004f	c9		 leave
  00050	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Tidy
; Function compile flags: /Ogsp
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T542838 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1865 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1866 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 10		 mov	 edx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T542838[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::erase

; 1867 : 		}

  00014	c9		 leave
  00015	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T543023 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >, COMDAT
; _this$ = ecx

; 790  : 		{	// destroy tree

  00000	6a 08		 push	 8
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 791  : 		_Tidy();

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0001a	50		 push	 eax
  0001b	51		 push	 ecx
  0001c	8d 45 ec	 lea	 eax, DWORD PTR $T543023[ebp]
  0001f	50		 push	 eax
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::erase

; 792  : 		}

  00027	ff 76 04	 push	 DWORD PTR [esi+4]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	e8 00 00 00 00	 call	 __EH_epilog3
  00035	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >
__ehhandler$??1?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >
PUBLIC	??1?$map@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@@std@@QAE@XZ ; std::map<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> > >::~map<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> > >
; Function compile flags: /Ogsp
;	COMDAT ??1?$map@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@@std@@QAE@XZ PROC ; std::map<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> > >::~map<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> > >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >
??1?$map@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@@std@@QAE@XZ ENDP ; std::map<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> > >::~map<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> > >
_TEXT	ENDS
PUBLIC	??_7ioJumpController@@6B@			; ioJumpController::`vftable'
PUBLIC	??1ioJumpController@@UAE@XZ			; ioJumpController::~ioJumpController
PUBLIC	??_R4ioJumpController@@6B@			; ioJumpController::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioJumpController@@@8			; ioJumpController `RTTI Type Descriptor'
PUBLIC	??_R3ioJumpController@@8			; ioJumpController::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioJumpController@@8			; ioJumpController::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioJumpController@@8		; ioJumpController::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_EioJumpController@@UAEPAXI@Z:PROC		; ioJumpController::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@ioJumpController@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iojumpcontroller.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@ioJumpController@@8 DD FLAT:??_R0?AVioJumpController@@@8 ; ioJumpController::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioJumpController@@8
rdata$r	ENDS
;	COMDAT ??_R2ioJumpController@@8
rdata$r	SEGMENT
??_R2ioJumpController@@8 DD FLAT:??_R1A@?0A@EA@ioJumpController@@8 ; ioJumpController::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioJumpController@@8
rdata$r	SEGMENT
??_R3ioJumpController@@8 DD 00H				; ioJumpController::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioJumpController@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioJumpController@@@8
_DATA	SEGMENT
??_R0?AVioJumpController@@@8 DD FLAT:??_7type_info@@6B@	; ioJumpController `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioJumpController@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioJumpController@@6B@
rdata$r	SEGMENT
??_R4ioJumpController@@6B@ DD 00H			; ioJumpController::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioJumpController@@@8
	DD	FLAT:??_R3ioJumpController@@8
rdata$r	ENDS
;	COMDAT ??_7ioJumpController@@6B@
CONST	SEGMENT
??_7ioJumpController@@6B@ DD FLAT:??_R4ioJumpController@@6B@ ; ioJumpController::`vftable'
	DD	FLAT:??_EioJumpController@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ioJumpController@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioJumpController@@UAE@XZ$0
__ehfuncinfo$??1ioJumpController@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ioJumpController@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1ioJumpController@@UAE@XZ
_TEXT	SEGMENT
$T543356 = -24						; size = 4
$T543277 = -24						; size = 4
_this$ = -20						; size = 4
_iCreate$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioJumpController@@UAE@XZ PROC			; ioJumpController::~ioJumpController, COMDAT
; _this$ = ecx

; 15   : {

  00000	6a 0c		 push	 12			; 0000000cH
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioJumpController@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioJumpController@@6B@

; 16   : 	JumpMap::iterator iCreate;
; 17   : 	for( iCreate = m_JumpMap.begin() ; iCreate != m_JumpMap.end() ; ++iCreate )

  00017	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00020	89 4d f0	 mov	 DWORD PTR _iCreate$[ebp], ecx
  00023	3b c8		 cmp	 ecx, eax
  00025	74 26		 je	 SHORT $LN1@ioJumpCont
$LL30@ioJumpCont:

; 18   : 	{
; 19   : 		JumpList &kList = iCreate->second;

  00027	8b 4d f0	 mov	 ecx, DWORD PTR _iCreate$[ebp]

; 20   : 		kList.m_Jump.clear();

  0002a	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  0002d	83 c1 10	 add	 ecx, 16			; 00000010H
  00030	8b 11		 mov	 edx, DWORD PTR [ecx]
  00032	50		 push	 eax
  00033	52		 push	 edx
  00034	8d 45 e8	 lea	 eax, DWORD PTR $T543277[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?erase@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@0@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::erase
  0003d	8d 4d f0	 lea	 ecx, DWORD PTR _iCreate$[ebp]
  00040	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >,std::_Iterator_base0>::operator++
  00045	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00048	39 45 f0	 cmp	 DWORD PTR _iCreate$[ebp], eax
  0004b	75 da		 jne	 SHORT $LL30@ioJumpCont
$LN1@ioJumpCont:

; 21   : 	}
; 22   : 	m_CurJump.m_Jump.clear();

  0004d	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00050	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00053	50		 push	 eax
  00054	51		 push	 ecx
  00055	8d 45 e8	 lea	 eax, DWORD PTR $T543356[ebp]
  00058	50		 push	 eax
  00059	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  0005c	e8 00 00 00 00	 call	 ?erase@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@@2@0@Z ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::erase

; 23   : }

  00061	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00064	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UJumpData@ioJumpController@@V?$allocator@UJumpData@ioJumpController@@@std@@@std@@IAEXXZ ; std::vector<ioJumpController::JumpData,std::allocator<ioJumpController::JumpData> >::_Tidy
  00069	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0006d	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00070	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >
  00075	e8 00 00 00 00	 call	 __EH_epilog3
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioJumpController@@UAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$map@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@@std@@QAE@XZ
__ehhandler$??1ioJumpController@@UAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioJumpController@@UAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioJumpController@@UAE@XZ ENDP			; ioJumpController::~ioJumpController
PUBLIC	??0?$map@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@@std@@QAE@XZ ; std::map<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> > >::map<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> > >
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$map@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
$T543418 = -8						; size = 4
$T543421 = -8						; size = 4
$T543407 = -1						; size = 1
??0?$map@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@@std@@QAE@XZ PROC ; std::map<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> > >::map<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> > >, COMDAT
; _this$ = ecx

; 106  : 		{	// construct empty map from defaults

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	51		 push	 ecx
  00007	89 65 f8	 mov	 DWORD PTR $T543421[ebp], esp
  0000a	8d 45 ff	 lea	 eax, DWORD PTR $T543407[ebp]
  0000d	89 65 f8	 mov	 DWORD PTR $T543418[ebp], esp
  00010	50		 push	 eax
  00011	8b f1		 mov	 esi, ecx
  00013	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >

; 107  : 		}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c9		 leave
  0001c	c3		 ret	 0
??0?$map@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@@std@@QAE@XZ ENDP ; std::map<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> > >::map<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> > >
_TEXT	ENDS
PUBLIC	??0ioJumpController@@QAE@XZ			; ioJumpController::ioJumpController
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iojumpcontroller.cpp
;	COMDAT ??0ioJumpController@@QAE@XZ
_TEXT	SEGMENT
$T543441 = -8						; size = 4
$T543455 = -8						; size = 4
$T543450 = -1						; size = 1
??0ioJumpController@@QAE@XZ PROC			; ioJumpController::ioJumpController, COMDAT
; _this$ = ecx

; 10   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0000b	51		 push	 ecx
  0000c	89 65 f8	 mov	 DWORD PTR $T543455[ebp], esp
  0000f	8d 45 ff	 lea	 eax, DWORD PTR $T543450[ebp]
  00012	89 65 f8	 mov	 DWORD PTR $T543441[ebp], esp
  00015	50		 push	 eax
  00016	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioJumpController@@6B@
  0001c	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@KUJumpList@ioJumpController@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKUJumpList@ioJumpController@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,ioJumpController::JumpList,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ioJumpController::JumpList> >,0> >
  00021	0f 57 c0	 xorps	 xmm0, xmm0
  00024	33 c0		 xor	 eax, eax
  00026	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00029	89 46 18	 mov	 DWORD PTR [esi+24], eax
  0002c	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  0002f	f3 0f 11 46 24	 movss	 DWORD PTR [esi+36], xmm0

; 11   : 	m_dwCurrentTime = 0;

  00034	89 46 28	 mov	 DWORD PTR [esi+40], eax

; 12   : }

  00037	8b c6		 mov	 eax, esi
  00039	5e		 pop	 esi
  0003a	c9		 leave
  0003b	c3		 ret	 0
??0ioJumpController@@QAE@XZ ENDP			; ioJumpController::ioJumpController
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ??_GioJumpController@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioJumpController@@UAEPAXI@Z PROC			; ioJumpController::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioJumpController@@UAE@XZ ; ioJumpController::~ioJumpController
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar@3
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar@3:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioJumpController@@UAEPAXI@Z ENDP			; ioJumpController::`scalar deleting destructor'
_TEXT	ENDS
END
