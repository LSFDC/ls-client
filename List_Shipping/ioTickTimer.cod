; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioTickTimer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_7ioTickTimer@@6B@				; ioTickTimer::`vftable'
PUBLIC	??0ioTickTimer@@QAE@XZ				; ioTickTimer::ioTickTimer
PUBLIC	??_R4ioTickTimer@@6B@				; ioTickTimer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioTickTimer@@@8				; ioTickTimer `RTTI Type Descriptor'
PUBLIC	??_R3ioTickTimer@@8				; ioTickTimer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioTickTimer@@8				; ioTickTimer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioTickTimer@@8			; ioTickTimer::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__fltused:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_EioTickTimer@@UAEPAXI@Z:PROC			; ioTickTimer::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@ioTickTimer@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioticktimer.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@ioTickTimer@@8 DD FLAT:??_R0?AVioTickTimer@@@8 ; ioTickTimer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioTickTimer@@8
rdata$r	ENDS
;	COMDAT ??_R2ioTickTimer@@8
rdata$r	SEGMENT
??_R2ioTickTimer@@8 DD FLAT:??_R1A@?0A@EA@ioTickTimer@@8 ; ioTickTimer::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioTickTimer@@8
rdata$r	SEGMENT
??_R3ioTickTimer@@8 DD 00H				; ioTickTimer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioTickTimer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioTickTimer@@@8
_DATA	SEGMENT
??_R0?AVioTickTimer@@@8 DD FLAT:??_7type_info@@6B@	; ioTickTimer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioTickTimer@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioTickTimer@@6B@
rdata$r	SEGMENT
??_R4ioTickTimer@@6B@ DD 00H				; ioTickTimer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioTickTimer@@@8
	DD	FLAT:??_R3ioTickTimer@@8
rdata$r	ENDS
;	COMDAT ??_7ioTickTimer@@6B@
CONST	SEGMENT
??_7ioTickTimer@@6B@ DD FLAT:??_R4ioTickTimer@@6B@	; ioTickTimer::`vftable'
	DD	FLAT:??_EioTickTimer@@UAEPAXI@Z
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ??0ioTickTimer@@QAE@XZ
_TEXT	SEGMENT
??0ioTickTimer@@QAE@XZ PROC				; ioTickTimer::ioTickTimer, COMDAT
; _this$ = ecx

; 9    : 	m_dwPreTick = 0;
; 10   : 	m_dwTickGap = 0;
; 11   : 
; 12   : 	m_dwStartFPSTick = 0;
; 13   : 	m_iFrameCnt = 0;
; 14   : 	m_fFPS = 0.0f;

  00000	0f 57 c0	 xorps	 xmm0, xmm0
  00003	8b c1		 mov	 eax, ecx
  00005	33 c9		 xor	 ecx, ecx
  00007	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ioTickTimer@@6B@
  0000d	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  00016	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00019	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 15   : }

  0001e	c3		 ret	 0
??0ioTickTimer@@QAE@XZ ENDP				; ioTickTimer::ioTickTimer
_TEXT	ENDS
PUBLIC	??1ioTickTimer@@UAE@XZ				; ioTickTimer::~ioTickTimer
; Function compile flags: /Ogsp
;	COMDAT ??1ioTickTimer@@UAE@XZ
_TEXT	SEGMENT
??1ioTickTimer@@UAE@XZ PROC				; ioTickTimer::~ioTickTimer, COMDAT
; _this$ = ecx

; 18   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ioTickTimer@@6B@

; 19   : }

  00006	c3		 ret	 0
??1ioTickTimer@@UAE@XZ ENDP				; ioTickTimer::~ioTickTimer
_TEXT	ENDS
PUBLIC	?return1000@@YAIXZ				; return1000
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
;	COMDAT ?return1000@@YAIXZ
_TEXT	SEGMENT
?return1000@@YAIXZ PROC					; return1000, COMDAT

; 29   : 	__forceinline unsigned int return1000() { __asm mov eax, 1000 };

  00000	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  00005	c3		 ret	 0
?return1000@@YAIXZ ENDP					; return1000
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GioTickTimer@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioTickTimer@@UAEPAXI@Z PROC				; ioTickTimer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioTickTimer@@6B@
  00010	74 07		 je	 SHORT $LN1@scalar
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	59		 pop	 ecx
$LN1@scalar:
  00019	8b c6		 mov	 eax, esi
  0001b	5e		 pop	 esi
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??_GioTickTimer@@UAEPAXI@Z ENDP				; ioTickTimer::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__real@4f800000
PUBLIC	?UpdateTick@ioTickTimer@@QAEXXZ			; ioTickTimer::UpdateTick
EXTRN	__imp__timeGetTime@0:PROC
;	COMDAT __real@4f800000
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioticktimer.cpp
CONST	ENDS
;	COMDAT ?UpdateTick@ioTickTimer@@QAEXXZ
_TEXT	SEGMENT
tv184 = -4						; size = 4
tv178 = -4						; size = 4
?UpdateTick@ioTickTimer@@QAEXXZ PROC			; ioTickTimer::UpdateTick, COMDAT
; _this$ = ecx

; 22   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 23   : 	DWORD dwCurTick = timeGetTime();

  00007	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0
  0000d	8b c8		 mov	 ecx, eax

; 24   : 
; 25   : 	if( m_dwPreTick > 0 )

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	85 c0		 test	 eax, eax
  00014	74 4d		 je	 SHORT $LN1@UpdateTick

; 26   : 	{
; 27   : 		m_dwTickGap = dwCurTick - m_dwPreTick;

  00016	8b d1		 mov	 edx, ecx
  00018	2b d0		 sub	 edx, eax

; 28   : 
; 29   : 		if( dwCurTick - m_dwStartFPSTick > 1000 )

  0001a	8b c1		 mov	 eax, ecx
  0001c	2b 46 0c	 sub	 eax, DWORD PTR [esi+12]
  0001f	89 56 08	 mov	 DWORD PTR [esi+8], edx
  00022	3d e8 03 00 00	 cmp	 eax, 1000		; 000003e8H
  00027	76 3a		 jbe	 SHORT $LN1@UpdateTick

; 30   : 		{
; 31   : 			m_fFPS = (float)m_iFrameCnt / (float)( dwCurTick - m_dwStartFPSTick );

  00029	db 46 10	 fild	 DWORD PTR [esi+16]
  0002c	89 45 fc	 mov	 DWORD PTR tv184[ebp], eax
  0002f	db 45 fc	 fild	 DWORD PTR tv184[ebp]
  00032	85 c0		 test	 eax, eax
  00034	79 06		 jns	 SHORT $LN7@UpdateTick
  00036	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN7@UpdateTick:
  0003c	de f9		 fdivp	 ST(1), ST(0)
  0003e	d9 5e 14	 fstp	 DWORD PTR [esi+20]

; 32   : 			m_fFPS *= FLOAT1000;

  00041	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  00046	89 45 fc	 mov	 DWORD PTR tv178[ebp], eax
  00049	db 45 fc	 fild	 DWORD PTR tv178[ebp]
  0004c	85 c0		 test	 eax, eax
  0004e	79 06		 jns	 SHORT $LN8@UpdateTick
  00050	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN8@UpdateTick:
  00056	d8 4e 14	 fmul	 DWORD PTR [esi+20]

; 33   : 			
; 34   : 			m_dwStartFPSTick = dwCurTick;
; 35   : 			m_iFrameCnt = 0;

  00059	83 66 10 00	 and	 DWORD PTR [esi+16], 0
  0005d	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00060	d9 5e 14	 fstp	 DWORD PTR [esi+20]
$LN1@UpdateTick:

; 36   : 		}
; 37   : 	}
; 38   : 
; 39   : 	m_iFrameCnt++;

  00063	ff 46 10	 inc	 DWORD PTR [esi+16]

; 40   : 	m_dwPreTick = dwCurTick;		 

  00066	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  00069	5e		 pop	 esi

; 41   : }

  0006a	c9		 leave
  0006b	c3		 ret	 0
?UpdateTick@ioTickTimer@@QAEXXZ ENDP			; ioTickTimer::UpdateTick
_TEXT	ENDS
END
